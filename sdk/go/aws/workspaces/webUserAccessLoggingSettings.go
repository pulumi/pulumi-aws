// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspaces

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS WorkSpaces Web User Access Logging Settings resource. Once associated with a web portal, user access logging settings control how user access events are logged to Amazon Kinesis.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/kinesis"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/workspacesweb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := kinesis.NewStream(ctx, "example", &kinesis.StreamArgs{
//				Name:       pulumi.String("amazon-workspaces-web-example-stream"),
//				ShardCount: pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = workspacesweb.NewUserAccessLoggingSettings(ctx, "example", &workspacesweb.UserAccessLoggingSettingsArgs{
//				KinesisStreamArn: example.Arn,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### With Tags
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/kinesis"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/workspacesweb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := kinesis.NewStream(ctx, "example", &kinesis.StreamArgs{
//				Name:       pulumi.String("example-stream"),
//				ShardCount: pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = workspacesweb.NewUserAccessLoggingSettings(ctx, "example", &workspacesweb.UserAccessLoggingSettingsArgs{
//				KinesisStreamArn: example.Arn,
//				Tags: pulumi.StringMap{
//					"Name":        pulumi.String("example-user-access-logging-settings"),
//					"Environment": pulumi.String("Production"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import WorkSpaces Web User Access Logging Settings using the `user_access_logging_settings_arn`. For example:
//
// ```sh
// $ pulumi import aws:workspaces/webUserAccessLoggingSettings:WebUserAccessLoggingSettings example arn:aws:workspaces-web:us-west-2:123456789012:userAccessLoggingSettings/abcdef12345
// ```
//
// Deprecated: aws.workspaces/webuseraccessloggingsettings.WebUserAccessLoggingSettings has been deprecated in favor of aws.workspacesweb/useraccessloggingsettings.UserAccessLoggingSettings
type WebUserAccessLoggingSettings struct {
	pulumi.CustomResourceState

	// List of web portal ARNs that this user access logging settings resource is associated with.
	AssociatedPortalArns pulumi.StringArrayOutput `pulumi:"associatedPortalArns"`
	// ARN of the Kinesis stream.
	//
	// The following arguments are optional:
	KinesisStreamArn pulumi.StringOutput `pulumi:"kinesisStreamArn"`
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// ARN of the user access logging settings resource.
	UserAccessLoggingSettingsArn pulumi.StringOutput `pulumi:"userAccessLoggingSettingsArn"`
}

// NewWebUserAccessLoggingSettings registers a new resource with the given unique name, arguments, and options.
func NewWebUserAccessLoggingSettings(ctx *pulumi.Context,
	name string, args *WebUserAccessLoggingSettingsArgs, opts ...pulumi.ResourceOption) (*WebUserAccessLoggingSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KinesisStreamArn == nil {
		return nil, errors.New("invalid value for required argument 'KinesisStreamArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebUserAccessLoggingSettings
	err := ctx.RegisterResource("aws:workspaces/webUserAccessLoggingSettings:WebUserAccessLoggingSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebUserAccessLoggingSettings gets an existing WebUserAccessLoggingSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebUserAccessLoggingSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebUserAccessLoggingSettingsState, opts ...pulumi.ResourceOption) (*WebUserAccessLoggingSettings, error) {
	var resource WebUserAccessLoggingSettings
	err := ctx.ReadResource("aws:workspaces/webUserAccessLoggingSettings:WebUserAccessLoggingSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebUserAccessLoggingSettings resources.
type webUserAccessLoggingSettingsState struct {
	// List of web portal ARNs that this user access logging settings resource is associated with.
	AssociatedPortalArns []string `pulumi:"associatedPortalArns"`
	// ARN of the Kinesis stream.
	//
	// The following arguments are optional:
	KinesisStreamArn *string `pulumi:"kinesisStreamArn"`
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// ARN of the user access logging settings resource.
	UserAccessLoggingSettingsArn *string `pulumi:"userAccessLoggingSettingsArn"`
}

type WebUserAccessLoggingSettingsState struct {
	// List of web portal ARNs that this user access logging settings resource is associated with.
	AssociatedPortalArns pulumi.StringArrayInput
	// ARN of the Kinesis stream.
	//
	// The following arguments are optional:
	KinesisStreamArn pulumi.StringPtrInput
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	// ARN of the user access logging settings resource.
	UserAccessLoggingSettingsArn pulumi.StringPtrInput
}

func (WebUserAccessLoggingSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*webUserAccessLoggingSettingsState)(nil)).Elem()
}

type webUserAccessLoggingSettingsArgs struct {
	// ARN of the Kinesis stream.
	//
	// The following arguments are optional:
	KinesisStreamArn string `pulumi:"kinesisStreamArn"`
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a WebUserAccessLoggingSettings resource.
type WebUserAccessLoggingSettingsArgs struct {
	// ARN of the Kinesis stream.
	//
	// The following arguments are optional:
	KinesisStreamArn pulumi.StringInput
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (WebUserAccessLoggingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webUserAccessLoggingSettingsArgs)(nil)).Elem()
}

type WebUserAccessLoggingSettingsInput interface {
	pulumi.Input

	ToWebUserAccessLoggingSettingsOutput() WebUserAccessLoggingSettingsOutput
	ToWebUserAccessLoggingSettingsOutputWithContext(ctx context.Context) WebUserAccessLoggingSettingsOutput
}

func (*WebUserAccessLoggingSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**WebUserAccessLoggingSettings)(nil)).Elem()
}

func (i *WebUserAccessLoggingSettings) ToWebUserAccessLoggingSettingsOutput() WebUserAccessLoggingSettingsOutput {
	return i.ToWebUserAccessLoggingSettingsOutputWithContext(context.Background())
}

func (i *WebUserAccessLoggingSettings) ToWebUserAccessLoggingSettingsOutputWithContext(ctx context.Context) WebUserAccessLoggingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebUserAccessLoggingSettingsOutput)
}

// WebUserAccessLoggingSettingsArrayInput is an input type that accepts WebUserAccessLoggingSettingsArray and WebUserAccessLoggingSettingsArrayOutput values.
// You can construct a concrete instance of `WebUserAccessLoggingSettingsArrayInput` via:
//
//	WebUserAccessLoggingSettingsArray{ WebUserAccessLoggingSettingsArgs{...} }
type WebUserAccessLoggingSettingsArrayInput interface {
	pulumi.Input

	ToWebUserAccessLoggingSettingsArrayOutput() WebUserAccessLoggingSettingsArrayOutput
	ToWebUserAccessLoggingSettingsArrayOutputWithContext(context.Context) WebUserAccessLoggingSettingsArrayOutput
}

type WebUserAccessLoggingSettingsArray []WebUserAccessLoggingSettingsInput

func (WebUserAccessLoggingSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebUserAccessLoggingSettings)(nil)).Elem()
}

func (i WebUserAccessLoggingSettingsArray) ToWebUserAccessLoggingSettingsArrayOutput() WebUserAccessLoggingSettingsArrayOutput {
	return i.ToWebUserAccessLoggingSettingsArrayOutputWithContext(context.Background())
}

func (i WebUserAccessLoggingSettingsArray) ToWebUserAccessLoggingSettingsArrayOutputWithContext(ctx context.Context) WebUserAccessLoggingSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebUserAccessLoggingSettingsArrayOutput)
}

// WebUserAccessLoggingSettingsMapInput is an input type that accepts WebUserAccessLoggingSettingsMap and WebUserAccessLoggingSettingsMapOutput values.
// You can construct a concrete instance of `WebUserAccessLoggingSettingsMapInput` via:
//
//	WebUserAccessLoggingSettingsMap{ "key": WebUserAccessLoggingSettingsArgs{...} }
type WebUserAccessLoggingSettingsMapInput interface {
	pulumi.Input

	ToWebUserAccessLoggingSettingsMapOutput() WebUserAccessLoggingSettingsMapOutput
	ToWebUserAccessLoggingSettingsMapOutputWithContext(context.Context) WebUserAccessLoggingSettingsMapOutput
}

type WebUserAccessLoggingSettingsMap map[string]WebUserAccessLoggingSettingsInput

func (WebUserAccessLoggingSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebUserAccessLoggingSettings)(nil)).Elem()
}

func (i WebUserAccessLoggingSettingsMap) ToWebUserAccessLoggingSettingsMapOutput() WebUserAccessLoggingSettingsMapOutput {
	return i.ToWebUserAccessLoggingSettingsMapOutputWithContext(context.Background())
}

func (i WebUserAccessLoggingSettingsMap) ToWebUserAccessLoggingSettingsMapOutputWithContext(ctx context.Context) WebUserAccessLoggingSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebUserAccessLoggingSettingsMapOutput)
}

type WebUserAccessLoggingSettingsOutput struct{ *pulumi.OutputState }

func (WebUserAccessLoggingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebUserAccessLoggingSettings)(nil)).Elem()
}

func (o WebUserAccessLoggingSettingsOutput) ToWebUserAccessLoggingSettingsOutput() WebUserAccessLoggingSettingsOutput {
	return o
}

func (o WebUserAccessLoggingSettingsOutput) ToWebUserAccessLoggingSettingsOutputWithContext(ctx context.Context) WebUserAccessLoggingSettingsOutput {
	return o
}

// List of web portal ARNs that this user access logging settings resource is associated with.
func (o WebUserAccessLoggingSettingsOutput) AssociatedPortalArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebUserAccessLoggingSettings) pulumi.StringArrayOutput { return v.AssociatedPortalArns }).(pulumi.StringArrayOutput)
}

// ARN of the Kinesis stream.
//
// The following arguments are optional:
func (o WebUserAccessLoggingSettingsOutput) KinesisStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v *WebUserAccessLoggingSettings) pulumi.StringOutput { return v.KinesisStreamArn }).(pulumi.StringOutput)
}

// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o WebUserAccessLoggingSettingsOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WebUserAccessLoggingSettings) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o WebUserAccessLoggingSettingsOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WebUserAccessLoggingSettings) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// ARN of the user access logging settings resource.
func (o WebUserAccessLoggingSettingsOutput) UserAccessLoggingSettingsArn() pulumi.StringOutput {
	return o.ApplyT(func(v *WebUserAccessLoggingSettings) pulumi.StringOutput { return v.UserAccessLoggingSettingsArn }).(pulumi.StringOutput)
}

type WebUserAccessLoggingSettingsArrayOutput struct{ *pulumi.OutputState }

func (WebUserAccessLoggingSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebUserAccessLoggingSettings)(nil)).Elem()
}

func (o WebUserAccessLoggingSettingsArrayOutput) ToWebUserAccessLoggingSettingsArrayOutput() WebUserAccessLoggingSettingsArrayOutput {
	return o
}

func (o WebUserAccessLoggingSettingsArrayOutput) ToWebUserAccessLoggingSettingsArrayOutputWithContext(ctx context.Context) WebUserAccessLoggingSettingsArrayOutput {
	return o
}

func (o WebUserAccessLoggingSettingsArrayOutput) Index(i pulumi.IntInput) WebUserAccessLoggingSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebUserAccessLoggingSettings {
		return vs[0].([]*WebUserAccessLoggingSettings)[vs[1].(int)]
	}).(WebUserAccessLoggingSettingsOutput)
}

type WebUserAccessLoggingSettingsMapOutput struct{ *pulumi.OutputState }

func (WebUserAccessLoggingSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebUserAccessLoggingSettings)(nil)).Elem()
}

func (o WebUserAccessLoggingSettingsMapOutput) ToWebUserAccessLoggingSettingsMapOutput() WebUserAccessLoggingSettingsMapOutput {
	return o
}

func (o WebUserAccessLoggingSettingsMapOutput) ToWebUserAccessLoggingSettingsMapOutputWithContext(ctx context.Context) WebUserAccessLoggingSettingsMapOutput {
	return o
}

func (o WebUserAccessLoggingSettingsMapOutput) MapIndex(k pulumi.StringInput) WebUserAccessLoggingSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebUserAccessLoggingSettings {
		return vs[0].(map[string]*WebUserAccessLoggingSettings)[vs[1].(string)]
	}).(WebUserAccessLoggingSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebUserAccessLoggingSettingsInput)(nil)).Elem(), &WebUserAccessLoggingSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebUserAccessLoggingSettingsArrayInput)(nil)).Elem(), WebUserAccessLoggingSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebUserAccessLoggingSettingsMapInput)(nil)).Elem(), WebUserAccessLoggingSettingsMap{})
	pulumi.RegisterOutputType(WebUserAccessLoggingSettingsOutput{})
	pulumi.RegisterOutputType(WebUserAccessLoggingSettingsArrayOutput{})
	pulumi.RegisterOutputType(WebUserAccessLoggingSettingsMapOutput{})
}
