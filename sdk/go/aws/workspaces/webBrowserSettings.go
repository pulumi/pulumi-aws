// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspaces

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS WorkSpaces Web Browser Settings resource.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/workspaces"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"AdditionalSettings": map[string]interface{}{
//					"DownloadsSettings": map[string]interface{}{
//						"Behavior": "DISABLE",
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = workspaces.NewWebBrowserSettings(ctx, "example", &workspaces.WebBrowserSettingsArgs{
//				BrowserPolicy: pulumi.String(json0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### With All Arguments
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/kms"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/workspaces"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := kms.NewKey(ctx, "example", &kms.KeyArgs{
//				Description:          pulumi.String("KMS key for WorkSpaces Web Browser Settings"),
//				DeletionWindowInDays: pulumi.Int(7),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"chromePolicies": map[string]interface{}{
//					"DefaultDownloadDirectory": map[string]interface{}{
//						"value": "/home/as2-streaming-user/MyFiles/TemporaryFiles1",
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = workspaces.NewWebBrowserSettings(ctx, "example", &workspaces.WebBrowserSettingsArgs{
//				BrowserPolicy:      pulumi.String(json0),
//				CustomerManagedKey: example.Arn,
//				AdditionalEncryptionContext: pulumi.StringMap{
//					"Environment": pulumi.String("Production"),
//				},
//				Tags: pulumi.StringMap{
//					"Name": pulumi.String("example-browser-settings"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import WorkSpaces Web Browser Settings using the `browser_settings_arn`. For example:
//
// ```sh
// $ pulumi import aws:workspaces/webBrowserSettings:WebBrowserSettings example arn:aws:workspacesweb:us-west-2:123456789012:browsersettings/abcdef12345
// ```
type WebBrowserSettings struct {
	pulumi.CustomResourceState

	// Additional encryption context for the browser settings.
	AdditionalEncryptionContext pulumi.StringMapOutput `pulumi:"additionalEncryptionContext"`
	// List of web portal ARNs to associate with the browser settings.
	AssociatedPortalArns pulumi.StringArrayOutput `pulumi:"associatedPortalArns"`
	// Browser policy for the browser settings. This is a JSON string that defines the browser settings policy.
	//
	// The following arguments are optional:
	BrowserPolicy pulumi.StringOutput `pulumi:"browserPolicy"`
	// ARN of the browser settings resource.
	BrowserSettingsArn pulumi.StringOutput `pulumi:"browserSettingsArn"`
	// ARN of the customer managed KMS key.
	CustomerManagedKey pulumi.StringPtrOutput `pulumi:"customerManagedKey"`
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewWebBrowserSettings registers a new resource with the given unique name, arguments, and options.
func NewWebBrowserSettings(ctx *pulumi.Context,
	name string, args *WebBrowserSettingsArgs, opts ...pulumi.ResourceOption) (*WebBrowserSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BrowserPolicy == nil {
		return nil, errors.New("invalid value for required argument 'BrowserPolicy'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebBrowserSettings
	err := ctx.RegisterResource("aws:workspaces/webBrowserSettings:WebBrowserSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebBrowserSettings gets an existing WebBrowserSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebBrowserSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebBrowserSettingsState, opts ...pulumi.ResourceOption) (*WebBrowserSettings, error) {
	var resource WebBrowserSettings
	err := ctx.ReadResource("aws:workspaces/webBrowserSettings:WebBrowserSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebBrowserSettings resources.
type webBrowserSettingsState struct {
	// Additional encryption context for the browser settings.
	AdditionalEncryptionContext map[string]string `pulumi:"additionalEncryptionContext"`
	// List of web portal ARNs to associate with the browser settings.
	AssociatedPortalArns []string `pulumi:"associatedPortalArns"`
	// Browser policy for the browser settings. This is a JSON string that defines the browser settings policy.
	//
	// The following arguments are optional:
	BrowserPolicy *string `pulumi:"browserPolicy"`
	// ARN of the browser settings resource.
	BrowserSettingsArn *string `pulumi:"browserSettingsArn"`
	// ARN of the customer managed KMS key.
	CustomerManagedKey *string `pulumi:"customerManagedKey"`
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type WebBrowserSettingsState struct {
	// Additional encryption context for the browser settings.
	AdditionalEncryptionContext pulumi.StringMapInput
	// List of web portal ARNs to associate with the browser settings.
	AssociatedPortalArns pulumi.StringArrayInput
	// Browser policy for the browser settings. This is a JSON string that defines the browser settings policy.
	//
	// The following arguments are optional:
	BrowserPolicy pulumi.StringPtrInput
	// ARN of the browser settings resource.
	BrowserSettingsArn pulumi.StringPtrInput
	// ARN of the customer managed KMS key.
	CustomerManagedKey pulumi.StringPtrInput
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
}

func (WebBrowserSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*webBrowserSettingsState)(nil)).Elem()
}

type webBrowserSettingsArgs struct {
	// Additional encryption context for the browser settings.
	AdditionalEncryptionContext map[string]string `pulumi:"additionalEncryptionContext"`
	// Browser policy for the browser settings. This is a JSON string that defines the browser settings policy.
	//
	// The following arguments are optional:
	BrowserPolicy string `pulumi:"browserPolicy"`
	// ARN of the customer managed KMS key.
	CustomerManagedKey *string `pulumi:"customerManagedKey"`
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a WebBrowserSettings resource.
type WebBrowserSettingsArgs struct {
	// Additional encryption context for the browser settings.
	AdditionalEncryptionContext pulumi.StringMapInput
	// Browser policy for the browser settings. This is a JSON string that defines the browser settings policy.
	//
	// The following arguments are optional:
	BrowserPolicy pulumi.StringInput
	// ARN of the customer managed KMS key.
	CustomerManagedKey pulumi.StringPtrInput
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (WebBrowserSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webBrowserSettingsArgs)(nil)).Elem()
}

type WebBrowserSettingsInput interface {
	pulumi.Input

	ToWebBrowserSettingsOutput() WebBrowserSettingsOutput
	ToWebBrowserSettingsOutputWithContext(ctx context.Context) WebBrowserSettingsOutput
}

func (*WebBrowserSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**WebBrowserSettings)(nil)).Elem()
}

func (i *WebBrowserSettings) ToWebBrowserSettingsOutput() WebBrowserSettingsOutput {
	return i.ToWebBrowserSettingsOutputWithContext(context.Background())
}

func (i *WebBrowserSettings) ToWebBrowserSettingsOutputWithContext(ctx context.Context) WebBrowserSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebBrowserSettingsOutput)
}

// WebBrowserSettingsArrayInput is an input type that accepts WebBrowserSettingsArray and WebBrowserSettingsArrayOutput values.
// You can construct a concrete instance of `WebBrowserSettingsArrayInput` via:
//
//	WebBrowserSettingsArray{ WebBrowserSettingsArgs{...} }
type WebBrowserSettingsArrayInput interface {
	pulumi.Input

	ToWebBrowserSettingsArrayOutput() WebBrowserSettingsArrayOutput
	ToWebBrowserSettingsArrayOutputWithContext(context.Context) WebBrowserSettingsArrayOutput
}

type WebBrowserSettingsArray []WebBrowserSettingsInput

func (WebBrowserSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebBrowserSettings)(nil)).Elem()
}

func (i WebBrowserSettingsArray) ToWebBrowserSettingsArrayOutput() WebBrowserSettingsArrayOutput {
	return i.ToWebBrowserSettingsArrayOutputWithContext(context.Background())
}

func (i WebBrowserSettingsArray) ToWebBrowserSettingsArrayOutputWithContext(ctx context.Context) WebBrowserSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebBrowserSettingsArrayOutput)
}

// WebBrowserSettingsMapInput is an input type that accepts WebBrowserSettingsMap and WebBrowserSettingsMapOutput values.
// You can construct a concrete instance of `WebBrowserSettingsMapInput` via:
//
//	WebBrowserSettingsMap{ "key": WebBrowserSettingsArgs{...} }
type WebBrowserSettingsMapInput interface {
	pulumi.Input

	ToWebBrowserSettingsMapOutput() WebBrowserSettingsMapOutput
	ToWebBrowserSettingsMapOutputWithContext(context.Context) WebBrowserSettingsMapOutput
}

type WebBrowserSettingsMap map[string]WebBrowserSettingsInput

func (WebBrowserSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebBrowserSettings)(nil)).Elem()
}

func (i WebBrowserSettingsMap) ToWebBrowserSettingsMapOutput() WebBrowserSettingsMapOutput {
	return i.ToWebBrowserSettingsMapOutputWithContext(context.Background())
}

func (i WebBrowserSettingsMap) ToWebBrowserSettingsMapOutputWithContext(ctx context.Context) WebBrowserSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebBrowserSettingsMapOutput)
}

type WebBrowserSettingsOutput struct{ *pulumi.OutputState }

func (WebBrowserSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebBrowserSettings)(nil)).Elem()
}

func (o WebBrowserSettingsOutput) ToWebBrowserSettingsOutput() WebBrowserSettingsOutput {
	return o
}

func (o WebBrowserSettingsOutput) ToWebBrowserSettingsOutputWithContext(ctx context.Context) WebBrowserSettingsOutput {
	return o
}

// Additional encryption context for the browser settings.
func (o WebBrowserSettingsOutput) AdditionalEncryptionContext() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WebBrowserSettings) pulumi.StringMapOutput { return v.AdditionalEncryptionContext }).(pulumi.StringMapOutput)
}

// List of web portal ARNs to associate with the browser settings.
func (o WebBrowserSettingsOutput) AssociatedPortalArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebBrowserSettings) pulumi.StringArrayOutput { return v.AssociatedPortalArns }).(pulumi.StringArrayOutput)
}

// Browser policy for the browser settings. This is a JSON string that defines the browser settings policy.
//
// The following arguments are optional:
func (o WebBrowserSettingsOutput) BrowserPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *WebBrowserSettings) pulumi.StringOutput { return v.BrowserPolicy }).(pulumi.StringOutput)
}

// ARN of the browser settings resource.
func (o WebBrowserSettingsOutput) BrowserSettingsArn() pulumi.StringOutput {
	return o.ApplyT(func(v *WebBrowserSettings) pulumi.StringOutput { return v.BrowserSettingsArn }).(pulumi.StringOutput)
}

// ARN of the customer managed KMS key.
func (o WebBrowserSettingsOutput) CustomerManagedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebBrowserSettings) pulumi.StringPtrOutput { return v.CustomerManagedKey }).(pulumi.StringPtrOutput)
}

// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o WebBrowserSettingsOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WebBrowserSettings) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o WebBrowserSettingsOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WebBrowserSettings) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type WebBrowserSettingsArrayOutput struct{ *pulumi.OutputState }

func (WebBrowserSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebBrowserSettings)(nil)).Elem()
}

func (o WebBrowserSettingsArrayOutput) ToWebBrowserSettingsArrayOutput() WebBrowserSettingsArrayOutput {
	return o
}

func (o WebBrowserSettingsArrayOutput) ToWebBrowserSettingsArrayOutputWithContext(ctx context.Context) WebBrowserSettingsArrayOutput {
	return o
}

func (o WebBrowserSettingsArrayOutput) Index(i pulumi.IntInput) WebBrowserSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebBrowserSettings {
		return vs[0].([]*WebBrowserSettings)[vs[1].(int)]
	}).(WebBrowserSettingsOutput)
}

type WebBrowserSettingsMapOutput struct{ *pulumi.OutputState }

func (WebBrowserSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebBrowserSettings)(nil)).Elem()
}

func (o WebBrowserSettingsMapOutput) ToWebBrowserSettingsMapOutput() WebBrowserSettingsMapOutput {
	return o
}

func (o WebBrowserSettingsMapOutput) ToWebBrowserSettingsMapOutputWithContext(ctx context.Context) WebBrowserSettingsMapOutput {
	return o
}

func (o WebBrowserSettingsMapOutput) MapIndex(k pulumi.StringInput) WebBrowserSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebBrowserSettings {
		return vs[0].(map[string]*WebBrowserSettings)[vs[1].(string)]
	}).(WebBrowserSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebBrowserSettingsInput)(nil)).Elem(), &WebBrowserSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebBrowserSettingsArrayInput)(nil)).Elem(), WebBrowserSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebBrowserSettingsMapInput)(nil)).Elem(), WebBrowserSettingsMap{})
	pulumi.RegisterOutputType(WebBrowserSettingsOutput{})
	pulumi.RegisterOutputType(WebBrowserSettingsArrayOutput{})
	pulumi.RegisterOutputType(WebBrowserSettingsMapOutput{})
}
