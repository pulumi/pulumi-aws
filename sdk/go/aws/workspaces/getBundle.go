// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package workspaces

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve information about an AWS WorkSpaces bundle.
//
// ## Example Usage
// ### By ID
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/workspaces"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "wsb-b0s22j3d7"
// 		_, err := workspaces.GetBundle(ctx, &workspaces.GetBundleArgs{
// 			BundleId: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### By Owner & Name
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/workspaces"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "Value with Windows 10 and Office 2016"
// 		opt1 := "AMAZON"
// 		_, err := workspaces.GetBundle(ctx, &workspaces.GetBundleArgs{
// 			Name:  &opt0,
// 			Owner: &opt1,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetBundle(ctx *pulumi.Context, args *GetBundleArgs, opts ...pulumi.InvokeOption) (*GetBundleResult, error) {
	var rv GetBundleResult
	err := ctx.Invoke("aws:workspaces/getBundle:getBundle", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBundle.
type GetBundleArgs struct {
	// The ID of the bundle.
	BundleId *string `pulumi:"bundleId"`
	// The name of the bundle. You cannot combine this parameter with `bundleId`.
	Name *string `pulumi:"name"`
	// The owner of the bundles. You have to leave it blank for own bundles. You cannot combine this parameter with `bundleId`.
	Owner *string `pulumi:"owner"`
}

// A collection of values returned by getBundle.
type GetBundleResult struct {
	// The ID of the bundle.
	BundleId *string `pulumi:"bundleId"`
	// The compute type. See supported fields below.
	ComputeTypes []GetBundleComputeType `pulumi:"computeTypes"`
	// The description of the bundle.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the compute type.
	Name *string `pulumi:"name"`
	// The owner of the bundle.
	Owner *string `pulumi:"owner"`
	// The root volume. See supported fields below.
	RootStorages []GetBundleRootStorage `pulumi:"rootStorages"`
	// The user storage. See supported fields below.
	UserStorages []GetBundleUserStorage `pulumi:"userStorages"`
}

func GetBundleOutput(ctx *pulumi.Context, args GetBundleOutputArgs, opts ...pulumi.InvokeOption) GetBundleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBundleResult, error) {
			args := v.(GetBundleArgs)
			r, err := GetBundle(ctx, &args, opts...)
			return *r, err
		}).(GetBundleResultOutput)
}

// A collection of arguments for invoking getBundle.
type GetBundleOutputArgs struct {
	// The ID of the bundle.
	BundleId pulumi.StringPtrInput `pulumi:"bundleId"`
	// The name of the bundle. You cannot combine this parameter with `bundleId`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The owner of the bundles. You have to leave it blank for own bundles. You cannot combine this parameter with `bundleId`.
	Owner pulumi.StringPtrInput `pulumi:"owner"`
}

func (GetBundleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleArgs)(nil)).Elem()
}

// A collection of values returned by getBundle.
type GetBundleResultOutput struct{ *pulumi.OutputState }

func (GetBundleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleResult)(nil)).Elem()
}

func (o GetBundleResultOutput) ToGetBundleResultOutput() GetBundleResultOutput {
	return o
}

func (o GetBundleResultOutput) ToGetBundleResultOutputWithContext(ctx context.Context) GetBundleResultOutput {
	return o
}

// The ID of the bundle.
func (o GetBundleResultOutput) BundleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBundleResult) *string { return v.BundleId }).(pulumi.StringPtrOutput)
}

// The compute type. See supported fields below.
func (o GetBundleResultOutput) ComputeTypes() GetBundleComputeTypeArrayOutput {
	return o.ApplyT(func(v GetBundleResult) []GetBundleComputeType { return v.ComputeTypes }).(GetBundleComputeTypeArrayOutput)
}

// The description of the bundle.
func (o GetBundleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundleResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBundleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the compute type.
func (o GetBundleResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBundleResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The owner of the bundle.
func (o GetBundleResultOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBundleResult) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

// The root volume. See supported fields below.
func (o GetBundleResultOutput) RootStorages() GetBundleRootStorageArrayOutput {
	return o.ApplyT(func(v GetBundleResult) []GetBundleRootStorage { return v.RootStorages }).(GetBundleRootStorageArrayOutput)
}

// The user storage. See supported fields below.
func (o GetBundleResultOutput) UserStorages() GetBundleUserStorageArrayOutput {
	return o.ApplyT(func(v GetBundleResult) []GetBundleUserStorage { return v.UserStorages }).(GetBundleUserStorageArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBundleResultOutput{})
}
