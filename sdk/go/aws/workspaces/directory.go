// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package workspaces

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a directory registration in AWS WorkSpaces Service
type Directory struct {
	pulumi.CustomResourceState

	// The directory identifier for registration in WorkSpaces service.
	DirectoryId pulumi.StringOutput `pulumi:"directoryId"`
	// The permissions to enable or disable self-service capabilities.
	SelfServicePermissions DirectorySelfServicePermissionsOutput `pulumi:"selfServicePermissions"`
	// The identifiers of the subnets where the directory resides.
	SubnetIds pulumi.StringArrayOutput `pulumi:"subnetIds"`
	// A mapping of tags assigned to the WorkSpaces directory.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewDirectory registers a new resource with the given unique name, arguments, and options.
func NewDirectory(ctx *pulumi.Context,
	name string, args *DirectoryArgs, opts ...pulumi.ResourceOption) (*Directory, error) {
	if args == nil || args.DirectoryId == nil {
		return nil, errors.New("missing required argument 'DirectoryId'")
	}
	if args == nil {
		args = &DirectoryArgs{}
	}
	var resource Directory
	err := ctx.RegisterResource("aws:workspaces/directory:Directory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectory gets an existing Directory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectoryState, opts ...pulumi.ResourceOption) (*Directory, error) {
	var resource Directory
	err := ctx.ReadResource("aws:workspaces/directory:Directory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Directory resources.
type directoryState struct {
	// The directory identifier for registration in WorkSpaces service.
	DirectoryId *string `pulumi:"directoryId"`
	// The permissions to enable or disable self-service capabilities.
	SelfServicePermissions *DirectorySelfServicePermissions `pulumi:"selfServicePermissions"`
	// The identifiers of the subnets where the directory resides.
	SubnetIds []string `pulumi:"subnetIds"`
	// A mapping of tags assigned to the WorkSpaces directory.
	Tags map[string]interface{} `pulumi:"tags"`
}

type DirectoryState struct {
	// The directory identifier for registration in WorkSpaces service.
	DirectoryId pulumi.StringPtrInput
	// The permissions to enable or disable self-service capabilities.
	SelfServicePermissions DirectorySelfServicePermissionsPtrInput
	// The identifiers of the subnets where the directory resides.
	SubnetIds pulumi.StringArrayInput
	// A mapping of tags assigned to the WorkSpaces directory.
	Tags pulumi.MapInput
}

func (DirectoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryState)(nil)).Elem()
}

type directoryArgs struct {
	// The directory identifier for registration in WorkSpaces service.
	DirectoryId string `pulumi:"directoryId"`
	// The permissions to enable or disable self-service capabilities.
	SelfServicePermissions *DirectorySelfServicePermissions `pulumi:"selfServicePermissions"`
	// The identifiers of the subnets where the directory resides.
	SubnetIds []string `pulumi:"subnetIds"`
	// A mapping of tags assigned to the WorkSpaces directory.
	Tags map[string]interface{} `pulumi:"tags"`
}

// The set of arguments for constructing a Directory resource.
type DirectoryArgs struct {
	// The directory identifier for registration in WorkSpaces service.
	DirectoryId pulumi.StringInput
	// The permissions to enable or disable self-service capabilities.
	SelfServicePermissions DirectorySelfServicePermissionsPtrInput
	// The identifiers of the subnets where the directory resides.
	SubnetIds pulumi.StringArrayInput
	// A mapping of tags assigned to the WorkSpaces directory.
	Tags pulumi.MapInput
}

func (DirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryArgs)(nil)).Elem()
}
