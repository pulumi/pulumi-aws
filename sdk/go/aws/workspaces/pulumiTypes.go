// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspaces

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DirectorySelfServicePermissions struct {
	// Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default `false`.
	ChangeComputeType *bool `pulumi:"changeComputeType"`
	// Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default `false`.
	IncreaseVolumeSize *bool `pulumi:"increaseVolumeSize"`
	// Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default `false`.
	RebuildWorkspace *bool `pulumi:"rebuildWorkspace"`
	// Whether WorkSpaces directory users can restart their workspace. Default `true`.
	RestartWorkspace *bool `pulumi:"restartWorkspace"`
	// Whether WorkSpaces directory users can switch the running mode of their workspace. Default `false`.
	SwitchRunningMode *bool `pulumi:"switchRunningMode"`
}

// DirectorySelfServicePermissionsInput is an input type that accepts DirectorySelfServicePermissionsArgs and DirectorySelfServicePermissionsOutput values.
// You can construct a concrete instance of `DirectorySelfServicePermissionsInput` via:
//
//	DirectorySelfServicePermissionsArgs{...}
type DirectorySelfServicePermissionsInput interface {
	pulumi.Input

	ToDirectorySelfServicePermissionsOutput() DirectorySelfServicePermissionsOutput
	ToDirectorySelfServicePermissionsOutputWithContext(context.Context) DirectorySelfServicePermissionsOutput
}

type DirectorySelfServicePermissionsArgs struct {
	// Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default `false`.
	ChangeComputeType pulumi.BoolPtrInput `pulumi:"changeComputeType"`
	// Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default `false`.
	IncreaseVolumeSize pulumi.BoolPtrInput `pulumi:"increaseVolumeSize"`
	// Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default `false`.
	RebuildWorkspace pulumi.BoolPtrInput `pulumi:"rebuildWorkspace"`
	// Whether WorkSpaces directory users can restart their workspace. Default `true`.
	RestartWorkspace pulumi.BoolPtrInput `pulumi:"restartWorkspace"`
	// Whether WorkSpaces directory users can switch the running mode of their workspace. Default `false`.
	SwitchRunningMode pulumi.BoolPtrInput `pulumi:"switchRunningMode"`
}

func (DirectorySelfServicePermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectorySelfServicePermissions)(nil)).Elem()
}

func (i DirectorySelfServicePermissionsArgs) ToDirectorySelfServicePermissionsOutput() DirectorySelfServicePermissionsOutput {
	return i.ToDirectorySelfServicePermissionsOutputWithContext(context.Background())
}

func (i DirectorySelfServicePermissionsArgs) ToDirectorySelfServicePermissionsOutputWithContext(ctx context.Context) DirectorySelfServicePermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectorySelfServicePermissionsOutput)
}

func (i DirectorySelfServicePermissionsArgs) ToDirectorySelfServicePermissionsPtrOutput() DirectorySelfServicePermissionsPtrOutput {
	return i.ToDirectorySelfServicePermissionsPtrOutputWithContext(context.Background())
}

func (i DirectorySelfServicePermissionsArgs) ToDirectorySelfServicePermissionsPtrOutputWithContext(ctx context.Context) DirectorySelfServicePermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectorySelfServicePermissionsOutput).ToDirectorySelfServicePermissionsPtrOutputWithContext(ctx)
}

// DirectorySelfServicePermissionsPtrInput is an input type that accepts DirectorySelfServicePermissionsArgs, DirectorySelfServicePermissionsPtr and DirectorySelfServicePermissionsPtrOutput values.
// You can construct a concrete instance of `DirectorySelfServicePermissionsPtrInput` via:
//
//	        DirectorySelfServicePermissionsArgs{...}
//
//	or:
//
//	        nil
type DirectorySelfServicePermissionsPtrInput interface {
	pulumi.Input

	ToDirectorySelfServicePermissionsPtrOutput() DirectorySelfServicePermissionsPtrOutput
	ToDirectorySelfServicePermissionsPtrOutputWithContext(context.Context) DirectorySelfServicePermissionsPtrOutput
}

type directorySelfServicePermissionsPtrType DirectorySelfServicePermissionsArgs

func DirectorySelfServicePermissionsPtr(v *DirectorySelfServicePermissionsArgs) DirectorySelfServicePermissionsPtrInput {
	return (*directorySelfServicePermissionsPtrType)(v)
}

func (*directorySelfServicePermissionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectorySelfServicePermissions)(nil)).Elem()
}

func (i *directorySelfServicePermissionsPtrType) ToDirectorySelfServicePermissionsPtrOutput() DirectorySelfServicePermissionsPtrOutput {
	return i.ToDirectorySelfServicePermissionsPtrOutputWithContext(context.Background())
}

func (i *directorySelfServicePermissionsPtrType) ToDirectorySelfServicePermissionsPtrOutputWithContext(ctx context.Context) DirectorySelfServicePermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectorySelfServicePermissionsPtrOutput)
}

type DirectorySelfServicePermissionsOutput struct{ *pulumi.OutputState }

func (DirectorySelfServicePermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectorySelfServicePermissions)(nil)).Elem()
}

func (o DirectorySelfServicePermissionsOutput) ToDirectorySelfServicePermissionsOutput() DirectorySelfServicePermissionsOutput {
	return o
}

func (o DirectorySelfServicePermissionsOutput) ToDirectorySelfServicePermissionsOutputWithContext(ctx context.Context) DirectorySelfServicePermissionsOutput {
	return o
}

func (o DirectorySelfServicePermissionsOutput) ToDirectorySelfServicePermissionsPtrOutput() DirectorySelfServicePermissionsPtrOutput {
	return o.ToDirectorySelfServicePermissionsPtrOutputWithContext(context.Background())
}

func (o DirectorySelfServicePermissionsOutput) ToDirectorySelfServicePermissionsPtrOutputWithContext(ctx context.Context) DirectorySelfServicePermissionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectorySelfServicePermissions) *DirectorySelfServicePermissions {
		return &v
	}).(DirectorySelfServicePermissionsPtrOutput)
}

// Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default `false`.
func (o DirectorySelfServicePermissionsOutput) ChangeComputeType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectorySelfServicePermissions) *bool { return v.ChangeComputeType }).(pulumi.BoolPtrOutput)
}

// Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default `false`.
func (o DirectorySelfServicePermissionsOutput) IncreaseVolumeSize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectorySelfServicePermissions) *bool { return v.IncreaseVolumeSize }).(pulumi.BoolPtrOutput)
}

// Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default `false`.
func (o DirectorySelfServicePermissionsOutput) RebuildWorkspace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectorySelfServicePermissions) *bool { return v.RebuildWorkspace }).(pulumi.BoolPtrOutput)
}

// Whether WorkSpaces directory users can restart their workspace. Default `true`.
func (o DirectorySelfServicePermissionsOutput) RestartWorkspace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectorySelfServicePermissions) *bool { return v.RestartWorkspace }).(pulumi.BoolPtrOutput)
}

// Whether WorkSpaces directory users can switch the running mode of their workspace. Default `false`.
func (o DirectorySelfServicePermissionsOutput) SwitchRunningMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectorySelfServicePermissions) *bool { return v.SwitchRunningMode }).(pulumi.BoolPtrOutput)
}

type DirectorySelfServicePermissionsPtrOutput struct{ *pulumi.OutputState }

func (DirectorySelfServicePermissionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectorySelfServicePermissions)(nil)).Elem()
}

func (o DirectorySelfServicePermissionsPtrOutput) ToDirectorySelfServicePermissionsPtrOutput() DirectorySelfServicePermissionsPtrOutput {
	return o
}

func (o DirectorySelfServicePermissionsPtrOutput) ToDirectorySelfServicePermissionsPtrOutputWithContext(ctx context.Context) DirectorySelfServicePermissionsPtrOutput {
	return o
}

func (o DirectorySelfServicePermissionsPtrOutput) Elem() DirectorySelfServicePermissionsOutput {
	return o.ApplyT(func(v *DirectorySelfServicePermissions) DirectorySelfServicePermissions {
		if v != nil {
			return *v
		}
		var ret DirectorySelfServicePermissions
		return ret
	}).(DirectorySelfServicePermissionsOutput)
}

// Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default `false`.
func (o DirectorySelfServicePermissionsPtrOutput) ChangeComputeType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectorySelfServicePermissions) *bool {
		if v == nil {
			return nil
		}
		return v.ChangeComputeType
	}).(pulumi.BoolPtrOutput)
}

// Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default `false`.
func (o DirectorySelfServicePermissionsPtrOutput) IncreaseVolumeSize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectorySelfServicePermissions) *bool {
		if v == nil {
			return nil
		}
		return v.IncreaseVolumeSize
	}).(pulumi.BoolPtrOutput)
}

// Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default `false`.
func (o DirectorySelfServicePermissionsPtrOutput) RebuildWorkspace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectorySelfServicePermissions) *bool {
		if v == nil {
			return nil
		}
		return v.RebuildWorkspace
	}).(pulumi.BoolPtrOutput)
}

// Whether WorkSpaces directory users can restart their workspace. Default `true`.
func (o DirectorySelfServicePermissionsPtrOutput) RestartWorkspace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectorySelfServicePermissions) *bool {
		if v == nil {
			return nil
		}
		return v.RestartWorkspace
	}).(pulumi.BoolPtrOutput)
}

// Whether WorkSpaces directory users can switch the running mode of their workspace. Default `false`.
func (o DirectorySelfServicePermissionsPtrOutput) SwitchRunningMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectorySelfServicePermissions) *bool {
		if v == nil {
			return nil
		}
		return v.SwitchRunningMode
	}).(pulumi.BoolPtrOutput)
}

type DirectoryWorkspaceAccessProperties struct {
	// Indicates whether users can use Android devices to access their WorkSpaces.
	DeviceTypeAndroid *string `pulumi:"deviceTypeAndroid"`
	// Indicates whether users can use Chromebooks to access their WorkSpaces.
	DeviceTypeChromeos *string `pulumi:"deviceTypeChromeos"`
	// Indicates whether users can use iOS devices to access their WorkSpaces.
	DeviceTypeIos *string `pulumi:"deviceTypeIos"`
	// Indicates whether users can use Linux clients to access their WorkSpaces.
	DeviceTypeLinux *string `pulumi:"deviceTypeLinux"`
	// Indicates whether users can use macOS clients to access their WorkSpaces.
	DeviceTypeOsx *string `pulumi:"deviceTypeOsx"`
	// Indicates whether users can access their WorkSpaces through a web browser.
	DeviceTypeWeb *string `pulumi:"deviceTypeWeb"`
	// Indicates whether users can use Windows clients to access their WorkSpaces.
	DeviceTypeWindows *string `pulumi:"deviceTypeWindows"`
	// Indicates whether users can use zero client devices to access their WorkSpaces.
	DeviceTypeZeroclient *string `pulumi:"deviceTypeZeroclient"`
}

// DirectoryWorkspaceAccessPropertiesInput is an input type that accepts DirectoryWorkspaceAccessPropertiesArgs and DirectoryWorkspaceAccessPropertiesOutput values.
// You can construct a concrete instance of `DirectoryWorkspaceAccessPropertiesInput` via:
//
//	DirectoryWorkspaceAccessPropertiesArgs{...}
type DirectoryWorkspaceAccessPropertiesInput interface {
	pulumi.Input

	ToDirectoryWorkspaceAccessPropertiesOutput() DirectoryWorkspaceAccessPropertiesOutput
	ToDirectoryWorkspaceAccessPropertiesOutputWithContext(context.Context) DirectoryWorkspaceAccessPropertiesOutput
}

type DirectoryWorkspaceAccessPropertiesArgs struct {
	// Indicates whether users can use Android devices to access their WorkSpaces.
	DeviceTypeAndroid pulumi.StringPtrInput `pulumi:"deviceTypeAndroid"`
	// Indicates whether users can use Chromebooks to access their WorkSpaces.
	DeviceTypeChromeos pulumi.StringPtrInput `pulumi:"deviceTypeChromeos"`
	// Indicates whether users can use iOS devices to access their WorkSpaces.
	DeviceTypeIos pulumi.StringPtrInput `pulumi:"deviceTypeIos"`
	// Indicates whether users can use Linux clients to access their WorkSpaces.
	DeviceTypeLinux pulumi.StringPtrInput `pulumi:"deviceTypeLinux"`
	// Indicates whether users can use macOS clients to access their WorkSpaces.
	DeviceTypeOsx pulumi.StringPtrInput `pulumi:"deviceTypeOsx"`
	// Indicates whether users can access their WorkSpaces through a web browser.
	DeviceTypeWeb pulumi.StringPtrInput `pulumi:"deviceTypeWeb"`
	// Indicates whether users can use Windows clients to access their WorkSpaces.
	DeviceTypeWindows pulumi.StringPtrInput `pulumi:"deviceTypeWindows"`
	// Indicates whether users can use zero client devices to access their WorkSpaces.
	DeviceTypeZeroclient pulumi.StringPtrInput `pulumi:"deviceTypeZeroclient"`
}

func (DirectoryWorkspaceAccessPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryWorkspaceAccessProperties)(nil)).Elem()
}

func (i DirectoryWorkspaceAccessPropertiesArgs) ToDirectoryWorkspaceAccessPropertiesOutput() DirectoryWorkspaceAccessPropertiesOutput {
	return i.ToDirectoryWorkspaceAccessPropertiesOutputWithContext(context.Background())
}

func (i DirectoryWorkspaceAccessPropertiesArgs) ToDirectoryWorkspaceAccessPropertiesOutputWithContext(ctx context.Context) DirectoryWorkspaceAccessPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryWorkspaceAccessPropertiesOutput)
}

func (i DirectoryWorkspaceAccessPropertiesArgs) ToDirectoryWorkspaceAccessPropertiesPtrOutput() DirectoryWorkspaceAccessPropertiesPtrOutput {
	return i.ToDirectoryWorkspaceAccessPropertiesPtrOutputWithContext(context.Background())
}

func (i DirectoryWorkspaceAccessPropertiesArgs) ToDirectoryWorkspaceAccessPropertiesPtrOutputWithContext(ctx context.Context) DirectoryWorkspaceAccessPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryWorkspaceAccessPropertiesOutput).ToDirectoryWorkspaceAccessPropertiesPtrOutputWithContext(ctx)
}

// DirectoryWorkspaceAccessPropertiesPtrInput is an input type that accepts DirectoryWorkspaceAccessPropertiesArgs, DirectoryWorkspaceAccessPropertiesPtr and DirectoryWorkspaceAccessPropertiesPtrOutput values.
// You can construct a concrete instance of `DirectoryWorkspaceAccessPropertiesPtrInput` via:
//
//	        DirectoryWorkspaceAccessPropertiesArgs{...}
//
//	or:
//
//	        nil
type DirectoryWorkspaceAccessPropertiesPtrInput interface {
	pulumi.Input

	ToDirectoryWorkspaceAccessPropertiesPtrOutput() DirectoryWorkspaceAccessPropertiesPtrOutput
	ToDirectoryWorkspaceAccessPropertiesPtrOutputWithContext(context.Context) DirectoryWorkspaceAccessPropertiesPtrOutput
}

type directoryWorkspaceAccessPropertiesPtrType DirectoryWorkspaceAccessPropertiesArgs

func DirectoryWorkspaceAccessPropertiesPtr(v *DirectoryWorkspaceAccessPropertiesArgs) DirectoryWorkspaceAccessPropertiesPtrInput {
	return (*directoryWorkspaceAccessPropertiesPtrType)(v)
}

func (*directoryWorkspaceAccessPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryWorkspaceAccessProperties)(nil)).Elem()
}

func (i *directoryWorkspaceAccessPropertiesPtrType) ToDirectoryWorkspaceAccessPropertiesPtrOutput() DirectoryWorkspaceAccessPropertiesPtrOutput {
	return i.ToDirectoryWorkspaceAccessPropertiesPtrOutputWithContext(context.Background())
}

func (i *directoryWorkspaceAccessPropertiesPtrType) ToDirectoryWorkspaceAccessPropertiesPtrOutputWithContext(ctx context.Context) DirectoryWorkspaceAccessPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryWorkspaceAccessPropertiesPtrOutput)
}

type DirectoryWorkspaceAccessPropertiesOutput struct{ *pulumi.OutputState }

func (DirectoryWorkspaceAccessPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryWorkspaceAccessProperties)(nil)).Elem()
}

func (o DirectoryWorkspaceAccessPropertiesOutput) ToDirectoryWorkspaceAccessPropertiesOutput() DirectoryWorkspaceAccessPropertiesOutput {
	return o
}

func (o DirectoryWorkspaceAccessPropertiesOutput) ToDirectoryWorkspaceAccessPropertiesOutputWithContext(ctx context.Context) DirectoryWorkspaceAccessPropertiesOutput {
	return o
}

func (o DirectoryWorkspaceAccessPropertiesOutput) ToDirectoryWorkspaceAccessPropertiesPtrOutput() DirectoryWorkspaceAccessPropertiesPtrOutput {
	return o.ToDirectoryWorkspaceAccessPropertiesPtrOutputWithContext(context.Background())
}

func (o DirectoryWorkspaceAccessPropertiesOutput) ToDirectoryWorkspaceAccessPropertiesPtrOutputWithContext(ctx context.Context) DirectoryWorkspaceAccessPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryWorkspaceAccessProperties) *DirectoryWorkspaceAccessProperties {
		return &v
	}).(DirectoryWorkspaceAccessPropertiesPtrOutput)
}

// Indicates whether users can use Android devices to access their WorkSpaces.
func (o DirectoryWorkspaceAccessPropertiesOutput) DeviceTypeAndroid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryWorkspaceAccessProperties) *string { return v.DeviceTypeAndroid }).(pulumi.StringPtrOutput)
}

// Indicates whether users can use Chromebooks to access their WorkSpaces.
func (o DirectoryWorkspaceAccessPropertiesOutput) DeviceTypeChromeos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryWorkspaceAccessProperties) *string { return v.DeviceTypeChromeos }).(pulumi.StringPtrOutput)
}

// Indicates whether users can use iOS devices to access their WorkSpaces.
func (o DirectoryWorkspaceAccessPropertiesOutput) DeviceTypeIos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryWorkspaceAccessProperties) *string { return v.DeviceTypeIos }).(pulumi.StringPtrOutput)
}

// Indicates whether users can use Linux clients to access their WorkSpaces.
func (o DirectoryWorkspaceAccessPropertiesOutput) DeviceTypeLinux() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryWorkspaceAccessProperties) *string { return v.DeviceTypeLinux }).(pulumi.StringPtrOutput)
}

// Indicates whether users can use macOS clients to access their WorkSpaces.
func (o DirectoryWorkspaceAccessPropertiesOutput) DeviceTypeOsx() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryWorkspaceAccessProperties) *string { return v.DeviceTypeOsx }).(pulumi.StringPtrOutput)
}

// Indicates whether users can access their WorkSpaces through a web browser.
func (o DirectoryWorkspaceAccessPropertiesOutput) DeviceTypeWeb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryWorkspaceAccessProperties) *string { return v.DeviceTypeWeb }).(pulumi.StringPtrOutput)
}

// Indicates whether users can use Windows clients to access their WorkSpaces.
func (o DirectoryWorkspaceAccessPropertiesOutput) DeviceTypeWindows() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryWorkspaceAccessProperties) *string { return v.DeviceTypeWindows }).(pulumi.StringPtrOutput)
}

// Indicates whether users can use zero client devices to access their WorkSpaces.
func (o DirectoryWorkspaceAccessPropertiesOutput) DeviceTypeZeroclient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryWorkspaceAccessProperties) *string { return v.DeviceTypeZeroclient }).(pulumi.StringPtrOutput)
}

type DirectoryWorkspaceAccessPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DirectoryWorkspaceAccessPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryWorkspaceAccessProperties)(nil)).Elem()
}

func (o DirectoryWorkspaceAccessPropertiesPtrOutput) ToDirectoryWorkspaceAccessPropertiesPtrOutput() DirectoryWorkspaceAccessPropertiesPtrOutput {
	return o
}

func (o DirectoryWorkspaceAccessPropertiesPtrOutput) ToDirectoryWorkspaceAccessPropertiesPtrOutputWithContext(ctx context.Context) DirectoryWorkspaceAccessPropertiesPtrOutput {
	return o
}

func (o DirectoryWorkspaceAccessPropertiesPtrOutput) Elem() DirectoryWorkspaceAccessPropertiesOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceAccessProperties) DirectoryWorkspaceAccessProperties {
		if v != nil {
			return *v
		}
		var ret DirectoryWorkspaceAccessProperties
		return ret
	}).(DirectoryWorkspaceAccessPropertiesOutput)
}

// Indicates whether users can use Android devices to access their WorkSpaces.
func (o DirectoryWorkspaceAccessPropertiesPtrOutput) DeviceTypeAndroid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceAccessProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceTypeAndroid
	}).(pulumi.StringPtrOutput)
}

// Indicates whether users can use Chromebooks to access their WorkSpaces.
func (o DirectoryWorkspaceAccessPropertiesPtrOutput) DeviceTypeChromeos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceAccessProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceTypeChromeos
	}).(pulumi.StringPtrOutput)
}

// Indicates whether users can use iOS devices to access their WorkSpaces.
func (o DirectoryWorkspaceAccessPropertiesPtrOutput) DeviceTypeIos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceAccessProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceTypeIos
	}).(pulumi.StringPtrOutput)
}

// Indicates whether users can use Linux clients to access their WorkSpaces.
func (o DirectoryWorkspaceAccessPropertiesPtrOutput) DeviceTypeLinux() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceAccessProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceTypeLinux
	}).(pulumi.StringPtrOutput)
}

// Indicates whether users can use macOS clients to access their WorkSpaces.
func (o DirectoryWorkspaceAccessPropertiesPtrOutput) DeviceTypeOsx() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceAccessProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceTypeOsx
	}).(pulumi.StringPtrOutput)
}

// Indicates whether users can access their WorkSpaces through a web browser.
func (o DirectoryWorkspaceAccessPropertiesPtrOutput) DeviceTypeWeb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceAccessProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceTypeWeb
	}).(pulumi.StringPtrOutput)
}

// Indicates whether users can use Windows clients to access their WorkSpaces.
func (o DirectoryWorkspaceAccessPropertiesPtrOutput) DeviceTypeWindows() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceAccessProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceTypeWindows
	}).(pulumi.StringPtrOutput)
}

// Indicates whether users can use zero client devices to access their WorkSpaces.
func (o DirectoryWorkspaceAccessPropertiesPtrOutput) DeviceTypeZeroclient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceAccessProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceTypeZeroclient
	}).(pulumi.StringPtrOutput)
}

type DirectoryWorkspaceCreationProperties struct {
	// The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
	CustomSecurityGroupId *string `pulumi:"customSecurityGroupId"`
	// The default organizational unit (OU) for your WorkSpace directories. Should conform `"OU=<value>,DC=<value>,...,DC=<value>"` pattern.
	DefaultOu *string `pulumi:"defaultOu"`
	// Indicates whether internet access is enabled for your WorkSpaces.
	EnableInternetAccess *bool `pulumi:"enableInternetAccess"`
	// Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see [WorkSpace Maintenance](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html)..
	EnableMaintenanceMode *bool `pulumi:"enableMaintenanceMode"`
	// Indicates whether users are local administrators of their WorkSpaces.
	UserEnabledAsLocalAdministrator *bool `pulumi:"userEnabledAsLocalAdministrator"`
}

// DirectoryWorkspaceCreationPropertiesInput is an input type that accepts DirectoryWorkspaceCreationPropertiesArgs and DirectoryWorkspaceCreationPropertiesOutput values.
// You can construct a concrete instance of `DirectoryWorkspaceCreationPropertiesInput` via:
//
//	DirectoryWorkspaceCreationPropertiesArgs{...}
type DirectoryWorkspaceCreationPropertiesInput interface {
	pulumi.Input

	ToDirectoryWorkspaceCreationPropertiesOutput() DirectoryWorkspaceCreationPropertiesOutput
	ToDirectoryWorkspaceCreationPropertiesOutputWithContext(context.Context) DirectoryWorkspaceCreationPropertiesOutput
}

type DirectoryWorkspaceCreationPropertiesArgs struct {
	// The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
	CustomSecurityGroupId pulumi.StringPtrInput `pulumi:"customSecurityGroupId"`
	// The default organizational unit (OU) for your WorkSpace directories. Should conform `"OU=<value>,DC=<value>,...,DC=<value>"` pattern.
	DefaultOu pulumi.StringPtrInput `pulumi:"defaultOu"`
	// Indicates whether internet access is enabled for your WorkSpaces.
	EnableInternetAccess pulumi.BoolPtrInput `pulumi:"enableInternetAccess"`
	// Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see [WorkSpace Maintenance](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html)..
	EnableMaintenanceMode pulumi.BoolPtrInput `pulumi:"enableMaintenanceMode"`
	// Indicates whether users are local administrators of their WorkSpaces.
	UserEnabledAsLocalAdministrator pulumi.BoolPtrInput `pulumi:"userEnabledAsLocalAdministrator"`
}

func (DirectoryWorkspaceCreationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryWorkspaceCreationProperties)(nil)).Elem()
}

func (i DirectoryWorkspaceCreationPropertiesArgs) ToDirectoryWorkspaceCreationPropertiesOutput() DirectoryWorkspaceCreationPropertiesOutput {
	return i.ToDirectoryWorkspaceCreationPropertiesOutputWithContext(context.Background())
}

func (i DirectoryWorkspaceCreationPropertiesArgs) ToDirectoryWorkspaceCreationPropertiesOutputWithContext(ctx context.Context) DirectoryWorkspaceCreationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryWorkspaceCreationPropertiesOutput)
}

func (i DirectoryWorkspaceCreationPropertiesArgs) ToDirectoryWorkspaceCreationPropertiesPtrOutput() DirectoryWorkspaceCreationPropertiesPtrOutput {
	return i.ToDirectoryWorkspaceCreationPropertiesPtrOutputWithContext(context.Background())
}

func (i DirectoryWorkspaceCreationPropertiesArgs) ToDirectoryWorkspaceCreationPropertiesPtrOutputWithContext(ctx context.Context) DirectoryWorkspaceCreationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryWorkspaceCreationPropertiesOutput).ToDirectoryWorkspaceCreationPropertiesPtrOutputWithContext(ctx)
}

// DirectoryWorkspaceCreationPropertiesPtrInput is an input type that accepts DirectoryWorkspaceCreationPropertiesArgs, DirectoryWorkspaceCreationPropertiesPtr and DirectoryWorkspaceCreationPropertiesPtrOutput values.
// You can construct a concrete instance of `DirectoryWorkspaceCreationPropertiesPtrInput` via:
//
//	        DirectoryWorkspaceCreationPropertiesArgs{...}
//
//	or:
//
//	        nil
type DirectoryWorkspaceCreationPropertiesPtrInput interface {
	pulumi.Input

	ToDirectoryWorkspaceCreationPropertiesPtrOutput() DirectoryWorkspaceCreationPropertiesPtrOutput
	ToDirectoryWorkspaceCreationPropertiesPtrOutputWithContext(context.Context) DirectoryWorkspaceCreationPropertiesPtrOutput
}

type directoryWorkspaceCreationPropertiesPtrType DirectoryWorkspaceCreationPropertiesArgs

func DirectoryWorkspaceCreationPropertiesPtr(v *DirectoryWorkspaceCreationPropertiesArgs) DirectoryWorkspaceCreationPropertiesPtrInput {
	return (*directoryWorkspaceCreationPropertiesPtrType)(v)
}

func (*directoryWorkspaceCreationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryWorkspaceCreationProperties)(nil)).Elem()
}

func (i *directoryWorkspaceCreationPropertiesPtrType) ToDirectoryWorkspaceCreationPropertiesPtrOutput() DirectoryWorkspaceCreationPropertiesPtrOutput {
	return i.ToDirectoryWorkspaceCreationPropertiesPtrOutputWithContext(context.Background())
}

func (i *directoryWorkspaceCreationPropertiesPtrType) ToDirectoryWorkspaceCreationPropertiesPtrOutputWithContext(ctx context.Context) DirectoryWorkspaceCreationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryWorkspaceCreationPropertiesPtrOutput)
}

type DirectoryWorkspaceCreationPropertiesOutput struct{ *pulumi.OutputState }

func (DirectoryWorkspaceCreationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryWorkspaceCreationProperties)(nil)).Elem()
}

func (o DirectoryWorkspaceCreationPropertiesOutput) ToDirectoryWorkspaceCreationPropertiesOutput() DirectoryWorkspaceCreationPropertiesOutput {
	return o
}

func (o DirectoryWorkspaceCreationPropertiesOutput) ToDirectoryWorkspaceCreationPropertiesOutputWithContext(ctx context.Context) DirectoryWorkspaceCreationPropertiesOutput {
	return o
}

func (o DirectoryWorkspaceCreationPropertiesOutput) ToDirectoryWorkspaceCreationPropertiesPtrOutput() DirectoryWorkspaceCreationPropertiesPtrOutput {
	return o.ToDirectoryWorkspaceCreationPropertiesPtrOutputWithContext(context.Background())
}

func (o DirectoryWorkspaceCreationPropertiesOutput) ToDirectoryWorkspaceCreationPropertiesPtrOutputWithContext(ctx context.Context) DirectoryWorkspaceCreationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryWorkspaceCreationProperties) *DirectoryWorkspaceCreationProperties {
		return &v
	}).(DirectoryWorkspaceCreationPropertiesPtrOutput)
}

// The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
func (o DirectoryWorkspaceCreationPropertiesOutput) CustomSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryWorkspaceCreationProperties) *string { return v.CustomSecurityGroupId }).(pulumi.StringPtrOutput)
}

// The default organizational unit (OU) for your WorkSpace directories. Should conform `"OU=<value>,DC=<value>,...,DC=<value>"` pattern.
func (o DirectoryWorkspaceCreationPropertiesOutput) DefaultOu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryWorkspaceCreationProperties) *string { return v.DefaultOu }).(pulumi.StringPtrOutput)
}

// Indicates whether internet access is enabled for your WorkSpaces.
func (o DirectoryWorkspaceCreationPropertiesOutput) EnableInternetAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectoryWorkspaceCreationProperties) *bool { return v.EnableInternetAccess }).(pulumi.BoolPtrOutput)
}

// Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see [WorkSpace Maintenance](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html)..
func (o DirectoryWorkspaceCreationPropertiesOutput) EnableMaintenanceMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectoryWorkspaceCreationProperties) *bool { return v.EnableMaintenanceMode }).(pulumi.BoolPtrOutput)
}

// Indicates whether users are local administrators of their WorkSpaces.
func (o DirectoryWorkspaceCreationPropertiesOutput) UserEnabledAsLocalAdministrator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectoryWorkspaceCreationProperties) *bool { return v.UserEnabledAsLocalAdministrator }).(pulumi.BoolPtrOutput)
}

type DirectoryWorkspaceCreationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DirectoryWorkspaceCreationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryWorkspaceCreationProperties)(nil)).Elem()
}

func (o DirectoryWorkspaceCreationPropertiesPtrOutput) ToDirectoryWorkspaceCreationPropertiesPtrOutput() DirectoryWorkspaceCreationPropertiesPtrOutput {
	return o
}

func (o DirectoryWorkspaceCreationPropertiesPtrOutput) ToDirectoryWorkspaceCreationPropertiesPtrOutputWithContext(ctx context.Context) DirectoryWorkspaceCreationPropertiesPtrOutput {
	return o
}

func (o DirectoryWorkspaceCreationPropertiesPtrOutput) Elem() DirectoryWorkspaceCreationPropertiesOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceCreationProperties) DirectoryWorkspaceCreationProperties {
		if v != nil {
			return *v
		}
		var ret DirectoryWorkspaceCreationProperties
		return ret
	}).(DirectoryWorkspaceCreationPropertiesOutput)
}

// The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
func (o DirectoryWorkspaceCreationPropertiesPtrOutput) CustomSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceCreationProperties) *string {
		if v == nil {
			return nil
		}
		return v.CustomSecurityGroupId
	}).(pulumi.StringPtrOutput)
}

// The default organizational unit (OU) for your WorkSpace directories. Should conform `"OU=<value>,DC=<value>,...,DC=<value>"` pattern.
func (o DirectoryWorkspaceCreationPropertiesPtrOutput) DefaultOu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceCreationProperties) *string {
		if v == nil {
			return nil
		}
		return v.DefaultOu
	}).(pulumi.StringPtrOutput)
}

// Indicates whether internet access is enabled for your WorkSpaces.
func (o DirectoryWorkspaceCreationPropertiesPtrOutput) EnableInternetAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceCreationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableInternetAccess
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see [WorkSpace Maintenance](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html)..
func (o DirectoryWorkspaceCreationPropertiesPtrOutput) EnableMaintenanceMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceCreationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableMaintenanceMode
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether users are local administrators of their WorkSpaces.
func (o DirectoryWorkspaceCreationPropertiesPtrOutput) UserEnabledAsLocalAdministrator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectoryWorkspaceCreationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.UserEnabledAsLocalAdministrator
	}).(pulumi.BoolPtrOutput)
}

type IpGroupRule struct {
	// The description.
	Description *string `pulumi:"description"`
	// The IP address range, in CIDR notation, e.g., `10.0.0.0/16`
	Source string `pulumi:"source"`
}

// IpGroupRuleInput is an input type that accepts IpGroupRuleArgs and IpGroupRuleOutput values.
// You can construct a concrete instance of `IpGroupRuleInput` via:
//
//	IpGroupRuleArgs{...}
type IpGroupRuleInput interface {
	pulumi.Input

	ToIpGroupRuleOutput() IpGroupRuleOutput
	ToIpGroupRuleOutputWithContext(context.Context) IpGroupRuleOutput
}

type IpGroupRuleArgs struct {
	// The description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The IP address range, in CIDR notation, e.g., `10.0.0.0/16`
	Source pulumi.StringInput `pulumi:"source"`
}

func (IpGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpGroupRule)(nil)).Elem()
}

func (i IpGroupRuleArgs) ToIpGroupRuleOutput() IpGroupRuleOutput {
	return i.ToIpGroupRuleOutputWithContext(context.Background())
}

func (i IpGroupRuleArgs) ToIpGroupRuleOutputWithContext(ctx context.Context) IpGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpGroupRuleOutput)
}

// IpGroupRuleArrayInput is an input type that accepts IpGroupRuleArray and IpGroupRuleArrayOutput values.
// You can construct a concrete instance of `IpGroupRuleArrayInput` via:
//
//	IpGroupRuleArray{ IpGroupRuleArgs{...} }
type IpGroupRuleArrayInput interface {
	pulumi.Input

	ToIpGroupRuleArrayOutput() IpGroupRuleArrayOutput
	ToIpGroupRuleArrayOutputWithContext(context.Context) IpGroupRuleArrayOutput
}

type IpGroupRuleArray []IpGroupRuleInput

func (IpGroupRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpGroupRule)(nil)).Elem()
}

func (i IpGroupRuleArray) ToIpGroupRuleArrayOutput() IpGroupRuleArrayOutput {
	return i.ToIpGroupRuleArrayOutputWithContext(context.Background())
}

func (i IpGroupRuleArray) ToIpGroupRuleArrayOutputWithContext(ctx context.Context) IpGroupRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpGroupRuleArrayOutput)
}

type IpGroupRuleOutput struct{ *pulumi.OutputState }

func (IpGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpGroupRule)(nil)).Elem()
}

func (o IpGroupRuleOutput) ToIpGroupRuleOutput() IpGroupRuleOutput {
	return o
}

func (o IpGroupRuleOutput) ToIpGroupRuleOutputWithContext(ctx context.Context) IpGroupRuleOutput {
	return o
}

// The description.
func (o IpGroupRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpGroupRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The IP address range, in CIDR notation, e.g., `10.0.0.0/16`
func (o IpGroupRuleOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v IpGroupRule) string { return v.Source }).(pulumi.StringOutput)
}

type IpGroupRuleArrayOutput struct{ *pulumi.OutputState }

func (IpGroupRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpGroupRule)(nil)).Elem()
}

func (o IpGroupRuleArrayOutput) ToIpGroupRuleArrayOutput() IpGroupRuleArrayOutput {
	return o
}

func (o IpGroupRuleArrayOutput) ToIpGroupRuleArrayOutputWithContext(ctx context.Context) IpGroupRuleArrayOutput {
	return o
}

func (o IpGroupRuleArrayOutput) Index(i pulumi.IntInput) IpGroupRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpGroupRule {
		return vs[0].([]IpGroupRule)[vs[1].(int)]
	}).(IpGroupRuleOutput)
}

type WorkspaceWorkspaceProperties struct {
	// The compute type. For more information, see [Amazon WorkSpaces Bundles](http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles). Valid values are `VALUE`, `STANDARD`, `PERFORMANCE`, `POWER`, `GRAPHICS`, `POWERPRO`, `GRAPHICSPRO`, `GRAPHICS_G4DN`, and `GRAPHICSPRO_G4DN`.
	ComputeTypeName *string `pulumi:"computeTypeName"`
	// The size of the root volume.
	RootVolumeSizeGib *int `pulumi:"rootVolumeSizeGib"`
	// The running mode. For more information, see [Manage the WorkSpace Running Mode](https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html). Valid values are `AUTO_STOP` and `ALWAYS_ON`.
	RunningMode *string `pulumi:"runningMode"`
	// The time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals.
	RunningModeAutoStopTimeoutInMinutes *int `pulumi:"runningModeAutoStopTimeoutInMinutes"`
	// The size of the user storage.
	UserVolumeSizeGib *int `pulumi:"userVolumeSizeGib"`
}

// WorkspaceWorkspacePropertiesInput is an input type that accepts WorkspaceWorkspacePropertiesArgs and WorkspaceWorkspacePropertiesOutput values.
// You can construct a concrete instance of `WorkspaceWorkspacePropertiesInput` via:
//
//	WorkspaceWorkspacePropertiesArgs{...}
type WorkspaceWorkspacePropertiesInput interface {
	pulumi.Input

	ToWorkspaceWorkspacePropertiesOutput() WorkspaceWorkspacePropertiesOutput
	ToWorkspaceWorkspacePropertiesOutputWithContext(context.Context) WorkspaceWorkspacePropertiesOutput
}

type WorkspaceWorkspacePropertiesArgs struct {
	// The compute type. For more information, see [Amazon WorkSpaces Bundles](http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles). Valid values are `VALUE`, `STANDARD`, `PERFORMANCE`, `POWER`, `GRAPHICS`, `POWERPRO`, `GRAPHICSPRO`, `GRAPHICS_G4DN`, and `GRAPHICSPRO_G4DN`.
	ComputeTypeName pulumi.StringPtrInput `pulumi:"computeTypeName"`
	// The size of the root volume.
	RootVolumeSizeGib pulumi.IntPtrInput `pulumi:"rootVolumeSizeGib"`
	// The running mode. For more information, see [Manage the WorkSpace Running Mode](https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html). Valid values are `AUTO_STOP` and `ALWAYS_ON`.
	RunningMode pulumi.StringPtrInput `pulumi:"runningMode"`
	// The time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals.
	RunningModeAutoStopTimeoutInMinutes pulumi.IntPtrInput `pulumi:"runningModeAutoStopTimeoutInMinutes"`
	// The size of the user storage.
	UserVolumeSizeGib pulumi.IntPtrInput `pulumi:"userVolumeSizeGib"`
}

func (WorkspaceWorkspacePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceWorkspaceProperties)(nil)).Elem()
}

func (i WorkspaceWorkspacePropertiesArgs) ToWorkspaceWorkspacePropertiesOutput() WorkspaceWorkspacePropertiesOutput {
	return i.ToWorkspaceWorkspacePropertiesOutputWithContext(context.Background())
}

func (i WorkspaceWorkspacePropertiesArgs) ToWorkspaceWorkspacePropertiesOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceWorkspacePropertiesOutput)
}

func (i WorkspaceWorkspacePropertiesArgs) ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput {
	return i.ToWorkspaceWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (i WorkspaceWorkspacePropertiesArgs) ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceWorkspacePropertiesOutput).ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx)
}

// WorkspaceWorkspacePropertiesPtrInput is an input type that accepts WorkspaceWorkspacePropertiesArgs, WorkspaceWorkspacePropertiesPtr and WorkspaceWorkspacePropertiesPtrOutput values.
// You can construct a concrete instance of `WorkspaceWorkspacePropertiesPtrInput` via:
//
//	        WorkspaceWorkspacePropertiesArgs{...}
//
//	or:
//
//	        nil
type WorkspaceWorkspacePropertiesPtrInput interface {
	pulumi.Input

	ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput
	ToWorkspaceWorkspacePropertiesPtrOutputWithContext(context.Context) WorkspaceWorkspacePropertiesPtrOutput
}

type workspaceWorkspacePropertiesPtrType WorkspaceWorkspacePropertiesArgs

func WorkspaceWorkspacePropertiesPtr(v *WorkspaceWorkspacePropertiesArgs) WorkspaceWorkspacePropertiesPtrInput {
	return (*workspaceWorkspacePropertiesPtrType)(v)
}

func (*workspaceWorkspacePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceWorkspaceProperties)(nil)).Elem()
}

func (i *workspaceWorkspacePropertiesPtrType) ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput {
	return i.ToWorkspaceWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (i *workspaceWorkspacePropertiesPtrType) ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceWorkspacePropertiesPtrOutput)
}

type WorkspaceWorkspacePropertiesOutput struct{ *pulumi.OutputState }

func (WorkspaceWorkspacePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceWorkspaceProperties)(nil)).Elem()
}

func (o WorkspaceWorkspacePropertiesOutput) ToWorkspaceWorkspacePropertiesOutput() WorkspaceWorkspacePropertiesOutput {
	return o
}

func (o WorkspaceWorkspacePropertiesOutput) ToWorkspaceWorkspacePropertiesOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesOutput {
	return o
}

func (o WorkspaceWorkspacePropertiesOutput) ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput {
	return o.ToWorkspaceWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (o WorkspaceWorkspacePropertiesOutput) ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceWorkspaceProperties) *WorkspaceWorkspaceProperties {
		return &v
	}).(WorkspaceWorkspacePropertiesPtrOutput)
}

// The compute type. For more information, see [Amazon WorkSpaces Bundles](http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles). Valid values are `VALUE`, `STANDARD`, `PERFORMANCE`, `POWER`, `GRAPHICS`, `POWERPRO`, `GRAPHICSPRO`, `GRAPHICS_G4DN`, and `GRAPHICSPRO_G4DN`.
func (o WorkspaceWorkspacePropertiesOutput) ComputeTypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *string { return v.ComputeTypeName }).(pulumi.StringPtrOutput)
}

// The size of the root volume.
func (o WorkspaceWorkspacePropertiesOutput) RootVolumeSizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *int { return v.RootVolumeSizeGib }).(pulumi.IntPtrOutput)
}

// The running mode. For more information, see [Manage the WorkSpace Running Mode](https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html). Valid values are `AUTO_STOP` and `ALWAYS_ON`.
func (o WorkspaceWorkspacePropertiesOutput) RunningMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *string { return v.RunningMode }).(pulumi.StringPtrOutput)
}

// The time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals.
func (o WorkspaceWorkspacePropertiesOutput) RunningModeAutoStopTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *int { return v.RunningModeAutoStopTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The size of the user storage.
func (o WorkspaceWorkspacePropertiesOutput) UserVolumeSizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *int { return v.UserVolumeSizeGib }).(pulumi.IntPtrOutput)
}

type WorkspaceWorkspacePropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceWorkspacePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceWorkspaceProperties)(nil)).Elem()
}

func (o WorkspaceWorkspacePropertiesPtrOutput) ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput {
	return o
}

func (o WorkspaceWorkspacePropertiesPtrOutput) ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesPtrOutput {
	return o
}

func (o WorkspaceWorkspacePropertiesPtrOutput) Elem() WorkspaceWorkspacePropertiesOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) WorkspaceWorkspaceProperties {
		if v != nil {
			return *v
		}
		var ret WorkspaceWorkspaceProperties
		return ret
	}).(WorkspaceWorkspacePropertiesOutput)
}

// The compute type. For more information, see [Amazon WorkSpaces Bundles](http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles). Valid values are `VALUE`, `STANDARD`, `PERFORMANCE`, `POWER`, `GRAPHICS`, `POWERPRO`, `GRAPHICSPRO`, `GRAPHICS_G4DN`, and `GRAPHICSPRO_G4DN`.
func (o WorkspaceWorkspacePropertiesPtrOutput) ComputeTypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ComputeTypeName
	}).(pulumi.StringPtrOutput)
}

// The size of the root volume.
func (o WorkspaceWorkspacePropertiesPtrOutput) RootVolumeSizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *int {
		if v == nil {
			return nil
		}
		return v.RootVolumeSizeGib
	}).(pulumi.IntPtrOutput)
}

// The running mode. For more information, see [Manage the WorkSpace Running Mode](https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html). Valid values are `AUTO_STOP` and `ALWAYS_ON`.
func (o WorkspaceWorkspacePropertiesPtrOutput) RunningMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.RunningMode
	}).(pulumi.StringPtrOutput)
}

// The time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals.
func (o WorkspaceWorkspacePropertiesPtrOutput) RunningModeAutoStopTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *int {
		if v == nil {
			return nil
		}
		return v.RunningModeAutoStopTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The size of the user storage.
func (o WorkspaceWorkspacePropertiesPtrOutput) UserVolumeSizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *int {
		if v == nil {
			return nil
		}
		return v.UserVolumeSizeGib
	}).(pulumi.IntPtrOutput)
}

type GetBundleComputeType struct {
	// Name of the bundle. You cannot combine this parameter with `bundleId`.
	Name string `pulumi:"name"`
}

// GetBundleComputeTypeInput is an input type that accepts GetBundleComputeTypeArgs and GetBundleComputeTypeOutput values.
// You can construct a concrete instance of `GetBundleComputeTypeInput` via:
//
//	GetBundleComputeTypeArgs{...}
type GetBundleComputeTypeInput interface {
	pulumi.Input

	ToGetBundleComputeTypeOutput() GetBundleComputeTypeOutput
	ToGetBundleComputeTypeOutputWithContext(context.Context) GetBundleComputeTypeOutput
}

type GetBundleComputeTypeArgs struct {
	// Name of the bundle. You cannot combine this parameter with `bundleId`.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetBundleComputeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleComputeType)(nil)).Elem()
}

func (i GetBundleComputeTypeArgs) ToGetBundleComputeTypeOutput() GetBundleComputeTypeOutput {
	return i.ToGetBundleComputeTypeOutputWithContext(context.Background())
}

func (i GetBundleComputeTypeArgs) ToGetBundleComputeTypeOutputWithContext(ctx context.Context) GetBundleComputeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundleComputeTypeOutput)
}

// GetBundleComputeTypeArrayInput is an input type that accepts GetBundleComputeTypeArray and GetBundleComputeTypeArrayOutput values.
// You can construct a concrete instance of `GetBundleComputeTypeArrayInput` via:
//
//	GetBundleComputeTypeArray{ GetBundleComputeTypeArgs{...} }
type GetBundleComputeTypeArrayInput interface {
	pulumi.Input

	ToGetBundleComputeTypeArrayOutput() GetBundleComputeTypeArrayOutput
	ToGetBundleComputeTypeArrayOutputWithContext(context.Context) GetBundleComputeTypeArrayOutput
}

type GetBundleComputeTypeArray []GetBundleComputeTypeInput

func (GetBundleComputeTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundleComputeType)(nil)).Elem()
}

func (i GetBundleComputeTypeArray) ToGetBundleComputeTypeArrayOutput() GetBundleComputeTypeArrayOutput {
	return i.ToGetBundleComputeTypeArrayOutputWithContext(context.Background())
}

func (i GetBundleComputeTypeArray) ToGetBundleComputeTypeArrayOutputWithContext(ctx context.Context) GetBundleComputeTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundleComputeTypeArrayOutput)
}

type GetBundleComputeTypeOutput struct{ *pulumi.OutputState }

func (GetBundleComputeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleComputeType)(nil)).Elem()
}

func (o GetBundleComputeTypeOutput) ToGetBundleComputeTypeOutput() GetBundleComputeTypeOutput {
	return o
}

func (o GetBundleComputeTypeOutput) ToGetBundleComputeTypeOutputWithContext(ctx context.Context) GetBundleComputeTypeOutput {
	return o
}

// Name of the bundle. You cannot combine this parameter with `bundleId`.
func (o GetBundleComputeTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundleComputeType) string { return v.Name }).(pulumi.StringOutput)
}

type GetBundleComputeTypeArrayOutput struct{ *pulumi.OutputState }

func (GetBundleComputeTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundleComputeType)(nil)).Elem()
}

func (o GetBundleComputeTypeArrayOutput) ToGetBundleComputeTypeArrayOutput() GetBundleComputeTypeArrayOutput {
	return o
}

func (o GetBundleComputeTypeArrayOutput) ToGetBundleComputeTypeArrayOutputWithContext(ctx context.Context) GetBundleComputeTypeArrayOutput {
	return o
}

func (o GetBundleComputeTypeArrayOutput) Index(i pulumi.IntInput) GetBundleComputeTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBundleComputeType {
		return vs[0].([]GetBundleComputeType)[vs[1].(int)]
	}).(GetBundleComputeTypeOutput)
}

type GetBundleRootStorage struct {
	// Size of the user storage.
	Capacity string `pulumi:"capacity"`
}

// GetBundleRootStorageInput is an input type that accepts GetBundleRootStorageArgs and GetBundleRootStorageOutput values.
// You can construct a concrete instance of `GetBundleRootStorageInput` via:
//
//	GetBundleRootStorageArgs{...}
type GetBundleRootStorageInput interface {
	pulumi.Input

	ToGetBundleRootStorageOutput() GetBundleRootStorageOutput
	ToGetBundleRootStorageOutputWithContext(context.Context) GetBundleRootStorageOutput
}

type GetBundleRootStorageArgs struct {
	// Size of the user storage.
	Capacity pulumi.StringInput `pulumi:"capacity"`
}

func (GetBundleRootStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleRootStorage)(nil)).Elem()
}

func (i GetBundleRootStorageArgs) ToGetBundleRootStorageOutput() GetBundleRootStorageOutput {
	return i.ToGetBundleRootStorageOutputWithContext(context.Background())
}

func (i GetBundleRootStorageArgs) ToGetBundleRootStorageOutputWithContext(ctx context.Context) GetBundleRootStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundleRootStorageOutput)
}

// GetBundleRootStorageArrayInput is an input type that accepts GetBundleRootStorageArray and GetBundleRootStorageArrayOutput values.
// You can construct a concrete instance of `GetBundleRootStorageArrayInput` via:
//
//	GetBundleRootStorageArray{ GetBundleRootStorageArgs{...} }
type GetBundleRootStorageArrayInput interface {
	pulumi.Input

	ToGetBundleRootStorageArrayOutput() GetBundleRootStorageArrayOutput
	ToGetBundleRootStorageArrayOutputWithContext(context.Context) GetBundleRootStorageArrayOutput
}

type GetBundleRootStorageArray []GetBundleRootStorageInput

func (GetBundleRootStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundleRootStorage)(nil)).Elem()
}

func (i GetBundleRootStorageArray) ToGetBundleRootStorageArrayOutput() GetBundleRootStorageArrayOutput {
	return i.ToGetBundleRootStorageArrayOutputWithContext(context.Background())
}

func (i GetBundleRootStorageArray) ToGetBundleRootStorageArrayOutputWithContext(ctx context.Context) GetBundleRootStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundleRootStorageArrayOutput)
}

type GetBundleRootStorageOutput struct{ *pulumi.OutputState }

func (GetBundleRootStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleRootStorage)(nil)).Elem()
}

func (o GetBundleRootStorageOutput) ToGetBundleRootStorageOutput() GetBundleRootStorageOutput {
	return o
}

func (o GetBundleRootStorageOutput) ToGetBundleRootStorageOutputWithContext(ctx context.Context) GetBundleRootStorageOutput {
	return o
}

// Size of the user storage.
func (o GetBundleRootStorageOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundleRootStorage) string { return v.Capacity }).(pulumi.StringOutput)
}

type GetBundleRootStorageArrayOutput struct{ *pulumi.OutputState }

func (GetBundleRootStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundleRootStorage)(nil)).Elem()
}

func (o GetBundleRootStorageArrayOutput) ToGetBundleRootStorageArrayOutput() GetBundleRootStorageArrayOutput {
	return o
}

func (o GetBundleRootStorageArrayOutput) ToGetBundleRootStorageArrayOutputWithContext(ctx context.Context) GetBundleRootStorageArrayOutput {
	return o
}

func (o GetBundleRootStorageArrayOutput) Index(i pulumi.IntInput) GetBundleRootStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBundleRootStorage {
		return vs[0].([]GetBundleRootStorage)[vs[1].(int)]
	}).(GetBundleRootStorageOutput)
}

type GetBundleUserStorage struct {
	// Size of the user storage.
	Capacity string `pulumi:"capacity"`
}

// GetBundleUserStorageInput is an input type that accepts GetBundleUserStorageArgs and GetBundleUserStorageOutput values.
// You can construct a concrete instance of `GetBundleUserStorageInput` via:
//
//	GetBundleUserStorageArgs{...}
type GetBundleUserStorageInput interface {
	pulumi.Input

	ToGetBundleUserStorageOutput() GetBundleUserStorageOutput
	ToGetBundleUserStorageOutputWithContext(context.Context) GetBundleUserStorageOutput
}

type GetBundleUserStorageArgs struct {
	// Size of the user storage.
	Capacity pulumi.StringInput `pulumi:"capacity"`
}

func (GetBundleUserStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleUserStorage)(nil)).Elem()
}

func (i GetBundleUserStorageArgs) ToGetBundleUserStorageOutput() GetBundleUserStorageOutput {
	return i.ToGetBundleUserStorageOutputWithContext(context.Background())
}

func (i GetBundleUserStorageArgs) ToGetBundleUserStorageOutputWithContext(ctx context.Context) GetBundleUserStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundleUserStorageOutput)
}

// GetBundleUserStorageArrayInput is an input type that accepts GetBundleUserStorageArray and GetBundleUserStorageArrayOutput values.
// You can construct a concrete instance of `GetBundleUserStorageArrayInput` via:
//
//	GetBundleUserStorageArray{ GetBundleUserStorageArgs{...} }
type GetBundleUserStorageArrayInput interface {
	pulumi.Input

	ToGetBundleUserStorageArrayOutput() GetBundleUserStorageArrayOutput
	ToGetBundleUserStorageArrayOutputWithContext(context.Context) GetBundleUserStorageArrayOutput
}

type GetBundleUserStorageArray []GetBundleUserStorageInput

func (GetBundleUserStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundleUserStorage)(nil)).Elem()
}

func (i GetBundleUserStorageArray) ToGetBundleUserStorageArrayOutput() GetBundleUserStorageArrayOutput {
	return i.ToGetBundleUserStorageArrayOutputWithContext(context.Background())
}

func (i GetBundleUserStorageArray) ToGetBundleUserStorageArrayOutputWithContext(ctx context.Context) GetBundleUserStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundleUserStorageArrayOutput)
}

type GetBundleUserStorageOutput struct{ *pulumi.OutputState }

func (GetBundleUserStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleUserStorage)(nil)).Elem()
}

func (o GetBundleUserStorageOutput) ToGetBundleUserStorageOutput() GetBundleUserStorageOutput {
	return o
}

func (o GetBundleUserStorageOutput) ToGetBundleUserStorageOutputWithContext(ctx context.Context) GetBundleUserStorageOutput {
	return o
}

// Size of the user storage.
func (o GetBundleUserStorageOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundleUserStorage) string { return v.Capacity }).(pulumi.StringOutput)
}

type GetBundleUserStorageArrayOutput struct{ *pulumi.OutputState }

func (GetBundleUserStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundleUserStorage)(nil)).Elem()
}

func (o GetBundleUserStorageArrayOutput) ToGetBundleUserStorageArrayOutput() GetBundleUserStorageArrayOutput {
	return o
}

func (o GetBundleUserStorageArrayOutput) ToGetBundleUserStorageArrayOutputWithContext(ctx context.Context) GetBundleUserStorageArrayOutput {
	return o
}

func (o GetBundleUserStorageArrayOutput) Index(i pulumi.IntInput) GetBundleUserStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBundleUserStorage {
		return vs[0].([]GetBundleUserStorage)[vs[1].(int)]
	}).(GetBundleUserStorageOutput)
}

type GetDirectorySelfServicePermission struct {
	// Whether WorkSpaces directory users can change the compute type (bundle) for their workspace.
	ChangeComputeType bool `pulumi:"changeComputeType"`
	// Whether WorkSpaces directory users can increase the volume size of the drives on their workspace.
	IncreaseVolumeSize bool `pulumi:"increaseVolumeSize"`
	// Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state.
	RebuildWorkspace bool `pulumi:"rebuildWorkspace"`
	// Whether WorkSpaces directory users can restart their workspace.
	RestartWorkspace bool `pulumi:"restartWorkspace"`
	// Whether WorkSpaces directory users can switch the running mode of their workspace.
	SwitchRunningMode bool `pulumi:"switchRunningMode"`
}

// GetDirectorySelfServicePermissionInput is an input type that accepts GetDirectorySelfServicePermissionArgs and GetDirectorySelfServicePermissionOutput values.
// You can construct a concrete instance of `GetDirectorySelfServicePermissionInput` via:
//
//	GetDirectorySelfServicePermissionArgs{...}
type GetDirectorySelfServicePermissionInput interface {
	pulumi.Input

	ToGetDirectorySelfServicePermissionOutput() GetDirectorySelfServicePermissionOutput
	ToGetDirectorySelfServicePermissionOutputWithContext(context.Context) GetDirectorySelfServicePermissionOutput
}

type GetDirectorySelfServicePermissionArgs struct {
	// Whether WorkSpaces directory users can change the compute type (bundle) for their workspace.
	ChangeComputeType pulumi.BoolInput `pulumi:"changeComputeType"`
	// Whether WorkSpaces directory users can increase the volume size of the drives on their workspace.
	IncreaseVolumeSize pulumi.BoolInput `pulumi:"increaseVolumeSize"`
	// Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state.
	RebuildWorkspace pulumi.BoolInput `pulumi:"rebuildWorkspace"`
	// Whether WorkSpaces directory users can restart their workspace.
	RestartWorkspace pulumi.BoolInput `pulumi:"restartWorkspace"`
	// Whether WorkSpaces directory users can switch the running mode of their workspace.
	SwitchRunningMode pulumi.BoolInput `pulumi:"switchRunningMode"`
}

func (GetDirectorySelfServicePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectorySelfServicePermission)(nil)).Elem()
}

func (i GetDirectorySelfServicePermissionArgs) ToGetDirectorySelfServicePermissionOutput() GetDirectorySelfServicePermissionOutput {
	return i.ToGetDirectorySelfServicePermissionOutputWithContext(context.Background())
}

func (i GetDirectorySelfServicePermissionArgs) ToGetDirectorySelfServicePermissionOutputWithContext(ctx context.Context) GetDirectorySelfServicePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectorySelfServicePermissionOutput)
}

// GetDirectorySelfServicePermissionArrayInput is an input type that accepts GetDirectorySelfServicePermissionArray and GetDirectorySelfServicePermissionArrayOutput values.
// You can construct a concrete instance of `GetDirectorySelfServicePermissionArrayInput` via:
//
//	GetDirectorySelfServicePermissionArray{ GetDirectorySelfServicePermissionArgs{...} }
type GetDirectorySelfServicePermissionArrayInput interface {
	pulumi.Input

	ToGetDirectorySelfServicePermissionArrayOutput() GetDirectorySelfServicePermissionArrayOutput
	ToGetDirectorySelfServicePermissionArrayOutputWithContext(context.Context) GetDirectorySelfServicePermissionArrayOutput
}

type GetDirectorySelfServicePermissionArray []GetDirectorySelfServicePermissionInput

func (GetDirectorySelfServicePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectorySelfServicePermission)(nil)).Elem()
}

func (i GetDirectorySelfServicePermissionArray) ToGetDirectorySelfServicePermissionArrayOutput() GetDirectorySelfServicePermissionArrayOutput {
	return i.ToGetDirectorySelfServicePermissionArrayOutputWithContext(context.Background())
}

func (i GetDirectorySelfServicePermissionArray) ToGetDirectorySelfServicePermissionArrayOutputWithContext(ctx context.Context) GetDirectorySelfServicePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectorySelfServicePermissionArrayOutput)
}

type GetDirectorySelfServicePermissionOutput struct{ *pulumi.OutputState }

func (GetDirectorySelfServicePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectorySelfServicePermission)(nil)).Elem()
}

func (o GetDirectorySelfServicePermissionOutput) ToGetDirectorySelfServicePermissionOutput() GetDirectorySelfServicePermissionOutput {
	return o
}

func (o GetDirectorySelfServicePermissionOutput) ToGetDirectorySelfServicePermissionOutputWithContext(ctx context.Context) GetDirectorySelfServicePermissionOutput {
	return o
}

// Whether WorkSpaces directory users can change the compute type (bundle) for their workspace.
func (o GetDirectorySelfServicePermissionOutput) ChangeComputeType() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectorySelfServicePermission) bool { return v.ChangeComputeType }).(pulumi.BoolOutput)
}

// Whether WorkSpaces directory users can increase the volume size of the drives on their workspace.
func (o GetDirectorySelfServicePermissionOutput) IncreaseVolumeSize() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectorySelfServicePermission) bool { return v.IncreaseVolumeSize }).(pulumi.BoolOutput)
}

// Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state.
func (o GetDirectorySelfServicePermissionOutput) RebuildWorkspace() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectorySelfServicePermission) bool { return v.RebuildWorkspace }).(pulumi.BoolOutput)
}

// Whether WorkSpaces directory users can restart their workspace.
func (o GetDirectorySelfServicePermissionOutput) RestartWorkspace() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectorySelfServicePermission) bool { return v.RestartWorkspace }).(pulumi.BoolOutput)
}

// Whether WorkSpaces directory users can switch the running mode of their workspace.
func (o GetDirectorySelfServicePermissionOutput) SwitchRunningMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectorySelfServicePermission) bool { return v.SwitchRunningMode }).(pulumi.BoolOutput)
}

type GetDirectorySelfServicePermissionArrayOutput struct{ *pulumi.OutputState }

func (GetDirectorySelfServicePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectorySelfServicePermission)(nil)).Elem()
}

func (o GetDirectorySelfServicePermissionArrayOutput) ToGetDirectorySelfServicePermissionArrayOutput() GetDirectorySelfServicePermissionArrayOutput {
	return o
}

func (o GetDirectorySelfServicePermissionArrayOutput) ToGetDirectorySelfServicePermissionArrayOutputWithContext(ctx context.Context) GetDirectorySelfServicePermissionArrayOutput {
	return o
}

func (o GetDirectorySelfServicePermissionArrayOutput) Index(i pulumi.IntInput) GetDirectorySelfServicePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectorySelfServicePermission {
		return vs[0].([]GetDirectorySelfServicePermission)[vs[1].(int)]
	}).(GetDirectorySelfServicePermissionOutput)
}

type GetDirectoryWorkspaceAccessProperty struct {
	// (Optional) Indicates whether users can use Android devices to access their WorkSpaces.
	DeviceTypeAndroid string `pulumi:"deviceTypeAndroid"`
	// (Optional) Indicates whether users can use Chromebooks to access their WorkSpaces.
	DeviceTypeChromeos string `pulumi:"deviceTypeChromeos"`
	// (Optional) Indicates whether users can use iOS devices to access their WorkSpaces.
	DeviceTypeIos string `pulumi:"deviceTypeIos"`
	// (Optional) Indicates whether users can use Linux clients to access their WorkSpaces.
	DeviceTypeLinux string `pulumi:"deviceTypeLinux"`
	// (Optional) Indicates whether users can use macOS clients to access their WorkSpaces.
	DeviceTypeOsx string `pulumi:"deviceTypeOsx"`
	// (Optional) Indicates whether users can access their WorkSpaces through a web browser.
	DeviceTypeWeb string `pulumi:"deviceTypeWeb"`
	// (Optional) Indicates whether users can use Windows clients to access their WorkSpaces.
	DeviceTypeWindows string `pulumi:"deviceTypeWindows"`
	// (Optional) Indicates whether users can use zero client devices to access their WorkSpaces.
	DeviceTypeZeroclient string `pulumi:"deviceTypeZeroclient"`
}

// GetDirectoryWorkspaceAccessPropertyInput is an input type that accepts GetDirectoryWorkspaceAccessPropertyArgs and GetDirectoryWorkspaceAccessPropertyOutput values.
// You can construct a concrete instance of `GetDirectoryWorkspaceAccessPropertyInput` via:
//
//	GetDirectoryWorkspaceAccessPropertyArgs{...}
type GetDirectoryWorkspaceAccessPropertyInput interface {
	pulumi.Input

	ToGetDirectoryWorkspaceAccessPropertyOutput() GetDirectoryWorkspaceAccessPropertyOutput
	ToGetDirectoryWorkspaceAccessPropertyOutputWithContext(context.Context) GetDirectoryWorkspaceAccessPropertyOutput
}

type GetDirectoryWorkspaceAccessPropertyArgs struct {
	// (Optional) Indicates whether users can use Android devices to access their WorkSpaces.
	DeviceTypeAndroid pulumi.StringInput `pulumi:"deviceTypeAndroid"`
	// (Optional) Indicates whether users can use Chromebooks to access their WorkSpaces.
	DeviceTypeChromeos pulumi.StringInput `pulumi:"deviceTypeChromeos"`
	// (Optional) Indicates whether users can use iOS devices to access their WorkSpaces.
	DeviceTypeIos pulumi.StringInput `pulumi:"deviceTypeIos"`
	// (Optional) Indicates whether users can use Linux clients to access their WorkSpaces.
	DeviceTypeLinux pulumi.StringInput `pulumi:"deviceTypeLinux"`
	// (Optional) Indicates whether users can use macOS clients to access their WorkSpaces.
	DeviceTypeOsx pulumi.StringInput `pulumi:"deviceTypeOsx"`
	// (Optional) Indicates whether users can access their WorkSpaces through a web browser.
	DeviceTypeWeb pulumi.StringInput `pulumi:"deviceTypeWeb"`
	// (Optional) Indicates whether users can use Windows clients to access their WorkSpaces.
	DeviceTypeWindows pulumi.StringInput `pulumi:"deviceTypeWindows"`
	// (Optional) Indicates whether users can use zero client devices to access their WorkSpaces.
	DeviceTypeZeroclient pulumi.StringInput `pulumi:"deviceTypeZeroclient"`
}

func (GetDirectoryWorkspaceAccessPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryWorkspaceAccessProperty)(nil)).Elem()
}

func (i GetDirectoryWorkspaceAccessPropertyArgs) ToGetDirectoryWorkspaceAccessPropertyOutput() GetDirectoryWorkspaceAccessPropertyOutput {
	return i.ToGetDirectoryWorkspaceAccessPropertyOutputWithContext(context.Background())
}

func (i GetDirectoryWorkspaceAccessPropertyArgs) ToGetDirectoryWorkspaceAccessPropertyOutputWithContext(ctx context.Context) GetDirectoryWorkspaceAccessPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryWorkspaceAccessPropertyOutput)
}

// GetDirectoryWorkspaceAccessPropertyArrayInput is an input type that accepts GetDirectoryWorkspaceAccessPropertyArray and GetDirectoryWorkspaceAccessPropertyArrayOutput values.
// You can construct a concrete instance of `GetDirectoryWorkspaceAccessPropertyArrayInput` via:
//
//	GetDirectoryWorkspaceAccessPropertyArray{ GetDirectoryWorkspaceAccessPropertyArgs{...} }
type GetDirectoryWorkspaceAccessPropertyArrayInput interface {
	pulumi.Input

	ToGetDirectoryWorkspaceAccessPropertyArrayOutput() GetDirectoryWorkspaceAccessPropertyArrayOutput
	ToGetDirectoryWorkspaceAccessPropertyArrayOutputWithContext(context.Context) GetDirectoryWorkspaceAccessPropertyArrayOutput
}

type GetDirectoryWorkspaceAccessPropertyArray []GetDirectoryWorkspaceAccessPropertyInput

func (GetDirectoryWorkspaceAccessPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryWorkspaceAccessProperty)(nil)).Elem()
}

func (i GetDirectoryWorkspaceAccessPropertyArray) ToGetDirectoryWorkspaceAccessPropertyArrayOutput() GetDirectoryWorkspaceAccessPropertyArrayOutput {
	return i.ToGetDirectoryWorkspaceAccessPropertyArrayOutputWithContext(context.Background())
}

func (i GetDirectoryWorkspaceAccessPropertyArray) ToGetDirectoryWorkspaceAccessPropertyArrayOutputWithContext(ctx context.Context) GetDirectoryWorkspaceAccessPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryWorkspaceAccessPropertyArrayOutput)
}

type GetDirectoryWorkspaceAccessPropertyOutput struct{ *pulumi.OutputState }

func (GetDirectoryWorkspaceAccessPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryWorkspaceAccessProperty)(nil)).Elem()
}

func (o GetDirectoryWorkspaceAccessPropertyOutput) ToGetDirectoryWorkspaceAccessPropertyOutput() GetDirectoryWorkspaceAccessPropertyOutput {
	return o
}

func (o GetDirectoryWorkspaceAccessPropertyOutput) ToGetDirectoryWorkspaceAccessPropertyOutputWithContext(ctx context.Context) GetDirectoryWorkspaceAccessPropertyOutput {
	return o
}

// (Optional) Indicates whether users can use Android devices to access their WorkSpaces.
func (o GetDirectoryWorkspaceAccessPropertyOutput) DeviceTypeAndroid() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryWorkspaceAccessProperty) string { return v.DeviceTypeAndroid }).(pulumi.StringOutput)
}

// (Optional) Indicates whether users can use Chromebooks to access their WorkSpaces.
func (o GetDirectoryWorkspaceAccessPropertyOutput) DeviceTypeChromeos() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryWorkspaceAccessProperty) string { return v.DeviceTypeChromeos }).(pulumi.StringOutput)
}

// (Optional) Indicates whether users can use iOS devices to access their WorkSpaces.
func (o GetDirectoryWorkspaceAccessPropertyOutput) DeviceTypeIos() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryWorkspaceAccessProperty) string { return v.DeviceTypeIos }).(pulumi.StringOutput)
}

// (Optional) Indicates whether users can use Linux clients to access their WorkSpaces.
func (o GetDirectoryWorkspaceAccessPropertyOutput) DeviceTypeLinux() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryWorkspaceAccessProperty) string { return v.DeviceTypeLinux }).(pulumi.StringOutput)
}

// (Optional) Indicates whether users can use macOS clients to access their WorkSpaces.
func (o GetDirectoryWorkspaceAccessPropertyOutput) DeviceTypeOsx() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryWorkspaceAccessProperty) string { return v.DeviceTypeOsx }).(pulumi.StringOutput)
}

// (Optional) Indicates whether users can access their WorkSpaces through a web browser.
func (o GetDirectoryWorkspaceAccessPropertyOutput) DeviceTypeWeb() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryWorkspaceAccessProperty) string { return v.DeviceTypeWeb }).(pulumi.StringOutput)
}

// (Optional) Indicates whether users can use Windows clients to access their WorkSpaces.
func (o GetDirectoryWorkspaceAccessPropertyOutput) DeviceTypeWindows() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryWorkspaceAccessProperty) string { return v.DeviceTypeWindows }).(pulumi.StringOutput)
}

// (Optional) Indicates whether users can use zero client devices to access their WorkSpaces.
func (o GetDirectoryWorkspaceAccessPropertyOutput) DeviceTypeZeroclient() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryWorkspaceAccessProperty) string { return v.DeviceTypeZeroclient }).(pulumi.StringOutput)
}

type GetDirectoryWorkspaceAccessPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetDirectoryWorkspaceAccessPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryWorkspaceAccessProperty)(nil)).Elem()
}

func (o GetDirectoryWorkspaceAccessPropertyArrayOutput) ToGetDirectoryWorkspaceAccessPropertyArrayOutput() GetDirectoryWorkspaceAccessPropertyArrayOutput {
	return o
}

func (o GetDirectoryWorkspaceAccessPropertyArrayOutput) ToGetDirectoryWorkspaceAccessPropertyArrayOutputWithContext(ctx context.Context) GetDirectoryWorkspaceAccessPropertyArrayOutput {
	return o
}

func (o GetDirectoryWorkspaceAccessPropertyArrayOutput) Index(i pulumi.IntInput) GetDirectoryWorkspaceAccessPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectoryWorkspaceAccessProperty {
		return vs[0].([]GetDirectoryWorkspaceAccessProperty)[vs[1].(int)]
	}).(GetDirectoryWorkspaceAccessPropertyOutput)
}

type GetDirectoryWorkspaceCreationProperty struct {
	// The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
	CustomSecurityGroupId string `pulumi:"customSecurityGroupId"`
	// The default organizational unit (OU) for your WorkSpace directories.
	DefaultOu string `pulumi:"defaultOu"`
	// Indicates whether internet access is enabled for your WorkSpaces.
	EnableInternetAccess bool `pulumi:"enableInternetAccess"`
	// Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see [WorkSpace Maintenance](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html).
	EnableMaintenanceMode bool `pulumi:"enableMaintenanceMode"`
	// Indicates whether users are local administrators of their WorkSpaces.
	UserEnabledAsLocalAdministrator bool `pulumi:"userEnabledAsLocalAdministrator"`
}

// GetDirectoryWorkspaceCreationPropertyInput is an input type that accepts GetDirectoryWorkspaceCreationPropertyArgs and GetDirectoryWorkspaceCreationPropertyOutput values.
// You can construct a concrete instance of `GetDirectoryWorkspaceCreationPropertyInput` via:
//
//	GetDirectoryWorkspaceCreationPropertyArgs{...}
type GetDirectoryWorkspaceCreationPropertyInput interface {
	pulumi.Input

	ToGetDirectoryWorkspaceCreationPropertyOutput() GetDirectoryWorkspaceCreationPropertyOutput
	ToGetDirectoryWorkspaceCreationPropertyOutputWithContext(context.Context) GetDirectoryWorkspaceCreationPropertyOutput
}

type GetDirectoryWorkspaceCreationPropertyArgs struct {
	// The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
	CustomSecurityGroupId pulumi.StringInput `pulumi:"customSecurityGroupId"`
	// The default organizational unit (OU) for your WorkSpace directories.
	DefaultOu pulumi.StringInput `pulumi:"defaultOu"`
	// Indicates whether internet access is enabled for your WorkSpaces.
	EnableInternetAccess pulumi.BoolInput `pulumi:"enableInternetAccess"`
	// Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see [WorkSpace Maintenance](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html).
	EnableMaintenanceMode pulumi.BoolInput `pulumi:"enableMaintenanceMode"`
	// Indicates whether users are local administrators of their WorkSpaces.
	UserEnabledAsLocalAdministrator pulumi.BoolInput `pulumi:"userEnabledAsLocalAdministrator"`
}

func (GetDirectoryWorkspaceCreationPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryWorkspaceCreationProperty)(nil)).Elem()
}

func (i GetDirectoryWorkspaceCreationPropertyArgs) ToGetDirectoryWorkspaceCreationPropertyOutput() GetDirectoryWorkspaceCreationPropertyOutput {
	return i.ToGetDirectoryWorkspaceCreationPropertyOutputWithContext(context.Background())
}

func (i GetDirectoryWorkspaceCreationPropertyArgs) ToGetDirectoryWorkspaceCreationPropertyOutputWithContext(ctx context.Context) GetDirectoryWorkspaceCreationPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryWorkspaceCreationPropertyOutput)
}

// GetDirectoryWorkspaceCreationPropertyArrayInput is an input type that accepts GetDirectoryWorkspaceCreationPropertyArray and GetDirectoryWorkspaceCreationPropertyArrayOutput values.
// You can construct a concrete instance of `GetDirectoryWorkspaceCreationPropertyArrayInput` via:
//
//	GetDirectoryWorkspaceCreationPropertyArray{ GetDirectoryWorkspaceCreationPropertyArgs{...} }
type GetDirectoryWorkspaceCreationPropertyArrayInput interface {
	pulumi.Input

	ToGetDirectoryWorkspaceCreationPropertyArrayOutput() GetDirectoryWorkspaceCreationPropertyArrayOutput
	ToGetDirectoryWorkspaceCreationPropertyArrayOutputWithContext(context.Context) GetDirectoryWorkspaceCreationPropertyArrayOutput
}

type GetDirectoryWorkspaceCreationPropertyArray []GetDirectoryWorkspaceCreationPropertyInput

func (GetDirectoryWorkspaceCreationPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryWorkspaceCreationProperty)(nil)).Elem()
}

func (i GetDirectoryWorkspaceCreationPropertyArray) ToGetDirectoryWorkspaceCreationPropertyArrayOutput() GetDirectoryWorkspaceCreationPropertyArrayOutput {
	return i.ToGetDirectoryWorkspaceCreationPropertyArrayOutputWithContext(context.Background())
}

func (i GetDirectoryWorkspaceCreationPropertyArray) ToGetDirectoryWorkspaceCreationPropertyArrayOutputWithContext(ctx context.Context) GetDirectoryWorkspaceCreationPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryWorkspaceCreationPropertyArrayOutput)
}

type GetDirectoryWorkspaceCreationPropertyOutput struct{ *pulumi.OutputState }

func (GetDirectoryWorkspaceCreationPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryWorkspaceCreationProperty)(nil)).Elem()
}

func (o GetDirectoryWorkspaceCreationPropertyOutput) ToGetDirectoryWorkspaceCreationPropertyOutput() GetDirectoryWorkspaceCreationPropertyOutput {
	return o
}

func (o GetDirectoryWorkspaceCreationPropertyOutput) ToGetDirectoryWorkspaceCreationPropertyOutputWithContext(ctx context.Context) GetDirectoryWorkspaceCreationPropertyOutput {
	return o
}

// The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
func (o GetDirectoryWorkspaceCreationPropertyOutput) CustomSecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryWorkspaceCreationProperty) string { return v.CustomSecurityGroupId }).(pulumi.StringOutput)
}

// The default organizational unit (OU) for your WorkSpace directories.
func (o GetDirectoryWorkspaceCreationPropertyOutput) DefaultOu() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryWorkspaceCreationProperty) string { return v.DefaultOu }).(pulumi.StringOutput)
}

// Indicates whether internet access is enabled for your WorkSpaces.
func (o GetDirectoryWorkspaceCreationPropertyOutput) EnableInternetAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectoryWorkspaceCreationProperty) bool { return v.EnableInternetAccess }).(pulumi.BoolOutput)
}

// Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see [WorkSpace Maintenance](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html).
func (o GetDirectoryWorkspaceCreationPropertyOutput) EnableMaintenanceMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectoryWorkspaceCreationProperty) bool { return v.EnableMaintenanceMode }).(pulumi.BoolOutput)
}

// Indicates whether users are local administrators of their WorkSpaces.
func (o GetDirectoryWorkspaceCreationPropertyOutput) UserEnabledAsLocalAdministrator() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectoryWorkspaceCreationProperty) bool { return v.UserEnabledAsLocalAdministrator }).(pulumi.BoolOutput)
}

type GetDirectoryWorkspaceCreationPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetDirectoryWorkspaceCreationPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryWorkspaceCreationProperty)(nil)).Elem()
}

func (o GetDirectoryWorkspaceCreationPropertyArrayOutput) ToGetDirectoryWorkspaceCreationPropertyArrayOutput() GetDirectoryWorkspaceCreationPropertyArrayOutput {
	return o
}

func (o GetDirectoryWorkspaceCreationPropertyArrayOutput) ToGetDirectoryWorkspaceCreationPropertyArrayOutputWithContext(ctx context.Context) GetDirectoryWorkspaceCreationPropertyArrayOutput {
	return o
}

func (o GetDirectoryWorkspaceCreationPropertyArrayOutput) Index(i pulumi.IntInput) GetDirectoryWorkspaceCreationPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectoryWorkspaceCreationProperty {
		return vs[0].([]GetDirectoryWorkspaceCreationProperty)[vs[1].(int)]
	}).(GetDirectoryWorkspaceCreationPropertyOutput)
}

type GetWorkspaceWorkspaceProperty struct {
	// Compute type. For more information, see [Amazon WorkSpaces Bundles](http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles). Valid values are `VALUE`, `STANDARD`, `PERFORMANCE`, `POWER`, `GRAPHICS`, `POWERPRO` and `GRAPHICSPRO`.
	ComputeTypeName string `pulumi:"computeTypeName"`
	// Size of the root volume.
	RootVolumeSizeGib int `pulumi:"rootVolumeSizeGib"`
	// Running mode. For more information, see [Manage the WorkSpace Running Mode](https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html). Valid values are `AUTO_STOP` and `ALWAYS_ON`.
	RunningMode string `pulumi:"runningMode"`
	// Time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals.
	RunningModeAutoStopTimeoutInMinutes int `pulumi:"runningModeAutoStopTimeoutInMinutes"`
	// Size of the user storage.
	UserVolumeSizeGib int `pulumi:"userVolumeSizeGib"`
}

// GetWorkspaceWorkspacePropertyInput is an input type that accepts GetWorkspaceWorkspacePropertyArgs and GetWorkspaceWorkspacePropertyOutput values.
// You can construct a concrete instance of `GetWorkspaceWorkspacePropertyInput` via:
//
//	GetWorkspaceWorkspacePropertyArgs{...}
type GetWorkspaceWorkspacePropertyInput interface {
	pulumi.Input

	ToGetWorkspaceWorkspacePropertyOutput() GetWorkspaceWorkspacePropertyOutput
	ToGetWorkspaceWorkspacePropertyOutputWithContext(context.Context) GetWorkspaceWorkspacePropertyOutput
}

type GetWorkspaceWorkspacePropertyArgs struct {
	// Compute type. For more information, see [Amazon WorkSpaces Bundles](http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles). Valid values are `VALUE`, `STANDARD`, `PERFORMANCE`, `POWER`, `GRAPHICS`, `POWERPRO` and `GRAPHICSPRO`.
	ComputeTypeName pulumi.StringInput `pulumi:"computeTypeName"`
	// Size of the root volume.
	RootVolumeSizeGib pulumi.IntInput `pulumi:"rootVolumeSizeGib"`
	// Running mode. For more information, see [Manage the WorkSpace Running Mode](https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html). Valid values are `AUTO_STOP` and `ALWAYS_ON`.
	RunningMode pulumi.StringInput `pulumi:"runningMode"`
	// Time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals.
	RunningModeAutoStopTimeoutInMinutes pulumi.IntInput `pulumi:"runningModeAutoStopTimeoutInMinutes"`
	// Size of the user storage.
	UserVolumeSizeGib pulumi.IntInput `pulumi:"userVolumeSizeGib"`
}

func (GetWorkspaceWorkspacePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceWorkspaceProperty)(nil)).Elem()
}

func (i GetWorkspaceWorkspacePropertyArgs) ToGetWorkspaceWorkspacePropertyOutput() GetWorkspaceWorkspacePropertyOutput {
	return i.ToGetWorkspaceWorkspacePropertyOutputWithContext(context.Background())
}

func (i GetWorkspaceWorkspacePropertyArgs) ToGetWorkspaceWorkspacePropertyOutputWithContext(ctx context.Context) GetWorkspaceWorkspacePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspaceWorkspacePropertyOutput)
}

// GetWorkspaceWorkspacePropertyArrayInput is an input type that accepts GetWorkspaceWorkspacePropertyArray and GetWorkspaceWorkspacePropertyArrayOutput values.
// You can construct a concrete instance of `GetWorkspaceWorkspacePropertyArrayInput` via:
//
//	GetWorkspaceWorkspacePropertyArray{ GetWorkspaceWorkspacePropertyArgs{...} }
type GetWorkspaceWorkspacePropertyArrayInput interface {
	pulumi.Input

	ToGetWorkspaceWorkspacePropertyArrayOutput() GetWorkspaceWorkspacePropertyArrayOutput
	ToGetWorkspaceWorkspacePropertyArrayOutputWithContext(context.Context) GetWorkspaceWorkspacePropertyArrayOutput
}

type GetWorkspaceWorkspacePropertyArray []GetWorkspaceWorkspacePropertyInput

func (GetWorkspaceWorkspacePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspaceWorkspaceProperty)(nil)).Elem()
}

func (i GetWorkspaceWorkspacePropertyArray) ToGetWorkspaceWorkspacePropertyArrayOutput() GetWorkspaceWorkspacePropertyArrayOutput {
	return i.ToGetWorkspaceWorkspacePropertyArrayOutputWithContext(context.Background())
}

func (i GetWorkspaceWorkspacePropertyArray) ToGetWorkspaceWorkspacePropertyArrayOutputWithContext(ctx context.Context) GetWorkspaceWorkspacePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspaceWorkspacePropertyArrayOutput)
}

type GetWorkspaceWorkspacePropertyOutput struct{ *pulumi.OutputState }

func (GetWorkspaceWorkspacePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceWorkspaceProperty)(nil)).Elem()
}

func (o GetWorkspaceWorkspacePropertyOutput) ToGetWorkspaceWorkspacePropertyOutput() GetWorkspaceWorkspacePropertyOutput {
	return o
}

func (o GetWorkspaceWorkspacePropertyOutput) ToGetWorkspaceWorkspacePropertyOutputWithContext(ctx context.Context) GetWorkspaceWorkspacePropertyOutput {
	return o
}

// Compute type. For more information, see [Amazon WorkSpaces Bundles](http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles). Valid values are `VALUE`, `STANDARD`, `PERFORMANCE`, `POWER`, `GRAPHICS`, `POWERPRO` and `GRAPHICSPRO`.
func (o GetWorkspaceWorkspacePropertyOutput) ComputeTypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceWorkspaceProperty) string { return v.ComputeTypeName }).(pulumi.StringOutput)
}

// Size of the root volume.
func (o GetWorkspaceWorkspacePropertyOutput) RootVolumeSizeGib() pulumi.IntOutput {
	return o.ApplyT(func(v GetWorkspaceWorkspaceProperty) int { return v.RootVolumeSizeGib }).(pulumi.IntOutput)
}

// Running mode. For more information, see [Manage the WorkSpace Running Mode](https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html). Valid values are `AUTO_STOP` and `ALWAYS_ON`.
func (o GetWorkspaceWorkspacePropertyOutput) RunningMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceWorkspaceProperty) string { return v.RunningMode }).(pulumi.StringOutput)
}

// Time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals.
func (o GetWorkspaceWorkspacePropertyOutput) RunningModeAutoStopTimeoutInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetWorkspaceWorkspaceProperty) int { return v.RunningModeAutoStopTimeoutInMinutes }).(pulumi.IntOutput)
}

// Size of the user storage.
func (o GetWorkspaceWorkspacePropertyOutput) UserVolumeSizeGib() pulumi.IntOutput {
	return o.ApplyT(func(v GetWorkspaceWorkspaceProperty) int { return v.UserVolumeSizeGib }).(pulumi.IntOutput)
}

type GetWorkspaceWorkspacePropertyArrayOutput struct{ *pulumi.OutputState }

func (GetWorkspaceWorkspacePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspaceWorkspaceProperty)(nil)).Elem()
}

func (o GetWorkspaceWorkspacePropertyArrayOutput) ToGetWorkspaceWorkspacePropertyArrayOutput() GetWorkspaceWorkspacePropertyArrayOutput {
	return o
}

func (o GetWorkspaceWorkspacePropertyArrayOutput) ToGetWorkspaceWorkspacePropertyArrayOutputWithContext(ctx context.Context) GetWorkspaceWorkspacePropertyArrayOutput {
	return o
}

func (o GetWorkspaceWorkspacePropertyArrayOutput) Index(i pulumi.IntInput) GetWorkspaceWorkspacePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkspaceWorkspaceProperty {
		return vs[0].([]GetWorkspaceWorkspaceProperty)[vs[1].(int)]
	}).(GetWorkspaceWorkspacePropertyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DirectorySelfServicePermissionsInput)(nil)).Elem(), DirectorySelfServicePermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectorySelfServicePermissionsPtrInput)(nil)).Elem(), DirectorySelfServicePermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryWorkspaceAccessPropertiesInput)(nil)).Elem(), DirectoryWorkspaceAccessPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryWorkspaceAccessPropertiesPtrInput)(nil)).Elem(), DirectoryWorkspaceAccessPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryWorkspaceCreationPropertiesInput)(nil)).Elem(), DirectoryWorkspaceCreationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryWorkspaceCreationPropertiesPtrInput)(nil)).Elem(), DirectoryWorkspaceCreationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpGroupRuleInput)(nil)).Elem(), IpGroupRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpGroupRuleArrayInput)(nil)).Elem(), IpGroupRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceWorkspacePropertiesInput)(nil)).Elem(), WorkspaceWorkspacePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceWorkspacePropertiesPtrInput)(nil)).Elem(), WorkspaceWorkspacePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBundleComputeTypeInput)(nil)).Elem(), GetBundleComputeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBundleComputeTypeArrayInput)(nil)).Elem(), GetBundleComputeTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBundleRootStorageInput)(nil)).Elem(), GetBundleRootStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBundleRootStorageArrayInput)(nil)).Elem(), GetBundleRootStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBundleUserStorageInput)(nil)).Elem(), GetBundleUserStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBundleUserStorageArrayInput)(nil)).Elem(), GetBundleUserStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectorySelfServicePermissionInput)(nil)).Elem(), GetDirectorySelfServicePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectorySelfServicePermissionArrayInput)(nil)).Elem(), GetDirectorySelfServicePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryWorkspaceAccessPropertyInput)(nil)).Elem(), GetDirectoryWorkspaceAccessPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryWorkspaceAccessPropertyArrayInput)(nil)).Elem(), GetDirectoryWorkspaceAccessPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryWorkspaceCreationPropertyInput)(nil)).Elem(), GetDirectoryWorkspaceCreationPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryWorkspaceCreationPropertyArrayInput)(nil)).Elem(), GetDirectoryWorkspaceCreationPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspaceWorkspacePropertyInput)(nil)).Elem(), GetWorkspaceWorkspacePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspaceWorkspacePropertyArrayInput)(nil)).Elem(), GetWorkspaceWorkspacePropertyArray{})
	pulumi.RegisterOutputType(DirectorySelfServicePermissionsOutput{})
	pulumi.RegisterOutputType(DirectorySelfServicePermissionsPtrOutput{})
	pulumi.RegisterOutputType(DirectoryWorkspaceAccessPropertiesOutput{})
	pulumi.RegisterOutputType(DirectoryWorkspaceAccessPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DirectoryWorkspaceCreationPropertiesOutput{})
	pulumi.RegisterOutputType(DirectoryWorkspaceCreationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IpGroupRuleOutput{})
	pulumi.RegisterOutputType(IpGroupRuleArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceWorkspacePropertiesOutput{})
	pulumi.RegisterOutputType(WorkspaceWorkspacePropertiesPtrOutput{})
	pulumi.RegisterOutputType(GetBundleComputeTypeOutput{})
	pulumi.RegisterOutputType(GetBundleComputeTypeArrayOutput{})
	pulumi.RegisterOutputType(GetBundleRootStorageOutput{})
	pulumi.RegisterOutputType(GetBundleRootStorageArrayOutput{})
	pulumi.RegisterOutputType(GetBundleUserStorageOutput{})
	pulumi.RegisterOutputType(GetBundleUserStorageArrayOutput{})
	pulumi.RegisterOutputType(GetDirectorySelfServicePermissionOutput{})
	pulumi.RegisterOutputType(GetDirectorySelfServicePermissionArrayOutput{})
	pulumi.RegisterOutputType(GetDirectoryWorkspaceAccessPropertyOutput{})
	pulumi.RegisterOutputType(GetDirectoryWorkspaceAccessPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetDirectoryWorkspaceCreationPropertyOutput{})
	pulumi.RegisterOutputType(GetDirectoryWorkspaceCreationPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetWorkspaceWorkspacePropertyOutput{})
	pulumi.RegisterOutputType(GetWorkspaceWorkspacePropertyArrayOutput{})
}
