// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rekognition

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS Rekognition Collection.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/rekognition"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rekognition.NewCollection(ctx, "example", &rekognition.CollectionArgs{
//				CollectionId: pulumi.String("my-collection"),
//				Tags: pulumi.StringMap{
//					"example": pulumi.String("1"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Using `pulumi import`, import Rekognition Collection using the `example_id_arg`. For example:
//
// ```sh
// $ pulumi import aws:rekognition/collection:Collection example collection-id-12345678
// ```
type Collection struct {
	pulumi.CustomResourceState

	// ARN of the Collection.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The name of the collection
	//
	// The following arguments are optional:
	CollectionId pulumi.StringOutput `pulumi:"collectionId"`
	// The Face Model Version that the collection was initialized with
	FaceModelVersion pulumi.StringOutput `pulumi:"faceModelVersion"`
	// A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll  pulumi.StringMapOutput      `pulumi:"tagsAll"`
	Timeouts CollectionTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewCollection registers a new resource with the given unique name, arguments, and options.
func NewCollection(ctx *pulumi.Context,
	name string, args *CollectionArgs, opts ...pulumi.ResourceOption) (*Collection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CollectionId == nil {
		return nil, errors.New("invalid value for required argument 'CollectionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Collection
	err := ctx.RegisterResource("aws:rekognition/collection:Collection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCollection gets an existing Collection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCollection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CollectionState, opts ...pulumi.ResourceOption) (*Collection, error) {
	var resource Collection
	err := ctx.ReadResource("aws:rekognition/collection:Collection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Collection resources.
type collectionState struct {
	// ARN of the Collection.
	Arn *string `pulumi:"arn"`
	// The name of the collection
	//
	// The following arguments are optional:
	CollectionId *string `pulumi:"collectionId"`
	// The Face Model Version that the collection was initialized with
	FaceModelVersion *string `pulumi:"faceModelVersion"`
	// A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll  map[string]string   `pulumi:"tagsAll"`
	Timeouts *CollectionTimeouts `pulumi:"timeouts"`
}

type CollectionState struct {
	// ARN of the Collection.
	Arn pulumi.StringPtrInput
	// The name of the collection
	//
	// The following arguments are optional:
	CollectionId pulumi.StringPtrInput
	// The Face Model Version that the collection was initialized with
	FaceModelVersion pulumi.StringPtrInput
	// A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll  pulumi.StringMapInput
	Timeouts CollectionTimeoutsPtrInput
}

func (CollectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*collectionState)(nil)).Elem()
}

type collectionArgs struct {
	// The name of the collection
	//
	// The following arguments are optional:
	CollectionId string `pulumi:"collectionId"`
	// A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string   `pulumi:"tags"`
	Timeouts *CollectionTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a Collection resource.
type CollectionArgs struct {
	// The name of the collection
	//
	// The following arguments are optional:
	CollectionId pulumi.StringInput
	// A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumi.StringMapInput
	Timeouts CollectionTimeoutsPtrInput
}

func (CollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*collectionArgs)(nil)).Elem()
}

type CollectionInput interface {
	pulumi.Input

	ToCollectionOutput() CollectionOutput
	ToCollectionOutputWithContext(ctx context.Context) CollectionOutput
}

func (*Collection) ElementType() reflect.Type {
	return reflect.TypeOf((**Collection)(nil)).Elem()
}

func (i *Collection) ToCollectionOutput() CollectionOutput {
	return i.ToCollectionOutputWithContext(context.Background())
}

func (i *Collection) ToCollectionOutputWithContext(ctx context.Context) CollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionOutput)
}

// CollectionArrayInput is an input type that accepts CollectionArray and CollectionArrayOutput values.
// You can construct a concrete instance of `CollectionArrayInput` via:
//
//	CollectionArray{ CollectionArgs{...} }
type CollectionArrayInput interface {
	pulumi.Input

	ToCollectionArrayOutput() CollectionArrayOutput
	ToCollectionArrayOutputWithContext(context.Context) CollectionArrayOutput
}

type CollectionArray []CollectionInput

func (CollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Collection)(nil)).Elem()
}

func (i CollectionArray) ToCollectionArrayOutput() CollectionArrayOutput {
	return i.ToCollectionArrayOutputWithContext(context.Background())
}

func (i CollectionArray) ToCollectionArrayOutputWithContext(ctx context.Context) CollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionArrayOutput)
}

// CollectionMapInput is an input type that accepts CollectionMap and CollectionMapOutput values.
// You can construct a concrete instance of `CollectionMapInput` via:
//
//	CollectionMap{ "key": CollectionArgs{...} }
type CollectionMapInput interface {
	pulumi.Input

	ToCollectionMapOutput() CollectionMapOutput
	ToCollectionMapOutputWithContext(context.Context) CollectionMapOutput
}

type CollectionMap map[string]CollectionInput

func (CollectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Collection)(nil)).Elem()
}

func (i CollectionMap) ToCollectionMapOutput() CollectionMapOutput {
	return i.ToCollectionMapOutputWithContext(context.Background())
}

func (i CollectionMap) ToCollectionMapOutputWithContext(ctx context.Context) CollectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionMapOutput)
}

type CollectionOutput struct{ *pulumi.OutputState }

func (CollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Collection)(nil)).Elem()
}

func (o CollectionOutput) ToCollectionOutput() CollectionOutput {
	return o
}

func (o CollectionOutput) ToCollectionOutputWithContext(ctx context.Context) CollectionOutput {
	return o
}

// ARN of the Collection.
func (o CollectionOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Collection) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The name of the collection
//
// The following arguments are optional:
func (o CollectionOutput) CollectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Collection) pulumi.StringOutput { return v.CollectionId }).(pulumi.StringOutput)
}

// The Face Model Version that the collection was initialized with
func (o CollectionOutput) FaceModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Collection) pulumi.StringOutput { return v.FaceModelVersion }).(pulumi.StringOutput)
}

// A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CollectionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Collection) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o CollectionOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Collection) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o CollectionOutput) Timeouts() CollectionTimeoutsPtrOutput {
	return o.ApplyT(func(v *Collection) CollectionTimeoutsPtrOutput { return v.Timeouts }).(CollectionTimeoutsPtrOutput)
}

type CollectionArrayOutput struct{ *pulumi.OutputState }

func (CollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Collection)(nil)).Elem()
}

func (o CollectionArrayOutput) ToCollectionArrayOutput() CollectionArrayOutput {
	return o
}

func (o CollectionArrayOutput) ToCollectionArrayOutputWithContext(ctx context.Context) CollectionArrayOutput {
	return o
}

func (o CollectionArrayOutput) Index(i pulumi.IntInput) CollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Collection {
		return vs[0].([]*Collection)[vs[1].(int)]
	}).(CollectionOutput)
}

type CollectionMapOutput struct{ *pulumi.OutputState }

func (CollectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Collection)(nil)).Elem()
}

func (o CollectionMapOutput) ToCollectionMapOutput() CollectionMapOutput {
	return o
}

func (o CollectionMapOutput) ToCollectionMapOutputWithContext(ctx context.Context) CollectionMapOutput {
	return o
}

func (o CollectionMapOutput) MapIndex(k pulumi.StringInput) CollectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Collection {
		return vs[0].(map[string]*Collection)[vs[1].(string)]
	}).(CollectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionInput)(nil)).Elem(), &Collection{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionArrayInput)(nil)).Elem(), CollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionMapInput)(nil)).Elem(), CollectionMap{})
	pulumi.RegisterOutputType(CollectionOutput{})
	pulumi.RegisterOutputType(CollectionArrayOutput{})
	pulumi.RegisterOutputType(CollectionMapOutput{})
}
