// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a SageMaker data quality job definition resource.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/sagemaker"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sagemaker.NewDataQualityJobDefinition(ctx, "test", &sagemaker.DataQualityJobDefinitionArgs{
//				DataQualityAppSpecification: &sagemaker.DataQualityJobDefinitionDataQualityAppSpecificationArgs{
//					ImageUri: pulumi.Any(data.Aws_sagemaker_prebuilt_ecr_image.Monitor.Registry_path),
//				},
//				DataQualityJobInput: &sagemaker.DataQualityJobDefinitionDataQualityJobInputArgs{
//					EndpointInput: &sagemaker.DataQualityJobDefinitionDataQualityJobInputEndpointInputArgs{
//						EndpointName: pulumi.Any(aws_sagemaker_endpoint.My_endpoint.Name),
//					},
//				},
//				DataQualityJobOutputConfig: &sagemaker.DataQualityJobDefinitionDataQualityJobOutputConfigArgs{
//					MonitoringOutputs: &sagemaker.DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsArgs{
//						S3Output: sagemaker.DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputArgs{
//							S3Uri: pulumi.String(fmt.Sprintf("https://%v/output", aws_s3_bucket.My_bucket.Bucket_regional_domain_name)),
//						},
//					},
//				},
//				JobResources: &sagemaker.DataQualityJobDefinitionJobResourcesArgs{
//					ClusterConfig: &sagemaker.DataQualityJobDefinitionJobResourcesClusterConfigArgs{
//						InstanceCount:  pulumi.Int(1),
//						InstanceType:   pulumi.String("ml.t3.medium"),
//						VolumeSizeInGb: pulumi.Int(20),
//					},
//				},
//				RoleArn: pulumi.Any(aws_iam_role.My_role.Arn),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import data quality job definitions using the `name`. For example:
//
// ```sh
//
//	$ pulumi import aws:sagemaker/dataQualityJobDefinition:DataQualityJobDefinition test_data_quality_job_definition data-quality-job-definition-foo
//
// ```
type DataQualityJobDefinition struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) assigned by AWS to this data quality job definition.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Specifies the container that runs the monitoring job. Fields are documented below.
	DataQualityAppSpecification DataQualityJobDefinitionDataQualityAppSpecificationOutput `pulumi:"dataQualityAppSpecification"`
	// Configures the constraints and baselines for the monitoring job. Fields are documented below.
	DataQualityBaselineConfig DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput `pulumi:"dataQualityBaselineConfig"`
	// A list of inputs for the monitoring job. Fields are documented below.
	DataQualityJobInput DataQualityJobDefinitionDataQualityJobInputOutput `pulumi:"dataQualityJobInput"`
	// The output configuration for monitoring jobs. Fields are documented below.
	DataQualityJobOutputConfig DataQualityJobDefinitionDataQualityJobOutputConfigOutput `pulumi:"dataQualityJobOutputConfig"`
	// Identifies the resources to deploy for a monitoring job. Fields are documented below.
	JobResources DataQualityJobDefinitionJobResourcesOutput `pulumi:"jobResources"`
	// The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies networking configuration for the monitoring job. Fields are documented below.
	NetworkConfig DataQualityJobDefinitionNetworkConfigPtrOutput `pulumi:"networkConfig"`
	// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
	StoppingCondition DataQualityJobDefinitionStoppingConditionOutput `pulumi:"stoppingCondition"`
	// A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewDataQualityJobDefinition registers a new resource with the given unique name, arguments, and options.
func NewDataQualityJobDefinition(ctx *pulumi.Context,
	name string, args *DataQualityJobDefinitionArgs, opts ...pulumi.ResourceOption) (*DataQualityJobDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataQualityAppSpecification == nil {
		return nil, errors.New("invalid value for required argument 'DataQualityAppSpecification'")
	}
	if args.DataQualityJobInput == nil {
		return nil, errors.New("invalid value for required argument 'DataQualityJobInput'")
	}
	if args.DataQualityJobOutputConfig == nil {
		return nil, errors.New("invalid value for required argument 'DataQualityJobOutputConfig'")
	}
	if args.JobResources == nil {
		return nil, errors.New("invalid value for required argument 'JobResources'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"tagsAll",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DataQualityJobDefinition
	err := ctx.RegisterResource("aws:sagemaker/dataQualityJobDefinition:DataQualityJobDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataQualityJobDefinition gets an existing DataQualityJobDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataQualityJobDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataQualityJobDefinitionState, opts ...pulumi.ResourceOption) (*DataQualityJobDefinition, error) {
	var resource DataQualityJobDefinition
	err := ctx.ReadResource("aws:sagemaker/dataQualityJobDefinition:DataQualityJobDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataQualityJobDefinition resources.
type dataQualityJobDefinitionState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this data quality job definition.
	Arn *string `pulumi:"arn"`
	// Specifies the container that runs the monitoring job. Fields are documented below.
	DataQualityAppSpecification *DataQualityJobDefinitionDataQualityAppSpecification `pulumi:"dataQualityAppSpecification"`
	// Configures the constraints and baselines for the monitoring job. Fields are documented below.
	DataQualityBaselineConfig *DataQualityJobDefinitionDataQualityBaselineConfig `pulumi:"dataQualityBaselineConfig"`
	// A list of inputs for the monitoring job. Fields are documented below.
	DataQualityJobInput *DataQualityJobDefinitionDataQualityJobInput `pulumi:"dataQualityJobInput"`
	// The output configuration for monitoring jobs. Fields are documented below.
	DataQualityJobOutputConfig *DataQualityJobDefinitionDataQualityJobOutputConfig `pulumi:"dataQualityJobOutputConfig"`
	// Identifies the resources to deploy for a monitoring job. Fields are documented below.
	JobResources *DataQualityJobDefinitionJobResources `pulumi:"jobResources"`
	// The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
	Name *string `pulumi:"name"`
	// Specifies networking configuration for the monitoring job. Fields are documented below.
	NetworkConfig *DataQualityJobDefinitionNetworkConfig `pulumi:"networkConfig"`
	// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
	RoleArn *string `pulumi:"roleArn"`
	// A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
	StoppingCondition *DataQualityJobDefinitionStoppingCondition `pulumi:"stoppingCondition"`
	// A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type DataQualityJobDefinitionState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this data quality job definition.
	Arn pulumi.StringPtrInput
	// Specifies the container that runs the monitoring job. Fields are documented below.
	DataQualityAppSpecification DataQualityJobDefinitionDataQualityAppSpecificationPtrInput
	// Configures the constraints and baselines for the monitoring job. Fields are documented below.
	DataQualityBaselineConfig DataQualityJobDefinitionDataQualityBaselineConfigPtrInput
	// A list of inputs for the monitoring job. Fields are documented below.
	DataQualityJobInput DataQualityJobDefinitionDataQualityJobInputPtrInput
	// The output configuration for monitoring jobs. Fields are documented below.
	DataQualityJobOutputConfig DataQualityJobDefinitionDataQualityJobOutputConfigPtrInput
	// Identifies the resources to deploy for a monitoring job. Fields are documented below.
	JobResources DataQualityJobDefinitionJobResourcesPtrInput
	// The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
	Name pulumi.StringPtrInput
	// Specifies networking configuration for the monitoring job. Fields are documented below.
	NetworkConfig DataQualityJobDefinitionNetworkConfigPtrInput
	// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
	RoleArn pulumi.StringPtrInput
	// A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
	StoppingCondition DataQualityJobDefinitionStoppingConditionPtrInput
	// A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
}

func (DataQualityJobDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataQualityJobDefinitionState)(nil)).Elem()
}

type dataQualityJobDefinitionArgs struct {
	// Specifies the container that runs the monitoring job. Fields are documented below.
	DataQualityAppSpecification DataQualityJobDefinitionDataQualityAppSpecification `pulumi:"dataQualityAppSpecification"`
	// Configures the constraints and baselines for the monitoring job. Fields are documented below.
	DataQualityBaselineConfig *DataQualityJobDefinitionDataQualityBaselineConfig `pulumi:"dataQualityBaselineConfig"`
	// A list of inputs for the monitoring job. Fields are documented below.
	DataQualityJobInput DataQualityJobDefinitionDataQualityJobInput `pulumi:"dataQualityJobInput"`
	// The output configuration for monitoring jobs. Fields are documented below.
	DataQualityJobOutputConfig DataQualityJobDefinitionDataQualityJobOutputConfig `pulumi:"dataQualityJobOutputConfig"`
	// Identifies the resources to deploy for a monitoring job. Fields are documented below.
	JobResources DataQualityJobDefinitionJobResources `pulumi:"jobResources"`
	// The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
	Name *string `pulumi:"name"`
	// Specifies networking configuration for the monitoring job. Fields are documented below.
	NetworkConfig *DataQualityJobDefinitionNetworkConfig `pulumi:"networkConfig"`
	// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
	RoleArn string `pulumi:"roleArn"`
	// A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
	StoppingCondition *DataQualityJobDefinitionStoppingCondition `pulumi:"stoppingCondition"`
	// A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DataQualityJobDefinition resource.
type DataQualityJobDefinitionArgs struct {
	// Specifies the container that runs the monitoring job. Fields are documented below.
	DataQualityAppSpecification DataQualityJobDefinitionDataQualityAppSpecificationInput
	// Configures the constraints and baselines for the monitoring job. Fields are documented below.
	DataQualityBaselineConfig DataQualityJobDefinitionDataQualityBaselineConfigPtrInput
	// A list of inputs for the monitoring job. Fields are documented below.
	DataQualityJobInput DataQualityJobDefinitionDataQualityJobInputInput
	// The output configuration for monitoring jobs. Fields are documented below.
	DataQualityJobOutputConfig DataQualityJobDefinitionDataQualityJobOutputConfigInput
	// Identifies the resources to deploy for a monitoring job. Fields are documented below.
	JobResources DataQualityJobDefinitionJobResourcesInput
	// The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
	Name pulumi.StringPtrInput
	// Specifies networking configuration for the monitoring job. Fields are documented below.
	NetworkConfig DataQualityJobDefinitionNetworkConfigPtrInput
	// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
	RoleArn pulumi.StringInput
	// A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
	StoppingCondition DataQualityJobDefinitionStoppingConditionPtrInput
	// A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (DataQualityJobDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataQualityJobDefinitionArgs)(nil)).Elem()
}

type DataQualityJobDefinitionInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionOutput() DataQualityJobDefinitionOutput
	ToDataQualityJobDefinitionOutputWithContext(ctx context.Context) DataQualityJobDefinitionOutput
}

func (*DataQualityJobDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinition)(nil)).Elem()
}

func (i *DataQualityJobDefinition) ToDataQualityJobDefinitionOutput() DataQualityJobDefinitionOutput {
	return i.ToDataQualityJobDefinitionOutputWithContext(context.Background())
}

func (i *DataQualityJobDefinition) ToDataQualityJobDefinitionOutputWithContext(ctx context.Context) DataQualityJobDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionOutput)
}

func (i *DataQualityJobDefinition) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinition] {
	return pulumix.Output[*DataQualityJobDefinition]{
		OutputState: i.ToDataQualityJobDefinitionOutputWithContext(ctx).OutputState,
	}
}

// DataQualityJobDefinitionArrayInput is an input type that accepts DataQualityJobDefinitionArray and DataQualityJobDefinitionArrayOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionArrayInput` via:
//
//	DataQualityJobDefinitionArray{ DataQualityJobDefinitionArgs{...} }
type DataQualityJobDefinitionArrayInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionArrayOutput() DataQualityJobDefinitionArrayOutput
	ToDataQualityJobDefinitionArrayOutputWithContext(context.Context) DataQualityJobDefinitionArrayOutput
}

type DataQualityJobDefinitionArray []DataQualityJobDefinitionInput

func (DataQualityJobDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataQualityJobDefinition)(nil)).Elem()
}

func (i DataQualityJobDefinitionArray) ToDataQualityJobDefinitionArrayOutput() DataQualityJobDefinitionArrayOutput {
	return i.ToDataQualityJobDefinitionArrayOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionArray) ToDataQualityJobDefinitionArrayOutputWithContext(ctx context.Context) DataQualityJobDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionArrayOutput)
}

func (i DataQualityJobDefinitionArray) ToOutput(ctx context.Context) pulumix.Output[[]*DataQualityJobDefinition] {
	return pulumix.Output[[]*DataQualityJobDefinition]{
		OutputState: i.ToDataQualityJobDefinitionArrayOutputWithContext(ctx).OutputState,
	}
}

// DataQualityJobDefinitionMapInput is an input type that accepts DataQualityJobDefinitionMap and DataQualityJobDefinitionMapOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionMapInput` via:
//
//	DataQualityJobDefinitionMap{ "key": DataQualityJobDefinitionArgs{...} }
type DataQualityJobDefinitionMapInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionMapOutput() DataQualityJobDefinitionMapOutput
	ToDataQualityJobDefinitionMapOutputWithContext(context.Context) DataQualityJobDefinitionMapOutput
}

type DataQualityJobDefinitionMap map[string]DataQualityJobDefinitionInput

func (DataQualityJobDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataQualityJobDefinition)(nil)).Elem()
}

func (i DataQualityJobDefinitionMap) ToDataQualityJobDefinitionMapOutput() DataQualityJobDefinitionMapOutput {
	return i.ToDataQualityJobDefinitionMapOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionMap) ToDataQualityJobDefinitionMapOutputWithContext(ctx context.Context) DataQualityJobDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionMapOutput)
}

func (i DataQualityJobDefinitionMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*DataQualityJobDefinition] {
	return pulumix.Output[map[string]*DataQualityJobDefinition]{
		OutputState: i.ToDataQualityJobDefinitionMapOutputWithContext(ctx).OutputState,
	}
}

type DataQualityJobDefinitionOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinition)(nil)).Elem()
}

func (o DataQualityJobDefinitionOutput) ToDataQualityJobDefinitionOutput() DataQualityJobDefinitionOutput {
	return o
}

func (o DataQualityJobDefinitionOutput) ToDataQualityJobDefinitionOutputWithContext(ctx context.Context) DataQualityJobDefinitionOutput {
	return o
}

func (o DataQualityJobDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinition] {
	return pulumix.Output[*DataQualityJobDefinition]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) assigned by AWS to this data quality job definition.
func (o DataQualityJobDefinitionOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Specifies the container that runs the monitoring job. Fields are documented below.
func (o DataQualityJobDefinitionOutput) DataQualityAppSpecification() DataQualityJobDefinitionDataQualityAppSpecificationOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) DataQualityJobDefinitionDataQualityAppSpecificationOutput {
		return v.DataQualityAppSpecification
	}).(DataQualityJobDefinitionDataQualityAppSpecificationOutput)
}

// Configures the constraints and baselines for the monitoring job. Fields are documented below.
func (o DataQualityJobDefinitionOutput) DataQualityBaselineConfig() DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput {
		return v.DataQualityBaselineConfig
	}).(DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput)
}

// A list of inputs for the monitoring job. Fields are documented below.
func (o DataQualityJobDefinitionOutput) DataQualityJobInput() DataQualityJobDefinitionDataQualityJobInputOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) DataQualityJobDefinitionDataQualityJobInputOutput {
		return v.DataQualityJobInput
	}).(DataQualityJobDefinitionDataQualityJobInputOutput)
}

// The output configuration for monitoring jobs. Fields are documented below.
func (o DataQualityJobDefinitionOutput) DataQualityJobOutputConfig() DataQualityJobDefinitionDataQualityJobOutputConfigOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) DataQualityJobDefinitionDataQualityJobOutputConfigOutput {
		return v.DataQualityJobOutputConfig
	}).(DataQualityJobDefinitionDataQualityJobOutputConfigOutput)
}

// Identifies the resources to deploy for a monitoring job. Fields are documented below.
func (o DataQualityJobDefinitionOutput) JobResources() DataQualityJobDefinitionJobResourcesOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) DataQualityJobDefinitionJobResourcesOutput { return v.JobResources }).(DataQualityJobDefinitionJobResourcesOutput)
}

// The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
func (o DataQualityJobDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies networking configuration for the monitoring job. Fields are documented below.
func (o DataQualityJobDefinitionOutput) NetworkConfig() DataQualityJobDefinitionNetworkConfigPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) DataQualityJobDefinitionNetworkConfigPtrOutput {
		return v.NetworkConfig
	}).(DataQualityJobDefinitionNetworkConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
func (o DataQualityJobDefinitionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
func (o DataQualityJobDefinitionOutput) StoppingCondition() DataQualityJobDefinitionStoppingConditionOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) DataQualityJobDefinitionStoppingConditionOutput {
		return v.StoppingCondition
	}).(DataQualityJobDefinitionStoppingConditionOutput)
}

// A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DataQualityJobDefinitionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o DataQualityJobDefinitionOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type DataQualityJobDefinitionArrayOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataQualityJobDefinition)(nil)).Elem()
}

func (o DataQualityJobDefinitionArrayOutput) ToDataQualityJobDefinitionArrayOutput() DataQualityJobDefinitionArrayOutput {
	return o
}

func (o DataQualityJobDefinitionArrayOutput) ToDataQualityJobDefinitionArrayOutputWithContext(ctx context.Context) DataQualityJobDefinitionArrayOutput {
	return o
}

func (o DataQualityJobDefinitionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*DataQualityJobDefinition] {
	return pulumix.Output[[]*DataQualityJobDefinition]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionArrayOutput) Index(i pulumi.IntInput) DataQualityJobDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DataQualityJobDefinition {
		return vs[0].([]*DataQualityJobDefinition)[vs[1].(int)]
	}).(DataQualityJobDefinitionOutput)
}

type DataQualityJobDefinitionMapOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataQualityJobDefinition)(nil)).Elem()
}

func (o DataQualityJobDefinitionMapOutput) ToDataQualityJobDefinitionMapOutput() DataQualityJobDefinitionMapOutput {
	return o
}

func (o DataQualityJobDefinitionMapOutput) ToDataQualityJobDefinitionMapOutputWithContext(ctx context.Context) DataQualityJobDefinitionMapOutput {
	return o
}

func (o DataQualityJobDefinitionMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*DataQualityJobDefinition] {
	return pulumix.Output[map[string]*DataQualityJobDefinition]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionMapOutput) MapIndex(k pulumi.StringInput) DataQualityJobDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DataQualityJobDefinition {
		return vs[0].(map[string]*DataQualityJobDefinition)[vs[1].(string)]
	}).(DataQualityJobDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionInput)(nil)).Elem(), &DataQualityJobDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionArrayInput)(nil)).Elem(), DataQualityJobDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionMapInput)(nil)).Elem(), DataQualityJobDefinitionMap{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionArrayOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionMapOutput{})
}
