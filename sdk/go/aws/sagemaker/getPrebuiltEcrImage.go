// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetPrebuiltEcrImage(ctx *pulumi.Context, args *GetPrebuiltEcrImageArgs, opts ...pulumi.InvokeOption) (*GetPrebuiltEcrImageResult, error) {
	var rv GetPrebuiltEcrImageResult
	err := ctx.Invoke("aws:sagemaker/getPrebuiltEcrImage:getPrebuiltEcrImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrebuiltEcrImage.
type GetPrebuiltEcrImageArgs struct {
	DnsSuffix      *string `pulumi:"dnsSuffix"`
	ImageTag       *string `pulumi:"imageTag"`
	Region         *string `pulumi:"region"`
	RepositoryName string  `pulumi:"repositoryName"`
}

// A collection of values returned by getPrebuiltEcrImage.
type GetPrebuiltEcrImageResult struct {
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// The provider-assigned unique ID for this managed resource.
	Id             string  `pulumi:"id"`
	ImageTag       *string `pulumi:"imageTag"`
	Region         *string `pulumi:"region"`
	RegistryId     string  `pulumi:"registryId"`
	RegistryPath   string  `pulumi:"registryPath"`
	RepositoryName string  `pulumi:"repositoryName"`
}

func GetPrebuiltEcrImageOutput(ctx *pulumi.Context, args GetPrebuiltEcrImageOutputArgs, opts ...pulumi.InvokeOption) GetPrebuiltEcrImageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPrebuiltEcrImageResult, error) {
			args := v.(GetPrebuiltEcrImageArgs)
			r, err := GetPrebuiltEcrImage(ctx, &args, opts...)
			var s GetPrebuiltEcrImageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPrebuiltEcrImageResultOutput)
}

// A collection of arguments for invoking getPrebuiltEcrImage.
type GetPrebuiltEcrImageOutputArgs struct {
	DnsSuffix      pulumi.StringPtrInput `pulumi:"dnsSuffix"`
	ImageTag       pulumi.StringPtrInput `pulumi:"imageTag"`
	Region         pulumi.StringPtrInput `pulumi:"region"`
	RepositoryName pulumi.StringInput    `pulumi:"repositoryName"`
}

func (GetPrebuiltEcrImageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrebuiltEcrImageArgs)(nil)).Elem()
}

// A collection of values returned by getPrebuiltEcrImage.
type GetPrebuiltEcrImageResultOutput struct{ *pulumi.OutputState }

func (GetPrebuiltEcrImageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrebuiltEcrImageResult)(nil)).Elem()
}

func (o GetPrebuiltEcrImageResultOutput) ToGetPrebuiltEcrImageResultOutput() GetPrebuiltEcrImageResultOutput {
	return o
}

func (o GetPrebuiltEcrImageResultOutput) ToGetPrebuiltEcrImageResultOutputWithContext(ctx context.Context) GetPrebuiltEcrImageResultOutput {
	return o
}

func (o GetPrebuiltEcrImageResultOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPrebuiltEcrImageResult) *string { return v.DnsSuffix }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPrebuiltEcrImageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrebuiltEcrImageResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPrebuiltEcrImageResultOutput) ImageTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPrebuiltEcrImageResult) *string { return v.ImageTag }).(pulumi.StringPtrOutput)
}

func (o GetPrebuiltEcrImageResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPrebuiltEcrImageResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetPrebuiltEcrImageResultOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrebuiltEcrImageResult) string { return v.RegistryId }).(pulumi.StringOutput)
}

func (o GetPrebuiltEcrImageResultOutput) RegistryPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrebuiltEcrImageResult) string { return v.RegistryPath }).(pulumi.StringOutput)
}

func (o GetPrebuiltEcrImageResultOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrebuiltEcrImageResult) string { return v.RepositoryName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPrebuiltEcrImageResultOutput{})
}
