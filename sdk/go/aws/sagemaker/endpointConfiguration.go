// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EndpointConfiguration struct {
	pulumi.CustomResourceState

	Arn                      pulumi.StringOutput                                     `pulumi:"arn"`
	AsyncInferenceConfig     EndpointConfigurationAsyncInferenceConfigPtrOutput      `pulumi:"asyncInferenceConfig"`
	DataCaptureConfig        EndpointConfigurationDataCaptureConfigPtrOutput         `pulumi:"dataCaptureConfig"`
	KmsKeyArn                pulumi.StringPtrOutput                                  `pulumi:"kmsKeyArn"`
	Name                     pulumi.StringOutput                                     `pulumi:"name"`
	ProductionVariants       EndpointConfigurationProductionVariantArrayOutput       `pulumi:"productionVariants"`
	ShadowProductionVariants EndpointConfigurationShadowProductionVariantArrayOutput `pulumi:"shadowProductionVariants"`
	Tags                     pulumi.StringMapOutput                                  `pulumi:"tags"`
	TagsAll                  pulumi.StringMapOutput                                  `pulumi:"tagsAll"`
}

// NewEndpointConfiguration registers a new resource with the given unique name, arguments, and options.
func NewEndpointConfiguration(ctx *pulumi.Context,
	name string, args *EndpointConfigurationArgs, opts ...pulumi.ResourceOption) (*EndpointConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProductionVariants == nil {
		return nil, errors.New("invalid value for required argument 'ProductionVariants'")
	}
	var resource EndpointConfiguration
	err := ctx.RegisterResource("aws:sagemaker/endpointConfiguration:EndpointConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointConfiguration gets an existing EndpointConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointConfigurationState, opts ...pulumi.ResourceOption) (*EndpointConfiguration, error) {
	var resource EndpointConfiguration
	err := ctx.ReadResource("aws:sagemaker/endpointConfiguration:EndpointConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointConfiguration resources.
type endpointConfigurationState struct {
	Arn                      *string                                        `pulumi:"arn"`
	AsyncInferenceConfig     *EndpointConfigurationAsyncInferenceConfig     `pulumi:"asyncInferenceConfig"`
	DataCaptureConfig        *EndpointConfigurationDataCaptureConfig        `pulumi:"dataCaptureConfig"`
	KmsKeyArn                *string                                        `pulumi:"kmsKeyArn"`
	Name                     *string                                        `pulumi:"name"`
	ProductionVariants       []EndpointConfigurationProductionVariant       `pulumi:"productionVariants"`
	ShadowProductionVariants []EndpointConfigurationShadowProductionVariant `pulumi:"shadowProductionVariants"`
	Tags                     map[string]string                              `pulumi:"tags"`
	TagsAll                  map[string]string                              `pulumi:"tagsAll"`
}

type EndpointConfigurationState struct {
	Arn                      pulumi.StringPtrInput
	AsyncInferenceConfig     EndpointConfigurationAsyncInferenceConfigPtrInput
	DataCaptureConfig        EndpointConfigurationDataCaptureConfigPtrInput
	KmsKeyArn                pulumi.StringPtrInput
	Name                     pulumi.StringPtrInput
	ProductionVariants       EndpointConfigurationProductionVariantArrayInput
	ShadowProductionVariants EndpointConfigurationShadowProductionVariantArrayInput
	Tags                     pulumi.StringMapInput
	TagsAll                  pulumi.StringMapInput
}

func (EndpointConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointConfigurationState)(nil)).Elem()
}

type endpointConfigurationArgs struct {
	AsyncInferenceConfig     *EndpointConfigurationAsyncInferenceConfig     `pulumi:"asyncInferenceConfig"`
	DataCaptureConfig        *EndpointConfigurationDataCaptureConfig        `pulumi:"dataCaptureConfig"`
	KmsKeyArn                *string                                        `pulumi:"kmsKeyArn"`
	Name                     *string                                        `pulumi:"name"`
	ProductionVariants       []EndpointConfigurationProductionVariant       `pulumi:"productionVariants"`
	ShadowProductionVariants []EndpointConfigurationShadowProductionVariant `pulumi:"shadowProductionVariants"`
	Tags                     map[string]string                              `pulumi:"tags"`
}

// The set of arguments for constructing a EndpointConfiguration resource.
type EndpointConfigurationArgs struct {
	AsyncInferenceConfig     EndpointConfigurationAsyncInferenceConfigPtrInput
	DataCaptureConfig        EndpointConfigurationDataCaptureConfigPtrInput
	KmsKeyArn                pulumi.StringPtrInput
	Name                     pulumi.StringPtrInput
	ProductionVariants       EndpointConfigurationProductionVariantArrayInput
	ShadowProductionVariants EndpointConfigurationShadowProductionVariantArrayInput
	Tags                     pulumi.StringMapInput
}

func (EndpointConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointConfigurationArgs)(nil)).Elem()
}

type EndpointConfigurationInput interface {
	pulumi.Input

	ToEndpointConfigurationOutput() EndpointConfigurationOutput
	ToEndpointConfigurationOutputWithContext(ctx context.Context) EndpointConfigurationOutput
}

func (*EndpointConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfiguration)(nil)).Elem()
}

func (i *EndpointConfiguration) ToEndpointConfigurationOutput() EndpointConfigurationOutput {
	return i.ToEndpointConfigurationOutputWithContext(context.Background())
}

func (i *EndpointConfiguration) ToEndpointConfigurationOutputWithContext(ctx context.Context) EndpointConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOutput)
}

// EndpointConfigurationArrayInput is an input type that accepts EndpointConfigurationArray and EndpointConfigurationArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationArrayInput` via:
//
//	EndpointConfigurationArray{ EndpointConfigurationArgs{...} }
type EndpointConfigurationArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationArrayOutput() EndpointConfigurationArrayOutput
	ToEndpointConfigurationArrayOutputWithContext(context.Context) EndpointConfigurationArrayOutput
}

type EndpointConfigurationArray []EndpointConfigurationInput

func (EndpointConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointConfiguration)(nil)).Elem()
}

func (i EndpointConfigurationArray) ToEndpointConfigurationArrayOutput() EndpointConfigurationArrayOutput {
	return i.ToEndpointConfigurationArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationArray) ToEndpointConfigurationArrayOutputWithContext(ctx context.Context) EndpointConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationArrayOutput)
}

// EndpointConfigurationMapInput is an input type that accepts EndpointConfigurationMap and EndpointConfigurationMapOutput values.
// You can construct a concrete instance of `EndpointConfigurationMapInput` via:
//
//	EndpointConfigurationMap{ "key": EndpointConfigurationArgs{...} }
type EndpointConfigurationMapInput interface {
	pulumi.Input

	ToEndpointConfigurationMapOutput() EndpointConfigurationMapOutput
	ToEndpointConfigurationMapOutputWithContext(context.Context) EndpointConfigurationMapOutput
}

type EndpointConfigurationMap map[string]EndpointConfigurationInput

func (EndpointConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointConfiguration)(nil)).Elem()
}

func (i EndpointConfigurationMap) ToEndpointConfigurationMapOutput() EndpointConfigurationMapOutput {
	return i.ToEndpointConfigurationMapOutputWithContext(context.Background())
}

func (i EndpointConfigurationMap) ToEndpointConfigurationMapOutputWithContext(ctx context.Context) EndpointConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationMapOutput)
}

type EndpointConfigurationOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfiguration)(nil)).Elem()
}

func (o EndpointConfigurationOutput) ToEndpointConfigurationOutput() EndpointConfigurationOutput {
	return o
}

func (o EndpointConfigurationOutput) ToEndpointConfigurationOutputWithContext(ctx context.Context) EndpointConfigurationOutput {
	return o
}

func (o EndpointConfigurationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointConfiguration) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o EndpointConfigurationOutput) AsyncInferenceConfig() EndpointConfigurationAsyncInferenceConfigPtrOutput {
	return o.ApplyT(func(v *EndpointConfiguration) EndpointConfigurationAsyncInferenceConfigPtrOutput {
		return v.AsyncInferenceConfig
	}).(EndpointConfigurationAsyncInferenceConfigPtrOutput)
}

func (o EndpointConfigurationOutput) DataCaptureConfig() EndpointConfigurationDataCaptureConfigPtrOutput {
	return o.ApplyT(func(v *EndpointConfiguration) EndpointConfigurationDataCaptureConfigPtrOutput {
		return v.DataCaptureConfig
	}).(EndpointConfigurationDataCaptureConfigPtrOutput)
}

func (o EndpointConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfiguration) pulumi.StringPtrOutput { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o EndpointConfigurationOutput) ProductionVariants() EndpointConfigurationProductionVariantArrayOutput {
	return o.ApplyT(func(v *EndpointConfiguration) EndpointConfigurationProductionVariantArrayOutput {
		return v.ProductionVariants
	}).(EndpointConfigurationProductionVariantArrayOutput)
}

func (o EndpointConfigurationOutput) ShadowProductionVariants() EndpointConfigurationShadowProductionVariantArrayOutput {
	return o.ApplyT(func(v *EndpointConfiguration) EndpointConfigurationShadowProductionVariantArrayOutput {
		return v.ShadowProductionVariants
	}).(EndpointConfigurationShadowProductionVariantArrayOutput)
}

func (o EndpointConfigurationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EndpointConfiguration) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o EndpointConfigurationOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EndpointConfiguration) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type EndpointConfigurationArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointConfiguration)(nil)).Elem()
}

func (o EndpointConfigurationArrayOutput) ToEndpointConfigurationArrayOutput() EndpointConfigurationArrayOutput {
	return o
}

func (o EndpointConfigurationArrayOutput) ToEndpointConfigurationArrayOutputWithContext(ctx context.Context) EndpointConfigurationArrayOutput {
	return o
}

func (o EndpointConfigurationArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EndpointConfiguration {
		return vs[0].([]*EndpointConfiguration)[vs[1].(int)]
	}).(EndpointConfigurationOutput)
}

type EndpointConfigurationMapOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointConfiguration)(nil)).Elem()
}

func (o EndpointConfigurationMapOutput) ToEndpointConfigurationMapOutput() EndpointConfigurationMapOutput {
	return o
}

func (o EndpointConfigurationMapOutput) ToEndpointConfigurationMapOutputWithContext(ctx context.Context) EndpointConfigurationMapOutput {
	return o
}

func (o EndpointConfigurationMapOutput) MapIndex(k pulumi.StringInput) EndpointConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EndpointConfiguration {
		return vs[0].(map[string]*EndpointConfiguration)[vs[1].(string)]
	}).(EndpointConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationInput)(nil)).Elem(), &EndpointConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationArrayInput)(nil)).Elem(), EndpointConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationMapInput)(nil)).Elem(), EndpointConfigurationMap{})
	pulumi.RegisterOutputType(EndpointConfigurationOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationMapOutput{})
}
