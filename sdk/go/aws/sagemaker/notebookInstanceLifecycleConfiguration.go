// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a lifecycle configuration for SageMaker Notebook Instances.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/sagemaker_notebook_instance_lifecycle_configuration.html.markdown.
type NotebookInstanceLifecycleConfiguration struct {
	s *pulumi.ResourceState
}

// NewNotebookInstanceLifecycleConfiguration registers a new resource with the given unique name, arguments, and options.
func NewNotebookInstanceLifecycleConfiguration(ctx *pulumi.Context,
	name string, args *NotebookInstanceLifecycleConfigurationArgs, opts ...pulumi.ResourceOpt) (*NotebookInstanceLifecycleConfiguration, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["name"] = nil
		inputs["onCreate"] = nil
		inputs["onStart"] = nil
	} else {
		inputs["name"] = args.Name
		inputs["onCreate"] = args.OnCreate
		inputs["onStart"] = args.OnStart
	}
	inputs["arn"] = nil
	s, err := ctx.RegisterResource("aws:sagemaker/notebookInstanceLifecycleConfiguration:NotebookInstanceLifecycleConfiguration", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NotebookInstanceLifecycleConfiguration{s: s}, nil
}

// GetNotebookInstanceLifecycleConfiguration gets an existing NotebookInstanceLifecycleConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNotebookInstanceLifecycleConfiguration(ctx *pulumi.Context,
	name string, id pulumi.ID, state *NotebookInstanceLifecycleConfigurationState, opts ...pulumi.ResourceOpt) (*NotebookInstanceLifecycleConfiguration, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["name"] = state.Name
		inputs["onCreate"] = state.OnCreate
		inputs["onStart"] = state.OnStart
	}
	s, err := ctx.ReadResource("aws:sagemaker/notebookInstanceLifecycleConfiguration:NotebookInstanceLifecycleConfiguration", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NotebookInstanceLifecycleConfiguration{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *NotebookInstanceLifecycleConfiguration) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *NotebookInstanceLifecycleConfiguration) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The Amazon Resource Name (ARN) assigned by AWS to this lifecycle configuration.
func (r *NotebookInstanceLifecycleConfiguration) Arn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["arn"])
}

// The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
func (r *NotebookInstanceLifecycleConfiguration) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// A shell script (base64-encoded) that runs only once when the SageMaker Notebook Instance is created.
func (r *NotebookInstanceLifecycleConfiguration) OnCreate() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["onCreate"])
}

// A shell script (base64-encoded) that runs every time the SageMaker Notebook Instance is started including the time it's created.
func (r *NotebookInstanceLifecycleConfiguration) OnStart() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["onStart"])
}

// Input properties used for looking up and filtering NotebookInstanceLifecycleConfiguration resources.
type NotebookInstanceLifecycleConfigurationState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this lifecycle configuration.
	Arn interface{}
	// The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
	Name interface{}
	// A shell script (base64-encoded) that runs only once when the SageMaker Notebook Instance is created.
	OnCreate interface{}
	// A shell script (base64-encoded) that runs every time the SageMaker Notebook Instance is started including the time it's created.
	OnStart interface{}
}

// The set of arguments for constructing a NotebookInstanceLifecycleConfiguration resource.
type NotebookInstanceLifecycleConfigurationArgs struct {
	// The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
	Name interface{}
	// A shell script (base64-encoded) that runs only once when the SageMaker Notebook Instance is created.
	OnCreate interface{}
	// A shell script (base64-encoded) that runs every time the SageMaker Notebook Instance is started including the time it's created.
	OnStart interface{}
}
