// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "aws:sagemaker/app:App":
		r = &App{}
	case "aws:sagemaker/appImageConfig:AppImageConfig":
		r = &AppImageConfig{}
	case "aws:sagemaker/codeRepository:CodeRepository":
		r = &CodeRepository{}
	case "aws:sagemaker/dataQualityJobDefinition:DataQualityJobDefinition":
		r = &DataQualityJobDefinition{}
	case "aws:sagemaker/device:Device":
		r = &Device{}
	case "aws:sagemaker/deviceFleet:DeviceFleet":
		r = &DeviceFleet{}
	case "aws:sagemaker/domain:Domain":
		r = &Domain{}
	case "aws:sagemaker/endpoint:Endpoint":
		r = &Endpoint{}
	case "aws:sagemaker/endpointConfiguration:EndpointConfiguration":
		r = &EndpointConfiguration{}
	case "aws:sagemaker/featureGroup:FeatureGroup":
		r = &FeatureGroup{}
	case "aws:sagemaker/flowDefinition:FlowDefinition":
		r = &FlowDefinition{}
	case "aws:sagemaker/humanTaskUI:HumanTaskUI":
		r = &HumanTaskUI{}
	case "aws:sagemaker/image:Image":
		r = &Image{}
	case "aws:sagemaker/imageVersion:ImageVersion":
		r = &ImageVersion{}
	case "aws:sagemaker/model:Model":
		r = &Model{}
	case "aws:sagemaker/modelPackageGroup:ModelPackageGroup":
		r = &ModelPackageGroup{}
	case "aws:sagemaker/modelPackageGroupPolicy:ModelPackageGroupPolicy":
		r = &ModelPackageGroupPolicy{}
	case "aws:sagemaker/monitoringSchedule:MonitoringSchedule":
		r = &MonitoringSchedule{}
	case "aws:sagemaker/notebookInstance:NotebookInstance":
		r = &NotebookInstance{}
	case "aws:sagemaker/notebookInstanceLifecycleConfiguration:NotebookInstanceLifecycleConfiguration":
		r = &NotebookInstanceLifecycleConfiguration{}
	case "aws:sagemaker/project:Project":
		r = &Project{}
	case "aws:sagemaker/servicecatalogPortfolioStatus:ServicecatalogPortfolioStatus":
		r = &ServicecatalogPortfolioStatus{}
	case "aws:sagemaker/space:Space":
		r = &Space{}
	case "aws:sagemaker/studioLifecycleConfig:StudioLifecycleConfig":
		r = &StudioLifecycleConfig{}
	case "aws:sagemaker/userProfile:UserProfile":
		r = &UserProfile{}
	case "aws:sagemaker/workforce:Workforce":
		r = &Workforce{}
	case "aws:sagemaker/workteam:Workteam":
		r = &Workteam{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := aws.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/app",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/appImageConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/codeRepository",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/dataQualityJobDefinition",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/device",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/deviceFleet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/domain",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/endpoint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/endpointConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/featureGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/flowDefinition",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/humanTaskUI",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/image",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/imageVersion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/model",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/modelPackageGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/modelPackageGroupPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/monitoringSchedule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/notebookInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/notebookInstanceLifecycleConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/project",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/servicecatalogPortfolioStatus",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/space",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/studioLifecycleConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/userProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/workforce",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"sagemaker/workteam",
		&module{version},
	)
}
