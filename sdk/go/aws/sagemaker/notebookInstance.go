// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NotebookInstance struct {
	pulumi.CustomResourceState

	AcceleratorTypes                     pulumi.StringArrayOutput                                      `pulumi:"acceleratorTypes"`
	AdditionalCodeRepositories           pulumi.StringArrayOutput                                      `pulumi:"additionalCodeRepositories"`
	Arn                                  pulumi.StringOutput                                           `pulumi:"arn"`
	DefaultCodeRepository                pulumi.StringPtrOutput                                        `pulumi:"defaultCodeRepository"`
	DirectInternetAccess                 pulumi.StringPtrOutput                                        `pulumi:"directInternetAccess"`
	InstanceMetadataServiceConfiguration NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput `pulumi:"instanceMetadataServiceConfiguration"`
	InstanceType                         pulumi.StringOutput                                           `pulumi:"instanceType"`
	KmsKeyId                             pulumi.StringPtrOutput                                        `pulumi:"kmsKeyId"`
	LifecycleConfigName                  pulumi.StringPtrOutput                                        `pulumi:"lifecycleConfigName"`
	Name                                 pulumi.StringOutput                                           `pulumi:"name"`
	NetworkInterfaceId                   pulumi.StringOutput                                           `pulumi:"networkInterfaceId"`
	PlatformIdentifier                   pulumi.StringOutput                                           `pulumi:"platformIdentifier"`
	RoleArn                              pulumi.StringOutput                                           `pulumi:"roleArn"`
	RootAccess                           pulumi.StringPtrOutput                                        `pulumi:"rootAccess"`
	SecurityGroups                       pulumi.StringArrayOutput                                      `pulumi:"securityGroups"`
	SubnetId                             pulumi.StringPtrOutput                                        `pulumi:"subnetId"`
	Tags                                 pulumi.StringMapOutput                                        `pulumi:"tags"`
	TagsAll                              pulumi.StringMapOutput                                        `pulumi:"tagsAll"`
	Url                                  pulumi.StringOutput                                           `pulumi:"url"`
	VolumeSize                           pulumi.IntPtrOutput                                           `pulumi:"volumeSize"`
}

// NewNotebookInstance registers a new resource with the given unique name, arguments, and options.
func NewNotebookInstance(ctx *pulumi.Context,
	name string, args *NotebookInstanceArgs, opts ...pulumi.ResourceOption) (*NotebookInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	var resource NotebookInstance
	err := ctx.RegisterResource("aws:sagemaker/notebookInstance:NotebookInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNotebookInstance gets an existing NotebookInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNotebookInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NotebookInstanceState, opts ...pulumi.ResourceOption) (*NotebookInstance, error) {
	var resource NotebookInstance
	err := ctx.ReadResource("aws:sagemaker/notebookInstance:NotebookInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NotebookInstance resources.
type notebookInstanceState struct {
	AcceleratorTypes                     []string                                              `pulumi:"acceleratorTypes"`
	AdditionalCodeRepositories           []string                                              `pulumi:"additionalCodeRepositories"`
	Arn                                  *string                                               `pulumi:"arn"`
	DefaultCodeRepository                *string                                               `pulumi:"defaultCodeRepository"`
	DirectInternetAccess                 *string                                               `pulumi:"directInternetAccess"`
	InstanceMetadataServiceConfiguration *NotebookInstanceInstanceMetadataServiceConfiguration `pulumi:"instanceMetadataServiceConfiguration"`
	InstanceType                         *string                                               `pulumi:"instanceType"`
	KmsKeyId                             *string                                               `pulumi:"kmsKeyId"`
	LifecycleConfigName                  *string                                               `pulumi:"lifecycleConfigName"`
	Name                                 *string                                               `pulumi:"name"`
	NetworkInterfaceId                   *string                                               `pulumi:"networkInterfaceId"`
	PlatformIdentifier                   *string                                               `pulumi:"platformIdentifier"`
	RoleArn                              *string                                               `pulumi:"roleArn"`
	RootAccess                           *string                                               `pulumi:"rootAccess"`
	SecurityGroups                       []string                                              `pulumi:"securityGroups"`
	SubnetId                             *string                                               `pulumi:"subnetId"`
	Tags                                 map[string]string                                     `pulumi:"tags"`
	TagsAll                              map[string]string                                     `pulumi:"tagsAll"`
	Url                                  *string                                               `pulumi:"url"`
	VolumeSize                           *int                                                  `pulumi:"volumeSize"`
}

type NotebookInstanceState struct {
	AcceleratorTypes                     pulumi.StringArrayInput
	AdditionalCodeRepositories           pulumi.StringArrayInput
	Arn                                  pulumi.StringPtrInput
	DefaultCodeRepository                pulumi.StringPtrInput
	DirectInternetAccess                 pulumi.StringPtrInput
	InstanceMetadataServiceConfiguration NotebookInstanceInstanceMetadataServiceConfigurationPtrInput
	InstanceType                         pulumi.StringPtrInput
	KmsKeyId                             pulumi.StringPtrInput
	LifecycleConfigName                  pulumi.StringPtrInput
	Name                                 pulumi.StringPtrInput
	NetworkInterfaceId                   pulumi.StringPtrInput
	PlatformIdentifier                   pulumi.StringPtrInput
	RoleArn                              pulumi.StringPtrInput
	RootAccess                           pulumi.StringPtrInput
	SecurityGroups                       pulumi.StringArrayInput
	SubnetId                             pulumi.StringPtrInput
	Tags                                 pulumi.StringMapInput
	TagsAll                              pulumi.StringMapInput
	Url                                  pulumi.StringPtrInput
	VolumeSize                           pulumi.IntPtrInput
}

func (NotebookInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*notebookInstanceState)(nil)).Elem()
}

type notebookInstanceArgs struct {
	AcceleratorTypes                     []string                                              `pulumi:"acceleratorTypes"`
	AdditionalCodeRepositories           []string                                              `pulumi:"additionalCodeRepositories"`
	DefaultCodeRepository                *string                                               `pulumi:"defaultCodeRepository"`
	DirectInternetAccess                 *string                                               `pulumi:"directInternetAccess"`
	InstanceMetadataServiceConfiguration *NotebookInstanceInstanceMetadataServiceConfiguration `pulumi:"instanceMetadataServiceConfiguration"`
	InstanceType                         string                                                `pulumi:"instanceType"`
	KmsKeyId                             *string                                               `pulumi:"kmsKeyId"`
	LifecycleConfigName                  *string                                               `pulumi:"lifecycleConfigName"`
	Name                                 *string                                               `pulumi:"name"`
	PlatformIdentifier                   *string                                               `pulumi:"platformIdentifier"`
	RoleArn                              string                                                `pulumi:"roleArn"`
	RootAccess                           *string                                               `pulumi:"rootAccess"`
	SecurityGroups                       []string                                              `pulumi:"securityGroups"`
	SubnetId                             *string                                               `pulumi:"subnetId"`
	Tags                                 map[string]string                                     `pulumi:"tags"`
	VolumeSize                           *int                                                  `pulumi:"volumeSize"`
}

// The set of arguments for constructing a NotebookInstance resource.
type NotebookInstanceArgs struct {
	AcceleratorTypes                     pulumi.StringArrayInput
	AdditionalCodeRepositories           pulumi.StringArrayInput
	DefaultCodeRepository                pulumi.StringPtrInput
	DirectInternetAccess                 pulumi.StringPtrInput
	InstanceMetadataServiceConfiguration NotebookInstanceInstanceMetadataServiceConfigurationPtrInput
	InstanceType                         pulumi.StringInput
	KmsKeyId                             pulumi.StringPtrInput
	LifecycleConfigName                  pulumi.StringPtrInput
	Name                                 pulumi.StringPtrInput
	PlatformIdentifier                   pulumi.StringPtrInput
	RoleArn                              pulumi.StringInput
	RootAccess                           pulumi.StringPtrInput
	SecurityGroups                       pulumi.StringArrayInput
	SubnetId                             pulumi.StringPtrInput
	Tags                                 pulumi.StringMapInput
	VolumeSize                           pulumi.IntPtrInput
}

func (NotebookInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*notebookInstanceArgs)(nil)).Elem()
}

type NotebookInstanceInput interface {
	pulumi.Input

	ToNotebookInstanceOutput() NotebookInstanceOutput
	ToNotebookInstanceOutputWithContext(ctx context.Context) NotebookInstanceOutput
}

func (*NotebookInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookInstance)(nil)).Elem()
}

func (i *NotebookInstance) ToNotebookInstanceOutput() NotebookInstanceOutput {
	return i.ToNotebookInstanceOutputWithContext(context.Background())
}

func (i *NotebookInstance) ToNotebookInstanceOutputWithContext(ctx context.Context) NotebookInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookInstanceOutput)
}

// NotebookInstanceArrayInput is an input type that accepts NotebookInstanceArray and NotebookInstanceArrayOutput values.
// You can construct a concrete instance of `NotebookInstanceArrayInput` via:
//
//	NotebookInstanceArray{ NotebookInstanceArgs{...} }
type NotebookInstanceArrayInput interface {
	pulumi.Input

	ToNotebookInstanceArrayOutput() NotebookInstanceArrayOutput
	ToNotebookInstanceArrayOutputWithContext(context.Context) NotebookInstanceArrayOutput
}

type NotebookInstanceArray []NotebookInstanceInput

func (NotebookInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NotebookInstance)(nil)).Elem()
}

func (i NotebookInstanceArray) ToNotebookInstanceArrayOutput() NotebookInstanceArrayOutput {
	return i.ToNotebookInstanceArrayOutputWithContext(context.Background())
}

func (i NotebookInstanceArray) ToNotebookInstanceArrayOutputWithContext(ctx context.Context) NotebookInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookInstanceArrayOutput)
}

// NotebookInstanceMapInput is an input type that accepts NotebookInstanceMap and NotebookInstanceMapOutput values.
// You can construct a concrete instance of `NotebookInstanceMapInput` via:
//
//	NotebookInstanceMap{ "key": NotebookInstanceArgs{...} }
type NotebookInstanceMapInput interface {
	pulumi.Input

	ToNotebookInstanceMapOutput() NotebookInstanceMapOutput
	ToNotebookInstanceMapOutputWithContext(context.Context) NotebookInstanceMapOutput
}

type NotebookInstanceMap map[string]NotebookInstanceInput

func (NotebookInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NotebookInstance)(nil)).Elem()
}

func (i NotebookInstanceMap) ToNotebookInstanceMapOutput() NotebookInstanceMapOutput {
	return i.ToNotebookInstanceMapOutputWithContext(context.Background())
}

func (i NotebookInstanceMap) ToNotebookInstanceMapOutputWithContext(ctx context.Context) NotebookInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookInstanceMapOutput)
}

type NotebookInstanceOutput struct{ *pulumi.OutputState }

func (NotebookInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookInstance)(nil)).Elem()
}

func (o NotebookInstanceOutput) ToNotebookInstanceOutput() NotebookInstanceOutput {
	return o
}

func (o NotebookInstanceOutput) ToNotebookInstanceOutputWithContext(ctx context.Context) NotebookInstanceOutput {
	return o
}

func (o NotebookInstanceOutput) AcceleratorTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringArrayOutput { return v.AcceleratorTypes }).(pulumi.StringArrayOutput)
}

func (o NotebookInstanceOutput) AdditionalCodeRepositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringArrayOutput { return v.AdditionalCodeRepositories }).(pulumi.StringArrayOutput)
}

func (o NotebookInstanceOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o NotebookInstanceOutput) DefaultCodeRepository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringPtrOutput { return v.DefaultCodeRepository }).(pulumi.StringPtrOutput)
}

func (o NotebookInstanceOutput) DirectInternetAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringPtrOutput { return v.DirectInternetAccess }).(pulumi.StringPtrOutput)
}

func (o NotebookInstanceOutput) InstanceMetadataServiceConfiguration() NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput {
	return o.ApplyT(func(v *NotebookInstance) NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput {
		return v.InstanceMetadataServiceConfiguration
	}).(NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput)
}

func (o NotebookInstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

func (o NotebookInstanceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringPtrOutput { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o NotebookInstanceOutput) LifecycleConfigName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringPtrOutput { return v.LifecycleConfigName }).(pulumi.StringPtrOutput)
}

func (o NotebookInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NotebookInstanceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringOutput { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

func (o NotebookInstanceOutput) PlatformIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringOutput { return v.PlatformIdentifier }).(pulumi.StringOutput)
}

func (o NotebookInstanceOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

func (o NotebookInstanceOutput) RootAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringPtrOutput { return v.RootAccess }).(pulumi.StringPtrOutput)
}

func (o NotebookInstanceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringArrayOutput { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o NotebookInstanceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringPtrOutput { return v.SubnetId }).(pulumi.StringPtrOutput)
}

func (o NotebookInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o NotebookInstanceOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o NotebookInstanceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

func (o NotebookInstanceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NotebookInstance) pulumi.IntPtrOutput { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

type NotebookInstanceArrayOutput struct{ *pulumi.OutputState }

func (NotebookInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NotebookInstance)(nil)).Elem()
}

func (o NotebookInstanceArrayOutput) ToNotebookInstanceArrayOutput() NotebookInstanceArrayOutput {
	return o
}

func (o NotebookInstanceArrayOutput) ToNotebookInstanceArrayOutputWithContext(ctx context.Context) NotebookInstanceArrayOutput {
	return o
}

func (o NotebookInstanceArrayOutput) Index(i pulumi.IntInput) NotebookInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NotebookInstance {
		return vs[0].([]*NotebookInstance)[vs[1].(int)]
	}).(NotebookInstanceOutput)
}

type NotebookInstanceMapOutput struct{ *pulumi.OutputState }

func (NotebookInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NotebookInstance)(nil)).Elem()
}

func (o NotebookInstanceMapOutput) ToNotebookInstanceMapOutput() NotebookInstanceMapOutput {
	return o
}

func (o NotebookInstanceMapOutput) ToNotebookInstanceMapOutputWithContext(ctx context.Context) NotebookInstanceMapOutput {
	return o
}

func (o NotebookInstanceMapOutput) MapIndex(k pulumi.StringInput) NotebookInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NotebookInstance {
		return vs[0].(map[string]*NotebookInstance)[vs[1].(string)]
	}).(NotebookInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NotebookInstanceInput)(nil)).Elem(), &NotebookInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotebookInstanceArrayInput)(nil)).Elem(), NotebookInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotebookInstanceMapInput)(nil)).Elem(), NotebookInstanceMap{})
	pulumi.RegisterOutputType(NotebookInstanceOutput{})
	pulumi.RegisterOutputType(NotebookInstanceArrayOutput{})
	pulumi.RegisterOutputType(NotebookInstanceMapOutput{})
}
