// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appflow

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ConnectorProfileConnectorProfileConfig struct {
	// The connector-specific credentials required by each connector. See Connector Profile Credentials for more details.
	ConnectorProfileCredentials ConnectorProfileConnectorProfileConfigConnectorProfileCredentials `pulumi:"connectorProfileCredentials"`
	// The connector-specific properties of the profile configuration. See Connector Profile Properties for more details.
	ConnectorProfileProperties ConnectorProfileConnectorProfileConfigConnectorProfileProperties `pulumi:"connectorProfileProperties"`
}

// ConnectorProfileConnectorProfileConfigInput is an input type that accepts ConnectorProfileConnectorProfileConfigArgs and ConnectorProfileConnectorProfileConfigOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigInput` via:
//
//	ConnectorProfileConnectorProfileConfigArgs{...}
type ConnectorProfileConnectorProfileConfigInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigOutput() ConnectorProfileConnectorProfileConfigOutput
	ToConnectorProfileConnectorProfileConfigOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigOutput
}

type ConnectorProfileConnectorProfileConfigArgs struct {
	// The connector-specific credentials required by each connector. See Connector Profile Credentials for more details.
	ConnectorProfileCredentials ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInput `pulumi:"connectorProfileCredentials"`
	// The connector-specific properties of the profile configuration. See Connector Profile Properties for more details.
	ConnectorProfileProperties ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInput `pulumi:"connectorProfileProperties"`
}

func (ConnectorProfileConnectorProfileConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfig)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigArgs) ToConnectorProfileConnectorProfileConfigOutput() ConnectorProfileConnectorProfileConfigOutput {
	return i.ToConnectorProfileConnectorProfileConfigOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigArgs) ToConnectorProfileConnectorProfileConfigOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigOutput)
}

func (i ConnectorProfileConnectorProfileConfigArgs) ToConnectorProfileConnectorProfileConfigPtrOutput() ConnectorProfileConnectorProfileConfigPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigArgs) ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigOutput).ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigArgs, ConnectorProfileConnectorProfileConfigPtr and ConnectorProfileConnectorProfileConfigPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigPtrOutput() ConnectorProfileConnectorProfileConfigPtrOutput
	ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigPtrOutput
}

type connectorProfileConnectorProfileConfigPtrType ConnectorProfileConnectorProfileConfigArgs

func ConnectorProfileConnectorProfileConfigPtr(v *ConnectorProfileConnectorProfileConfigArgs) ConnectorProfileConnectorProfileConfigPtrInput {
	return (*connectorProfileConnectorProfileConfigPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfig)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigPtrType) ToConnectorProfileConnectorProfileConfigPtrOutput() ConnectorProfileConnectorProfileConfigPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigPtrType) ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigPtrOutput)
}

type ConnectorProfileConnectorProfileConfigOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfig)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigOutput) ToConnectorProfileConnectorProfileConfigOutput() ConnectorProfileConnectorProfileConfigOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigOutput) ToConnectorProfileConnectorProfileConfigOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigOutput) ToConnectorProfileConnectorProfileConfigPtrOutput() ConnectorProfileConnectorProfileConfigPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigOutput) ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfig) *ConnectorProfileConnectorProfileConfig {
		return &v
	}).(ConnectorProfileConnectorProfileConfigPtrOutput)
}

// The connector-specific credentials required by each connector. See Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigOutput) ConnectorProfileCredentials() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfig) ConnectorProfileConnectorProfileConfigConnectorProfileCredentials {
		return v.ConnectorProfileCredentials
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput)
}

// The connector-specific properties of the profile configuration. See Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigOutput) ConnectorProfileProperties() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfig) ConnectorProfileConnectorProfileConfigConnectorProfileProperties {
		return v.ConnectorProfileProperties
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput)
}

type ConnectorProfileConnectorProfileConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfig)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigPtrOutput) ToConnectorProfileConnectorProfileConfigPtrOutput() ConnectorProfileConnectorProfileConfigPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigPtrOutput) ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigPtrOutput) Elem() ConnectorProfileConnectorProfileConfigOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfig) ConnectorProfileConnectorProfileConfig {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfig
		return ret
	}).(ConnectorProfileConnectorProfileConfigOutput)
}

// The connector-specific credentials required by each connector. See Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigPtrOutput) ConnectorProfileCredentials() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfig) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return &v.ConnectorProfileCredentials
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput)
}

// The connector-specific properties of the profile configuration. See Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigPtrOutput) ConnectorProfileProperties() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfig) *ConnectorProfileConnectorProfileConfigConnectorProfileProperties {
		if v == nil {
			return nil
		}
		return &v.ConnectorProfileProperties
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentials struct {
	// The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
	Amplitude *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude `pulumi:"amplitude"`
	// The connector-specific profile credentials required when using the custom connector. See Custom Connector Profile Credentials for more details.
	CustomConnector *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector `pulumi:"customConnector"`
	// Connector-specific credentials required when using Datadog. See Datadog Connector Profile Credentials for more details.
	Datadog *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog `pulumi:"datadog"`
	// The connector-specific credentials required when using Dynatrace. See Dynatrace Connector Profile Credentials for more details.
	Dynatrace *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace `pulumi:"dynatrace"`
	// The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
	GoogleAnalytics *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics `pulumi:"googleAnalytics"`
	// The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
	Honeycode *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode `pulumi:"honeycode"`
	// The connector-specific credentials required when using Infor Nexus. See Infor Nexus Connector Profile Credentials for more details.
	InforNexus *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus `pulumi:"inforNexus"`
	// Connector-specific credentials required when using Marketo. See Marketo Connector Profile Credentials for more details.
	Marketo *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo `pulumi:"marketo"`
	// Connector-specific credentials required when using Amazon Redshift. See Redshift Connector Profile Credentials for more details.
	Redshift *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift `pulumi:"redshift"`
	// The connector-specific credentials required when using Salesforce. See Salesforce Connector Profile Credentials for more details.
	Salesforce *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce `pulumi:"salesforce"`
	// The connector-specific credentials required when using SAPOData. See SAPOData Connector Profile Credentials for more details.
	SapoData *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData `pulumi:"sapoData"`
	// The connector-specific credentials required when using ServiceNow. See ServiceNow Connector Profile Credentials for more details.
	ServiceNow *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow `pulumi:"serviceNow"`
	// Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
	Singular *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular `pulumi:"singular"`
	// Connector-specific credentials required when using Slack. See Slack Connector Profile Credentials for more details.
	Slack *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack `pulumi:"slack"`
	// The connector-specific credentials required when using Snowflake. See Snowflake Connector Profile Credentials for more details.
	Snowflake *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake `pulumi:"snowflake"`
	// The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
	Trendmicro *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro `pulumi:"trendmicro"`
	// Connector-specific credentials required when using Veeva. See Veeva Connector Profile Credentials for more details.
	Veeva *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva `pulumi:"veeva"`
	// Connector-specific credentials required when using Zendesk. See Zendesk Connector Profile Credentials for more details.
	Zendesk *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk `pulumi:"zendesk"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs struct {
	// The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
	Amplitude ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrInput `pulumi:"amplitude"`
	// The connector-specific profile credentials required when using the custom connector. See Custom Connector Profile Credentials for more details.
	CustomConnector ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrInput `pulumi:"customConnector"`
	// Connector-specific credentials required when using Datadog. See Datadog Connector Profile Credentials for more details.
	Datadog ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrInput `pulumi:"datadog"`
	// The connector-specific credentials required when using Dynatrace. See Dynatrace Connector Profile Credentials for more details.
	Dynatrace ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrInput `pulumi:"dynatrace"`
	// The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
	GoogleAnalytics ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrInput `pulumi:"googleAnalytics"`
	// The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
	Honeycode ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrInput `pulumi:"honeycode"`
	// The connector-specific credentials required when using Infor Nexus. See Infor Nexus Connector Profile Credentials for more details.
	InforNexus ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrInput `pulumi:"inforNexus"`
	// Connector-specific credentials required when using Marketo. See Marketo Connector Profile Credentials for more details.
	Marketo ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrInput `pulumi:"marketo"`
	// Connector-specific credentials required when using Amazon Redshift. See Redshift Connector Profile Credentials for more details.
	Redshift ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrInput `pulumi:"redshift"`
	// The connector-specific credentials required when using Salesforce. See Salesforce Connector Profile Credentials for more details.
	Salesforce ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrInput `pulumi:"salesforce"`
	// The connector-specific credentials required when using SAPOData. See SAPOData Connector Profile Credentials for more details.
	SapoData ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrInput `pulumi:"sapoData"`
	// The connector-specific credentials required when using ServiceNow. See ServiceNow Connector Profile Credentials for more details.
	ServiceNow ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrInput `pulumi:"serviceNow"`
	// Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
	Singular ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrInput `pulumi:"singular"`
	// Connector-specific credentials required when using Slack. See Slack Connector Profile Credentials for more details.
	Slack ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrInput `pulumi:"slack"`
	// The connector-specific credentials required when using Snowflake. See Snowflake Connector Profile Credentials for more details.
	Snowflake ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrInput `pulumi:"snowflake"`
	// The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
	Trendmicro ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrInput `pulumi:"trendmicro"`
	// Connector-specific credentials required when using Veeva. See Veeva Connector Profile Credentials for more details.
	Veeva ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrInput `pulumi:"veeva"`
	// Connector-specific credentials required when using Zendesk. See Zendesk Connector Profile Credentials for more details.
	Zendesk ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrInput `pulumi:"zendesk"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput)
}

// The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) Amplitude() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude {
		return v.Amplitude
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput)
}

// The connector-specific profile credentials required when using the custom connector. See Custom Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) CustomConnector() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector {
		return v.CustomConnector
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput)
}

// Connector-specific credentials required when using Datadog. See Datadog Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) Datadog() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog {
		return v.Datadog
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput)
}

// The connector-specific credentials required when using Dynatrace. See Dynatrace Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) Dynatrace() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace {
		return v.Dynatrace
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput)
}

// The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) GoogleAnalytics() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics {
		return v.GoogleAnalytics
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput)
}

// The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) Honeycode() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode {
		return v.Honeycode
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput)
}

// The connector-specific credentials required when using Infor Nexus. See Infor Nexus Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) InforNexus() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus {
		return v.InforNexus
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput)
}

// Connector-specific credentials required when using Marketo. See Marketo Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) Marketo() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo {
		return v.Marketo
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput)
}

// Connector-specific credentials required when using Amazon Redshift. See Redshift Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) Redshift() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift {
		return v.Redshift
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput)
}

// The connector-specific credentials required when using Salesforce. See Salesforce Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) Salesforce() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce {
		return v.Salesforce
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput)
}

// The connector-specific credentials required when using SAPOData. See SAPOData Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) SapoData() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData {
		return v.SapoData
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput)
}

// The connector-specific credentials required when using ServiceNow. See ServiceNow Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) ServiceNow() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow {
		return v.ServiceNow
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput)
}

// Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) Singular() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular {
		return v.Singular
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput)
}

// Connector-specific credentials required when using Slack. See Slack Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) Slack() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack {
		return v.Slack
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput)
}

// The connector-specific credentials required when using Snowflake. See Snowflake Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) Snowflake() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake {
		return v.Snowflake
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput)
}

// The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) Trendmicro() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro {
		return v.Trendmicro
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput)
}

// Connector-specific credentials required when using Veeva. See Veeva Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) Veeva() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva {
		return v.Veeva
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput)
}

// Connector-specific credentials required when using Zendesk. See Zendesk Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput) Zendesk() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk {
		return v.Zendesk
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) ConnectorProfileConnectorProfileConfigConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentials
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput)
}

// The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) Amplitude() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude {
		if v == nil {
			return nil
		}
		return v.Amplitude
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput)
}

// The connector-specific profile credentials required when using the custom connector. See Custom Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) CustomConnector() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector {
		if v == nil {
			return nil
		}
		return v.CustomConnector
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput)
}

// Connector-specific credentials required when using Datadog. See Datadog Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) Datadog() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog {
		if v == nil {
			return nil
		}
		return v.Datadog
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput)
}

// The connector-specific credentials required when using Dynatrace. See Dynatrace Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) Dynatrace() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace {
		if v == nil {
			return nil
		}
		return v.Dynatrace
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput)
}

// The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) GoogleAnalytics() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics {
		if v == nil {
			return nil
		}
		return v.GoogleAnalytics
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput)
}

// The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) Honeycode() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode {
		if v == nil {
			return nil
		}
		return v.Honeycode
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput)
}

// The connector-specific credentials required when using Infor Nexus. See Infor Nexus Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) InforNexus() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus {
		if v == nil {
			return nil
		}
		return v.InforNexus
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput)
}

// Connector-specific credentials required when using Marketo. See Marketo Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) Marketo() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo {
		if v == nil {
			return nil
		}
		return v.Marketo
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput)
}

// Connector-specific credentials required when using Amazon Redshift. See Redshift Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) Redshift() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift {
		if v == nil {
			return nil
		}
		return v.Redshift
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput)
}

// The connector-specific credentials required when using Salesforce. See Salesforce Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) Salesforce() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput)
}

// The connector-specific credentials required when using SAPOData. See SAPOData Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) SapoData() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData {
		if v == nil {
			return nil
		}
		return v.SapoData
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput)
}

// The connector-specific credentials required when using ServiceNow. See ServiceNow Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) ServiceNow() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow {
		if v == nil {
			return nil
		}
		return v.ServiceNow
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput)
}

// Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) Singular() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular {
		if v == nil {
			return nil
		}
		return v.Singular
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput)
}

// Connector-specific credentials required when using Slack. See Slack Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) Slack() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput)
}

// The connector-specific credentials required when using Snowflake. See Snowflake Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) Snowflake() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake {
		if v == nil {
			return nil
		}
		return v.Snowflake
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput)
}

// The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) Trendmicro() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro {
		if v == nil {
			return nil
		}
		return v.Trendmicro
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput)
}

// Connector-specific credentials required when using Veeva. See Veeva Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) Veeva() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva {
		if v == nil {
			return nil
		}
		return v.Veeva
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput)
}

// Connector-specific credentials required when using Zendesk. See Zendesk Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput) Zendesk() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude struct {
	// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
	ApiKey string `pulumi:"apiKey"`
	// The Secret Access Key portion of the credentials.
	SecretKey string `pulumi:"secretKey"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs struct {
	// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// The Secret Access Key portion of the credentials.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput)
}

// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude) string {
		return v.ApiKey
	}).(pulumi.StringOutput)
}

// The Secret Access Key portion of the credentials.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude) string {
		return v.SecretKey
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput)
}

// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// The Secret Access Key portion of the credentials.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitude) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector struct {
	// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
	ApiKey *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey `pulumi:"apiKey"`
	// The authentication type that the custom connector uses for authenticating while creating a connector profile. One of: `APIKEY`, `BASIC`, `CUSTOM`, `OAUTH2`.
	AuthenticationType string `pulumi:"authenticationType"`
	// Basic credentials that are required for the authentication of the user.
	Basic *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic `pulumi:"basic"`
	// If the connector uses the custom authentication mechanism, this holds the required credentials.
	Custom *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom `pulumi:"custom"`
	// OAuth 2.0 credentials required for the authentication of the user.
	Oauth2 *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2 `pulumi:"oauth2"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs struct {
	// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
	ApiKey ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrInput `pulumi:"apiKey"`
	// The authentication type that the custom connector uses for authenticating while creating a connector profile. One of: `APIKEY`, `BASIC`, `CUSTOM`, `OAUTH2`.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Basic credentials that are required for the authentication of the user.
	Basic ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrInput `pulumi:"basic"`
	// If the connector uses the custom authentication mechanism, this holds the required credentials.
	Custom ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrInput `pulumi:"custom"`
	// OAuth 2.0 credentials required for the authentication of the user.
	Oauth2 ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrInput `pulumi:"oauth2"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput)
}

// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput) ApiKey() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey {
		return v.ApiKey
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput)
}

// The authentication type that the custom connector uses for authenticating while creating a connector profile. One of: `APIKEY`, `BASIC`, `CUSTOM`, `OAUTH2`.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector) string {
		return v.AuthenticationType
	}).(pulumi.StringOutput)
}

// Basic credentials that are required for the authentication of the user.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput) Basic() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic {
		return v.Basic
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput)
}

// If the connector uses the custom authentication mechanism, this holds the required credentials.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput) Custom() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom {
		return v.Custom
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput)
}

// OAuth 2.0 credentials required for the authentication of the user.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput) Oauth2() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2 {
		return v.Oauth2
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput)
}

// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput) ApiKey() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput)
}

// The authentication type that the custom connector uses for authenticating while creating a connector profile. One of: `APIKEY`, `BASIC`, `CUSTOM`, `OAUTH2`.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector) *string {
		if v == nil {
			return nil
		}
		return &v.AuthenticationType
	}).(pulumi.StringPtrOutput)
}

// Basic credentials that are required for the authentication of the user.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput) Basic() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic {
		if v == nil {
			return nil
		}
		return v.Basic
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput)
}

// If the connector uses the custom authentication mechanism, this holds the required credentials.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput) Custom() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom {
		if v == nil {
			return nil
		}
		return v.Custom
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput)
}

// OAuth 2.0 credentials required for the authentication of the user.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput) Oauth2() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnector) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2 {
		if v == nil {
			return nil
		}
		return v.Oauth2
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey struct {
	// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
	ApiKey string `pulumi:"apiKey"`
	// The API secret key required for API key authentication.
	ApiSecretKey *string `pulumi:"apiSecretKey"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs struct {
	// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// The API secret key required for API key authentication.
	ApiSecretKey pulumi.StringPtrInput `pulumi:"apiSecretKey"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput)
}

// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey) string {
		return v.ApiKey
	}).(pulumi.StringOutput)
}

// The API secret key required for API key authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput) ApiSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey) *string {
		return v.ApiSecretKey
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput)
}

// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// The API secret key required for API key authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput) ApiSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey) *string {
		if v == nil {
			return nil
		}
		return v.ApiSecretKey
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic struct {
	// The password to use to connect to a resource.
	Password string `pulumi:"password"`
	// The username to use to connect to a resource.
	Username string `pulumi:"username"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs struct {
	// The password to use to connect to a resource.
	Password pulumi.StringInput `pulumi:"password"`
	// The username to use to connect to a resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput)
}

// The password to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic) string {
		return v.Password
	}).(pulumi.StringOutput)
}

// The username to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput)
}

// The password to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The username to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom struct {
	// A map that holds custom authentication credentials.
	CredentialsMap map[string]string `pulumi:"credentialsMap"`
	// The custom authentication type that the connector uses.
	CustomAuthenticationType string `pulumi:"customAuthenticationType"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs struct {
	// A map that holds custom authentication credentials.
	CredentialsMap pulumi.StringMapInput `pulumi:"credentialsMap"`
	// The custom authentication type that the connector uses.
	CustomAuthenticationType pulumi.StringInput `pulumi:"customAuthenticationType"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput)
}

// A map that holds custom authentication credentials.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput) CredentialsMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom) map[string]string {
		return v.CredentialsMap
	}).(pulumi.StringMapOutput)
}

// The custom authentication type that the connector uses.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput) CustomAuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom) string {
		return v.CustomAuthenticationType
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput)
}

// A map that holds custom authentication credentials.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput) CredentialsMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom) map[string]string {
		if v == nil {
			return nil
		}
		return v.CredentialsMap
	}).(pulumi.StringMapOutput)
}

// The custom authentication type that the connector uses.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput) CustomAuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom) *string {
		if v == nil {
			return nil
		}
		return &v.CustomAuthenticationType
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2 struct {
	// The access token used to access the connector on your behalf.
	AccessToken *string `pulumi:"accessToken"`
	// The identifier for the desired client.
	ClientId *string `pulumi:"clientId"`
	// The client secret used by the OAuth client to authenticate to the authorization server.
	ClientSecret *string `pulumi:"clientSecret"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest `pulumi:"oauthRequest"`
	// The refresh token used to refresh an expired access token.
	RefreshToken *string `pulumi:"refreshToken"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Input is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Input` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Input interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args struct {
	// The access token used to access the connector on your behalf.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// The identifier for the desired client.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The client secret used by the OAuth client to authenticate to the authorization server.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrInput `pulumi:"oauthRequest"`
	// The refresh token used to refresh an expired access token.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Ptr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Ptr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2 {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2) *string {
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identifier for the desired client.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2) *string {
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret used by the OAuth client to authenticate to the authorization server.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2) *string {
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest {
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput)
}

// The refresh token used to refresh an expired access token.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2) *string {
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2 {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identifier for the desired client.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret used by the OAuth client to authenticate to the authorization server.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest {
		if v == nil {
			return nil
		}
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput)
}

// The refresh token used to refresh an expired access token.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode *string `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri *string `pulumi:"redirectUri"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestArgs struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode pulumi.StringPtrInput `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri pulumi.StringPtrInput `pulumi:"redirectUri"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest) *string {
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest) *string {
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog struct {
	// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
	ApiKey string `pulumi:"apiKey"`
	// Application keys, in conjunction with your API key, give you full access to Datadog’s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API.
	ApplicationKey string `pulumi:"applicationKey"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs struct {
	// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// Application keys, in conjunction with your API key, give you full access to Datadog’s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API.
	ApplicationKey pulumi.StringInput `pulumi:"applicationKey"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput)
}

// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog) string {
		return v.ApiKey
	}).(pulumi.StringOutput)
}

// Application keys, in conjunction with your API key, give you full access to Datadog’s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog) string {
		return v.ApplicationKey
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput)
}

// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// Application keys, in conjunction with your API key, give you full access to Datadog’s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput) ApplicationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadog) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationKey
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace struct {
	// The API tokens used by Dynatrace API to authenticate various API calls.
	ApiToken string `pulumi:"apiToken"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs struct {
	// The API tokens used by Dynatrace API to authenticate various API calls.
	ApiToken pulumi.StringInput `pulumi:"apiToken"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput)
}

// The API tokens used by Dynatrace API to authenticate various API calls.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput)
}

// The API tokens used by Dynatrace API to authenticate various API calls.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput) ApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatrace) *string {
		if v == nil {
			return nil
		}
		return &v.ApiToken
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics struct {
	// The access token used to access the connector on your behalf.
	AccessToken *string `pulumi:"accessToken"`
	// The identifier for the desired client.
	ClientId string `pulumi:"clientId"`
	// The client secret used by the OAuth client to authenticate to the authorization server.
	ClientSecret string `pulumi:"clientSecret"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest `pulumi:"oauthRequest"`
	// The refresh token used to refresh an expired access token.
	RefreshToken *string `pulumi:"refreshToken"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs struct {
	// The access token used to access the connector on your behalf.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// The identifier for the desired client.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret used by the OAuth client to authenticate to the authorization server.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrInput `pulumi:"oauthRequest"`
	// The refresh token used to refresh an expired access token.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics) *string {
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identifier for the desired client.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

// The client secret used by the OAuth client to authenticate to the authorization server.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest {
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput)
}

// The refresh token used to refresh an expired access token.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics) *string {
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identifier for the desired client.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret used by the OAuth client to authenticate to the authorization server.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest {
		if v == nil {
			return nil
		}
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput)
}

// The refresh token used to refresh an expired access token.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode *string `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri *string `pulumi:"redirectUri"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestArgs struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode pulumi.StringPtrInput `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri pulumi.StringPtrInput `pulumi:"redirectUri"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest) *string {
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest) *string {
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode struct {
	// The access token used to access the connector on your behalf.
	AccessToken *string `pulumi:"accessToken"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest `pulumi:"oauthRequest"`
	// The refresh token used to refresh an expired access token.
	RefreshToken *string `pulumi:"refreshToken"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs struct {
	// The access token used to access the connector on your behalf.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrInput `pulumi:"oauthRequest"`
	// The refresh token used to refresh an expired access token.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode) *string {
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest {
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput)
}

// The refresh token used to refresh an expired access token.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode) *string {
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest {
		if v == nil {
			return nil
		}
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput)
}

// The refresh token used to refresh an expired access token.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycode) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode *string `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri *string `pulumi:"redirectUri"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestArgs struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode pulumi.StringPtrInput `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri pulumi.StringPtrInput `pulumi:"redirectUri"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest) *string {
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest) *string {
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus struct {
	// The Access Key portion of the credentials.
	AccessKeyId string `pulumi:"accessKeyId"`
	// Encryption keys used to encrypt data.
	Datakey string `pulumi:"datakey"`
	// The secret key used to sign requests.
	SecretAccessKey string `pulumi:"secretAccessKey"`
	// Identifier for the user.
	UserId string `pulumi:"userId"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs struct {
	// The Access Key portion of the credentials.
	AccessKeyId pulumi.StringInput `pulumi:"accessKeyId"`
	// Encryption keys used to encrypt data.
	Datakey pulumi.StringInput `pulumi:"datakey"`
	// The secret key used to sign requests.
	SecretAccessKey pulumi.StringInput `pulumi:"secretAccessKey"`
	// Identifier for the user.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput)
}

// The Access Key portion of the credentials.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus) string {
		return v.AccessKeyId
	}).(pulumi.StringOutput)
}

// Encryption keys used to encrypt data.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput) Datakey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus) string {
		return v.Datakey
	}).(pulumi.StringOutput)
}

// The secret key used to sign requests.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus) string {
		return v.SecretAccessKey
	}).(pulumi.StringOutput)
}

// Identifier for the user.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus) string {
		return v.UserId
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput)
}

// The Access Key portion of the credentials.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// Encryption keys used to encrypt data.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput) Datakey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus) *string {
		if v == nil {
			return nil
		}
		return &v.Datakey
	}).(pulumi.StringPtrOutput)
}

// The secret key used to sign requests.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus) *string {
		if v == nil {
			return nil
		}
		return &v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

// Identifier for the user.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexus) *string {
		if v == nil {
			return nil
		}
		return &v.UserId
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo struct {
	// The access token used to access the connector on your behalf.
	AccessToken *string `pulumi:"accessToken"`
	// The identifier for the desired client.
	ClientId string `pulumi:"clientId"`
	// The client secret used by the OAuth client to authenticate to the authorization server.
	ClientSecret string `pulumi:"clientSecret"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest `pulumi:"oauthRequest"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs struct {
	// The access token used to access the connector on your behalf.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// The identifier for the desired client.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret used by the OAuth client to authenticate to the authorization server.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrInput `pulumi:"oauthRequest"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo) *string {
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identifier for the desired client.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

// The client secret used by the OAuth client to authenticate to the authorization server.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest {
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identifier for the desired client.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret used by the OAuth client to authenticate to the authorization server.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketo) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest {
		if v == nil {
			return nil
		}
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode *string `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri *string `pulumi:"redirectUri"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestArgs struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode pulumi.StringPtrInput `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri pulumi.StringPtrInput `pulumi:"redirectUri"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest) *string {
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest) *string {
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift struct {
	// The password to use to connect to a resource.
	Password string `pulumi:"password"`
	// The username to use to connect to a resource.
	Username string `pulumi:"username"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs struct {
	// The password to use to connect to a resource.
	Password pulumi.StringInput `pulumi:"password"`
	// The username to use to connect to a resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput)
}

// The password to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift) string {
		return v.Password
	}).(pulumi.StringOutput)
}

// The username to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput)
}

// The password to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The username to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshift) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce struct {
	// The access token used to access the connector on your behalf.
	AccessToken *string `pulumi:"accessToken"`
	// The secret manager ARN, which contains the client ID and client secret of the connected app.
	ClientCredentialsArn *string `pulumi:"clientCredentialsArn"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest `pulumi:"oauthRequest"`
	// The refresh token used to refresh an expired access token.
	RefreshToken *string `pulumi:"refreshToken"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs struct {
	// The access token used to access the connector on your behalf.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// The secret manager ARN, which contains the client ID and client secret of the connected app.
	ClientCredentialsArn pulumi.StringPtrInput `pulumi:"clientCredentialsArn"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrInput `pulumi:"oauthRequest"`
	// The refresh token used to refresh an expired access token.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce) *string {
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The secret manager ARN, which contains the client ID and client secret of the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput) ClientCredentialsArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce) *string {
		return v.ClientCredentialsArn
	}).(pulumi.StringPtrOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest {
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput)
}

// The refresh token used to refresh an expired access token.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce) *string {
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The secret manager ARN, which contains the client ID and client secret of the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput) ClientCredentialsArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce) *string {
		if v == nil {
			return nil
		}
		return v.ClientCredentialsArn
	}).(pulumi.StringPtrOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest {
		if v == nil {
			return nil
		}
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput)
}

// The refresh token used to refresh an expired access token.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode *string `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri *string `pulumi:"redirectUri"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestArgs struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode pulumi.StringPtrInput `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri pulumi.StringPtrInput `pulumi:"redirectUri"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest) *string {
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest) *string {
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData struct {
	// The SAPOData basic authentication credentials.
	BasicAuthCredentials *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials `pulumi:"basicAuthCredentials"`
	// The SAPOData OAuth type authentication credentials.
	OauthCredentials *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials `pulumi:"oauthCredentials"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs struct {
	// The SAPOData basic authentication credentials.
	BasicAuthCredentials ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrInput `pulumi:"basicAuthCredentials"`
	// The SAPOData OAuth type authentication credentials.
	OauthCredentials ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrInput `pulumi:"oauthCredentials"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput)
}

// The SAPOData basic authentication credentials.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput) BasicAuthCredentials() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials {
		return v.BasicAuthCredentials
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput)
}

// The SAPOData OAuth type authentication credentials.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput) OauthCredentials() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials {
		return v.OauthCredentials
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput)
}

// The SAPOData basic authentication credentials.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput) BasicAuthCredentials() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials {
		if v == nil {
			return nil
		}
		return v.BasicAuthCredentials
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput)
}

// The SAPOData OAuth type authentication credentials.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput) OauthCredentials() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoData) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials {
		if v == nil {
			return nil
		}
		return v.OauthCredentials
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials struct {
	// The password to use to connect to a resource.
	Password string `pulumi:"password"`
	// The username to use to connect to a resource.
	Username string `pulumi:"username"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsArgs struct {
	// The password to use to connect to a resource.
	Password pulumi.StringInput `pulumi:"password"`
	// The username to use to connect to a resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput)
}

// The password to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials) string {
		return v.Password
	}).(pulumi.StringOutput)
}

// The username to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput)
}

// The password to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The username to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials struct {
	// The access token used to access the connector on your behalf.
	AccessToken *string `pulumi:"accessToken"`
	// The identifier for the desired client.
	ClientId string `pulumi:"clientId"`
	// The client secret used by the OAuth client to authenticate to the authorization server.
	ClientSecret string `pulumi:"clientSecret"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest `pulumi:"oauthRequest"`
	// The refresh token used to refresh an expired access token.
	RefreshToken *string `pulumi:"refreshToken"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsArgs struct {
	// The access token used to access the connector on your behalf.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// The identifier for the desired client.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret used by the OAuth client to authenticate to the authorization server.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrInput `pulumi:"oauthRequest"`
	// The refresh token used to refresh an expired access token.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials) *string {
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identifier for the desired client.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

// The client secret used by the OAuth client to authenticate to the authorization server.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest {
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput)
}

// The refresh token used to refresh an expired access token.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials) *string {
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identifier for the desired client.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret used by the OAuth client to authenticate to the authorization server.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest {
		if v == nil {
			return nil
		}
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput)
}

// The refresh token used to refresh an expired access token.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode *string `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri *string `pulumi:"redirectUri"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestArgs struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode pulumi.StringPtrInput `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri pulumi.StringPtrInput `pulumi:"redirectUri"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest) *string {
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest) *string {
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow struct {
	// The password to use to connect to a resource.
	Password string `pulumi:"password"`
	// The username to use to connect to a resource.
	Username string `pulumi:"username"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs struct {
	// The password to use to connect to a resource.
	Password pulumi.StringInput `pulumi:"password"`
	// The username to use to connect to a resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput)
}

// The password to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow) string {
		return v.Password
	}).(pulumi.StringOutput)
}

// The username to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput)
}

// The password to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The username to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNow) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular struct {
	// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
	ApiKey string `pulumi:"apiKey"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs struct {
	// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput)
}

// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular) string {
		return v.ApiKey
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput)
}

// Unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingular) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack struct {
	// The access token used to access the connector on your behalf.
	AccessToken *string `pulumi:"accessToken"`
	// The identifier for the desired client.
	ClientId string `pulumi:"clientId"`
	// The client secret used by the OAuth client to authenticate to the authorization server.
	ClientSecret string `pulumi:"clientSecret"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest `pulumi:"oauthRequest"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs struct {
	// The access token used to access the connector on your behalf.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// The identifier for the desired client.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret used by the OAuth client to authenticate to the authorization server.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrInput `pulumi:"oauthRequest"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack) *string {
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identifier for the desired client.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

// The client secret used by the OAuth client to authenticate to the authorization server.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest {
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identifier for the desired client.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret used by the OAuth client to authenticate to the authorization server.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlack) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest {
		if v == nil {
			return nil
		}
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode *string `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri *string `pulumi:"redirectUri"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestArgs struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode pulumi.StringPtrInput `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri pulumi.StringPtrInput `pulumi:"redirectUri"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest) *string {
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest) *string {
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake struct {
	// The password to use to connect to a resource.
	Password string `pulumi:"password"`
	// The username to use to connect to a resource.
	Username string `pulumi:"username"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs struct {
	// The password to use to connect to a resource.
	Password pulumi.StringInput `pulumi:"password"`
	// The username to use to connect to a resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput)
}

// The password to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake) string {
		return v.Password
	}).(pulumi.StringOutput)
}

// The username to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput)
}

// The password to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The username to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflake) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro struct {
	// The API secret key required for API key authentication.
	ApiSecretKey string `pulumi:"apiSecretKey"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs struct {
	// The API secret key required for API key authentication.
	ApiSecretKey pulumi.StringInput `pulumi:"apiSecretKey"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput)
}

// The API secret key required for API key authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput) ApiSecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro) string {
		return v.ApiSecretKey
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput)
}

// The API secret key required for API key authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput) ApiSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicro) *string {
		if v == nil {
			return nil
		}
		return &v.ApiSecretKey
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva struct {
	// The password to use to connect to a resource.
	Password string `pulumi:"password"`
	// The username to use to connect to a resource.
	Username string `pulumi:"username"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs struct {
	// The password to use to connect to a resource.
	Password pulumi.StringInput `pulumi:"password"`
	// The username to use to connect to a resource.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput)
}

// The password to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva) string {
		return v.Password
	}).(pulumi.StringOutput)
}

// The username to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput)
}

// The password to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The username to use to connect to a resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeeva) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk struct {
	// The access token used to access the connector on your behalf.
	AccessToken *string `pulumi:"accessToken"`
	// The identifier for the desired client.
	ClientId string `pulumi:"clientId"`
	// The client secret used by the OAuth client to authenticate to the authorization server.
	ClientSecret string `pulumi:"clientSecret"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest `pulumi:"oauthRequest"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs struct {
	// The access token used to access the connector on your behalf.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// The identifier for the desired client.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret used by the OAuth client to authenticate to the authorization server.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
	OauthRequest ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrInput `pulumi:"oauthRequest"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk) *string {
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identifier for the desired client.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

// The client secret used by the OAuth client to authenticate to the authorization server.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest {
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput)
}

// The access token used to access the connector on your behalf.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identifier for the desired client.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret used by the OAuth client to authenticate to the authorization server.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Used by select connectors for which the OAuth workflow is supported. See OAuth Request for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput) OauthRequest() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendesk) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest {
		if v == nil {
			return nil
		}
		return v.OauthRequest
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode *string `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri *string `pulumi:"redirectUri"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode pulumi.StringPtrInput `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been granted.
	RedirectUri pulumi.StringPtrInput `pulumi:"redirectUri"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput).ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs, ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtr and ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrType ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs

func ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest) *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest) *string {
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest) *string {
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest) ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been granted.
func (o ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfileProperties struct {
	// The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
	Amplitude *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude `pulumi:"amplitude"`
	// The connector-specific profile properties required when using the custom connector. See Custom Connector Profile Properties for more details.
	CustomConnector *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector `pulumi:"customConnector"`
	// Connector-specific properties required when using Datadog. See Generic Connector Profile Properties for more details.
	Datadog *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog `pulumi:"datadog"`
	// The connector-specific properties required when using Dynatrace. See Generic Connector Profile Properties for more details.
	Dynatrace *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace `pulumi:"dynatrace"`
	// The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
	GoogleAnalytics *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics `pulumi:"googleAnalytics"`
	// The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
	Honeycode *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode `pulumi:"honeycode"`
	// The connector-specific properties required when using Infor Nexus. See Generic Connector Profile Properties for more details.
	InforNexus *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus `pulumi:"inforNexus"`
	// Connector-specific properties required when using Marketo. See Generic Connector Profile Properties for more details.
	Marketo *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo `pulumi:"marketo"`
	// Connector-specific properties required when using Amazon Redshift. See Redshift Connector Profile Properties for more details.
	Redshift *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift `pulumi:"redshift"`
	// The connector-specific properties required when using Salesforce. See Salesforce Connector Profile Properties for more details.
	Salesforce *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce `pulumi:"salesforce"`
	// The connector-specific properties required when using SAPOData. See SAPOData Connector Profile Properties for more details.
	SapoData *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData `pulumi:"sapoData"`
	// The connector-specific properties required when using ServiceNow. See Generic Connector Profile Properties for more details.
	ServiceNow *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow `pulumi:"serviceNow"`
	// Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
	Singular *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular `pulumi:"singular"`
	// Connector-specific properties required when using Slack. See Generic Connector Profile Properties for more details.
	Slack *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack `pulumi:"slack"`
	// The connector-specific properties required when using Snowflake. See Snowflake Connector Profile Properties for more details.
	Snowflake *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake `pulumi:"snowflake"`
	// The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
	Trendmicro *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro `pulumi:"trendmicro"`
	// Connector-specific properties required when using Veeva. See Generic Connector Profile Properties for more details.
	Veeva *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva `pulumi:"veeva"`
	// Connector-specific properties required when using Zendesk. See Generic Connector Profile Properties for more details.
	Zendesk *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk `pulumi:"zendesk"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs struct {
	// The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
	Amplitude ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrInput `pulumi:"amplitude"`
	// The connector-specific profile properties required when using the custom connector. See Custom Connector Profile Properties for more details.
	CustomConnector ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrInput `pulumi:"customConnector"`
	// Connector-specific properties required when using Datadog. See Generic Connector Profile Properties for more details.
	Datadog ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrInput `pulumi:"datadog"`
	// The connector-specific properties required when using Dynatrace. See Generic Connector Profile Properties for more details.
	Dynatrace ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrInput `pulumi:"dynatrace"`
	// The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
	GoogleAnalytics ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrInput `pulumi:"googleAnalytics"`
	// The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
	Honeycode ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrInput `pulumi:"honeycode"`
	// The connector-specific properties required when using Infor Nexus. See Generic Connector Profile Properties for more details.
	InforNexus ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrInput `pulumi:"inforNexus"`
	// Connector-specific properties required when using Marketo. See Generic Connector Profile Properties for more details.
	Marketo ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrInput `pulumi:"marketo"`
	// Connector-specific properties required when using Amazon Redshift. See Redshift Connector Profile Properties for more details.
	Redshift ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrInput `pulumi:"redshift"`
	// The connector-specific properties required when using Salesforce. See Salesforce Connector Profile Properties for more details.
	Salesforce ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrInput `pulumi:"salesforce"`
	// The connector-specific properties required when using SAPOData. See SAPOData Connector Profile Properties for more details.
	SapoData ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrInput `pulumi:"sapoData"`
	// The connector-specific properties required when using ServiceNow. See Generic Connector Profile Properties for more details.
	ServiceNow ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrInput `pulumi:"serviceNow"`
	// Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
	Singular ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrInput `pulumi:"singular"`
	// Connector-specific properties required when using Slack. See Generic Connector Profile Properties for more details.
	Slack ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrInput `pulumi:"slack"`
	// The connector-specific properties required when using Snowflake. See Snowflake Connector Profile Properties for more details.
	Snowflake ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrInput `pulumi:"snowflake"`
	// The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
	Trendmicro ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrInput `pulumi:"trendmicro"`
	// Connector-specific properties required when using Veeva. See Generic Connector Profile Properties for more details.
	Veeva ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrInput `pulumi:"veeva"`
	// Connector-specific properties required when using Zendesk. See Generic Connector Profile Properties for more details.
	Zendesk ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrInput `pulumi:"zendesk"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileProperties)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileProperties)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfileProperties {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput)
}

// The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) Amplitude() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude {
		return v.Amplitude
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput)
}

// The connector-specific profile properties required when using the custom connector. See Custom Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) CustomConnector() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector {
		return v.CustomConnector
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput)
}

// Connector-specific properties required when using Datadog. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) Datadog() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog {
		return v.Datadog
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput)
}

// The connector-specific properties required when using Dynatrace. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) Dynatrace() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace {
		return v.Dynatrace
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput)
}

// The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) GoogleAnalytics() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics {
		return v.GoogleAnalytics
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput)
}

// The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) Honeycode() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode {
		return v.Honeycode
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput)
}

// The connector-specific properties required when using Infor Nexus. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) InforNexus() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus {
		return v.InforNexus
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput)
}

// Connector-specific properties required when using Marketo. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) Marketo() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo {
		return v.Marketo
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput)
}

// Connector-specific properties required when using Amazon Redshift. See Redshift Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) Redshift() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift {
		return v.Redshift
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput)
}

// The connector-specific properties required when using Salesforce. See Salesforce Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) Salesforce() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce {
		return v.Salesforce
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput)
}

// The connector-specific properties required when using SAPOData. See SAPOData Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) SapoData() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData {
		return v.SapoData
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput)
}

// The connector-specific properties required when using ServiceNow. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) ServiceNow() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow {
		return v.ServiceNow
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput)
}

// Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) Singular() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular {
		return v.Singular
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput)
}

// Connector-specific properties required when using Slack. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) Slack() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack {
		return v.Slack
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput)
}

// The connector-specific properties required when using Snowflake. See Snowflake Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) Snowflake() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake {
		return v.Snowflake
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput)
}

// The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) Trendmicro() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro {
		return v.Trendmicro
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput)
}

// Connector-specific properties required when using Veeva. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) Veeva() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva {
		return v.Veeva
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput)
}

// Connector-specific properties required when using Zendesk. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput) Zendesk() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk {
		return v.Zendesk
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) ConnectorProfileConnectorProfileConfigConnectorProfileProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfileProperties
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput)
}

// The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) Amplitude() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude {
		if v == nil {
			return nil
		}
		return v.Amplitude
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput)
}

// The connector-specific profile properties required when using the custom connector. See Custom Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) CustomConnector() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector {
		if v == nil {
			return nil
		}
		return v.CustomConnector
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput)
}

// Connector-specific properties required when using Datadog. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) Datadog() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog {
		if v == nil {
			return nil
		}
		return v.Datadog
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput)
}

// The connector-specific properties required when using Dynatrace. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) Dynatrace() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace {
		if v == nil {
			return nil
		}
		return v.Dynatrace
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput)
}

// The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) GoogleAnalytics() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics {
		if v == nil {
			return nil
		}
		return v.GoogleAnalytics
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput)
}

// The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) Honeycode() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode {
		if v == nil {
			return nil
		}
		return v.Honeycode
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput)
}

// The connector-specific properties required when using Infor Nexus. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) InforNexus() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus {
		if v == nil {
			return nil
		}
		return v.InforNexus
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput)
}

// Connector-specific properties required when using Marketo. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) Marketo() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo {
		if v == nil {
			return nil
		}
		return v.Marketo
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput)
}

// Connector-specific properties required when using Amazon Redshift. See Redshift Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) Redshift() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift {
		if v == nil {
			return nil
		}
		return v.Redshift
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput)
}

// The connector-specific properties required when using Salesforce. See Salesforce Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) Salesforce() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput)
}

// The connector-specific properties required when using SAPOData. See SAPOData Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) SapoData() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData {
		if v == nil {
			return nil
		}
		return v.SapoData
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput)
}

// The connector-specific properties required when using ServiceNow. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) ServiceNow() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow {
		if v == nil {
			return nil
		}
		return v.ServiceNow
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput)
}

// Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) Singular() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular {
		if v == nil {
			return nil
		}
		return v.Singular
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput)
}

// Connector-specific properties required when using Slack. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) Slack() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput)
}

// The connector-specific properties required when using Snowflake. See Snowflake Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) Snowflake() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake {
		if v == nil {
			return nil
		}
		return v.Snowflake
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput)
}

// The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) Trendmicro() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro {
		if v == nil {
			return nil
		}
		return v.Trendmicro
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput)
}

// Connector-specific properties required when using Veeva. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) Veeva() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva {
		if v == nil {
			return nil
		}
		return v.Veeva
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput)
}

// Connector-specific properties required when using Zendesk. See Generic Connector Profile Properties for more details.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput) Zendesk() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfileProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude struct {
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs struct {
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitude
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector struct {
	// The OAuth 2.0 properties required for OAuth 2.0 authentication.
	Oauth2Properties *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties `pulumi:"oauth2Properties"`
	// A map of properties that are required to create a profile for the custom connector.
	ProfileProperties map[string]string `pulumi:"profileProperties"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs struct {
	// The OAuth 2.0 properties required for OAuth 2.0 authentication.
	Oauth2Properties ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrInput `pulumi:"oauth2Properties"`
	// A map of properties that are required to create a profile for the custom connector.
	ProfileProperties pulumi.StringMapInput `pulumi:"profileProperties"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput)
}

// The OAuth 2.0 properties required for OAuth 2.0 authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput) Oauth2Properties() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties {
		return v.Oauth2Properties
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput)
}

// A map of properties that are required to create a profile for the custom connector.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput) ProfileProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector) map[string]string {
		return v.ProfileProperties
	}).(pulumi.StringMapOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput)
}

// The OAuth 2.0 properties required for OAuth 2.0 authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput) Oauth2Properties() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties {
		if v == nil {
			return nil
		}
		return v.Oauth2Properties
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput)
}

// A map of properties that are required to create a profile for the custom connector.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput) ProfileProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnector) map[string]string {
		if v == nil {
			return nil
		}
		return v.ProfileProperties
	}).(pulumi.StringMapOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties struct {
	// The OAuth 2.0 grant type used by connector for OAuth 2.0 authentication. One of: `AUTHORIZATION_CODE`, `CLIENT_CREDENTIALS`.
	Oauth2GrantType string `pulumi:"oauth2GrantType"`
	// The token URL required for OAuth 2.0 authentication.
	TokenUrl string `pulumi:"tokenUrl"`
	// Associates your token URL with a map of properties that you define. Use this parameter to provide any additional details that the connector requires to authenticate your request.
	TokenUrlCustomProperties map[string]string `pulumi:"tokenUrlCustomProperties"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesArgs struct {
	// The OAuth 2.0 grant type used by connector for OAuth 2.0 authentication. One of: `AUTHORIZATION_CODE`, `CLIENT_CREDENTIALS`.
	Oauth2GrantType pulumi.StringInput `pulumi:"oauth2GrantType"`
	// The token URL required for OAuth 2.0 authentication.
	TokenUrl pulumi.StringInput `pulumi:"tokenUrl"`
	// Associates your token URL with a map of properties that you define. Use this parameter to provide any additional details that the connector requires to authenticate your request.
	TokenUrlCustomProperties pulumi.StringMapInput `pulumi:"tokenUrlCustomProperties"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput)
}

// The OAuth 2.0 grant type used by connector for OAuth 2.0 authentication. One of: `AUTHORIZATION_CODE`, `CLIENT_CREDENTIALS`.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput) Oauth2GrantType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties) string {
		return v.Oauth2GrantType
	}).(pulumi.StringOutput)
}

// The token URL required for OAuth 2.0 authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput) TokenUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties) string {
		return v.TokenUrl
	}).(pulumi.StringOutput)
}

// Associates your token URL with a map of properties that you define. Use this parameter to provide any additional details that the connector requires to authenticate your request.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput) TokenUrlCustomProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties) map[string]string {
		return v.TokenUrlCustomProperties
	}).(pulumi.StringMapOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput)
}

// The OAuth 2.0 grant type used by connector for OAuth 2.0 authentication. One of: `AUTHORIZATION_CODE`, `CLIENT_CREDENTIALS`.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput) Oauth2GrantType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties) *string {
		if v == nil {
			return nil
		}
		return &v.Oauth2GrantType
	}).(pulumi.StringPtrOutput)
}

// The token URL required for OAuth 2.0 authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties) *string {
		if v == nil {
			return nil
		}
		return &v.TokenUrl
	}).(pulumi.StringPtrOutput)
}

// Associates your token URL with a map of properties that you define. Use this parameter to provide any additional details that the connector requires to authenticate your request.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput) TokenUrlCustomProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties) map[string]string {
		if v == nil {
			return nil
		}
		return v.TokenUrlCustomProperties
	}).(pulumi.StringMapOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog struct {
	// The location of the Datadog resource.
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs struct {
	// The location of the Datadog resource.
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog) string {
		return v.InstanceUrl
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadog) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace struct {
	// The location of the Datadog resource.
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs struct {
	// The location of the Datadog resource.
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace) string {
		return v.InstanceUrl
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatrace) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics struct {
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs struct {
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode struct {
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs struct {
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycode
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus struct {
	// The location of the Datadog resource.
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs struct {
	// The location of the Datadog resource.
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus) string {
		return v.InstanceUrl
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexus) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo struct {
	// The location of the Datadog resource.
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs struct {
	// The location of the Datadog resource.
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo) string {
		return v.InstanceUrl
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketo) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift struct {
	// A name for the associated Amazon S3 bucket.
	BucketName string `pulumi:"bucketName"`
	// The object key for the destination bucket in which Amazon AppFlow places the files.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// The unique ID that's assigned to an Amazon Redshift cluster.
	ClusterIdentifier *string `pulumi:"clusterIdentifier"`
	// ARN of the IAM role that permits AppFlow to access the database through Data API.
	DataApiRoleArn *string `pulumi:"dataApiRoleArn"`
	// The name of an Amazon Redshift database.
	DatabaseName *string `pulumi:"databaseName"`
	// The JDBC URL of the Amazon Redshift cluster.
	DatabaseUrl *string `pulumi:"databaseUrl"`
	// ARN of the IAM role.
	RoleArn string `pulumi:"roleArn"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs struct {
	// A name for the associated Amazon S3 bucket.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The object key for the destination bucket in which Amazon AppFlow places the files.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// The unique ID that's assigned to an Amazon Redshift cluster.
	ClusterIdentifier pulumi.StringPtrInput `pulumi:"clusterIdentifier"`
	// ARN of the IAM role that permits AppFlow to access the database through Data API.
	DataApiRoleArn pulumi.StringPtrInput `pulumi:"dataApiRoleArn"`
	// The name of an Amazon Redshift database.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// The JDBC URL of the Amazon Redshift cluster.
	DatabaseUrl pulumi.StringPtrInput `pulumi:"databaseUrl"`
	// ARN of the IAM role.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput)
}

// A name for the associated Amazon S3 bucket.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) string {
		return v.BucketName
	}).(pulumi.StringOutput)
}

// The object key for the destination bucket in which Amazon AppFlow places the files.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) *string {
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// The unique ID that's assigned to an Amazon Redshift cluster.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput) ClusterIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) *string {
		return v.ClusterIdentifier
	}).(pulumi.StringPtrOutput)
}

// ARN of the IAM role that permits AppFlow to access the database through Data API.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput) DataApiRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) *string {
		return v.DataApiRoleArn
	}).(pulumi.StringPtrOutput)
}

// The name of an Amazon Redshift database.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) *string {
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// The JDBC URL of the Amazon Redshift cluster.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput) DatabaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) *string {
		return v.DatabaseUrl
	}).(pulumi.StringPtrOutput)
}

// ARN of the IAM role.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) string {
		return v.RoleArn
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput)
}

// A name for the associated Amazon S3 bucket.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// The object key for the destination bucket in which Amazon AppFlow places the files.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// The unique ID that's assigned to an Amazon Redshift cluster.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput) ClusterIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) *string {
		if v == nil {
			return nil
		}
		return v.ClusterIdentifier
	}).(pulumi.StringPtrOutput)
}

// ARN of the IAM role that permits AppFlow to access the database through Data API.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput) DataApiRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) *string {
		if v == nil {
			return nil
		}
		return v.DataApiRoleArn
	}).(pulumi.StringPtrOutput)
}

// The name of an Amazon Redshift database.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// The JDBC URL of the Amazon Redshift cluster.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput) DatabaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseUrl
	}).(pulumi.StringPtrOutput)
}

// ARN of the IAM role.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshift) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce struct {
	// The location of the Datadog resource.
	InstanceUrl *string `pulumi:"instanceUrl"`
	// Indicates whether the connector profile applies to a sandbox or production environment.
	IsSandboxEnvironment *bool `pulumi:"isSandboxEnvironment"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs struct {
	// The location of the Datadog resource.
	InstanceUrl pulumi.StringPtrInput `pulumi:"instanceUrl"`
	// Indicates whether the connector profile applies to a sandbox or production environment.
	IsSandboxEnvironment pulumi.BoolPtrInput `pulumi:"isSandboxEnvironment"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce) *string {
		return v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connector profile applies to a sandbox or production environment.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput) IsSandboxEnvironment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce) *bool {
		return v.IsSandboxEnvironment
	}).(pulumi.BoolPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce) *string {
		if v == nil {
			return nil
		}
		return v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connector profile applies to a sandbox or production environment.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput) IsSandboxEnvironment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforce) *bool {
		if v == nil {
			return nil
		}
		return v.IsSandboxEnvironment
	}).(pulumi.BoolPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData struct {
	// The location of the SAPOData resource.
	ApplicationHostUrl string `pulumi:"applicationHostUrl"`
	// The application path to catalog service.
	ApplicationServicePath string `pulumi:"applicationServicePath"`
	// The client number for the client creating the connection.
	ClientNumber string `pulumi:"clientNumber"`
	// The logon language of SAPOData instance.
	LogonLanguage *string `pulumi:"logonLanguage"`
	// The SAPOData OAuth properties required for OAuth type authentication.
	OauthProperties *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties `pulumi:"oauthProperties"`
	// The port number of the SAPOData instance.
	PortNumber int `pulumi:"portNumber"`
	// The SAPOData Private Link service name to be used for private data transfers.
	PrivateLinkServiceName *string `pulumi:"privateLinkServiceName"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs struct {
	// The location of the SAPOData resource.
	ApplicationHostUrl pulumi.StringInput `pulumi:"applicationHostUrl"`
	// The application path to catalog service.
	ApplicationServicePath pulumi.StringInput `pulumi:"applicationServicePath"`
	// The client number for the client creating the connection.
	ClientNumber pulumi.StringInput `pulumi:"clientNumber"`
	// The logon language of SAPOData instance.
	LogonLanguage pulumi.StringPtrInput `pulumi:"logonLanguage"`
	// The SAPOData OAuth properties required for OAuth type authentication.
	OauthProperties ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrInput `pulumi:"oauthProperties"`
	// The port number of the SAPOData instance.
	PortNumber pulumi.IntInput `pulumi:"portNumber"`
	// The SAPOData Private Link service name to be used for private data transfers.
	PrivateLinkServiceName pulumi.StringPtrInput `pulumi:"privateLinkServiceName"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput)
}

// The location of the SAPOData resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput) ApplicationHostUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) string {
		return v.ApplicationHostUrl
	}).(pulumi.StringOutput)
}

// The application path to catalog service.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput) ApplicationServicePath() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) string {
		return v.ApplicationServicePath
	}).(pulumi.StringOutput)
}

// The client number for the client creating the connection.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput) ClientNumber() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) string {
		return v.ClientNumber
	}).(pulumi.StringOutput)
}

// The logon language of SAPOData instance.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput) LogonLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) *string {
		return v.LogonLanguage
	}).(pulumi.StringPtrOutput)
}

// The SAPOData OAuth properties required for OAuth type authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput) OauthProperties() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties {
		return v.OauthProperties
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput)
}

// The port number of the SAPOData instance.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput) PortNumber() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) int {
		return v.PortNumber
	}).(pulumi.IntOutput)
}

// The SAPOData Private Link service name to be used for private data transfers.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput) PrivateLinkServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) *string {
		return v.PrivateLinkServiceName
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput)
}

// The location of the SAPOData resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput) ApplicationHostUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationHostUrl
	}).(pulumi.StringPtrOutput)
}

// The application path to catalog service.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput) ApplicationServicePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationServicePath
	}).(pulumi.StringPtrOutput)
}

// The client number for the client creating the connection.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput) ClientNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) *string {
		if v == nil {
			return nil
		}
		return &v.ClientNumber
	}).(pulumi.StringPtrOutput)
}

// The logon language of SAPOData instance.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput) LogonLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) *string {
		if v == nil {
			return nil
		}
		return v.LogonLanguage
	}).(pulumi.StringPtrOutput)
}

// The SAPOData OAuth properties required for OAuth type authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput) OauthProperties() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties {
		if v == nil {
			return nil
		}
		return v.OauthProperties
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput)
}

// The port number of the SAPOData instance.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput) PortNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) *int {
		if v == nil {
			return nil
		}
		return &v.PortNumber
	}).(pulumi.IntPtrOutput)
}

// The SAPOData Private Link service name to be used for private data transfers.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput) PrivateLinkServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceName
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties struct {
	// The authorization code url required to redirect to SAP Login Page to fetch authorization code for OAuth type authentication.
	AuthCodeUrl string `pulumi:"authCodeUrl"`
	// The OAuth scopes required for OAuth type authentication.
	OauthScopes []string `pulumi:"oauthScopes"`
	// The token URL required for OAuth 2.0 authentication.
	TokenUrl string `pulumi:"tokenUrl"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs struct {
	// The authorization code url required to redirect to SAP Login Page to fetch authorization code for OAuth type authentication.
	AuthCodeUrl pulumi.StringInput `pulumi:"authCodeUrl"`
	// The OAuth scopes required for OAuth type authentication.
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// The token URL required for OAuth 2.0 authentication.
	TokenUrl pulumi.StringInput `pulumi:"tokenUrl"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput)
}

// The authorization code url required to redirect to SAP Login Page to fetch authorization code for OAuth type authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput) AuthCodeUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties) string {
		return v.AuthCodeUrl
	}).(pulumi.StringOutput)
}

// The OAuth scopes required for OAuth type authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties) []string {
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

// The token URL required for OAuth 2.0 authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput) TokenUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties) string {
		return v.TokenUrl
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput)
}

// The authorization code url required to redirect to SAP Login Page to fetch authorization code for OAuth type authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput) AuthCodeUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AuthCodeUrl
	}).(pulumi.StringPtrOutput)
}

// The OAuth scopes required for OAuth type authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

// The token URL required for OAuth 2.0 authentication.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties) *string {
		if v == nil {
			return nil
		}
		return &v.TokenUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow struct {
	// The location of the Datadog resource.
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs struct {
	// The location of the Datadog resource.
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow) string {
		return v.InstanceUrl
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNow) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular struct {
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs struct {
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingular
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack struct {
	// The location of the Datadog resource.
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs struct {
	// The location of the Datadog resource.
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack) string {
		return v.InstanceUrl
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlack) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake struct {
	// The name of the account.
	AccountName *string `pulumi:"accountName"`
	// A name for the associated Amazon S3 bucket.
	BucketName string `pulumi:"bucketName"`
	// The object key for the destination bucket in which Amazon AppFlow places the files.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// The SAPOData Private Link service name to be used for private data transfers.
	PrivateLinkServiceName *string `pulumi:"privateLinkServiceName"`
	// AWS Region of the Snowflake account.
	Region *string `pulumi:"region"`
	// Name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the Snowflake account. This is written in the following format: `<Database>.<Schema>.<Stage Name>`.
	Stage string `pulumi:"stage"`
	// The name of the Snowflake warehouse.
	Warehouse string `pulumi:"warehouse"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs struct {
	// The name of the account.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// A name for the associated Amazon S3 bucket.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The object key for the destination bucket in which Amazon AppFlow places the files.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// The SAPOData Private Link service name to be used for private data transfers.
	PrivateLinkServiceName pulumi.StringPtrInput `pulumi:"privateLinkServiceName"`
	// AWS Region of the Snowflake account.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the Snowflake account. This is written in the following format: `<Database>.<Schema>.<Stage Name>`.
	Stage pulumi.StringInput `pulumi:"stage"`
	// The name of the Snowflake warehouse.
	Warehouse pulumi.StringInput `pulumi:"warehouse"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput)
}

// The name of the account.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) *string {
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

// A name for the associated Amazon S3 bucket.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) string {
		return v.BucketName
	}).(pulumi.StringOutput)
}

// The object key for the destination bucket in which Amazon AppFlow places the files.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) *string {
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// The SAPOData Private Link service name to be used for private data transfers.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput) PrivateLinkServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) *string {
		return v.PrivateLinkServiceName
	}).(pulumi.StringPtrOutput)
}

// AWS Region of the Snowflake account.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) *string {
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the Snowflake account. This is written in the following format: `<Database>.<Schema>.<Stage Name>`.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) string {
		return v.Stage
	}).(pulumi.StringOutput)
}

// The name of the Snowflake warehouse.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput) Warehouse() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) string {
		return v.Warehouse
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput)
}

// The name of the account.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

// A name for the associated Amazon S3 bucket.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// The object key for the destination bucket in which Amazon AppFlow places the files.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// The SAPOData Private Link service name to be used for private data transfers.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput) PrivateLinkServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceName
	}).(pulumi.StringPtrOutput)
}

// AWS Region of the Snowflake account.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the Snowflake account. This is written in the following format: `<Database>.<Schema>.<Stage Name>`.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) *string {
		if v == nil {
			return nil
		}
		return &v.Stage
	}).(pulumi.StringPtrOutput)
}

// The name of the Snowflake warehouse.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput) Warehouse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflake) *string {
		if v == nil {
			return nil
		}
		return &v.Warehouse
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro struct {
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs struct {
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicro
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva struct {
	// The location of the Datadog resource.
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs struct {
	// The location of the Datadog resource.
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva) string {
		return v.InstanceUrl
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeeva) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk struct {
	// The location of the Datadog resource.
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskInput` via:
//
//	ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs{...}
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs struct {
	// The location of the Datadog resource.
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput)
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput).ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs, ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtr and ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrInput` via:
//
//	        ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs{...}
//
//	or:
//
//	        nil
type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput
	ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput
}

type connectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrType ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs

func ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtr(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrInput {
	return (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrType) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk) *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk {
		return &v
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk) string {
		return v.InstanceUrl
	}).(pulumi.StringOutput)
}

type ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput) ToConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput) Elem() ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk) ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk
		return ret
	}).(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput)
}

// The location of the Datadog resource.
func (o ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendesk) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfig struct {
	// API version that the destination connector uses.
	ApiVersion *string `pulumi:"apiVersion"`
	// Name of the connector profile. This name must be unique for each connector profile in the AWS account.
	ConnectorProfileName *string `pulumi:"connectorProfileName"`
	// Type of connector, such as Salesforce, Amplitude, and so on. Valid values are `Salesforce`, `Singular`, `Slack`, `Redshift`, `S3`, `Marketo`, `Googleanalytics`, `Zendesk`, `Servicenow`, `Datadog`, `Trendmicro`, `Snowflake`, `Dynatrace`, `Infornexus`, `Amplitude`, `Veeva`, `EventBridge`, `LookoutMetrics`, `Upsolver`, `Honeycode`, `CustomerProfiles`, `SAPOData`, and `CustomConnector`.
	ConnectorType string `pulumi:"connectorType"`
	// This stores the information that is required to query a particular connector. See Destination Connector Properties for more information.
	DestinationConnectorProperties FlowDestinationFlowConfigDestinationConnectorProperties `pulumi:"destinationConnectorProperties"`
}

// FlowDestinationFlowConfigInput is an input type that accepts FlowDestinationFlowConfigArgs and FlowDestinationFlowConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigInput` via:
//
//	FlowDestinationFlowConfigArgs{...}
type FlowDestinationFlowConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigOutput() FlowDestinationFlowConfigOutput
	ToFlowDestinationFlowConfigOutputWithContext(context.Context) FlowDestinationFlowConfigOutput
}

type FlowDestinationFlowConfigArgs struct {
	// API version that the destination connector uses.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Name of the connector profile. This name must be unique for each connector profile in the AWS account.
	ConnectorProfileName pulumi.StringPtrInput `pulumi:"connectorProfileName"`
	// Type of connector, such as Salesforce, Amplitude, and so on. Valid values are `Salesforce`, `Singular`, `Slack`, `Redshift`, `S3`, `Marketo`, `Googleanalytics`, `Zendesk`, `Servicenow`, `Datadog`, `Trendmicro`, `Snowflake`, `Dynatrace`, `Infornexus`, `Amplitude`, `Veeva`, `EventBridge`, `LookoutMetrics`, `Upsolver`, `Honeycode`, `CustomerProfiles`, `SAPOData`, and `CustomConnector`.
	ConnectorType pulumi.StringInput `pulumi:"connectorType"`
	// This stores the information that is required to query a particular connector. See Destination Connector Properties for more information.
	DestinationConnectorProperties FlowDestinationFlowConfigDestinationConnectorPropertiesInput `pulumi:"destinationConnectorProperties"`
}

func (FlowDestinationFlowConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigArgs) ToFlowDestinationFlowConfigOutput() FlowDestinationFlowConfigOutput {
	return i.ToFlowDestinationFlowConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigArgs) ToFlowDestinationFlowConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigOutput)
}

// FlowDestinationFlowConfigArrayInput is an input type that accepts FlowDestinationFlowConfigArray and FlowDestinationFlowConfigArrayOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigArrayInput` via:
//
//	FlowDestinationFlowConfigArray{ FlowDestinationFlowConfigArgs{...} }
type FlowDestinationFlowConfigArrayInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigArrayOutput() FlowDestinationFlowConfigArrayOutput
	ToFlowDestinationFlowConfigArrayOutputWithContext(context.Context) FlowDestinationFlowConfigArrayOutput
}

type FlowDestinationFlowConfigArray []FlowDestinationFlowConfigInput

func (FlowDestinationFlowConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowDestinationFlowConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigArray) ToFlowDestinationFlowConfigArrayOutput() FlowDestinationFlowConfigArrayOutput {
	return i.ToFlowDestinationFlowConfigArrayOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigArray) ToFlowDestinationFlowConfigArrayOutputWithContext(ctx context.Context) FlowDestinationFlowConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigArrayOutput)
}

type FlowDestinationFlowConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigOutput) ToFlowDestinationFlowConfigOutput() FlowDestinationFlowConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigOutput) ToFlowDestinationFlowConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigOutput {
	return o
}

// API version that the destination connector uses.
func (o FlowDestinationFlowConfigOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfig) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Name of the connector profile. This name must be unique for each connector profile in the AWS account.
func (o FlowDestinationFlowConfigOutput) ConnectorProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfig) *string { return v.ConnectorProfileName }).(pulumi.StringPtrOutput)
}

// Type of connector, such as Salesforce, Amplitude, and so on. Valid values are `Salesforce`, `Singular`, `Slack`, `Redshift`, `S3`, `Marketo`, `Googleanalytics`, `Zendesk`, `Servicenow`, `Datadog`, `Trendmicro`, `Snowflake`, `Dynatrace`, `Infornexus`, `Amplitude`, `Veeva`, `EventBridge`, `LookoutMetrics`, `Upsolver`, `Honeycode`, `CustomerProfiles`, `SAPOData`, and `CustomConnector`.
func (o FlowDestinationFlowConfigOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfig) string { return v.ConnectorType }).(pulumi.StringOutput)
}

// This stores the information that is required to query a particular connector. See Destination Connector Properties for more information.
func (o FlowDestinationFlowConfigOutput) DestinationConnectorProperties() FlowDestinationFlowConfigDestinationConnectorPropertiesOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfig) FlowDestinationFlowConfigDestinationConnectorProperties {
		return v.DestinationConnectorProperties
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesOutput)
}

type FlowDestinationFlowConfigArrayOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowDestinationFlowConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigArrayOutput) ToFlowDestinationFlowConfigArrayOutput() FlowDestinationFlowConfigArrayOutput {
	return o
}

func (o FlowDestinationFlowConfigArrayOutput) ToFlowDestinationFlowConfigArrayOutputWithContext(ctx context.Context) FlowDestinationFlowConfigArrayOutput {
	return o
}

func (o FlowDestinationFlowConfigArrayOutput) Index(i pulumi.IntInput) FlowDestinationFlowConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowDestinationFlowConfig {
		return vs[0].([]FlowDestinationFlowConfig)[vs[1].(int)]
	}).(FlowDestinationFlowConfigOutput)
}

type FlowDestinationFlowConfigDestinationConnectorProperties struct {
	// Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.
	CustomConnector *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector `pulumi:"customConnector"`
	// Properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.
	CustomerProfiles *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles `pulumi:"customerProfiles"`
	// Properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.
	EventBridge *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge `pulumi:"eventBridge"`
	// Properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.
	Honeycode      *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode      `pulumi:"honeycode"`
	LookoutMetrics *FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics `pulumi:"lookoutMetrics"`
	// Properties that are required to query Marketo. See Generic Destination Properties for more details.
	Marketo *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo `pulumi:"marketo"`
	// Properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.
	Redshift *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift `pulumi:"redshift"`
	// Properties that are required to query Amazon S3. See S3 Destination Properties for more details.
	S3 *FlowDestinationFlowConfigDestinationConnectorPropertiesS3 `pulumi:"s3"`
	// Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.
	Salesforce *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce `pulumi:"salesforce"`
	// Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.
	SapoData *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData `pulumi:"sapoData"`
	// Properties that are required to query Snowflake. See Snowflake Destination Properties for more details.
	Snowflake *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake `pulumi:"snowflake"`
	// Properties that are required to query Upsolver. See Upsolver Destination Properties for more details.
	Upsolver *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver `pulumi:"upsolver"`
	// Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.
	Zendesk *FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk `pulumi:"zendesk"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesArgs struct {
	// Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.
	CustomConnector FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrInput `pulumi:"customConnector"`
	// Properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.
	CustomerProfiles FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrInput `pulumi:"customerProfiles"`
	// Properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.
	EventBridge FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrInput `pulumi:"eventBridge"`
	// Properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.
	Honeycode      FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrInput      `pulumi:"honeycode"`
	LookoutMetrics FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrInput `pulumi:"lookoutMetrics"`
	// Properties that are required to query Marketo. See Generic Destination Properties for more details.
	Marketo FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrInput `pulumi:"marketo"`
	// Properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.
	Redshift FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrInput `pulumi:"redshift"`
	// Properties that are required to query Amazon S3. See S3 Destination Properties for more details.
	S3 FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrInput `pulumi:"s3"`
	// Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.
	Salesforce FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrInput `pulumi:"salesforce"`
	// Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.
	SapoData FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrInput `pulumi:"sapoData"`
	// Properties that are required to query Snowflake. See Snowflake Destination Properties for more details.
	Snowflake FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrInput `pulumi:"snowflake"`
	// Properties that are required to query Upsolver. See Upsolver Destination Properties for more details.
	Upsolver FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrInput `pulumi:"upsolver"`
	// Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.
	Zendesk FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrInput `pulumi:"zendesk"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorProperties)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorProperties)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesOutput {
	return o
}

// Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) CustomConnector() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorProperties) *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector {
		return v.CustomConnector
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput)
}

// Properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) CustomerProfiles() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorProperties) *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles {
		return v.CustomerProfiles
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput)
}

// Properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) EventBridge() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorProperties) *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge {
		return v.EventBridge
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput)
}

// Properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) Honeycode() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorProperties) *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode {
		return v.Honeycode
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput)
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) LookoutMetrics() FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorProperties) *FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics {
		return v.LookoutMetrics
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput)
}

// Properties that are required to query Marketo. See Generic Destination Properties for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) Marketo() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorProperties) *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo {
		return v.Marketo
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput)
}

// Properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) Redshift() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorProperties) *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift {
		return v.Redshift
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput)
}

// Properties that are required to query Amazon S3. See S3 Destination Properties for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) S3() FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorProperties) *FlowDestinationFlowConfigDestinationConnectorPropertiesS3 {
		return v.S3
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput)
}

// Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) Salesforce() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorProperties) *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce {
		return v.Salesforce
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput)
}

// Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) SapoData() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorProperties) *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData {
		return v.SapoData
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput)
}

// Properties that are required to query Snowflake. See Snowflake Destination Properties for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) Snowflake() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorProperties) *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake {
		return v.Snowflake
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput)
}

// Properties that are required to query Upsolver. See Upsolver Destination Properties for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) Upsolver() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorProperties) *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver {
		return v.Upsolver
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput)
}

// Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesOutput) Zendesk() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorProperties) *FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk {
		return v.Zendesk
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector struct {
	// Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.
	CustomProperties map[string]string `pulumi:"customProperties"`
	// Entity specified in the custom connector as a destination in the flow.
	EntityName string `pulumi:"entityName"`
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig `pulumi:"errorHandlingConfig"`
	// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
	IdFieldNames []string `pulumi:"idFieldNames"`
	// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
	WriteOperationType *string `pulumi:"writeOperationType"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorArgs struct {
	// Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.
	CustomProperties pulumi.StringMapInput `pulumi:"customProperties"`
	// Entity specified in the custom connector as a destination in the flow.
	EntityName pulumi.StringInput `pulumi:"entityName"`
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrInput `pulumi:"errorHandlingConfig"`
	// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
	IdFieldNames pulumi.StringArrayInput `pulumi:"idFieldNames"`
	// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
	WriteOperationType pulumi.StringPtrInput `pulumi:"writeOperationType"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector) *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput)
}

// Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput) CustomProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector) map[string]string {
		return v.CustomProperties
	}).(pulumi.StringMapOutput)
}

// Entity specified in the custom connector as a destination in the flow.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput) EntityName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector) string {
		return v.EntityName
	}).(pulumi.StringOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector) *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig {
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput)
}

// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput) IdFieldNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector) []string {
		return v.IdFieldNames
	}).(pulumi.StringArrayOutput)
}

// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput) WriteOperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector) *string {
		return v.WriteOperationType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput)
}

// Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput) CustomProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomProperties
	}).(pulumi.StringMapOutput)
}

// Entity specified in the custom connector as a destination in the flow.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput) EntityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector) *string {
		if v == nil {
			return nil
		}
		return &v.EntityName
	}).(pulumi.StringPtrOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector) *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig {
		if v == nil {
			return nil
		}
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput)
}

// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput) IdFieldNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector) []string {
		if v == nil {
			return nil
		}
		return v.IdFieldNames
	}).(pulumi.StringArrayOutput)
}

// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput) WriteOperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector) *string {
		if v == nil {
			return nil
		}
		return v.WriteOperationType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig struct {
	// Name of the Amazon S3 bucket.
	BucketName *string `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError *bool `pulumi:"failOnFirstDestinationError"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigArgs struct {
	// Name of the Amazon S3 bucket.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError pulumi.BoolPtrInput `pulumi:"failOnFirstDestinationError"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig) *string {
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig) *string {
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig) *bool {
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles struct {
	// Unique name of the Amazon Connect Customer Profiles domain.
	DomainName string `pulumi:"domainName"`
	// Object specified in the Amazon Connect Customer Profiles flow destination.
	ObjectTypeName *string `pulumi:"objectTypeName"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesArgs struct {
	// Unique name of the Amazon Connect Customer Profiles domain.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// Object specified in the Amazon Connect Customer Profiles flow destination.
	ObjectTypeName pulumi.StringPtrInput `pulumi:"objectTypeName"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles) *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput)
}

// Unique name of the Amazon Connect Customer Profiles domain.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles) string {
		return v.DomainName
	}).(pulumi.StringOutput)
}

// Object specified in the Amazon Connect Customer Profiles flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput) ObjectTypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles) *string {
		return v.ObjectTypeName
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles) FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput)
}

// Unique name of the Amazon Connect Customer Profiles domain.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

// Object specified in the Amazon Connect Customer Profiles flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput) ObjectTypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles) *string {
		if v == nil {
			return nil
		}
		return v.ObjectTypeName
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge struct {
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig `pulumi:"errorHandlingConfig"`
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeArgs struct {
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrInput `pulumi:"errorHandlingConfig"`
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtr and FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrType FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge) *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge) *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig {
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput)
}

// Object specified in the flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge) string { return v.Object }).(pulumi.StringOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge) *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig {
		if v == nil {
			return nil
		}
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput)
}

// Object specified in the flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig struct {
	// Name of the Amazon S3 bucket.
	BucketName *string `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError *bool `pulumi:"failOnFirstDestinationError"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigArgs struct {
	// Name of the Amazon S3 bucket.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError pulumi.BoolPtrInput `pulumi:"failOnFirstDestinationError"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig) *string {
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig) *string {
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig) *bool {
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode struct {
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig `pulumi:"errorHandlingConfig"`
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeArgs struct {
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrInput `pulumi:"errorHandlingConfig"`
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtr and FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrType FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode) *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode) *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig {
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput)
}

// Object specified in the flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode) string { return v.Object }).(pulumi.StringOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode) *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig {
		if v == nil {
			return nil
		}
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput)
}

// Object specified in the flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig struct {
	// Name of the Amazon S3 bucket.
	BucketName *string `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError *bool `pulumi:"failOnFirstDestinationError"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigArgs struct {
	// Name of the Amazon S3 bucket.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError pulumi.BoolPtrInput `pulumi:"failOnFirstDestinationError"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig) *string {
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig) *string {
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig) *bool {
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics struct {
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsArgs struct {
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics) *FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics) FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo struct {
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig `pulumi:"errorHandlingConfig"`
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoArgs struct {
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrInput `pulumi:"errorHandlingConfig"`
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo) *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo) *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig {
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput)
}

// Object specified in the flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo) string { return v.Object }).(pulumi.StringOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo) *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig {
		if v == nil {
			return nil
		}
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput)
}

// Object specified in the flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig struct {
	// Name of the Amazon S3 bucket.
	BucketName *string `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError *bool `pulumi:"failOnFirstDestinationError"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigArgs struct {
	// Name of the Amazon S3 bucket.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError pulumi.BoolPtrInput `pulumi:"failOnFirstDestinationError"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig) *string {
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig) *string {
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig) *bool {
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift struct {
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig `pulumi:"errorHandlingConfig"`
	// Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
	IntermediateBucketName string `pulumi:"intermediateBucketName"`
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs struct {
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrInput `pulumi:"errorHandlingConfig"`
	// Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
	IntermediateBucketName pulumi.StringInput `pulumi:"intermediateBucketName"`
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift) *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift) *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig {
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput)
}

// Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput) IntermediateBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift) string {
		return v.IntermediateBucketName
	}).(pulumi.StringOutput)
}

// Object specified in the flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift) string { return v.Object }).(pulumi.StringOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift) *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig {
		if v == nil {
			return nil
		}
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput)
}

// Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput) IntermediateBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift) *string {
		if v == nil {
			return nil
		}
		return &v.IntermediateBucketName
	}).(pulumi.StringPtrOutput)
}

// Object specified in the flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig struct {
	// Name of the Amazon S3 bucket.
	BucketName *string `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError *bool `pulumi:"failOnFirstDestinationError"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs struct {
	// Name of the Amazon S3 bucket.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError pulumi.BoolPtrInput `pulumi:"failOnFirstDestinationError"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig) *string {
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig) *string {
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig) *bool {
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3 struct {
	// Name of the Amazon S3 bucket.
	BucketName string `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.
	S3OutputFormatConfig *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig `pulumi:"s3OutputFormatConfig"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesS3Input is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesS3Args and FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesS3Input` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesS3Args{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesS3Input interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3Output() FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3OutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3Args struct {
	// Name of the Amazon S3 bucket.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.
	S3OutputFormatConfig FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrInput `pulumi:"s3OutputFormatConfig"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3Args) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3Output() FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3OutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3Args) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3OutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3Args) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3Args) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output).ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesS3Args, FlowDestinationFlowConfigDestinationConnectorPropertiesS3Ptr and FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesS3Args{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesS3PtrType FlowDestinationFlowConfigDestinationConnectorPropertiesS3Args

func FlowDestinationFlowConfigDestinationConnectorPropertiesS3Ptr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3Args) FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesS3PtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesS3)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesS3PtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesS3PtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3Output() FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3OutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesS3) *FlowDestinationFlowConfigDestinationConnectorPropertiesS3 {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesS3) string { return v.BucketName }).(pulumi.StringOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesS3) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

// Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output) S3OutputFormatConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesS3) *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig {
		return v.S3OutputFormatConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesS3)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3) FlowDestinationFlowConfigDestinationConnectorPropertiesS3 {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesS3
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput) S3OutputFormatConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3) *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig {
		if v == nil {
			return nil
		}
		return v.S3OutputFormatConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig struct {
	// Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.
	AggregationConfig *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig `pulumi:"aggregationConfig"`
	// File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are `CSV`, `JSON`, and `PARQUET`.
	FileType *string `pulumi:"fileType"`
	// Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.
	PrefixConfig *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig `pulumi:"prefixConfig"`
	// Whether the data types from the source system need to be preserved (Only valid for `Parquet` file type)
	PreserveSourceDataTyping *bool `pulumi:"preserveSourceDataTyping"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigArgs struct {
	// Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.
	AggregationConfig FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrInput `pulumi:"aggregationConfig"`
	// File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are `CSV`, `JSON`, and `PARQUET`.
	FileType pulumi.StringPtrInput `pulumi:"fileType"`
	// Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.
	PrefixConfig FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrInput `pulumi:"prefixConfig"`
	// Whether the data types from the source system need to be preserved (Only valid for `Parquet` file type)
	PreserveSourceDataTyping pulumi.BoolPtrInput `pulumi:"preserveSourceDataTyping"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput)
}

// Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput) AggregationConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig {
		return v.AggregationConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput)
}

// File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are `CSV`, `JSON`, and `PARQUET`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput) FileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig) *string {
		return v.FileType
	}).(pulumi.StringPtrOutput)
}

// Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput) PrefixConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig {
		return v.PrefixConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput)
}

// Whether the data types from the source system need to be preserved (Only valid for `Parquet` file type)
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput) PreserveSourceDataTyping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig) *bool {
		return v.PreserveSourceDataTyping
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput)
}

// Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput) AggregationConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig {
		if v == nil {
			return nil
		}
		return v.AggregationConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput)
}

// File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are `CSV`, `JSON`, and `PARQUET`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput) FileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig) *string {
		if v == nil {
			return nil
		}
		return v.FileType
	}).(pulumi.StringPtrOutput)
}

// Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput) PrefixConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig {
		if v == nil {
			return nil
		}
		return v.PrefixConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput)
}

// Whether the data types from the source system need to be preserved (Only valid for `Parquet` file type)
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput) PreserveSourceDataTyping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig) *bool {
		if v == nil {
			return nil
		}
		return v.PreserveSourceDataTyping
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig struct {
	// Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are `None` and `SingleFile`.
	AggregationType *string `pulumi:"aggregationType"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigArgs struct {
	// Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are `None` and `SingleFile`.
	AggregationType pulumi.StringPtrInput `pulumi:"aggregationType"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput)
}

// Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are `None` and `SingleFile`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig) *string {
		return v.AggregationType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput)
}

// Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are `None` and `SingleFile`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig) *string {
		if v == nil {
			return nil
		}
		return v.AggregationType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig struct {
	// Determines the level of granularity that's included in the prefix. Valid values are `YEAR`, `MONTH`, `DAY`, `HOUR`, and `MINUTE`.
	PrefixFormat *string `pulumi:"prefixFormat"`
	// Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are `FILENAME`, `PATH`, and `PATH_AND_FILENAME`.
	PrefixType *string `pulumi:"prefixType"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigArgs struct {
	// Determines the level of granularity that's included in the prefix. Valid values are `YEAR`, `MONTH`, `DAY`, `HOUR`, and `MINUTE`.
	PrefixFormat pulumi.StringPtrInput `pulumi:"prefixFormat"`
	// Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are `FILENAME`, `PATH`, and `PATH_AND_FILENAME`.
	PrefixType pulumi.StringPtrInput `pulumi:"prefixType"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput)
}

// Determines the level of granularity that's included in the prefix. Valid values are `YEAR`, `MONTH`, `DAY`, `HOUR`, and `MINUTE`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput) PrefixFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig) *string {
		return v.PrefixFormat
	}).(pulumi.StringPtrOutput)
}

// Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are `FILENAME`, `PATH`, and `PATH_AND_FILENAME`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput) PrefixType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig) *string {
		return v.PrefixType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput)
}

// Determines the level of granularity that's included in the prefix. Valid values are `YEAR`, `MONTH`, `DAY`, `HOUR`, and `MINUTE`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput) PrefixFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrefixFormat
	}).(pulumi.StringPtrOutput)
}

// Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are `FILENAME`, `PATH`, and `PATH_AND_FILENAME`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput) PrefixType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrefixType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce struct {
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig `pulumi:"errorHandlingConfig"`
	// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
	IdFieldNames []string `pulumi:"idFieldNames"`
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
	// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
	WriteOperationType *string `pulumi:"writeOperationType"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceArgs struct {
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrInput `pulumi:"errorHandlingConfig"`
	// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
	IdFieldNames pulumi.StringArrayInput `pulumi:"idFieldNames"`
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
	// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
	WriteOperationType pulumi.StringPtrInput `pulumi:"writeOperationType"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtr and FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrType FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce) *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce) *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig {
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput)
}

// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput) IdFieldNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce) []string {
		return v.IdFieldNames
	}).(pulumi.StringArrayOutput)
}

// Object specified in the flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce) string { return v.Object }).(pulumi.StringOutput)
}

// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput) WriteOperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce) *string {
		return v.WriteOperationType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce) *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig {
		if v == nil {
			return nil
		}
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput)
}

// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput) IdFieldNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce) []string {
		if v == nil {
			return nil
		}
		return v.IdFieldNames
	}).(pulumi.StringArrayOutput)
}

// Object specified in the flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput) WriteOperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce) *string {
		if v == nil {
			return nil
		}
		return v.WriteOperationType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig struct {
	// Name of the Amazon S3 bucket.
	BucketName *string `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError *bool `pulumi:"failOnFirstDestinationError"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigArgs struct {
	// Name of the Amazon S3 bucket.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError pulumi.BoolPtrInput `pulumi:"failOnFirstDestinationError"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig) *string {
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig) *string {
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig) *bool {
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData struct {
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig `pulumi:"errorHandlingConfig"`
	// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
	IdFieldNames []string `pulumi:"idFieldNames"`
	// Object path specified in the SAPOData flow destination.
	ObjectPath string `pulumi:"objectPath"`
	// Determines how Amazon AppFlow handles the success response that it gets from the connector after placing data. See Success Response Handling Config for more details.
	SuccessResponseHandlingConfig *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig `pulumi:"successResponseHandlingConfig"`
	// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
	WriteOperationType *string `pulumi:"writeOperationType"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataArgs struct {
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrInput `pulumi:"errorHandlingConfig"`
	// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
	IdFieldNames pulumi.StringArrayInput `pulumi:"idFieldNames"`
	// Object path specified in the SAPOData flow destination.
	ObjectPath pulumi.StringInput `pulumi:"objectPath"`
	// Determines how Amazon AppFlow handles the success response that it gets from the connector after placing data. See Success Response Handling Config for more details.
	SuccessResponseHandlingConfig FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrInput `pulumi:"successResponseHandlingConfig"`
	// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
	WriteOperationType pulumi.StringPtrInput `pulumi:"writeOperationType"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData) *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData) *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig {
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput)
}

// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput) IdFieldNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData) []string {
		return v.IdFieldNames
	}).(pulumi.StringArrayOutput)
}

// Object path specified in the SAPOData flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput) ObjectPath() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData) string { return v.ObjectPath }).(pulumi.StringOutput)
}

// Determines how Amazon AppFlow handles the success response that it gets from the connector after placing data. See Success Response Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput) SuccessResponseHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData) *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig {
		return v.SuccessResponseHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput)
}

// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput) WriteOperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData) *string {
		return v.WriteOperationType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData) *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig {
		if v == nil {
			return nil
		}
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput)
}

// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput) IdFieldNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData) []string {
		if v == nil {
			return nil
		}
		return v.IdFieldNames
	}).(pulumi.StringArrayOutput)
}

// Object path specified in the SAPOData flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput) ObjectPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectPath
	}).(pulumi.StringPtrOutput)
}

// Determines how Amazon AppFlow handles the success response that it gets from the connector after placing data. See Success Response Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput) SuccessResponseHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData) *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig {
		if v == nil {
			return nil
		}
		return v.SuccessResponseHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput)
}

// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput) WriteOperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData) *string {
		if v == nil {
			return nil
		}
		return v.WriteOperationType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig struct {
	// Name of the Amazon S3 bucket.
	BucketName *string `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError *bool `pulumi:"failOnFirstDestinationError"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigArgs struct {
	// Name of the Amazon S3 bucket.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError pulumi.BoolPtrInput `pulumi:"failOnFirstDestinationError"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig) *string {
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig) *string {
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig) *bool {
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig struct {
	// Name of the Amazon S3 bucket.
	BucketName *string `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigArgs struct {
	// Name of the Amazon S3 bucket.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig) *string {
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig) *string {
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake struct {
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig `pulumi:"errorHandlingConfig"`
	// Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
	IntermediateBucketName string `pulumi:"intermediateBucketName"`
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeArgs struct {
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrInput `pulumi:"errorHandlingConfig"`
	// Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
	IntermediateBucketName pulumi.StringInput `pulumi:"intermediateBucketName"`
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtr and FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrType FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake) *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake) *string {
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake) *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig {
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput)
}

// Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput) IntermediateBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake) string {
		return v.IntermediateBucketName
	}).(pulumi.StringOutput)
}

// Object specified in the flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake) string { return v.Object }).(pulumi.StringOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake) *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig {
		if v == nil {
			return nil
		}
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput)
}

// Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput) IntermediateBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake) *string {
		if v == nil {
			return nil
		}
		return &v.IntermediateBucketName
	}).(pulumi.StringPtrOutput)
}

// Object specified in the flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig struct {
	// Name of the Amazon S3 bucket.
	BucketName *string `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError *bool `pulumi:"failOnFirstDestinationError"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigArgs struct {
	// Name of the Amazon S3 bucket.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError pulumi.BoolPtrInput `pulumi:"failOnFirstDestinationError"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig) *string {
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig) *string {
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig) *bool {
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver struct {
	// Name of the Amazon S3 bucket.
	BucketName string `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.
	S3OutputFormatConfig FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig `pulumi:"s3OutputFormatConfig"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs struct {
	// Name of the Amazon S3 bucket.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.
	S3OutputFormatConfig FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigInput `pulumi:"s3OutputFormatConfig"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver) *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver) string { return v.BucketName }).(pulumi.StringOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

// Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput) S3OutputFormatConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig {
		return v.S3OutputFormatConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput) S3OutputFormatConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver) *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig {
		if v == nil {
			return nil
		}
		return &v.S3OutputFormatConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig struct {
	// Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.
	AggregationConfig *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig `pulumi:"aggregationConfig"`
	// File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are `CSV`, `JSON`, and `PARQUET`.
	FileType *string `pulumi:"fileType"`
	// Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.
	PrefixConfig FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig `pulumi:"prefixConfig"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs struct {
	// Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.
	AggregationConfig FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrInput `pulumi:"aggregationConfig"`
	// File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are `CSV`, `JSON`, and `PARQUET`.
	FileType pulumi.StringPtrInput `pulumi:"fileType"`
	// Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.
	PrefixConfig FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigInput `pulumi:"prefixConfig"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput)
}

// Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput) AggregationConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig {
		return v.AggregationConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput)
}

// File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are `CSV`, `JSON`, and `PARQUET`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput) FileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig) *string {
		return v.FileType
	}).(pulumi.StringPtrOutput)
}

// Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput) PrefixConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig {
		return v.PrefixConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput)
}

// Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput) AggregationConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig {
		if v == nil {
			return nil
		}
		return v.AggregationConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput)
}

// File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are `CSV`, `JSON`, and `PARQUET`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput) FileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig) *string {
		if v == nil {
			return nil
		}
		return v.FileType
	}).(pulumi.StringPtrOutput)
}

// Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput) PrefixConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig {
		if v == nil {
			return nil
		}
		return &v.PrefixConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig struct {
	// Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are `None` and `SingleFile`.
	AggregationType *string `pulumi:"aggregationType"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigArgs struct {
	// Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are `None` and `SingleFile`.
	AggregationType pulumi.StringPtrInput `pulumi:"aggregationType"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput)
}

// Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are `None` and `SingleFile`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig) *string {
		return v.AggregationType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput)
}

// Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are `None` and `SingleFile`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig) *string {
		if v == nil {
			return nil
		}
		return v.AggregationType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig struct {
	// Determines the level of granularity that's included in the prefix. Valid values are `YEAR`, `MONTH`, `DAY`, `HOUR`, and `MINUTE`.
	PrefixFormat *string `pulumi:"prefixFormat"`
	// Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are `FILENAME`, `PATH`, and `PATH_AND_FILENAME`.
	PrefixType string `pulumi:"prefixType"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigArgs struct {
	// Determines the level of granularity that's included in the prefix. Valid values are `YEAR`, `MONTH`, `DAY`, `HOUR`, and `MINUTE`.
	PrefixFormat pulumi.StringPtrInput `pulumi:"prefixFormat"`
	// Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are `FILENAME`, `PATH`, and `PATH_AND_FILENAME`.
	PrefixType pulumi.StringInput `pulumi:"prefixType"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput)
}

// Determines the level of granularity that's included in the prefix. Valid values are `YEAR`, `MONTH`, `DAY`, `HOUR`, and `MINUTE`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput) PrefixFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig) *string {
		return v.PrefixFormat
	}).(pulumi.StringPtrOutput)
}

// Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are `FILENAME`, `PATH`, and `PATH_AND_FILENAME`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput) PrefixType() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig) string {
		return v.PrefixType
	}).(pulumi.StringOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput)
}

// Determines the level of granularity that's included in the prefix. Valid values are `YEAR`, `MONTH`, `DAY`, `HOUR`, and `MINUTE`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput) PrefixFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrefixFormat
	}).(pulumi.StringPtrOutput)
}

// Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are `FILENAME`, `PATH`, and `PATH_AND_FILENAME`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput) PrefixType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig) *string {
		if v == nil {
			return nil
		}
		return &v.PrefixType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk struct {
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig *FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig `pulumi:"errorHandlingConfig"`
	// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
	IdFieldNames []string `pulumi:"idFieldNames"`
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
	// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
	WriteOperationType *string `pulumi:"writeOperationType"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs struct {
	// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
	ErrorHandlingConfig FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrInput `pulumi:"errorHandlingConfig"`
	// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
	IdFieldNames pulumi.StringArrayInput `pulumi:"idFieldNames"`
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
	// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
	WriteOperationType pulumi.StringPtrInput `pulumi:"writeOperationType"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk) *FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk) *FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig {
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput)
}

// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput) IdFieldNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk) []string { return v.IdFieldNames }).(pulumi.StringArrayOutput)
}

// Object specified in the flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk) string { return v.Object }).(pulumi.StringOutput)
}

// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput) WriteOperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk) *string {
		return v.WriteOperationType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk) FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput)
}

// Settings that determine how Amazon AppFlow handles an error when placing data in the custom connector as destination. See Error Handling Config for more details.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput) ErrorHandlingConfig() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk) *FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig {
		if v == nil {
			return nil
		}
		return v.ErrorHandlingConfig
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput)
}

// Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput) IdFieldNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk) []string {
		if v == nil {
			return nil
		}
		return v.IdFieldNames
	}).(pulumi.StringArrayOutput)
}

// Object specified in the flow destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

// Type of write operation to be performed in the custom connector when it's used as destination. Valid values are `INSERT`, `UPSERT`, `UPDATE`, and `DELETE`.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput) WriteOperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk) *string {
		if v == nil {
			return nil
		}
		return v.WriteOperationType
	}).(pulumi.StringPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig struct {
	// Name of the Amazon S3 bucket.
	BucketName *string `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError *bool `pulumi:"failOnFirstDestinationError"`
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs and FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigInput` via:
//
//	FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs{...}
type FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs struct {
	// Name of the Amazon S3 bucket.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
	FailOnFirstDestinationError pulumi.BoolPtrInput `pulumi:"failOnFirstDestinationError"`
}

func (FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput)
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput).ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutputWithContext(ctx)
}

// FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrInput is an input type that accepts FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs, FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtr and FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrInput` via:
//
//	        FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs{...}
//
//	or:
//
//	        nil
type FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput
	ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutputWithContext(context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput
}

type flowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrType FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs

func FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtr(v *FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrInput {
	return (*flowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrType)(v)
}

func (*flowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig)(nil)).Elem()
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput {
	return i.ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i *flowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrType) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput {
	return o.ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig) *FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig {
		return &v
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig) *string {
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig) *string {
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig) *bool {
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput) ToFlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput) Elem() FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig) FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig {
		if v != nil {
			return *v
		}
		var ret FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig
		return ret
	}).(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// If the flow should fail after the first instance of a failure when attempting to place data in the destination.
func (o FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput) FailOnFirstDestinationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FailOnFirstDestinationError
	}).(pulumi.BoolPtrOutput)
}

type FlowSourceFlowConfig struct {
	// API version that the destination connector uses.
	ApiVersion *string `pulumi:"apiVersion"`
	// Name of the connector profile. This name must be unique for each connector profile in the AWS account.
	ConnectorProfileName *string `pulumi:"connectorProfileName"`
	// Type of connector, such as Salesforce, Amplitude, and so on. Valid values are `Salesforce`, `Singular`, `Slack`, `Redshift`, `S3`, `Marketo`, `Googleanalytics`, `Zendesk`, `Servicenow`, `Datadog`, `Trendmicro`, `Snowflake`, `Dynatrace`, `Infornexus`, `Amplitude`, `Veeva`, `EventBridge`, `LookoutMetrics`, `Upsolver`, `Honeycode`, `CustomerProfiles`, `SAPOData`, and `CustomConnector`.
	ConnectorType string `pulumi:"connectorType"`
	// Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. See Incremental Pull Config for more details.
	IncrementalPullConfig *FlowSourceFlowConfigIncrementalPullConfig `pulumi:"incrementalPullConfig"`
	// Information that is required to query a particular source connector. See Source Connector Properties for details.
	SourceConnectorProperties FlowSourceFlowConfigSourceConnectorProperties `pulumi:"sourceConnectorProperties"`
}

// FlowSourceFlowConfigInput is an input type that accepts FlowSourceFlowConfigArgs and FlowSourceFlowConfigOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigInput` via:
//
//	FlowSourceFlowConfigArgs{...}
type FlowSourceFlowConfigInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigOutput() FlowSourceFlowConfigOutput
	ToFlowSourceFlowConfigOutputWithContext(context.Context) FlowSourceFlowConfigOutput
}

type FlowSourceFlowConfigArgs struct {
	// API version that the destination connector uses.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Name of the connector profile. This name must be unique for each connector profile in the AWS account.
	ConnectorProfileName pulumi.StringPtrInput `pulumi:"connectorProfileName"`
	// Type of connector, such as Salesforce, Amplitude, and so on. Valid values are `Salesforce`, `Singular`, `Slack`, `Redshift`, `S3`, `Marketo`, `Googleanalytics`, `Zendesk`, `Servicenow`, `Datadog`, `Trendmicro`, `Snowflake`, `Dynatrace`, `Infornexus`, `Amplitude`, `Veeva`, `EventBridge`, `LookoutMetrics`, `Upsolver`, `Honeycode`, `CustomerProfiles`, `SAPOData`, and `CustomConnector`.
	ConnectorType pulumi.StringInput `pulumi:"connectorType"`
	// Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. See Incremental Pull Config for more details.
	IncrementalPullConfig FlowSourceFlowConfigIncrementalPullConfigPtrInput `pulumi:"incrementalPullConfig"`
	// Information that is required to query a particular source connector. See Source Connector Properties for details.
	SourceConnectorProperties FlowSourceFlowConfigSourceConnectorPropertiesInput `pulumi:"sourceConnectorProperties"`
}

func (FlowSourceFlowConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfig)(nil)).Elem()
}

func (i FlowSourceFlowConfigArgs) ToFlowSourceFlowConfigOutput() FlowSourceFlowConfigOutput {
	return i.ToFlowSourceFlowConfigOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigArgs) ToFlowSourceFlowConfigOutputWithContext(ctx context.Context) FlowSourceFlowConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigOutput)
}

func (i FlowSourceFlowConfigArgs) ToFlowSourceFlowConfigPtrOutput() FlowSourceFlowConfigPtrOutput {
	return i.ToFlowSourceFlowConfigPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigArgs) ToFlowSourceFlowConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigOutput).ToFlowSourceFlowConfigPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigPtrInput is an input type that accepts FlowSourceFlowConfigArgs, FlowSourceFlowConfigPtr and FlowSourceFlowConfigPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigPtrInput` via:
//
//	        FlowSourceFlowConfigArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigPtrOutput() FlowSourceFlowConfigPtrOutput
	ToFlowSourceFlowConfigPtrOutputWithContext(context.Context) FlowSourceFlowConfigPtrOutput
}

type flowSourceFlowConfigPtrType FlowSourceFlowConfigArgs

func FlowSourceFlowConfigPtr(v *FlowSourceFlowConfigArgs) FlowSourceFlowConfigPtrInput {
	return (*flowSourceFlowConfigPtrType)(v)
}

func (*flowSourceFlowConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfig)(nil)).Elem()
}

func (i *flowSourceFlowConfigPtrType) ToFlowSourceFlowConfigPtrOutput() FlowSourceFlowConfigPtrOutput {
	return i.ToFlowSourceFlowConfigPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigPtrType) ToFlowSourceFlowConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigPtrOutput)
}

type FlowSourceFlowConfigOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfig)(nil)).Elem()
}

func (o FlowSourceFlowConfigOutput) ToFlowSourceFlowConfigOutput() FlowSourceFlowConfigOutput {
	return o
}

func (o FlowSourceFlowConfigOutput) ToFlowSourceFlowConfigOutputWithContext(ctx context.Context) FlowSourceFlowConfigOutput {
	return o
}

func (o FlowSourceFlowConfigOutput) ToFlowSourceFlowConfigPtrOutput() FlowSourceFlowConfigPtrOutput {
	return o.ToFlowSourceFlowConfigPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigOutput) ToFlowSourceFlowConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfig) *FlowSourceFlowConfig {
		return &v
	}).(FlowSourceFlowConfigPtrOutput)
}

// API version that the destination connector uses.
func (o FlowSourceFlowConfigOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfig) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Name of the connector profile. This name must be unique for each connector profile in the AWS account.
func (o FlowSourceFlowConfigOutput) ConnectorProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfig) *string { return v.ConnectorProfileName }).(pulumi.StringPtrOutput)
}

// Type of connector, such as Salesforce, Amplitude, and so on. Valid values are `Salesforce`, `Singular`, `Slack`, `Redshift`, `S3`, `Marketo`, `Googleanalytics`, `Zendesk`, `Servicenow`, `Datadog`, `Trendmicro`, `Snowflake`, `Dynatrace`, `Infornexus`, `Amplitude`, `Veeva`, `EventBridge`, `LookoutMetrics`, `Upsolver`, `Honeycode`, `CustomerProfiles`, `SAPOData`, and `CustomConnector`.
func (o FlowSourceFlowConfigOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfig) string { return v.ConnectorType }).(pulumi.StringOutput)
}

// Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. See Incremental Pull Config for more details.
func (o FlowSourceFlowConfigOutput) IncrementalPullConfig() FlowSourceFlowConfigIncrementalPullConfigPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfig) *FlowSourceFlowConfigIncrementalPullConfig {
		return v.IncrementalPullConfig
	}).(FlowSourceFlowConfigIncrementalPullConfigPtrOutput)
}

// Information that is required to query a particular source connector. See Source Connector Properties for details.
func (o FlowSourceFlowConfigOutput) SourceConnectorProperties() FlowSourceFlowConfigSourceConnectorPropertiesOutput {
	return o.ApplyT(func(v FlowSourceFlowConfig) FlowSourceFlowConfigSourceConnectorProperties {
		return v.SourceConnectorProperties
	}).(FlowSourceFlowConfigSourceConnectorPropertiesOutput)
}

type FlowSourceFlowConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfig)(nil)).Elem()
}

func (o FlowSourceFlowConfigPtrOutput) ToFlowSourceFlowConfigPtrOutput() FlowSourceFlowConfigPtrOutput {
	return o
}

func (o FlowSourceFlowConfigPtrOutput) ToFlowSourceFlowConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigPtrOutput {
	return o
}

func (o FlowSourceFlowConfigPtrOutput) Elem() FlowSourceFlowConfigOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfig) FlowSourceFlowConfig {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfig
		return ret
	}).(FlowSourceFlowConfigOutput)
}

// API version that the destination connector uses.
func (o FlowSourceFlowConfigPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfig) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Name of the connector profile. This name must be unique for each connector profile in the AWS account.
func (o FlowSourceFlowConfigPtrOutput) ConnectorProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorProfileName
	}).(pulumi.StringPtrOutput)
}

// Type of connector, such as Salesforce, Amplitude, and so on. Valid values are `Salesforce`, `Singular`, `Slack`, `Redshift`, `S3`, `Marketo`, `Googleanalytics`, `Zendesk`, `Servicenow`, `Datadog`, `Trendmicro`, `Snowflake`, `Dynatrace`, `Infornexus`, `Amplitude`, `Veeva`, `EventBridge`, `LookoutMetrics`, `Upsolver`, `Honeycode`, `CustomerProfiles`, `SAPOData`, and `CustomConnector`.
func (o FlowSourceFlowConfigPtrOutput) ConnectorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectorType
	}).(pulumi.StringPtrOutput)
}

// Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. See Incremental Pull Config for more details.
func (o FlowSourceFlowConfigPtrOutput) IncrementalPullConfig() FlowSourceFlowConfigIncrementalPullConfigPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfig) *FlowSourceFlowConfigIncrementalPullConfig {
		if v == nil {
			return nil
		}
		return v.IncrementalPullConfig
	}).(FlowSourceFlowConfigIncrementalPullConfigPtrOutput)
}

// Information that is required to query a particular source connector. See Source Connector Properties for details.
func (o FlowSourceFlowConfigPtrOutput) SourceConnectorProperties() FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfig) *FlowSourceFlowConfigSourceConnectorProperties {
		if v == nil {
			return nil
		}
		return &v.SourceConnectorProperties
	}).(FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput)
}

type FlowSourceFlowConfigIncrementalPullConfig struct {
	// Field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source.
	DatetimeTypeFieldName *string `pulumi:"datetimeTypeFieldName"`
}

// FlowSourceFlowConfigIncrementalPullConfigInput is an input type that accepts FlowSourceFlowConfigIncrementalPullConfigArgs and FlowSourceFlowConfigIncrementalPullConfigOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigIncrementalPullConfigInput` via:
//
//	FlowSourceFlowConfigIncrementalPullConfigArgs{...}
type FlowSourceFlowConfigIncrementalPullConfigInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigIncrementalPullConfigOutput() FlowSourceFlowConfigIncrementalPullConfigOutput
	ToFlowSourceFlowConfigIncrementalPullConfigOutputWithContext(context.Context) FlowSourceFlowConfigIncrementalPullConfigOutput
}

type FlowSourceFlowConfigIncrementalPullConfigArgs struct {
	// Field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source.
	DatetimeTypeFieldName pulumi.StringPtrInput `pulumi:"datetimeTypeFieldName"`
}

func (FlowSourceFlowConfigIncrementalPullConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigIncrementalPullConfig)(nil)).Elem()
}

func (i FlowSourceFlowConfigIncrementalPullConfigArgs) ToFlowSourceFlowConfigIncrementalPullConfigOutput() FlowSourceFlowConfigIncrementalPullConfigOutput {
	return i.ToFlowSourceFlowConfigIncrementalPullConfigOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigIncrementalPullConfigArgs) ToFlowSourceFlowConfigIncrementalPullConfigOutputWithContext(ctx context.Context) FlowSourceFlowConfigIncrementalPullConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigIncrementalPullConfigOutput)
}

func (i FlowSourceFlowConfigIncrementalPullConfigArgs) ToFlowSourceFlowConfigIncrementalPullConfigPtrOutput() FlowSourceFlowConfigIncrementalPullConfigPtrOutput {
	return i.ToFlowSourceFlowConfigIncrementalPullConfigPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigIncrementalPullConfigArgs) ToFlowSourceFlowConfigIncrementalPullConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigIncrementalPullConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigIncrementalPullConfigOutput).ToFlowSourceFlowConfigIncrementalPullConfigPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigIncrementalPullConfigPtrInput is an input type that accepts FlowSourceFlowConfigIncrementalPullConfigArgs, FlowSourceFlowConfigIncrementalPullConfigPtr and FlowSourceFlowConfigIncrementalPullConfigPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigIncrementalPullConfigPtrInput` via:
//
//	        FlowSourceFlowConfigIncrementalPullConfigArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigIncrementalPullConfigPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigIncrementalPullConfigPtrOutput() FlowSourceFlowConfigIncrementalPullConfigPtrOutput
	ToFlowSourceFlowConfigIncrementalPullConfigPtrOutputWithContext(context.Context) FlowSourceFlowConfigIncrementalPullConfigPtrOutput
}

type flowSourceFlowConfigIncrementalPullConfigPtrType FlowSourceFlowConfigIncrementalPullConfigArgs

func FlowSourceFlowConfigIncrementalPullConfigPtr(v *FlowSourceFlowConfigIncrementalPullConfigArgs) FlowSourceFlowConfigIncrementalPullConfigPtrInput {
	return (*flowSourceFlowConfigIncrementalPullConfigPtrType)(v)
}

func (*flowSourceFlowConfigIncrementalPullConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigIncrementalPullConfig)(nil)).Elem()
}

func (i *flowSourceFlowConfigIncrementalPullConfigPtrType) ToFlowSourceFlowConfigIncrementalPullConfigPtrOutput() FlowSourceFlowConfigIncrementalPullConfigPtrOutput {
	return i.ToFlowSourceFlowConfigIncrementalPullConfigPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigIncrementalPullConfigPtrType) ToFlowSourceFlowConfigIncrementalPullConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigIncrementalPullConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigIncrementalPullConfigPtrOutput)
}

type FlowSourceFlowConfigIncrementalPullConfigOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigIncrementalPullConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigIncrementalPullConfig)(nil)).Elem()
}

func (o FlowSourceFlowConfigIncrementalPullConfigOutput) ToFlowSourceFlowConfigIncrementalPullConfigOutput() FlowSourceFlowConfigIncrementalPullConfigOutput {
	return o
}

func (o FlowSourceFlowConfigIncrementalPullConfigOutput) ToFlowSourceFlowConfigIncrementalPullConfigOutputWithContext(ctx context.Context) FlowSourceFlowConfigIncrementalPullConfigOutput {
	return o
}

func (o FlowSourceFlowConfigIncrementalPullConfigOutput) ToFlowSourceFlowConfigIncrementalPullConfigPtrOutput() FlowSourceFlowConfigIncrementalPullConfigPtrOutput {
	return o.ToFlowSourceFlowConfigIncrementalPullConfigPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigIncrementalPullConfigOutput) ToFlowSourceFlowConfigIncrementalPullConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigIncrementalPullConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigIncrementalPullConfig) *FlowSourceFlowConfigIncrementalPullConfig {
		return &v
	}).(FlowSourceFlowConfigIncrementalPullConfigPtrOutput)
}

// Field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source.
func (o FlowSourceFlowConfigIncrementalPullConfigOutput) DatetimeTypeFieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigIncrementalPullConfig) *string { return v.DatetimeTypeFieldName }).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigIncrementalPullConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigIncrementalPullConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigIncrementalPullConfig)(nil)).Elem()
}

func (o FlowSourceFlowConfigIncrementalPullConfigPtrOutput) ToFlowSourceFlowConfigIncrementalPullConfigPtrOutput() FlowSourceFlowConfigIncrementalPullConfigPtrOutput {
	return o
}

func (o FlowSourceFlowConfigIncrementalPullConfigPtrOutput) ToFlowSourceFlowConfigIncrementalPullConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigIncrementalPullConfigPtrOutput {
	return o
}

func (o FlowSourceFlowConfigIncrementalPullConfigPtrOutput) Elem() FlowSourceFlowConfigIncrementalPullConfigOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigIncrementalPullConfig) FlowSourceFlowConfigIncrementalPullConfig {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigIncrementalPullConfig
		return ret
	}).(FlowSourceFlowConfigIncrementalPullConfigOutput)
}

// Field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source.
func (o FlowSourceFlowConfigIncrementalPullConfigPtrOutput) DatetimeTypeFieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigIncrementalPullConfig) *string {
		if v == nil {
			return nil
		}
		return v.DatetimeTypeFieldName
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorProperties struct {
	// Information that is required for querying Amplitude. See Generic Source Properties for more details.
	Amplitude *FlowSourceFlowConfigSourceConnectorPropertiesAmplitude `pulumi:"amplitude"`
	// Properties that are applied when the custom connector is being used as a source. See Custom Connector Source Properties.
	CustomConnector *FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector `pulumi:"customConnector"`
	// Information that is required for querying Datadog. See Generic Source Properties for more details.
	Datadog *FlowSourceFlowConfigSourceConnectorPropertiesDatadog `pulumi:"datadog"`
	// Operation to be performed on the provided Dynatrace source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Dynatrace *FlowSourceFlowConfigSourceConnectorPropertiesDynatrace `pulumi:"dynatrace"`
	// Operation to be performed on the provided Google Analytics source fields. Valid values are `PROJECTION` and `BETWEEN`.
	GoogleAnalytics *FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics `pulumi:"googleAnalytics"`
	// Information that is required for querying Infor Nexus. See Generic Source Properties for more details.
	InforNexus *FlowSourceFlowConfigSourceConnectorPropertiesInforNexus `pulumi:"inforNexus"`
	// Information that is required for querying Marketo. See Generic Source Properties for more details.
	Marketo *FlowSourceFlowConfigSourceConnectorPropertiesMarketo `pulumi:"marketo"`
	// Information that is required for querying Amazon S3. See S3 Source Properties for more details.
	S3 *FlowSourceFlowConfigSourceConnectorPropertiesS3 `pulumi:"s3"`
	// Information that is required for querying Salesforce. See Salesforce Source Properties for more details.
	Salesforce *FlowSourceFlowConfigSourceConnectorPropertiesSalesforce `pulumi:"salesforce"`
	// Information that is required for querying SAPOData as a flow source. See SAPO Source Properties for more details.
	SapoData *FlowSourceFlowConfigSourceConnectorPropertiesSapoData `pulumi:"sapoData"`
	// Information that is required for querying ServiceNow. See Generic Source Properties for more details.
	ServiceNow *FlowSourceFlowConfigSourceConnectorPropertiesServiceNow `pulumi:"serviceNow"`
	// Information that is required for querying Singular. See Generic Source Properties for more details.
	Singular *FlowSourceFlowConfigSourceConnectorPropertiesSingular `pulumi:"singular"`
	// Information that is required for querying Slack. See Generic Source Properties for more details.
	Slack *FlowSourceFlowConfigSourceConnectorPropertiesSlack `pulumi:"slack"`
	// Operation to be performed on the provided Trend Micro source fields. Valid values are `PROJECTION`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Trendmicro *FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro `pulumi:"trendmicro"`
	// Information that is required for querying Veeva. See Veeva Source Properties for more details.
	Veeva *FlowSourceFlowConfigSourceConnectorPropertiesVeeva `pulumi:"veeva"`
	// Information that is required for querying Zendesk. See Generic Source Properties for more details.
	Zendesk *FlowSourceFlowConfigSourceConnectorPropertiesZendesk `pulumi:"zendesk"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesArgs and FlowSourceFlowConfigSourceConnectorPropertiesOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesOutput() FlowSourceFlowConfigSourceConnectorPropertiesOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesArgs struct {
	// Information that is required for querying Amplitude. See Generic Source Properties for more details.
	Amplitude FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrInput `pulumi:"amplitude"`
	// Properties that are applied when the custom connector is being used as a source. See Custom Connector Source Properties.
	CustomConnector FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrInput `pulumi:"customConnector"`
	// Information that is required for querying Datadog. See Generic Source Properties for more details.
	Datadog FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrInput `pulumi:"datadog"`
	// Operation to be performed on the provided Dynatrace source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Dynatrace FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrInput `pulumi:"dynatrace"`
	// Operation to be performed on the provided Google Analytics source fields. Valid values are `PROJECTION` and `BETWEEN`.
	GoogleAnalytics FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrInput `pulumi:"googleAnalytics"`
	// Information that is required for querying Infor Nexus. See Generic Source Properties for more details.
	InforNexus FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrInput `pulumi:"inforNexus"`
	// Information that is required for querying Marketo. See Generic Source Properties for more details.
	Marketo FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrInput `pulumi:"marketo"`
	// Information that is required for querying Amazon S3. See S3 Source Properties for more details.
	S3 FlowSourceFlowConfigSourceConnectorPropertiesS3PtrInput `pulumi:"s3"`
	// Information that is required for querying Salesforce. See Salesforce Source Properties for more details.
	Salesforce FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrInput `pulumi:"salesforce"`
	// Information that is required for querying SAPOData as a flow source. See SAPO Source Properties for more details.
	SapoData FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrInput `pulumi:"sapoData"`
	// Information that is required for querying ServiceNow. See Generic Source Properties for more details.
	ServiceNow FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrInput `pulumi:"serviceNow"`
	// Information that is required for querying Singular. See Generic Source Properties for more details.
	Singular FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrInput `pulumi:"singular"`
	// Information that is required for querying Slack. See Generic Source Properties for more details.
	Slack FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrInput `pulumi:"slack"`
	// Operation to be performed on the provided Trend Micro source fields. Valid values are `PROJECTION`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Trendmicro FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrInput `pulumi:"trendmicro"`
	// Information that is required for querying Veeva. See Veeva Source Properties for more details.
	Veeva FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrInput `pulumi:"veeva"`
	// Information that is required for querying Zendesk. See Generic Source Properties for more details.
	Zendesk FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrInput `pulumi:"zendesk"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorProperties)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesOutput() FlowSourceFlowConfigSourceConnectorPropertiesOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesPtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesArgs, FlowSourceFlowConfigSourceConnectorPropertiesPtr and FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesPtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesPtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesPtrType FlowSourceFlowConfigSourceConnectorPropertiesArgs

func FlowSourceFlowConfigSourceConnectorPropertiesPtr(v *FlowSourceFlowConfigSourceConnectorPropertiesArgs) FlowSourceFlowConfigSourceConnectorPropertiesPtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesPtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorProperties)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorProperties)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesOutput() FlowSourceFlowConfigSourceConnectorPropertiesOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorProperties {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput)
}

// Information that is required for querying Amplitude. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) Amplitude() FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesAmplitude {
		return v.Amplitude
	}).(FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput)
}

// Properties that are applied when the custom connector is being used as a source. See Custom Connector Source Properties.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) CustomConnector() FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector {
		return v.CustomConnector
	}).(FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput)
}

// Information that is required for querying Datadog. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) Datadog() FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesDatadog {
		return v.Datadog
	}).(FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput)
}

// Operation to be performed on the provided Dynatrace source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) Dynatrace() FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesDynatrace {
		return v.Dynatrace
	}).(FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput)
}

// Operation to be performed on the provided Google Analytics source fields. Valid values are `PROJECTION` and `BETWEEN`.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) GoogleAnalytics() FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics {
		return v.GoogleAnalytics
	}).(FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput)
}

// Information that is required for querying Infor Nexus. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) InforNexus() FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesInforNexus {
		return v.InforNexus
	}).(FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput)
}

// Information that is required for querying Marketo. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) Marketo() FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesMarketo {
		return v.Marketo
	}).(FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput)
}

// Information that is required for querying Amazon S3. See S3 Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) S3() FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesS3 {
		return v.S3
	}).(FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput)
}

// Information that is required for querying Salesforce. See Salesforce Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) Salesforce() FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesSalesforce {
		return v.Salesforce
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput)
}

// Information that is required for querying SAPOData as a flow source. See SAPO Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) SapoData() FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesSapoData {
		return v.SapoData
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput)
}

// Information that is required for querying ServiceNow. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) ServiceNow() FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesServiceNow {
		return v.ServiceNow
	}).(FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput)
}

// Information that is required for querying Singular. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) Singular() FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesSingular {
		return v.Singular
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput)
}

// Information that is required for querying Slack. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) Slack() FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesSlack {
		return v.Slack
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput)
}

// Operation to be performed on the provided Trend Micro source fields. Valid values are `PROJECTION`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) Trendmicro() FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro {
		return v.Trendmicro
	}).(FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput)
}

// Information that is required for querying Veeva. See Veeva Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) Veeva() FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesVeeva {
		return v.Veeva
	}).(FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput)
}

// Information that is required for querying Zendesk. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesOutput) Zendesk() FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesZendesk {
		return v.Zendesk
	}).(FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorProperties)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) FlowSourceFlowConfigSourceConnectorProperties {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorProperties
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesOutput)
}

// Information that is required for querying Amplitude. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) Amplitude() FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesAmplitude {
		if v == nil {
			return nil
		}
		return v.Amplitude
	}).(FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput)
}

// Properties that are applied when the custom connector is being used as a source. See Custom Connector Source Properties.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) CustomConnector() FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector {
		if v == nil {
			return nil
		}
		return v.CustomConnector
	}).(FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput)
}

// Information that is required for querying Datadog. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) Datadog() FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesDatadog {
		if v == nil {
			return nil
		}
		return v.Datadog
	}).(FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput)
}

// Operation to be performed on the provided Dynatrace source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) Dynatrace() FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesDynatrace {
		if v == nil {
			return nil
		}
		return v.Dynatrace
	}).(FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput)
}

// Operation to be performed on the provided Google Analytics source fields. Valid values are `PROJECTION` and `BETWEEN`.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) GoogleAnalytics() FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics {
		if v == nil {
			return nil
		}
		return v.GoogleAnalytics
	}).(FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput)
}

// Information that is required for querying Infor Nexus. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) InforNexus() FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesInforNexus {
		if v == nil {
			return nil
		}
		return v.InforNexus
	}).(FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput)
}

// Information that is required for querying Marketo. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) Marketo() FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesMarketo {
		if v == nil {
			return nil
		}
		return v.Marketo
	}).(FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput)
}

// Information that is required for querying Amazon S3. See S3 Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) S3() FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesS3 {
		if v == nil {
			return nil
		}
		return v.S3
	}).(FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput)
}

// Information that is required for querying Salesforce. See Salesforce Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) Salesforce() FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesSalesforce {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput)
}

// Information that is required for querying SAPOData as a flow source. See SAPO Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) SapoData() FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesSapoData {
		if v == nil {
			return nil
		}
		return v.SapoData
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput)
}

// Information that is required for querying ServiceNow. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) ServiceNow() FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesServiceNow {
		if v == nil {
			return nil
		}
		return v.ServiceNow
	}).(FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput)
}

// Information that is required for querying Singular. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) Singular() FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesSingular {
		if v == nil {
			return nil
		}
		return v.Singular
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput)
}

// Information that is required for querying Slack. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) Slack() FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesSlack {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput)
}

// Operation to be performed on the provided Trend Micro source fields. Valid values are `PROJECTION`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) Trendmicro() FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro {
		if v == nil {
			return nil
		}
		return v.Trendmicro
	}).(FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput)
}

// Information that is required for querying Veeva. See Veeva Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) Veeva() FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesVeeva {
		if v == nil {
			return nil
		}
		return v.Veeva
	}).(FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput)
}

// Information that is required for querying Zendesk. See Generic Source Properties for more details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput) Zendesk() FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorProperties) *FlowSourceFlowConfigSourceConnectorPropertiesZendesk {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesAmplitude struct {
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs and FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput() FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs struct {
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesAmplitude)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput() FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs, FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtr and FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrType FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs

func FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtr(v *FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs) FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesAmplitude)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesAmplitude)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput() FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesAmplitude) *FlowSourceFlowConfigSourceConnectorPropertiesAmplitude {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesAmplitude) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesAmplitude)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesAmplitude) FlowSourceFlowConfigSourceConnectorPropertiesAmplitude {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesAmplitude
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesAmplitude) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector struct {
	// Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.
	CustomProperties map[string]string `pulumi:"customProperties"`
	// Entity specified in the custom connector as a destination in the flow.
	EntityName string `pulumi:"entityName"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs and FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput() FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs struct {
	// Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.
	CustomProperties pulumi.StringMapInput `pulumi:"customProperties"`
	// Entity specified in the custom connector as a destination in the flow.
	EntityName pulumi.StringInput `pulumi:"entityName"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput() FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs, FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtr and FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrType FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs

func FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtr(v *FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs) FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput() FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector) *FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput)
}

// Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.
func (o FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput) CustomProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector) map[string]string {
		return v.CustomProperties
	}).(pulumi.StringMapOutput)
}

// Entity specified in the custom connector as a destination in the flow.
func (o FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput) EntityName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector) string { return v.EntityName }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector) FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput)
}

// Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.
func (o FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput) CustomProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomProperties
	}).(pulumi.StringMapOutput)
}

// Entity specified in the custom connector as a destination in the flow.
func (o FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput) EntityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector) *string {
		if v == nil {
			return nil
		}
		return &v.EntityName
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesDatadog struct {
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesDatadogInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs and FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesDatadogInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesDatadogInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput() FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs struct {
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesDatadog)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput() FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs, FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtr and FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesDatadogPtrType FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs

func FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtr(v *FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs) FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesDatadogPtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesDatadogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesDatadog)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesDatadogPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesDatadogPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesDatadog)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput() FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesDatadog) *FlowSourceFlowConfigSourceConnectorPropertiesDatadog {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesDatadog) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesDatadog)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesDatadog) FlowSourceFlowConfigSourceConnectorPropertiesDatadog {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesDatadog
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesDatadog) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesDynatrace struct {
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesDynatraceInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs and FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesDynatraceInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesDynatraceInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput() FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs struct {
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesDynatrace)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput() FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs, FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtr and FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesDynatracePtrType FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs

func FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtr(v *FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs) FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesDynatracePtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesDynatracePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesDynatrace)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesDynatracePtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesDynatracePtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesDynatrace)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput() FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesDynatrace) *FlowSourceFlowConfigSourceConnectorPropertiesDynatrace {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesDynatrace) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesDynatrace)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesDynatrace) FlowSourceFlowConfigSourceConnectorPropertiesDynatrace {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesDynatrace
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesDynatrace) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics struct {
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs and FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput() FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs struct {
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput() FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs, FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtr and FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrType FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs

func FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtr(v *FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs) FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput() FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics) *FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics) FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesInforNexus struct {
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesInforNexusInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs and FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesInforNexusInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesInforNexusInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput() FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs struct {
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesInforNexus)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput() FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs, FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtr and FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrType FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs

func FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtr(v *FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs) FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesInforNexus)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesInforNexus)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput() FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesInforNexus) *FlowSourceFlowConfigSourceConnectorPropertiesInforNexus {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesInforNexus) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesInforNexus)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesInforNexus) FlowSourceFlowConfigSourceConnectorPropertiesInforNexus {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesInforNexus
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesInforNexus) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesMarketo struct {
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesMarketoInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs and FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesMarketoInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesMarketoInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput() FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs struct {
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesMarketo)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput() FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs, FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtr and FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesMarketoPtrType FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs

func FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtr(v *FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs) FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesMarketoPtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesMarketoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesMarketo)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesMarketoPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesMarketoPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesMarketo)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput() FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesMarketo) *FlowSourceFlowConfigSourceConnectorPropertiesMarketo {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesMarketo) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesMarketo)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesMarketo) FlowSourceFlowConfigSourceConnectorPropertiesMarketo {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesMarketo
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesMarketo) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesS3 struct {
	// Name of the Amazon S3 bucket.
	BucketName string `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// When you use Amazon S3 as the source, the configuration format that you provide the flow input data. See S3 Input Format Config for details.
	S3InputFormatConfig *FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig `pulumi:"s3InputFormatConfig"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesS3Input is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesS3Args and FlowSourceFlowConfigSourceConnectorPropertiesS3Output values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesS3Input` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesS3Args{...}
type FlowSourceFlowConfigSourceConnectorPropertiesS3Input interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesS3Output() FlowSourceFlowConfigSourceConnectorPropertiesS3Output
	ToFlowSourceFlowConfigSourceConnectorPropertiesS3OutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3Output
}

type FlowSourceFlowConfigSourceConnectorPropertiesS3Args struct {
	// Name of the Amazon S3 bucket.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Amazon S3 bucket prefix.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// When you use Amazon S3 as the source, the configuration format that you provide the flow input data. See S3 Input Format Config for details.
	S3InputFormatConfig FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrInput `pulumi:"s3InputFormatConfig"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesS3)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesS3Args) ToFlowSourceFlowConfigSourceConnectorPropertiesS3Output() FlowSourceFlowConfigSourceConnectorPropertiesS3Output {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesS3OutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesS3Args) ToFlowSourceFlowConfigSourceConnectorPropertiesS3OutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesS3Output)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesS3Args) ToFlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesS3Args) ToFlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesS3Output).ToFlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesS3PtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesS3Args, FlowSourceFlowConfigSourceConnectorPropertiesS3Ptr and FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesS3PtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesS3Args{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesS3PtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesS3PtrType FlowSourceFlowConfigSourceConnectorPropertiesS3Args

func FlowSourceFlowConfigSourceConnectorPropertiesS3Ptr(v *FlowSourceFlowConfigSourceConnectorPropertiesS3Args) FlowSourceFlowConfigSourceConnectorPropertiesS3PtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesS3PtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesS3)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesS3PtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesS3PtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesS3Output struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesS3)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesS3Output) ToFlowSourceFlowConfigSourceConnectorPropertiesS3Output() FlowSourceFlowConfigSourceConnectorPropertiesS3Output {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesS3Output) ToFlowSourceFlowConfigSourceConnectorPropertiesS3OutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3Output {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesS3Output) ToFlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesS3Output) ToFlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesS3) *FlowSourceFlowConfigSourceConnectorPropertiesS3 {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput)
}

// Name of the Amazon S3 bucket.
func (o FlowSourceFlowConfigSourceConnectorPropertiesS3Output) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesS3) string { return v.BucketName }).(pulumi.StringOutput)
}

// Amazon S3 bucket prefix.
func (o FlowSourceFlowConfigSourceConnectorPropertiesS3Output) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesS3) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

// When you use Amazon S3 as the source, the configuration format that you provide the flow input data. See S3 Input Format Config for details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesS3Output) S3InputFormatConfig() FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesS3) *FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig {
		return v.S3InputFormatConfig
	}).(FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesS3)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesS3Output {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesS3) FlowSourceFlowConfigSourceConnectorPropertiesS3 {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesS3
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesS3Output)
}

// Name of the Amazon S3 bucket.
func (o FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesS3) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 bucket prefix.
func (o FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesS3) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// When you use Amazon S3 as the source, the configuration format that you provide the flow input data. See S3 Input Format Config for details.
func (o FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput) S3InputFormatConfig() FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesS3) *FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig {
		if v == nil {
			return nil
		}
		return v.S3InputFormatConfig
	}).(FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig struct {
	// File type that Amazon AppFlow gets from your Amazon S3 bucket. Valid values are `CSV` and `JSON`.
	S3InputFileType *string `pulumi:"s3InputFileType"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigArgs and FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput() FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigArgs struct {
	// File type that Amazon AppFlow gets from your Amazon S3 bucket. Valid values are `CSV` and `JSON`.
	S3InputFileType pulumi.StringPtrInput `pulumi:"s3InputFileType"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput() FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigArgs, FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtr and FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrType FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigArgs

func FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtr(v *FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigArgs) FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput() FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig) *FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput)
}

// File type that Amazon AppFlow gets from your Amazon S3 bucket. Valid values are `CSV` and `JSON`.
func (o FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput) S3InputFileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig) *string {
		return v.S3InputFileType
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig) FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput)
}

// File type that Amazon AppFlow gets from your Amazon S3 bucket. Valid values are `CSV` and `JSON`.
func (o FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput) S3InputFileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig) *string {
		if v == nil {
			return nil
		}
		return v.S3InputFileType
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesSalesforce struct {
	// Flag that enables dynamic fetching of new (recently added) fields in the Salesforce objects while running a flow.
	EnableDynamicFieldUpdate *bool `pulumi:"enableDynamicFieldUpdate"`
	// Whether Amazon AppFlow includes deleted files in the flow run.
	IncludeDeletedRecords *bool `pulumi:"includeDeletedRecords"`
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesSalesforceInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs and FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesSalesforceInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesSalesforceInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput() FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs struct {
	// Flag that enables dynamic fetching of new (recently added) fields in the Salesforce objects while running a flow.
	EnableDynamicFieldUpdate pulumi.BoolPtrInput `pulumi:"enableDynamicFieldUpdate"`
	// Whether Amazon AppFlow includes deleted files in the flow run.
	IncludeDeletedRecords pulumi.BoolPtrInput `pulumi:"includeDeletedRecords"`
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSalesforce)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput() FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs, FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtr and FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrType FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs

func FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtr(v *FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs) FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesSalesforce)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSalesforce)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput() FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesSalesforce) *FlowSourceFlowConfigSourceConnectorPropertiesSalesforce {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput)
}

// Flag that enables dynamic fetching of new (recently added) fields in the Salesforce objects while running a flow.
func (o FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput) EnableDynamicFieldUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesSalesforce) *bool {
		return v.EnableDynamicFieldUpdate
	}).(pulumi.BoolPtrOutput)
}

// Whether Amazon AppFlow includes deleted files in the flow run.
func (o FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput) IncludeDeletedRecords() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesSalesforce) *bool { return v.IncludeDeletedRecords }).(pulumi.BoolPtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesSalesforce) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesSalesforce)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesSalesforce) FlowSourceFlowConfigSourceConnectorPropertiesSalesforce {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesSalesforce
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput)
}

// Flag that enables dynamic fetching of new (recently added) fields in the Salesforce objects while running a flow.
func (o FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput) EnableDynamicFieldUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesSalesforce) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDynamicFieldUpdate
	}).(pulumi.BoolPtrOutput)
}

// Whether Amazon AppFlow includes deleted files in the flow run.
func (o FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput) IncludeDeletedRecords() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesSalesforce) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeDeletedRecords
	}).(pulumi.BoolPtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesSalesforce) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesSapoData struct {
	// Object path specified in the SAPOData flow destination.
	ObjectPath string `pulumi:"objectPath"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesSapoDataInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs and FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesSapoDataInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesSapoDataInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput() FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs struct {
	// Object path specified in the SAPOData flow destination.
	ObjectPath pulumi.StringInput `pulumi:"objectPath"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSapoData)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput() FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs, FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtr and FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrType FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs

func FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtr(v *FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs) FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesSapoData)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSapoData)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput() FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesSapoData) *FlowSourceFlowConfigSourceConnectorPropertiesSapoData {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput)
}

// Object path specified in the SAPOData flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput) ObjectPath() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesSapoData) string { return v.ObjectPath }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesSapoData)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesSapoData) FlowSourceFlowConfigSourceConnectorPropertiesSapoData {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesSapoData
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput)
}

// Object path specified in the SAPOData flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput) ObjectPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesSapoData) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectPath
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesServiceNow struct {
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesServiceNowInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs and FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesServiceNowInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesServiceNowInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput() FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs struct {
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesServiceNow)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput() FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs, FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtr and FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrType FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs

func FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtr(v *FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs) FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesServiceNow)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesServiceNow)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput() FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesServiceNow) *FlowSourceFlowConfigSourceConnectorPropertiesServiceNow {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesServiceNow) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesServiceNow)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesServiceNow) FlowSourceFlowConfigSourceConnectorPropertiesServiceNow {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesServiceNow
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesServiceNow) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesSingular struct {
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesSingularInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs and FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesSingularInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesSingularInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesSingularOutput() FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesSingularOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs struct {
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSingular)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSingularOutput() FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesSingularOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSingularOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs, FlowSourceFlowConfigSourceConnectorPropertiesSingularPtr and FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesSingularPtrType FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs

func FlowSourceFlowConfigSourceConnectorPropertiesSingularPtr(v *FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs) FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesSingularPtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesSingularPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesSingular)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesSingularPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesSingularPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSingular)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSingularOutput() FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSingularOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesSingular) *FlowSourceFlowConfigSourceConnectorPropertiesSingular {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesSingular) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesSingular)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesSingular) FlowSourceFlowConfigSourceConnectorPropertiesSingular {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesSingular
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesSingular) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesSlack struct {
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesSlackInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs and FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesSlackInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesSlackInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesSlackOutput() FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesSlackOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs struct {
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSlack)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSlackOutput() FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesSlackOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSlackOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs, FlowSourceFlowConfigSourceConnectorPropertiesSlackPtr and FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesSlackPtrType FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs

func FlowSourceFlowConfigSourceConnectorPropertiesSlackPtr(v *FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs) FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesSlackPtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesSlackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesSlack)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesSlackPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesSlackPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSlack)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSlackOutput() FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSlackOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesSlack) *FlowSourceFlowConfigSourceConnectorPropertiesSlack {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesSlack) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesSlack)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesSlack) FlowSourceFlowConfigSourceConnectorPropertiesSlack {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesSlack
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesSlack) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro struct {
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs and FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput() FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs struct {
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput() FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs, FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtr and FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrType FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs

func FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtr(v *FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs) FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput() FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro) *FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro) FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesVeeva struct {
	// Document type specified in the Veeva document extract flow.
	DocumentType *string `pulumi:"documentType"`
	// Boolean value to include All Versions of files in Veeva document extract flow.
	IncludeAllVersions *bool `pulumi:"includeAllVersions"`
	// Boolean value to include file renditions in Veeva document extract flow.
	IncludeRenditions *bool `pulumi:"includeRenditions"`
	// Boolean value to include source files in Veeva document extract flow.
	IncludeSourceFiles *bool `pulumi:"includeSourceFiles"`
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesVeevaInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs and FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesVeevaInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesVeevaInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput() FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs struct {
	// Document type specified in the Veeva document extract flow.
	DocumentType pulumi.StringPtrInput `pulumi:"documentType"`
	// Boolean value to include All Versions of files in Veeva document extract flow.
	IncludeAllVersions pulumi.BoolPtrInput `pulumi:"includeAllVersions"`
	// Boolean value to include file renditions in Veeva document extract flow.
	IncludeRenditions pulumi.BoolPtrInput `pulumi:"includeRenditions"`
	// Boolean value to include source files in Veeva document extract flow.
	IncludeSourceFiles pulumi.BoolPtrInput `pulumi:"includeSourceFiles"`
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesVeeva)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput() FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs, FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtr and FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesVeevaPtrType FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs

func FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtr(v *FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs) FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesVeevaPtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesVeevaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesVeeva)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesVeevaPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesVeevaPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesVeeva)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput() FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesVeeva) *FlowSourceFlowConfigSourceConnectorPropertiesVeeva {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput)
}

// Document type specified in the Veeva document extract flow.
func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput) DocumentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesVeeva) *string { return v.DocumentType }).(pulumi.StringPtrOutput)
}

// Boolean value to include All Versions of files in Veeva document extract flow.
func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput) IncludeAllVersions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesVeeva) *bool { return v.IncludeAllVersions }).(pulumi.BoolPtrOutput)
}

// Boolean value to include file renditions in Veeva document extract flow.
func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput) IncludeRenditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesVeeva) *bool { return v.IncludeRenditions }).(pulumi.BoolPtrOutput)
}

// Boolean value to include source files in Veeva document extract flow.
func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput) IncludeSourceFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesVeeva) *bool { return v.IncludeSourceFiles }).(pulumi.BoolPtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesVeeva) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesVeeva)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesVeeva) FlowSourceFlowConfigSourceConnectorPropertiesVeeva {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesVeeva
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput)
}

// Document type specified in the Veeva document extract flow.
func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput) DocumentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesVeeva) *string {
		if v == nil {
			return nil
		}
		return v.DocumentType
	}).(pulumi.StringPtrOutput)
}

// Boolean value to include All Versions of files in Veeva document extract flow.
func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput) IncludeAllVersions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesVeeva) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeAllVersions
	}).(pulumi.BoolPtrOutput)
}

// Boolean value to include file renditions in Veeva document extract flow.
func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput) IncludeRenditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesVeeva) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeRenditions
	}).(pulumi.BoolPtrOutput)
}

// Boolean value to include source files in Veeva document extract flow.
func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput) IncludeSourceFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesVeeva) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeSourceFiles
	}).(pulumi.BoolPtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesVeeva) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesZendesk struct {
	// Object specified in the flow destination.
	Object string `pulumi:"object"`
}

// FlowSourceFlowConfigSourceConnectorPropertiesZendeskInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs and FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesZendeskInput` via:
//
//	FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs{...}
type FlowSourceFlowConfigSourceConnectorPropertiesZendeskInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput() FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput
}

type FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs struct {
	// Object specified in the flow destination.
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesZendesk)(nil)).Elem()
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput() FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput)
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs) ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput).ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrInput is an input type that accepts FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs, FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtr and FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrInput` via:
//
//	        FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs{...}
//
//	or:
//
//	        nil
type FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput
	ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutputWithContext(context.Context) FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput
}

type flowSourceFlowConfigSourceConnectorPropertiesZendeskPtrType FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs

func FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtr(v *FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs) FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrInput {
	return (*flowSourceFlowConfigSourceConnectorPropertiesZendeskPtrType)(v)
}

func (*flowSourceFlowConfigSourceConnectorPropertiesZendeskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesZendesk)(nil)).Elem()
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesZendeskPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput {
	return i.ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigSourceConnectorPropertiesZendeskPtrType) ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesZendesk)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput() FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput {
	return o.ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfigSourceConnectorPropertiesZendesk) *FlowSourceFlowConfigSourceConnectorPropertiesZendesk {
		return &v
	}).(FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfigSourceConnectorPropertiesZendesk) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfigSourceConnectorPropertiesZendesk)(nil)).Elem()
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput() FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput) ToFlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput {
	return o
}

func (o FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput) Elem() FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesZendesk) FlowSourceFlowConfigSourceConnectorPropertiesZendesk {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfigSourceConnectorPropertiesZendesk
		return ret
	}).(FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput)
}

// Object specified in the flow destination.
func (o FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfigSourceConnectorPropertiesZendesk) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowTask struct {
	// Operation to be performed on the provided source fields. See Connector Operator for details.
	ConnectorOperators []FlowTaskConnectorOperator `pulumi:"connectorOperators"`
	// Field in a destination connector, or a field value against which Amazon AppFlow validates a source field.
	DestinationField *string `pulumi:"destinationField"`
	// Source fields to which a particular task is applied.
	SourceFields []string `pulumi:"sourceFields"`
	// Map used to store task-related information. The execution service looks for particular information based on the `TaskType`. Valid keys are `VALUE`, `VALUES`, `DATA_TYPE`, `UPPER_BOUND`, `LOWER_BOUND`, `SOURCE_DATA_TYPE`, `DESTINATION_DATA_TYPE`, `VALIDATION_ACTION`, `MASK_VALUE`, `MASK_LENGTH`, `TRUNCATE_LENGTH`, `MATH_OPERATION_FIELDS_ORDER`, `CONCAT_FORMAT`, `SUBFIELD_CATEGORY_MAP`, and `EXCLUDE_SOURCE_FIELDS_LIST`.
	TaskProperties map[string]string `pulumi:"taskProperties"`
	// Particular task implementation that Amazon AppFlow performs. Valid values are `Arithmetic`, `Filter`, `Map`, `Map_all`, `Mask`, `Merge`, `Passthrough`, `Truncate`, and `Validate`.
	TaskType string `pulumi:"taskType"`
}

// FlowTaskInput is an input type that accepts FlowTaskArgs and FlowTaskOutput values.
// You can construct a concrete instance of `FlowTaskInput` via:
//
//	FlowTaskArgs{...}
type FlowTaskInput interface {
	pulumi.Input

	ToFlowTaskOutput() FlowTaskOutput
	ToFlowTaskOutputWithContext(context.Context) FlowTaskOutput
}

type FlowTaskArgs struct {
	// Operation to be performed on the provided source fields. See Connector Operator for details.
	ConnectorOperators FlowTaskConnectorOperatorArrayInput `pulumi:"connectorOperators"`
	// Field in a destination connector, or a field value against which Amazon AppFlow validates a source field.
	DestinationField pulumi.StringPtrInput `pulumi:"destinationField"`
	// Source fields to which a particular task is applied.
	SourceFields pulumi.StringArrayInput `pulumi:"sourceFields"`
	// Map used to store task-related information. The execution service looks for particular information based on the `TaskType`. Valid keys are `VALUE`, `VALUES`, `DATA_TYPE`, `UPPER_BOUND`, `LOWER_BOUND`, `SOURCE_DATA_TYPE`, `DESTINATION_DATA_TYPE`, `VALIDATION_ACTION`, `MASK_VALUE`, `MASK_LENGTH`, `TRUNCATE_LENGTH`, `MATH_OPERATION_FIELDS_ORDER`, `CONCAT_FORMAT`, `SUBFIELD_CATEGORY_MAP`, and `EXCLUDE_SOURCE_FIELDS_LIST`.
	TaskProperties pulumi.StringMapInput `pulumi:"taskProperties"`
	// Particular task implementation that Amazon AppFlow performs. Valid values are `Arithmetic`, `Filter`, `Map`, `Map_all`, `Mask`, `Merge`, `Passthrough`, `Truncate`, and `Validate`.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (FlowTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTask)(nil)).Elem()
}

func (i FlowTaskArgs) ToFlowTaskOutput() FlowTaskOutput {
	return i.ToFlowTaskOutputWithContext(context.Background())
}

func (i FlowTaskArgs) ToFlowTaskOutputWithContext(ctx context.Context) FlowTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTaskOutput)
}

// FlowTaskArrayInput is an input type that accepts FlowTaskArray and FlowTaskArrayOutput values.
// You can construct a concrete instance of `FlowTaskArrayInput` via:
//
//	FlowTaskArray{ FlowTaskArgs{...} }
type FlowTaskArrayInput interface {
	pulumi.Input

	ToFlowTaskArrayOutput() FlowTaskArrayOutput
	ToFlowTaskArrayOutputWithContext(context.Context) FlowTaskArrayOutput
}

type FlowTaskArray []FlowTaskInput

func (FlowTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowTask)(nil)).Elem()
}

func (i FlowTaskArray) ToFlowTaskArrayOutput() FlowTaskArrayOutput {
	return i.ToFlowTaskArrayOutputWithContext(context.Background())
}

func (i FlowTaskArray) ToFlowTaskArrayOutputWithContext(ctx context.Context) FlowTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTaskArrayOutput)
}

type FlowTaskOutput struct{ *pulumi.OutputState }

func (FlowTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTask)(nil)).Elem()
}

func (o FlowTaskOutput) ToFlowTaskOutput() FlowTaskOutput {
	return o
}

func (o FlowTaskOutput) ToFlowTaskOutputWithContext(ctx context.Context) FlowTaskOutput {
	return o
}

// Operation to be performed on the provided source fields. See Connector Operator for details.
func (o FlowTaskOutput) ConnectorOperators() FlowTaskConnectorOperatorArrayOutput {
	return o.ApplyT(func(v FlowTask) []FlowTaskConnectorOperator { return v.ConnectorOperators }).(FlowTaskConnectorOperatorArrayOutput)
}

// Field in a destination connector, or a field value against which Amazon AppFlow validates a source field.
func (o FlowTaskOutput) DestinationField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTask) *string { return v.DestinationField }).(pulumi.StringPtrOutput)
}

// Source fields to which a particular task is applied.
func (o FlowTaskOutput) SourceFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlowTask) []string { return v.SourceFields }).(pulumi.StringArrayOutput)
}

// Map used to store task-related information. The execution service looks for particular information based on the `TaskType`. Valid keys are `VALUE`, `VALUES`, `DATA_TYPE`, `UPPER_BOUND`, `LOWER_BOUND`, `SOURCE_DATA_TYPE`, `DESTINATION_DATA_TYPE`, `VALIDATION_ACTION`, `MASK_VALUE`, `MASK_LENGTH`, `TRUNCATE_LENGTH`, `MATH_OPERATION_FIELDS_ORDER`, `CONCAT_FORMAT`, `SUBFIELD_CATEGORY_MAP`, and `EXCLUDE_SOURCE_FIELDS_LIST`.
func (o FlowTaskOutput) TaskProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowTask) map[string]string { return v.TaskProperties }).(pulumi.StringMapOutput)
}

// Particular task implementation that Amazon AppFlow performs. Valid values are `Arithmetic`, `Filter`, `Map`, `Map_all`, `Mask`, `Merge`, `Passthrough`, `Truncate`, and `Validate`.
func (o FlowTaskOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v FlowTask) string { return v.TaskType }).(pulumi.StringOutput)
}

type FlowTaskArrayOutput struct{ *pulumi.OutputState }

func (FlowTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowTask)(nil)).Elem()
}

func (o FlowTaskArrayOutput) ToFlowTaskArrayOutput() FlowTaskArrayOutput {
	return o
}

func (o FlowTaskArrayOutput) ToFlowTaskArrayOutputWithContext(ctx context.Context) FlowTaskArrayOutput {
	return o
}

func (o FlowTaskArrayOutput) Index(i pulumi.IntInput) FlowTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowTask {
		return vs[0].([]FlowTask)[vs[1].(int)]
	}).(FlowTaskOutput)
}

type FlowTaskConnectorOperator struct {
	// Operation to be performed on the provided Amplitude source fields. The only valid value is `BETWEEN`.
	Amplitude *string `pulumi:"amplitude"`
	// Operators supported by the custom connector. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	CustomConnector *string `pulumi:"customConnector"`
	// Operation to be performed on the provided Datadog source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Datadog *string `pulumi:"datadog"`
	// Operation to be performed on the provided Dynatrace source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Dynatrace *string `pulumi:"dynatrace"`
	// Operation to be performed on the provided Google Analytics source fields. Valid values are `PROJECTION` and `BETWEEN`.
	GoogleAnalytics *string `pulumi:"googleAnalytics"`
	// Operation to be performed on the provided Infor Nexus source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	InforNexus *string `pulumi:"inforNexus"`
	// Operation to be performed on the provided Marketo source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Marketo *string `pulumi:"marketo"`
	// Operation to be performed on the provided Amazon S3 source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	S3 *string `pulumi:"s3"`
	// Operation to be performed on the provided Salesforce source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Salesforce *string `pulumi:"salesforce"`
	// Operation to be performed on the provided SAPOData source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	SapoData *string `pulumi:"sapoData"`
	// Operation to be performed on the provided ServiceNow source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	ServiceNow *string `pulumi:"serviceNow"`
	// Operation to be performed on the provided Singular source fields. Valid values are `PROJECTION`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Singular *string `pulumi:"singular"`
	// Operation to be performed on the provided Slack source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Slack *string `pulumi:"slack"`
	// Operation to be performed on the provided Trend Micro source fields. Valid values are `PROJECTION`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Trendmicro *string `pulumi:"trendmicro"`
	// Operation to be performed on the provided Veeva source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Veeva *string `pulumi:"veeva"`
	// Operation to be performed on the provided Zendesk source fields. Valid values are `PROJECTION`, `GREATER_THAN`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Zendesk *string `pulumi:"zendesk"`
}

// FlowTaskConnectorOperatorInput is an input type that accepts FlowTaskConnectorOperatorArgs and FlowTaskConnectorOperatorOutput values.
// You can construct a concrete instance of `FlowTaskConnectorOperatorInput` via:
//
//	FlowTaskConnectorOperatorArgs{...}
type FlowTaskConnectorOperatorInput interface {
	pulumi.Input

	ToFlowTaskConnectorOperatorOutput() FlowTaskConnectorOperatorOutput
	ToFlowTaskConnectorOperatorOutputWithContext(context.Context) FlowTaskConnectorOperatorOutput
}

type FlowTaskConnectorOperatorArgs struct {
	// Operation to be performed on the provided Amplitude source fields. The only valid value is `BETWEEN`.
	Amplitude pulumi.StringPtrInput `pulumi:"amplitude"`
	// Operators supported by the custom connector. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	CustomConnector pulumi.StringPtrInput `pulumi:"customConnector"`
	// Operation to be performed on the provided Datadog source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Datadog pulumi.StringPtrInput `pulumi:"datadog"`
	// Operation to be performed on the provided Dynatrace source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Dynatrace pulumi.StringPtrInput `pulumi:"dynatrace"`
	// Operation to be performed on the provided Google Analytics source fields. Valid values are `PROJECTION` and `BETWEEN`.
	GoogleAnalytics pulumi.StringPtrInput `pulumi:"googleAnalytics"`
	// Operation to be performed on the provided Infor Nexus source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	InforNexus pulumi.StringPtrInput `pulumi:"inforNexus"`
	// Operation to be performed on the provided Marketo source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Marketo pulumi.StringPtrInput `pulumi:"marketo"`
	// Operation to be performed on the provided Amazon S3 source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	S3 pulumi.StringPtrInput `pulumi:"s3"`
	// Operation to be performed on the provided Salesforce source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Salesforce pulumi.StringPtrInput `pulumi:"salesforce"`
	// Operation to be performed on the provided SAPOData source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	SapoData pulumi.StringPtrInput `pulumi:"sapoData"`
	// Operation to be performed on the provided ServiceNow source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	ServiceNow pulumi.StringPtrInput `pulumi:"serviceNow"`
	// Operation to be performed on the provided Singular source fields. Valid values are `PROJECTION`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Singular pulumi.StringPtrInput `pulumi:"singular"`
	// Operation to be performed on the provided Slack source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Slack pulumi.StringPtrInput `pulumi:"slack"`
	// Operation to be performed on the provided Trend Micro source fields. Valid values are `PROJECTION`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Trendmicro pulumi.StringPtrInput `pulumi:"trendmicro"`
	// Operation to be performed on the provided Veeva source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Veeva pulumi.StringPtrInput `pulumi:"veeva"`
	// Operation to be performed on the provided Zendesk source fields. Valid values are `PROJECTION`, `GREATER_THAN`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
	Zendesk pulumi.StringPtrInput `pulumi:"zendesk"`
}

func (FlowTaskConnectorOperatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTaskConnectorOperator)(nil)).Elem()
}

func (i FlowTaskConnectorOperatorArgs) ToFlowTaskConnectorOperatorOutput() FlowTaskConnectorOperatorOutput {
	return i.ToFlowTaskConnectorOperatorOutputWithContext(context.Background())
}

func (i FlowTaskConnectorOperatorArgs) ToFlowTaskConnectorOperatorOutputWithContext(ctx context.Context) FlowTaskConnectorOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTaskConnectorOperatorOutput)
}

// FlowTaskConnectorOperatorArrayInput is an input type that accepts FlowTaskConnectorOperatorArray and FlowTaskConnectorOperatorArrayOutput values.
// You can construct a concrete instance of `FlowTaskConnectorOperatorArrayInput` via:
//
//	FlowTaskConnectorOperatorArray{ FlowTaskConnectorOperatorArgs{...} }
type FlowTaskConnectorOperatorArrayInput interface {
	pulumi.Input

	ToFlowTaskConnectorOperatorArrayOutput() FlowTaskConnectorOperatorArrayOutput
	ToFlowTaskConnectorOperatorArrayOutputWithContext(context.Context) FlowTaskConnectorOperatorArrayOutput
}

type FlowTaskConnectorOperatorArray []FlowTaskConnectorOperatorInput

func (FlowTaskConnectorOperatorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowTaskConnectorOperator)(nil)).Elem()
}

func (i FlowTaskConnectorOperatorArray) ToFlowTaskConnectorOperatorArrayOutput() FlowTaskConnectorOperatorArrayOutput {
	return i.ToFlowTaskConnectorOperatorArrayOutputWithContext(context.Background())
}

func (i FlowTaskConnectorOperatorArray) ToFlowTaskConnectorOperatorArrayOutputWithContext(ctx context.Context) FlowTaskConnectorOperatorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTaskConnectorOperatorArrayOutput)
}

type FlowTaskConnectorOperatorOutput struct{ *pulumi.OutputState }

func (FlowTaskConnectorOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTaskConnectorOperator)(nil)).Elem()
}

func (o FlowTaskConnectorOperatorOutput) ToFlowTaskConnectorOperatorOutput() FlowTaskConnectorOperatorOutput {
	return o
}

func (o FlowTaskConnectorOperatorOutput) ToFlowTaskConnectorOperatorOutputWithContext(ctx context.Context) FlowTaskConnectorOperatorOutput {
	return o
}

// Operation to be performed on the provided Amplitude source fields. The only valid value is `BETWEEN`.
func (o FlowTaskConnectorOperatorOutput) Amplitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.Amplitude }).(pulumi.StringPtrOutput)
}

// Operators supported by the custom connector. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowTaskConnectorOperatorOutput) CustomConnector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.CustomConnector }).(pulumi.StringPtrOutput)
}

// Operation to be performed on the provided Datadog source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowTaskConnectorOperatorOutput) Datadog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.Datadog }).(pulumi.StringPtrOutput)
}

// Operation to be performed on the provided Dynatrace source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowTaskConnectorOperatorOutput) Dynatrace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.Dynatrace }).(pulumi.StringPtrOutput)
}

// Operation to be performed on the provided Google Analytics source fields. Valid values are `PROJECTION` and `BETWEEN`.
func (o FlowTaskConnectorOperatorOutput) GoogleAnalytics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.GoogleAnalytics }).(pulumi.StringPtrOutput)
}

// Operation to be performed on the provided Infor Nexus source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowTaskConnectorOperatorOutput) InforNexus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.InforNexus }).(pulumi.StringPtrOutput)
}

// Operation to be performed on the provided Marketo source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowTaskConnectorOperatorOutput) Marketo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.Marketo }).(pulumi.StringPtrOutput)
}

// Operation to be performed on the provided Amazon S3 source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowTaskConnectorOperatorOutput) S3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.S3 }).(pulumi.StringPtrOutput)
}

// Operation to be performed on the provided Salesforce source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowTaskConnectorOperatorOutput) Salesforce() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.Salesforce }).(pulumi.StringPtrOutput)
}

// Operation to be performed on the provided SAPOData source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowTaskConnectorOperatorOutput) SapoData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.SapoData }).(pulumi.StringPtrOutput)
}

// Operation to be performed on the provided ServiceNow source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowTaskConnectorOperatorOutput) ServiceNow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.ServiceNow }).(pulumi.StringPtrOutput)
}

// Operation to be performed on the provided Singular source fields. Valid values are `PROJECTION`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowTaskConnectorOperatorOutput) Singular() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.Singular }).(pulumi.StringPtrOutput)
}

// Operation to be performed on the provided Slack source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowTaskConnectorOperatorOutput) Slack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.Slack }).(pulumi.StringPtrOutput)
}

// Operation to be performed on the provided Trend Micro source fields. Valid values are `PROJECTION`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowTaskConnectorOperatorOutput) Trendmicro() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.Trendmicro }).(pulumi.StringPtrOutput)
}

// Operation to be performed on the provided Veeva source fields. Valid values are `PROJECTION`, `LESS_THAN`, `GREATER_THAN`, `CONTAINS`, `BETWEEN`, `LESS_THAN_OR_EQUAL_TO`, `GREATER_THAN_OR_EQUAL_TO`, `EQUAL_TO`, `NOT_EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowTaskConnectorOperatorOutput) Veeva() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.Veeva }).(pulumi.StringPtrOutput)
}

// Operation to be performed on the provided Zendesk source fields. Valid values are `PROJECTION`, `GREATER_THAN`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
func (o FlowTaskConnectorOperatorOutput) Zendesk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTaskConnectorOperator) *string { return v.Zendesk }).(pulumi.StringPtrOutput)
}

type FlowTaskConnectorOperatorArrayOutput struct{ *pulumi.OutputState }

func (FlowTaskConnectorOperatorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowTaskConnectorOperator)(nil)).Elem()
}

func (o FlowTaskConnectorOperatorArrayOutput) ToFlowTaskConnectorOperatorArrayOutput() FlowTaskConnectorOperatorArrayOutput {
	return o
}

func (o FlowTaskConnectorOperatorArrayOutput) ToFlowTaskConnectorOperatorArrayOutputWithContext(ctx context.Context) FlowTaskConnectorOperatorArrayOutput {
	return o
}

func (o FlowTaskConnectorOperatorArrayOutput) Index(i pulumi.IntInput) FlowTaskConnectorOperatorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowTaskConnectorOperator {
		return vs[0].([]FlowTaskConnectorOperator)[vs[1].(int)]
	}).(FlowTaskConnectorOperatorOutput)
}

type FlowTriggerConfig struct {
	// Configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the `Scheduled` trigger type. See Scheduled Trigger Properties for details.
	TriggerProperties *FlowTriggerConfigTriggerProperties `pulumi:"triggerProperties"`
	// Type of flow trigger. Valid values are `Scheduled`, `Event`, and `OnDemand`.
	TriggerType string `pulumi:"triggerType"`
}

// FlowTriggerConfigInput is an input type that accepts FlowTriggerConfigArgs and FlowTriggerConfigOutput values.
// You can construct a concrete instance of `FlowTriggerConfigInput` via:
//
//	FlowTriggerConfigArgs{...}
type FlowTriggerConfigInput interface {
	pulumi.Input

	ToFlowTriggerConfigOutput() FlowTriggerConfigOutput
	ToFlowTriggerConfigOutputWithContext(context.Context) FlowTriggerConfigOutput
}

type FlowTriggerConfigArgs struct {
	// Configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the `Scheduled` trigger type. See Scheduled Trigger Properties for details.
	TriggerProperties FlowTriggerConfigTriggerPropertiesPtrInput `pulumi:"triggerProperties"`
	// Type of flow trigger. Valid values are `Scheduled`, `Event`, and `OnDemand`.
	TriggerType pulumi.StringInput `pulumi:"triggerType"`
}

func (FlowTriggerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTriggerConfig)(nil)).Elem()
}

func (i FlowTriggerConfigArgs) ToFlowTriggerConfigOutput() FlowTriggerConfigOutput {
	return i.ToFlowTriggerConfigOutputWithContext(context.Background())
}

func (i FlowTriggerConfigArgs) ToFlowTriggerConfigOutputWithContext(ctx context.Context) FlowTriggerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTriggerConfigOutput)
}

func (i FlowTriggerConfigArgs) ToFlowTriggerConfigPtrOutput() FlowTriggerConfigPtrOutput {
	return i.ToFlowTriggerConfigPtrOutputWithContext(context.Background())
}

func (i FlowTriggerConfigArgs) ToFlowTriggerConfigPtrOutputWithContext(ctx context.Context) FlowTriggerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTriggerConfigOutput).ToFlowTriggerConfigPtrOutputWithContext(ctx)
}

// FlowTriggerConfigPtrInput is an input type that accepts FlowTriggerConfigArgs, FlowTriggerConfigPtr and FlowTriggerConfigPtrOutput values.
// You can construct a concrete instance of `FlowTriggerConfigPtrInput` via:
//
//	        FlowTriggerConfigArgs{...}
//
//	or:
//
//	        nil
type FlowTriggerConfigPtrInput interface {
	pulumi.Input

	ToFlowTriggerConfigPtrOutput() FlowTriggerConfigPtrOutput
	ToFlowTriggerConfigPtrOutputWithContext(context.Context) FlowTriggerConfigPtrOutput
}

type flowTriggerConfigPtrType FlowTriggerConfigArgs

func FlowTriggerConfigPtr(v *FlowTriggerConfigArgs) FlowTriggerConfigPtrInput {
	return (*flowTriggerConfigPtrType)(v)
}

func (*flowTriggerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowTriggerConfig)(nil)).Elem()
}

func (i *flowTriggerConfigPtrType) ToFlowTriggerConfigPtrOutput() FlowTriggerConfigPtrOutput {
	return i.ToFlowTriggerConfigPtrOutputWithContext(context.Background())
}

func (i *flowTriggerConfigPtrType) ToFlowTriggerConfigPtrOutputWithContext(ctx context.Context) FlowTriggerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTriggerConfigPtrOutput)
}

type FlowTriggerConfigOutput struct{ *pulumi.OutputState }

func (FlowTriggerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTriggerConfig)(nil)).Elem()
}

func (o FlowTriggerConfigOutput) ToFlowTriggerConfigOutput() FlowTriggerConfigOutput {
	return o
}

func (o FlowTriggerConfigOutput) ToFlowTriggerConfigOutputWithContext(ctx context.Context) FlowTriggerConfigOutput {
	return o
}

func (o FlowTriggerConfigOutput) ToFlowTriggerConfigPtrOutput() FlowTriggerConfigPtrOutput {
	return o.ToFlowTriggerConfigPtrOutputWithContext(context.Background())
}

func (o FlowTriggerConfigOutput) ToFlowTriggerConfigPtrOutputWithContext(ctx context.Context) FlowTriggerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowTriggerConfig) *FlowTriggerConfig {
		return &v
	}).(FlowTriggerConfigPtrOutput)
}

// Configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the `Scheduled` trigger type. See Scheduled Trigger Properties for details.
func (o FlowTriggerConfigOutput) TriggerProperties() FlowTriggerConfigTriggerPropertiesPtrOutput {
	return o.ApplyT(func(v FlowTriggerConfig) *FlowTriggerConfigTriggerProperties { return v.TriggerProperties }).(FlowTriggerConfigTriggerPropertiesPtrOutput)
}

// Type of flow trigger. Valid values are `Scheduled`, `Event`, and `OnDemand`.
func (o FlowTriggerConfigOutput) TriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v FlowTriggerConfig) string { return v.TriggerType }).(pulumi.StringOutput)
}

type FlowTriggerConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowTriggerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowTriggerConfig)(nil)).Elem()
}

func (o FlowTriggerConfigPtrOutput) ToFlowTriggerConfigPtrOutput() FlowTriggerConfigPtrOutput {
	return o
}

func (o FlowTriggerConfigPtrOutput) ToFlowTriggerConfigPtrOutputWithContext(ctx context.Context) FlowTriggerConfigPtrOutput {
	return o
}

func (o FlowTriggerConfigPtrOutput) Elem() FlowTriggerConfigOutput {
	return o.ApplyT(func(v *FlowTriggerConfig) FlowTriggerConfig {
		if v != nil {
			return *v
		}
		var ret FlowTriggerConfig
		return ret
	}).(FlowTriggerConfigOutput)
}

// Configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the `Scheduled` trigger type. See Scheduled Trigger Properties for details.
func (o FlowTriggerConfigPtrOutput) TriggerProperties() FlowTriggerConfigTriggerPropertiesPtrOutput {
	return o.ApplyT(func(v *FlowTriggerConfig) *FlowTriggerConfigTriggerProperties {
		if v == nil {
			return nil
		}
		return v.TriggerProperties
	}).(FlowTriggerConfigTriggerPropertiesPtrOutput)
}

// Type of flow trigger. Valid values are `Scheduled`, `Event`, and `OnDemand`.
func (o FlowTriggerConfigPtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowTriggerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TriggerType
	}).(pulumi.StringPtrOutput)
}

type FlowTriggerConfigTriggerProperties struct {
	Scheduled *FlowTriggerConfigTriggerPropertiesScheduled `pulumi:"scheduled"`
}

// FlowTriggerConfigTriggerPropertiesInput is an input type that accepts FlowTriggerConfigTriggerPropertiesArgs and FlowTriggerConfigTriggerPropertiesOutput values.
// You can construct a concrete instance of `FlowTriggerConfigTriggerPropertiesInput` via:
//
//	FlowTriggerConfigTriggerPropertiesArgs{...}
type FlowTriggerConfigTriggerPropertiesInput interface {
	pulumi.Input

	ToFlowTriggerConfigTriggerPropertiesOutput() FlowTriggerConfigTriggerPropertiesOutput
	ToFlowTriggerConfigTriggerPropertiesOutputWithContext(context.Context) FlowTriggerConfigTriggerPropertiesOutput
}

type FlowTriggerConfigTriggerPropertiesArgs struct {
	Scheduled FlowTriggerConfigTriggerPropertiesScheduledPtrInput `pulumi:"scheduled"`
}

func (FlowTriggerConfigTriggerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTriggerConfigTriggerProperties)(nil)).Elem()
}

func (i FlowTriggerConfigTriggerPropertiesArgs) ToFlowTriggerConfigTriggerPropertiesOutput() FlowTriggerConfigTriggerPropertiesOutput {
	return i.ToFlowTriggerConfigTriggerPropertiesOutputWithContext(context.Background())
}

func (i FlowTriggerConfigTriggerPropertiesArgs) ToFlowTriggerConfigTriggerPropertiesOutputWithContext(ctx context.Context) FlowTriggerConfigTriggerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTriggerConfigTriggerPropertiesOutput)
}

func (i FlowTriggerConfigTriggerPropertiesArgs) ToFlowTriggerConfigTriggerPropertiesPtrOutput() FlowTriggerConfigTriggerPropertiesPtrOutput {
	return i.ToFlowTriggerConfigTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowTriggerConfigTriggerPropertiesArgs) ToFlowTriggerConfigTriggerPropertiesPtrOutputWithContext(ctx context.Context) FlowTriggerConfigTriggerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTriggerConfigTriggerPropertiesOutput).ToFlowTriggerConfigTriggerPropertiesPtrOutputWithContext(ctx)
}

// FlowTriggerConfigTriggerPropertiesPtrInput is an input type that accepts FlowTriggerConfigTriggerPropertiesArgs, FlowTriggerConfigTriggerPropertiesPtr and FlowTriggerConfigTriggerPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowTriggerConfigTriggerPropertiesPtrInput` via:
//
//	        FlowTriggerConfigTriggerPropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowTriggerConfigTriggerPropertiesPtrInput interface {
	pulumi.Input

	ToFlowTriggerConfigTriggerPropertiesPtrOutput() FlowTriggerConfigTriggerPropertiesPtrOutput
	ToFlowTriggerConfigTriggerPropertiesPtrOutputWithContext(context.Context) FlowTriggerConfigTriggerPropertiesPtrOutput
}

type flowTriggerConfigTriggerPropertiesPtrType FlowTriggerConfigTriggerPropertiesArgs

func FlowTriggerConfigTriggerPropertiesPtr(v *FlowTriggerConfigTriggerPropertiesArgs) FlowTriggerConfigTriggerPropertiesPtrInput {
	return (*flowTriggerConfigTriggerPropertiesPtrType)(v)
}

func (*flowTriggerConfigTriggerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowTriggerConfigTriggerProperties)(nil)).Elem()
}

func (i *flowTriggerConfigTriggerPropertiesPtrType) ToFlowTriggerConfigTriggerPropertiesPtrOutput() FlowTriggerConfigTriggerPropertiesPtrOutput {
	return i.ToFlowTriggerConfigTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowTriggerConfigTriggerPropertiesPtrType) ToFlowTriggerConfigTriggerPropertiesPtrOutputWithContext(ctx context.Context) FlowTriggerConfigTriggerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTriggerConfigTriggerPropertiesPtrOutput)
}

type FlowTriggerConfigTriggerPropertiesOutput struct{ *pulumi.OutputState }

func (FlowTriggerConfigTriggerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTriggerConfigTriggerProperties)(nil)).Elem()
}

func (o FlowTriggerConfigTriggerPropertiesOutput) ToFlowTriggerConfigTriggerPropertiesOutput() FlowTriggerConfigTriggerPropertiesOutput {
	return o
}

func (o FlowTriggerConfigTriggerPropertiesOutput) ToFlowTriggerConfigTriggerPropertiesOutputWithContext(ctx context.Context) FlowTriggerConfigTriggerPropertiesOutput {
	return o
}

func (o FlowTriggerConfigTriggerPropertiesOutput) ToFlowTriggerConfigTriggerPropertiesPtrOutput() FlowTriggerConfigTriggerPropertiesPtrOutput {
	return o.ToFlowTriggerConfigTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowTriggerConfigTriggerPropertiesOutput) ToFlowTriggerConfigTriggerPropertiesPtrOutputWithContext(ctx context.Context) FlowTriggerConfigTriggerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowTriggerConfigTriggerProperties) *FlowTriggerConfigTriggerProperties {
		return &v
	}).(FlowTriggerConfigTriggerPropertiesPtrOutput)
}

func (o FlowTriggerConfigTriggerPropertiesOutput) Scheduled() FlowTriggerConfigTriggerPropertiesScheduledPtrOutput {
	return o.ApplyT(func(v FlowTriggerConfigTriggerProperties) *FlowTriggerConfigTriggerPropertiesScheduled {
		return v.Scheduled
	}).(FlowTriggerConfigTriggerPropertiesScheduledPtrOutput)
}

type FlowTriggerConfigTriggerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowTriggerConfigTriggerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowTriggerConfigTriggerProperties)(nil)).Elem()
}

func (o FlowTriggerConfigTriggerPropertiesPtrOutput) ToFlowTriggerConfigTriggerPropertiesPtrOutput() FlowTriggerConfigTriggerPropertiesPtrOutput {
	return o
}

func (o FlowTriggerConfigTriggerPropertiesPtrOutput) ToFlowTriggerConfigTriggerPropertiesPtrOutputWithContext(ctx context.Context) FlowTriggerConfigTriggerPropertiesPtrOutput {
	return o
}

func (o FlowTriggerConfigTriggerPropertiesPtrOutput) Elem() FlowTriggerConfigTriggerPropertiesOutput {
	return o.ApplyT(func(v *FlowTriggerConfigTriggerProperties) FlowTriggerConfigTriggerProperties {
		if v != nil {
			return *v
		}
		var ret FlowTriggerConfigTriggerProperties
		return ret
	}).(FlowTriggerConfigTriggerPropertiesOutput)
}

func (o FlowTriggerConfigTriggerPropertiesPtrOutput) Scheduled() FlowTriggerConfigTriggerPropertiesScheduledPtrOutput {
	return o.ApplyT(func(v *FlowTriggerConfigTriggerProperties) *FlowTriggerConfigTriggerPropertiesScheduled {
		if v == nil {
			return nil
		}
		return v.Scheduled
	}).(FlowTriggerConfigTriggerPropertiesScheduledPtrOutput)
}

type FlowTriggerConfigTriggerPropertiesScheduled struct {
	// Whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run. Valid values are `Incremental` and `Complete`.
	DataPullMode *string `pulumi:"dataPullMode"`
	// Date range for the records to import from the connector in the first flow run. Must be a valid RFC3339 timestamp.
	FirstExecutionFrom *string `pulumi:"firstExecutionFrom"`
	// Scheduled end time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
	ScheduleEndTime *string `pulumi:"scheduleEndTime"`
	// Scheduling expression that determines the rate at which the schedule will run, for example `rate(5minutes)`.
	ScheduleExpression string `pulumi:"scheduleExpression"`
	// Optional offset that is added to the time interval for a schedule-triggered flow. Maximum value of 36000.
	ScheduleOffset *int `pulumi:"scheduleOffset"`
	// Scheduled start time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
	ScheduleStartTime *string `pulumi:"scheduleStartTime"`
	// Time zone used when referring to the date and time of a scheduled-triggered flow, such as `America/New_York`.
	Timezone *string `pulumi:"timezone"`
}

// FlowTriggerConfigTriggerPropertiesScheduledInput is an input type that accepts FlowTriggerConfigTriggerPropertiesScheduledArgs and FlowTriggerConfigTriggerPropertiesScheduledOutput values.
// You can construct a concrete instance of `FlowTriggerConfigTriggerPropertiesScheduledInput` via:
//
//	FlowTriggerConfigTriggerPropertiesScheduledArgs{...}
type FlowTriggerConfigTriggerPropertiesScheduledInput interface {
	pulumi.Input

	ToFlowTriggerConfigTriggerPropertiesScheduledOutput() FlowTriggerConfigTriggerPropertiesScheduledOutput
	ToFlowTriggerConfigTriggerPropertiesScheduledOutputWithContext(context.Context) FlowTriggerConfigTriggerPropertiesScheduledOutput
}

type FlowTriggerConfigTriggerPropertiesScheduledArgs struct {
	// Whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run. Valid values are `Incremental` and `Complete`.
	DataPullMode pulumi.StringPtrInput `pulumi:"dataPullMode"`
	// Date range for the records to import from the connector in the first flow run. Must be a valid RFC3339 timestamp.
	FirstExecutionFrom pulumi.StringPtrInput `pulumi:"firstExecutionFrom"`
	// Scheduled end time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
	ScheduleEndTime pulumi.StringPtrInput `pulumi:"scheduleEndTime"`
	// Scheduling expression that determines the rate at which the schedule will run, for example `rate(5minutes)`.
	ScheduleExpression pulumi.StringInput `pulumi:"scheduleExpression"`
	// Optional offset that is added to the time interval for a schedule-triggered flow. Maximum value of 36000.
	ScheduleOffset pulumi.IntPtrInput `pulumi:"scheduleOffset"`
	// Scheduled start time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
	ScheduleStartTime pulumi.StringPtrInput `pulumi:"scheduleStartTime"`
	// Time zone used when referring to the date and time of a scheduled-triggered flow, such as `America/New_York`.
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
}

func (FlowTriggerConfigTriggerPropertiesScheduledArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTriggerConfigTriggerPropertiesScheduled)(nil)).Elem()
}

func (i FlowTriggerConfigTriggerPropertiesScheduledArgs) ToFlowTriggerConfigTriggerPropertiesScheduledOutput() FlowTriggerConfigTriggerPropertiesScheduledOutput {
	return i.ToFlowTriggerConfigTriggerPropertiesScheduledOutputWithContext(context.Background())
}

func (i FlowTriggerConfigTriggerPropertiesScheduledArgs) ToFlowTriggerConfigTriggerPropertiesScheduledOutputWithContext(ctx context.Context) FlowTriggerConfigTriggerPropertiesScheduledOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTriggerConfigTriggerPropertiesScheduledOutput)
}

func (i FlowTriggerConfigTriggerPropertiesScheduledArgs) ToFlowTriggerConfigTriggerPropertiesScheduledPtrOutput() FlowTriggerConfigTriggerPropertiesScheduledPtrOutput {
	return i.ToFlowTriggerConfigTriggerPropertiesScheduledPtrOutputWithContext(context.Background())
}

func (i FlowTriggerConfigTriggerPropertiesScheduledArgs) ToFlowTriggerConfigTriggerPropertiesScheduledPtrOutputWithContext(ctx context.Context) FlowTriggerConfigTriggerPropertiesScheduledPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTriggerConfigTriggerPropertiesScheduledOutput).ToFlowTriggerConfigTriggerPropertiesScheduledPtrOutputWithContext(ctx)
}

// FlowTriggerConfigTriggerPropertiesScheduledPtrInput is an input type that accepts FlowTriggerConfigTriggerPropertiesScheduledArgs, FlowTriggerConfigTriggerPropertiesScheduledPtr and FlowTriggerConfigTriggerPropertiesScheduledPtrOutput values.
// You can construct a concrete instance of `FlowTriggerConfigTriggerPropertiesScheduledPtrInput` via:
//
//	        FlowTriggerConfigTriggerPropertiesScheduledArgs{...}
//
//	or:
//
//	        nil
type FlowTriggerConfigTriggerPropertiesScheduledPtrInput interface {
	pulumi.Input

	ToFlowTriggerConfigTriggerPropertiesScheduledPtrOutput() FlowTriggerConfigTriggerPropertiesScheduledPtrOutput
	ToFlowTriggerConfigTriggerPropertiesScheduledPtrOutputWithContext(context.Context) FlowTriggerConfigTriggerPropertiesScheduledPtrOutput
}

type flowTriggerConfigTriggerPropertiesScheduledPtrType FlowTriggerConfigTriggerPropertiesScheduledArgs

func FlowTriggerConfigTriggerPropertiesScheduledPtr(v *FlowTriggerConfigTriggerPropertiesScheduledArgs) FlowTriggerConfigTriggerPropertiesScheduledPtrInput {
	return (*flowTriggerConfigTriggerPropertiesScheduledPtrType)(v)
}

func (*flowTriggerConfigTriggerPropertiesScheduledPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowTriggerConfigTriggerPropertiesScheduled)(nil)).Elem()
}

func (i *flowTriggerConfigTriggerPropertiesScheduledPtrType) ToFlowTriggerConfigTriggerPropertiesScheduledPtrOutput() FlowTriggerConfigTriggerPropertiesScheduledPtrOutput {
	return i.ToFlowTriggerConfigTriggerPropertiesScheduledPtrOutputWithContext(context.Background())
}

func (i *flowTriggerConfigTriggerPropertiesScheduledPtrType) ToFlowTriggerConfigTriggerPropertiesScheduledPtrOutputWithContext(ctx context.Context) FlowTriggerConfigTriggerPropertiesScheduledPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTriggerConfigTriggerPropertiesScheduledPtrOutput)
}

type FlowTriggerConfigTriggerPropertiesScheduledOutput struct{ *pulumi.OutputState }

func (FlowTriggerConfigTriggerPropertiesScheduledOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTriggerConfigTriggerPropertiesScheduled)(nil)).Elem()
}

func (o FlowTriggerConfigTriggerPropertiesScheduledOutput) ToFlowTriggerConfigTriggerPropertiesScheduledOutput() FlowTriggerConfigTriggerPropertiesScheduledOutput {
	return o
}

func (o FlowTriggerConfigTriggerPropertiesScheduledOutput) ToFlowTriggerConfigTriggerPropertiesScheduledOutputWithContext(ctx context.Context) FlowTriggerConfigTriggerPropertiesScheduledOutput {
	return o
}

func (o FlowTriggerConfigTriggerPropertiesScheduledOutput) ToFlowTriggerConfigTriggerPropertiesScheduledPtrOutput() FlowTriggerConfigTriggerPropertiesScheduledPtrOutput {
	return o.ToFlowTriggerConfigTriggerPropertiesScheduledPtrOutputWithContext(context.Background())
}

func (o FlowTriggerConfigTriggerPropertiesScheduledOutput) ToFlowTriggerConfigTriggerPropertiesScheduledPtrOutputWithContext(ctx context.Context) FlowTriggerConfigTriggerPropertiesScheduledPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowTriggerConfigTriggerPropertiesScheduled) *FlowTriggerConfigTriggerPropertiesScheduled {
		return &v
	}).(FlowTriggerConfigTriggerPropertiesScheduledPtrOutput)
}

// Whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run. Valid values are `Incremental` and `Complete`.
func (o FlowTriggerConfigTriggerPropertiesScheduledOutput) DataPullMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTriggerConfigTriggerPropertiesScheduled) *string { return v.DataPullMode }).(pulumi.StringPtrOutput)
}

// Date range for the records to import from the connector in the first flow run. Must be a valid RFC3339 timestamp.
func (o FlowTriggerConfigTriggerPropertiesScheduledOutput) FirstExecutionFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTriggerConfigTriggerPropertiesScheduled) *string { return v.FirstExecutionFrom }).(pulumi.StringPtrOutput)
}

// Scheduled end time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
func (o FlowTriggerConfigTriggerPropertiesScheduledOutput) ScheduleEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTriggerConfigTriggerPropertiesScheduled) *string { return v.ScheduleEndTime }).(pulumi.StringPtrOutput)
}

// Scheduling expression that determines the rate at which the schedule will run, for example `rate(5minutes)`.
func (o FlowTriggerConfigTriggerPropertiesScheduledOutput) ScheduleExpression() pulumi.StringOutput {
	return o.ApplyT(func(v FlowTriggerConfigTriggerPropertiesScheduled) string { return v.ScheduleExpression }).(pulumi.StringOutput)
}

// Optional offset that is added to the time interval for a schedule-triggered flow. Maximum value of 36000.
func (o FlowTriggerConfigTriggerPropertiesScheduledOutput) ScheduleOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FlowTriggerConfigTriggerPropertiesScheduled) *int { return v.ScheduleOffset }).(pulumi.IntPtrOutput)
}

// Scheduled start time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
func (o FlowTriggerConfigTriggerPropertiesScheduledOutput) ScheduleStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTriggerConfigTriggerPropertiesScheduled) *string { return v.ScheduleStartTime }).(pulumi.StringPtrOutput)
}

// Time zone used when referring to the date and time of a scheduled-triggered flow, such as `America/New_York`.
func (o FlowTriggerConfigTriggerPropertiesScheduledOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTriggerConfigTriggerPropertiesScheduled) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type FlowTriggerConfigTriggerPropertiesScheduledPtrOutput struct{ *pulumi.OutputState }

func (FlowTriggerConfigTriggerPropertiesScheduledPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowTriggerConfigTriggerPropertiesScheduled)(nil)).Elem()
}

func (o FlowTriggerConfigTriggerPropertiesScheduledPtrOutput) ToFlowTriggerConfigTriggerPropertiesScheduledPtrOutput() FlowTriggerConfigTriggerPropertiesScheduledPtrOutput {
	return o
}

func (o FlowTriggerConfigTriggerPropertiesScheduledPtrOutput) ToFlowTriggerConfigTriggerPropertiesScheduledPtrOutputWithContext(ctx context.Context) FlowTriggerConfigTriggerPropertiesScheduledPtrOutput {
	return o
}

func (o FlowTriggerConfigTriggerPropertiesScheduledPtrOutput) Elem() FlowTriggerConfigTriggerPropertiesScheduledOutput {
	return o.ApplyT(func(v *FlowTriggerConfigTriggerPropertiesScheduled) FlowTriggerConfigTriggerPropertiesScheduled {
		if v != nil {
			return *v
		}
		var ret FlowTriggerConfigTriggerPropertiesScheduled
		return ret
	}).(FlowTriggerConfigTriggerPropertiesScheduledOutput)
}

// Whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run. Valid values are `Incremental` and `Complete`.
func (o FlowTriggerConfigTriggerPropertiesScheduledPtrOutput) DataPullMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowTriggerConfigTriggerPropertiesScheduled) *string {
		if v == nil {
			return nil
		}
		return v.DataPullMode
	}).(pulumi.StringPtrOutput)
}

// Date range for the records to import from the connector in the first flow run. Must be a valid RFC3339 timestamp.
func (o FlowTriggerConfigTriggerPropertiesScheduledPtrOutput) FirstExecutionFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowTriggerConfigTriggerPropertiesScheduled) *string {
		if v == nil {
			return nil
		}
		return v.FirstExecutionFrom
	}).(pulumi.StringPtrOutput)
}

// Scheduled end time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
func (o FlowTriggerConfigTriggerPropertiesScheduledPtrOutput) ScheduleEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowTriggerConfigTriggerPropertiesScheduled) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleEndTime
	}).(pulumi.StringPtrOutput)
}

// Scheduling expression that determines the rate at which the schedule will run, for example `rate(5minutes)`.
func (o FlowTriggerConfigTriggerPropertiesScheduledPtrOutput) ScheduleExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowTriggerConfigTriggerPropertiesScheduled) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleExpression
	}).(pulumi.StringPtrOutput)
}

// Optional offset that is added to the time interval for a schedule-triggered flow. Maximum value of 36000.
func (o FlowTriggerConfigTriggerPropertiesScheduledPtrOutput) ScheduleOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlowTriggerConfigTriggerPropertiesScheduled) *int {
		if v == nil {
			return nil
		}
		return v.ScheduleOffset
	}).(pulumi.IntPtrOutput)
}

// Scheduled start time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
func (o FlowTriggerConfigTriggerPropertiesScheduledPtrOutput) ScheduleStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowTriggerConfigTriggerPropertiesScheduled) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleStartTime
	}).(pulumi.StringPtrOutput)
}

// Time zone used when referring to the date and time of a scheduled-triggered flow, such as `America/New_York`.
func (o FlowTriggerConfigTriggerPropertiesScheduledPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowTriggerConfigTriggerPropertiesScheduled) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Input)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrInput)(nil)).Elem(), ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigInput)(nil)).Elem(), FlowDestinationFlowConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigArrayInput)(nil)).Elem(), FlowDestinationFlowConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3Input)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrInput)(nil)).Elem(), FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigInput)(nil)).Elem(), FlowSourceFlowConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigPtrInput)(nil)).Elem(), FlowSourceFlowConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigIncrementalPullConfigInput)(nil)).Elem(), FlowSourceFlowConfigIncrementalPullConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigIncrementalPullConfigPtrInput)(nil)).Elem(), FlowSourceFlowConfigIncrementalPullConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesPtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesDatadogInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesDynatraceInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesInforNexusInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesMarketoInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesS3Input)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesS3PtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSalesforceInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSapoDataInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesServiceNowInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSingularInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSlackInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesVeevaInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesZendeskInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrInput)(nil)).Elem(), FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowTaskInput)(nil)).Elem(), FlowTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowTaskArrayInput)(nil)).Elem(), FlowTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowTaskConnectorOperatorInput)(nil)).Elem(), FlowTaskConnectorOperatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowTaskConnectorOperatorArrayInput)(nil)).Elem(), FlowTaskConnectorOperatorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowTriggerConfigInput)(nil)).Elem(), FlowTriggerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowTriggerConfigPtrInput)(nil)).Elem(), FlowTriggerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowTriggerConfigTriggerPropertiesInput)(nil)).Elem(), FlowTriggerConfigTriggerPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowTriggerConfigTriggerPropertiesPtrInput)(nil)).Elem(), FlowTriggerConfigTriggerPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowTriggerConfigTriggerPropertiesScheduledInput)(nil)).Elem(), FlowTriggerConfigTriggerPropertiesScheduledArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowTriggerConfigTriggerPropertiesScheduledPtrInput)(nil)).Elem(), FlowTriggerConfigTriggerPropertiesScheduledArgs{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudePtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Output{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2PtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2OauthRequestPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatracePtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodePtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforcePtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequestPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakePtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudePtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatracePtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodePtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforcePtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakePtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigArrayOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgePtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodePtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesS3Output{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesS3PtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforcePtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakePtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigIncrementalPullConfigOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigIncrementalPullConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesAmplitudePtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesDatadogOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesDatadogPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesDynatraceOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesDynatracePtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesInforNexusOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesInforNexusPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesMarketoOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesMarketoPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesS3Output{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesS3PtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesSalesforceOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesSalesforcePtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesSapoDataOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesSapoDataPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesServiceNowOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesServiceNowPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesSingularOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesSingularPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesSlackOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesSlackPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesVeevaOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesVeevaPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesZendeskOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigSourceConnectorPropertiesZendeskPtrOutput{})
	pulumi.RegisterOutputType(FlowTaskOutput{})
	pulumi.RegisterOutputType(FlowTaskArrayOutput{})
	pulumi.RegisterOutputType(FlowTaskConnectorOperatorOutput{})
	pulumi.RegisterOutputType(FlowTaskConnectorOperatorArrayOutput{})
	pulumi.RegisterOutputType(FlowTriggerConfigOutput{})
	pulumi.RegisterOutputType(FlowTriggerConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowTriggerConfigTriggerPropertiesOutput{})
	pulumi.RegisterOutputType(FlowTriggerConfigTriggerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowTriggerConfigTriggerPropertiesScheduledOutput{})
	pulumi.RegisterOutputType(FlowTriggerConfigTriggerPropertiesScheduledPtrOutput{})
}
