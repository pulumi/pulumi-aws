// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GatewayAssociation struct {
	pulumi.CustomResourceState

	AllowedPrefixes                 pulumi.StringArrayOutput `pulumi:"allowedPrefixes"`
	AssociatedGatewayId             pulumi.StringOutput      `pulumi:"associatedGatewayId"`
	AssociatedGatewayOwnerAccountId pulumi.StringOutput      `pulumi:"associatedGatewayOwnerAccountId"`
	AssociatedGatewayType           pulumi.StringOutput      `pulumi:"associatedGatewayType"`
	DxGatewayAssociationId          pulumi.StringOutput      `pulumi:"dxGatewayAssociationId"`
	DxGatewayId                     pulumi.StringOutput      `pulumi:"dxGatewayId"`
	DxGatewayOwnerAccountId         pulumi.StringOutput      `pulumi:"dxGatewayOwnerAccountId"`
	ProposalId                      pulumi.StringPtrOutput   `pulumi:"proposalId"`
	// Deprecated: use 'associated_gateway_id' argument instead
	VpnGatewayId pulumi.StringPtrOutput `pulumi:"vpnGatewayId"`
}

// NewGatewayAssociation registers a new resource with the given unique name, arguments, and options.
func NewGatewayAssociation(ctx *pulumi.Context,
	name string, args *GatewayAssociationArgs, opts ...pulumi.ResourceOption) (*GatewayAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DxGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'DxGatewayId'")
	}
	var resource GatewayAssociation
	err := ctx.RegisterResource("aws:directconnect/gatewayAssociation:GatewayAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayAssociation gets an existing GatewayAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayAssociationState, opts ...pulumi.ResourceOption) (*GatewayAssociation, error) {
	var resource GatewayAssociation
	err := ctx.ReadResource("aws:directconnect/gatewayAssociation:GatewayAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayAssociation resources.
type gatewayAssociationState struct {
	AllowedPrefixes                 []string `pulumi:"allowedPrefixes"`
	AssociatedGatewayId             *string  `pulumi:"associatedGatewayId"`
	AssociatedGatewayOwnerAccountId *string  `pulumi:"associatedGatewayOwnerAccountId"`
	AssociatedGatewayType           *string  `pulumi:"associatedGatewayType"`
	DxGatewayAssociationId          *string  `pulumi:"dxGatewayAssociationId"`
	DxGatewayId                     *string  `pulumi:"dxGatewayId"`
	DxGatewayOwnerAccountId         *string  `pulumi:"dxGatewayOwnerAccountId"`
	ProposalId                      *string  `pulumi:"proposalId"`
	// Deprecated: use 'associated_gateway_id' argument instead
	VpnGatewayId *string `pulumi:"vpnGatewayId"`
}

type GatewayAssociationState struct {
	AllowedPrefixes                 pulumi.StringArrayInput
	AssociatedGatewayId             pulumi.StringPtrInput
	AssociatedGatewayOwnerAccountId pulumi.StringPtrInput
	AssociatedGatewayType           pulumi.StringPtrInput
	DxGatewayAssociationId          pulumi.StringPtrInput
	DxGatewayId                     pulumi.StringPtrInput
	DxGatewayOwnerAccountId         pulumi.StringPtrInput
	ProposalId                      pulumi.StringPtrInput
	// Deprecated: use 'associated_gateway_id' argument instead
	VpnGatewayId pulumi.StringPtrInput
}

func (GatewayAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayAssociationState)(nil)).Elem()
}

type gatewayAssociationArgs struct {
	AllowedPrefixes                 []string `pulumi:"allowedPrefixes"`
	AssociatedGatewayId             *string  `pulumi:"associatedGatewayId"`
	AssociatedGatewayOwnerAccountId *string  `pulumi:"associatedGatewayOwnerAccountId"`
	DxGatewayId                     string   `pulumi:"dxGatewayId"`
	ProposalId                      *string  `pulumi:"proposalId"`
	// Deprecated: use 'associated_gateway_id' argument instead
	VpnGatewayId *string `pulumi:"vpnGatewayId"`
}

// The set of arguments for constructing a GatewayAssociation resource.
type GatewayAssociationArgs struct {
	AllowedPrefixes                 pulumi.StringArrayInput
	AssociatedGatewayId             pulumi.StringPtrInput
	AssociatedGatewayOwnerAccountId pulumi.StringPtrInput
	DxGatewayId                     pulumi.StringInput
	ProposalId                      pulumi.StringPtrInput
	// Deprecated: use 'associated_gateway_id' argument instead
	VpnGatewayId pulumi.StringPtrInput
}

func (GatewayAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayAssociationArgs)(nil)).Elem()
}

type GatewayAssociationInput interface {
	pulumi.Input

	ToGatewayAssociationOutput() GatewayAssociationOutput
	ToGatewayAssociationOutputWithContext(ctx context.Context) GatewayAssociationOutput
}

func (*GatewayAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayAssociation)(nil)).Elem()
}

func (i *GatewayAssociation) ToGatewayAssociationOutput() GatewayAssociationOutput {
	return i.ToGatewayAssociationOutputWithContext(context.Background())
}

func (i *GatewayAssociation) ToGatewayAssociationOutputWithContext(ctx context.Context) GatewayAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayAssociationOutput)
}

// GatewayAssociationArrayInput is an input type that accepts GatewayAssociationArray and GatewayAssociationArrayOutput values.
// You can construct a concrete instance of `GatewayAssociationArrayInput` via:
//
//	GatewayAssociationArray{ GatewayAssociationArgs{...} }
type GatewayAssociationArrayInput interface {
	pulumi.Input

	ToGatewayAssociationArrayOutput() GatewayAssociationArrayOutput
	ToGatewayAssociationArrayOutputWithContext(context.Context) GatewayAssociationArrayOutput
}

type GatewayAssociationArray []GatewayAssociationInput

func (GatewayAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayAssociation)(nil)).Elem()
}

func (i GatewayAssociationArray) ToGatewayAssociationArrayOutput() GatewayAssociationArrayOutput {
	return i.ToGatewayAssociationArrayOutputWithContext(context.Background())
}

func (i GatewayAssociationArray) ToGatewayAssociationArrayOutputWithContext(ctx context.Context) GatewayAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayAssociationArrayOutput)
}

// GatewayAssociationMapInput is an input type that accepts GatewayAssociationMap and GatewayAssociationMapOutput values.
// You can construct a concrete instance of `GatewayAssociationMapInput` via:
//
//	GatewayAssociationMap{ "key": GatewayAssociationArgs{...} }
type GatewayAssociationMapInput interface {
	pulumi.Input

	ToGatewayAssociationMapOutput() GatewayAssociationMapOutput
	ToGatewayAssociationMapOutputWithContext(context.Context) GatewayAssociationMapOutput
}

type GatewayAssociationMap map[string]GatewayAssociationInput

func (GatewayAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayAssociation)(nil)).Elem()
}

func (i GatewayAssociationMap) ToGatewayAssociationMapOutput() GatewayAssociationMapOutput {
	return i.ToGatewayAssociationMapOutputWithContext(context.Background())
}

func (i GatewayAssociationMap) ToGatewayAssociationMapOutputWithContext(ctx context.Context) GatewayAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayAssociationMapOutput)
}

type GatewayAssociationOutput struct{ *pulumi.OutputState }

func (GatewayAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayAssociation)(nil)).Elem()
}

func (o GatewayAssociationOutput) ToGatewayAssociationOutput() GatewayAssociationOutput {
	return o
}

func (o GatewayAssociationOutput) ToGatewayAssociationOutputWithContext(ctx context.Context) GatewayAssociationOutput {
	return o
}

func (o GatewayAssociationOutput) AllowedPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayAssociation) pulumi.StringArrayOutput { return v.AllowedPrefixes }).(pulumi.StringArrayOutput)
}

func (o GatewayAssociationOutput) AssociatedGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayAssociation) pulumi.StringOutput { return v.AssociatedGatewayId }).(pulumi.StringOutput)
}

func (o GatewayAssociationOutput) AssociatedGatewayOwnerAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayAssociation) pulumi.StringOutput { return v.AssociatedGatewayOwnerAccountId }).(pulumi.StringOutput)
}

func (o GatewayAssociationOutput) AssociatedGatewayType() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayAssociation) pulumi.StringOutput { return v.AssociatedGatewayType }).(pulumi.StringOutput)
}

func (o GatewayAssociationOutput) DxGatewayAssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayAssociation) pulumi.StringOutput { return v.DxGatewayAssociationId }).(pulumi.StringOutput)
}

func (o GatewayAssociationOutput) DxGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayAssociation) pulumi.StringOutput { return v.DxGatewayId }).(pulumi.StringOutput)
}

func (o GatewayAssociationOutput) DxGatewayOwnerAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayAssociation) pulumi.StringOutput { return v.DxGatewayOwnerAccountId }).(pulumi.StringOutput)
}

func (o GatewayAssociationOutput) ProposalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayAssociation) pulumi.StringPtrOutput { return v.ProposalId }).(pulumi.StringPtrOutput)
}

// Deprecated: use 'associated_gateway_id' argument instead
func (o GatewayAssociationOutput) VpnGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayAssociation) pulumi.StringPtrOutput { return v.VpnGatewayId }).(pulumi.StringPtrOutput)
}

type GatewayAssociationArrayOutput struct{ *pulumi.OutputState }

func (GatewayAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayAssociation)(nil)).Elem()
}

func (o GatewayAssociationArrayOutput) ToGatewayAssociationArrayOutput() GatewayAssociationArrayOutput {
	return o
}

func (o GatewayAssociationArrayOutput) ToGatewayAssociationArrayOutputWithContext(ctx context.Context) GatewayAssociationArrayOutput {
	return o
}

func (o GatewayAssociationArrayOutput) Index(i pulumi.IntInput) GatewayAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayAssociation {
		return vs[0].([]*GatewayAssociation)[vs[1].(int)]
	}).(GatewayAssociationOutput)
}

type GatewayAssociationMapOutput struct{ *pulumi.OutputState }

func (GatewayAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayAssociation)(nil)).Elem()
}

func (o GatewayAssociationMapOutput) ToGatewayAssociationMapOutput() GatewayAssociationMapOutput {
	return o
}

func (o GatewayAssociationMapOutput) ToGatewayAssociationMapOutputWithContext(ctx context.Context) GatewayAssociationMapOutput {
	return o
}

func (o GatewayAssociationMapOutput) MapIndex(k pulumi.StringInput) GatewayAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayAssociation {
		return vs[0].(map[string]*GatewayAssociation)[vs[1].(string)]
	}).(GatewayAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayAssociationInput)(nil)).Elem(), &GatewayAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayAssociationArrayInput)(nil)).Elem(), GatewayAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayAssociationMapInput)(nil)).Elem(), GatewayAssociationMap{})
	pulumi.RegisterOutputType(GatewayAssociationOutput{})
	pulumi.RegisterOutputType(GatewayAssociationArrayOutput{})
	pulumi.RegisterOutputType(GatewayAssociationMapOutput{})
}
