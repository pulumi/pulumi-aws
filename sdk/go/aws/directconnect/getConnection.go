// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve information about a Direct Connect Connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/directconnect"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := directconnect.LookupConnection(ctx, &directconnect.LookupConnectionArgs{
// 			Name: "tf-dx-connection",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupConnection(ctx *pulumi.Context, args *LookupConnectionArgs, opts ...pulumi.InvokeOption) (*LookupConnectionResult, error) {
	var rv LookupConnectionResult
	err := ctx.Invoke("aws:directconnect/getConnection:getConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnection.
type LookupConnectionArgs struct {
	// The name of the connection to retrieve.
	Name string `pulumi:"name"`
	// A map of tags for the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getConnection.
type LookupConnectionResult struct {
	// The ARN of the connection.
	Arn string `pulumi:"arn"`
	// The Direct Connect endpoint on which the physical connection terminates.
	AwsDevice string `pulumi:"awsDevice"`
	// The bandwidth of the connection.
	Bandwidth string `pulumi:"bandwidth"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The AWS Direct Connect location where the connection is located.
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	// The ID of the AWS account that owns the connection.
	OwnerAccountId string `pulumi:"ownerAccountId"`
	// The name of the service provider associated with the connection.
	ProviderName string `pulumi:"providerName"`
	// A map of tags for the resource.
	Tags map[string]string `pulumi:"tags"`
}
