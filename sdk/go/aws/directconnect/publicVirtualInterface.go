// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PublicVirtualInterface struct {
	pulumi.CustomResourceState

	AddressFamily       pulumi.StringOutput      `pulumi:"addressFamily"`
	AmazonAddress       pulumi.StringOutput      `pulumi:"amazonAddress"`
	AmazonSideAsn       pulumi.StringOutput      `pulumi:"amazonSideAsn"`
	Arn                 pulumi.StringOutput      `pulumi:"arn"`
	AwsDevice           pulumi.StringOutput      `pulumi:"awsDevice"`
	BgpAsn              pulumi.IntOutput         `pulumi:"bgpAsn"`
	BgpAuthKey          pulumi.StringOutput      `pulumi:"bgpAuthKey"`
	ConnectionId        pulumi.StringOutput      `pulumi:"connectionId"`
	CustomerAddress     pulumi.StringOutput      `pulumi:"customerAddress"`
	Name                pulumi.StringOutput      `pulumi:"name"`
	RouteFilterPrefixes pulumi.StringArrayOutput `pulumi:"routeFilterPrefixes"`
	Tags                pulumi.StringMapOutput   `pulumi:"tags"`
	TagsAll             pulumi.StringMapOutput   `pulumi:"tagsAll"`
	Vlan                pulumi.IntOutput         `pulumi:"vlan"`
}

// NewPublicVirtualInterface registers a new resource with the given unique name, arguments, and options.
func NewPublicVirtualInterface(ctx *pulumi.Context,
	name string, args *PublicVirtualInterfaceArgs, opts ...pulumi.ResourceOption) (*PublicVirtualInterface, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AddressFamily == nil {
		return nil, errors.New("invalid value for required argument 'AddressFamily'")
	}
	if args.BgpAsn == nil {
		return nil, errors.New("invalid value for required argument 'BgpAsn'")
	}
	if args.ConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionId'")
	}
	if args.RouteFilterPrefixes == nil {
		return nil, errors.New("invalid value for required argument 'RouteFilterPrefixes'")
	}
	if args.Vlan == nil {
		return nil, errors.New("invalid value for required argument 'Vlan'")
	}
	var resource PublicVirtualInterface
	err := ctx.RegisterResource("aws:directconnect/publicVirtualInterface:PublicVirtualInterface", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublicVirtualInterface gets an existing PublicVirtualInterface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublicVirtualInterface(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublicVirtualInterfaceState, opts ...pulumi.ResourceOption) (*PublicVirtualInterface, error) {
	var resource PublicVirtualInterface
	err := ctx.ReadResource("aws:directconnect/publicVirtualInterface:PublicVirtualInterface", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PublicVirtualInterface resources.
type publicVirtualInterfaceState struct {
	AddressFamily       *string           `pulumi:"addressFamily"`
	AmazonAddress       *string           `pulumi:"amazonAddress"`
	AmazonSideAsn       *string           `pulumi:"amazonSideAsn"`
	Arn                 *string           `pulumi:"arn"`
	AwsDevice           *string           `pulumi:"awsDevice"`
	BgpAsn              *int              `pulumi:"bgpAsn"`
	BgpAuthKey          *string           `pulumi:"bgpAuthKey"`
	ConnectionId        *string           `pulumi:"connectionId"`
	CustomerAddress     *string           `pulumi:"customerAddress"`
	Name                *string           `pulumi:"name"`
	RouteFilterPrefixes []string          `pulumi:"routeFilterPrefixes"`
	Tags                map[string]string `pulumi:"tags"`
	TagsAll             map[string]string `pulumi:"tagsAll"`
	Vlan                *int              `pulumi:"vlan"`
}

type PublicVirtualInterfaceState struct {
	AddressFamily       pulumi.StringPtrInput
	AmazonAddress       pulumi.StringPtrInput
	AmazonSideAsn       pulumi.StringPtrInput
	Arn                 pulumi.StringPtrInput
	AwsDevice           pulumi.StringPtrInput
	BgpAsn              pulumi.IntPtrInput
	BgpAuthKey          pulumi.StringPtrInput
	ConnectionId        pulumi.StringPtrInput
	CustomerAddress     pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	RouteFilterPrefixes pulumi.StringArrayInput
	Tags                pulumi.StringMapInput
	TagsAll             pulumi.StringMapInput
	Vlan                pulumi.IntPtrInput
}

func (PublicVirtualInterfaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*publicVirtualInterfaceState)(nil)).Elem()
}

type publicVirtualInterfaceArgs struct {
	AddressFamily       string            `pulumi:"addressFamily"`
	AmazonAddress       *string           `pulumi:"amazonAddress"`
	BgpAsn              int               `pulumi:"bgpAsn"`
	BgpAuthKey          *string           `pulumi:"bgpAuthKey"`
	ConnectionId        string            `pulumi:"connectionId"`
	CustomerAddress     *string           `pulumi:"customerAddress"`
	Name                *string           `pulumi:"name"`
	RouteFilterPrefixes []string          `pulumi:"routeFilterPrefixes"`
	Tags                map[string]string `pulumi:"tags"`
	Vlan                int               `pulumi:"vlan"`
}

// The set of arguments for constructing a PublicVirtualInterface resource.
type PublicVirtualInterfaceArgs struct {
	AddressFamily       pulumi.StringInput
	AmazonAddress       pulumi.StringPtrInput
	BgpAsn              pulumi.IntInput
	BgpAuthKey          pulumi.StringPtrInput
	ConnectionId        pulumi.StringInput
	CustomerAddress     pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	RouteFilterPrefixes pulumi.StringArrayInput
	Tags                pulumi.StringMapInput
	Vlan                pulumi.IntInput
}

func (PublicVirtualInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*publicVirtualInterfaceArgs)(nil)).Elem()
}

type PublicVirtualInterfaceInput interface {
	pulumi.Input

	ToPublicVirtualInterfaceOutput() PublicVirtualInterfaceOutput
	ToPublicVirtualInterfaceOutputWithContext(ctx context.Context) PublicVirtualInterfaceOutput
}

func (*PublicVirtualInterface) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicVirtualInterface)(nil)).Elem()
}

func (i *PublicVirtualInterface) ToPublicVirtualInterfaceOutput() PublicVirtualInterfaceOutput {
	return i.ToPublicVirtualInterfaceOutputWithContext(context.Background())
}

func (i *PublicVirtualInterface) ToPublicVirtualInterfaceOutputWithContext(ctx context.Context) PublicVirtualInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicVirtualInterfaceOutput)
}

// PublicVirtualInterfaceArrayInput is an input type that accepts PublicVirtualInterfaceArray and PublicVirtualInterfaceArrayOutput values.
// You can construct a concrete instance of `PublicVirtualInterfaceArrayInput` via:
//
//	PublicVirtualInterfaceArray{ PublicVirtualInterfaceArgs{...} }
type PublicVirtualInterfaceArrayInput interface {
	pulumi.Input

	ToPublicVirtualInterfaceArrayOutput() PublicVirtualInterfaceArrayOutput
	ToPublicVirtualInterfaceArrayOutputWithContext(context.Context) PublicVirtualInterfaceArrayOutput
}

type PublicVirtualInterfaceArray []PublicVirtualInterfaceInput

func (PublicVirtualInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicVirtualInterface)(nil)).Elem()
}

func (i PublicVirtualInterfaceArray) ToPublicVirtualInterfaceArrayOutput() PublicVirtualInterfaceArrayOutput {
	return i.ToPublicVirtualInterfaceArrayOutputWithContext(context.Background())
}

func (i PublicVirtualInterfaceArray) ToPublicVirtualInterfaceArrayOutputWithContext(ctx context.Context) PublicVirtualInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicVirtualInterfaceArrayOutput)
}

// PublicVirtualInterfaceMapInput is an input type that accepts PublicVirtualInterfaceMap and PublicVirtualInterfaceMapOutput values.
// You can construct a concrete instance of `PublicVirtualInterfaceMapInput` via:
//
//	PublicVirtualInterfaceMap{ "key": PublicVirtualInterfaceArgs{...} }
type PublicVirtualInterfaceMapInput interface {
	pulumi.Input

	ToPublicVirtualInterfaceMapOutput() PublicVirtualInterfaceMapOutput
	ToPublicVirtualInterfaceMapOutputWithContext(context.Context) PublicVirtualInterfaceMapOutput
}

type PublicVirtualInterfaceMap map[string]PublicVirtualInterfaceInput

func (PublicVirtualInterfaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicVirtualInterface)(nil)).Elem()
}

func (i PublicVirtualInterfaceMap) ToPublicVirtualInterfaceMapOutput() PublicVirtualInterfaceMapOutput {
	return i.ToPublicVirtualInterfaceMapOutputWithContext(context.Background())
}

func (i PublicVirtualInterfaceMap) ToPublicVirtualInterfaceMapOutputWithContext(ctx context.Context) PublicVirtualInterfaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicVirtualInterfaceMapOutput)
}

type PublicVirtualInterfaceOutput struct{ *pulumi.OutputState }

func (PublicVirtualInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicVirtualInterface)(nil)).Elem()
}

func (o PublicVirtualInterfaceOutput) ToPublicVirtualInterfaceOutput() PublicVirtualInterfaceOutput {
	return o
}

func (o PublicVirtualInterfaceOutput) ToPublicVirtualInterfaceOutputWithContext(ctx context.Context) PublicVirtualInterfaceOutput {
	return o
}

func (o PublicVirtualInterfaceOutput) AddressFamily() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicVirtualInterface) pulumi.StringOutput { return v.AddressFamily }).(pulumi.StringOutput)
}

func (o PublicVirtualInterfaceOutput) AmazonAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicVirtualInterface) pulumi.StringOutput { return v.AmazonAddress }).(pulumi.StringOutput)
}

func (o PublicVirtualInterfaceOutput) AmazonSideAsn() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicVirtualInterface) pulumi.StringOutput { return v.AmazonSideAsn }).(pulumi.StringOutput)
}

func (o PublicVirtualInterfaceOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicVirtualInterface) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o PublicVirtualInterfaceOutput) AwsDevice() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicVirtualInterface) pulumi.StringOutput { return v.AwsDevice }).(pulumi.StringOutput)
}

func (o PublicVirtualInterfaceOutput) BgpAsn() pulumi.IntOutput {
	return o.ApplyT(func(v *PublicVirtualInterface) pulumi.IntOutput { return v.BgpAsn }).(pulumi.IntOutput)
}

func (o PublicVirtualInterfaceOutput) BgpAuthKey() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicVirtualInterface) pulumi.StringOutput { return v.BgpAuthKey }).(pulumi.StringOutput)
}

func (o PublicVirtualInterfaceOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicVirtualInterface) pulumi.StringOutput { return v.ConnectionId }).(pulumi.StringOutput)
}

func (o PublicVirtualInterfaceOutput) CustomerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicVirtualInterface) pulumi.StringOutput { return v.CustomerAddress }).(pulumi.StringOutput)
}

func (o PublicVirtualInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicVirtualInterface) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PublicVirtualInterfaceOutput) RouteFilterPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicVirtualInterface) pulumi.StringArrayOutput { return v.RouteFilterPrefixes }).(pulumi.StringArrayOutput)
}

func (o PublicVirtualInterfaceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicVirtualInterface) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o PublicVirtualInterfaceOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicVirtualInterface) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o PublicVirtualInterfaceOutput) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v *PublicVirtualInterface) pulumi.IntOutput { return v.Vlan }).(pulumi.IntOutput)
}

type PublicVirtualInterfaceArrayOutput struct{ *pulumi.OutputState }

func (PublicVirtualInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicVirtualInterface)(nil)).Elem()
}

func (o PublicVirtualInterfaceArrayOutput) ToPublicVirtualInterfaceArrayOutput() PublicVirtualInterfaceArrayOutput {
	return o
}

func (o PublicVirtualInterfaceArrayOutput) ToPublicVirtualInterfaceArrayOutputWithContext(ctx context.Context) PublicVirtualInterfaceArrayOutput {
	return o
}

func (o PublicVirtualInterfaceArrayOutput) Index(i pulumi.IntInput) PublicVirtualInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PublicVirtualInterface {
		return vs[0].([]*PublicVirtualInterface)[vs[1].(int)]
	}).(PublicVirtualInterfaceOutput)
}

type PublicVirtualInterfaceMapOutput struct{ *pulumi.OutputState }

func (PublicVirtualInterfaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicVirtualInterface)(nil)).Elem()
}

func (o PublicVirtualInterfaceMapOutput) ToPublicVirtualInterfaceMapOutput() PublicVirtualInterfaceMapOutput {
	return o
}

func (o PublicVirtualInterfaceMapOutput) ToPublicVirtualInterfaceMapOutputWithContext(ctx context.Context) PublicVirtualInterfaceMapOutput {
	return o
}

func (o PublicVirtualInterfaceMapOutput) MapIndex(k pulumi.StringInput) PublicVirtualInterfaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PublicVirtualInterface {
		return vs[0].(map[string]*PublicVirtualInterface)[vs[1].(string)]
	}).(PublicVirtualInterfaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PublicVirtualInterfaceInput)(nil)).Elem(), &PublicVirtualInterface{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicVirtualInterfaceArrayInput)(nil)).Elem(), PublicVirtualInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicVirtualInterfaceMapInput)(nil)).Elem(), PublicVirtualInterfaceMap{})
	pulumi.RegisterOutputType(PublicVirtualInterfaceOutput{})
	pulumi.RegisterOutputType(PublicVirtualInterfaceArrayOutput{})
	pulumi.RegisterOutputType(PublicVirtualInterfaceMapOutput{})
}
