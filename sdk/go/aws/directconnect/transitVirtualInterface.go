// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TransitVirtualInterface struct {
	pulumi.CustomResourceState

	AddressFamily     pulumi.StringOutput    `pulumi:"addressFamily"`
	AmazonAddress     pulumi.StringOutput    `pulumi:"amazonAddress"`
	AmazonSideAsn     pulumi.StringOutput    `pulumi:"amazonSideAsn"`
	Arn               pulumi.StringOutput    `pulumi:"arn"`
	AwsDevice         pulumi.StringOutput    `pulumi:"awsDevice"`
	BgpAsn            pulumi.IntOutput       `pulumi:"bgpAsn"`
	BgpAuthKey        pulumi.StringOutput    `pulumi:"bgpAuthKey"`
	ConnectionId      pulumi.StringOutput    `pulumi:"connectionId"`
	CustomerAddress   pulumi.StringOutput    `pulumi:"customerAddress"`
	DxGatewayId       pulumi.StringOutput    `pulumi:"dxGatewayId"`
	JumboFrameCapable pulumi.BoolOutput      `pulumi:"jumboFrameCapable"`
	Mtu               pulumi.IntPtrOutput    `pulumi:"mtu"`
	Name              pulumi.StringOutput    `pulumi:"name"`
	SitelinkEnabled   pulumi.BoolPtrOutput   `pulumi:"sitelinkEnabled"`
	Tags              pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll           pulumi.StringMapOutput `pulumi:"tagsAll"`
	Vlan              pulumi.IntOutput       `pulumi:"vlan"`
}

// NewTransitVirtualInterface registers a new resource with the given unique name, arguments, and options.
func NewTransitVirtualInterface(ctx *pulumi.Context,
	name string, args *TransitVirtualInterfaceArgs, opts ...pulumi.ResourceOption) (*TransitVirtualInterface, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AddressFamily == nil {
		return nil, errors.New("invalid value for required argument 'AddressFamily'")
	}
	if args.BgpAsn == nil {
		return nil, errors.New("invalid value for required argument 'BgpAsn'")
	}
	if args.ConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionId'")
	}
	if args.DxGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'DxGatewayId'")
	}
	if args.Vlan == nil {
		return nil, errors.New("invalid value for required argument 'Vlan'")
	}
	var resource TransitVirtualInterface
	err := ctx.RegisterResource("aws:directconnect/transitVirtualInterface:TransitVirtualInterface", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitVirtualInterface gets an existing TransitVirtualInterface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitVirtualInterface(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitVirtualInterfaceState, opts ...pulumi.ResourceOption) (*TransitVirtualInterface, error) {
	var resource TransitVirtualInterface
	err := ctx.ReadResource("aws:directconnect/transitVirtualInterface:TransitVirtualInterface", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitVirtualInterface resources.
type transitVirtualInterfaceState struct {
	AddressFamily     *string           `pulumi:"addressFamily"`
	AmazonAddress     *string           `pulumi:"amazonAddress"`
	AmazonSideAsn     *string           `pulumi:"amazonSideAsn"`
	Arn               *string           `pulumi:"arn"`
	AwsDevice         *string           `pulumi:"awsDevice"`
	BgpAsn            *int              `pulumi:"bgpAsn"`
	BgpAuthKey        *string           `pulumi:"bgpAuthKey"`
	ConnectionId      *string           `pulumi:"connectionId"`
	CustomerAddress   *string           `pulumi:"customerAddress"`
	DxGatewayId       *string           `pulumi:"dxGatewayId"`
	JumboFrameCapable *bool             `pulumi:"jumboFrameCapable"`
	Mtu               *int              `pulumi:"mtu"`
	Name              *string           `pulumi:"name"`
	SitelinkEnabled   *bool             `pulumi:"sitelinkEnabled"`
	Tags              map[string]string `pulumi:"tags"`
	TagsAll           map[string]string `pulumi:"tagsAll"`
	Vlan              *int              `pulumi:"vlan"`
}

type TransitVirtualInterfaceState struct {
	AddressFamily     pulumi.StringPtrInput
	AmazonAddress     pulumi.StringPtrInput
	AmazonSideAsn     pulumi.StringPtrInput
	Arn               pulumi.StringPtrInput
	AwsDevice         pulumi.StringPtrInput
	BgpAsn            pulumi.IntPtrInput
	BgpAuthKey        pulumi.StringPtrInput
	ConnectionId      pulumi.StringPtrInput
	CustomerAddress   pulumi.StringPtrInput
	DxGatewayId       pulumi.StringPtrInput
	JumboFrameCapable pulumi.BoolPtrInput
	Mtu               pulumi.IntPtrInput
	Name              pulumi.StringPtrInput
	SitelinkEnabled   pulumi.BoolPtrInput
	Tags              pulumi.StringMapInput
	TagsAll           pulumi.StringMapInput
	Vlan              pulumi.IntPtrInput
}

func (TransitVirtualInterfaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitVirtualInterfaceState)(nil)).Elem()
}

type transitVirtualInterfaceArgs struct {
	AddressFamily   string            `pulumi:"addressFamily"`
	AmazonAddress   *string           `pulumi:"amazonAddress"`
	BgpAsn          int               `pulumi:"bgpAsn"`
	BgpAuthKey      *string           `pulumi:"bgpAuthKey"`
	ConnectionId    string            `pulumi:"connectionId"`
	CustomerAddress *string           `pulumi:"customerAddress"`
	DxGatewayId     string            `pulumi:"dxGatewayId"`
	Mtu             *int              `pulumi:"mtu"`
	Name            *string           `pulumi:"name"`
	SitelinkEnabled *bool             `pulumi:"sitelinkEnabled"`
	Tags            map[string]string `pulumi:"tags"`
	Vlan            int               `pulumi:"vlan"`
}

// The set of arguments for constructing a TransitVirtualInterface resource.
type TransitVirtualInterfaceArgs struct {
	AddressFamily   pulumi.StringInput
	AmazonAddress   pulumi.StringPtrInput
	BgpAsn          pulumi.IntInput
	BgpAuthKey      pulumi.StringPtrInput
	ConnectionId    pulumi.StringInput
	CustomerAddress pulumi.StringPtrInput
	DxGatewayId     pulumi.StringInput
	Mtu             pulumi.IntPtrInput
	Name            pulumi.StringPtrInput
	SitelinkEnabled pulumi.BoolPtrInput
	Tags            pulumi.StringMapInput
	Vlan            pulumi.IntInput
}

func (TransitVirtualInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitVirtualInterfaceArgs)(nil)).Elem()
}

type TransitVirtualInterfaceInput interface {
	pulumi.Input

	ToTransitVirtualInterfaceOutput() TransitVirtualInterfaceOutput
	ToTransitVirtualInterfaceOutputWithContext(ctx context.Context) TransitVirtualInterfaceOutput
}

func (*TransitVirtualInterface) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitVirtualInterface)(nil)).Elem()
}

func (i *TransitVirtualInterface) ToTransitVirtualInterfaceOutput() TransitVirtualInterfaceOutput {
	return i.ToTransitVirtualInterfaceOutputWithContext(context.Background())
}

func (i *TransitVirtualInterface) ToTransitVirtualInterfaceOutputWithContext(ctx context.Context) TransitVirtualInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitVirtualInterfaceOutput)
}

// TransitVirtualInterfaceArrayInput is an input type that accepts TransitVirtualInterfaceArray and TransitVirtualInterfaceArrayOutput values.
// You can construct a concrete instance of `TransitVirtualInterfaceArrayInput` via:
//
//	TransitVirtualInterfaceArray{ TransitVirtualInterfaceArgs{...} }
type TransitVirtualInterfaceArrayInput interface {
	pulumi.Input

	ToTransitVirtualInterfaceArrayOutput() TransitVirtualInterfaceArrayOutput
	ToTransitVirtualInterfaceArrayOutputWithContext(context.Context) TransitVirtualInterfaceArrayOutput
}

type TransitVirtualInterfaceArray []TransitVirtualInterfaceInput

func (TransitVirtualInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitVirtualInterface)(nil)).Elem()
}

func (i TransitVirtualInterfaceArray) ToTransitVirtualInterfaceArrayOutput() TransitVirtualInterfaceArrayOutput {
	return i.ToTransitVirtualInterfaceArrayOutputWithContext(context.Background())
}

func (i TransitVirtualInterfaceArray) ToTransitVirtualInterfaceArrayOutputWithContext(ctx context.Context) TransitVirtualInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitVirtualInterfaceArrayOutput)
}

// TransitVirtualInterfaceMapInput is an input type that accepts TransitVirtualInterfaceMap and TransitVirtualInterfaceMapOutput values.
// You can construct a concrete instance of `TransitVirtualInterfaceMapInput` via:
//
//	TransitVirtualInterfaceMap{ "key": TransitVirtualInterfaceArgs{...} }
type TransitVirtualInterfaceMapInput interface {
	pulumi.Input

	ToTransitVirtualInterfaceMapOutput() TransitVirtualInterfaceMapOutput
	ToTransitVirtualInterfaceMapOutputWithContext(context.Context) TransitVirtualInterfaceMapOutput
}

type TransitVirtualInterfaceMap map[string]TransitVirtualInterfaceInput

func (TransitVirtualInterfaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitVirtualInterface)(nil)).Elem()
}

func (i TransitVirtualInterfaceMap) ToTransitVirtualInterfaceMapOutput() TransitVirtualInterfaceMapOutput {
	return i.ToTransitVirtualInterfaceMapOutputWithContext(context.Background())
}

func (i TransitVirtualInterfaceMap) ToTransitVirtualInterfaceMapOutputWithContext(ctx context.Context) TransitVirtualInterfaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitVirtualInterfaceMapOutput)
}

type TransitVirtualInterfaceOutput struct{ *pulumi.OutputState }

func (TransitVirtualInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitVirtualInterface)(nil)).Elem()
}

func (o TransitVirtualInterfaceOutput) ToTransitVirtualInterfaceOutput() TransitVirtualInterfaceOutput {
	return o
}

func (o TransitVirtualInterfaceOutput) ToTransitVirtualInterfaceOutputWithContext(ctx context.Context) TransitVirtualInterfaceOutput {
	return o
}

func (o TransitVirtualInterfaceOutput) AddressFamily() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.StringOutput { return v.AddressFamily }).(pulumi.StringOutput)
}

func (o TransitVirtualInterfaceOutput) AmazonAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.StringOutput { return v.AmazonAddress }).(pulumi.StringOutput)
}

func (o TransitVirtualInterfaceOutput) AmazonSideAsn() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.StringOutput { return v.AmazonSideAsn }).(pulumi.StringOutput)
}

func (o TransitVirtualInterfaceOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o TransitVirtualInterfaceOutput) AwsDevice() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.StringOutput { return v.AwsDevice }).(pulumi.StringOutput)
}

func (o TransitVirtualInterfaceOutput) BgpAsn() pulumi.IntOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.IntOutput { return v.BgpAsn }).(pulumi.IntOutput)
}

func (o TransitVirtualInterfaceOutput) BgpAuthKey() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.StringOutput { return v.BgpAuthKey }).(pulumi.StringOutput)
}

func (o TransitVirtualInterfaceOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.StringOutput { return v.ConnectionId }).(pulumi.StringOutput)
}

func (o TransitVirtualInterfaceOutput) CustomerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.StringOutput { return v.CustomerAddress }).(pulumi.StringOutput)
}

func (o TransitVirtualInterfaceOutput) DxGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.StringOutput { return v.DxGatewayId }).(pulumi.StringOutput)
}

func (o TransitVirtualInterfaceOutput) JumboFrameCapable() pulumi.BoolOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.BoolOutput { return v.JumboFrameCapable }).(pulumi.BoolOutput)
}

func (o TransitVirtualInterfaceOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.IntPtrOutput { return v.Mtu }).(pulumi.IntPtrOutput)
}

func (o TransitVirtualInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o TransitVirtualInterfaceOutput) SitelinkEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.BoolPtrOutput { return v.SitelinkEnabled }).(pulumi.BoolPtrOutput)
}

func (o TransitVirtualInterfaceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o TransitVirtualInterfaceOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o TransitVirtualInterfaceOutput) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v *TransitVirtualInterface) pulumi.IntOutput { return v.Vlan }).(pulumi.IntOutput)
}

type TransitVirtualInterfaceArrayOutput struct{ *pulumi.OutputState }

func (TransitVirtualInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitVirtualInterface)(nil)).Elem()
}

func (o TransitVirtualInterfaceArrayOutput) ToTransitVirtualInterfaceArrayOutput() TransitVirtualInterfaceArrayOutput {
	return o
}

func (o TransitVirtualInterfaceArrayOutput) ToTransitVirtualInterfaceArrayOutputWithContext(ctx context.Context) TransitVirtualInterfaceArrayOutput {
	return o
}

func (o TransitVirtualInterfaceArrayOutput) Index(i pulumi.IntInput) TransitVirtualInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransitVirtualInterface {
		return vs[0].([]*TransitVirtualInterface)[vs[1].(int)]
	}).(TransitVirtualInterfaceOutput)
}

type TransitVirtualInterfaceMapOutput struct{ *pulumi.OutputState }

func (TransitVirtualInterfaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitVirtualInterface)(nil)).Elem()
}

func (o TransitVirtualInterfaceMapOutput) ToTransitVirtualInterfaceMapOutput() TransitVirtualInterfaceMapOutput {
	return o
}

func (o TransitVirtualInterfaceMapOutput) ToTransitVirtualInterfaceMapOutputWithContext(ctx context.Context) TransitVirtualInterfaceMapOutput {
	return o
}

func (o TransitVirtualInterfaceMapOutput) MapIndex(k pulumi.StringInput) TransitVirtualInterfaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransitVirtualInterface {
		return vs[0].(map[string]*TransitVirtualInterface)[vs[1].(string)]
	}).(TransitVirtualInterfaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransitVirtualInterfaceInput)(nil)).Elem(), &TransitVirtualInterface{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitVirtualInterfaceArrayInput)(nil)).Elem(), TransitVirtualInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitVirtualInterfaceMapInput)(nil)).Elem(), TransitVirtualInterfaceMap{})
	pulumi.RegisterOutputType(TransitVirtualInterfaceOutput{})
	pulumi.RegisterOutputType(TransitVirtualInterfaceArrayOutput{})
	pulumi.RegisterOutputType(TransitVirtualInterfaceMapOutput{})
}
