// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Associates a Direct Connect Connection with a LAG.
type ConnectionAssociation struct {
	s *pulumi.ResourceState
}

// NewConnectionAssociation registers a new resource with the given unique name, arguments, and options.
func NewConnectionAssociation(ctx *pulumi.Context,
	name string, args *ConnectionAssociationArgs, opts ...pulumi.ResourceOpt) (*ConnectionAssociation, error) {
	if args == nil || args.ConnectionId == nil {
		return nil, errors.New("missing required argument 'ConnectionId'")
	}
	if args == nil || args.LagId == nil {
		return nil, errors.New("missing required argument 'LagId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["connectionId"] = nil
		inputs["lagId"] = nil
	} else {
		inputs["connectionId"] = args.ConnectionId
		inputs["lagId"] = args.LagId
	}
	s, err := ctx.RegisterResource("aws:directconnect/connectionAssociation:ConnectionAssociation", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ConnectionAssociation{s: s}, nil
}

// GetConnectionAssociation gets an existing ConnectionAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectionAssociation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ConnectionAssociationState, opts ...pulumi.ResourceOpt) (*ConnectionAssociation, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["connectionId"] = state.ConnectionId
		inputs["lagId"] = state.LagId
	}
	s, err := ctx.ReadResource("aws:directconnect/connectionAssociation:ConnectionAssociation", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ConnectionAssociation{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ConnectionAssociation) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ConnectionAssociation) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The ID of the connection.
func (r *ConnectionAssociation) ConnectionId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["connectionId"])
}

// The ID of the LAG with which to associate the connection.
func (r *ConnectionAssociation) LagId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["lagId"])
}

// Input properties used for looking up and filtering ConnectionAssociation resources.
type ConnectionAssociationState struct {
	// The ID of the connection.
	ConnectionId interface{}
	// The ID of the LAG with which to associate the connection.
	LagId interface{}
}

// The set of arguments for constructing a ConnectionAssociation resource.
type ConnectionAssociationArgs struct {
	// The ID of the connection.
	ConnectionId interface{}
	// The ID of the LAG with which to associate the connection.
	LagId interface{}
}
