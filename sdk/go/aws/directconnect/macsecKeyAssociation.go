// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MacsecKeyAssociation struct {
	pulumi.CustomResourceState

	Cak          pulumi.StringPtrOutput `pulumi:"cak"`
	Ckn          pulumi.StringOutput    `pulumi:"ckn"`
	ConnectionId pulumi.StringOutput    `pulumi:"connectionId"`
	SecretArn    pulumi.StringOutput    `pulumi:"secretArn"`
	StartOn      pulumi.StringOutput    `pulumi:"startOn"`
	State        pulumi.StringOutput    `pulumi:"state"`
}

// NewMacsecKeyAssociation registers a new resource with the given unique name, arguments, and options.
func NewMacsecKeyAssociation(ctx *pulumi.Context,
	name string, args *MacsecKeyAssociationArgs, opts ...pulumi.ResourceOption) (*MacsecKeyAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionId'")
	}
	var resource MacsecKeyAssociation
	err := ctx.RegisterResource("aws:directconnect/macsecKeyAssociation:MacsecKeyAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMacsecKeyAssociation gets an existing MacsecKeyAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMacsecKeyAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MacsecKeyAssociationState, opts ...pulumi.ResourceOption) (*MacsecKeyAssociation, error) {
	var resource MacsecKeyAssociation
	err := ctx.ReadResource("aws:directconnect/macsecKeyAssociation:MacsecKeyAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MacsecKeyAssociation resources.
type macsecKeyAssociationState struct {
	Cak          *string `pulumi:"cak"`
	Ckn          *string `pulumi:"ckn"`
	ConnectionId *string `pulumi:"connectionId"`
	SecretArn    *string `pulumi:"secretArn"`
	StartOn      *string `pulumi:"startOn"`
	State        *string `pulumi:"state"`
}

type MacsecKeyAssociationState struct {
	Cak          pulumi.StringPtrInput
	Ckn          pulumi.StringPtrInput
	ConnectionId pulumi.StringPtrInput
	SecretArn    pulumi.StringPtrInput
	StartOn      pulumi.StringPtrInput
	State        pulumi.StringPtrInput
}

func (MacsecKeyAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*macsecKeyAssociationState)(nil)).Elem()
}

type macsecKeyAssociationArgs struct {
	Cak          *string `pulumi:"cak"`
	Ckn          *string `pulumi:"ckn"`
	ConnectionId string  `pulumi:"connectionId"`
	SecretArn    *string `pulumi:"secretArn"`
}

// The set of arguments for constructing a MacsecKeyAssociation resource.
type MacsecKeyAssociationArgs struct {
	Cak          pulumi.StringPtrInput
	Ckn          pulumi.StringPtrInput
	ConnectionId pulumi.StringInput
	SecretArn    pulumi.StringPtrInput
}

func (MacsecKeyAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*macsecKeyAssociationArgs)(nil)).Elem()
}

type MacsecKeyAssociationInput interface {
	pulumi.Input

	ToMacsecKeyAssociationOutput() MacsecKeyAssociationOutput
	ToMacsecKeyAssociationOutputWithContext(ctx context.Context) MacsecKeyAssociationOutput
}

func (*MacsecKeyAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**MacsecKeyAssociation)(nil)).Elem()
}

func (i *MacsecKeyAssociation) ToMacsecKeyAssociationOutput() MacsecKeyAssociationOutput {
	return i.ToMacsecKeyAssociationOutputWithContext(context.Background())
}

func (i *MacsecKeyAssociation) ToMacsecKeyAssociationOutputWithContext(ctx context.Context) MacsecKeyAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MacsecKeyAssociationOutput)
}

// MacsecKeyAssociationArrayInput is an input type that accepts MacsecKeyAssociationArray and MacsecKeyAssociationArrayOutput values.
// You can construct a concrete instance of `MacsecKeyAssociationArrayInput` via:
//
//	MacsecKeyAssociationArray{ MacsecKeyAssociationArgs{...} }
type MacsecKeyAssociationArrayInput interface {
	pulumi.Input

	ToMacsecKeyAssociationArrayOutput() MacsecKeyAssociationArrayOutput
	ToMacsecKeyAssociationArrayOutputWithContext(context.Context) MacsecKeyAssociationArrayOutput
}

type MacsecKeyAssociationArray []MacsecKeyAssociationInput

func (MacsecKeyAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MacsecKeyAssociation)(nil)).Elem()
}

func (i MacsecKeyAssociationArray) ToMacsecKeyAssociationArrayOutput() MacsecKeyAssociationArrayOutput {
	return i.ToMacsecKeyAssociationArrayOutputWithContext(context.Background())
}

func (i MacsecKeyAssociationArray) ToMacsecKeyAssociationArrayOutputWithContext(ctx context.Context) MacsecKeyAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MacsecKeyAssociationArrayOutput)
}

// MacsecKeyAssociationMapInput is an input type that accepts MacsecKeyAssociationMap and MacsecKeyAssociationMapOutput values.
// You can construct a concrete instance of `MacsecKeyAssociationMapInput` via:
//
//	MacsecKeyAssociationMap{ "key": MacsecKeyAssociationArgs{...} }
type MacsecKeyAssociationMapInput interface {
	pulumi.Input

	ToMacsecKeyAssociationMapOutput() MacsecKeyAssociationMapOutput
	ToMacsecKeyAssociationMapOutputWithContext(context.Context) MacsecKeyAssociationMapOutput
}

type MacsecKeyAssociationMap map[string]MacsecKeyAssociationInput

func (MacsecKeyAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MacsecKeyAssociation)(nil)).Elem()
}

func (i MacsecKeyAssociationMap) ToMacsecKeyAssociationMapOutput() MacsecKeyAssociationMapOutput {
	return i.ToMacsecKeyAssociationMapOutputWithContext(context.Background())
}

func (i MacsecKeyAssociationMap) ToMacsecKeyAssociationMapOutputWithContext(ctx context.Context) MacsecKeyAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MacsecKeyAssociationMapOutput)
}

type MacsecKeyAssociationOutput struct{ *pulumi.OutputState }

func (MacsecKeyAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MacsecKeyAssociation)(nil)).Elem()
}

func (o MacsecKeyAssociationOutput) ToMacsecKeyAssociationOutput() MacsecKeyAssociationOutput {
	return o
}

func (o MacsecKeyAssociationOutput) ToMacsecKeyAssociationOutputWithContext(ctx context.Context) MacsecKeyAssociationOutput {
	return o
}

func (o MacsecKeyAssociationOutput) Cak() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MacsecKeyAssociation) pulumi.StringPtrOutput { return v.Cak }).(pulumi.StringPtrOutput)
}

func (o MacsecKeyAssociationOutput) Ckn() pulumi.StringOutput {
	return o.ApplyT(func(v *MacsecKeyAssociation) pulumi.StringOutput { return v.Ckn }).(pulumi.StringOutput)
}

func (o MacsecKeyAssociationOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *MacsecKeyAssociation) pulumi.StringOutput { return v.ConnectionId }).(pulumi.StringOutput)
}

func (o MacsecKeyAssociationOutput) SecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v *MacsecKeyAssociation) pulumi.StringOutput { return v.SecretArn }).(pulumi.StringOutput)
}

func (o MacsecKeyAssociationOutput) StartOn() pulumi.StringOutput {
	return o.ApplyT(func(v *MacsecKeyAssociation) pulumi.StringOutput { return v.StartOn }).(pulumi.StringOutput)
}

func (o MacsecKeyAssociationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *MacsecKeyAssociation) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

type MacsecKeyAssociationArrayOutput struct{ *pulumi.OutputState }

func (MacsecKeyAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MacsecKeyAssociation)(nil)).Elem()
}

func (o MacsecKeyAssociationArrayOutput) ToMacsecKeyAssociationArrayOutput() MacsecKeyAssociationArrayOutput {
	return o
}

func (o MacsecKeyAssociationArrayOutput) ToMacsecKeyAssociationArrayOutputWithContext(ctx context.Context) MacsecKeyAssociationArrayOutput {
	return o
}

func (o MacsecKeyAssociationArrayOutput) Index(i pulumi.IntInput) MacsecKeyAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MacsecKeyAssociation {
		return vs[0].([]*MacsecKeyAssociation)[vs[1].(int)]
	}).(MacsecKeyAssociationOutput)
}

type MacsecKeyAssociationMapOutput struct{ *pulumi.OutputState }

func (MacsecKeyAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MacsecKeyAssociation)(nil)).Elem()
}

func (o MacsecKeyAssociationMapOutput) ToMacsecKeyAssociationMapOutput() MacsecKeyAssociationMapOutput {
	return o
}

func (o MacsecKeyAssociationMapOutput) ToMacsecKeyAssociationMapOutputWithContext(ctx context.Context) MacsecKeyAssociationMapOutput {
	return o
}

func (o MacsecKeyAssociationMapOutput) MapIndex(k pulumi.StringInput) MacsecKeyAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MacsecKeyAssociation {
		return vs[0].(map[string]*MacsecKeyAssociation)[vs[1].(string)]
	}).(MacsecKeyAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MacsecKeyAssociationInput)(nil)).Elem(), &MacsecKeyAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*MacsecKeyAssociationArrayInput)(nil)).Elem(), MacsecKeyAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MacsecKeyAssociationMapInput)(nil)).Elem(), MacsecKeyAssociationMap{})
	pulumi.RegisterOutputType(MacsecKeyAssociationOutput{})
	pulumi.RegisterOutputType(MacsecKeyAssociationArrayOutput{})
	pulumi.RegisterOutputType(MacsecKeyAssociationMapOutput{})
}
