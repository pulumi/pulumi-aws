// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicequotas

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceQuota struct {
	pulumi.CustomResourceState

	Adjustable    pulumi.BoolOutput    `pulumi:"adjustable"`
	Arn           pulumi.StringOutput  `pulumi:"arn"`
	DefaultValue  pulumi.Float64Output `pulumi:"defaultValue"`
	QuotaCode     pulumi.StringOutput  `pulumi:"quotaCode"`
	QuotaName     pulumi.StringOutput  `pulumi:"quotaName"`
	RequestId     pulumi.StringOutput  `pulumi:"requestId"`
	RequestStatus pulumi.StringOutput  `pulumi:"requestStatus"`
	ServiceCode   pulumi.StringOutput  `pulumi:"serviceCode"`
	ServiceName   pulumi.StringOutput  `pulumi:"serviceName"`
	Value         pulumi.Float64Output `pulumi:"value"`
}

// NewServiceQuota registers a new resource with the given unique name, arguments, and options.
func NewServiceQuota(ctx *pulumi.Context,
	name string, args *ServiceQuotaArgs, opts ...pulumi.ResourceOption) (*ServiceQuota, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.QuotaCode == nil {
		return nil, errors.New("invalid value for required argument 'QuotaCode'")
	}
	if args.ServiceCode == nil {
		return nil, errors.New("invalid value for required argument 'ServiceCode'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	var resource ServiceQuota
	err := ctx.RegisterResource("aws:servicequotas/serviceQuota:ServiceQuota", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceQuota gets an existing ServiceQuota resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceQuota(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceQuotaState, opts ...pulumi.ResourceOption) (*ServiceQuota, error) {
	var resource ServiceQuota
	err := ctx.ReadResource("aws:servicequotas/serviceQuota:ServiceQuota", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceQuota resources.
type serviceQuotaState struct {
	Adjustable    *bool    `pulumi:"adjustable"`
	Arn           *string  `pulumi:"arn"`
	DefaultValue  *float64 `pulumi:"defaultValue"`
	QuotaCode     *string  `pulumi:"quotaCode"`
	QuotaName     *string  `pulumi:"quotaName"`
	RequestId     *string  `pulumi:"requestId"`
	RequestStatus *string  `pulumi:"requestStatus"`
	ServiceCode   *string  `pulumi:"serviceCode"`
	ServiceName   *string  `pulumi:"serviceName"`
	Value         *float64 `pulumi:"value"`
}

type ServiceQuotaState struct {
	Adjustable    pulumi.BoolPtrInput
	Arn           pulumi.StringPtrInput
	DefaultValue  pulumi.Float64PtrInput
	QuotaCode     pulumi.StringPtrInput
	QuotaName     pulumi.StringPtrInput
	RequestId     pulumi.StringPtrInput
	RequestStatus pulumi.StringPtrInput
	ServiceCode   pulumi.StringPtrInput
	ServiceName   pulumi.StringPtrInput
	Value         pulumi.Float64PtrInput
}

func (ServiceQuotaState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceQuotaState)(nil)).Elem()
}

type serviceQuotaArgs struct {
	QuotaCode   string  `pulumi:"quotaCode"`
	ServiceCode string  `pulumi:"serviceCode"`
	Value       float64 `pulumi:"value"`
}

// The set of arguments for constructing a ServiceQuota resource.
type ServiceQuotaArgs struct {
	QuotaCode   pulumi.StringInput
	ServiceCode pulumi.StringInput
	Value       pulumi.Float64Input
}

func (ServiceQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceQuotaArgs)(nil)).Elem()
}

type ServiceQuotaInput interface {
	pulumi.Input

	ToServiceQuotaOutput() ServiceQuotaOutput
	ToServiceQuotaOutputWithContext(ctx context.Context) ServiceQuotaOutput
}

func (*ServiceQuota) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceQuota)(nil)).Elem()
}

func (i *ServiceQuota) ToServiceQuotaOutput() ServiceQuotaOutput {
	return i.ToServiceQuotaOutputWithContext(context.Background())
}

func (i *ServiceQuota) ToServiceQuotaOutputWithContext(ctx context.Context) ServiceQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceQuotaOutput)
}

// ServiceQuotaArrayInput is an input type that accepts ServiceQuotaArray and ServiceQuotaArrayOutput values.
// You can construct a concrete instance of `ServiceQuotaArrayInput` via:
//
//	ServiceQuotaArray{ ServiceQuotaArgs{...} }
type ServiceQuotaArrayInput interface {
	pulumi.Input

	ToServiceQuotaArrayOutput() ServiceQuotaArrayOutput
	ToServiceQuotaArrayOutputWithContext(context.Context) ServiceQuotaArrayOutput
}

type ServiceQuotaArray []ServiceQuotaInput

func (ServiceQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceQuota)(nil)).Elem()
}

func (i ServiceQuotaArray) ToServiceQuotaArrayOutput() ServiceQuotaArrayOutput {
	return i.ToServiceQuotaArrayOutputWithContext(context.Background())
}

func (i ServiceQuotaArray) ToServiceQuotaArrayOutputWithContext(ctx context.Context) ServiceQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceQuotaArrayOutput)
}

// ServiceQuotaMapInput is an input type that accepts ServiceQuotaMap and ServiceQuotaMapOutput values.
// You can construct a concrete instance of `ServiceQuotaMapInput` via:
//
//	ServiceQuotaMap{ "key": ServiceQuotaArgs{...} }
type ServiceQuotaMapInput interface {
	pulumi.Input

	ToServiceQuotaMapOutput() ServiceQuotaMapOutput
	ToServiceQuotaMapOutputWithContext(context.Context) ServiceQuotaMapOutput
}

type ServiceQuotaMap map[string]ServiceQuotaInput

func (ServiceQuotaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceQuota)(nil)).Elem()
}

func (i ServiceQuotaMap) ToServiceQuotaMapOutput() ServiceQuotaMapOutput {
	return i.ToServiceQuotaMapOutputWithContext(context.Background())
}

func (i ServiceQuotaMap) ToServiceQuotaMapOutputWithContext(ctx context.Context) ServiceQuotaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceQuotaMapOutput)
}

type ServiceQuotaOutput struct{ *pulumi.OutputState }

func (ServiceQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceQuota)(nil)).Elem()
}

func (o ServiceQuotaOutput) ToServiceQuotaOutput() ServiceQuotaOutput {
	return o
}

func (o ServiceQuotaOutput) ToServiceQuotaOutputWithContext(ctx context.Context) ServiceQuotaOutput {
	return o
}

func (o ServiceQuotaOutput) Adjustable() pulumi.BoolOutput {
	return o.ApplyT(func(v *ServiceQuota) pulumi.BoolOutput { return v.Adjustable }).(pulumi.BoolOutput)
}

func (o ServiceQuotaOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceQuota) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ServiceQuotaOutput) DefaultValue() pulumi.Float64Output {
	return o.ApplyT(func(v *ServiceQuota) pulumi.Float64Output { return v.DefaultValue }).(pulumi.Float64Output)
}

func (o ServiceQuotaOutput) QuotaCode() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceQuota) pulumi.StringOutput { return v.QuotaCode }).(pulumi.StringOutput)
}

func (o ServiceQuotaOutput) QuotaName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceQuota) pulumi.StringOutput { return v.QuotaName }).(pulumi.StringOutput)
}

func (o ServiceQuotaOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceQuota) pulumi.StringOutput { return v.RequestId }).(pulumi.StringOutput)
}

func (o ServiceQuotaOutput) RequestStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceQuota) pulumi.StringOutput { return v.RequestStatus }).(pulumi.StringOutput)
}

func (o ServiceQuotaOutput) ServiceCode() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceQuota) pulumi.StringOutput { return v.ServiceCode }).(pulumi.StringOutput)
}

func (o ServiceQuotaOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceQuota) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

func (o ServiceQuotaOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v *ServiceQuota) pulumi.Float64Output { return v.Value }).(pulumi.Float64Output)
}

type ServiceQuotaArrayOutput struct{ *pulumi.OutputState }

func (ServiceQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceQuota)(nil)).Elem()
}

func (o ServiceQuotaArrayOutput) ToServiceQuotaArrayOutput() ServiceQuotaArrayOutput {
	return o
}

func (o ServiceQuotaArrayOutput) ToServiceQuotaArrayOutputWithContext(ctx context.Context) ServiceQuotaArrayOutput {
	return o
}

func (o ServiceQuotaArrayOutput) Index(i pulumi.IntInput) ServiceQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceQuota {
		return vs[0].([]*ServiceQuota)[vs[1].(int)]
	}).(ServiceQuotaOutput)
}

type ServiceQuotaMapOutput struct{ *pulumi.OutputState }

func (ServiceQuotaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceQuota)(nil)).Elem()
}

func (o ServiceQuotaMapOutput) ToServiceQuotaMapOutput() ServiceQuotaMapOutput {
	return o
}

func (o ServiceQuotaMapOutput) ToServiceQuotaMapOutputWithContext(ctx context.Context) ServiceQuotaMapOutput {
	return o
}

func (o ServiceQuotaMapOutput) MapIndex(k pulumi.StringInput) ServiceQuotaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceQuota {
		return vs[0].(map[string]*ServiceQuota)[vs[1].(string)]
	}).(ServiceQuotaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceQuotaInput)(nil)).Elem(), &ServiceQuota{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceQuotaArrayInput)(nil)).Elem(), ServiceQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceQuotaMapInput)(nil)).Elem(), ServiceQuotaMap{})
	pulumi.RegisterOutputType(ServiceQuotaOutput{})
	pulumi.RegisterOutputType(ServiceQuotaArrayOutput{})
	pulumi.RegisterOutputType(ServiceQuotaMapOutput{})
}
