// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package memorydb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSnapshot(ctx *pulumi.Context, args *LookupSnapshotArgs, opts ...pulumi.InvokeOption) (*LookupSnapshotResult, error) {
	var rv LookupSnapshotResult
	err := ctx.Invoke("aws:memorydb/getSnapshot:getSnapshot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSnapshot.
type LookupSnapshotArgs struct {
	Name string            `pulumi:"name"`
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getSnapshot.
type LookupSnapshotResult struct {
	Arn                   string                            `pulumi:"arn"`
	ClusterConfigurations []GetSnapshotClusterConfiguration `pulumi:"clusterConfigurations"`
	ClusterName           string                            `pulumi:"clusterName"`
	// The provider-assigned unique ID for this managed resource.
	Id        string            `pulumi:"id"`
	KmsKeyArn string            `pulumi:"kmsKeyArn"`
	Name      string            `pulumi:"name"`
	Source    string            `pulumi:"source"`
	Tags      map[string]string `pulumi:"tags"`
}

func LookupSnapshotOutput(ctx *pulumi.Context, args LookupSnapshotOutputArgs, opts ...pulumi.InvokeOption) LookupSnapshotResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSnapshotResult, error) {
			args := v.(LookupSnapshotArgs)
			r, err := LookupSnapshot(ctx, &args, opts...)
			var s LookupSnapshotResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSnapshotResultOutput)
}

// A collection of arguments for invoking getSnapshot.
type LookupSnapshotOutputArgs struct {
	Name pulumi.StringInput    `pulumi:"name"`
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupSnapshotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnapshotArgs)(nil)).Elem()
}

// A collection of values returned by getSnapshot.
type LookupSnapshotResultOutput struct{ *pulumi.OutputState }

func (LookupSnapshotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnapshotResult)(nil)).Elem()
}

func (o LookupSnapshotResultOutput) ToLookupSnapshotResultOutput() LookupSnapshotResultOutput {
	return o
}

func (o LookupSnapshotResultOutput) ToLookupSnapshotResultOutputWithContext(ctx context.Context) LookupSnapshotResultOutput {
	return o
}

func (o LookupSnapshotResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) ClusterConfigurations() GetSnapshotClusterConfigurationArrayOutput {
	return o.ApplyT(func(v LookupSnapshotResult) []GetSnapshotClusterConfiguration { return v.ClusterConfigurations }).(GetSnapshotClusterConfigurationArrayOutput)
}

func (o LookupSnapshotResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSnapshotResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) KmsKeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.KmsKeyArn }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Source }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSnapshotResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSnapshotResultOutput{})
}
