// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package memorydb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about a MemoryDB ACL.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/memorydb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := memorydb.LookupAcl(ctx, &memorydb.LookupAclArgs{
//				Name: "my-acl",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAcl(ctx *pulumi.Context, args *LookupAclArgs, opts ...pulumi.InvokeOption) (*LookupAclResult, error) {
	var rv LookupAclResult
	err := ctx.Invoke("aws:memorydb/getAcl:getAcl", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAcl.
type LookupAclArgs struct {
	// Name of the ACL.
	Name string `pulumi:"name"`
	// Map of tags assigned to the ACL.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getAcl.
type LookupAclResult struct {
	// ARN of the ACL.
	Arn string `pulumi:"arn"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The minimum engine version supported by the ACL.
	MinimumEngineVersion string `pulumi:"minimumEngineVersion"`
	Name                 string `pulumi:"name"`
	// Map of tags assigned to the ACL.
	Tags map[string]string `pulumi:"tags"`
	// Set of MemoryDB user names included in this ACL.
	UserNames []string `pulumi:"userNames"`
}

func LookupAclOutput(ctx *pulumi.Context, args LookupAclOutputArgs, opts ...pulumi.InvokeOption) LookupAclResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAclResult, error) {
			args := v.(LookupAclArgs)
			r, err := LookupAcl(ctx, &args, opts...)
			var s LookupAclResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAclResultOutput)
}

// A collection of arguments for invoking getAcl.
type LookupAclOutputArgs struct {
	// Name of the ACL.
	Name pulumi.StringInput `pulumi:"name"`
	// Map of tags assigned to the ACL.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupAclOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAclArgs)(nil)).Elem()
}

// A collection of values returned by getAcl.
type LookupAclResultOutput struct{ *pulumi.OutputState }

func (LookupAclResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAclResult)(nil)).Elem()
}

func (o LookupAclResultOutput) ToLookupAclResultOutput() LookupAclResultOutput {
	return o
}

func (o LookupAclResultOutput) ToLookupAclResultOutputWithContext(ctx context.Context) LookupAclResultOutput {
	return o
}

// ARN of the ACL.
func (o LookupAclResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAclResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclResult) string { return v.Id }).(pulumi.StringOutput)
}

// The minimum engine version supported by the ACL.
func (o LookupAclResultOutput) MinimumEngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclResult) string { return v.MinimumEngineVersion }).(pulumi.StringOutput)
}

func (o LookupAclResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclResult) string { return v.Name }).(pulumi.StringOutput)
}

// Map of tags assigned to the ACL.
func (o LookupAclResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAclResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Set of MemoryDB user names included in this ACL.
func (o LookupAclResultOutput) UserNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAclResult) []string { return v.UserNames }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAclResultOutput{})
}
