// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package memorydb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Cluster struct {
	pulumi.CustomResourceState

	AclName                 pulumi.StringOutput               `pulumi:"aclName"`
	Arn                     pulumi.StringOutput               `pulumi:"arn"`
	AutoMinorVersionUpgrade pulumi.BoolPtrOutput              `pulumi:"autoMinorVersionUpgrade"`
	ClusterEndpoints        ClusterClusterEndpointArrayOutput `pulumi:"clusterEndpoints"`
	DataTiering             pulumi.BoolPtrOutput              `pulumi:"dataTiering"`
	Description             pulumi.StringPtrOutput            `pulumi:"description"`
	EnginePatchVersion      pulumi.StringOutput               `pulumi:"enginePatchVersion"`
	EngineVersion           pulumi.StringOutput               `pulumi:"engineVersion"`
	FinalSnapshotName       pulumi.StringPtrOutput            `pulumi:"finalSnapshotName"`
	KmsKeyArn               pulumi.StringPtrOutput            `pulumi:"kmsKeyArn"`
	MaintenanceWindow       pulumi.StringOutput               `pulumi:"maintenanceWindow"`
	Name                    pulumi.StringOutput               `pulumi:"name"`
	NamePrefix              pulumi.StringOutput               `pulumi:"namePrefix"`
	NodeType                pulumi.StringOutput               `pulumi:"nodeType"`
	NumReplicasPerShard     pulumi.IntPtrOutput               `pulumi:"numReplicasPerShard"`
	NumShards               pulumi.IntPtrOutput               `pulumi:"numShards"`
	ParameterGroupName      pulumi.StringOutput               `pulumi:"parameterGroupName"`
	Port                    pulumi.IntOutput                  `pulumi:"port"`
	SecurityGroupIds        pulumi.StringArrayOutput          `pulumi:"securityGroupIds"`
	Shards                  ClusterShardArrayOutput           `pulumi:"shards"`
	SnapshotArns            pulumi.StringArrayOutput          `pulumi:"snapshotArns"`
	SnapshotName            pulumi.StringPtrOutput            `pulumi:"snapshotName"`
	SnapshotRetentionLimit  pulumi.IntOutput                  `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow          pulumi.StringOutput               `pulumi:"snapshotWindow"`
	SnsTopicArn             pulumi.StringPtrOutput            `pulumi:"snsTopicArn"`
	SubnetGroupName         pulumi.StringOutput               `pulumi:"subnetGroupName"`
	Tags                    pulumi.StringMapOutput            `pulumi:"tags"`
	TagsAll                 pulumi.StringMapOutput            `pulumi:"tagsAll"`
	TlsEnabled              pulumi.BoolPtrOutput              `pulumi:"tlsEnabled"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AclName == nil {
		return nil, errors.New("invalid value for required argument 'AclName'")
	}
	if args.NodeType == nil {
		return nil, errors.New("invalid value for required argument 'NodeType'")
	}
	var resource Cluster
	err := ctx.RegisterResource("aws:memorydb/cluster:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("aws:memorydb/cluster:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
	AclName                 *string                  `pulumi:"aclName"`
	Arn                     *string                  `pulumi:"arn"`
	AutoMinorVersionUpgrade *bool                    `pulumi:"autoMinorVersionUpgrade"`
	ClusterEndpoints        []ClusterClusterEndpoint `pulumi:"clusterEndpoints"`
	DataTiering             *bool                    `pulumi:"dataTiering"`
	Description             *string                  `pulumi:"description"`
	EnginePatchVersion      *string                  `pulumi:"enginePatchVersion"`
	EngineVersion           *string                  `pulumi:"engineVersion"`
	FinalSnapshotName       *string                  `pulumi:"finalSnapshotName"`
	KmsKeyArn               *string                  `pulumi:"kmsKeyArn"`
	MaintenanceWindow       *string                  `pulumi:"maintenanceWindow"`
	Name                    *string                  `pulumi:"name"`
	NamePrefix              *string                  `pulumi:"namePrefix"`
	NodeType                *string                  `pulumi:"nodeType"`
	NumReplicasPerShard     *int                     `pulumi:"numReplicasPerShard"`
	NumShards               *int                     `pulumi:"numShards"`
	ParameterGroupName      *string                  `pulumi:"parameterGroupName"`
	Port                    *int                     `pulumi:"port"`
	SecurityGroupIds        []string                 `pulumi:"securityGroupIds"`
	Shards                  []ClusterShard           `pulumi:"shards"`
	SnapshotArns            []string                 `pulumi:"snapshotArns"`
	SnapshotName            *string                  `pulumi:"snapshotName"`
	SnapshotRetentionLimit  *int                     `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow          *string                  `pulumi:"snapshotWindow"`
	SnsTopicArn             *string                  `pulumi:"snsTopicArn"`
	SubnetGroupName         *string                  `pulumi:"subnetGroupName"`
	Tags                    map[string]string        `pulumi:"tags"`
	TagsAll                 map[string]string        `pulumi:"tagsAll"`
	TlsEnabled              *bool                    `pulumi:"tlsEnabled"`
}

type ClusterState struct {
	AclName                 pulumi.StringPtrInput
	Arn                     pulumi.StringPtrInput
	AutoMinorVersionUpgrade pulumi.BoolPtrInput
	ClusterEndpoints        ClusterClusterEndpointArrayInput
	DataTiering             pulumi.BoolPtrInput
	Description             pulumi.StringPtrInput
	EnginePatchVersion      pulumi.StringPtrInput
	EngineVersion           pulumi.StringPtrInput
	FinalSnapshotName       pulumi.StringPtrInput
	KmsKeyArn               pulumi.StringPtrInput
	MaintenanceWindow       pulumi.StringPtrInput
	Name                    pulumi.StringPtrInput
	NamePrefix              pulumi.StringPtrInput
	NodeType                pulumi.StringPtrInput
	NumReplicasPerShard     pulumi.IntPtrInput
	NumShards               pulumi.IntPtrInput
	ParameterGroupName      pulumi.StringPtrInput
	Port                    pulumi.IntPtrInput
	SecurityGroupIds        pulumi.StringArrayInput
	Shards                  ClusterShardArrayInput
	SnapshotArns            pulumi.StringArrayInput
	SnapshotName            pulumi.StringPtrInput
	SnapshotRetentionLimit  pulumi.IntPtrInput
	SnapshotWindow          pulumi.StringPtrInput
	SnsTopicArn             pulumi.StringPtrInput
	SubnetGroupName         pulumi.StringPtrInput
	Tags                    pulumi.StringMapInput
	TagsAll                 pulumi.StringMapInput
	TlsEnabled              pulumi.BoolPtrInput
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	AclName                 string            `pulumi:"aclName"`
	AutoMinorVersionUpgrade *bool             `pulumi:"autoMinorVersionUpgrade"`
	DataTiering             *bool             `pulumi:"dataTiering"`
	Description             *string           `pulumi:"description"`
	EngineVersion           *string           `pulumi:"engineVersion"`
	FinalSnapshotName       *string           `pulumi:"finalSnapshotName"`
	KmsKeyArn               *string           `pulumi:"kmsKeyArn"`
	MaintenanceWindow       *string           `pulumi:"maintenanceWindow"`
	Name                    *string           `pulumi:"name"`
	NamePrefix              *string           `pulumi:"namePrefix"`
	NodeType                string            `pulumi:"nodeType"`
	NumReplicasPerShard     *int              `pulumi:"numReplicasPerShard"`
	NumShards               *int              `pulumi:"numShards"`
	ParameterGroupName      *string           `pulumi:"parameterGroupName"`
	Port                    *int              `pulumi:"port"`
	SecurityGroupIds        []string          `pulumi:"securityGroupIds"`
	SnapshotArns            []string          `pulumi:"snapshotArns"`
	SnapshotName            *string           `pulumi:"snapshotName"`
	SnapshotRetentionLimit  *int              `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow          *string           `pulumi:"snapshotWindow"`
	SnsTopicArn             *string           `pulumi:"snsTopicArn"`
	SubnetGroupName         *string           `pulumi:"subnetGroupName"`
	Tags                    map[string]string `pulumi:"tags"`
	TlsEnabled              *bool             `pulumi:"tlsEnabled"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	AclName                 pulumi.StringInput
	AutoMinorVersionUpgrade pulumi.BoolPtrInput
	DataTiering             pulumi.BoolPtrInput
	Description             pulumi.StringPtrInput
	EngineVersion           pulumi.StringPtrInput
	FinalSnapshotName       pulumi.StringPtrInput
	KmsKeyArn               pulumi.StringPtrInput
	MaintenanceWindow       pulumi.StringPtrInput
	Name                    pulumi.StringPtrInput
	NamePrefix              pulumi.StringPtrInput
	NodeType                pulumi.StringInput
	NumReplicasPerShard     pulumi.IntPtrInput
	NumShards               pulumi.IntPtrInput
	ParameterGroupName      pulumi.StringPtrInput
	Port                    pulumi.IntPtrInput
	SecurityGroupIds        pulumi.StringArrayInput
	SnapshotArns            pulumi.StringArrayInput
	SnapshotName            pulumi.StringPtrInput
	SnapshotRetentionLimit  pulumi.IntPtrInput
	SnapshotWindow          pulumi.StringPtrInput
	SnsTopicArn             pulumi.StringPtrInput
	SubnetGroupName         pulumi.StringPtrInput
	Tags                    pulumi.StringMapInput
	TlsEnabled              pulumi.BoolPtrInput
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}

type ClusterInput interface {
	pulumi.Input

	ToClusterOutput() ClusterOutput
	ToClusterOutputWithContext(ctx context.Context) ClusterOutput
}

func (*Cluster) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (i *Cluster) ToClusterOutput() ClusterOutput {
	return i.ToClusterOutputWithContext(context.Background())
}

func (i *Cluster) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutput)
}

// ClusterArrayInput is an input type that accepts ClusterArray and ClusterArrayOutput values.
// You can construct a concrete instance of `ClusterArrayInput` via:
//
//	ClusterArray{ ClusterArgs{...} }
type ClusterArrayInput interface {
	pulumi.Input

	ToClusterArrayOutput() ClusterArrayOutput
	ToClusterArrayOutputWithContext(context.Context) ClusterArrayOutput
}

type ClusterArray []ClusterInput

func (ClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (i ClusterArray) ToClusterArrayOutput() ClusterArrayOutput {
	return i.ToClusterArrayOutputWithContext(context.Background())
}

func (i ClusterArray) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterArrayOutput)
}

// ClusterMapInput is an input type that accepts ClusterMap and ClusterMapOutput values.
// You can construct a concrete instance of `ClusterMapInput` via:
//
//	ClusterMap{ "key": ClusterArgs{...} }
type ClusterMapInput interface {
	pulumi.Input

	ToClusterMapOutput() ClusterMapOutput
	ToClusterMapOutputWithContext(context.Context) ClusterMapOutput
}

type ClusterMap map[string]ClusterInput

func (ClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (i ClusterMap) ToClusterMapOutput() ClusterMapOutput {
	return i.ToClusterMapOutputWithContext(context.Background())
}

func (i ClusterMap) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMapOutput)
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

func (o ClusterOutput) AclName() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.AclName }).(pulumi.StringOutput)
}

func (o ClusterOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ClusterOutput) AutoMinorVersionUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.AutoMinorVersionUpgrade }).(pulumi.BoolPtrOutput)
}

func (o ClusterOutput) ClusterEndpoints() ClusterClusterEndpointArrayOutput {
	return o.ApplyT(func(v *Cluster) ClusterClusterEndpointArrayOutput { return v.ClusterEndpoints }).(ClusterClusterEndpointArrayOutput)
}

func (o ClusterOutput) DataTiering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.DataTiering }).(pulumi.BoolPtrOutput)
}

func (o ClusterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) EnginePatchVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.EnginePatchVersion }).(pulumi.StringOutput)
}

func (o ClusterOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o ClusterOutput) FinalSnapshotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.FinalSnapshotName }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) MaintenanceWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.MaintenanceWindow }).(pulumi.StringOutput)
}

func (o ClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ClusterOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.NamePrefix }).(pulumi.StringOutput)
}

func (o ClusterOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.NodeType }).(pulumi.StringOutput)
}

func (o ClusterOutput) NumReplicasPerShard() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.NumReplicasPerShard }).(pulumi.IntPtrOutput)
}

func (o ClusterOutput) NumShards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.NumShards }).(pulumi.IntPtrOutput)
}

func (o ClusterOutput) ParameterGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ParameterGroupName }).(pulumi.StringOutput)
}

func (o ClusterOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

func (o ClusterOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o ClusterOutput) Shards() ClusterShardArrayOutput {
	return o.ApplyT(func(v *Cluster) ClusterShardArrayOutput { return v.Shards }).(ClusterShardArrayOutput)
}

func (o ClusterOutput) SnapshotArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.SnapshotArns }).(pulumi.StringArrayOutput)
}

func (o ClusterOutput) SnapshotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.SnapshotName }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) SnapshotRetentionLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntOutput { return v.SnapshotRetentionLimit }).(pulumi.IntOutput)
}

func (o ClusterOutput) SnapshotWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.SnapshotWindow }).(pulumi.StringOutput)
}

func (o ClusterOutput) SnsTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.SnsTopicArn }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) SubnetGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.SubnetGroupName }).(pulumi.StringOutput)
}

func (o ClusterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ClusterOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ClusterOutput) TlsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.TlsEnabled }).(pulumi.BoolPtrOutput)
}

type ClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (o ClusterArrayOutput) ToClusterArrayOutput() ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) Index(i pulumi.IntInput) ClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].([]*Cluster)[vs[1].(int)]
	}).(ClusterOutput)
}

type ClusterMapOutput struct{ *pulumi.OutputState }

func (ClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (o ClusterMapOutput) ToClusterMapOutput() ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) MapIndex(k pulumi.StringInput) ClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].(map[string]*Cluster)[vs[1].(string)]
	}).(ClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInput)(nil)).Elem(), &Cluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterArrayInput)(nil)).Elem(), ClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMapInput)(nil)).Elem(), ClusterMap{})
	pulumi.RegisterOutputType(ClusterOutput{})
	pulumi.RegisterOutputType(ClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterMapOutput{})
}
