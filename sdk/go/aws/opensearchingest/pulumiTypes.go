// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearchingest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type PipelineBufferOptions struct {
	// Whether persistent buffering should be enabled.
	PersistentBufferEnabled bool `pulumi:"persistentBufferEnabled"`
}

// PipelineBufferOptionsInput is an input type that accepts PipelineBufferOptionsArgs and PipelineBufferOptionsOutput values.
// You can construct a concrete instance of `PipelineBufferOptionsInput` via:
//
//	PipelineBufferOptionsArgs{...}
type PipelineBufferOptionsInput interface {
	pulumi.Input

	ToPipelineBufferOptionsOutput() PipelineBufferOptionsOutput
	ToPipelineBufferOptionsOutputWithContext(context.Context) PipelineBufferOptionsOutput
}

type PipelineBufferOptionsArgs struct {
	// Whether persistent buffering should be enabled.
	PersistentBufferEnabled pulumi.BoolInput `pulumi:"persistentBufferEnabled"`
}

func (PipelineBufferOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineBufferOptions)(nil)).Elem()
}

func (i PipelineBufferOptionsArgs) ToPipelineBufferOptionsOutput() PipelineBufferOptionsOutput {
	return i.ToPipelineBufferOptionsOutputWithContext(context.Background())
}

func (i PipelineBufferOptionsArgs) ToPipelineBufferOptionsOutputWithContext(ctx context.Context) PipelineBufferOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineBufferOptionsOutput)
}

func (i PipelineBufferOptionsArgs) ToPipelineBufferOptionsPtrOutput() PipelineBufferOptionsPtrOutput {
	return i.ToPipelineBufferOptionsPtrOutputWithContext(context.Background())
}

func (i PipelineBufferOptionsArgs) ToPipelineBufferOptionsPtrOutputWithContext(ctx context.Context) PipelineBufferOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineBufferOptionsOutput).ToPipelineBufferOptionsPtrOutputWithContext(ctx)
}

// PipelineBufferOptionsPtrInput is an input type that accepts PipelineBufferOptionsArgs, PipelineBufferOptionsPtr and PipelineBufferOptionsPtrOutput values.
// You can construct a concrete instance of `PipelineBufferOptionsPtrInput` via:
//
//	        PipelineBufferOptionsArgs{...}
//
//	or:
//
//	        nil
type PipelineBufferOptionsPtrInput interface {
	pulumi.Input

	ToPipelineBufferOptionsPtrOutput() PipelineBufferOptionsPtrOutput
	ToPipelineBufferOptionsPtrOutputWithContext(context.Context) PipelineBufferOptionsPtrOutput
}

type pipelineBufferOptionsPtrType PipelineBufferOptionsArgs

func PipelineBufferOptionsPtr(v *PipelineBufferOptionsArgs) PipelineBufferOptionsPtrInput {
	return (*pipelineBufferOptionsPtrType)(v)
}

func (*pipelineBufferOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineBufferOptions)(nil)).Elem()
}

func (i *pipelineBufferOptionsPtrType) ToPipelineBufferOptionsPtrOutput() PipelineBufferOptionsPtrOutput {
	return i.ToPipelineBufferOptionsPtrOutputWithContext(context.Background())
}

func (i *pipelineBufferOptionsPtrType) ToPipelineBufferOptionsPtrOutputWithContext(ctx context.Context) PipelineBufferOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineBufferOptionsPtrOutput)
}

type PipelineBufferOptionsOutput struct{ *pulumi.OutputState }

func (PipelineBufferOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineBufferOptions)(nil)).Elem()
}

func (o PipelineBufferOptionsOutput) ToPipelineBufferOptionsOutput() PipelineBufferOptionsOutput {
	return o
}

func (o PipelineBufferOptionsOutput) ToPipelineBufferOptionsOutputWithContext(ctx context.Context) PipelineBufferOptionsOutput {
	return o
}

func (o PipelineBufferOptionsOutput) ToPipelineBufferOptionsPtrOutput() PipelineBufferOptionsPtrOutput {
	return o.ToPipelineBufferOptionsPtrOutputWithContext(context.Background())
}

func (o PipelineBufferOptionsOutput) ToPipelineBufferOptionsPtrOutputWithContext(ctx context.Context) PipelineBufferOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineBufferOptions) *PipelineBufferOptions {
		return &v
	}).(PipelineBufferOptionsPtrOutput)
}

// Whether persistent buffering should be enabled.
func (o PipelineBufferOptionsOutput) PersistentBufferEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PipelineBufferOptions) bool { return v.PersistentBufferEnabled }).(pulumi.BoolOutput)
}

type PipelineBufferOptionsPtrOutput struct{ *pulumi.OutputState }

func (PipelineBufferOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineBufferOptions)(nil)).Elem()
}

func (o PipelineBufferOptionsPtrOutput) ToPipelineBufferOptionsPtrOutput() PipelineBufferOptionsPtrOutput {
	return o
}

func (o PipelineBufferOptionsPtrOutput) ToPipelineBufferOptionsPtrOutputWithContext(ctx context.Context) PipelineBufferOptionsPtrOutput {
	return o
}

func (o PipelineBufferOptionsPtrOutput) Elem() PipelineBufferOptionsOutput {
	return o.ApplyT(func(v *PipelineBufferOptions) PipelineBufferOptions {
		if v != nil {
			return *v
		}
		var ret PipelineBufferOptions
		return ret
	}).(PipelineBufferOptionsOutput)
}

// Whether persistent buffering should be enabled.
func (o PipelineBufferOptionsPtrOutput) PersistentBufferEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PipelineBufferOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.PersistentBufferEnabled
	}).(pulumi.BoolPtrOutput)
}

type PipelineEncryptionAtRestOptions struct {
	// The ARN of the KMS key used to encrypt data-at-rest in OpenSearch Ingestion. By default, data is encrypted using an AWS owned key.
	KmsKeyArn string `pulumi:"kmsKeyArn"`
}

// PipelineEncryptionAtRestOptionsInput is an input type that accepts PipelineEncryptionAtRestOptionsArgs and PipelineEncryptionAtRestOptionsOutput values.
// You can construct a concrete instance of `PipelineEncryptionAtRestOptionsInput` via:
//
//	PipelineEncryptionAtRestOptionsArgs{...}
type PipelineEncryptionAtRestOptionsInput interface {
	pulumi.Input

	ToPipelineEncryptionAtRestOptionsOutput() PipelineEncryptionAtRestOptionsOutput
	ToPipelineEncryptionAtRestOptionsOutputWithContext(context.Context) PipelineEncryptionAtRestOptionsOutput
}

type PipelineEncryptionAtRestOptionsArgs struct {
	// The ARN of the KMS key used to encrypt data-at-rest in OpenSearch Ingestion. By default, data is encrypted using an AWS owned key.
	KmsKeyArn pulumi.StringInput `pulumi:"kmsKeyArn"`
}

func (PipelineEncryptionAtRestOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineEncryptionAtRestOptions)(nil)).Elem()
}

func (i PipelineEncryptionAtRestOptionsArgs) ToPipelineEncryptionAtRestOptionsOutput() PipelineEncryptionAtRestOptionsOutput {
	return i.ToPipelineEncryptionAtRestOptionsOutputWithContext(context.Background())
}

func (i PipelineEncryptionAtRestOptionsArgs) ToPipelineEncryptionAtRestOptionsOutputWithContext(ctx context.Context) PipelineEncryptionAtRestOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineEncryptionAtRestOptionsOutput)
}

func (i PipelineEncryptionAtRestOptionsArgs) ToPipelineEncryptionAtRestOptionsPtrOutput() PipelineEncryptionAtRestOptionsPtrOutput {
	return i.ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(context.Background())
}

func (i PipelineEncryptionAtRestOptionsArgs) ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) PipelineEncryptionAtRestOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineEncryptionAtRestOptionsOutput).ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(ctx)
}

// PipelineEncryptionAtRestOptionsPtrInput is an input type that accepts PipelineEncryptionAtRestOptionsArgs, PipelineEncryptionAtRestOptionsPtr and PipelineEncryptionAtRestOptionsPtrOutput values.
// You can construct a concrete instance of `PipelineEncryptionAtRestOptionsPtrInput` via:
//
//	        PipelineEncryptionAtRestOptionsArgs{...}
//
//	or:
//
//	        nil
type PipelineEncryptionAtRestOptionsPtrInput interface {
	pulumi.Input

	ToPipelineEncryptionAtRestOptionsPtrOutput() PipelineEncryptionAtRestOptionsPtrOutput
	ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(context.Context) PipelineEncryptionAtRestOptionsPtrOutput
}

type pipelineEncryptionAtRestOptionsPtrType PipelineEncryptionAtRestOptionsArgs

func PipelineEncryptionAtRestOptionsPtr(v *PipelineEncryptionAtRestOptionsArgs) PipelineEncryptionAtRestOptionsPtrInput {
	return (*pipelineEncryptionAtRestOptionsPtrType)(v)
}

func (*pipelineEncryptionAtRestOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineEncryptionAtRestOptions)(nil)).Elem()
}

func (i *pipelineEncryptionAtRestOptionsPtrType) ToPipelineEncryptionAtRestOptionsPtrOutput() PipelineEncryptionAtRestOptionsPtrOutput {
	return i.ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(context.Background())
}

func (i *pipelineEncryptionAtRestOptionsPtrType) ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) PipelineEncryptionAtRestOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineEncryptionAtRestOptionsPtrOutput)
}

type PipelineEncryptionAtRestOptionsOutput struct{ *pulumi.OutputState }

func (PipelineEncryptionAtRestOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineEncryptionAtRestOptions)(nil)).Elem()
}

func (o PipelineEncryptionAtRestOptionsOutput) ToPipelineEncryptionAtRestOptionsOutput() PipelineEncryptionAtRestOptionsOutput {
	return o
}

func (o PipelineEncryptionAtRestOptionsOutput) ToPipelineEncryptionAtRestOptionsOutputWithContext(ctx context.Context) PipelineEncryptionAtRestOptionsOutput {
	return o
}

func (o PipelineEncryptionAtRestOptionsOutput) ToPipelineEncryptionAtRestOptionsPtrOutput() PipelineEncryptionAtRestOptionsPtrOutput {
	return o.ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(context.Background())
}

func (o PipelineEncryptionAtRestOptionsOutput) ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) PipelineEncryptionAtRestOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineEncryptionAtRestOptions) *PipelineEncryptionAtRestOptions {
		return &v
	}).(PipelineEncryptionAtRestOptionsPtrOutput)
}

// The ARN of the KMS key used to encrypt data-at-rest in OpenSearch Ingestion. By default, data is encrypted using an AWS owned key.
func (o PipelineEncryptionAtRestOptionsOutput) KmsKeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineEncryptionAtRestOptions) string { return v.KmsKeyArn }).(pulumi.StringOutput)
}

type PipelineEncryptionAtRestOptionsPtrOutput struct{ *pulumi.OutputState }

func (PipelineEncryptionAtRestOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineEncryptionAtRestOptions)(nil)).Elem()
}

func (o PipelineEncryptionAtRestOptionsPtrOutput) ToPipelineEncryptionAtRestOptionsPtrOutput() PipelineEncryptionAtRestOptionsPtrOutput {
	return o
}

func (o PipelineEncryptionAtRestOptionsPtrOutput) ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) PipelineEncryptionAtRestOptionsPtrOutput {
	return o
}

func (o PipelineEncryptionAtRestOptionsPtrOutput) Elem() PipelineEncryptionAtRestOptionsOutput {
	return o.ApplyT(func(v *PipelineEncryptionAtRestOptions) PipelineEncryptionAtRestOptions {
		if v != nil {
			return *v
		}
		var ret PipelineEncryptionAtRestOptions
		return ret
	}).(PipelineEncryptionAtRestOptionsOutput)
}

// The ARN of the KMS key used to encrypt data-at-rest in OpenSearch Ingestion. By default, data is encrypted using an AWS owned key.
func (o PipelineEncryptionAtRestOptionsPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineEncryptionAtRestOptions) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

type PipelineLogPublishingOptions struct {
	// The destination for OpenSearch Ingestion logs sent to Amazon CloudWatch Logs. This parameter is required if IsLoggingEnabled is set to true. See `cloudwatchLogDestination` below.
	CloudwatchLogDestination *PipelineLogPublishingOptionsCloudwatchLogDestination `pulumi:"cloudwatchLogDestination"`
	// Whether logs should be published.
	IsLoggingEnabled *bool `pulumi:"isLoggingEnabled"`
}

// PipelineLogPublishingOptionsInput is an input type that accepts PipelineLogPublishingOptionsArgs and PipelineLogPublishingOptionsOutput values.
// You can construct a concrete instance of `PipelineLogPublishingOptionsInput` via:
//
//	PipelineLogPublishingOptionsArgs{...}
type PipelineLogPublishingOptionsInput interface {
	pulumi.Input

	ToPipelineLogPublishingOptionsOutput() PipelineLogPublishingOptionsOutput
	ToPipelineLogPublishingOptionsOutputWithContext(context.Context) PipelineLogPublishingOptionsOutput
}

type PipelineLogPublishingOptionsArgs struct {
	// The destination for OpenSearch Ingestion logs sent to Amazon CloudWatch Logs. This parameter is required if IsLoggingEnabled is set to true. See `cloudwatchLogDestination` below.
	CloudwatchLogDestination PipelineLogPublishingOptionsCloudwatchLogDestinationPtrInput `pulumi:"cloudwatchLogDestination"`
	// Whether logs should be published.
	IsLoggingEnabled pulumi.BoolPtrInput `pulumi:"isLoggingEnabled"`
}

func (PipelineLogPublishingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLogPublishingOptions)(nil)).Elem()
}

func (i PipelineLogPublishingOptionsArgs) ToPipelineLogPublishingOptionsOutput() PipelineLogPublishingOptionsOutput {
	return i.ToPipelineLogPublishingOptionsOutputWithContext(context.Background())
}

func (i PipelineLogPublishingOptionsArgs) ToPipelineLogPublishingOptionsOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogPublishingOptionsOutput)
}

func (i PipelineLogPublishingOptionsArgs) ToPipelineLogPublishingOptionsPtrOutput() PipelineLogPublishingOptionsPtrOutput {
	return i.ToPipelineLogPublishingOptionsPtrOutputWithContext(context.Background())
}

func (i PipelineLogPublishingOptionsArgs) ToPipelineLogPublishingOptionsPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogPublishingOptionsOutput).ToPipelineLogPublishingOptionsPtrOutputWithContext(ctx)
}

// PipelineLogPublishingOptionsPtrInput is an input type that accepts PipelineLogPublishingOptionsArgs, PipelineLogPublishingOptionsPtr and PipelineLogPublishingOptionsPtrOutput values.
// You can construct a concrete instance of `PipelineLogPublishingOptionsPtrInput` via:
//
//	        PipelineLogPublishingOptionsArgs{...}
//
//	or:
//
//	        nil
type PipelineLogPublishingOptionsPtrInput interface {
	pulumi.Input

	ToPipelineLogPublishingOptionsPtrOutput() PipelineLogPublishingOptionsPtrOutput
	ToPipelineLogPublishingOptionsPtrOutputWithContext(context.Context) PipelineLogPublishingOptionsPtrOutput
}

type pipelineLogPublishingOptionsPtrType PipelineLogPublishingOptionsArgs

func PipelineLogPublishingOptionsPtr(v *PipelineLogPublishingOptionsArgs) PipelineLogPublishingOptionsPtrInput {
	return (*pipelineLogPublishingOptionsPtrType)(v)
}

func (*pipelineLogPublishingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineLogPublishingOptions)(nil)).Elem()
}

func (i *pipelineLogPublishingOptionsPtrType) ToPipelineLogPublishingOptionsPtrOutput() PipelineLogPublishingOptionsPtrOutput {
	return i.ToPipelineLogPublishingOptionsPtrOutputWithContext(context.Background())
}

func (i *pipelineLogPublishingOptionsPtrType) ToPipelineLogPublishingOptionsPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogPublishingOptionsPtrOutput)
}

type PipelineLogPublishingOptionsOutput struct{ *pulumi.OutputState }

func (PipelineLogPublishingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLogPublishingOptions)(nil)).Elem()
}

func (o PipelineLogPublishingOptionsOutput) ToPipelineLogPublishingOptionsOutput() PipelineLogPublishingOptionsOutput {
	return o
}

func (o PipelineLogPublishingOptionsOutput) ToPipelineLogPublishingOptionsOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsOutput {
	return o
}

func (o PipelineLogPublishingOptionsOutput) ToPipelineLogPublishingOptionsPtrOutput() PipelineLogPublishingOptionsPtrOutput {
	return o.ToPipelineLogPublishingOptionsPtrOutputWithContext(context.Background())
}

func (o PipelineLogPublishingOptionsOutput) ToPipelineLogPublishingOptionsPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineLogPublishingOptions) *PipelineLogPublishingOptions {
		return &v
	}).(PipelineLogPublishingOptionsPtrOutput)
}

// The destination for OpenSearch Ingestion logs sent to Amazon CloudWatch Logs. This parameter is required if IsLoggingEnabled is set to true. See `cloudwatchLogDestination` below.
func (o PipelineLogPublishingOptionsOutput) CloudwatchLogDestination() PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput {
	return o.ApplyT(func(v PipelineLogPublishingOptions) *PipelineLogPublishingOptionsCloudwatchLogDestination {
		return v.CloudwatchLogDestination
	}).(PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput)
}

// Whether logs should be published.
func (o PipelineLogPublishingOptionsOutput) IsLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PipelineLogPublishingOptions) *bool { return v.IsLoggingEnabled }).(pulumi.BoolPtrOutput)
}

type PipelineLogPublishingOptionsPtrOutput struct{ *pulumi.OutputState }

func (PipelineLogPublishingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineLogPublishingOptions)(nil)).Elem()
}

func (o PipelineLogPublishingOptionsPtrOutput) ToPipelineLogPublishingOptionsPtrOutput() PipelineLogPublishingOptionsPtrOutput {
	return o
}

func (o PipelineLogPublishingOptionsPtrOutput) ToPipelineLogPublishingOptionsPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsPtrOutput {
	return o
}

func (o PipelineLogPublishingOptionsPtrOutput) Elem() PipelineLogPublishingOptionsOutput {
	return o.ApplyT(func(v *PipelineLogPublishingOptions) PipelineLogPublishingOptions {
		if v != nil {
			return *v
		}
		var ret PipelineLogPublishingOptions
		return ret
	}).(PipelineLogPublishingOptionsOutput)
}

// The destination for OpenSearch Ingestion logs sent to Amazon CloudWatch Logs. This parameter is required if IsLoggingEnabled is set to true. See `cloudwatchLogDestination` below.
func (o PipelineLogPublishingOptionsPtrOutput) CloudwatchLogDestination() PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput {
	return o.ApplyT(func(v *PipelineLogPublishingOptions) *PipelineLogPublishingOptionsCloudwatchLogDestination {
		if v == nil {
			return nil
		}
		return v.CloudwatchLogDestination
	}).(PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput)
}

// Whether logs should be published.
func (o PipelineLogPublishingOptionsPtrOutput) IsLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PipelineLogPublishingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

type PipelineLogPublishingOptionsCloudwatchLogDestination struct {
	// The name of the CloudWatch Logs group to send pipeline logs to. You can specify an existing log group or create a new one. For example, /aws/OpenSearchService/IngestionService/my-pipeline.
	LogGroup string `pulumi:"logGroup"`
}

// PipelineLogPublishingOptionsCloudwatchLogDestinationInput is an input type that accepts PipelineLogPublishingOptionsCloudwatchLogDestinationArgs and PipelineLogPublishingOptionsCloudwatchLogDestinationOutput values.
// You can construct a concrete instance of `PipelineLogPublishingOptionsCloudwatchLogDestinationInput` via:
//
//	PipelineLogPublishingOptionsCloudwatchLogDestinationArgs{...}
type PipelineLogPublishingOptionsCloudwatchLogDestinationInput interface {
	pulumi.Input

	ToPipelineLogPublishingOptionsCloudwatchLogDestinationOutput() PipelineLogPublishingOptionsCloudwatchLogDestinationOutput
	ToPipelineLogPublishingOptionsCloudwatchLogDestinationOutputWithContext(context.Context) PipelineLogPublishingOptionsCloudwatchLogDestinationOutput
}

type PipelineLogPublishingOptionsCloudwatchLogDestinationArgs struct {
	// The name of the CloudWatch Logs group to send pipeline logs to. You can specify an existing log group or create a new one. For example, /aws/OpenSearchService/IngestionService/my-pipeline.
	LogGroup pulumi.StringInput `pulumi:"logGroup"`
}

func (PipelineLogPublishingOptionsCloudwatchLogDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLogPublishingOptionsCloudwatchLogDestination)(nil)).Elem()
}

func (i PipelineLogPublishingOptionsCloudwatchLogDestinationArgs) ToPipelineLogPublishingOptionsCloudwatchLogDestinationOutput() PipelineLogPublishingOptionsCloudwatchLogDestinationOutput {
	return i.ToPipelineLogPublishingOptionsCloudwatchLogDestinationOutputWithContext(context.Background())
}

func (i PipelineLogPublishingOptionsCloudwatchLogDestinationArgs) ToPipelineLogPublishingOptionsCloudwatchLogDestinationOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsCloudwatchLogDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogPublishingOptionsCloudwatchLogDestinationOutput)
}

func (i PipelineLogPublishingOptionsCloudwatchLogDestinationArgs) ToPipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput() PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput {
	return i.ToPipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutputWithContext(context.Background())
}

func (i PipelineLogPublishingOptionsCloudwatchLogDestinationArgs) ToPipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogPublishingOptionsCloudwatchLogDestinationOutput).ToPipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutputWithContext(ctx)
}

// PipelineLogPublishingOptionsCloudwatchLogDestinationPtrInput is an input type that accepts PipelineLogPublishingOptionsCloudwatchLogDestinationArgs, PipelineLogPublishingOptionsCloudwatchLogDestinationPtr and PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput values.
// You can construct a concrete instance of `PipelineLogPublishingOptionsCloudwatchLogDestinationPtrInput` via:
//
//	        PipelineLogPublishingOptionsCloudwatchLogDestinationArgs{...}
//
//	or:
//
//	        nil
type PipelineLogPublishingOptionsCloudwatchLogDestinationPtrInput interface {
	pulumi.Input

	ToPipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput() PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput
	ToPipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutputWithContext(context.Context) PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput
}

type pipelineLogPublishingOptionsCloudwatchLogDestinationPtrType PipelineLogPublishingOptionsCloudwatchLogDestinationArgs

func PipelineLogPublishingOptionsCloudwatchLogDestinationPtr(v *PipelineLogPublishingOptionsCloudwatchLogDestinationArgs) PipelineLogPublishingOptionsCloudwatchLogDestinationPtrInput {
	return (*pipelineLogPublishingOptionsCloudwatchLogDestinationPtrType)(v)
}

func (*pipelineLogPublishingOptionsCloudwatchLogDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineLogPublishingOptionsCloudwatchLogDestination)(nil)).Elem()
}

func (i *pipelineLogPublishingOptionsCloudwatchLogDestinationPtrType) ToPipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput() PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput {
	return i.ToPipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutputWithContext(context.Background())
}

func (i *pipelineLogPublishingOptionsCloudwatchLogDestinationPtrType) ToPipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput)
}

type PipelineLogPublishingOptionsCloudwatchLogDestinationOutput struct{ *pulumi.OutputState }

func (PipelineLogPublishingOptionsCloudwatchLogDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLogPublishingOptionsCloudwatchLogDestination)(nil)).Elem()
}

func (o PipelineLogPublishingOptionsCloudwatchLogDestinationOutput) ToPipelineLogPublishingOptionsCloudwatchLogDestinationOutput() PipelineLogPublishingOptionsCloudwatchLogDestinationOutput {
	return o
}

func (o PipelineLogPublishingOptionsCloudwatchLogDestinationOutput) ToPipelineLogPublishingOptionsCloudwatchLogDestinationOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsCloudwatchLogDestinationOutput {
	return o
}

func (o PipelineLogPublishingOptionsCloudwatchLogDestinationOutput) ToPipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput() PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput {
	return o.ToPipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutputWithContext(context.Background())
}

func (o PipelineLogPublishingOptionsCloudwatchLogDestinationOutput) ToPipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineLogPublishingOptionsCloudwatchLogDestination) *PipelineLogPublishingOptionsCloudwatchLogDestination {
		return &v
	}).(PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput)
}

// The name of the CloudWatch Logs group to send pipeline logs to. You can specify an existing log group or create a new one. For example, /aws/OpenSearchService/IngestionService/my-pipeline.
func (o PipelineLogPublishingOptionsCloudwatchLogDestinationOutput) LogGroup() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineLogPublishingOptionsCloudwatchLogDestination) string { return v.LogGroup }).(pulumi.StringOutput)
}

type PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput struct{ *pulumi.OutputState }

func (PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineLogPublishingOptionsCloudwatchLogDestination)(nil)).Elem()
}

func (o PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput) ToPipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput() PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput {
	return o
}

func (o PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput) ToPipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput {
	return o
}

func (o PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput) Elem() PipelineLogPublishingOptionsCloudwatchLogDestinationOutput {
	return o.ApplyT(func(v *PipelineLogPublishingOptionsCloudwatchLogDestination) PipelineLogPublishingOptionsCloudwatchLogDestination {
		if v != nil {
			return *v
		}
		var ret PipelineLogPublishingOptionsCloudwatchLogDestination
		return ret
	}).(PipelineLogPublishingOptionsCloudwatchLogDestinationOutput)
}

// The name of the CloudWatch Logs group to send pipeline logs to. You can specify an existing log group or create a new one. For example, /aws/OpenSearchService/IngestionService/my-pipeline.
func (o PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineLogPublishingOptionsCloudwatchLogDestination) *string {
		if v == nil {
			return nil
		}
		return &v.LogGroup
	}).(pulumi.StringPtrOutput)
}

type PipelineTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// PipelineTimeoutsInput is an input type that accepts PipelineTimeoutsArgs and PipelineTimeoutsOutput values.
// You can construct a concrete instance of `PipelineTimeoutsInput` via:
//
//	PipelineTimeoutsArgs{...}
type PipelineTimeoutsInput interface {
	pulumi.Input

	ToPipelineTimeoutsOutput() PipelineTimeoutsOutput
	ToPipelineTimeoutsOutputWithContext(context.Context) PipelineTimeoutsOutput
}

type PipelineTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (PipelineTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTimeouts)(nil)).Elem()
}

func (i PipelineTimeoutsArgs) ToPipelineTimeoutsOutput() PipelineTimeoutsOutput {
	return i.ToPipelineTimeoutsOutputWithContext(context.Background())
}

func (i PipelineTimeoutsArgs) ToPipelineTimeoutsOutputWithContext(ctx context.Context) PipelineTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTimeoutsOutput)
}

func (i PipelineTimeoutsArgs) ToPipelineTimeoutsPtrOutput() PipelineTimeoutsPtrOutput {
	return i.ToPipelineTimeoutsPtrOutputWithContext(context.Background())
}

func (i PipelineTimeoutsArgs) ToPipelineTimeoutsPtrOutputWithContext(ctx context.Context) PipelineTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTimeoutsOutput).ToPipelineTimeoutsPtrOutputWithContext(ctx)
}

// PipelineTimeoutsPtrInput is an input type that accepts PipelineTimeoutsArgs, PipelineTimeoutsPtr and PipelineTimeoutsPtrOutput values.
// You can construct a concrete instance of `PipelineTimeoutsPtrInput` via:
//
//	        PipelineTimeoutsArgs{...}
//
//	or:
//
//	        nil
type PipelineTimeoutsPtrInput interface {
	pulumi.Input

	ToPipelineTimeoutsPtrOutput() PipelineTimeoutsPtrOutput
	ToPipelineTimeoutsPtrOutputWithContext(context.Context) PipelineTimeoutsPtrOutput
}

type pipelineTimeoutsPtrType PipelineTimeoutsArgs

func PipelineTimeoutsPtr(v *PipelineTimeoutsArgs) PipelineTimeoutsPtrInput {
	return (*pipelineTimeoutsPtrType)(v)
}

func (*pipelineTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineTimeouts)(nil)).Elem()
}

func (i *pipelineTimeoutsPtrType) ToPipelineTimeoutsPtrOutput() PipelineTimeoutsPtrOutput {
	return i.ToPipelineTimeoutsPtrOutputWithContext(context.Background())
}

func (i *pipelineTimeoutsPtrType) ToPipelineTimeoutsPtrOutputWithContext(ctx context.Context) PipelineTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTimeoutsPtrOutput)
}

type PipelineTimeoutsOutput struct{ *pulumi.OutputState }

func (PipelineTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTimeouts)(nil)).Elem()
}

func (o PipelineTimeoutsOutput) ToPipelineTimeoutsOutput() PipelineTimeoutsOutput {
	return o
}

func (o PipelineTimeoutsOutput) ToPipelineTimeoutsOutputWithContext(ctx context.Context) PipelineTimeoutsOutput {
	return o
}

func (o PipelineTimeoutsOutput) ToPipelineTimeoutsPtrOutput() PipelineTimeoutsPtrOutput {
	return o.ToPipelineTimeoutsPtrOutputWithContext(context.Background())
}

func (o PipelineTimeoutsOutput) ToPipelineTimeoutsPtrOutputWithContext(ctx context.Context) PipelineTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineTimeouts) *PipelineTimeouts {
		return &v
	}).(PipelineTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o PipelineTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o PipelineTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o PipelineTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type PipelineTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (PipelineTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineTimeouts)(nil)).Elem()
}

func (o PipelineTimeoutsPtrOutput) ToPipelineTimeoutsPtrOutput() PipelineTimeoutsPtrOutput {
	return o
}

func (o PipelineTimeoutsPtrOutput) ToPipelineTimeoutsPtrOutputWithContext(ctx context.Context) PipelineTimeoutsPtrOutput {
	return o
}

func (o PipelineTimeoutsPtrOutput) Elem() PipelineTimeoutsOutput {
	return o.ApplyT(func(v *PipelineTimeouts) PipelineTimeouts {
		if v != nil {
			return *v
		}
		var ret PipelineTimeouts
		return ret
	}).(PipelineTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o PipelineTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o PipelineTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o PipelineTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type PipelineVpcOptions struct {
	// A list of security groups associated with the VPC endpoint.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of subnet IDs associated with the VPC endpoint.
	SubnetIds []string `pulumi:"subnetIds"`
}

// PipelineVpcOptionsInput is an input type that accepts PipelineVpcOptionsArgs and PipelineVpcOptionsOutput values.
// You can construct a concrete instance of `PipelineVpcOptionsInput` via:
//
//	PipelineVpcOptionsArgs{...}
type PipelineVpcOptionsInput interface {
	pulumi.Input

	ToPipelineVpcOptionsOutput() PipelineVpcOptionsOutput
	ToPipelineVpcOptionsOutputWithContext(context.Context) PipelineVpcOptionsOutput
}

type PipelineVpcOptionsArgs struct {
	// A list of security groups associated with the VPC endpoint.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// A list of subnet IDs associated with the VPC endpoint.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (PipelineVpcOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineVpcOptions)(nil)).Elem()
}

func (i PipelineVpcOptionsArgs) ToPipelineVpcOptionsOutput() PipelineVpcOptionsOutput {
	return i.ToPipelineVpcOptionsOutputWithContext(context.Background())
}

func (i PipelineVpcOptionsArgs) ToPipelineVpcOptionsOutputWithContext(ctx context.Context) PipelineVpcOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineVpcOptionsOutput)
}

func (i PipelineVpcOptionsArgs) ToPipelineVpcOptionsPtrOutput() PipelineVpcOptionsPtrOutput {
	return i.ToPipelineVpcOptionsPtrOutputWithContext(context.Background())
}

func (i PipelineVpcOptionsArgs) ToPipelineVpcOptionsPtrOutputWithContext(ctx context.Context) PipelineVpcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineVpcOptionsOutput).ToPipelineVpcOptionsPtrOutputWithContext(ctx)
}

// PipelineVpcOptionsPtrInput is an input type that accepts PipelineVpcOptionsArgs, PipelineVpcOptionsPtr and PipelineVpcOptionsPtrOutput values.
// You can construct a concrete instance of `PipelineVpcOptionsPtrInput` via:
//
//	        PipelineVpcOptionsArgs{...}
//
//	or:
//
//	        nil
type PipelineVpcOptionsPtrInput interface {
	pulumi.Input

	ToPipelineVpcOptionsPtrOutput() PipelineVpcOptionsPtrOutput
	ToPipelineVpcOptionsPtrOutputWithContext(context.Context) PipelineVpcOptionsPtrOutput
}

type pipelineVpcOptionsPtrType PipelineVpcOptionsArgs

func PipelineVpcOptionsPtr(v *PipelineVpcOptionsArgs) PipelineVpcOptionsPtrInput {
	return (*pipelineVpcOptionsPtrType)(v)
}

func (*pipelineVpcOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineVpcOptions)(nil)).Elem()
}

func (i *pipelineVpcOptionsPtrType) ToPipelineVpcOptionsPtrOutput() PipelineVpcOptionsPtrOutput {
	return i.ToPipelineVpcOptionsPtrOutputWithContext(context.Background())
}

func (i *pipelineVpcOptionsPtrType) ToPipelineVpcOptionsPtrOutputWithContext(ctx context.Context) PipelineVpcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineVpcOptionsPtrOutput)
}

type PipelineVpcOptionsOutput struct{ *pulumi.OutputState }

func (PipelineVpcOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineVpcOptions)(nil)).Elem()
}

func (o PipelineVpcOptionsOutput) ToPipelineVpcOptionsOutput() PipelineVpcOptionsOutput {
	return o
}

func (o PipelineVpcOptionsOutput) ToPipelineVpcOptionsOutputWithContext(ctx context.Context) PipelineVpcOptionsOutput {
	return o
}

func (o PipelineVpcOptionsOutput) ToPipelineVpcOptionsPtrOutput() PipelineVpcOptionsPtrOutput {
	return o.ToPipelineVpcOptionsPtrOutputWithContext(context.Background())
}

func (o PipelineVpcOptionsOutput) ToPipelineVpcOptionsPtrOutputWithContext(ctx context.Context) PipelineVpcOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineVpcOptions) *PipelineVpcOptions {
		return &v
	}).(PipelineVpcOptionsPtrOutput)
}

// A list of security groups associated with the VPC endpoint.
func (o PipelineVpcOptionsOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineVpcOptions) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A list of subnet IDs associated with the VPC endpoint.
func (o PipelineVpcOptionsOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineVpcOptions) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type PipelineVpcOptionsPtrOutput struct{ *pulumi.OutputState }

func (PipelineVpcOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineVpcOptions)(nil)).Elem()
}

func (o PipelineVpcOptionsPtrOutput) ToPipelineVpcOptionsPtrOutput() PipelineVpcOptionsPtrOutput {
	return o
}

func (o PipelineVpcOptionsPtrOutput) ToPipelineVpcOptionsPtrOutputWithContext(ctx context.Context) PipelineVpcOptionsPtrOutput {
	return o
}

func (o PipelineVpcOptionsPtrOutput) Elem() PipelineVpcOptionsOutput {
	return o.ApplyT(func(v *PipelineVpcOptions) PipelineVpcOptions {
		if v != nil {
			return *v
		}
		var ret PipelineVpcOptions
		return ret
	}).(PipelineVpcOptionsOutput)
}

// A list of security groups associated with the VPC endpoint.
func (o PipelineVpcOptionsPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineVpcOptions) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// A list of subnet IDs associated with the VPC endpoint.
func (o PipelineVpcOptionsPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineVpcOptions) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineBufferOptionsInput)(nil)).Elem(), PipelineBufferOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineBufferOptionsPtrInput)(nil)).Elem(), PipelineBufferOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineEncryptionAtRestOptionsInput)(nil)).Elem(), PipelineEncryptionAtRestOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineEncryptionAtRestOptionsPtrInput)(nil)).Elem(), PipelineEncryptionAtRestOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLogPublishingOptionsInput)(nil)).Elem(), PipelineLogPublishingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLogPublishingOptionsPtrInput)(nil)).Elem(), PipelineLogPublishingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLogPublishingOptionsCloudwatchLogDestinationInput)(nil)).Elem(), PipelineLogPublishingOptionsCloudwatchLogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLogPublishingOptionsCloudwatchLogDestinationPtrInput)(nil)).Elem(), PipelineLogPublishingOptionsCloudwatchLogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTimeoutsInput)(nil)).Elem(), PipelineTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTimeoutsPtrInput)(nil)).Elem(), PipelineTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineVpcOptionsInput)(nil)).Elem(), PipelineVpcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineVpcOptionsPtrInput)(nil)).Elem(), PipelineVpcOptionsArgs{})
	pulumi.RegisterOutputType(PipelineBufferOptionsOutput{})
	pulumi.RegisterOutputType(PipelineBufferOptionsPtrOutput{})
	pulumi.RegisterOutputType(PipelineEncryptionAtRestOptionsOutput{})
	pulumi.RegisterOutputType(PipelineEncryptionAtRestOptionsPtrOutput{})
	pulumi.RegisterOutputType(PipelineLogPublishingOptionsOutput{})
	pulumi.RegisterOutputType(PipelineLogPublishingOptionsPtrOutput{})
	pulumi.RegisterOutputType(PipelineLogPublishingOptionsCloudwatchLogDestinationOutput{})
	pulumi.RegisterOutputType(PipelineLogPublishingOptionsCloudwatchLogDestinationPtrOutput{})
	pulumi.RegisterOutputType(PipelineTimeoutsOutput{})
	pulumi.RegisterOutputType(PipelineTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(PipelineVpcOptionsOutput{})
	pulumi.RegisterOutputType(PipelineVpcOptionsPtrOutput{})
}
