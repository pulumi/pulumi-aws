// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Pinpoint Baidu Channel resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/pinpoint"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		app, err := pinpoint.NewApp(ctx, "app", nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = pinpoint.NewBaiduChannel(ctx, "channel", &pinpoint.BaiduChannelArgs{
// 			ApplicationId: app.ApplicationId,
// 			ApiKey:        pulumi.String(""),
// 			SecretKey:     pulumi.String(""),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Pinpoint Baidu Channel can be imported using the `application-id`, e.g.
//
// ```sh
//  $ pulumi import aws:pinpoint/baiduChannel:BaiduChannel channel application-id
// ```
type BaiduChannel struct {
	pulumi.CustomResourceState

	// Platform credential API key from Baidu.
	ApiKey pulumi.StringOutput `pulumi:"apiKey"`
	// The application ID.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Specifies whether to enable the channel. Defaults to `true`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Platform credential Secret key from Baidu.
	SecretKey pulumi.StringOutput `pulumi:"secretKey"`
}

// NewBaiduChannel registers a new resource with the given unique name, arguments, and options.
func NewBaiduChannel(ctx *pulumi.Context,
	name string, args *BaiduChannelArgs, opts ...pulumi.ResourceOption) (*BaiduChannel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiKey == nil {
		return nil, errors.New("invalid value for required argument 'ApiKey'")
	}
	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.SecretKey == nil {
		return nil, errors.New("invalid value for required argument 'SecretKey'")
	}
	var resource BaiduChannel
	err := ctx.RegisterResource("aws:pinpoint/baiduChannel:BaiduChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBaiduChannel gets an existing BaiduChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBaiduChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BaiduChannelState, opts ...pulumi.ResourceOption) (*BaiduChannel, error) {
	var resource BaiduChannel
	err := ctx.ReadResource("aws:pinpoint/baiduChannel:BaiduChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BaiduChannel resources.
type baiduChannelState struct {
	// Platform credential API key from Baidu.
	ApiKey *string `pulumi:"apiKey"`
	// The application ID.
	ApplicationId *string `pulumi:"applicationId"`
	// Specifies whether to enable the channel. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Platform credential Secret key from Baidu.
	SecretKey *string `pulumi:"secretKey"`
}

type BaiduChannelState struct {
	// Platform credential API key from Baidu.
	ApiKey pulumi.StringPtrInput
	// The application ID.
	ApplicationId pulumi.StringPtrInput
	// Specifies whether to enable the channel. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// Platform credential Secret key from Baidu.
	SecretKey pulumi.StringPtrInput
}

func (BaiduChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*baiduChannelState)(nil)).Elem()
}

type baiduChannelArgs struct {
	// Platform credential API key from Baidu.
	ApiKey string `pulumi:"apiKey"`
	// The application ID.
	ApplicationId string `pulumi:"applicationId"`
	// Specifies whether to enable the channel. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Platform credential Secret key from Baidu.
	SecretKey string `pulumi:"secretKey"`
}

// The set of arguments for constructing a BaiduChannel resource.
type BaiduChannelArgs struct {
	// Platform credential API key from Baidu.
	ApiKey pulumi.StringInput
	// The application ID.
	ApplicationId pulumi.StringInput
	// Specifies whether to enable the channel. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// Platform credential Secret key from Baidu.
	SecretKey pulumi.StringInput
}

func (BaiduChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*baiduChannelArgs)(nil)).Elem()
}

type BaiduChannelInput interface {
	pulumi.Input

	ToBaiduChannelOutput() BaiduChannelOutput
	ToBaiduChannelOutputWithContext(ctx context.Context) BaiduChannelOutput
}

func (*BaiduChannel) ElementType() reflect.Type {
	return reflect.TypeOf((*BaiduChannel)(nil))
}

func (i *BaiduChannel) ToBaiduChannelOutput() BaiduChannelOutput {
	return i.ToBaiduChannelOutputWithContext(context.Background())
}

func (i *BaiduChannel) ToBaiduChannelOutputWithContext(ctx context.Context) BaiduChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaiduChannelOutput)
}

func (i *BaiduChannel) ToBaiduChannelPtrOutput() BaiduChannelPtrOutput {
	return i.ToBaiduChannelPtrOutputWithContext(context.Background())
}

func (i *BaiduChannel) ToBaiduChannelPtrOutputWithContext(ctx context.Context) BaiduChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaiduChannelPtrOutput)
}

type BaiduChannelPtrInput interface {
	pulumi.Input

	ToBaiduChannelPtrOutput() BaiduChannelPtrOutput
	ToBaiduChannelPtrOutputWithContext(ctx context.Context) BaiduChannelPtrOutput
}

type baiduChannelPtrType BaiduChannelArgs

func (*baiduChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaiduChannel)(nil))
}

func (i *baiduChannelPtrType) ToBaiduChannelPtrOutput() BaiduChannelPtrOutput {
	return i.ToBaiduChannelPtrOutputWithContext(context.Background())
}

func (i *baiduChannelPtrType) ToBaiduChannelPtrOutputWithContext(ctx context.Context) BaiduChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaiduChannelPtrOutput)
}

// BaiduChannelArrayInput is an input type that accepts BaiduChannelArray and BaiduChannelArrayOutput values.
// You can construct a concrete instance of `BaiduChannelArrayInput` via:
//
//          BaiduChannelArray{ BaiduChannelArgs{...} }
type BaiduChannelArrayInput interface {
	pulumi.Input

	ToBaiduChannelArrayOutput() BaiduChannelArrayOutput
	ToBaiduChannelArrayOutputWithContext(context.Context) BaiduChannelArrayOutput
}

type BaiduChannelArray []BaiduChannelInput

func (BaiduChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BaiduChannel)(nil)).Elem()
}

func (i BaiduChannelArray) ToBaiduChannelArrayOutput() BaiduChannelArrayOutput {
	return i.ToBaiduChannelArrayOutputWithContext(context.Background())
}

func (i BaiduChannelArray) ToBaiduChannelArrayOutputWithContext(ctx context.Context) BaiduChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaiduChannelArrayOutput)
}

// BaiduChannelMapInput is an input type that accepts BaiduChannelMap and BaiduChannelMapOutput values.
// You can construct a concrete instance of `BaiduChannelMapInput` via:
//
//          BaiduChannelMap{ "key": BaiduChannelArgs{...} }
type BaiduChannelMapInput interface {
	pulumi.Input

	ToBaiduChannelMapOutput() BaiduChannelMapOutput
	ToBaiduChannelMapOutputWithContext(context.Context) BaiduChannelMapOutput
}

type BaiduChannelMap map[string]BaiduChannelInput

func (BaiduChannelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BaiduChannel)(nil)).Elem()
}

func (i BaiduChannelMap) ToBaiduChannelMapOutput() BaiduChannelMapOutput {
	return i.ToBaiduChannelMapOutputWithContext(context.Background())
}

func (i BaiduChannelMap) ToBaiduChannelMapOutputWithContext(ctx context.Context) BaiduChannelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaiduChannelMapOutput)
}

type BaiduChannelOutput struct{ *pulumi.OutputState }

func (BaiduChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaiduChannel)(nil))
}

func (o BaiduChannelOutput) ToBaiduChannelOutput() BaiduChannelOutput {
	return o
}

func (o BaiduChannelOutput) ToBaiduChannelOutputWithContext(ctx context.Context) BaiduChannelOutput {
	return o
}

func (o BaiduChannelOutput) ToBaiduChannelPtrOutput() BaiduChannelPtrOutput {
	return o.ToBaiduChannelPtrOutputWithContext(context.Background())
}

func (o BaiduChannelOutput) ToBaiduChannelPtrOutputWithContext(ctx context.Context) BaiduChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BaiduChannel) *BaiduChannel {
		return &v
	}).(BaiduChannelPtrOutput)
}

type BaiduChannelPtrOutput struct{ *pulumi.OutputState }

func (BaiduChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaiduChannel)(nil))
}

func (o BaiduChannelPtrOutput) ToBaiduChannelPtrOutput() BaiduChannelPtrOutput {
	return o
}

func (o BaiduChannelPtrOutput) ToBaiduChannelPtrOutputWithContext(ctx context.Context) BaiduChannelPtrOutput {
	return o
}

func (o BaiduChannelPtrOutput) Elem() BaiduChannelOutput {
	return o.ApplyT(func(v *BaiduChannel) BaiduChannel {
		if v != nil {
			return *v
		}
		var ret BaiduChannel
		return ret
	}).(BaiduChannelOutput)
}

type BaiduChannelArrayOutput struct{ *pulumi.OutputState }

func (BaiduChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaiduChannel)(nil))
}

func (o BaiduChannelArrayOutput) ToBaiduChannelArrayOutput() BaiduChannelArrayOutput {
	return o
}

func (o BaiduChannelArrayOutput) ToBaiduChannelArrayOutputWithContext(ctx context.Context) BaiduChannelArrayOutput {
	return o
}

func (o BaiduChannelArrayOutput) Index(i pulumi.IntInput) BaiduChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaiduChannel {
		return vs[0].([]BaiduChannel)[vs[1].(int)]
	}).(BaiduChannelOutput)
}

type BaiduChannelMapOutput struct{ *pulumi.OutputState }

func (BaiduChannelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BaiduChannel)(nil))
}

func (o BaiduChannelMapOutput) ToBaiduChannelMapOutput() BaiduChannelMapOutput {
	return o
}

func (o BaiduChannelMapOutput) ToBaiduChannelMapOutputWithContext(ctx context.Context) BaiduChannelMapOutput {
	return o
}

func (o BaiduChannelMapOutput) MapIndex(k pulumi.StringInput) BaiduChannelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BaiduChannel {
		return vs[0].(map[string]BaiduChannel)[vs[1].(string)]
	}).(BaiduChannelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BaiduChannelInput)(nil)).Elem(), &BaiduChannel{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaiduChannelPtrInput)(nil)).Elem(), &BaiduChannel{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaiduChannelArrayInput)(nil)).Elem(), BaiduChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaiduChannelMapInput)(nil)).Elem(), BaiduChannelMap{})
	pulumi.RegisterOutputType(BaiduChannelOutput{})
	pulumi.RegisterOutputType(BaiduChannelPtrOutput{})
	pulumi.RegisterOutputType(BaiduChannelArrayOutput{})
	pulumi.RegisterOutputType(BaiduChannelMapOutput{})
}
