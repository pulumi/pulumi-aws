// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Pinpoint App resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/pinpoint_app.html.markdown.
type App struct {
	s *pulumi.ResourceState
}

// NewApp registers a new resource with the given unique name, arguments, and options.
func NewApp(ctx *pulumi.Context,
	name string, args *AppArgs, opts ...pulumi.ResourceOpt) (*App, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["campaignHook"] = nil
		inputs["limits"] = nil
		inputs["name"] = nil
		inputs["namePrefix"] = nil
		inputs["quietTime"] = nil
		inputs["tags"] = nil
	} else {
		inputs["campaignHook"] = args.CampaignHook
		inputs["limits"] = args.Limits
		inputs["name"] = args.Name
		inputs["namePrefix"] = args.NamePrefix
		inputs["quietTime"] = args.QuietTime
		inputs["tags"] = args.Tags
	}
	inputs["applicationId"] = nil
	inputs["arn"] = nil
	s, err := ctx.RegisterResource("aws:pinpoint/app:App", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &App{s: s}, nil
}

// GetApp gets an existing App resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApp(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AppState, opts ...pulumi.ResourceOpt) (*App, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["applicationId"] = state.ApplicationId
		inputs["arn"] = state.Arn
		inputs["campaignHook"] = state.CampaignHook
		inputs["limits"] = state.Limits
		inputs["name"] = state.Name
		inputs["namePrefix"] = state.NamePrefix
		inputs["quietTime"] = state.QuietTime
		inputs["tags"] = state.Tags
	}
	s, err := ctx.ReadResource("aws:pinpoint/app:App", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &App{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *App) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *App) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The Application ID of the Pinpoint App.
func (r *App) ApplicationId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["applicationId"])
}

// Amazon Resource Name (ARN) of the PinPoint Application
func (r *App) Arn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["arn"])
}

// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
func (r *App) CampaignHook() *pulumi.Output {
	return r.s.State["campaignHook"]
}

// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
func (r *App) Limits() *pulumi.Output {
	return r.s.State["limits"]
}

// The application name. By default generated by this provider
func (r *App) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The name of the Pinpoint application. Conflicts with `name`
func (r *App) NamePrefix() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["namePrefix"])
}

// The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
func (r *App) QuietTime() *pulumi.Output {
	return r.s.State["quietTime"]
}

// Key-value mapping of resource tags
func (r *App) Tags() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["tags"])
}

// Input properties used for looking up and filtering App resources.
type AppState struct {
	// The Application ID of the Pinpoint App.
	ApplicationId interface{}
	// Amazon Resource Name (ARN) of the PinPoint Application
	Arn interface{}
	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	CampaignHook interface{}
	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	Limits interface{}
	// The application name. By default generated by this provider
	Name interface{}
	// The name of the Pinpoint application. Conflicts with `name`
	NamePrefix interface{}
	// The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
	QuietTime interface{}
	// Key-value mapping of resource tags
	Tags interface{}
}

// The set of arguments for constructing a App resource.
type AppArgs struct {
	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	CampaignHook interface{}
	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	Limits interface{}
	// The application name. By default generated by this provider
	Name interface{}
	// The name of the Pinpoint application. Conflicts with `name`
	NamePrefix interface{}
	// The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
	QuietTime interface{}
	// Key-value mapping of resource tags
	Tags interface{}
}
