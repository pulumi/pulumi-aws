// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cleanrooms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type CollaborationDataEncryptionMetadata struct {
	AllowClearText                        bool `pulumi:"allowClearText"`
	AllowDuplicates                       bool `pulumi:"allowDuplicates"`
	AllowJoinsOnColumnsWithDifferentNames bool `pulumi:"allowJoinsOnColumnsWithDifferentNames"`
	PreserveNulls                         bool `pulumi:"preserveNulls"`
}

// CollaborationDataEncryptionMetadataInput is an input type that accepts CollaborationDataEncryptionMetadataArgs and CollaborationDataEncryptionMetadataOutput values.
// You can construct a concrete instance of `CollaborationDataEncryptionMetadataInput` via:
//
//	CollaborationDataEncryptionMetadataArgs{...}
type CollaborationDataEncryptionMetadataInput interface {
	pulumi.Input

	ToCollaborationDataEncryptionMetadataOutput() CollaborationDataEncryptionMetadataOutput
	ToCollaborationDataEncryptionMetadataOutputWithContext(context.Context) CollaborationDataEncryptionMetadataOutput
}

type CollaborationDataEncryptionMetadataArgs struct {
	AllowClearText                        pulumi.BoolInput `pulumi:"allowClearText"`
	AllowDuplicates                       pulumi.BoolInput `pulumi:"allowDuplicates"`
	AllowJoinsOnColumnsWithDifferentNames pulumi.BoolInput `pulumi:"allowJoinsOnColumnsWithDifferentNames"`
	PreserveNulls                         pulumi.BoolInput `pulumi:"preserveNulls"`
}

func (CollaborationDataEncryptionMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CollaborationDataEncryptionMetadata)(nil)).Elem()
}

func (i CollaborationDataEncryptionMetadataArgs) ToCollaborationDataEncryptionMetadataOutput() CollaborationDataEncryptionMetadataOutput {
	return i.ToCollaborationDataEncryptionMetadataOutputWithContext(context.Background())
}

func (i CollaborationDataEncryptionMetadataArgs) ToCollaborationDataEncryptionMetadataOutputWithContext(ctx context.Context) CollaborationDataEncryptionMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollaborationDataEncryptionMetadataOutput)
}

func (i CollaborationDataEncryptionMetadataArgs) ToOutput(ctx context.Context) pulumix.Output[CollaborationDataEncryptionMetadata] {
	return pulumix.Output[CollaborationDataEncryptionMetadata]{
		OutputState: i.ToCollaborationDataEncryptionMetadataOutputWithContext(ctx).OutputState,
	}
}

func (i CollaborationDataEncryptionMetadataArgs) ToCollaborationDataEncryptionMetadataPtrOutput() CollaborationDataEncryptionMetadataPtrOutput {
	return i.ToCollaborationDataEncryptionMetadataPtrOutputWithContext(context.Background())
}

func (i CollaborationDataEncryptionMetadataArgs) ToCollaborationDataEncryptionMetadataPtrOutputWithContext(ctx context.Context) CollaborationDataEncryptionMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollaborationDataEncryptionMetadataOutput).ToCollaborationDataEncryptionMetadataPtrOutputWithContext(ctx)
}

// CollaborationDataEncryptionMetadataPtrInput is an input type that accepts CollaborationDataEncryptionMetadataArgs, CollaborationDataEncryptionMetadataPtr and CollaborationDataEncryptionMetadataPtrOutput values.
// You can construct a concrete instance of `CollaborationDataEncryptionMetadataPtrInput` via:
//
//	        CollaborationDataEncryptionMetadataArgs{...}
//
//	or:
//
//	        nil
type CollaborationDataEncryptionMetadataPtrInput interface {
	pulumi.Input

	ToCollaborationDataEncryptionMetadataPtrOutput() CollaborationDataEncryptionMetadataPtrOutput
	ToCollaborationDataEncryptionMetadataPtrOutputWithContext(context.Context) CollaborationDataEncryptionMetadataPtrOutput
}

type collaborationDataEncryptionMetadataPtrType CollaborationDataEncryptionMetadataArgs

func CollaborationDataEncryptionMetadataPtr(v *CollaborationDataEncryptionMetadataArgs) CollaborationDataEncryptionMetadataPtrInput {
	return (*collaborationDataEncryptionMetadataPtrType)(v)
}

func (*collaborationDataEncryptionMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CollaborationDataEncryptionMetadata)(nil)).Elem()
}

func (i *collaborationDataEncryptionMetadataPtrType) ToCollaborationDataEncryptionMetadataPtrOutput() CollaborationDataEncryptionMetadataPtrOutput {
	return i.ToCollaborationDataEncryptionMetadataPtrOutputWithContext(context.Background())
}

func (i *collaborationDataEncryptionMetadataPtrType) ToCollaborationDataEncryptionMetadataPtrOutputWithContext(ctx context.Context) CollaborationDataEncryptionMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollaborationDataEncryptionMetadataPtrOutput)
}

func (i *collaborationDataEncryptionMetadataPtrType) ToOutput(ctx context.Context) pulumix.Output[*CollaborationDataEncryptionMetadata] {
	return pulumix.Output[*CollaborationDataEncryptionMetadata]{
		OutputState: i.ToCollaborationDataEncryptionMetadataPtrOutputWithContext(ctx).OutputState,
	}
}

type CollaborationDataEncryptionMetadataOutput struct{ *pulumi.OutputState }

func (CollaborationDataEncryptionMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CollaborationDataEncryptionMetadata)(nil)).Elem()
}

func (o CollaborationDataEncryptionMetadataOutput) ToCollaborationDataEncryptionMetadataOutput() CollaborationDataEncryptionMetadataOutput {
	return o
}

func (o CollaborationDataEncryptionMetadataOutput) ToCollaborationDataEncryptionMetadataOutputWithContext(ctx context.Context) CollaborationDataEncryptionMetadataOutput {
	return o
}

func (o CollaborationDataEncryptionMetadataOutput) ToCollaborationDataEncryptionMetadataPtrOutput() CollaborationDataEncryptionMetadataPtrOutput {
	return o.ToCollaborationDataEncryptionMetadataPtrOutputWithContext(context.Background())
}

func (o CollaborationDataEncryptionMetadataOutput) ToCollaborationDataEncryptionMetadataPtrOutputWithContext(ctx context.Context) CollaborationDataEncryptionMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CollaborationDataEncryptionMetadata) *CollaborationDataEncryptionMetadata {
		return &v
	}).(CollaborationDataEncryptionMetadataPtrOutput)
}

func (o CollaborationDataEncryptionMetadataOutput) ToOutput(ctx context.Context) pulumix.Output[CollaborationDataEncryptionMetadata] {
	return pulumix.Output[CollaborationDataEncryptionMetadata]{
		OutputState: o.OutputState,
	}
}

func (o CollaborationDataEncryptionMetadataOutput) AllowClearText() pulumi.BoolOutput {
	return o.ApplyT(func(v CollaborationDataEncryptionMetadata) bool { return v.AllowClearText }).(pulumi.BoolOutput)
}

func (o CollaborationDataEncryptionMetadataOutput) AllowDuplicates() pulumi.BoolOutput {
	return o.ApplyT(func(v CollaborationDataEncryptionMetadata) bool { return v.AllowDuplicates }).(pulumi.BoolOutput)
}

func (o CollaborationDataEncryptionMetadataOutput) AllowJoinsOnColumnsWithDifferentNames() pulumi.BoolOutput {
	return o.ApplyT(func(v CollaborationDataEncryptionMetadata) bool { return v.AllowJoinsOnColumnsWithDifferentNames }).(pulumi.BoolOutput)
}

func (o CollaborationDataEncryptionMetadataOutput) PreserveNulls() pulumi.BoolOutput {
	return o.ApplyT(func(v CollaborationDataEncryptionMetadata) bool { return v.PreserveNulls }).(pulumi.BoolOutput)
}

type CollaborationDataEncryptionMetadataPtrOutput struct{ *pulumi.OutputState }

func (CollaborationDataEncryptionMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CollaborationDataEncryptionMetadata)(nil)).Elem()
}

func (o CollaborationDataEncryptionMetadataPtrOutput) ToCollaborationDataEncryptionMetadataPtrOutput() CollaborationDataEncryptionMetadataPtrOutput {
	return o
}

func (o CollaborationDataEncryptionMetadataPtrOutput) ToCollaborationDataEncryptionMetadataPtrOutputWithContext(ctx context.Context) CollaborationDataEncryptionMetadataPtrOutput {
	return o
}

func (o CollaborationDataEncryptionMetadataPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CollaborationDataEncryptionMetadata] {
	return pulumix.Output[*CollaborationDataEncryptionMetadata]{
		OutputState: o.OutputState,
	}
}

func (o CollaborationDataEncryptionMetadataPtrOutput) Elem() CollaborationDataEncryptionMetadataOutput {
	return o.ApplyT(func(v *CollaborationDataEncryptionMetadata) CollaborationDataEncryptionMetadata {
		if v != nil {
			return *v
		}
		var ret CollaborationDataEncryptionMetadata
		return ret
	}).(CollaborationDataEncryptionMetadataOutput)
}

func (o CollaborationDataEncryptionMetadataPtrOutput) AllowClearText() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CollaborationDataEncryptionMetadata) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowClearText
	}).(pulumi.BoolPtrOutput)
}

func (o CollaborationDataEncryptionMetadataPtrOutput) AllowDuplicates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CollaborationDataEncryptionMetadata) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowDuplicates
	}).(pulumi.BoolPtrOutput)
}

func (o CollaborationDataEncryptionMetadataPtrOutput) AllowJoinsOnColumnsWithDifferentNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CollaborationDataEncryptionMetadata) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowJoinsOnColumnsWithDifferentNames
	}).(pulumi.BoolPtrOutput)
}

func (o CollaborationDataEncryptionMetadataPtrOutput) PreserveNulls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CollaborationDataEncryptionMetadata) *bool {
		if v == nil {
			return nil
		}
		return &v.PreserveNulls
	}).(pulumi.BoolPtrOutput)
}

type CollaborationMember struct {
	AccountId       string   `pulumi:"accountId"`
	DisplayName     string   `pulumi:"displayName"`
	MemberAbilities []string `pulumi:"memberAbilities"`
	Status          *string  `pulumi:"status"`
}

// CollaborationMemberInput is an input type that accepts CollaborationMemberArgs and CollaborationMemberOutput values.
// You can construct a concrete instance of `CollaborationMemberInput` via:
//
//	CollaborationMemberArgs{...}
type CollaborationMemberInput interface {
	pulumi.Input

	ToCollaborationMemberOutput() CollaborationMemberOutput
	ToCollaborationMemberOutputWithContext(context.Context) CollaborationMemberOutput
}

type CollaborationMemberArgs struct {
	AccountId       pulumi.StringInput      `pulumi:"accountId"`
	DisplayName     pulumi.StringInput      `pulumi:"displayName"`
	MemberAbilities pulumi.StringArrayInput `pulumi:"memberAbilities"`
	Status          pulumi.StringPtrInput   `pulumi:"status"`
}

func (CollaborationMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CollaborationMember)(nil)).Elem()
}

func (i CollaborationMemberArgs) ToCollaborationMemberOutput() CollaborationMemberOutput {
	return i.ToCollaborationMemberOutputWithContext(context.Background())
}

func (i CollaborationMemberArgs) ToCollaborationMemberOutputWithContext(ctx context.Context) CollaborationMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollaborationMemberOutput)
}

func (i CollaborationMemberArgs) ToOutput(ctx context.Context) pulumix.Output[CollaborationMember] {
	return pulumix.Output[CollaborationMember]{
		OutputState: i.ToCollaborationMemberOutputWithContext(ctx).OutputState,
	}
}

// CollaborationMemberArrayInput is an input type that accepts CollaborationMemberArray and CollaborationMemberArrayOutput values.
// You can construct a concrete instance of `CollaborationMemberArrayInput` via:
//
//	CollaborationMemberArray{ CollaborationMemberArgs{...} }
type CollaborationMemberArrayInput interface {
	pulumi.Input

	ToCollaborationMemberArrayOutput() CollaborationMemberArrayOutput
	ToCollaborationMemberArrayOutputWithContext(context.Context) CollaborationMemberArrayOutput
}

type CollaborationMemberArray []CollaborationMemberInput

func (CollaborationMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CollaborationMember)(nil)).Elem()
}

func (i CollaborationMemberArray) ToCollaborationMemberArrayOutput() CollaborationMemberArrayOutput {
	return i.ToCollaborationMemberArrayOutputWithContext(context.Background())
}

func (i CollaborationMemberArray) ToCollaborationMemberArrayOutputWithContext(ctx context.Context) CollaborationMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollaborationMemberArrayOutput)
}

func (i CollaborationMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]CollaborationMember] {
	return pulumix.Output[[]CollaborationMember]{
		OutputState: i.ToCollaborationMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type CollaborationMemberOutput struct{ *pulumi.OutputState }

func (CollaborationMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CollaborationMember)(nil)).Elem()
}

func (o CollaborationMemberOutput) ToCollaborationMemberOutput() CollaborationMemberOutput {
	return o
}

func (o CollaborationMemberOutput) ToCollaborationMemberOutputWithContext(ctx context.Context) CollaborationMemberOutput {
	return o
}

func (o CollaborationMemberOutput) ToOutput(ctx context.Context) pulumix.Output[CollaborationMember] {
	return pulumix.Output[CollaborationMember]{
		OutputState: o.OutputState,
	}
}

func (o CollaborationMemberOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v CollaborationMember) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o CollaborationMemberOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v CollaborationMember) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o CollaborationMemberOutput) MemberAbilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CollaborationMember) []string { return v.MemberAbilities }).(pulumi.StringArrayOutput)
}

func (o CollaborationMemberOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CollaborationMember) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type CollaborationMemberArrayOutput struct{ *pulumi.OutputState }

func (CollaborationMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CollaborationMember)(nil)).Elem()
}

func (o CollaborationMemberArrayOutput) ToCollaborationMemberArrayOutput() CollaborationMemberArrayOutput {
	return o
}

func (o CollaborationMemberArrayOutput) ToCollaborationMemberArrayOutputWithContext(ctx context.Context) CollaborationMemberArrayOutput {
	return o
}

func (o CollaborationMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CollaborationMember] {
	return pulumix.Output[[]CollaborationMember]{
		OutputState: o.OutputState,
	}
}

func (o CollaborationMemberArrayOutput) Index(i pulumi.IntInput) CollaborationMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CollaborationMember {
		return vs[0].([]CollaborationMember)[vs[1].(int)]
	}).(CollaborationMemberOutput)
}

type ConfiguredTableTableReference struct {
	DatabaseName string `pulumi:"databaseName"`
	TableName    string `pulumi:"tableName"`
}

// ConfiguredTableTableReferenceInput is an input type that accepts ConfiguredTableTableReferenceArgs and ConfiguredTableTableReferenceOutput values.
// You can construct a concrete instance of `ConfiguredTableTableReferenceInput` via:
//
//	ConfiguredTableTableReferenceArgs{...}
type ConfiguredTableTableReferenceInput interface {
	pulumi.Input

	ToConfiguredTableTableReferenceOutput() ConfiguredTableTableReferenceOutput
	ToConfiguredTableTableReferenceOutputWithContext(context.Context) ConfiguredTableTableReferenceOutput
}

type ConfiguredTableTableReferenceArgs struct {
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	TableName    pulumi.StringInput `pulumi:"tableName"`
}

func (ConfiguredTableTableReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfiguredTableTableReference)(nil)).Elem()
}

func (i ConfiguredTableTableReferenceArgs) ToConfiguredTableTableReferenceOutput() ConfiguredTableTableReferenceOutput {
	return i.ToConfiguredTableTableReferenceOutputWithContext(context.Background())
}

func (i ConfiguredTableTableReferenceArgs) ToConfiguredTableTableReferenceOutputWithContext(ctx context.Context) ConfiguredTableTableReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfiguredTableTableReferenceOutput)
}

func (i ConfiguredTableTableReferenceArgs) ToOutput(ctx context.Context) pulumix.Output[ConfiguredTableTableReference] {
	return pulumix.Output[ConfiguredTableTableReference]{
		OutputState: i.ToConfiguredTableTableReferenceOutputWithContext(ctx).OutputState,
	}
}

func (i ConfiguredTableTableReferenceArgs) ToConfiguredTableTableReferencePtrOutput() ConfiguredTableTableReferencePtrOutput {
	return i.ToConfiguredTableTableReferencePtrOutputWithContext(context.Background())
}

func (i ConfiguredTableTableReferenceArgs) ToConfiguredTableTableReferencePtrOutputWithContext(ctx context.Context) ConfiguredTableTableReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfiguredTableTableReferenceOutput).ToConfiguredTableTableReferencePtrOutputWithContext(ctx)
}

// ConfiguredTableTableReferencePtrInput is an input type that accepts ConfiguredTableTableReferenceArgs, ConfiguredTableTableReferencePtr and ConfiguredTableTableReferencePtrOutput values.
// You can construct a concrete instance of `ConfiguredTableTableReferencePtrInput` via:
//
//	        ConfiguredTableTableReferenceArgs{...}
//
//	or:
//
//	        nil
type ConfiguredTableTableReferencePtrInput interface {
	pulumi.Input

	ToConfiguredTableTableReferencePtrOutput() ConfiguredTableTableReferencePtrOutput
	ToConfiguredTableTableReferencePtrOutputWithContext(context.Context) ConfiguredTableTableReferencePtrOutput
}

type configuredTableTableReferencePtrType ConfiguredTableTableReferenceArgs

func ConfiguredTableTableReferencePtr(v *ConfiguredTableTableReferenceArgs) ConfiguredTableTableReferencePtrInput {
	return (*configuredTableTableReferencePtrType)(v)
}

func (*configuredTableTableReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfiguredTableTableReference)(nil)).Elem()
}

func (i *configuredTableTableReferencePtrType) ToConfiguredTableTableReferencePtrOutput() ConfiguredTableTableReferencePtrOutput {
	return i.ToConfiguredTableTableReferencePtrOutputWithContext(context.Background())
}

func (i *configuredTableTableReferencePtrType) ToConfiguredTableTableReferencePtrOutputWithContext(ctx context.Context) ConfiguredTableTableReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfiguredTableTableReferencePtrOutput)
}

func (i *configuredTableTableReferencePtrType) ToOutput(ctx context.Context) pulumix.Output[*ConfiguredTableTableReference] {
	return pulumix.Output[*ConfiguredTableTableReference]{
		OutputState: i.ToConfiguredTableTableReferencePtrOutputWithContext(ctx).OutputState,
	}
}

type ConfiguredTableTableReferenceOutput struct{ *pulumi.OutputState }

func (ConfiguredTableTableReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfiguredTableTableReference)(nil)).Elem()
}

func (o ConfiguredTableTableReferenceOutput) ToConfiguredTableTableReferenceOutput() ConfiguredTableTableReferenceOutput {
	return o
}

func (o ConfiguredTableTableReferenceOutput) ToConfiguredTableTableReferenceOutputWithContext(ctx context.Context) ConfiguredTableTableReferenceOutput {
	return o
}

func (o ConfiguredTableTableReferenceOutput) ToConfiguredTableTableReferencePtrOutput() ConfiguredTableTableReferencePtrOutput {
	return o.ToConfiguredTableTableReferencePtrOutputWithContext(context.Background())
}

func (o ConfiguredTableTableReferenceOutput) ToConfiguredTableTableReferencePtrOutputWithContext(ctx context.Context) ConfiguredTableTableReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfiguredTableTableReference) *ConfiguredTableTableReference {
		return &v
	}).(ConfiguredTableTableReferencePtrOutput)
}

func (o ConfiguredTableTableReferenceOutput) ToOutput(ctx context.Context) pulumix.Output[ConfiguredTableTableReference] {
	return pulumix.Output[ConfiguredTableTableReference]{
		OutputState: o.OutputState,
	}
}

func (o ConfiguredTableTableReferenceOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v ConfiguredTableTableReference) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o ConfiguredTableTableReferenceOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v ConfiguredTableTableReference) string { return v.TableName }).(pulumi.StringOutput)
}

type ConfiguredTableTableReferencePtrOutput struct{ *pulumi.OutputState }

func (ConfiguredTableTableReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfiguredTableTableReference)(nil)).Elem()
}

func (o ConfiguredTableTableReferencePtrOutput) ToConfiguredTableTableReferencePtrOutput() ConfiguredTableTableReferencePtrOutput {
	return o
}

func (o ConfiguredTableTableReferencePtrOutput) ToConfiguredTableTableReferencePtrOutputWithContext(ctx context.Context) ConfiguredTableTableReferencePtrOutput {
	return o
}

func (o ConfiguredTableTableReferencePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConfiguredTableTableReference] {
	return pulumix.Output[*ConfiguredTableTableReference]{
		OutputState: o.OutputState,
	}
}

func (o ConfiguredTableTableReferencePtrOutput) Elem() ConfiguredTableTableReferenceOutput {
	return o.ApplyT(func(v *ConfiguredTableTableReference) ConfiguredTableTableReference {
		if v != nil {
			return *v
		}
		var ret ConfiguredTableTableReference
		return ret
	}).(ConfiguredTableTableReferenceOutput)
}

func (o ConfiguredTableTableReferencePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfiguredTableTableReference) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o ConfiguredTableTableReferencePtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfiguredTableTableReference) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CollaborationDataEncryptionMetadataInput)(nil)).Elem(), CollaborationDataEncryptionMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollaborationDataEncryptionMetadataPtrInput)(nil)).Elem(), CollaborationDataEncryptionMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollaborationMemberInput)(nil)).Elem(), CollaborationMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollaborationMemberArrayInput)(nil)).Elem(), CollaborationMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfiguredTableTableReferenceInput)(nil)).Elem(), ConfiguredTableTableReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfiguredTableTableReferencePtrInput)(nil)).Elem(), ConfiguredTableTableReferenceArgs{})
	pulumi.RegisterOutputType(CollaborationDataEncryptionMetadataOutput{})
	pulumi.RegisterOutputType(CollaborationDataEncryptionMetadataPtrOutput{})
	pulumi.RegisterOutputType(CollaborationMemberOutput{})
	pulumi.RegisterOutputType(CollaborationMemberArrayOutput{})
	pulumi.RegisterOutputType(ConfiguredTableTableReferenceOutput{})
	pulumi.RegisterOutputType(ConfiguredTableTableReferencePtrOutput{})
}
