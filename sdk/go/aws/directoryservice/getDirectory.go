// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package directoryservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDirectory(ctx *pulumi.Context, args *LookupDirectoryArgs, opts ...pulumi.InvokeOption) (*LookupDirectoryResult, error) {
	var rv LookupDirectoryResult
	err := ctx.Invoke("aws:directoryservice/getDirectory:getDirectory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDirectory.
type LookupDirectoryArgs struct {
	DirectoryId string            `pulumi:"directoryId"`
	Tags        map[string]string `pulumi:"tags"`
}

// A collection of values returned by getDirectory.
type LookupDirectoryResult struct {
	AccessUrl       string                       `pulumi:"accessUrl"`
	Alias           string                       `pulumi:"alias"`
	ConnectSettings []GetDirectoryConnectSetting `pulumi:"connectSettings"`
	Description     string                       `pulumi:"description"`
	DirectoryId     string                       `pulumi:"directoryId"`
	DnsIpAddresses  []string                     `pulumi:"dnsIpAddresses"`
	Edition         string                       `pulumi:"edition"`
	EnableSso       bool                         `pulumi:"enableSso"`
	// The provider-assigned unique ID for this managed resource.
	Id              string                      `pulumi:"id"`
	Name            string                      `pulumi:"name"`
	RadiusSettings  []GetDirectoryRadiusSetting `pulumi:"radiusSettings"`
	SecurityGroupId string                      `pulumi:"securityGroupId"`
	ShortName       string                      `pulumi:"shortName"`
	Size            string                      `pulumi:"size"`
	Tags            map[string]string           `pulumi:"tags"`
	Type            string                      `pulumi:"type"`
	VpcSettings     []GetDirectoryVpcSetting    `pulumi:"vpcSettings"`
}

func LookupDirectoryOutput(ctx *pulumi.Context, args LookupDirectoryOutputArgs, opts ...pulumi.InvokeOption) LookupDirectoryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDirectoryResult, error) {
			args := v.(LookupDirectoryArgs)
			r, err := LookupDirectory(ctx, &args, opts...)
			var s LookupDirectoryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDirectoryResultOutput)
}

// A collection of arguments for invoking getDirectory.
type LookupDirectoryOutputArgs struct {
	DirectoryId pulumi.StringInput    `pulumi:"directoryId"`
	Tags        pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupDirectoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDirectoryArgs)(nil)).Elem()
}

// A collection of values returned by getDirectory.
type LookupDirectoryResultOutput struct{ *pulumi.OutputState }

func (LookupDirectoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDirectoryResult)(nil)).Elem()
}

func (o LookupDirectoryResultOutput) ToLookupDirectoryResultOutput() LookupDirectoryResultOutput {
	return o
}

func (o LookupDirectoryResultOutput) ToLookupDirectoryResultOutputWithContext(ctx context.Context) LookupDirectoryResultOutput {
	return o
}

func (o LookupDirectoryResultOutput) AccessUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.AccessUrl }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.Alias }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) ConnectSettings() GetDirectoryConnectSettingArrayOutput {
	return o.ApplyT(func(v LookupDirectoryResult) []GetDirectoryConnectSetting { return v.ConnectSettings }).(GetDirectoryConnectSettingArrayOutput)
}

func (o LookupDirectoryResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) DirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.DirectoryId }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) DnsIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDirectoryResult) []string { return v.DnsIpAddresses }).(pulumi.StringArrayOutput)
}

func (o LookupDirectoryResultOutput) Edition() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.Edition }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) EnableSso() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDirectoryResult) bool { return v.EnableSso }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDirectoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) RadiusSettings() GetDirectoryRadiusSettingArrayOutput {
	return o.ApplyT(func(v LookupDirectoryResult) []GetDirectoryRadiusSetting { return v.RadiusSettings }).(GetDirectoryRadiusSettingArrayOutput)
}

func (o LookupDirectoryResultOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.ShortName }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.Size }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDirectoryResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupDirectoryResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) VpcSettings() GetDirectoryVpcSettingArrayOutput {
	return o.ApplyT(func(v LookupDirectoryResult) []GetDirectoryVpcSetting { return v.VpcSettings }).(GetDirectoryVpcSettingArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDirectoryResultOutput{})
}
