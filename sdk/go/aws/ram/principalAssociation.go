// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PrincipalAssociation struct {
	pulumi.CustomResourceState

	Principal        pulumi.StringOutput `pulumi:"principal"`
	ResourceShareArn pulumi.StringOutput `pulumi:"resourceShareArn"`
}

// NewPrincipalAssociation registers a new resource with the given unique name, arguments, and options.
func NewPrincipalAssociation(ctx *pulumi.Context,
	name string, args *PrincipalAssociationArgs, opts ...pulumi.ResourceOption) (*PrincipalAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Principal == nil {
		return nil, errors.New("invalid value for required argument 'Principal'")
	}
	if args.ResourceShareArn == nil {
		return nil, errors.New("invalid value for required argument 'ResourceShareArn'")
	}
	var resource PrincipalAssociation
	err := ctx.RegisterResource("aws:ram/principalAssociation:PrincipalAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrincipalAssociation gets an existing PrincipalAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrincipalAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrincipalAssociationState, opts ...pulumi.ResourceOption) (*PrincipalAssociation, error) {
	var resource PrincipalAssociation
	err := ctx.ReadResource("aws:ram/principalAssociation:PrincipalAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrincipalAssociation resources.
type principalAssociationState struct {
	Principal        *string `pulumi:"principal"`
	ResourceShareArn *string `pulumi:"resourceShareArn"`
}

type PrincipalAssociationState struct {
	Principal        pulumi.StringPtrInput
	ResourceShareArn pulumi.StringPtrInput
}

func (PrincipalAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*principalAssociationState)(nil)).Elem()
}

type principalAssociationArgs struct {
	Principal        string `pulumi:"principal"`
	ResourceShareArn string `pulumi:"resourceShareArn"`
}

// The set of arguments for constructing a PrincipalAssociation resource.
type PrincipalAssociationArgs struct {
	Principal        pulumi.StringInput
	ResourceShareArn pulumi.StringInput
}

func (PrincipalAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*principalAssociationArgs)(nil)).Elem()
}

type PrincipalAssociationInput interface {
	pulumi.Input

	ToPrincipalAssociationOutput() PrincipalAssociationOutput
	ToPrincipalAssociationOutputWithContext(ctx context.Context) PrincipalAssociationOutput
}

func (*PrincipalAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**PrincipalAssociation)(nil)).Elem()
}

func (i *PrincipalAssociation) ToPrincipalAssociationOutput() PrincipalAssociationOutput {
	return i.ToPrincipalAssociationOutputWithContext(context.Background())
}

func (i *PrincipalAssociation) ToPrincipalAssociationOutputWithContext(ctx context.Context) PrincipalAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrincipalAssociationOutput)
}

// PrincipalAssociationArrayInput is an input type that accepts PrincipalAssociationArray and PrincipalAssociationArrayOutput values.
// You can construct a concrete instance of `PrincipalAssociationArrayInput` via:
//
//	PrincipalAssociationArray{ PrincipalAssociationArgs{...} }
type PrincipalAssociationArrayInput interface {
	pulumi.Input

	ToPrincipalAssociationArrayOutput() PrincipalAssociationArrayOutput
	ToPrincipalAssociationArrayOutputWithContext(context.Context) PrincipalAssociationArrayOutput
}

type PrincipalAssociationArray []PrincipalAssociationInput

func (PrincipalAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrincipalAssociation)(nil)).Elem()
}

func (i PrincipalAssociationArray) ToPrincipalAssociationArrayOutput() PrincipalAssociationArrayOutput {
	return i.ToPrincipalAssociationArrayOutputWithContext(context.Background())
}

func (i PrincipalAssociationArray) ToPrincipalAssociationArrayOutputWithContext(ctx context.Context) PrincipalAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrincipalAssociationArrayOutput)
}

// PrincipalAssociationMapInput is an input type that accepts PrincipalAssociationMap and PrincipalAssociationMapOutput values.
// You can construct a concrete instance of `PrincipalAssociationMapInput` via:
//
//	PrincipalAssociationMap{ "key": PrincipalAssociationArgs{...} }
type PrincipalAssociationMapInput interface {
	pulumi.Input

	ToPrincipalAssociationMapOutput() PrincipalAssociationMapOutput
	ToPrincipalAssociationMapOutputWithContext(context.Context) PrincipalAssociationMapOutput
}

type PrincipalAssociationMap map[string]PrincipalAssociationInput

func (PrincipalAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrincipalAssociation)(nil)).Elem()
}

func (i PrincipalAssociationMap) ToPrincipalAssociationMapOutput() PrincipalAssociationMapOutput {
	return i.ToPrincipalAssociationMapOutputWithContext(context.Background())
}

func (i PrincipalAssociationMap) ToPrincipalAssociationMapOutputWithContext(ctx context.Context) PrincipalAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrincipalAssociationMapOutput)
}

type PrincipalAssociationOutput struct{ *pulumi.OutputState }

func (PrincipalAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrincipalAssociation)(nil)).Elem()
}

func (o PrincipalAssociationOutput) ToPrincipalAssociationOutput() PrincipalAssociationOutput {
	return o
}

func (o PrincipalAssociationOutput) ToPrincipalAssociationOutputWithContext(ctx context.Context) PrincipalAssociationOutput {
	return o
}

func (o PrincipalAssociationOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v *PrincipalAssociation) pulumi.StringOutput { return v.Principal }).(pulumi.StringOutput)
}

func (o PrincipalAssociationOutput) ResourceShareArn() pulumi.StringOutput {
	return o.ApplyT(func(v *PrincipalAssociation) pulumi.StringOutput { return v.ResourceShareArn }).(pulumi.StringOutput)
}

type PrincipalAssociationArrayOutput struct{ *pulumi.OutputState }

func (PrincipalAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrincipalAssociation)(nil)).Elem()
}

func (o PrincipalAssociationArrayOutput) ToPrincipalAssociationArrayOutput() PrincipalAssociationArrayOutput {
	return o
}

func (o PrincipalAssociationArrayOutput) ToPrincipalAssociationArrayOutputWithContext(ctx context.Context) PrincipalAssociationArrayOutput {
	return o
}

func (o PrincipalAssociationArrayOutput) Index(i pulumi.IntInput) PrincipalAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PrincipalAssociation {
		return vs[0].([]*PrincipalAssociation)[vs[1].(int)]
	}).(PrincipalAssociationOutput)
}

type PrincipalAssociationMapOutput struct{ *pulumi.OutputState }

func (PrincipalAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrincipalAssociation)(nil)).Elem()
}

func (o PrincipalAssociationMapOutput) ToPrincipalAssociationMapOutput() PrincipalAssociationMapOutput {
	return o
}

func (o PrincipalAssociationMapOutput) ToPrincipalAssociationMapOutputWithContext(ctx context.Context) PrincipalAssociationMapOutput {
	return o
}

func (o PrincipalAssociationMapOutput) MapIndex(k pulumi.StringInput) PrincipalAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PrincipalAssociation {
		return vs[0].(map[string]*PrincipalAssociation)[vs[1].(string)]
	}).(PrincipalAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrincipalAssociationInput)(nil)).Elem(), &PrincipalAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrincipalAssociationArrayInput)(nil)).Elem(), PrincipalAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrincipalAssociationMapInput)(nil)).Elem(), PrincipalAssociationMap{})
	pulumi.RegisterOutputType(PrincipalAssociationOutput{})
	pulumi.RegisterOutputType(PrincipalAssociationArrayOutput{})
	pulumi.RegisterOutputType(PrincipalAssociationMapOutput{})
}
