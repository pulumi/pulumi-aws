// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type GetResourceShareFilter struct {
	// Name of the tag key to filter on.
	Name string `pulumi:"name"`
	// Value of the tag key.
	Values []string `pulumi:"values"`
}

// GetResourceShareFilterInput is an input type that accepts GetResourceShareFilterArgs and GetResourceShareFilterOutput values.
// You can construct a concrete instance of `GetResourceShareFilterInput` via:
//
//	GetResourceShareFilterArgs{...}
type GetResourceShareFilterInput interface {
	pulumi.Input

	ToGetResourceShareFilterOutput() GetResourceShareFilterOutput
	ToGetResourceShareFilterOutputWithContext(context.Context) GetResourceShareFilterOutput
}

type GetResourceShareFilterArgs struct {
	// Name of the tag key to filter on.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the tag key.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetResourceShareFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceShareFilter)(nil)).Elem()
}

func (i GetResourceShareFilterArgs) ToGetResourceShareFilterOutput() GetResourceShareFilterOutput {
	return i.ToGetResourceShareFilterOutputWithContext(context.Background())
}

func (i GetResourceShareFilterArgs) ToGetResourceShareFilterOutputWithContext(ctx context.Context) GetResourceShareFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceShareFilterOutput)
}

func (i GetResourceShareFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetResourceShareFilter] {
	return pulumix.Output[GetResourceShareFilter]{
		OutputState: i.ToGetResourceShareFilterOutputWithContext(ctx).OutputState,
	}
}

// GetResourceShareFilterArrayInput is an input type that accepts GetResourceShareFilterArray and GetResourceShareFilterArrayOutput values.
// You can construct a concrete instance of `GetResourceShareFilterArrayInput` via:
//
//	GetResourceShareFilterArray{ GetResourceShareFilterArgs{...} }
type GetResourceShareFilterArrayInput interface {
	pulumi.Input

	ToGetResourceShareFilterArrayOutput() GetResourceShareFilterArrayOutput
	ToGetResourceShareFilterArrayOutputWithContext(context.Context) GetResourceShareFilterArrayOutput
}

type GetResourceShareFilterArray []GetResourceShareFilterInput

func (GetResourceShareFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceShareFilter)(nil)).Elem()
}

func (i GetResourceShareFilterArray) ToGetResourceShareFilterArrayOutput() GetResourceShareFilterArrayOutput {
	return i.ToGetResourceShareFilterArrayOutputWithContext(context.Background())
}

func (i GetResourceShareFilterArray) ToGetResourceShareFilterArrayOutputWithContext(ctx context.Context) GetResourceShareFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceShareFilterArrayOutput)
}

func (i GetResourceShareFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetResourceShareFilter] {
	return pulumix.Output[[]GetResourceShareFilter]{
		OutputState: i.ToGetResourceShareFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetResourceShareFilterOutput struct{ *pulumi.OutputState }

func (GetResourceShareFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceShareFilter)(nil)).Elem()
}

func (o GetResourceShareFilterOutput) ToGetResourceShareFilterOutput() GetResourceShareFilterOutput {
	return o
}

func (o GetResourceShareFilterOutput) ToGetResourceShareFilterOutputWithContext(ctx context.Context) GetResourceShareFilterOutput {
	return o
}

func (o GetResourceShareFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetResourceShareFilter] {
	return pulumix.Output[GetResourceShareFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the tag key to filter on.
func (o GetResourceShareFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceShareFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the tag key.
func (o GetResourceShareFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResourceShareFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetResourceShareFilterArrayOutput struct{ *pulumi.OutputState }

func (GetResourceShareFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceShareFilter)(nil)).Elem()
}

func (o GetResourceShareFilterArrayOutput) ToGetResourceShareFilterArrayOutput() GetResourceShareFilterArrayOutput {
	return o
}

func (o GetResourceShareFilterArrayOutput) ToGetResourceShareFilterArrayOutputWithContext(ctx context.Context) GetResourceShareFilterArrayOutput {
	return o
}

func (o GetResourceShareFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetResourceShareFilter] {
	return pulumix.Output[[]GetResourceShareFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetResourceShareFilterArrayOutput) Index(i pulumi.IntInput) GetResourceShareFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceShareFilter {
		return vs[0].([]GetResourceShareFilter)[vs[1].(int)]
	}).(GetResourceShareFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceShareFilterInput)(nil)).Elem(), GetResourceShareFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceShareFilterArrayInput)(nil)).Elem(), GetResourceShareFilterArray{})
	pulumi.RegisterOutputType(GetResourceShareFilterOutput{})
	pulumi.RegisterOutputType(GetResourceShareFilterArrayOutput{})
}
