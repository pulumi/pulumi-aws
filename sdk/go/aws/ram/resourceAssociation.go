// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ResourceAssociation struct {
	pulumi.CustomResourceState

	ResourceArn      pulumi.StringOutput `pulumi:"resourceArn"`
	ResourceShareArn pulumi.StringOutput `pulumi:"resourceShareArn"`
}

// NewResourceAssociation registers a new resource with the given unique name, arguments, and options.
func NewResourceAssociation(ctx *pulumi.Context,
	name string, args *ResourceAssociationArgs, opts ...pulumi.ResourceOption) (*ResourceAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceArn == nil {
		return nil, errors.New("invalid value for required argument 'ResourceArn'")
	}
	if args.ResourceShareArn == nil {
		return nil, errors.New("invalid value for required argument 'ResourceShareArn'")
	}
	var resource ResourceAssociation
	err := ctx.RegisterResource("aws:ram/resourceAssociation:ResourceAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceAssociation gets an existing ResourceAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceAssociationState, opts ...pulumi.ResourceOption) (*ResourceAssociation, error) {
	var resource ResourceAssociation
	err := ctx.ReadResource("aws:ram/resourceAssociation:ResourceAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceAssociation resources.
type resourceAssociationState struct {
	ResourceArn      *string `pulumi:"resourceArn"`
	ResourceShareArn *string `pulumi:"resourceShareArn"`
}

type ResourceAssociationState struct {
	ResourceArn      pulumi.StringPtrInput
	ResourceShareArn pulumi.StringPtrInput
}

func (ResourceAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceAssociationState)(nil)).Elem()
}

type resourceAssociationArgs struct {
	ResourceArn      string `pulumi:"resourceArn"`
	ResourceShareArn string `pulumi:"resourceShareArn"`
}

// The set of arguments for constructing a ResourceAssociation resource.
type ResourceAssociationArgs struct {
	ResourceArn      pulumi.StringInput
	ResourceShareArn pulumi.StringInput
}

func (ResourceAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceAssociationArgs)(nil)).Elem()
}

type ResourceAssociationInput interface {
	pulumi.Input

	ToResourceAssociationOutput() ResourceAssociationOutput
	ToResourceAssociationOutputWithContext(ctx context.Context) ResourceAssociationOutput
}

func (*ResourceAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceAssociation)(nil)).Elem()
}

func (i *ResourceAssociation) ToResourceAssociationOutput() ResourceAssociationOutput {
	return i.ToResourceAssociationOutputWithContext(context.Background())
}

func (i *ResourceAssociation) ToResourceAssociationOutputWithContext(ctx context.Context) ResourceAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceAssociationOutput)
}

// ResourceAssociationArrayInput is an input type that accepts ResourceAssociationArray and ResourceAssociationArrayOutput values.
// You can construct a concrete instance of `ResourceAssociationArrayInput` via:
//
//	ResourceAssociationArray{ ResourceAssociationArgs{...} }
type ResourceAssociationArrayInput interface {
	pulumi.Input

	ToResourceAssociationArrayOutput() ResourceAssociationArrayOutput
	ToResourceAssociationArrayOutputWithContext(context.Context) ResourceAssociationArrayOutput
}

type ResourceAssociationArray []ResourceAssociationInput

func (ResourceAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceAssociation)(nil)).Elem()
}

func (i ResourceAssociationArray) ToResourceAssociationArrayOutput() ResourceAssociationArrayOutput {
	return i.ToResourceAssociationArrayOutputWithContext(context.Background())
}

func (i ResourceAssociationArray) ToResourceAssociationArrayOutputWithContext(ctx context.Context) ResourceAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceAssociationArrayOutput)
}

// ResourceAssociationMapInput is an input type that accepts ResourceAssociationMap and ResourceAssociationMapOutput values.
// You can construct a concrete instance of `ResourceAssociationMapInput` via:
//
//	ResourceAssociationMap{ "key": ResourceAssociationArgs{...} }
type ResourceAssociationMapInput interface {
	pulumi.Input

	ToResourceAssociationMapOutput() ResourceAssociationMapOutput
	ToResourceAssociationMapOutputWithContext(context.Context) ResourceAssociationMapOutput
}

type ResourceAssociationMap map[string]ResourceAssociationInput

func (ResourceAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceAssociation)(nil)).Elem()
}

func (i ResourceAssociationMap) ToResourceAssociationMapOutput() ResourceAssociationMapOutput {
	return i.ToResourceAssociationMapOutputWithContext(context.Background())
}

func (i ResourceAssociationMap) ToResourceAssociationMapOutputWithContext(ctx context.Context) ResourceAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceAssociationMapOutput)
}

type ResourceAssociationOutput struct{ *pulumi.OutputState }

func (ResourceAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceAssociation)(nil)).Elem()
}

func (o ResourceAssociationOutput) ToResourceAssociationOutput() ResourceAssociationOutput {
	return o
}

func (o ResourceAssociationOutput) ToResourceAssociationOutputWithContext(ctx context.Context) ResourceAssociationOutput {
	return o
}

func (o ResourceAssociationOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceAssociation) pulumi.StringOutput { return v.ResourceArn }).(pulumi.StringOutput)
}

func (o ResourceAssociationOutput) ResourceShareArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceAssociation) pulumi.StringOutput { return v.ResourceShareArn }).(pulumi.StringOutput)
}

type ResourceAssociationArrayOutput struct{ *pulumi.OutputState }

func (ResourceAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceAssociation)(nil)).Elem()
}

func (o ResourceAssociationArrayOutput) ToResourceAssociationArrayOutput() ResourceAssociationArrayOutput {
	return o
}

func (o ResourceAssociationArrayOutput) ToResourceAssociationArrayOutputWithContext(ctx context.Context) ResourceAssociationArrayOutput {
	return o
}

func (o ResourceAssociationArrayOutput) Index(i pulumi.IntInput) ResourceAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceAssociation {
		return vs[0].([]*ResourceAssociation)[vs[1].(int)]
	}).(ResourceAssociationOutput)
}

type ResourceAssociationMapOutput struct{ *pulumi.OutputState }

func (ResourceAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceAssociation)(nil)).Elem()
}

func (o ResourceAssociationMapOutput) ToResourceAssociationMapOutput() ResourceAssociationMapOutput {
	return o
}

func (o ResourceAssociationMapOutput) ToResourceAssociationMapOutputWithContext(ctx context.Context) ResourceAssociationMapOutput {
	return o
}

func (o ResourceAssociationMapOutput) MapIndex(k pulumi.StringInput) ResourceAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceAssociation {
		return vs[0].(map[string]*ResourceAssociation)[vs[1].(string)]
	}).(ResourceAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceAssociationInput)(nil)).Elem(), &ResourceAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceAssociationArrayInput)(nil)).Elem(), ResourceAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceAssociationMapInput)(nil)).Elem(), ResourceAssociationMap{})
	pulumi.RegisterOutputType(ResourceAssociationOutput{})
	pulumi.RegisterOutputType(ResourceAssociationArrayOutput{})
	pulumi.RegisterOutputType(ResourceAssociationMapOutput{})
}
