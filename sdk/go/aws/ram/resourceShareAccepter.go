// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ResourceShareAccepter struct {
	pulumi.CustomResourceState

	InvitationArn     pulumi.StringOutput      `pulumi:"invitationArn"`
	ReceiverAccountId pulumi.StringOutput      `pulumi:"receiverAccountId"`
	Resources         pulumi.StringArrayOutput `pulumi:"resources"`
	SenderAccountId   pulumi.StringOutput      `pulumi:"senderAccountId"`
	ShareArn          pulumi.StringOutput      `pulumi:"shareArn"`
	ShareId           pulumi.StringOutput      `pulumi:"shareId"`
	ShareName         pulumi.StringOutput      `pulumi:"shareName"`
	Status            pulumi.StringOutput      `pulumi:"status"`
}

// NewResourceShareAccepter registers a new resource with the given unique name, arguments, and options.
func NewResourceShareAccepter(ctx *pulumi.Context,
	name string, args *ResourceShareAccepterArgs, opts ...pulumi.ResourceOption) (*ResourceShareAccepter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ShareArn == nil {
		return nil, errors.New("invalid value for required argument 'ShareArn'")
	}
	var resource ResourceShareAccepter
	err := ctx.RegisterResource("aws:ram/resourceShareAccepter:ResourceShareAccepter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceShareAccepter gets an existing ResourceShareAccepter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceShareAccepter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceShareAccepterState, opts ...pulumi.ResourceOption) (*ResourceShareAccepter, error) {
	var resource ResourceShareAccepter
	err := ctx.ReadResource("aws:ram/resourceShareAccepter:ResourceShareAccepter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceShareAccepter resources.
type resourceShareAccepterState struct {
	InvitationArn     *string  `pulumi:"invitationArn"`
	ReceiverAccountId *string  `pulumi:"receiverAccountId"`
	Resources         []string `pulumi:"resources"`
	SenderAccountId   *string  `pulumi:"senderAccountId"`
	ShareArn          *string  `pulumi:"shareArn"`
	ShareId           *string  `pulumi:"shareId"`
	ShareName         *string  `pulumi:"shareName"`
	Status            *string  `pulumi:"status"`
}

type ResourceShareAccepterState struct {
	InvitationArn     pulumi.StringPtrInput
	ReceiverAccountId pulumi.StringPtrInput
	Resources         pulumi.StringArrayInput
	SenderAccountId   pulumi.StringPtrInput
	ShareArn          pulumi.StringPtrInput
	ShareId           pulumi.StringPtrInput
	ShareName         pulumi.StringPtrInput
	Status            pulumi.StringPtrInput
}

func (ResourceShareAccepterState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceShareAccepterState)(nil)).Elem()
}

type resourceShareAccepterArgs struct {
	ShareArn string `pulumi:"shareArn"`
}

// The set of arguments for constructing a ResourceShareAccepter resource.
type ResourceShareAccepterArgs struct {
	ShareArn pulumi.StringInput
}

func (ResourceShareAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceShareAccepterArgs)(nil)).Elem()
}

type ResourceShareAccepterInput interface {
	pulumi.Input

	ToResourceShareAccepterOutput() ResourceShareAccepterOutput
	ToResourceShareAccepterOutputWithContext(ctx context.Context) ResourceShareAccepterOutput
}

func (*ResourceShareAccepter) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceShareAccepter)(nil)).Elem()
}

func (i *ResourceShareAccepter) ToResourceShareAccepterOutput() ResourceShareAccepterOutput {
	return i.ToResourceShareAccepterOutputWithContext(context.Background())
}

func (i *ResourceShareAccepter) ToResourceShareAccepterOutputWithContext(ctx context.Context) ResourceShareAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceShareAccepterOutput)
}

// ResourceShareAccepterArrayInput is an input type that accepts ResourceShareAccepterArray and ResourceShareAccepterArrayOutput values.
// You can construct a concrete instance of `ResourceShareAccepterArrayInput` via:
//
//	ResourceShareAccepterArray{ ResourceShareAccepterArgs{...} }
type ResourceShareAccepterArrayInput interface {
	pulumi.Input

	ToResourceShareAccepterArrayOutput() ResourceShareAccepterArrayOutput
	ToResourceShareAccepterArrayOutputWithContext(context.Context) ResourceShareAccepterArrayOutput
}

type ResourceShareAccepterArray []ResourceShareAccepterInput

func (ResourceShareAccepterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceShareAccepter)(nil)).Elem()
}

func (i ResourceShareAccepterArray) ToResourceShareAccepterArrayOutput() ResourceShareAccepterArrayOutput {
	return i.ToResourceShareAccepterArrayOutputWithContext(context.Background())
}

func (i ResourceShareAccepterArray) ToResourceShareAccepterArrayOutputWithContext(ctx context.Context) ResourceShareAccepterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceShareAccepterArrayOutput)
}

// ResourceShareAccepterMapInput is an input type that accepts ResourceShareAccepterMap and ResourceShareAccepterMapOutput values.
// You can construct a concrete instance of `ResourceShareAccepterMapInput` via:
//
//	ResourceShareAccepterMap{ "key": ResourceShareAccepterArgs{...} }
type ResourceShareAccepterMapInput interface {
	pulumi.Input

	ToResourceShareAccepterMapOutput() ResourceShareAccepterMapOutput
	ToResourceShareAccepterMapOutputWithContext(context.Context) ResourceShareAccepterMapOutput
}

type ResourceShareAccepterMap map[string]ResourceShareAccepterInput

func (ResourceShareAccepterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceShareAccepter)(nil)).Elem()
}

func (i ResourceShareAccepterMap) ToResourceShareAccepterMapOutput() ResourceShareAccepterMapOutput {
	return i.ToResourceShareAccepterMapOutputWithContext(context.Background())
}

func (i ResourceShareAccepterMap) ToResourceShareAccepterMapOutputWithContext(ctx context.Context) ResourceShareAccepterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceShareAccepterMapOutput)
}

type ResourceShareAccepterOutput struct{ *pulumi.OutputState }

func (ResourceShareAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceShareAccepter)(nil)).Elem()
}

func (o ResourceShareAccepterOutput) ToResourceShareAccepterOutput() ResourceShareAccepterOutput {
	return o
}

func (o ResourceShareAccepterOutput) ToResourceShareAccepterOutputWithContext(ctx context.Context) ResourceShareAccepterOutput {
	return o
}

func (o ResourceShareAccepterOutput) InvitationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceShareAccepter) pulumi.StringOutput { return v.InvitationArn }).(pulumi.StringOutput)
}

func (o ResourceShareAccepterOutput) ReceiverAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceShareAccepter) pulumi.StringOutput { return v.ReceiverAccountId }).(pulumi.StringOutput)
}

func (o ResourceShareAccepterOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceShareAccepter) pulumi.StringArrayOutput { return v.Resources }).(pulumi.StringArrayOutput)
}

func (o ResourceShareAccepterOutput) SenderAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceShareAccepter) pulumi.StringOutput { return v.SenderAccountId }).(pulumi.StringOutput)
}

func (o ResourceShareAccepterOutput) ShareArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceShareAccepter) pulumi.StringOutput { return v.ShareArn }).(pulumi.StringOutput)
}

func (o ResourceShareAccepterOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceShareAccepter) pulumi.StringOutput { return v.ShareId }).(pulumi.StringOutput)
}

func (o ResourceShareAccepterOutput) ShareName() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceShareAccepter) pulumi.StringOutput { return v.ShareName }).(pulumi.StringOutput)
}

func (o ResourceShareAccepterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceShareAccepter) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type ResourceShareAccepterArrayOutput struct{ *pulumi.OutputState }

func (ResourceShareAccepterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceShareAccepter)(nil)).Elem()
}

func (o ResourceShareAccepterArrayOutput) ToResourceShareAccepterArrayOutput() ResourceShareAccepterArrayOutput {
	return o
}

func (o ResourceShareAccepterArrayOutput) ToResourceShareAccepterArrayOutputWithContext(ctx context.Context) ResourceShareAccepterArrayOutput {
	return o
}

func (o ResourceShareAccepterArrayOutput) Index(i pulumi.IntInput) ResourceShareAccepterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceShareAccepter {
		return vs[0].([]*ResourceShareAccepter)[vs[1].(int)]
	}).(ResourceShareAccepterOutput)
}

type ResourceShareAccepterMapOutput struct{ *pulumi.OutputState }

func (ResourceShareAccepterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceShareAccepter)(nil)).Elem()
}

func (o ResourceShareAccepterMapOutput) ToResourceShareAccepterMapOutput() ResourceShareAccepterMapOutput {
	return o
}

func (o ResourceShareAccepterMapOutput) ToResourceShareAccepterMapOutputWithContext(ctx context.Context) ResourceShareAccepterMapOutput {
	return o
}

func (o ResourceShareAccepterMapOutput) MapIndex(k pulumi.StringInput) ResourceShareAccepterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceShareAccepter {
		return vs[0].(map[string]*ResourceShareAccepter)[vs[1].(string)]
	}).(ResourceShareAccepterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceShareAccepterInput)(nil)).Elem(), &ResourceShareAccepter{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceShareAccepterArrayInput)(nil)).Elem(), ResourceShareAccepterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceShareAccepterMapInput)(nil)).Elem(), ResourceShareAccepterMap{})
	pulumi.RegisterOutputType(ResourceShareAccepterOutput{})
	pulumi.RegisterOutputType(ResourceShareAccepterArrayOutput{})
	pulumi.RegisterOutputType(ResourceShareAccepterMapOutput{})
}
