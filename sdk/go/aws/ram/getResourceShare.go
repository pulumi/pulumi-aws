// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupResourceShare(ctx *pulumi.Context, args *LookupResourceShareArgs, opts ...pulumi.InvokeOption) (*LookupResourceShareResult, error) {
	var rv LookupResourceShareResult
	err := ctx.Invoke("aws:ram/getResourceShare:getResourceShare", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResourceShare.
type LookupResourceShareArgs struct {
	Filters             []GetResourceShareFilter `pulumi:"filters"`
	Name                string                   `pulumi:"name"`
	ResourceOwner       string                   `pulumi:"resourceOwner"`
	ResourceShareStatus *string                  `pulumi:"resourceShareStatus"`
	Tags                map[string]string        `pulumi:"tags"`
}

// A collection of values returned by getResourceShare.
type LookupResourceShareResult struct {
	Arn     string                   `pulumi:"arn"`
	Filters []GetResourceShareFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string            `pulumi:"id"`
	Name                string            `pulumi:"name"`
	OwningAccountId     string            `pulumi:"owningAccountId"`
	ResourceOwner       string            `pulumi:"resourceOwner"`
	ResourceShareStatus *string           `pulumi:"resourceShareStatus"`
	Status              string            `pulumi:"status"`
	Tags                map[string]string `pulumi:"tags"`
}

func LookupResourceShareOutput(ctx *pulumi.Context, args LookupResourceShareOutputArgs, opts ...pulumi.InvokeOption) LookupResourceShareResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupResourceShareResult, error) {
			args := v.(LookupResourceShareArgs)
			r, err := LookupResourceShare(ctx, &args, opts...)
			var s LookupResourceShareResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupResourceShareResultOutput)
}

// A collection of arguments for invoking getResourceShare.
type LookupResourceShareOutputArgs struct {
	Filters             GetResourceShareFilterArrayInput `pulumi:"filters"`
	Name                pulumi.StringInput               `pulumi:"name"`
	ResourceOwner       pulumi.StringInput               `pulumi:"resourceOwner"`
	ResourceShareStatus pulumi.StringPtrInput            `pulumi:"resourceShareStatus"`
	Tags                pulumi.StringMapInput            `pulumi:"tags"`
}

func (LookupResourceShareOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceShareArgs)(nil)).Elem()
}

// A collection of values returned by getResourceShare.
type LookupResourceShareResultOutput struct{ *pulumi.OutputState }

func (LookupResourceShareResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceShareResult)(nil)).Elem()
}

func (o LookupResourceShareResultOutput) ToLookupResourceShareResultOutput() LookupResourceShareResultOutput {
	return o
}

func (o LookupResourceShareResultOutput) ToLookupResourceShareResultOutputWithContext(ctx context.Context) LookupResourceShareResultOutput {
	return o
}

func (o LookupResourceShareResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceShareResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupResourceShareResultOutput) Filters() GetResourceShareFilterArrayOutput {
	return o.ApplyT(func(v LookupResourceShareResult) []GetResourceShareFilter { return v.Filters }).(GetResourceShareFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupResourceShareResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceShareResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupResourceShareResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceShareResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupResourceShareResultOutput) OwningAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceShareResult) string { return v.OwningAccountId }).(pulumi.StringOutput)
}

func (o LookupResourceShareResultOutput) ResourceOwner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceShareResult) string { return v.ResourceOwner }).(pulumi.StringOutput)
}

func (o LookupResourceShareResultOutput) ResourceShareStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupResourceShareResult) *string { return v.ResourceShareStatus }).(pulumi.StringPtrOutput)
}

func (o LookupResourceShareResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceShareResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupResourceShareResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupResourceShareResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResourceShareResultOutput{})
}
