// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SecurityProfile struct {
	pulumi.CustomResourceState

	Arn                    pulumi.StringOutput      `pulumi:"arn"`
	Description            pulumi.StringPtrOutput   `pulumi:"description"`
	InstanceId             pulumi.StringOutput      `pulumi:"instanceId"`
	Name                   pulumi.StringOutput      `pulumi:"name"`
	OrganizationResourceId pulumi.StringOutput      `pulumi:"organizationResourceId"`
	Permissions            pulumi.StringArrayOutput `pulumi:"permissions"`
	SecurityProfileId      pulumi.StringOutput      `pulumi:"securityProfileId"`
	Tags                   pulumi.StringMapOutput   `pulumi:"tags"`
	TagsAll                pulumi.StringMapOutput   `pulumi:"tagsAll"`
}

// NewSecurityProfile registers a new resource with the given unique name, arguments, and options.
func NewSecurityProfile(ctx *pulumi.Context,
	name string, args *SecurityProfileArgs, opts ...pulumi.ResourceOption) (*SecurityProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	var resource SecurityProfile
	err := ctx.RegisterResource("aws:connect/securityProfile:SecurityProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityProfile gets an existing SecurityProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityProfileState, opts ...pulumi.ResourceOption) (*SecurityProfile, error) {
	var resource SecurityProfile
	err := ctx.ReadResource("aws:connect/securityProfile:SecurityProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityProfile resources.
type securityProfileState struct {
	Arn                    *string           `pulumi:"arn"`
	Description            *string           `pulumi:"description"`
	InstanceId             *string           `pulumi:"instanceId"`
	Name                   *string           `pulumi:"name"`
	OrganizationResourceId *string           `pulumi:"organizationResourceId"`
	Permissions            []string          `pulumi:"permissions"`
	SecurityProfileId      *string           `pulumi:"securityProfileId"`
	Tags                   map[string]string `pulumi:"tags"`
	TagsAll                map[string]string `pulumi:"tagsAll"`
}

type SecurityProfileState struct {
	Arn                    pulumi.StringPtrInput
	Description            pulumi.StringPtrInput
	InstanceId             pulumi.StringPtrInput
	Name                   pulumi.StringPtrInput
	OrganizationResourceId pulumi.StringPtrInput
	Permissions            pulumi.StringArrayInput
	SecurityProfileId      pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
	TagsAll                pulumi.StringMapInput
}

func (SecurityProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityProfileState)(nil)).Elem()
}

type securityProfileArgs struct {
	Description *string           `pulumi:"description"`
	InstanceId  string            `pulumi:"instanceId"`
	Name        *string           `pulumi:"name"`
	Permissions []string          `pulumi:"permissions"`
	Tags        map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a SecurityProfile resource.
type SecurityProfileArgs struct {
	Description pulumi.StringPtrInput
	InstanceId  pulumi.StringInput
	Name        pulumi.StringPtrInput
	Permissions pulumi.StringArrayInput
	Tags        pulumi.StringMapInput
}

func (SecurityProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityProfileArgs)(nil)).Elem()
}

type SecurityProfileInput interface {
	pulumi.Input

	ToSecurityProfileOutput() SecurityProfileOutput
	ToSecurityProfileOutputWithContext(ctx context.Context) SecurityProfileOutput
}

func (*SecurityProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfile)(nil)).Elem()
}

func (i *SecurityProfile) ToSecurityProfileOutput() SecurityProfileOutput {
	return i.ToSecurityProfileOutputWithContext(context.Background())
}

func (i *SecurityProfile) ToSecurityProfileOutputWithContext(ctx context.Context) SecurityProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileOutput)
}

// SecurityProfileArrayInput is an input type that accepts SecurityProfileArray and SecurityProfileArrayOutput values.
// You can construct a concrete instance of `SecurityProfileArrayInput` via:
//
//	SecurityProfileArray{ SecurityProfileArgs{...} }
type SecurityProfileArrayInput interface {
	pulumi.Input

	ToSecurityProfileArrayOutput() SecurityProfileArrayOutput
	ToSecurityProfileArrayOutputWithContext(context.Context) SecurityProfileArrayOutput
}

type SecurityProfileArray []SecurityProfileInput

func (SecurityProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityProfile)(nil)).Elem()
}

func (i SecurityProfileArray) ToSecurityProfileArrayOutput() SecurityProfileArrayOutput {
	return i.ToSecurityProfileArrayOutputWithContext(context.Background())
}

func (i SecurityProfileArray) ToSecurityProfileArrayOutputWithContext(ctx context.Context) SecurityProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileArrayOutput)
}

// SecurityProfileMapInput is an input type that accepts SecurityProfileMap and SecurityProfileMapOutput values.
// You can construct a concrete instance of `SecurityProfileMapInput` via:
//
//	SecurityProfileMap{ "key": SecurityProfileArgs{...} }
type SecurityProfileMapInput interface {
	pulumi.Input

	ToSecurityProfileMapOutput() SecurityProfileMapOutput
	ToSecurityProfileMapOutputWithContext(context.Context) SecurityProfileMapOutput
}

type SecurityProfileMap map[string]SecurityProfileInput

func (SecurityProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityProfile)(nil)).Elem()
}

func (i SecurityProfileMap) ToSecurityProfileMapOutput() SecurityProfileMapOutput {
	return i.ToSecurityProfileMapOutputWithContext(context.Background())
}

func (i SecurityProfileMap) ToSecurityProfileMapOutputWithContext(ctx context.Context) SecurityProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMapOutput)
}

type SecurityProfileOutput struct{ *pulumi.OutputState }

func (SecurityProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfile)(nil)).Elem()
}

func (o SecurityProfileOutput) ToSecurityProfileOutput() SecurityProfileOutput {
	return o
}

func (o SecurityProfileOutput) ToSecurityProfileOutputWithContext(ctx context.Context) SecurityProfileOutput {
	return o
}

func (o SecurityProfileOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityProfile) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o SecurityProfileOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityProfile) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SecurityProfileOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityProfile) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

func (o SecurityProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SecurityProfileOutput) OrganizationResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityProfile) pulumi.StringOutput { return v.OrganizationResourceId }).(pulumi.StringOutput)
}

func (o SecurityProfileOutput) Permissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityProfile) pulumi.StringArrayOutput { return v.Permissions }).(pulumi.StringArrayOutput)
}

func (o SecurityProfileOutput) SecurityProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityProfile) pulumi.StringOutput { return v.SecurityProfileId }).(pulumi.StringOutput)
}

func (o SecurityProfileOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecurityProfile) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o SecurityProfileOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecurityProfile) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type SecurityProfileArrayOutput struct{ *pulumi.OutputState }

func (SecurityProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityProfile)(nil)).Elem()
}

func (o SecurityProfileArrayOutput) ToSecurityProfileArrayOutput() SecurityProfileArrayOutput {
	return o
}

func (o SecurityProfileArrayOutput) ToSecurityProfileArrayOutputWithContext(ctx context.Context) SecurityProfileArrayOutput {
	return o
}

func (o SecurityProfileArrayOutput) Index(i pulumi.IntInput) SecurityProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityProfile {
		return vs[0].([]*SecurityProfile)[vs[1].(int)]
	}).(SecurityProfileOutput)
}

type SecurityProfileMapOutput struct{ *pulumi.OutputState }

func (SecurityProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityProfile)(nil)).Elem()
}

func (o SecurityProfileMapOutput) ToSecurityProfileMapOutput() SecurityProfileMapOutput {
	return o
}

func (o SecurityProfileMapOutput) ToSecurityProfileMapOutputWithContext(ctx context.Context) SecurityProfileMapOutput {
	return o
}

func (o SecurityProfileMapOutput) MapIndex(k pulumi.StringInput) SecurityProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityProfile {
		return vs[0].(map[string]*SecurityProfile)[vs[1].(string)]
	}).(SecurityProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileInput)(nil)).Elem(), &SecurityProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileArrayInput)(nil)).Elem(), SecurityProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileMapInput)(nil)).Elem(), SecurityProfileMap{})
	pulumi.RegisterOutputType(SecurityProfileOutput{})
	pulumi.RegisterOutputType(SecurityProfileArrayOutput{})
	pulumi.RegisterOutputType(SecurityProfileMapOutput{})
}
