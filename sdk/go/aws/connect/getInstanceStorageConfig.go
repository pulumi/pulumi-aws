// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about a specific Amazon Connect Instance Storage Config.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/connect"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := connect.LookupInstanceStorageConfig(ctx, &connect.LookupInstanceStorageConfigArgs{
//				AssociationId: "1234567890123456789012345678901234567890123456789012345678901234",
//				InstanceId:    "aaaaaaaa-bbbb-cccc-dddd-111111111111",
//				ResourceType:  "CONTACT_TRACE_RECORDS",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInstanceStorageConfig(ctx *pulumi.Context, args *LookupInstanceStorageConfigArgs, opts ...pulumi.InvokeOption) (*LookupInstanceStorageConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceStorageConfigResult
	err := ctx.Invoke("aws:connect/getInstanceStorageConfig:getInstanceStorageConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceStorageConfig.
type LookupInstanceStorageConfigArgs struct {
	// The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
	AssociationId string `pulumi:"associationId"`
	// Reference to the hosting Amazon Connect Instance
	InstanceId string `pulumi:"instanceId"`
	// A valid resource type. Valid Values: `AGENT_EVENTS` | `ATTACHMENTS` | `CALL_RECORDINGS` | `CHAT_TRANSCRIPTS` | `CONTACT_EVALUATIONS` | `CONTACT_TRACE_RECORDS` | `MEDIA_STREAMS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS` | `SCHEDULED_REPORTS` |  `SCREEN_RECORDINGS`.
	ResourceType string `pulumi:"resourceType"`
}

// A collection of values returned by getInstanceStorageConfig.
type LookupInstanceStorageConfigResult struct {
	AssociationId string `pulumi:"associationId"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	InstanceId   string `pulumi:"instanceId"`
	ResourceType string `pulumi:"resourceType"`
	// Specifies the storage configuration options for the Connect Instance. Documented below.
	StorageConfigs []GetInstanceStorageConfigStorageConfig `pulumi:"storageConfigs"`
}

func LookupInstanceStorageConfigOutput(ctx *pulumi.Context, args LookupInstanceStorageConfigOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceStorageConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInstanceStorageConfigResult, error) {
			args := v.(LookupInstanceStorageConfigArgs)
			r, err := LookupInstanceStorageConfig(ctx, &args, opts...)
			var s LookupInstanceStorageConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInstanceStorageConfigResultOutput)
}

// A collection of arguments for invoking getInstanceStorageConfig.
type LookupInstanceStorageConfigOutputArgs struct {
	// The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
	AssociationId pulumi.StringInput `pulumi:"associationId"`
	// Reference to the hosting Amazon Connect Instance
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// A valid resource type. Valid Values: `AGENT_EVENTS` | `ATTACHMENTS` | `CALL_RECORDINGS` | `CHAT_TRANSCRIPTS` | `CONTACT_EVALUATIONS` | `CONTACT_TRACE_RECORDS` | `MEDIA_STREAMS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS` | `SCHEDULED_REPORTS` |  `SCREEN_RECORDINGS`.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (LookupInstanceStorageConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceStorageConfigArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceStorageConfig.
type LookupInstanceStorageConfigResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceStorageConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceStorageConfigResult)(nil)).Elem()
}

func (o LookupInstanceStorageConfigResultOutput) ToLookupInstanceStorageConfigResultOutput() LookupInstanceStorageConfigResultOutput {
	return o
}

func (o LookupInstanceStorageConfigResultOutput) ToLookupInstanceStorageConfigResultOutputWithContext(ctx context.Context) LookupInstanceStorageConfigResultOutput {
	return o
}

func (o LookupInstanceStorageConfigResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupInstanceStorageConfigResult] {
	return pulumix.Output[LookupInstanceStorageConfigResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupInstanceStorageConfigResultOutput) AssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceStorageConfigResult) string { return v.AssociationId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstanceStorageConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceStorageConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInstanceStorageConfigResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceStorageConfigResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o LookupInstanceStorageConfigResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceStorageConfigResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Specifies the storage configuration options for the Connect Instance. Documented below.
func (o LookupInstanceStorageConfigResultOutput) StorageConfigs() GetInstanceStorageConfigStorageConfigArrayOutput {
	return o.ApplyT(func(v LookupInstanceStorageConfigResult) []GetInstanceStorageConfigStorageConfig {
		return v.StorageConfigs
	}).(GetInstanceStorageConfigStorageConfigArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceStorageConfigResultOutput{})
}
