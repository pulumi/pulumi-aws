// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides details about a specific Amazon Connect Queue.
//
// ## Example Usage
//
// By `name`
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/connect"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := connect.LookupQueue(ctx, &connect.LookupQueueArgs{
// 			InstanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
// 			Name:       pulumi.StringRef("Example"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// By `queueId`
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/connect"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := connect.LookupQueue(ctx, &connect.LookupQueueArgs{
// 			InstanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
// 			QueueId:    pulumi.StringRef("cccccccc-bbbb-cccc-dddd-111111111111"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupQueue(ctx *pulumi.Context, args *LookupQueueArgs, opts ...pulumi.InvokeOption) (*LookupQueueResult, error) {
	var rv LookupQueueResult
	err := ctx.Invoke("aws:connect/getQueue:getQueue", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQueue.
type LookupQueueArgs struct {
	// Reference to the hosting Amazon Connect Instance
	InstanceId string `pulumi:"instanceId"`
	// Returns information on a specific Queue by name
	Name *string `pulumi:"name"`
	// Returns information on a specific Queue by Queue id
	QueueId *string `pulumi:"queueId"`
	// A map of tags assigned to the Queue.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getQueue.
type LookupQueueResult struct {
	// The Amazon Resource Name (ARN) of the Queue.
	Arn string `pulumi:"arn"`
	// Specifies the description of the Queue.
	Description string `pulumi:"description"`
	// Specifies the identifier of the Hours of Operation.
	HoursOfOperationId string `pulumi:"hoursOfOperationId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
	MaxContacts int    `pulumi:"maxContacts"`
	Name        string `pulumi:"name"`
	// A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
	OutboundCallerConfigs []GetQueueOutboundCallerConfig `pulumi:"outboundCallerConfigs"`
	// The identifier for the Queue.
	QueueId string `pulumi:"queueId"`
	// Specifies the description of the Queue. Values are `ENABLED` or `DISABLED`.
	Status string `pulumi:"status"`
	// A map of tags assigned to the Queue.
	Tags map[string]string `pulumi:"tags"`
}

func LookupQueueOutput(ctx *pulumi.Context, args LookupQueueOutputArgs, opts ...pulumi.InvokeOption) LookupQueueResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupQueueResult, error) {
			args := v.(LookupQueueArgs)
			r, err := LookupQueue(ctx, &args, opts...)
			var s LookupQueueResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupQueueResultOutput)
}

// A collection of arguments for invoking getQueue.
type LookupQueueOutputArgs struct {
	// Reference to the hosting Amazon Connect Instance
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Returns information on a specific Queue by name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Returns information on a specific Queue by Queue id
	QueueId pulumi.StringPtrInput `pulumi:"queueId"`
	// A map of tags assigned to the Queue.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupQueueOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueueArgs)(nil)).Elem()
}

// A collection of values returned by getQueue.
type LookupQueueResultOutput struct{ *pulumi.OutputState }

func (LookupQueueResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueueResult)(nil)).Elem()
}

func (o LookupQueueResultOutput) ToLookupQueueResultOutput() LookupQueueResultOutput {
	return o
}

func (o LookupQueueResultOutput) ToLookupQueueResultOutputWithContext(ctx context.Context) LookupQueueResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the Queue.
func (o LookupQueueResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Specifies the description of the Queue.
func (o LookupQueueResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueResult) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies the identifier of the Hours of Operation.
func (o LookupQueueResultOutput) HoursOfOperationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueResult) string { return v.HoursOfOperationId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupQueueResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupQueueResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
func (o LookupQueueResultOutput) MaxContacts() pulumi.IntOutput {
	return o.ApplyT(func(v LookupQueueResult) int { return v.MaxContacts }).(pulumi.IntOutput)
}

func (o LookupQueueResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueResult) string { return v.Name }).(pulumi.StringOutput)
}

// A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
func (o LookupQueueResultOutput) OutboundCallerConfigs() GetQueueOutboundCallerConfigArrayOutput {
	return o.ApplyT(func(v LookupQueueResult) []GetQueueOutboundCallerConfig { return v.OutboundCallerConfigs }).(GetQueueOutboundCallerConfigArrayOutput)
}

// The identifier for the Queue.
func (o LookupQueueResultOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueResult) string { return v.QueueId }).(pulumi.StringOutput)
}

// Specifies the description of the Queue. Values are `ENABLED` or `DISABLED`.
func (o LookupQueueResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueResult) string { return v.Status }).(pulumi.StringOutput)
}

// A map of tags assigned to the Queue.
func (o LookupQueueResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupQueueResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQueueResultOutput{})
}
