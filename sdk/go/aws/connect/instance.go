// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Instance struct {
	pulumi.CustomResourceState

	Arn                          pulumi.StringOutput    `pulumi:"arn"`
	AutoResolveBestVoicesEnabled pulumi.BoolPtrOutput   `pulumi:"autoResolveBestVoicesEnabled"`
	ContactFlowLogsEnabled       pulumi.BoolPtrOutput   `pulumi:"contactFlowLogsEnabled"`
	ContactLensEnabled           pulumi.BoolPtrOutput   `pulumi:"contactLensEnabled"`
	CreatedTime                  pulumi.StringOutput    `pulumi:"createdTime"`
	DirectoryId                  pulumi.StringPtrOutput `pulumi:"directoryId"`
	EarlyMediaEnabled            pulumi.BoolPtrOutput   `pulumi:"earlyMediaEnabled"`
	IdentityManagementType       pulumi.StringOutput    `pulumi:"identityManagementType"`
	InboundCallsEnabled          pulumi.BoolOutput      `pulumi:"inboundCallsEnabled"`
	InstanceAlias                pulumi.StringPtrOutput `pulumi:"instanceAlias"`
	MultiPartyConferenceEnabled  pulumi.BoolPtrOutput   `pulumi:"multiPartyConferenceEnabled"`
	OutboundCallsEnabled         pulumi.BoolOutput      `pulumi:"outboundCallsEnabled"`
	ServiceRole                  pulumi.StringOutput    `pulumi:"serviceRole"`
	Status                       pulumi.StringOutput    `pulumi:"status"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdentityManagementType == nil {
		return nil, errors.New("invalid value for required argument 'IdentityManagementType'")
	}
	if args.InboundCallsEnabled == nil {
		return nil, errors.New("invalid value for required argument 'InboundCallsEnabled'")
	}
	if args.OutboundCallsEnabled == nil {
		return nil, errors.New("invalid value for required argument 'OutboundCallsEnabled'")
	}
	var resource Instance
	err := ctx.RegisterResource("aws:connect/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("aws:connect/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	Arn                          *string `pulumi:"arn"`
	AutoResolveBestVoicesEnabled *bool   `pulumi:"autoResolveBestVoicesEnabled"`
	ContactFlowLogsEnabled       *bool   `pulumi:"contactFlowLogsEnabled"`
	ContactLensEnabled           *bool   `pulumi:"contactLensEnabled"`
	CreatedTime                  *string `pulumi:"createdTime"`
	DirectoryId                  *string `pulumi:"directoryId"`
	EarlyMediaEnabled            *bool   `pulumi:"earlyMediaEnabled"`
	IdentityManagementType       *string `pulumi:"identityManagementType"`
	InboundCallsEnabled          *bool   `pulumi:"inboundCallsEnabled"`
	InstanceAlias                *string `pulumi:"instanceAlias"`
	MultiPartyConferenceEnabled  *bool   `pulumi:"multiPartyConferenceEnabled"`
	OutboundCallsEnabled         *bool   `pulumi:"outboundCallsEnabled"`
	ServiceRole                  *string `pulumi:"serviceRole"`
	Status                       *string `pulumi:"status"`
}

type InstanceState struct {
	Arn                          pulumi.StringPtrInput
	AutoResolveBestVoicesEnabled pulumi.BoolPtrInput
	ContactFlowLogsEnabled       pulumi.BoolPtrInput
	ContactLensEnabled           pulumi.BoolPtrInput
	CreatedTime                  pulumi.StringPtrInput
	DirectoryId                  pulumi.StringPtrInput
	EarlyMediaEnabled            pulumi.BoolPtrInput
	IdentityManagementType       pulumi.StringPtrInput
	InboundCallsEnabled          pulumi.BoolPtrInput
	InstanceAlias                pulumi.StringPtrInput
	MultiPartyConferenceEnabled  pulumi.BoolPtrInput
	OutboundCallsEnabled         pulumi.BoolPtrInput
	ServiceRole                  pulumi.StringPtrInput
	Status                       pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	AutoResolveBestVoicesEnabled *bool   `pulumi:"autoResolveBestVoicesEnabled"`
	ContactFlowLogsEnabled       *bool   `pulumi:"contactFlowLogsEnabled"`
	ContactLensEnabled           *bool   `pulumi:"contactLensEnabled"`
	DirectoryId                  *string `pulumi:"directoryId"`
	EarlyMediaEnabled            *bool   `pulumi:"earlyMediaEnabled"`
	IdentityManagementType       string  `pulumi:"identityManagementType"`
	InboundCallsEnabled          bool    `pulumi:"inboundCallsEnabled"`
	InstanceAlias                *string `pulumi:"instanceAlias"`
	MultiPartyConferenceEnabled  *bool   `pulumi:"multiPartyConferenceEnabled"`
	OutboundCallsEnabled         bool    `pulumi:"outboundCallsEnabled"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	AutoResolveBestVoicesEnabled pulumi.BoolPtrInput
	ContactFlowLogsEnabled       pulumi.BoolPtrInput
	ContactLensEnabled           pulumi.BoolPtrInput
	DirectoryId                  pulumi.StringPtrInput
	EarlyMediaEnabled            pulumi.BoolPtrInput
	IdentityManagementType       pulumi.StringInput
	InboundCallsEnabled          pulumi.BoolInput
	InstanceAlias                pulumi.StringPtrInput
	MultiPartyConferenceEnabled  pulumi.BoolPtrInput
	OutboundCallsEnabled         pulumi.BoolInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

func (o InstanceOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o InstanceOutput) AutoResolveBestVoicesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.AutoResolveBestVoicesEnabled }).(pulumi.BoolPtrOutput)
}

func (o InstanceOutput) ContactFlowLogsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.ContactFlowLogsEnabled }).(pulumi.BoolPtrOutput)
}

func (o InstanceOutput) ContactLensEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.ContactLensEnabled }).(pulumi.BoolPtrOutput)
}

func (o InstanceOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

func (o InstanceOutput) DirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.DirectoryId }).(pulumi.StringPtrOutput)
}

func (o InstanceOutput) EarlyMediaEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.EarlyMediaEnabled }).(pulumi.BoolPtrOutput)
}

func (o InstanceOutput) IdentityManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.IdentityManagementType }).(pulumi.StringOutput)
}

func (o InstanceOutput) InboundCallsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.InboundCallsEnabled }).(pulumi.BoolOutput)
}

func (o InstanceOutput) InstanceAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.InstanceAlias }).(pulumi.StringPtrOutput)
}

func (o InstanceOutput) MultiPartyConferenceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.MultiPartyConferenceEnabled }).(pulumi.BoolPtrOutput)
}

func (o InstanceOutput) OutboundCallsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.OutboundCallsEnabled }).(pulumi.BoolOutput)
}

func (o InstanceOutput) ServiceRole() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ServiceRole }).(pulumi.StringOutput)
}

func (o InstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
