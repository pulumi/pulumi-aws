// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupBotAssociation(ctx *pulumi.Context, args *LookupBotAssociationArgs, opts ...pulumi.InvokeOption) (*LookupBotAssociationResult, error) {
	var rv LookupBotAssociationResult
	err := ctx.Invoke("aws:connect/getBotAssociation:getBotAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBotAssociation.
type LookupBotAssociationArgs struct {
	InstanceId string                  `pulumi:"instanceId"`
	LexBot     GetBotAssociationLexBot `pulumi:"lexBot"`
}

// A collection of values returned by getBotAssociation.
type LookupBotAssociationResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string                  `pulumi:"id"`
	InstanceId string                  `pulumi:"instanceId"`
	LexBot     GetBotAssociationLexBot `pulumi:"lexBot"`
}

func LookupBotAssociationOutput(ctx *pulumi.Context, args LookupBotAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupBotAssociationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBotAssociationResult, error) {
			args := v.(LookupBotAssociationArgs)
			r, err := LookupBotAssociation(ctx, &args, opts...)
			var s LookupBotAssociationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBotAssociationResultOutput)
}

// A collection of arguments for invoking getBotAssociation.
type LookupBotAssociationOutputArgs struct {
	InstanceId pulumi.StringInput           `pulumi:"instanceId"`
	LexBot     GetBotAssociationLexBotInput `pulumi:"lexBot"`
}

func (LookupBotAssociationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBotAssociationArgs)(nil)).Elem()
}

// A collection of values returned by getBotAssociation.
type LookupBotAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupBotAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBotAssociationResult)(nil)).Elem()
}

func (o LookupBotAssociationResultOutput) ToLookupBotAssociationResultOutput() LookupBotAssociationResultOutput {
	return o
}

func (o LookupBotAssociationResultOutput) ToLookupBotAssociationResultOutputWithContext(ctx context.Context) LookupBotAssociationResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBotAssociationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotAssociationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBotAssociationResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotAssociationResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o LookupBotAssociationResultOutput) LexBot() GetBotAssociationLexBotOutput {
	return o.ApplyT(func(v LookupBotAssociationResult) GetBotAssociationLexBot { return v.LexBot }).(GetBotAssociationLexBotOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBotAssociationResultOutput{})
}
