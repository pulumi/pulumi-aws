// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about a specific Lex (V1) Bot associated with an Amazon Connect instance.
//
// ## Example Usage
// ### By name
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/connect"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := connect.LookupBotAssociation(ctx, &connect.LookupBotAssociationArgs{
//				InstanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
//				LexBot: connect.GetBotAssociationLexBot{
//					Name: "Test",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBotAssociation(ctx *pulumi.Context, args *LookupBotAssociationArgs, opts ...pulumi.InvokeOption) (*LookupBotAssociationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBotAssociationResult
	err := ctx.Invoke("aws:connect/getBotAssociation:getBotAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBotAssociation.
type LookupBotAssociationArgs struct {
	// Identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
	InstanceId string `pulumi:"instanceId"`
	// Configuration information of an Amazon Lex (V1) bot. Detailed below.
	LexBot GetBotAssociationLexBot `pulumi:"lexBot"`
}

// A collection of values returned by getBotAssociation.
type LookupBotAssociationResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string                  `pulumi:"id"`
	InstanceId string                  `pulumi:"instanceId"`
	LexBot     GetBotAssociationLexBot `pulumi:"lexBot"`
}

func LookupBotAssociationOutput(ctx *pulumi.Context, args LookupBotAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupBotAssociationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBotAssociationResult, error) {
			args := v.(LookupBotAssociationArgs)
			r, err := LookupBotAssociation(ctx, &args, opts...)
			var s LookupBotAssociationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBotAssociationResultOutput)
}

// A collection of arguments for invoking getBotAssociation.
type LookupBotAssociationOutputArgs struct {
	// Identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Configuration information of an Amazon Lex (V1) bot. Detailed below.
	LexBot GetBotAssociationLexBotInput `pulumi:"lexBot"`
}

func (LookupBotAssociationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBotAssociationArgs)(nil)).Elem()
}

// A collection of values returned by getBotAssociation.
type LookupBotAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupBotAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBotAssociationResult)(nil)).Elem()
}

func (o LookupBotAssociationResultOutput) ToLookupBotAssociationResultOutput() LookupBotAssociationResultOutput {
	return o
}

func (o LookupBotAssociationResultOutput) ToLookupBotAssociationResultOutputWithContext(ctx context.Context) LookupBotAssociationResultOutput {
	return o
}

func (o LookupBotAssociationResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupBotAssociationResult] {
	return pulumix.Output[LookupBotAssociationResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBotAssociationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotAssociationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBotAssociationResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotAssociationResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o LookupBotAssociationResultOutput) LexBot() GetBotAssociationLexBotOutput {
	return o.ApplyT(func(v LookupBotAssociationResult) GetBotAssociationLexBot { return v.LexBot }).(GetBotAssociationLexBotOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBotAssociationResultOutput{})
}
