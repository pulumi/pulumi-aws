// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PhoneNumber struct {
	pulumi.CustomResourceState

	Arn         pulumi.StringOutput          `pulumi:"arn"`
	CountryCode pulumi.StringOutput          `pulumi:"countryCode"`
	Description pulumi.StringPtrOutput       `pulumi:"description"`
	PhoneNumber pulumi.StringOutput          `pulumi:"phoneNumber"`
	Prefix      pulumi.StringPtrOutput       `pulumi:"prefix"`
	Statuses    PhoneNumberStatusArrayOutput `pulumi:"statuses"`
	Tags        pulumi.StringMapOutput       `pulumi:"tags"`
	TagsAll     pulumi.StringMapOutput       `pulumi:"tagsAll"`
	TargetArn   pulumi.StringOutput          `pulumi:"targetArn"`
	Type        pulumi.StringOutput          `pulumi:"type"`
}

// NewPhoneNumber registers a new resource with the given unique name, arguments, and options.
func NewPhoneNumber(ctx *pulumi.Context,
	name string, args *PhoneNumberArgs, opts ...pulumi.ResourceOption) (*PhoneNumber, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CountryCode == nil {
		return nil, errors.New("invalid value for required argument 'CountryCode'")
	}
	if args.TargetArn == nil {
		return nil, errors.New("invalid value for required argument 'TargetArn'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource PhoneNumber
	err := ctx.RegisterResource("aws:connect/phoneNumber:PhoneNumber", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPhoneNumber gets an existing PhoneNumber resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPhoneNumber(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PhoneNumberState, opts ...pulumi.ResourceOption) (*PhoneNumber, error) {
	var resource PhoneNumber
	err := ctx.ReadResource("aws:connect/phoneNumber:PhoneNumber", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PhoneNumber resources.
type phoneNumberState struct {
	Arn         *string             `pulumi:"arn"`
	CountryCode *string             `pulumi:"countryCode"`
	Description *string             `pulumi:"description"`
	PhoneNumber *string             `pulumi:"phoneNumber"`
	Prefix      *string             `pulumi:"prefix"`
	Statuses    []PhoneNumberStatus `pulumi:"statuses"`
	Tags        map[string]string   `pulumi:"tags"`
	TagsAll     map[string]string   `pulumi:"tagsAll"`
	TargetArn   *string             `pulumi:"targetArn"`
	Type        *string             `pulumi:"type"`
}

type PhoneNumberState struct {
	Arn         pulumi.StringPtrInput
	CountryCode pulumi.StringPtrInput
	Description pulumi.StringPtrInput
	PhoneNumber pulumi.StringPtrInput
	Prefix      pulumi.StringPtrInput
	Statuses    PhoneNumberStatusArrayInput
	Tags        pulumi.StringMapInput
	TagsAll     pulumi.StringMapInput
	TargetArn   pulumi.StringPtrInput
	Type        pulumi.StringPtrInput
}

func (PhoneNumberState) ElementType() reflect.Type {
	return reflect.TypeOf((*phoneNumberState)(nil)).Elem()
}

type phoneNumberArgs struct {
	CountryCode string            `pulumi:"countryCode"`
	Description *string           `pulumi:"description"`
	Prefix      *string           `pulumi:"prefix"`
	Tags        map[string]string `pulumi:"tags"`
	TargetArn   string            `pulumi:"targetArn"`
	Type        string            `pulumi:"type"`
}

// The set of arguments for constructing a PhoneNumber resource.
type PhoneNumberArgs struct {
	CountryCode pulumi.StringInput
	Description pulumi.StringPtrInput
	Prefix      pulumi.StringPtrInput
	Tags        pulumi.StringMapInput
	TargetArn   pulumi.StringInput
	Type        pulumi.StringInput
}

func (PhoneNumberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*phoneNumberArgs)(nil)).Elem()
}

type PhoneNumberInput interface {
	pulumi.Input

	ToPhoneNumberOutput() PhoneNumberOutput
	ToPhoneNumberOutputWithContext(ctx context.Context) PhoneNumberOutput
}

func (*PhoneNumber) ElementType() reflect.Type {
	return reflect.TypeOf((**PhoneNumber)(nil)).Elem()
}

func (i *PhoneNumber) ToPhoneNumberOutput() PhoneNumberOutput {
	return i.ToPhoneNumberOutputWithContext(context.Background())
}

func (i *PhoneNumber) ToPhoneNumberOutputWithContext(ctx context.Context) PhoneNumberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoneNumberOutput)
}

// PhoneNumberArrayInput is an input type that accepts PhoneNumberArray and PhoneNumberArrayOutput values.
// You can construct a concrete instance of `PhoneNumberArrayInput` via:
//
//	PhoneNumberArray{ PhoneNumberArgs{...} }
type PhoneNumberArrayInput interface {
	pulumi.Input

	ToPhoneNumberArrayOutput() PhoneNumberArrayOutput
	ToPhoneNumberArrayOutputWithContext(context.Context) PhoneNumberArrayOutput
}

type PhoneNumberArray []PhoneNumberInput

func (PhoneNumberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PhoneNumber)(nil)).Elem()
}

func (i PhoneNumberArray) ToPhoneNumberArrayOutput() PhoneNumberArrayOutput {
	return i.ToPhoneNumberArrayOutputWithContext(context.Background())
}

func (i PhoneNumberArray) ToPhoneNumberArrayOutputWithContext(ctx context.Context) PhoneNumberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoneNumberArrayOutput)
}

// PhoneNumberMapInput is an input type that accepts PhoneNumberMap and PhoneNumberMapOutput values.
// You can construct a concrete instance of `PhoneNumberMapInput` via:
//
//	PhoneNumberMap{ "key": PhoneNumberArgs{...} }
type PhoneNumberMapInput interface {
	pulumi.Input

	ToPhoneNumberMapOutput() PhoneNumberMapOutput
	ToPhoneNumberMapOutputWithContext(context.Context) PhoneNumberMapOutput
}

type PhoneNumberMap map[string]PhoneNumberInput

func (PhoneNumberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PhoneNumber)(nil)).Elem()
}

func (i PhoneNumberMap) ToPhoneNumberMapOutput() PhoneNumberMapOutput {
	return i.ToPhoneNumberMapOutputWithContext(context.Background())
}

func (i PhoneNumberMap) ToPhoneNumberMapOutputWithContext(ctx context.Context) PhoneNumberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoneNumberMapOutput)
}

type PhoneNumberOutput struct{ *pulumi.OutputState }

func (PhoneNumberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PhoneNumber)(nil)).Elem()
}

func (o PhoneNumberOutput) ToPhoneNumberOutput() PhoneNumberOutput {
	return o
}

func (o PhoneNumberOutput) ToPhoneNumberOutputWithContext(ctx context.Context) PhoneNumberOutput {
	return o
}

func (o PhoneNumberOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *PhoneNumber) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o PhoneNumberOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v *PhoneNumber) pulumi.StringOutput { return v.CountryCode }).(pulumi.StringOutput)
}

func (o PhoneNumberOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PhoneNumber) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PhoneNumberOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *PhoneNumber) pulumi.StringOutput { return v.PhoneNumber }).(pulumi.StringOutput)
}

func (o PhoneNumberOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PhoneNumber) pulumi.StringPtrOutput { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o PhoneNumberOutput) Statuses() PhoneNumberStatusArrayOutput {
	return o.ApplyT(func(v *PhoneNumber) PhoneNumberStatusArrayOutput { return v.Statuses }).(PhoneNumberStatusArrayOutput)
}

func (o PhoneNumberOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PhoneNumber) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o PhoneNumberOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PhoneNumber) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o PhoneNumberOutput) TargetArn() pulumi.StringOutput {
	return o.ApplyT(func(v *PhoneNumber) pulumi.StringOutput { return v.TargetArn }).(pulumi.StringOutput)
}

func (o PhoneNumberOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *PhoneNumber) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type PhoneNumberArrayOutput struct{ *pulumi.OutputState }

func (PhoneNumberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PhoneNumber)(nil)).Elem()
}

func (o PhoneNumberArrayOutput) ToPhoneNumberArrayOutput() PhoneNumberArrayOutput {
	return o
}

func (o PhoneNumberArrayOutput) ToPhoneNumberArrayOutputWithContext(ctx context.Context) PhoneNumberArrayOutput {
	return o
}

func (o PhoneNumberArrayOutput) Index(i pulumi.IntInput) PhoneNumberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PhoneNumber {
		return vs[0].([]*PhoneNumber)[vs[1].(int)]
	}).(PhoneNumberOutput)
}

type PhoneNumberMapOutput struct{ *pulumi.OutputState }

func (PhoneNumberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PhoneNumber)(nil)).Elem()
}

func (o PhoneNumberMapOutput) ToPhoneNumberMapOutput() PhoneNumberMapOutput {
	return o
}

func (o PhoneNumberMapOutput) ToPhoneNumberMapOutputWithContext(ctx context.Context) PhoneNumberMapOutput {
	return o
}

func (o PhoneNumberMapOutput) MapIndex(k pulumi.StringInput) PhoneNumberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PhoneNumber {
		return vs[0].(map[string]*PhoneNumber)[vs[1].(string)]
	}).(PhoneNumberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PhoneNumberInput)(nil)).Elem(), &PhoneNumber{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhoneNumberArrayInput)(nil)).Elem(), PhoneNumberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhoneNumberMapInput)(nil)).Elem(), PhoneNumberMap{})
	pulumi.RegisterOutputType(PhoneNumberOutput{})
	pulumi.RegisterOutputType(PhoneNumberArrayOutput{})
	pulumi.RegisterOutputType(PhoneNumberMapOutput{})
}
