// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupLambdaFunctionAssociation(ctx *pulumi.Context, args *LookupLambdaFunctionAssociationArgs, opts ...pulumi.InvokeOption) (*LookupLambdaFunctionAssociationResult, error) {
	var rv LookupLambdaFunctionAssociationResult
	err := ctx.Invoke("aws:connect/getLambdaFunctionAssociation:getLambdaFunctionAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLambdaFunctionAssociation.
type LookupLambdaFunctionAssociationArgs struct {
	FunctionArn string `pulumi:"functionArn"`
	InstanceId  string `pulumi:"instanceId"`
}

// A collection of values returned by getLambdaFunctionAssociation.
type LookupLambdaFunctionAssociationResult struct {
	FunctionArn string `pulumi:"functionArn"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
}

func LookupLambdaFunctionAssociationOutput(ctx *pulumi.Context, args LookupLambdaFunctionAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupLambdaFunctionAssociationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLambdaFunctionAssociationResult, error) {
			args := v.(LookupLambdaFunctionAssociationArgs)
			r, err := LookupLambdaFunctionAssociation(ctx, &args, opts...)
			var s LookupLambdaFunctionAssociationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLambdaFunctionAssociationResultOutput)
}

// A collection of arguments for invoking getLambdaFunctionAssociation.
type LookupLambdaFunctionAssociationOutputArgs struct {
	FunctionArn pulumi.StringInput `pulumi:"functionArn"`
	InstanceId  pulumi.StringInput `pulumi:"instanceId"`
}

func (LookupLambdaFunctionAssociationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLambdaFunctionAssociationArgs)(nil)).Elem()
}

// A collection of values returned by getLambdaFunctionAssociation.
type LookupLambdaFunctionAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupLambdaFunctionAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLambdaFunctionAssociationResult)(nil)).Elem()
}

func (o LookupLambdaFunctionAssociationResultOutput) ToLookupLambdaFunctionAssociationResultOutput() LookupLambdaFunctionAssociationResultOutput {
	return o
}

func (o LookupLambdaFunctionAssociationResultOutput) ToLookupLambdaFunctionAssociationResultOutputWithContext(ctx context.Context) LookupLambdaFunctionAssociationResultOutput {
	return o
}

func (o LookupLambdaFunctionAssociationResultOutput) FunctionArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLambdaFunctionAssociationResult) string { return v.FunctionArn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLambdaFunctionAssociationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLambdaFunctionAssociationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLambdaFunctionAssociationResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLambdaFunctionAssociationResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLambdaFunctionAssociationResultOutput{})
}
