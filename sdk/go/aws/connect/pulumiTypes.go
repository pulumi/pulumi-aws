// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BotAssociationLexBot struct {
	// The Region that the Amazon Lex (V1) bot was created in. Defaults to current region.
	LexRegion *string `pulumi:"lexRegion"`
	// The name of the Amazon Lex (V1) bot.
	Name string `pulumi:"name"`
}

// BotAssociationLexBotInput is an input type that accepts BotAssociationLexBotArgs and BotAssociationLexBotOutput values.
// You can construct a concrete instance of `BotAssociationLexBotInput` via:
//
//          BotAssociationLexBotArgs{...}
type BotAssociationLexBotInput interface {
	pulumi.Input

	ToBotAssociationLexBotOutput() BotAssociationLexBotOutput
	ToBotAssociationLexBotOutputWithContext(context.Context) BotAssociationLexBotOutput
}

type BotAssociationLexBotArgs struct {
	// The Region that the Amazon Lex (V1) bot was created in. Defaults to current region.
	LexRegion pulumi.StringPtrInput `pulumi:"lexRegion"`
	// The name of the Amazon Lex (V1) bot.
	Name pulumi.StringInput `pulumi:"name"`
}

func (BotAssociationLexBotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BotAssociationLexBot)(nil)).Elem()
}

func (i BotAssociationLexBotArgs) ToBotAssociationLexBotOutput() BotAssociationLexBotOutput {
	return i.ToBotAssociationLexBotOutputWithContext(context.Background())
}

func (i BotAssociationLexBotArgs) ToBotAssociationLexBotOutputWithContext(ctx context.Context) BotAssociationLexBotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotAssociationLexBotOutput)
}

func (i BotAssociationLexBotArgs) ToBotAssociationLexBotPtrOutput() BotAssociationLexBotPtrOutput {
	return i.ToBotAssociationLexBotPtrOutputWithContext(context.Background())
}

func (i BotAssociationLexBotArgs) ToBotAssociationLexBotPtrOutputWithContext(ctx context.Context) BotAssociationLexBotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotAssociationLexBotOutput).ToBotAssociationLexBotPtrOutputWithContext(ctx)
}

// BotAssociationLexBotPtrInput is an input type that accepts BotAssociationLexBotArgs, BotAssociationLexBotPtr and BotAssociationLexBotPtrOutput values.
// You can construct a concrete instance of `BotAssociationLexBotPtrInput` via:
//
//          BotAssociationLexBotArgs{...}
//
//  or:
//
//          nil
type BotAssociationLexBotPtrInput interface {
	pulumi.Input

	ToBotAssociationLexBotPtrOutput() BotAssociationLexBotPtrOutput
	ToBotAssociationLexBotPtrOutputWithContext(context.Context) BotAssociationLexBotPtrOutput
}

type botAssociationLexBotPtrType BotAssociationLexBotArgs

func BotAssociationLexBotPtr(v *BotAssociationLexBotArgs) BotAssociationLexBotPtrInput {
	return (*botAssociationLexBotPtrType)(v)
}

func (*botAssociationLexBotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BotAssociationLexBot)(nil)).Elem()
}

func (i *botAssociationLexBotPtrType) ToBotAssociationLexBotPtrOutput() BotAssociationLexBotPtrOutput {
	return i.ToBotAssociationLexBotPtrOutputWithContext(context.Background())
}

func (i *botAssociationLexBotPtrType) ToBotAssociationLexBotPtrOutputWithContext(ctx context.Context) BotAssociationLexBotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotAssociationLexBotPtrOutput)
}

type BotAssociationLexBotOutput struct{ *pulumi.OutputState }

func (BotAssociationLexBotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotAssociationLexBot)(nil)).Elem()
}

func (o BotAssociationLexBotOutput) ToBotAssociationLexBotOutput() BotAssociationLexBotOutput {
	return o
}

func (o BotAssociationLexBotOutput) ToBotAssociationLexBotOutputWithContext(ctx context.Context) BotAssociationLexBotOutput {
	return o
}

func (o BotAssociationLexBotOutput) ToBotAssociationLexBotPtrOutput() BotAssociationLexBotPtrOutput {
	return o.ToBotAssociationLexBotPtrOutputWithContext(context.Background())
}

func (o BotAssociationLexBotOutput) ToBotAssociationLexBotPtrOutputWithContext(ctx context.Context) BotAssociationLexBotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BotAssociationLexBot) *BotAssociationLexBot {
		return &v
	}).(BotAssociationLexBotPtrOutput)
}

// The Region that the Amazon Lex (V1) bot was created in. Defaults to current region.
func (o BotAssociationLexBotOutput) LexRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotAssociationLexBot) *string { return v.LexRegion }).(pulumi.StringPtrOutput)
}

// The name of the Amazon Lex (V1) bot.
func (o BotAssociationLexBotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BotAssociationLexBot) string { return v.Name }).(pulumi.StringOutput)
}

type BotAssociationLexBotPtrOutput struct{ *pulumi.OutputState }

func (BotAssociationLexBotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotAssociationLexBot)(nil)).Elem()
}

func (o BotAssociationLexBotPtrOutput) ToBotAssociationLexBotPtrOutput() BotAssociationLexBotPtrOutput {
	return o
}

func (o BotAssociationLexBotPtrOutput) ToBotAssociationLexBotPtrOutputWithContext(ctx context.Context) BotAssociationLexBotPtrOutput {
	return o
}

func (o BotAssociationLexBotPtrOutput) Elem() BotAssociationLexBotOutput {
	return o.ApplyT(func(v *BotAssociationLexBot) BotAssociationLexBot {
		if v != nil {
			return *v
		}
		var ret BotAssociationLexBot
		return ret
	}).(BotAssociationLexBotOutput)
}

// The Region that the Amazon Lex (V1) bot was created in. Defaults to current region.
func (o BotAssociationLexBotPtrOutput) LexRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotAssociationLexBot) *string {
		if v == nil {
			return nil
		}
		return v.LexRegion
	}).(pulumi.StringPtrOutput)
}

// The name of the Amazon Lex (V1) bot.
func (o BotAssociationLexBotPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotAssociationLexBot) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type HoursOfOperationConfig struct {
	// Specifies the day that the hours of operation applies to.
	Day string `pulumi:"day"`
	// A end time block specifies the time that your contact center closes. The `endTime` is documented below.
	EndTime HoursOfOperationConfigEndTime `pulumi:"endTime"`
	// A start time block specifies the time that your contact center opens. The `startTime` is documented below.
	StartTime HoursOfOperationConfigStartTime `pulumi:"startTime"`
}

// HoursOfOperationConfigInput is an input type that accepts HoursOfOperationConfigArgs and HoursOfOperationConfigOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigInput` via:
//
//          HoursOfOperationConfigArgs{...}
type HoursOfOperationConfigInput interface {
	pulumi.Input

	ToHoursOfOperationConfigOutput() HoursOfOperationConfigOutput
	ToHoursOfOperationConfigOutputWithContext(context.Context) HoursOfOperationConfigOutput
}

type HoursOfOperationConfigArgs struct {
	// Specifies the day that the hours of operation applies to.
	Day pulumi.StringInput `pulumi:"day"`
	// A end time block specifies the time that your contact center closes. The `endTime` is documented below.
	EndTime HoursOfOperationConfigEndTimeInput `pulumi:"endTime"`
	// A start time block specifies the time that your contact center opens. The `startTime` is documented below.
	StartTime HoursOfOperationConfigStartTimeInput `pulumi:"startTime"`
}

func (HoursOfOperationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfig)(nil)).Elem()
}

func (i HoursOfOperationConfigArgs) ToHoursOfOperationConfigOutput() HoursOfOperationConfigOutput {
	return i.ToHoursOfOperationConfigOutputWithContext(context.Background())
}

func (i HoursOfOperationConfigArgs) ToHoursOfOperationConfigOutputWithContext(ctx context.Context) HoursOfOperationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationConfigOutput)
}

// HoursOfOperationConfigArrayInput is an input type that accepts HoursOfOperationConfigArray and HoursOfOperationConfigArrayOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigArrayInput` via:
//
//          HoursOfOperationConfigArray{ HoursOfOperationConfigArgs{...} }
type HoursOfOperationConfigArrayInput interface {
	pulumi.Input

	ToHoursOfOperationConfigArrayOutput() HoursOfOperationConfigArrayOutput
	ToHoursOfOperationConfigArrayOutputWithContext(context.Context) HoursOfOperationConfigArrayOutput
}

type HoursOfOperationConfigArray []HoursOfOperationConfigInput

func (HoursOfOperationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoursOfOperationConfig)(nil)).Elem()
}

func (i HoursOfOperationConfigArray) ToHoursOfOperationConfigArrayOutput() HoursOfOperationConfigArrayOutput {
	return i.ToHoursOfOperationConfigArrayOutputWithContext(context.Background())
}

func (i HoursOfOperationConfigArray) ToHoursOfOperationConfigArrayOutputWithContext(ctx context.Context) HoursOfOperationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationConfigArrayOutput)
}

type HoursOfOperationConfigOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfig)(nil)).Elem()
}

func (o HoursOfOperationConfigOutput) ToHoursOfOperationConfigOutput() HoursOfOperationConfigOutput {
	return o
}

func (o HoursOfOperationConfigOutput) ToHoursOfOperationConfigOutputWithContext(ctx context.Context) HoursOfOperationConfigOutput {
	return o
}

// Specifies the day that the hours of operation applies to.
func (o HoursOfOperationConfigOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v HoursOfOperationConfig) string { return v.Day }).(pulumi.StringOutput)
}

// A end time block specifies the time that your contact center closes. The `endTime` is documented below.
func (o HoursOfOperationConfigOutput) EndTime() HoursOfOperationConfigEndTimeOutput {
	return o.ApplyT(func(v HoursOfOperationConfig) HoursOfOperationConfigEndTime { return v.EndTime }).(HoursOfOperationConfigEndTimeOutput)
}

// A start time block specifies the time that your contact center opens. The `startTime` is documented below.
func (o HoursOfOperationConfigOutput) StartTime() HoursOfOperationConfigStartTimeOutput {
	return o.ApplyT(func(v HoursOfOperationConfig) HoursOfOperationConfigStartTime { return v.StartTime }).(HoursOfOperationConfigStartTimeOutput)
}

type HoursOfOperationConfigArrayOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoursOfOperationConfig)(nil)).Elem()
}

func (o HoursOfOperationConfigArrayOutput) ToHoursOfOperationConfigArrayOutput() HoursOfOperationConfigArrayOutput {
	return o
}

func (o HoursOfOperationConfigArrayOutput) ToHoursOfOperationConfigArrayOutputWithContext(ctx context.Context) HoursOfOperationConfigArrayOutput {
	return o
}

func (o HoursOfOperationConfigArrayOutput) Index(i pulumi.IntInput) HoursOfOperationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HoursOfOperationConfig {
		return vs[0].([]HoursOfOperationConfig)[vs[1].(int)]
	}).(HoursOfOperationConfigOutput)
}

type HoursOfOperationConfigEndTime struct {
	// Specifies the hour of closing.
	Hours int `pulumi:"hours"`
	// Specifies the minute of closing.
	Minutes int `pulumi:"minutes"`
}

// HoursOfOperationConfigEndTimeInput is an input type that accepts HoursOfOperationConfigEndTimeArgs and HoursOfOperationConfigEndTimeOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigEndTimeInput` via:
//
//          HoursOfOperationConfigEndTimeArgs{...}
type HoursOfOperationConfigEndTimeInput interface {
	pulumi.Input

	ToHoursOfOperationConfigEndTimeOutput() HoursOfOperationConfigEndTimeOutput
	ToHoursOfOperationConfigEndTimeOutputWithContext(context.Context) HoursOfOperationConfigEndTimeOutput
}

type HoursOfOperationConfigEndTimeArgs struct {
	// Specifies the hour of closing.
	Hours pulumi.IntInput `pulumi:"hours"`
	// Specifies the minute of closing.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (HoursOfOperationConfigEndTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfigEndTime)(nil)).Elem()
}

func (i HoursOfOperationConfigEndTimeArgs) ToHoursOfOperationConfigEndTimeOutput() HoursOfOperationConfigEndTimeOutput {
	return i.ToHoursOfOperationConfigEndTimeOutputWithContext(context.Background())
}

func (i HoursOfOperationConfigEndTimeArgs) ToHoursOfOperationConfigEndTimeOutputWithContext(ctx context.Context) HoursOfOperationConfigEndTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationConfigEndTimeOutput)
}

type HoursOfOperationConfigEndTimeOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigEndTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfigEndTime)(nil)).Elem()
}

func (o HoursOfOperationConfigEndTimeOutput) ToHoursOfOperationConfigEndTimeOutput() HoursOfOperationConfigEndTimeOutput {
	return o
}

func (o HoursOfOperationConfigEndTimeOutput) ToHoursOfOperationConfigEndTimeOutputWithContext(ctx context.Context) HoursOfOperationConfigEndTimeOutput {
	return o
}

// Specifies the hour of closing.
func (o HoursOfOperationConfigEndTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v HoursOfOperationConfigEndTime) int { return v.Hours }).(pulumi.IntOutput)
}

// Specifies the minute of closing.
func (o HoursOfOperationConfigEndTimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v HoursOfOperationConfigEndTime) int { return v.Minutes }).(pulumi.IntOutput)
}

type HoursOfOperationConfigStartTime struct {
	// Specifies the hour of opening.
	Hours int `pulumi:"hours"`
	// Specifies the minute of opening.
	Minutes int `pulumi:"minutes"`
}

// HoursOfOperationConfigStartTimeInput is an input type that accepts HoursOfOperationConfigStartTimeArgs and HoursOfOperationConfigStartTimeOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigStartTimeInput` via:
//
//          HoursOfOperationConfigStartTimeArgs{...}
type HoursOfOperationConfigStartTimeInput interface {
	pulumi.Input

	ToHoursOfOperationConfigStartTimeOutput() HoursOfOperationConfigStartTimeOutput
	ToHoursOfOperationConfigStartTimeOutputWithContext(context.Context) HoursOfOperationConfigStartTimeOutput
}

type HoursOfOperationConfigStartTimeArgs struct {
	// Specifies the hour of opening.
	Hours pulumi.IntInput `pulumi:"hours"`
	// Specifies the minute of opening.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (HoursOfOperationConfigStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfigStartTime)(nil)).Elem()
}

func (i HoursOfOperationConfigStartTimeArgs) ToHoursOfOperationConfigStartTimeOutput() HoursOfOperationConfigStartTimeOutput {
	return i.ToHoursOfOperationConfigStartTimeOutputWithContext(context.Background())
}

func (i HoursOfOperationConfigStartTimeArgs) ToHoursOfOperationConfigStartTimeOutputWithContext(ctx context.Context) HoursOfOperationConfigStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationConfigStartTimeOutput)
}

type HoursOfOperationConfigStartTimeOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfigStartTime)(nil)).Elem()
}

func (o HoursOfOperationConfigStartTimeOutput) ToHoursOfOperationConfigStartTimeOutput() HoursOfOperationConfigStartTimeOutput {
	return o
}

func (o HoursOfOperationConfigStartTimeOutput) ToHoursOfOperationConfigStartTimeOutputWithContext(ctx context.Context) HoursOfOperationConfigStartTimeOutput {
	return o
}

// Specifies the hour of opening.
func (o HoursOfOperationConfigStartTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v HoursOfOperationConfigStartTime) int { return v.Hours }).(pulumi.IntOutput)
}

// Specifies the minute of opening.
func (o HoursOfOperationConfigStartTimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v HoursOfOperationConfigStartTime) int { return v.Minutes }).(pulumi.IntOutput)
}

type QueueOutboundCallerConfig struct {
	// Specifies the caller ID name.
	OutboundCallerIdName *string `pulumi:"outboundCallerIdName"`
	// Specifies the caller ID number.
	OutboundCallerIdNumberId *string `pulumi:"outboundCallerIdNumberId"`
	// Specifies outbound whisper flow to be used during an outbound call.
	OutboundFlowId *string `pulumi:"outboundFlowId"`
}

// QueueOutboundCallerConfigInput is an input type that accepts QueueOutboundCallerConfigArgs and QueueOutboundCallerConfigOutput values.
// You can construct a concrete instance of `QueueOutboundCallerConfigInput` via:
//
//          QueueOutboundCallerConfigArgs{...}
type QueueOutboundCallerConfigInput interface {
	pulumi.Input

	ToQueueOutboundCallerConfigOutput() QueueOutboundCallerConfigOutput
	ToQueueOutboundCallerConfigOutputWithContext(context.Context) QueueOutboundCallerConfigOutput
}

type QueueOutboundCallerConfigArgs struct {
	// Specifies the caller ID name.
	OutboundCallerIdName pulumi.StringPtrInput `pulumi:"outboundCallerIdName"`
	// Specifies the caller ID number.
	OutboundCallerIdNumberId pulumi.StringPtrInput `pulumi:"outboundCallerIdNumberId"`
	// Specifies outbound whisper flow to be used during an outbound call.
	OutboundFlowId pulumi.StringPtrInput `pulumi:"outboundFlowId"`
}

func (QueueOutboundCallerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueOutboundCallerConfig)(nil)).Elem()
}

func (i QueueOutboundCallerConfigArgs) ToQueueOutboundCallerConfigOutput() QueueOutboundCallerConfigOutput {
	return i.ToQueueOutboundCallerConfigOutputWithContext(context.Background())
}

func (i QueueOutboundCallerConfigArgs) ToQueueOutboundCallerConfigOutputWithContext(ctx context.Context) QueueOutboundCallerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueOutboundCallerConfigOutput)
}

func (i QueueOutboundCallerConfigArgs) ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput {
	return i.ToQueueOutboundCallerConfigPtrOutputWithContext(context.Background())
}

func (i QueueOutboundCallerConfigArgs) ToQueueOutboundCallerConfigPtrOutputWithContext(ctx context.Context) QueueOutboundCallerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueOutboundCallerConfigOutput).ToQueueOutboundCallerConfigPtrOutputWithContext(ctx)
}

// QueueOutboundCallerConfigPtrInput is an input type that accepts QueueOutboundCallerConfigArgs, QueueOutboundCallerConfigPtr and QueueOutboundCallerConfigPtrOutput values.
// You can construct a concrete instance of `QueueOutboundCallerConfigPtrInput` via:
//
//          QueueOutboundCallerConfigArgs{...}
//
//  or:
//
//          nil
type QueueOutboundCallerConfigPtrInput interface {
	pulumi.Input

	ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput
	ToQueueOutboundCallerConfigPtrOutputWithContext(context.Context) QueueOutboundCallerConfigPtrOutput
}

type queueOutboundCallerConfigPtrType QueueOutboundCallerConfigArgs

func QueueOutboundCallerConfigPtr(v *QueueOutboundCallerConfigArgs) QueueOutboundCallerConfigPtrInput {
	return (*queueOutboundCallerConfigPtrType)(v)
}

func (*queueOutboundCallerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueOutboundCallerConfig)(nil)).Elem()
}

func (i *queueOutboundCallerConfigPtrType) ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput {
	return i.ToQueueOutboundCallerConfigPtrOutputWithContext(context.Background())
}

func (i *queueOutboundCallerConfigPtrType) ToQueueOutboundCallerConfigPtrOutputWithContext(ctx context.Context) QueueOutboundCallerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueOutboundCallerConfigPtrOutput)
}

type QueueOutboundCallerConfigOutput struct{ *pulumi.OutputState }

func (QueueOutboundCallerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueOutboundCallerConfig)(nil)).Elem()
}

func (o QueueOutboundCallerConfigOutput) ToQueueOutboundCallerConfigOutput() QueueOutboundCallerConfigOutput {
	return o
}

func (o QueueOutboundCallerConfigOutput) ToQueueOutboundCallerConfigOutputWithContext(ctx context.Context) QueueOutboundCallerConfigOutput {
	return o
}

func (o QueueOutboundCallerConfigOutput) ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput {
	return o.ToQueueOutboundCallerConfigPtrOutputWithContext(context.Background())
}

func (o QueueOutboundCallerConfigOutput) ToQueueOutboundCallerConfigPtrOutputWithContext(ctx context.Context) QueueOutboundCallerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueOutboundCallerConfig) *QueueOutboundCallerConfig {
		return &v
	}).(QueueOutboundCallerConfigPtrOutput)
}

// Specifies the caller ID name.
func (o QueueOutboundCallerConfigOutput) OutboundCallerIdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueOutboundCallerConfig) *string { return v.OutboundCallerIdName }).(pulumi.StringPtrOutput)
}

// Specifies the caller ID number.
func (o QueueOutboundCallerConfigOutput) OutboundCallerIdNumberId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueOutboundCallerConfig) *string { return v.OutboundCallerIdNumberId }).(pulumi.StringPtrOutput)
}

// Specifies outbound whisper flow to be used during an outbound call.
func (o QueueOutboundCallerConfigOutput) OutboundFlowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueOutboundCallerConfig) *string { return v.OutboundFlowId }).(pulumi.StringPtrOutput)
}

type QueueOutboundCallerConfigPtrOutput struct{ *pulumi.OutputState }

func (QueueOutboundCallerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueOutboundCallerConfig)(nil)).Elem()
}

func (o QueueOutboundCallerConfigPtrOutput) ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput {
	return o
}

func (o QueueOutboundCallerConfigPtrOutput) ToQueueOutboundCallerConfigPtrOutputWithContext(ctx context.Context) QueueOutboundCallerConfigPtrOutput {
	return o
}

func (o QueueOutboundCallerConfigPtrOutput) Elem() QueueOutboundCallerConfigOutput {
	return o.ApplyT(func(v *QueueOutboundCallerConfig) QueueOutboundCallerConfig {
		if v != nil {
			return *v
		}
		var ret QueueOutboundCallerConfig
		return ret
	}).(QueueOutboundCallerConfigOutput)
}

// Specifies the caller ID name.
func (o QueueOutboundCallerConfigPtrOutput) OutboundCallerIdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueOutboundCallerConfig) *string {
		if v == nil {
			return nil
		}
		return v.OutboundCallerIdName
	}).(pulumi.StringPtrOutput)
}

// Specifies the caller ID number.
func (o QueueOutboundCallerConfigPtrOutput) OutboundCallerIdNumberId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueOutboundCallerConfig) *string {
		if v == nil {
			return nil
		}
		return v.OutboundCallerIdNumberId
	}).(pulumi.StringPtrOutput)
}

// Specifies outbound whisper flow to be used during an outbound call.
func (o QueueOutboundCallerConfigPtrOutput) OutboundFlowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueOutboundCallerConfig) *string {
		if v == nil {
			return nil
		}
		return v.OutboundFlowId
	}).(pulumi.StringPtrOutput)
}

type QuickConnectQuickConnectConfig struct {
	// Specifies the phone configuration of the Quick Connect. This is required only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
	PhoneConfigs []QuickConnectQuickConnectConfigPhoneConfig `pulumi:"phoneConfigs"`
	// Specifies the queue configuration of the Quick Connect. This is required only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
	QueueConfigs []QuickConnectQuickConnectConfigQueueConfig `pulumi:"queueConfigs"`
	// Specifies the configuration type of the quick connect. valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
	QuickConnectType string `pulumi:"quickConnectType"`
	// Specifies the user configuration of the Quick Connect. This is required only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
	UserConfigs []QuickConnectQuickConnectConfigUserConfig `pulumi:"userConfigs"`
}

// QuickConnectQuickConnectConfigInput is an input type that accepts QuickConnectQuickConnectConfigArgs and QuickConnectQuickConnectConfigOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigInput` via:
//
//          QuickConnectQuickConnectConfigArgs{...}
type QuickConnectQuickConnectConfigInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigOutput() QuickConnectQuickConnectConfigOutput
	ToQuickConnectQuickConnectConfigOutputWithContext(context.Context) QuickConnectQuickConnectConfigOutput
}

type QuickConnectQuickConnectConfigArgs struct {
	// Specifies the phone configuration of the Quick Connect. This is required only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
	PhoneConfigs QuickConnectQuickConnectConfigPhoneConfigArrayInput `pulumi:"phoneConfigs"`
	// Specifies the queue configuration of the Quick Connect. This is required only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
	QueueConfigs QuickConnectQuickConnectConfigQueueConfigArrayInput `pulumi:"queueConfigs"`
	// Specifies the configuration type of the quick connect. valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
	QuickConnectType pulumi.StringInput `pulumi:"quickConnectType"`
	// Specifies the user configuration of the Quick Connect. This is required only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
	UserConfigs QuickConnectQuickConnectConfigUserConfigArrayInput `pulumi:"userConfigs"`
}

func (QuickConnectQuickConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfig)(nil)).Elem()
}

func (i QuickConnectQuickConnectConfigArgs) ToQuickConnectQuickConnectConfigOutput() QuickConnectQuickConnectConfigOutput {
	return i.ToQuickConnectQuickConnectConfigOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigArgs) ToQuickConnectQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigOutput)
}

func (i QuickConnectQuickConnectConfigArgs) ToQuickConnectQuickConnectConfigPtrOutput() QuickConnectQuickConnectConfigPtrOutput {
	return i.ToQuickConnectQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigArgs) ToQuickConnectQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigOutput).ToQuickConnectQuickConnectConfigPtrOutputWithContext(ctx)
}

// QuickConnectQuickConnectConfigPtrInput is an input type that accepts QuickConnectQuickConnectConfigArgs, QuickConnectQuickConnectConfigPtr and QuickConnectQuickConnectConfigPtrOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigPtrInput` via:
//
//          QuickConnectQuickConnectConfigArgs{...}
//
//  or:
//
//          nil
type QuickConnectQuickConnectConfigPtrInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigPtrOutput() QuickConnectQuickConnectConfigPtrOutput
	ToQuickConnectQuickConnectConfigPtrOutputWithContext(context.Context) QuickConnectQuickConnectConfigPtrOutput
}

type quickConnectQuickConnectConfigPtrType QuickConnectQuickConnectConfigArgs

func QuickConnectQuickConnectConfigPtr(v *QuickConnectQuickConnectConfigArgs) QuickConnectQuickConnectConfigPtrInput {
	return (*quickConnectQuickConnectConfigPtrType)(v)
}

func (*quickConnectQuickConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectQuickConnectConfig)(nil)).Elem()
}

func (i *quickConnectQuickConnectConfigPtrType) ToQuickConnectQuickConnectConfigPtrOutput() QuickConnectQuickConnectConfigPtrOutput {
	return i.ToQuickConnectQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i *quickConnectQuickConnectConfigPtrType) ToQuickConnectQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigPtrOutput)
}

type QuickConnectQuickConnectConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigOutput) ToQuickConnectQuickConnectConfigOutput() QuickConnectQuickConnectConfigOutput {
	return o
}

func (o QuickConnectQuickConnectConfigOutput) ToQuickConnectQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigOutput {
	return o
}

func (o QuickConnectQuickConnectConfigOutput) ToQuickConnectQuickConnectConfigPtrOutput() QuickConnectQuickConnectConfigPtrOutput {
	return o.ToQuickConnectQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (o QuickConnectQuickConnectConfigOutput) ToQuickConnectQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QuickConnectQuickConnectConfig) *QuickConnectQuickConnectConfig {
		return &v
	}).(QuickConnectQuickConnectConfigPtrOutput)
}

// Specifies the phone configuration of the Quick Connect. This is required only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
func (o QuickConnectQuickConnectConfigOutput) PhoneConfigs() QuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfig) []QuickConnectQuickConnectConfigPhoneConfig {
		return v.PhoneConfigs
	}).(QuickConnectQuickConnectConfigPhoneConfigArrayOutput)
}

// Specifies the queue configuration of the Quick Connect. This is required only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
func (o QuickConnectQuickConnectConfigOutput) QueueConfigs() QuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfig) []QuickConnectQuickConnectConfigQueueConfig {
		return v.QueueConfigs
	}).(QuickConnectQuickConnectConfigQueueConfigArrayOutput)
}

// Specifies the configuration type of the quick connect. valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
func (o QuickConnectQuickConnectConfigOutput) QuickConnectType() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfig) string { return v.QuickConnectType }).(pulumi.StringOutput)
}

// Specifies the user configuration of the Quick Connect. This is required only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
func (o QuickConnectQuickConnectConfigOutput) UserConfigs() QuickConnectQuickConnectConfigUserConfigArrayOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfig) []QuickConnectQuickConnectConfigUserConfig {
		return v.UserConfigs
	}).(QuickConnectQuickConnectConfigUserConfigArrayOutput)
}

type QuickConnectQuickConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigPtrOutput) ToQuickConnectQuickConnectConfigPtrOutput() QuickConnectQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectQuickConnectConfigPtrOutput) ToQuickConnectQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectQuickConnectConfigPtrOutput) Elem() QuickConnectQuickConnectConfigOutput {
	return o.ApplyT(func(v *QuickConnectQuickConnectConfig) QuickConnectQuickConnectConfig {
		if v != nil {
			return *v
		}
		var ret QuickConnectQuickConnectConfig
		return ret
	}).(QuickConnectQuickConnectConfigOutput)
}

// Specifies the phone configuration of the Quick Connect. This is required only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
func (o QuickConnectQuickConnectConfigPtrOutput) PhoneConfigs() QuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return o.ApplyT(func(v *QuickConnectQuickConnectConfig) []QuickConnectQuickConnectConfigPhoneConfig {
		if v == nil {
			return nil
		}
		return v.PhoneConfigs
	}).(QuickConnectQuickConnectConfigPhoneConfigArrayOutput)
}

// Specifies the queue configuration of the Quick Connect. This is required only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
func (o QuickConnectQuickConnectConfigPtrOutput) QueueConfigs() QuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return o.ApplyT(func(v *QuickConnectQuickConnectConfig) []QuickConnectQuickConnectConfigQueueConfig {
		if v == nil {
			return nil
		}
		return v.QueueConfigs
	}).(QuickConnectQuickConnectConfigQueueConfigArrayOutput)
}

// Specifies the configuration type of the quick connect. valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
func (o QuickConnectQuickConnectConfigPtrOutput) QuickConnectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuickConnectQuickConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.QuickConnectType
	}).(pulumi.StringPtrOutput)
}

// Specifies the user configuration of the Quick Connect. This is required only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
func (o QuickConnectQuickConnectConfigPtrOutput) UserConfigs() QuickConnectQuickConnectConfigUserConfigArrayOutput {
	return o.ApplyT(func(v *QuickConnectQuickConnectConfig) []QuickConnectQuickConnectConfigUserConfig {
		if v == nil {
			return nil
		}
		return v.UserConfigs
	}).(QuickConnectQuickConnectConfigUserConfigArrayOutput)
}

type QuickConnectQuickConnectConfigPhoneConfig struct {
	// Specifies the phone number in in E.164 format.
	PhoneNumber string `pulumi:"phoneNumber"`
}

// QuickConnectQuickConnectConfigPhoneConfigInput is an input type that accepts QuickConnectQuickConnectConfigPhoneConfigArgs and QuickConnectQuickConnectConfigPhoneConfigOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigPhoneConfigInput` via:
//
//          QuickConnectQuickConnectConfigPhoneConfigArgs{...}
type QuickConnectQuickConnectConfigPhoneConfigInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigPhoneConfigOutput() QuickConnectQuickConnectConfigPhoneConfigOutput
	ToQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(context.Context) QuickConnectQuickConnectConfigPhoneConfigOutput
}

type QuickConnectQuickConnectConfigPhoneConfigArgs struct {
	// Specifies the phone number in in E.164 format.
	PhoneNumber pulumi.StringInput `pulumi:"phoneNumber"`
}

func (QuickConnectQuickConnectConfigPhoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (i QuickConnectQuickConnectConfigPhoneConfigArgs) ToQuickConnectQuickConnectConfigPhoneConfigOutput() QuickConnectQuickConnectConfigPhoneConfigOutput {
	return i.ToQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigPhoneConfigArgs) ToQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPhoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigPhoneConfigOutput)
}

// QuickConnectQuickConnectConfigPhoneConfigArrayInput is an input type that accepts QuickConnectQuickConnectConfigPhoneConfigArray and QuickConnectQuickConnectConfigPhoneConfigArrayOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigPhoneConfigArrayInput` via:
//
//          QuickConnectQuickConnectConfigPhoneConfigArray{ QuickConnectQuickConnectConfigPhoneConfigArgs{...} }
type QuickConnectQuickConnectConfigPhoneConfigArrayInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigPhoneConfigArrayOutput() QuickConnectQuickConnectConfigPhoneConfigArrayOutput
	ToQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(context.Context) QuickConnectQuickConnectConfigPhoneConfigArrayOutput
}

type QuickConnectQuickConnectConfigPhoneConfigArray []QuickConnectQuickConnectConfigPhoneConfigInput

func (QuickConnectQuickConnectConfigPhoneConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (i QuickConnectQuickConnectConfigPhoneConfigArray) ToQuickConnectQuickConnectConfigPhoneConfigArrayOutput() QuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return i.ToQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigPhoneConfigArray) ToQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigPhoneConfigArrayOutput)
}

type QuickConnectQuickConnectConfigPhoneConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigPhoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigPhoneConfigOutput) ToQuickConnectQuickConnectConfigPhoneConfigOutput() QuickConnectQuickConnectConfigPhoneConfigOutput {
	return o
}

func (o QuickConnectQuickConnectConfigPhoneConfigOutput) ToQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPhoneConfigOutput {
	return o
}

// Specifies the phone number in in E.164 format.
func (o QuickConnectQuickConnectConfigPhoneConfigOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfigPhoneConfig) string { return v.PhoneNumber }).(pulumi.StringOutput)
}

type QuickConnectQuickConnectConfigPhoneConfigArrayOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigPhoneConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigPhoneConfigArrayOutput) ToQuickConnectQuickConnectConfigPhoneConfigArrayOutput() QuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return o
}

func (o QuickConnectQuickConnectConfigPhoneConfigArrayOutput) ToQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return o
}

func (o QuickConnectQuickConnectConfigPhoneConfigArrayOutput) Index(i pulumi.IntInput) QuickConnectQuickConnectConfigPhoneConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QuickConnectQuickConnectConfigPhoneConfig {
		return vs[0].([]QuickConnectQuickConnectConfigPhoneConfig)[vs[1].(int)]
	}).(QuickConnectQuickConnectConfigPhoneConfigOutput)
}

type QuickConnectQuickConnectConfigQueueConfig struct {
	// Specifies the identifier of the contact flow.
	ContactFlowId string `pulumi:"contactFlowId"`
	// Specifies the identifier for the queue.
	QueueId string `pulumi:"queueId"`
}

// QuickConnectQuickConnectConfigQueueConfigInput is an input type that accepts QuickConnectQuickConnectConfigQueueConfigArgs and QuickConnectQuickConnectConfigQueueConfigOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigQueueConfigInput` via:
//
//          QuickConnectQuickConnectConfigQueueConfigArgs{...}
type QuickConnectQuickConnectConfigQueueConfigInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigQueueConfigOutput() QuickConnectQuickConnectConfigQueueConfigOutput
	ToQuickConnectQuickConnectConfigQueueConfigOutputWithContext(context.Context) QuickConnectQuickConnectConfigQueueConfigOutput
}

type QuickConnectQuickConnectConfigQueueConfigArgs struct {
	// Specifies the identifier of the contact flow.
	ContactFlowId pulumi.StringInput `pulumi:"contactFlowId"`
	// Specifies the identifier for the queue.
	QueueId pulumi.StringInput `pulumi:"queueId"`
}

func (QuickConnectQuickConnectConfigQueueConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (i QuickConnectQuickConnectConfigQueueConfigArgs) ToQuickConnectQuickConnectConfigQueueConfigOutput() QuickConnectQuickConnectConfigQueueConfigOutput {
	return i.ToQuickConnectQuickConnectConfigQueueConfigOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigQueueConfigArgs) ToQuickConnectQuickConnectConfigQueueConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigQueueConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigQueueConfigOutput)
}

// QuickConnectQuickConnectConfigQueueConfigArrayInput is an input type that accepts QuickConnectQuickConnectConfigQueueConfigArray and QuickConnectQuickConnectConfigQueueConfigArrayOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigQueueConfigArrayInput` via:
//
//          QuickConnectQuickConnectConfigQueueConfigArray{ QuickConnectQuickConnectConfigQueueConfigArgs{...} }
type QuickConnectQuickConnectConfigQueueConfigArrayInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigQueueConfigArrayOutput() QuickConnectQuickConnectConfigQueueConfigArrayOutput
	ToQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(context.Context) QuickConnectQuickConnectConfigQueueConfigArrayOutput
}

type QuickConnectQuickConnectConfigQueueConfigArray []QuickConnectQuickConnectConfigQueueConfigInput

func (QuickConnectQuickConnectConfigQueueConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (i QuickConnectQuickConnectConfigQueueConfigArray) ToQuickConnectQuickConnectConfigQueueConfigArrayOutput() QuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return i.ToQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigQueueConfigArray) ToQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigQueueConfigArrayOutput)
}

type QuickConnectQuickConnectConfigQueueConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigQueueConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigQueueConfigOutput) ToQuickConnectQuickConnectConfigQueueConfigOutput() QuickConnectQuickConnectConfigQueueConfigOutput {
	return o
}

func (o QuickConnectQuickConnectConfigQueueConfigOutput) ToQuickConnectQuickConnectConfigQueueConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigQueueConfigOutput {
	return o
}

// Specifies the identifier of the contact flow.
func (o QuickConnectQuickConnectConfigQueueConfigOutput) ContactFlowId() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfigQueueConfig) string { return v.ContactFlowId }).(pulumi.StringOutput)
}

// Specifies the identifier for the queue.
func (o QuickConnectQuickConnectConfigQueueConfigOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfigQueueConfig) string { return v.QueueId }).(pulumi.StringOutput)
}

type QuickConnectQuickConnectConfigQueueConfigArrayOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigQueueConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigQueueConfigArrayOutput) ToQuickConnectQuickConnectConfigQueueConfigArrayOutput() QuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return o
}

func (o QuickConnectQuickConnectConfigQueueConfigArrayOutput) ToQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return o
}

func (o QuickConnectQuickConnectConfigQueueConfigArrayOutput) Index(i pulumi.IntInput) QuickConnectQuickConnectConfigQueueConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QuickConnectQuickConnectConfigQueueConfig {
		return vs[0].([]QuickConnectQuickConnectConfigQueueConfig)[vs[1].(int)]
	}).(QuickConnectQuickConnectConfigQueueConfigOutput)
}

type QuickConnectQuickConnectConfigUserConfig struct {
	// Specifies the identifier of the contact flow.
	ContactFlowId string `pulumi:"contactFlowId"`
	// Specifies the identifier for the user.
	UserId string `pulumi:"userId"`
}

// QuickConnectQuickConnectConfigUserConfigInput is an input type that accepts QuickConnectQuickConnectConfigUserConfigArgs and QuickConnectQuickConnectConfigUserConfigOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigUserConfigInput` via:
//
//          QuickConnectQuickConnectConfigUserConfigArgs{...}
type QuickConnectQuickConnectConfigUserConfigInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigUserConfigOutput() QuickConnectQuickConnectConfigUserConfigOutput
	ToQuickConnectQuickConnectConfigUserConfigOutputWithContext(context.Context) QuickConnectQuickConnectConfigUserConfigOutput
}

type QuickConnectQuickConnectConfigUserConfigArgs struct {
	// Specifies the identifier of the contact flow.
	ContactFlowId pulumi.StringInput `pulumi:"contactFlowId"`
	// Specifies the identifier for the user.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (QuickConnectQuickConnectConfigUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (i QuickConnectQuickConnectConfigUserConfigArgs) ToQuickConnectQuickConnectConfigUserConfigOutput() QuickConnectQuickConnectConfigUserConfigOutput {
	return i.ToQuickConnectQuickConnectConfigUserConfigOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigUserConfigArgs) ToQuickConnectQuickConnectConfigUserConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigUserConfigOutput)
}

// QuickConnectQuickConnectConfigUserConfigArrayInput is an input type that accepts QuickConnectQuickConnectConfigUserConfigArray and QuickConnectQuickConnectConfigUserConfigArrayOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigUserConfigArrayInput` via:
//
//          QuickConnectQuickConnectConfigUserConfigArray{ QuickConnectQuickConnectConfigUserConfigArgs{...} }
type QuickConnectQuickConnectConfigUserConfigArrayInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigUserConfigArrayOutput() QuickConnectQuickConnectConfigUserConfigArrayOutput
	ToQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(context.Context) QuickConnectQuickConnectConfigUserConfigArrayOutput
}

type QuickConnectQuickConnectConfigUserConfigArray []QuickConnectQuickConnectConfigUserConfigInput

func (QuickConnectQuickConnectConfigUserConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (i QuickConnectQuickConnectConfigUserConfigArray) ToQuickConnectQuickConnectConfigUserConfigArrayOutput() QuickConnectQuickConnectConfigUserConfigArrayOutput {
	return i.ToQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigUserConfigArray) ToQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigUserConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigUserConfigArrayOutput)
}

type QuickConnectQuickConnectConfigUserConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigUserConfigOutput) ToQuickConnectQuickConnectConfigUserConfigOutput() QuickConnectQuickConnectConfigUserConfigOutput {
	return o
}

func (o QuickConnectQuickConnectConfigUserConfigOutput) ToQuickConnectQuickConnectConfigUserConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigUserConfigOutput {
	return o
}

// Specifies the identifier of the contact flow.
func (o QuickConnectQuickConnectConfigUserConfigOutput) ContactFlowId() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfigUserConfig) string { return v.ContactFlowId }).(pulumi.StringOutput)
}

// Specifies the identifier for the user.
func (o QuickConnectQuickConnectConfigUserConfigOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfigUserConfig) string { return v.UserId }).(pulumi.StringOutput)
}

type QuickConnectQuickConnectConfigUserConfigArrayOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigUserConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigUserConfigArrayOutput) ToQuickConnectQuickConnectConfigUserConfigArrayOutput() QuickConnectQuickConnectConfigUserConfigArrayOutput {
	return o
}

func (o QuickConnectQuickConnectConfigUserConfigArrayOutput) ToQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigUserConfigArrayOutput {
	return o
}

func (o QuickConnectQuickConnectConfigUserConfigArrayOutput) Index(i pulumi.IntInput) QuickConnectQuickConnectConfigUserConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QuickConnectQuickConnectConfigUserConfig {
		return vs[0].([]QuickConnectQuickConnectConfigUserConfig)[vs[1].(int)]
	}).(QuickConnectQuickConnectConfigUserConfigOutput)
}

type RoutingProfileMediaConcurrency struct {
	// Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
	Channel string `pulumi:"channel"`
	// Specifies the number of contacts an agent can have on a channel simultaneously. Valid Range for `VOICE`: Minimum value of 1. Maximum value of 1. Valid Range for `CHAT`: Minimum value of 1. Maximum value of 10. Valid Range for `TASK`: Minimum value of 1. Maximum value of 10.
	Concurrency int `pulumi:"concurrency"`
}

// RoutingProfileMediaConcurrencyInput is an input type that accepts RoutingProfileMediaConcurrencyArgs and RoutingProfileMediaConcurrencyOutput values.
// You can construct a concrete instance of `RoutingProfileMediaConcurrencyInput` via:
//
//          RoutingProfileMediaConcurrencyArgs{...}
type RoutingProfileMediaConcurrencyInput interface {
	pulumi.Input

	ToRoutingProfileMediaConcurrencyOutput() RoutingProfileMediaConcurrencyOutput
	ToRoutingProfileMediaConcurrencyOutputWithContext(context.Context) RoutingProfileMediaConcurrencyOutput
}

type RoutingProfileMediaConcurrencyArgs struct {
	// Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
	Channel pulumi.StringInput `pulumi:"channel"`
	// Specifies the number of contacts an agent can have on a channel simultaneously. Valid Range for `VOICE`: Minimum value of 1. Maximum value of 1. Valid Range for `CHAT`: Minimum value of 1. Maximum value of 10. Valid Range for `TASK`: Minimum value of 1. Maximum value of 10.
	Concurrency pulumi.IntInput `pulumi:"concurrency"`
}

func (RoutingProfileMediaConcurrencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileMediaConcurrency)(nil)).Elem()
}

func (i RoutingProfileMediaConcurrencyArgs) ToRoutingProfileMediaConcurrencyOutput() RoutingProfileMediaConcurrencyOutput {
	return i.ToRoutingProfileMediaConcurrencyOutputWithContext(context.Background())
}

func (i RoutingProfileMediaConcurrencyArgs) ToRoutingProfileMediaConcurrencyOutputWithContext(ctx context.Context) RoutingProfileMediaConcurrencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileMediaConcurrencyOutput)
}

// RoutingProfileMediaConcurrencyArrayInput is an input type that accepts RoutingProfileMediaConcurrencyArray and RoutingProfileMediaConcurrencyArrayOutput values.
// You can construct a concrete instance of `RoutingProfileMediaConcurrencyArrayInput` via:
//
//          RoutingProfileMediaConcurrencyArray{ RoutingProfileMediaConcurrencyArgs{...} }
type RoutingProfileMediaConcurrencyArrayInput interface {
	pulumi.Input

	ToRoutingProfileMediaConcurrencyArrayOutput() RoutingProfileMediaConcurrencyArrayOutput
	ToRoutingProfileMediaConcurrencyArrayOutputWithContext(context.Context) RoutingProfileMediaConcurrencyArrayOutput
}

type RoutingProfileMediaConcurrencyArray []RoutingProfileMediaConcurrencyInput

func (RoutingProfileMediaConcurrencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingProfileMediaConcurrency)(nil)).Elem()
}

func (i RoutingProfileMediaConcurrencyArray) ToRoutingProfileMediaConcurrencyArrayOutput() RoutingProfileMediaConcurrencyArrayOutput {
	return i.ToRoutingProfileMediaConcurrencyArrayOutputWithContext(context.Background())
}

func (i RoutingProfileMediaConcurrencyArray) ToRoutingProfileMediaConcurrencyArrayOutputWithContext(ctx context.Context) RoutingProfileMediaConcurrencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileMediaConcurrencyArrayOutput)
}

type RoutingProfileMediaConcurrencyOutput struct{ *pulumi.OutputState }

func (RoutingProfileMediaConcurrencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileMediaConcurrency)(nil)).Elem()
}

func (o RoutingProfileMediaConcurrencyOutput) ToRoutingProfileMediaConcurrencyOutput() RoutingProfileMediaConcurrencyOutput {
	return o
}

func (o RoutingProfileMediaConcurrencyOutput) ToRoutingProfileMediaConcurrencyOutputWithContext(ctx context.Context) RoutingProfileMediaConcurrencyOutput {
	return o
}

// Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
func (o RoutingProfileMediaConcurrencyOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingProfileMediaConcurrency) string { return v.Channel }).(pulumi.StringOutput)
}

// Specifies the number of contacts an agent can have on a channel simultaneously. Valid Range for `VOICE`: Minimum value of 1. Maximum value of 1. Valid Range for `CHAT`: Minimum value of 1. Maximum value of 10. Valid Range for `TASK`: Minimum value of 1. Maximum value of 10.
func (o RoutingProfileMediaConcurrencyOutput) Concurrency() pulumi.IntOutput {
	return o.ApplyT(func(v RoutingProfileMediaConcurrency) int { return v.Concurrency }).(pulumi.IntOutput)
}

type RoutingProfileMediaConcurrencyArrayOutput struct{ *pulumi.OutputState }

func (RoutingProfileMediaConcurrencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingProfileMediaConcurrency)(nil)).Elem()
}

func (o RoutingProfileMediaConcurrencyArrayOutput) ToRoutingProfileMediaConcurrencyArrayOutput() RoutingProfileMediaConcurrencyArrayOutput {
	return o
}

func (o RoutingProfileMediaConcurrencyArrayOutput) ToRoutingProfileMediaConcurrencyArrayOutputWithContext(ctx context.Context) RoutingProfileMediaConcurrencyArrayOutput {
	return o
}

func (o RoutingProfileMediaConcurrencyArrayOutput) Index(i pulumi.IntInput) RoutingProfileMediaConcurrencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingProfileMediaConcurrency {
		return vs[0].([]RoutingProfileMediaConcurrency)[vs[1].(int)]
	}).(RoutingProfileMediaConcurrencyOutput)
}

type RoutingProfileQueueConfig struct {
	// Specifies the channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
	Channel string `pulumi:"channel"`
	// Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
	Delay int `pulumi:"delay"`
	// Specifies the order in which contacts are to be handled for the queue.
	Priority int `pulumi:"priority"`
	// Specifies the ARN for the queue.
	QueueArn *string `pulumi:"queueArn"`
	// Specifies the identifier for the queue.
	QueueId string `pulumi:"queueId"`
	// Specifies the name for the queue.
	QueueName *string `pulumi:"queueName"`
}

// RoutingProfileQueueConfigInput is an input type that accepts RoutingProfileQueueConfigArgs and RoutingProfileQueueConfigOutput values.
// You can construct a concrete instance of `RoutingProfileQueueConfigInput` via:
//
//          RoutingProfileQueueConfigArgs{...}
type RoutingProfileQueueConfigInput interface {
	pulumi.Input

	ToRoutingProfileQueueConfigOutput() RoutingProfileQueueConfigOutput
	ToRoutingProfileQueueConfigOutputWithContext(context.Context) RoutingProfileQueueConfigOutput
}

type RoutingProfileQueueConfigArgs struct {
	// Specifies the channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
	Channel pulumi.StringInput `pulumi:"channel"`
	// Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
	Delay pulumi.IntInput `pulumi:"delay"`
	// Specifies the order in which contacts are to be handled for the queue.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Specifies the ARN for the queue.
	QueueArn pulumi.StringPtrInput `pulumi:"queueArn"`
	// Specifies the identifier for the queue.
	QueueId pulumi.StringInput `pulumi:"queueId"`
	// Specifies the name for the queue.
	QueueName pulumi.StringPtrInput `pulumi:"queueName"`
}

func (RoutingProfileQueueConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileQueueConfig)(nil)).Elem()
}

func (i RoutingProfileQueueConfigArgs) ToRoutingProfileQueueConfigOutput() RoutingProfileQueueConfigOutput {
	return i.ToRoutingProfileQueueConfigOutputWithContext(context.Background())
}

func (i RoutingProfileQueueConfigArgs) ToRoutingProfileQueueConfigOutputWithContext(ctx context.Context) RoutingProfileQueueConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileQueueConfigOutput)
}

// RoutingProfileQueueConfigArrayInput is an input type that accepts RoutingProfileQueueConfigArray and RoutingProfileQueueConfigArrayOutput values.
// You can construct a concrete instance of `RoutingProfileQueueConfigArrayInput` via:
//
//          RoutingProfileQueueConfigArray{ RoutingProfileQueueConfigArgs{...} }
type RoutingProfileQueueConfigArrayInput interface {
	pulumi.Input

	ToRoutingProfileQueueConfigArrayOutput() RoutingProfileQueueConfigArrayOutput
	ToRoutingProfileQueueConfigArrayOutputWithContext(context.Context) RoutingProfileQueueConfigArrayOutput
}

type RoutingProfileQueueConfigArray []RoutingProfileQueueConfigInput

func (RoutingProfileQueueConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingProfileQueueConfig)(nil)).Elem()
}

func (i RoutingProfileQueueConfigArray) ToRoutingProfileQueueConfigArrayOutput() RoutingProfileQueueConfigArrayOutput {
	return i.ToRoutingProfileQueueConfigArrayOutputWithContext(context.Background())
}

func (i RoutingProfileQueueConfigArray) ToRoutingProfileQueueConfigArrayOutputWithContext(ctx context.Context) RoutingProfileQueueConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileQueueConfigArrayOutput)
}

type RoutingProfileQueueConfigOutput struct{ *pulumi.OutputState }

func (RoutingProfileQueueConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileQueueConfig)(nil)).Elem()
}

func (o RoutingProfileQueueConfigOutput) ToRoutingProfileQueueConfigOutput() RoutingProfileQueueConfigOutput {
	return o
}

func (o RoutingProfileQueueConfigOutput) ToRoutingProfileQueueConfigOutputWithContext(ctx context.Context) RoutingProfileQueueConfigOutput {
	return o
}

// Specifies the channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
func (o RoutingProfileQueueConfigOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) string { return v.Channel }).(pulumi.StringOutput)
}

// Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
func (o RoutingProfileQueueConfigOutput) Delay() pulumi.IntOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) int { return v.Delay }).(pulumi.IntOutput)
}

// Specifies the order in which contacts are to be handled for the queue.
func (o RoutingProfileQueueConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Specifies the ARN for the queue.
func (o RoutingProfileQueueConfigOutput) QueueArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) *string { return v.QueueArn }).(pulumi.StringPtrOutput)
}

// Specifies the identifier for the queue.
func (o RoutingProfileQueueConfigOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) string { return v.QueueId }).(pulumi.StringOutput)
}

// Specifies the name for the queue.
func (o RoutingProfileQueueConfigOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) *string { return v.QueueName }).(pulumi.StringPtrOutput)
}

type RoutingProfileQueueConfigArrayOutput struct{ *pulumi.OutputState }

func (RoutingProfileQueueConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingProfileQueueConfig)(nil)).Elem()
}

func (o RoutingProfileQueueConfigArrayOutput) ToRoutingProfileQueueConfigArrayOutput() RoutingProfileQueueConfigArrayOutput {
	return o
}

func (o RoutingProfileQueueConfigArrayOutput) ToRoutingProfileQueueConfigArrayOutputWithContext(ctx context.Context) RoutingProfileQueueConfigArrayOutput {
	return o
}

func (o RoutingProfileQueueConfigArrayOutput) Index(i pulumi.IntInput) RoutingProfileQueueConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingProfileQueueConfig {
		return vs[0].([]RoutingProfileQueueConfig)[vs[1].(int)]
	}).(RoutingProfileQueueConfigOutput)
}

type RoutingProfileQueueConfigsAssociated struct {
	// Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
	Channel *string `pulumi:"channel"`
	// Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
	Delay *int `pulumi:"delay"`
	// Specifies the order in which contacts are to be handled for the queue.
	Priority *int `pulumi:"priority"`
	// Specifies the ARN for the queue.
	QueueArn *string `pulumi:"queueArn"`
	// Specifies the identifier for the queue.
	QueueId *string `pulumi:"queueId"`
	// Specifies the name for the queue.
	QueueName *string `pulumi:"queueName"`
}

// RoutingProfileQueueConfigsAssociatedInput is an input type that accepts RoutingProfileQueueConfigsAssociatedArgs and RoutingProfileQueueConfigsAssociatedOutput values.
// You can construct a concrete instance of `RoutingProfileQueueConfigsAssociatedInput` via:
//
//          RoutingProfileQueueConfigsAssociatedArgs{...}
type RoutingProfileQueueConfigsAssociatedInput interface {
	pulumi.Input

	ToRoutingProfileQueueConfigsAssociatedOutput() RoutingProfileQueueConfigsAssociatedOutput
	ToRoutingProfileQueueConfigsAssociatedOutputWithContext(context.Context) RoutingProfileQueueConfigsAssociatedOutput
}

type RoutingProfileQueueConfigsAssociatedArgs struct {
	// Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
	Channel pulumi.StringPtrInput `pulumi:"channel"`
	// Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
	Delay pulumi.IntPtrInput `pulumi:"delay"`
	// Specifies the order in which contacts are to be handled for the queue.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Specifies the ARN for the queue.
	QueueArn pulumi.StringPtrInput `pulumi:"queueArn"`
	// Specifies the identifier for the queue.
	QueueId pulumi.StringPtrInput `pulumi:"queueId"`
	// Specifies the name for the queue.
	QueueName pulumi.StringPtrInput `pulumi:"queueName"`
}

func (RoutingProfileQueueConfigsAssociatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileQueueConfigsAssociated)(nil)).Elem()
}

func (i RoutingProfileQueueConfigsAssociatedArgs) ToRoutingProfileQueueConfigsAssociatedOutput() RoutingProfileQueueConfigsAssociatedOutput {
	return i.ToRoutingProfileQueueConfigsAssociatedOutputWithContext(context.Background())
}

func (i RoutingProfileQueueConfigsAssociatedArgs) ToRoutingProfileQueueConfigsAssociatedOutputWithContext(ctx context.Context) RoutingProfileQueueConfigsAssociatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileQueueConfigsAssociatedOutput)
}

// RoutingProfileQueueConfigsAssociatedArrayInput is an input type that accepts RoutingProfileQueueConfigsAssociatedArray and RoutingProfileQueueConfigsAssociatedArrayOutput values.
// You can construct a concrete instance of `RoutingProfileQueueConfigsAssociatedArrayInput` via:
//
//          RoutingProfileQueueConfigsAssociatedArray{ RoutingProfileQueueConfigsAssociatedArgs{...} }
type RoutingProfileQueueConfigsAssociatedArrayInput interface {
	pulumi.Input

	ToRoutingProfileQueueConfigsAssociatedArrayOutput() RoutingProfileQueueConfigsAssociatedArrayOutput
	ToRoutingProfileQueueConfigsAssociatedArrayOutputWithContext(context.Context) RoutingProfileQueueConfigsAssociatedArrayOutput
}

type RoutingProfileQueueConfigsAssociatedArray []RoutingProfileQueueConfigsAssociatedInput

func (RoutingProfileQueueConfigsAssociatedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingProfileQueueConfigsAssociated)(nil)).Elem()
}

func (i RoutingProfileQueueConfigsAssociatedArray) ToRoutingProfileQueueConfigsAssociatedArrayOutput() RoutingProfileQueueConfigsAssociatedArrayOutput {
	return i.ToRoutingProfileQueueConfigsAssociatedArrayOutputWithContext(context.Background())
}

func (i RoutingProfileQueueConfigsAssociatedArray) ToRoutingProfileQueueConfigsAssociatedArrayOutputWithContext(ctx context.Context) RoutingProfileQueueConfigsAssociatedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileQueueConfigsAssociatedArrayOutput)
}

type RoutingProfileQueueConfigsAssociatedOutput struct{ *pulumi.OutputState }

func (RoutingProfileQueueConfigsAssociatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileQueueConfigsAssociated)(nil)).Elem()
}

func (o RoutingProfileQueueConfigsAssociatedOutput) ToRoutingProfileQueueConfigsAssociatedOutput() RoutingProfileQueueConfigsAssociatedOutput {
	return o
}

func (o RoutingProfileQueueConfigsAssociatedOutput) ToRoutingProfileQueueConfigsAssociatedOutputWithContext(ctx context.Context) RoutingProfileQueueConfigsAssociatedOutput {
	return o
}

// Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
func (o RoutingProfileQueueConfigsAssociatedOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfigsAssociated) *string { return v.Channel }).(pulumi.StringPtrOutput)
}

// Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
func (o RoutingProfileQueueConfigsAssociatedOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfigsAssociated) *int { return v.Delay }).(pulumi.IntPtrOutput)
}

// Specifies the order in which contacts are to be handled for the queue.
func (o RoutingProfileQueueConfigsAssociatedOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfigsAssociated) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Specifies the ARN for the queue.
func (o RoutingProfileQueueConfigsAssociatedOutput) QueueArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfigsAssociated) *string { return v.QueueArn }).(pulumi.StringPtrOutput)
}

// Specifies the identifier for the queue.
func (o RoutingProfileQueueConfigsAssociatedOutput) QueueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfigsAssociated) *string { return v.QueueId }).(pulumi.StringPtrOutput)
}

// Specifies the name for the queue.
func (o RoutingProfileQueueConfigsAssociatedOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfigsAssociated) *string { return v.QueueName }).(pulumi.StringPtrOutput)
}

type RoutingProfileQueueConfigsAssociatedArrayOutput struct{ *pulumi.OutputState }

func (RoutingProfileQueueConfigsAssociatedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingProfileQueueConfigsAssociated)(nil)).Elem()
}

func (o RoutingProfileQueueConfigsAssociatedArrayOutput) ToRoutingProfileQueueConfigsAssociatedArrayOutput() RoutingProfileQueueConfigsAssociatedArrayOutput {
	return o
}

func (o RoutingProfileQueueConfigsAssociatedArrayOutput) ToRoutingProfileQueueConfigsAssociatedArrayOutputWithContext(ctx context.Context) RoutingProfileQueueConfigsAssociatedArrayOutput {
	return o
}

func (o RoutingProfileQueueConfigsAssociatedArrayOutput) Index(i pulumi.IntInput) RoutingProfileQueueConfigsAssociatedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingProfileQueueConfigsAssociated {
		return vs[0].([]RoutingProfileQueueConfigsAssociated)[vs[1].(int)]
	}).(RoutingProfileQueueConfigsAssociatedOutput)
}

type UserHierarchyStructureHierarchyStructure struct {
	// A block that defines the details of level five. The level block is documented below.
	LevelFive *UserHierarchyStructureHierarchyStructureLevelFive `pulumi:"levelFive"`
	// A block that defines the details of level four. The level block is documented below.
	LevelFour *UserHierarchyStructureHierarchyStructureLevelFour `pulumi:"levelFour"`
	// A block that defines the details of level one. The level block is documented below.
	LevelOne *UserHierarchyStructureHierarchyStructureLevelOne `pulumi:"levelOne"`
	// A block that defines the details of level three. The level block is documented below.
	LevelThree *UserHierarchyStructureHierarchyStructureLevelThree `pulumi:"levelThree"`
	// A block that defines the details of level two. The level block is documented below.
	LevelTwo *UserHierarchyStructureHierarchyStructureLevelTwo `pulumi:"levelTwo"`
}

// UserHierarchyStructureHierarchyStructureInput is an input type that accepts UserHierarchyStructureHierarchyStructureArgs and UserHierarchyStructureHierarchyStructureOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureInput` via:
//
//          UserHierarchyStructureHierarchyStructureArgs{...}
type UserHierarchyStructureHierarchyStructureInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureOutput() UserHierarchyStructureHierarchyStructureOutput
	ToUserHierarchyStructureHierarchyStructureOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureOutput
}

type UserHierarchyStructureHierarchyStructureArgs struct {
	// A block that defines the details of level five. The level block is documented below.
	LevelFive UserHierarchyStructureHierarchyStructureLevelFivePtrInput `pulumi:"levelFive"`
	// A block that defines the details of level four. The level block is documented below.
	LevelFour UserHierarchyStructureHierarchyStructureLevelFourPtrInput `pulumi:"levelFour"`
	// A block that defines the details of level one. The level block is documented below.
	LevelOne UserHierarchyStructureHierarchyStructureLevelOnePtrInput `pulumi:"levelOne"`
	// A block that defines the details of level three. The level block is documented below.
	LevelThree UserHierarchyStructureHierarchyStructureLevelThreePtrInput `pulumi:"levelThree"`
	// A block that defines the details of level two. The level block is documented below.
	LevelTwo UserHierarchyStructureHierarchyStructureLevelTwoPtrInput `pulumi:"levelTwo"`
}

func (UserHierarchyStructureHierarchyStructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructure)(nil)).Elem()
}

func (i UserHierarchyStructureHierarchyStructureArgs) ToUserHierarchyStructureHierarchyStructureOutput() UserHierarchyStructureHierarchyStructureOutput {
	return i.ToUserHierarchyStructureHierarchyStructureOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureArgs) ToUserHierarchyStructureHierarchyStructureOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureOutput)
}

func (i UserHierarchyStructureHierarchyStructureArgs) ToUserHierarchyStructureHierarchyStructurePtrOutput() UserHierarchyStructureHierarchyStructurePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureArgs) ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureOutput).ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(ctx)
}

// UserHierarchyStructureHierarchyStructurePtrInput is an input type that accepts UserHierarchyStructureHierarchyStructureArgs, UserHierarchyStructureHierarchyStructurePtr and UserHierarchyStructureHierarchyStructurePtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructurePtrInput` via:
//
//          UserHierarchyStructureHierarchyStructureArgs{...}
//
//  or:
//
//          nil
type UserHierarchyStructureHierarchyStructurePtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructurePtrOutput() UserHierarchyStructureHierarchyStructurePtrOutput
	ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructurePtrOutput
}

type userHierarchyStructureHierarchyStructurePtrType UserHierarchyStructureHierarchyStructureArgs

func UserHierarchyStructureHierarchyStructurePtr(v *UserHierarchyStructureHierarchyStructureArgs) UserHierarchyStructureHierarchyStructurePtrInput {
	return (*userHierarchyStructureHierarchyStructurePtrType)(v)
}

func (*userHierarchyStructureHierarchyStructurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructure)(nil)).Elem()
}

func (i *userHierarchyStructureHierarchyStructurePtrType) ToUserHierarchyStructureHierarchyStructurePtrOutput() UserHierarchyStructureHierarchyStructurePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureHierarchyStructurePtrType) ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructurePtrOutput)
}

type UserHierarchyStructureHierarchyStructureOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructure)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureOutput) ToUserHierarchyStructureHierarchyStructureOutput() UserHierarchyStructureHierarchyStructureOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureOutput) ToUserHierarchyStructureHierarchyStructureOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureOutput) ToUserHierarchyStructureHierarchyStructurePtrOutput() UserHierarchyStructureHierarchyStructurePtrOutput {
	return o.ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureHierarchyStructureOutput) ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructure {
		return &v
	}).(UserHierarchyStructureHierarchyStructurePtrOutput)
}

// A block that defines the details of level five. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructureOutput) LevelFive() UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelFive {
		return v.LevelFive
	}).(UserHierarchyStructureHierarchyStructureLevelFivePtrOutput)
}

// A block that defines the details of level four. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructureOutput) LevelFour() UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelFour {
		return v.LevelFour
	}).(UserHierarchyStructureHierarchyStructureLevelFourPtrOutput)
}

// A block that defines the details of level one. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructureOutput) LevelOne() UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelOne {
		return v.LevelOne
	}).(UserHierarchyStructureHierarchyStructureLevelOnePtrOutput)
}

// A block that defines the details of level three. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructureOutput) LevelThree() UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelThree {
		return v.LevelThree
	}).(UserHierarchyStructureHierarchyStructureLevelThreePtrOutput)
}

// A block that defines the details of level two. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructureOutput) LevelTwo() UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelTwo {
		return v.LevelTwo
	}).(UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput)
}

type UserHierarchyStructureHierarchyStructurePtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructure)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructurePtrOutput) ToUserHierarchyStructureHierarchyStructurePtrOutput() UserHierarchyStructureHierarchyStructurePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructurePtrOutput) ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructurePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructurePtrOutput) Elem() UserHierarchyStructureHierarchyStructureOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructure) UserHierarchyStructureHierarchyStructure {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureHierarchyStructure
		return ret
	}).(UserHierarchyStructureHierarchyStructureOutput)
}

// A block that defines the details of level five. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructurePtrOutput) LevelFive() UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelFive {
		if v == nil {
			return nil
		}
		return v.LevelFive
	}).(UserHierarchyStructureHierarchyStructureLevelFivePtrOutput)
}

// A block that defines the details of level four. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructurePtrOutput) LevelFour() UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelFour {
		if v == nil {
			return nil
		}
		return v.LevelFour
	}).(UserHierarchyStructureHierarchyStructureLevelFourPtrOutput)
}

// A block that defines the details of level one. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructurePtrOutput) LevelOne() UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelOne {
		if v == nil {
			return nil
		}
		return v.LevelOne
	}).(UserHierarchyStructureHierarchyStructureLevelOnePtrOutput)
}

// A block that defines the details of level three. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructurePtrOutput) LevelThree() UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelThree {
		if v == nil {
			return nil
		}
		return v.LevelThree
	}).(UserHierarchyStructureHierarchyStructureLevelThreePtrOutput)
}

// A block that defines the details of level two. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructurePtrOutput) LevelTwo() UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelTwo {
		if v == nil {
			return nil
		}
		return v.LevelTwo
	}).(UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelFive struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureHierarchyStructureLevelFiveInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelFiveArgs and UserHierarchyStructureHierarchyStructureLevelFiveOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelFiveInput` via:
//
//          UserHierarchyStructureHierarchyStructureLevelFiveArgs{...}
type UserHierarchyStructureHierarchyStructureLevelFiveInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelFiveOutput() UserHierarchyStructureHierarchyStructureLevelFiveOutput
	ToUserHierarchyStructureHierarchyStructureLevelFiveOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelFiveOutput
}

type UserHierarchyStructureHierarchyStructureLevelFiveArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureHierarchyStructureLevelFiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFive)(nil)).Elem()
}

func (i UserHierarchyStructureHierarchyStructureLevelFiveArgs) ToUserHierarchyStructureHierarchyStructureLevelFiveOutput() UserHierarchyStructureHierarchyStructureLevelFiveOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelFiveOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelFiveArgs) ToUserHierarchyStructureHierarchyStructureLevelFiveOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelFiveOutput)
}

func (i UserHierarchyStructureHierarchyStructureLevelFiveArgs) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelFiveArgs) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelFiveOutput).ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(ctx)
}

// UserHierarchyStructureHierarchyStructureLevelFivePtrInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelFiveArgs, UserHierarchyStructureHierarchyStructureLevelFivePtr and UserHierarchyStructureHierarchyStructureLevelFivePtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelFivePtrInput` via:
//
//          UserHierarchyStructureHierarchyStructureLevelFiveArgs{...}
//
//  or:
//
//          nil
type UserHierarchyStructureHierarchyStructureLevelFivePtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureHierarchyStructureLevelFivePtrOutput
	ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelFivePtrOutput
}

type userHierarchyStructureHierarchyStructureLevelFivePtrType UserHierarchyStructureHierarchyStructureLevelFiveArgs

func UserHierarchyStructureHierarchyStructureLevelFivePtr(v *UserHierarchyStructureHierarchyStructureLevelFiveArgs) UserHierarchyStructureHierarchyStructureLevelFivePtrInput {
	return (*userHierarchyStructureHierarchyStructureLevelFivePtrType)(v)
}

func (*userHierarchyStructureHierarchyStructureLevelFivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelFive)(nil)).Elem()
}

func (i *userHierarchyStructureHierarchyStructureLevelFivePtrType) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureHierarchyStructureLevelFivePtrType) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelFivePtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelFiveOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelFiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFive)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) ToUserHierarchyStructureHierarchyStructureLevelFiveOutput() UserHierarchyStructureHierarchyStructureLevelFiveOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) ToUserHierarchyStructureHierarchyStructureLevelFiveOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFiveOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return o.ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureHierarchyStructureLevelFive) *UserHierarchyStructureHierarchyStructureLevelFive {
		return &v
	}).(UserHierarchyStructureHierarchyStructureLevelFivePtrOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelFive) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelFive) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelFive) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureHierarchyStructureLevelFivePtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelFive)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) Elem() UserHierarchyStructureHierarchyStructureLevelFiveOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFive) UserHierarchyStructureHierarchyStructureLevelFive {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureHierarchyStructureLevelFive
		return ret
	}).(UserHierarchyStructureHierarchyStructureLevelFiveOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFive) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFive) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFive) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelFour struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureHierarchyStructureLevelFourInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelFourArgs and UserHierarchyStructureHierarchyStructureLevelFourOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelFourInput` via:
//
//          UserHierarchyStructureHierarchyStructureLevelFourArgs{...}
type UserHierarchyStructureHierarchyStructureLevelFourInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelFourOutput() UserHierarchyStructureHierarchyStructureLevelFourOutput
	ToUserHierarchyStructureHierarchyStructureLevelFourOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelFourOutput
}

type UserHierarchyStructureHierarchyStructureLevelFourArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureHierarchyStructureLevelFourArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFour)(nil)).Elem()
}

func (i UserHierarchyStructureHierarchyStructureLevelFourArgs) ToUserHierarchyStructureHierarchyStructureLevelFourOutput() UserHierarchyStructureHierarchyStructureLevelFourOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelFourOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelFourArgs) ToUserHierarchyStructureHierarchyStructureLevelFourOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFourOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelFourOutput)
}

func (i UserHierarchyStructureHierarchyStructureLevelFourArgs) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelFourArgs) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelFourOutput).ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(ctx)
}

// UserHierarchyStructureHierarchyStructureLevelFourPtrInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelFourArgs, UserHierarchyStructureHierarchyStructureLevelFourPtr and UserHierarchyStructureHierarchyStructureLevelFourPtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelFourPtrInput` via:
//
//          UserHierarchyStructureHierarchyStructureLevelFourArgs{...}
//
//  or:
//
//          nil
type UserHierarchyStructureHierarchyStructureLevelFourPtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureHierarchyStructureLevelFourPtrOutput
	ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelFourPtrOutput
}

type userHierarchyStructureHierarchyStructureLevelFourPtrType UserHierarchyStructureHierarchyStructureLevelFourArgs

func UserHierarchyStructureHierarchyStructureLevelFourPtr(v *UserHierarchyStructureHierarchyStructureLevelFourArgs) UserHierarchyStructureHierarchyStructureLevelFourPtrInput {
	return (*userHierarchyStructureHierarchyStructureLevelFourPtrType)(v)
}

func (*userHierarchyStructureHierarchyStructureLevelFourPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelFour)(nil)).Elem()
}

func (i *userHierarchyStructureHierarchyStructureLevelFourPtrType) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureHierarchyStructureLevelFourPtrType) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelFourPtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelFourOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelFourOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFour)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) ToUserHierarchyStructureHierarchyStructureLevelFourOutput() UserHierarchyStructureHierarchyStructureLevelFourOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) ToUserHierarchyStructureHierarchyStructureLevelFourOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFourOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return o.ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureHierarchyStructureLevelFour) *UserHierarchyStructureHierarchyStructureLevelFour {
		return &v
	}).(UserHierarchyStructureHierarchyStructureLevelFourPtrOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelFour) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelFour) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelFour) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureHierarchyStructureLevelFourPtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelFour)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) Elem() UserHierarchyStructureHierarchyStructureLevelFourOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFour) UserHierarchyStructureHierarchyStructureLevelFour {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureHierarchyStructureLevelFour
		return ret
	}).(UserHierarchyStructureHierarchyStructureLevelFourOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFour) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFour) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFour) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelOne struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureHierarchyStructureLevelOneInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelOneArgs and UserHierarchyStructureHierarchyStructureLevelOneOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelOneInput` via:
//
//          UserHierarchyStructureHierarchyStructureLevelOneArgs{...}
type UserHierarchyStructureHierarchyStructureLevelOneInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelOneOutput() UserHierarchyStructureHierarchyStructureLevelOneOutput
	ToUserHierarchyStructureHierarchyStructureLevelOneOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelOneOutput
}

type UserHierarchyStructureHierarchyStructureLevelOneArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureHierarchyStructureLevelOneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelOne)(nil)).Elem()
}

func (i UserHierarchyStructureHierarchyStructureLevelOneArgs) ToUserHierarchyStructureHierarchyStructureLevelOneOutput() UserHierarchyStructureHierarchyStructureLevelOneOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelOneOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelOneArgs) ToUserHierarchyStructureHierarchyStructureLevelOneOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelOneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelOneOutput)
}

func (i UserHierarchyStructureHierarchyStructureLevelOneArgs) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelOneArgs) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelOneOutput).ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(ctx)
}

// UserHierarchyStructureHierarchyStructureLevelOnePtrInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelOneArgs, UserHierarchyStructureHierarchyStructureLevelOnePtr and UserHierarchyStructureHierarchyStructureLevelOnePtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelOnePtrInput` via:
//
//          UserHierarchyStructureHierarchyStructureLevelOneArgs{...}
//
//  or:
//
//          nil
type UserHierarchyStructureHierarchyStructureLevelOnePtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureHierarchyStructureLevelOnePtrOutput
	ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelOnePtrOutput
}

type userHierarchyStructureHierarchyStructureLevelOnePtrType UserHierarchyStructureHierarchyStructureLevelOneArgs

func UserHierarchyStructureHierarchyStructureLevelOnePtr(v *UserHierarchyStructureHierarchyStructureLevelOneArgs) UserHierarchyStructureHierarchyStructureLevelOnePtrInput {
	return (*userHierarchyStructureHierarchyStructureLevelOnePtrType)(v)
}

func (*userHierarchyStructureHierarchyStructureLevelOnePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelOne)(nil)).Elem()
}

func (i *userHierarchyStructureHierarchyStructureLevelOnePtrType) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureHierarchyStructureLevelOnePtrType) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelOnePtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelOneOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelOneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelOne)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) ToUserHierarchyStructureHierarchyStructureLevelOneOutput() UserHierarchyStructureHierarchyStructureLevelOneOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) ToUserHierarchyStructureHierarchyStructureLevelOneOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelOneOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return o.ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureHierarchyStructureLevelOne) *UserHierarchyStructureHierarchyStructureLevelOne {
		return &v
	}).(UserHierarchyStructureHierarchyStructureLevelOnePtrOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelOne) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelOne) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelOne) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureHierarchyStructureLevelOnePtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelOne)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) Elem() UserHierarchyStructureHierarchyStructureLevelOneOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelOne) UserHierarchyStructureHierarchyStructureLevelOne {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureHierarchyStructureLevelOne
		return ret
	}).(UserHierarchyStructureHierarchyStructureLevelOneOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelOne) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelOne) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelOne) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelThree struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureHierarchyStructureLevelThreeInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelThreeArgs and UserHierarchyStructureHierarchyStructureLevelThreeOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelThreeInput` via:
//
//          UserHierarchyStructureHierarchyStructureLevelThreeArgs{...}
type UserHierarchyStructureHierarchyStructureLevelThreeInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelThreeOutput() UserHierarchyStructureHierarchyStructureLevelThreeOutput
	ToUserHierarchyStructureHierarchyStructureLevelThreeOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelThreeOutput
}

type UserHierarchyStructureHierarchyStructureLevelThreeArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureHierarchyStructureLevelThreeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelThree)(nil)).Elem()
}

func (i UserHierarchyStructureHierarchyStructureLevelThreeArgs) ToUserHierarchyStructureHierarchyStructureLevelThreeOutput() UserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelThreeOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelThreeArgs) ToUserHierarchyStructureHierarchyStructureLevelThreeOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelThreeOutput)
}

func (i UserHierarchyStructureHierarchyStructureLevelThreeArgs) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelThreeArgs) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelThreeOutput).ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(ctx)
}

// UserHierarchyStructureHierarchyStructureLevelThreePtrInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelThreeArgs, UserHierarchyStructureHierarchyStructureLevelThreePtr and UserHierarchyStructureHierarchyStructureLevelThreePtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelThreePtrInput` via:
//
//          UserHierarchyStructureHierarchyStructureLevelThreeArgs{...}
//
//  or:
//
//          nil
type UserHierarchyStructureHierarchyStructureLevelThreePtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureHierarchyStructureLevelThreePtrOutput
	ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelThreePtrOutput
}

type userHierarchyStructureHierarchyStructureLevelThreePtrType UserHierarchyStructureHierarchyStructureLevelThreeArgs

func UserHierarchyStructureHierarchyStructureLevelThreePtr(v *UserHierarchyStructureHierarchyStructureLevelThreeArgs) UserHierarchyStructureHierarchyStructureLevelThreePtrInput {
	return (*userHierarchyStructureHierarchyStructureLevelThreePtrType)(v)
}

func (*userHierarchyStructureHierarchyStructureLevelThreePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelThree)(nil)).Elem()
}

func (i *userHierarchyStructureHierarchyStructureLevelThreePtrType) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureHierarchyStructureLevelThreePtrType) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelThreePtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelThreeOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelThreeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelThree)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) ToUserHierarchyStructureHierarchyStructureLevelThreeOutput() UserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) ToUserHierarchyStructureHierarchyStructureLevelThreeOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return o.ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureHierarchyStructureLevelThree) *UserHierarchyStructureHierarchyStructureLevelThree {
		return &v
	}).(UserHierarchyStructureHierarchyStructureLevelThreePtrOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelThree) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelThree) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelThree) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureHierarchyStructureLevelThreePtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelThree)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) Elem() UserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelThree) UserHierarchyStructureHierarchyStructureLevelThree {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureHierarchyStructureLevelThree
		return ret
	}).(UserHierarchyStructureHierarchyStructureLevelThreeOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelThree) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelThree) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelThree) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelTwo struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureHierarchyStructureLevelTwoInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelTwoArgs and UserHierarchyStructureHierarchyStructureLevelTwoOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelTwoInput` via:
//
//          UserHierarchyStructureHierarchyStructureLevelTwoArgs{...}
type UserHierarchyStructureHierarchyStructureLevelTwoInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelTwoOutput() UserHierarchyStructureHierarchyStructureLevelTwoOutput
	ToUserHierarchyStructureHierarchyStructureLevelTwoOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelTwoOutput
}

type UserHierarchyStructureHierarchyStructureLevelTwoArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureHierarchyStructureLevelTwoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelTwo)(nil)).Elem()
}

func (i UserHierarchyStructureHierarchyStructureLevelTwoArgs) ToUserHierarchyStructureHierarchyStructureLevelTwoOutput() UserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelTwoOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelTwoArgs) ToUserHierarchyStructureHierarchyStructureLevelTwoOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelTwoOutput)
}

func (i UserHierarchyStructureHierarchyStructureLevelTwoArgs) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelTwoArgs) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelTwoOutput).ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(ctx)
}

// UserHierarchyStructureHierarchyStructureLevelTwoPtrInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelTwoArgs, UserHierarchyStructureHierarchyStructureLevelTwoPtr and UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelTwoPtrInput` via:
//
//          UserHierarchyStructureHierarchyStructureLevelTwoArgs{...}
//
//  or:
//
//          nil
type UserHierarchyStructureHierarchyStructureLevelTwoPtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput
	ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput
}

type userHierarchyStructureHierarchyStructureLevelTwoPtrType UserHierarchyStructureHierarchyStructureLevelTwoArgs

func UserHierarchyStructureHierarchyStructureLevelTwoPtr(v *UserHierarchyStructureHierarchyStructureLevelTwoArgs) UserHierarchyStructureHierarchyStructureLevelTwoPtrInput {
	return (*userHierarchyStructureHierarchyStructureLevelTwoPtrType)(v)
}

func (*userHierarchyStructureHierarchyStructureLevelTwoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelTwo)(nil)).Elem()
}

func (i *userHierarchyStructureHierarchyStructureLevelTwoPtrType) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureHierarchyStructureLevelTwoPtrType) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelTwoOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelTwoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelTwo)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) ToUserHierarchyStructureHierarchyStructureLevelTwoOutput() UserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) ToUserHierarchyStructureHierarchyStructureLevelTwoOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return o.ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureHierarchyStructureLevelTwo) *UserHierarchyStructureHierarchyStructureLevelTwo {
		return &v
	}).(UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelTwo) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelTwo) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelTwo) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelTwo)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) Elem() UserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelTwo) UserHierarchyStructureHierarchyStructureLevelTwo {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureHierarchyStructureLevelTwo
		return ret
	}).(UserHierarchyStructureHierarchyStructureLevelTwoOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelTwo) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelTwo) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelTwo) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type GetBotAssociationLexBot struct {
	// The Region that the Amazon Lex (V1) bot was created in.
	LexRegion string `pulumi:"lexRegion"`
	// The name of the Amazon Lex (V1) bot.
	Name string `pulumi:"name"`
}

// GetBotAssociationLexBotInput is an input type that accepts GetBotAssociationLexBotArgs and GetBotAssociationLexBotOutput values.
// You can construct a concrete instance of `GetBotAssociationLexBotInput` via:
//
//          GetBotAssociationLexBotArgs{...}
type GetBotAssociationLexBotInput interface {
	pulumi.Input

	ToGetBotAssociationLexBotOutput() GetBotAssociationLexBotOutput
	ToGetBotAssociationLexBotOutputWithContext(context.Context) GetBotAssociationLexBotOutput
}

type GetBotAssociationLexBotArgs struct {
	// The Region that the Amazon Lex (V1) bot was created in.
	LexRegion pulumi.StringInput `pulumi:"lexRegion"`
	// The name of the Amazon Lex (V1) bot.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetBotAssociationLexBotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBotAssociationLexBot)(nil)).Elem()
}

func (i GetBotAssociationLexBotArgs) ToGetBotAssociationLexBotOutput() GetBotAssociationLexBotOutput {
	return i.ToGetBotAssociationLexBotOutputWithContext(context.Background())
}

func (i GetBotAssociationLexBotArgs) ToGetBotAssociationLexBotOutputWithContext(ctx context.Context) GetBotAssociationLexBotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBotAssociationLexBotOutput)
}

type GetBotAssociationLexBotOutput struct{ *pulumi.OutputState }

func (GetBotAssociationLexBotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBotAssociationLexBot)(nil)).Elem()
}

func (o GetBotAssociationLexBotOutput) ToGetBotAssociationLexBotOutput() GetBotAssociationLexBotOutput {
	return o
}

func (o GetBotAssociationLexBotOutput) ToGetBotAssociationLexBotOutputWithContext(ctx context.Context) GetBotAssociationLexBotOutput {
	return o
}

// The Region that the Amazon Lex (V1) bot was created in.
func (o GetBotAssociationLexBotOutput) LexRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetBotAssociationLexBot) string { return v.LexRegion }).(pulumi.StringOutput)
}

// The name of the Amazon Lex (V1) bot.
func (o GetBotAssociationLexBotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBotAssociationLexBot) string { return v.Name }).(pulumi.StringOutput)
}

type GetHoursOfOperationConfig struct {
	// Specifies the day that the hours of operation applies to.
	Day string `pulumi:"day"`
	// A end time block specifies the time that your contact center closes. The `endTime` is documented below.
	EndTimes []GetHoursOfOperationConfigEndTime `pulumi:"endTimes"`
	// A start time block specifies the time that your contact center opens. The `startTime` is documented below.
	StartTimes []GetHoursOfOperationConfigStartTime `pulumi:"startTimes"`
}

// GetHoursOfOperationConfigInput is an input type that accepts GetHoursOfOperationConfigArgs and GetHoursOfOperationConfigOutput values.
// You can construct a concrete instance of `GetHoursOfOperationConfigInput` via:
//
//          GetHoursOfOperationConfigArgs{...}
type GetHoursOfOperationConfigInput interface {
	pulumi.Input

	ToGetHoursOfOperationConfigOutput() GetHoursOfOperationConfigOutput
	ToGetHoursOfOperationConfigOutputWithContext(context.Context) GetHoursOfOperationConfigOutput
}

type GetHoursOfOperationConfigArgs struct {
	// Specifies the day that the hours of operation applies to.
	Day pulumi.StringInput `pulumi:"day"`
	// A end time block specifies the time that your contact center closes. The `endTime` is documented below.
	EndTimes GetHoursOfOperationConfigEndTimeArrayInput `pulumi:"endTimes"`
	// A start time block specifies the time that your contact center opens. The `startTime` is documented below.
	StartTimes GetHoursOfOperationConfigStartTimeArrayInput `pulumi:"startTimes"`
}

func (GetHoursOfOperationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoursOfOperationConfig)(nil)).Elem()
}

func (i GetHoursOfOperationConfigArgs) ToGetHoursOfOperationConfigOutput() GetHoursOfOperationConfigOutput {
	return i.ToGetHoursOfOperationConfigOutputWithContext(context.Background())
}

func (i GetHoursOfOperationConfigArgs) ToGetHoursOfOperationConfigOutputWithContext(ctx context.Context) GetHoursOfOperationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoursOfOperationConfigOutput)
}

// GetHoursOfOperationConfigArrayInput is an input type that accepts GetHoursOfOperationConfigArray and GetHoursOfOperationConfigArrayOutput values.
// You can construct a concrete instance of `GetHoursOfOperationConfigArrayInput` via:
//
//          GetHoursOfOperationConfigArray{ GetHoursOfOperationConfigArgs{...} }
type GetHoursOfOperationConfigArrayInput interface {
	pulumi.Input

	ToGetHoursOfOperationConfigArrayOutput() GetHoursOfOperationConfigArrayOutput
	ToGetHoursOfOperationConfigArrayOutputWithContext(context.Context) GetHoursOfOperationConfigArrayOutput
}

type GetHoursOfOperationConfigArray []GetHoursOfOperationConfigInput

func (GetHoursOfOperationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoursOfOperationConfig)(nil)).Elem()
}

func (i GetHoursOfOperationConfigArray) ToGetHoursOfOperationConfigArrayOutput() GetHoursOfOperationConfigArrayOutput {
	return i.ToGetHoursOfOperationConfigArrayOutputWithContext(context.Background())
}

func (i GetHoursOfOperationConfigArray) ToGetHoursOfOperationConfigArrayOutputWithContext(ctx context.Context) GetHoursOfOperationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoursOfOperationConfigArrayOutput)
}

type GetHoursOfOperationConfigOutput struct{ *pulumi.OutputState }

func (GetHoursOfOperationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoursOfOperationConfig)(nil)).Elem()
}

func (o GetHoursOfOperationConfigOutput) ToGetHoursOfOperationConfigOutput() GetHoursOfOperationConfigOutput {
	return o
}

func (o GetHoursOfOperationConfigOutput) ToGetHoursOfOperationConfigOutputWithContext(ctx context.Context) GetHoursOfOperationConfigOutput {
	return o
}

// Specifies the day that the hours of operation applies to.
func (o GetHoursOfOperationConfigOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoursOfOperationConfig) string { return v.Day }).(pulumi.StringOutput)
}

// A end time block specifies the time that your contact center closes. The `endTime` is documented below.
func (o GetHoursOfOperationConfigOutput) EndTimes() GetHoursOfOperationConfigEndTimeArrayOutput {
	return o.ApplyT(func(v GetHoursOfOperationConfig) []GetHoursOfOperationConfigEndTime { return v.EndTimes }).(GetHoursOfOperationConfigEndTimeArrayOutput)
}

// A start time block specifies the time that your contact center opens. The `startTime` is documented below.
func (o GetHoursOfOperationConfigOutput) StartTimes() GetHoursOfOperationConfigStartTimeArrayOutput {
	return o.ApplyT(func(v GetHoursOfOperationConfig) []GetHoursOfOperationConfigStartTime { return v.StartTimes }).(GetHoursOfOperationConfigStartTimeArrayOutput)
}

type GetHoursOfOperationConfigArrayOutput struct{ *pulumi.OutputState }

func (GetHoursOfOperationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoursOfOperationConfig)(nil)).Elem()
}

func (o GetHoursOfOperationConfigArrayOutput) ToGetHoursOfOperationConfigArrayOutput() GetHoursOfOperationConfigArrayOutput {
	return o
}

func (o GetHoursOfOperationConfigArrayOutput) ToGetHoursOfOperationConfigArrayOutputWithContext(ctx context.Context) GetHoursOfOperationConfigArrayOutput {
	return o
}

func (o GetHoursOfOperationConfigArrayOutput) Index(i pulumi.IntInput) GetHoursOfOperationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHoursOfOperationConfig {
		return vs[0].([]GetHoursOfOperationConfig)[vs[1].(int)]
	}).(GetHoursOfOperationConfigOutput)
}

type GetHoursOfOperationConfigEndTime struct {
	// Specifies the hour of opening.
	Hours int `pulumi:"hours"`
	// Specifies the minute of opening.
	Minutes int `pulumi:"minutes"`
}

// GetHoursOfOperationConfigEndTimeInput is an input type that accepts GetHoursOfOperationConfigEndTimeArgs and GetHoursOfOperationConfigEndTimeOutput values.
// You can construct a concrete instance of `GetHoursOfOperationConfigEndTimeInput` via:
//
//          GetHoursOfOperationConfigEndTimeArgs{...}
type GetHoursOfOperationConfigEndTimeInput interface {
	pulumi.Input

	ToGetHoursOfOperationConfigEndTimeOutput() GetHoursOfOperationConfigEndTimeOutput
	ToGetHoursOfOperationConfigEndTimeOutputWithContext(context.Context) GetHoursOfOperationConfigEndTimeOutput
}

type GetHoursOfOperationConfigEndTimeArgs struct {
	// Specifies the hour of opening.
	Hours pulumi.IntInput `pulumi:"hours"`
	// Specifies the minute of opening.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (GetHoursOfOperationConfigEndTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoursOfOperationConfigEndTime)(nil)).Elem()
}

func (i GetHoursOfOperationConfigEndTimeArgs) ToGetHoursOfOperationConfigEndTimeOutput() GetHoursOfOperationConfigEndTimeOutput {
	return i.ToGetHoursOfOperationConfigEndTimeOutputWithContext(context.Background())
}

func (i GetHoursOfOperationConfigEndTimeArgs) ToGetHoursOfOperationConfigEndTimeOutputWithContext(ctx context.Context) GetHoursOfOperationConfigEndTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoursOfOperationConfigEndTimeOutput)
}

// GetHoursOfOperationConfigEndTimeArrayInput is an input type that accepts GetHoursOfOperationConfigEndTimeArray and GetHoursOfOperationConfigEndTimeArrayOutput values.
// You can construct a concrete instance of `GetHoursOfOperationConfigEndTimeArrayInput` via:
//
//          GetHoursOfOperationConfigEndTimeArray{ GetHoursOfOperationConfigEndTimeArgs{...} }
type GetHoursOfOperationConfigEndTimeArrayInput interface {
	pulumi.Input

	ToGetHoursOfOperationConfigEndTimeArrayOutput() GetHoursOfOperationConfigEndTimeArrayOutput
	ToGetHoursOfOperationConfigEndTimeArrayOutputWithContext(context.Context) GetHoursOfOperationConfigEndTimeArrayOutput
}

type GetHoursOfOperationConfigEndTimeArray []GetHoursOfOperationConfigEndTimeInput

func (GetHoursOfOperationConfigEndTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoursOfOperationConfigEndTime)(nil)).Elem()
}

func (i GetHoursOfOperationConfigEndTimeArray) ToGetHoursOfOperationConfigEndTimeArrayOutput() GetHoursOfOperationConfigEndTimeArrayOutput {
	return i.ToGetHoursOfOperationConfigEndTimeArrayOutputWithContext(context.Background())
}

func (i GetHoursOfOperationConfigEndTimeArray) ToGetHoursOfOperationConfigEndTimeArrayOutputWithContext(ctx context.Context) GetHoursOfOperationConfigEndTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoursOfOperationConfigEndTimeArrayOutput)
}

type GetHoursOfOperationConfigEndTimeOutput struct{ *pulumi.OutputState }

func (GetHoursOfOperationConfigEndTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoursOfOperationConfigEndTime)(nil)).Elem()
}

func (o GetHoursOfOperationConfigEndTimeOutput) ToGetHoursOfOperationConfigEndTimeOutput() GetHoursOfOperationConfigEndTimeOutput {
	return o
}

func (o GetHoursOfOperationConfigEndTimeOutput) ToGetHoursOfOperationConfigEndTimeOutputWithContext(ctx context.Context) GetHoursOfOperationConfigEndTimeOutput {
	return o
}

// Specifies the hour of opening.
func (o GetHoursOfOperationConfigEndTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v GetHoursOfOperationConfigEndTime) int { return v.Hours }).(pulumi.IntOutput)
}

// Specifies the minute of opening.
func (o GetHoursOfOperationConfigEndTimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetHoursOfOperationConfigEndTime) int { return v.Minutes }).(pulumi.IntOutput)
}

type GetHoursOfOperationConfigEndTimeArrayOutput struct{ *pulumi.OutputState }

func (GetHoursOfOperationConfigEndTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoursOfOperationConfigEndTime)(nil)).Elem()
}

func (o GetHoursOfOperationConfigEndTimeArrayOutput) ToGetHoursOfOperationConfigEndTimeArrayOutput() GetHoursOfOperationConfigEndTimeArrayOutput {
	return o
}

func (o GetHoursOfOperationConfigEndTimeArrayOutput) ToGetHoursOfOperationConfigEndTimeArrayOutputWithContext(ctx context.Context) GetHoursOfOperationConfigEndTimeArrayOutput {
	return o
}

func (o GetHoursOfOperationConfigEndTimeArrayOutput) Index(i pulumi.IntInput) GetHoursOfOperationConfigEndTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHoursOfOperationConfigEndTime {
		return vs[0].([]GetHoursOfOperationConfigEndTime)[vs[1].(int)]
	}).(GetHoursOfOperationConfigEndTimeOutput)
}

type GetHoursOfOperationConfigStartTime struct {
	// Specifies the hour of opening.
	Hours int `pulumi:"hours"`
	// Specifies the minute of opening.
	Minutes int `pulumi:"minutes"`
}

// GetHoursOfOperationConfigStartTimeInput is an input type that accepts GetHoursOfOperationConfigStartTimeArgs and GetHoursOfOperationConfigStartTimeOutput values.
// You can construct a concrete instance of `GetHoursOfOperationConfigStartTimeInput` via:
//
//          GetHoursOfOperationConfigStartTimeArgs{...}
type GetHoursOfOperationConfigStartTimeInput interface {
	pulumi.Input

	ToGetHoursOfOperationConfigStartTimeOutput() GetHoursOfOperationConfigStartTimeOutput
	ToGetHoursOfOperationConfigStartTimeOutputWithContext(context.Context) GetHoursOfOperationConfigStartTimeOutput
}

type GetHoursOfOperationConfigStartTimeArgs struct {
	// Specifies the hour of opening.
	Hours pulumi.IntInput `pulumi:"hours"`
	// Specifies the minute of opening.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (GetHoursOfOperationConfigStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoursOfOperationConfigStartTime)(nil)).Elem()
}

func (i GetHoursOfOperationConfigStartTimeArgs) ToGetHoursOfOperationConfigStartTimeOutput() GetHoursOfOperationConfigStartTimeOutput {
	return i.ToGetHoursOfOperationConfigStartTimeOutputWithContext(context.Background())
}

func (i GetHoursOfOperationConfigStartTimeArgs) ToGetHoursOfOperationConfigStartTimeOutputWithContext(ctx context.Context) GetHoursOfOperationConfigStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoursOfOperationConfigStartTimeOutput)
}

// GetHoursOfOperationConfigStartTimeArrayInput is an input type that accepts GetHoursOfOperationConfigStartTimeArray and GetHoursOfOperationConfigStartTimeArrayOutput values.
// You can construct a concrete instance of `GetHoursOfOperationConfigStartTimeArrayInput` via:
//
//          GetHoursOfOperationConfigStartTimeArray{ GetHoursOfOperationConfigStartTimeArgs{...} }
type GetHoursOfOperationConfigStartTimeArrayInput interface {
	pulumi.Input

	ToGetHoursOfOperationConfigStartTimeArrayOutput() GetHoursOfOperationConfigStartTimeArrayOutput
	ToGetHoursOfOperationConfigStartTimeArrayOutputWithContext(context.Context) GetHoursOfOperationConfigStartTimeArrayOutput
}

type GetHoursOfOperationConfigStartTimeArray []GetHoursOfOperationConfigStartTimeInput

func (GetHoursOfOperationConfigStartTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoursOfOperationConfigStartTime)(nil)).Elem()
}

func (i GetHoursOfOperationConfigStartTimeArray) ToGetHoursOfOperationConfigStartTimeArrayOutput() GetHoursOfOperationConfigStartTimeArrayOutput {
	return i.ToGetHoursOfOperationConfigStartTimeArrayOutputWithContext(context.Background())
}

func (i GetHoursOfOperationConfigStartTimeArray) ToGetHoursOfOperationConfigStartTimeArrayOutputWithContext(ctx context.Context) GetHoursOfOperationConfigStartTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoursOfOperationConfigStartTimeArrayOutput)
}

type GetHoursOfOperationConfigStartTimeOutput struct{ *pulumi.OutputState }

func (GetHoursOfOperationConfigStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoursOfOperationConfigStartTime)(nil)).Elem()
}

func (o GetHoursOfOperationConfigStartTimeOutput) ToGetHoursOfOperationConfigStartTimeOutput() GetHoursOfOperationConfigStartTimeOutput {
	return o
}

func (o GetHoursOfOperationConfigStartTimeOutput) ToGetHoursOfOperationConfigStartTimeOutputWithContext(ctx context.Context) GetHoursOfOperationConfigStartTimeOutput {
	return o
}

// Specifies the hour of opening.
func (o GetHoursOfOperationConfigStartTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v GetHoursOfOperationConfigStartTime) int { return v.Hours }).(pulumi.IntOutput)
}

// Specifies the minute of opening.
func (o GetHoursOfOperationConfigStartTimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetHoursOfOperationConfigStartTime) int { return v.Minutes }).(pulumi.IntOutput)
}

type GetHoursOfOperationConfigStartTimeArrayOutput struct{ *pulumi.OutputState }

func (GetHoursOfOperationConfigStartTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoursOfOperationConfigStartTime)(nil)).Elem()
}

func (o GetHoursOfOperationConfigStartTimeArrayOutput) ToGetHoursOfOperationConfigStartTimeArrayOutput() GetHoursOfOperationConfigStartTimeArrayOutput {
	return o
}

func (o GetHoursOfOperationConfigStartTimeArrayOutput) ToGetHoursOfOperationConfigStartTimeArrayOutputWithContext(ctx context.Context) GetHoursOfOperationConfigStartTimeArrayOutput {
	return o
}

func (o GetHoursOfOperationConfigStartTimeArrayOutput) Index(i pulumi.IntInput) GetHoursOfOperationConfigStartTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHoursOfOperationConfigStartTime {
		return vs[0].([]GetHoursOfOperationConfigStartTime)[vs[1].(int)]
	}).(GetHoursOfOperationConfigStartTimeOutput)
}

type GetQueueOutboundCallerConfig struct {
	// Specifies the caller ID name.
	OutboundCallerIdName string `pulumi:"outboundCallerIdName"`
	// Specifies the caller ID number.
	OutboundCallerIdNumberId string `pulumi:"outboundCallerIdNumberId"`
	// Specifies the outbound whisper flow to be used during an outbound call.
	OutboundFlowId string `pulumi:"outboundFlowId"`
}

// GetQueueOutboundCallerConfigInput is an input type that accepts GetQueueOutboundCallerConfigArgs and GetQueueOutboundCallerConfigOutput values.
// You can construct a concrete instance of `GetQueueOutboundCallerConfigInput` via:
//
//          GetQueueOutboundCallerConfigArgs{...}
type GetQueueOutboundCallerConfigInput interface {
	pulumi.Input

	ToGetQueueOutboundCallerConfigOutput() GetQueueOutboundCallerConfigOutput
	ToGetQueueOutboundCallerConfigOutputWithContext(context.Context) GetQueueOutboundCallerConfigOutput
}

type GetQueueOutboundCallerConfigArgs struct {
	// Specifies the caller ID name.
	OutboundCallerIdName pulumi.StringInput `pulumi:"outboundCallerIdName"`
	// Specifies the caller ID number.
	OutboundCallerIdNumberId pulumi.StringInput `pulumi:"outboundCallerIdNumberId"`
	// Specifies the outbound whisper flow to be used during an outbound call.
	OutboundFlowId pulumi.StringInput `pulumi:"outboundFlowId"`
}

func (GetQueueOutboundCallerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueOutboundCallerConfig)(nil)).Elem()
}

func (i GetQueueOutboundCallerConfigArgs) ToGetQueueOutboundCallerConfigOutput() GetQueueOutboundCallerConfigOutput {
	return i.ToGetQueueOutboundCallerConfigOutputWithContext(context.Background())
}

func (i GetQueueOutboundCallerConfigArgs) ToGetQueueOutboundCallerConfigOutputWithContext(ctx context.Context) GetQueueOutboundCallerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueOutboundCallerConfigOutput)
}

// GetQueueOutboundCallerConfigArrayInput is an input type that accepts GetQueueOutboundCallerConfigArray and GetQueueOutboundCallerConfigArrayOutput values.
// You can construct a concrete instance of `GetQueueOutboundCallerConfigArrayInput` via:
//
//          GetQueueOutboundCallerConfigArray{ GetQueueOutboundCallerConfigArgs{...} }
type GetQueueOutboundCallerConfigArrayInput interface {
	pulumi.Input

	ToGetQueueOutboundCallerConfigArrayOutput() GetQueueOutboundCallerConfigArrayOutput
	ToGetQueueOutboundCallerConfigArrayOutputWithContext(context.Context) GetQueueOutboundCallerConfigArrayOutput
}

type GetQueueOutboundCallerConfigArray []GetQueueOutboundCallerConfigInput

func (GetQueueOutboundCallerConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueOutboundCallerConfig)(nil)).Elem()
}

func (i GetQueueOutboundCallerConfigArray) ToGetQueueOutboundCallerConfigArrayOutput() GetQueueOutboundCallerConfigArrayOutput {
	return i.ToGetQueueOutboundCallerConfigArrayOutputWithContext(context.Background())
}

func (i GetQueueOutboundCallerConfigArray) ToGetQueueOutboundCallerConfigArrayOutputWithContext(ctx context.Context) GetQueueOutboundCallerConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueOutboundCallerConfigArrayOutput)
}

type GetQueueOutboundCallerConfigOutput struct{ *pulumi.OutputState }

func (GetQueueOutboundCallerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueOutboundCallerConfig)(nil)).Elem()
}

func (o GetQueueOutboundCallerConfigOutput) ToGetQueueOutboundCallerConfigOutput() GetQueueOutboundCallerConfigOutput {
	return o
}

func (o GetQueueOutboundCallerConfigOutput) ToGetQueueOutboundCallerConfigOutputWithContext(ctx context.Context) GetQueueOutboundCallerConfigOutput {
	return o
}

// Specifies the caller ID name.
func (o GetQueueOutboundCallerConfigOutput) OutboundCallerIdName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueOutboundCallerConfig) string { return v.OutboundCallerIdName }).(pulumi.StringOutput)
}

// Specifies the caller ID number.
func (o GetQueueOutboundCallerConfigOutput) OutboundCallerIdNumberId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueOutboundCallerConfig) string { return v.OutboundCallerIdNumberId }).(pulumi.StringOutput)
}

// Specifies the outbound whisper flow to be used during an outbound call.
func (o GetQueueOutboundCallerConfigOutput) OutboundFlowId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueOutboundCallerConfig) string { return v.OutboundFlowId }).(pulumi.StringOutput)
}

type GetQueueOutboundCallerConfigArrayOutput struct{ *pulumi.OutputState }

func (GetQueueOutboundCallerConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueOutboundCallerConfig)(nil)).Elem()
}

func (o GetQueueOutboundCallerConfigArrayOutput) ToGetQueueOutboundCallerConfigArrayOutput() GetQueueOutboundCallerConfigArrayOutput {
	return o
}

func (o GetQueueOutboundCallerConfigArrayOutput) ToGetQueueOutboundCallerConfigArrayOutputWithContext(ctx context.Context) GetQueueOutboundCallerConfigArrayOutput {
	return o
}

func (o GetQueueOutboundCallerConfigArrayOutput) Index(i pulumi.IntInput) GetQueueOutboundCallerConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueueOutboundCallerConfig {
		return vs[0].([]GetQueueOutboundCallerConfig)[vs[1].(int)]
	}).(GetQueueOutboundCallerConfigOutput)
}

type GetQuickConnectQuickConnectConfig struct {
	// Specifies the phone configuration of the Quick Connect. This is returned only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
	PhoneConfigs []GetQuickConnectQuickConnectConfigPhoneConfig `pulumi:"phoneConfigs"`
	// Specifies the queue configuration of the Quick Connect. This is returned only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
	QueueConfigs []GetQuickConnectQuickConnectConfigQueueConfig `pulumi:"queueConfigs"`
	// Specifies the configuration type of the Quick Connect. Valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
	QuickConnectType string `pulumi:"quickConnectType"`
	// Specifies the user configuration of the Quick Connect. This is returned only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
	UserConfigs []GetQuickConnectQuickConnectConfigUserConfig `pulumi:"userConfigs"`
}

// GetQuickConnectQuickConnectConfigInput is an input type that accepts GetQuickConnectQuickConnectConfigArgs and GetQuickConnectQuickConnectConfigOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigInput` via:
//
//          GetQuickConnectQuickConnectConfigArgs{...}
type GetQuickConnectQuickConnectConfigInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigOutput() GetQuickConnectQuickConnectConfigOutput
	ToGetQuickConnectQuickConnectConfigOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigOutput
}

type GetQuickConnectQuickConnectConfigArgs struct {
	// Specifies the phone configuration of the Quick Connect. This is returned only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
	PhoneConfigs GetQuickConnectQuickConnectConfigPhoneConfigArrayInput `pulumi:"phoneConfigs"`
	// Specifies the queue configuration of the Quick Connect. This is returned only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
	QueueConfigs GetQuickConnectQuickConnectConfigQueueConfigArrayInput `pulumi:"queueConfigs"`
	// Specifies the configuration type of the Quick Connect. Valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
	QuickConnectType pulumi.StringInput `pulumi:"quickConnectType"`
	// Specifies the user configuration of the Quick Connect. This is returned only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
	UserConfigs GetQuickConnectQuickConnectConfigUserConfigArrayInput `pulumi:"userConfigs"`
}

func (GetQuickConnectQuickConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigArgs) ToGetQuickConnectQuickConnectConfigOutput() GetQuickConnectQuickConnectConfigOutput {
	return i.ToGetQuickConnectQuickConnectConfigOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigArgs) ToGetQuickConnectQuickConnectConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigOutput)
}

// GetQuickConnectQuickConnectConfigArrayInput is an input type that accepts GetQuickConnectQuickConnectConfigArray and GetQuickConnectQuickConnectConfigArrayOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigArrayInput` via:
//
//          GetQuickConnectQuickConnectConfigArray{ GetQuickConnectQuickConnectConfigArgs{...} }
type GetQuickConnectQuickConnectConfigArrayInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigArrayOutput() GetQuickConnectQuickConnectConfigArrayOutput
	ToGetQuickConnectQuickConnectConfigArrayOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigArrayOutput
}

type GetQuickConnectQuickConnectConfigArray []GetQuickConnectQuickConnectConfigInput

func (GetQuickConnectQuickConnectConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigArray) ToGetQuickConnectQuickConnectConfigArrayOutput() GetQuickConnectQuickConnectConfigArrayOutput {
	return i.ToGetQuickConnectQuickConnectConfigArrayOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigArray) ToGetQuickConnectQuickConnectConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigArrayOutput)
}

type GetQuickConnectQuickConnectConfigOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigOutput) ToGetQuickConnectQuickConnectConfigOutput() GetQuickConnectQuickConnectConfigOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigOutput) ToGetQuickConnectQuickConnectConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigOutput {
	return o
}

// Specifies the phone configuration of the Quick Connect. This is returned only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
func (o GetQuickConnectQuickConnectConfigOutput) PhoneConfigs() GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfig) []GetQuickConnectQuickConnectConfigPhoneConfig {
		return v.PhoneConfigs
	}).(GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput)
}

// Specifies the queue configuration of the Quick Connect. This is returned only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
func (o GetQuickConnectQuickConnectConfigOutput) QueueConfigs() GetQuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfig) []GetQuickConnectQuickConnectConfigQueueConfig {
		return v.QueueConfigs
	}).(GetQuickConnectQuickConnectConfigQueueConfigArrayOutput)
}

// Specifies the configuration type of the Quick Connect. Valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
func (o GetQuickConnectQuickConnectConfigOutput) QuickConnectType() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfig) string { return v.QuickConnectType }).(pulumi.StringOutput)
}

// Specifies the user configuration of the Quick Connect. This is returned only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
func (o GetQuickConnectQuickConnectConfigOutput) UserConfigs() GetQuickConnectQuickConnectConfigUserConfigArrayOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfig) []GetQuickConnectQuickConnectConfigUserConfig {
		return v.UserConfigs
	}).(GetQuickConnectQuickConnectConfigUserConfigArrayOutput)
}

type GetQuickConnectQuickConnectConfigArrayOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigArrayOutput) ToGetQuickConnectQuickConnectConfigArrayOutput() GetQuickConnectQuickConnectConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigArrayOutput) ToGetQuickConnectQuickConnectConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigArrayOutput) Index(i pulumi.IntInput) GetQuickConnectQuickConnectConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuickConnectQuickConnectConfig {
		return vs[0].([]GetQuickConnectQuickConnectConfig)[vs[1].(int)]
	}).(GetQuickConnectQuickConnectConfigOutput)
}

type GetQuickConnectQuickConnectConfigPhoneConfig struct {
	// Specifies the phone number in in E.164 format.
	PhoneNumber string `pulumi:"phoneNumber"`
}

// GetQuickConnectQuickConnectConfigPhoneConfigInput is an input type that accepts GetQuickConnectQuickConnectConfigPhoneConfigArgs and GetQuickConnectQuickConnectConfigPhoneConfigOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigPhoneConfigInput` via:
//
//          GetQuickConnectQuickConnectConfigPhoneConfigArgs{...}
type GetQuickConnectQuickConnectConfigPhoneConfigInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigPhoneConfigOutput() GetQuickConnectQuickConnectConfigPhoneConfigOutput
	ToGetQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigPhoneConfigOutput
}

type GetQuickConnectQuickConnectConfigPhoneConfigArgs struct {
	// Specifies the phone number in in E.164 format.
	PhoneNumber pulumi.StringInput `pulumi:"phoneNumber"`
}

func (GetQuickConnectQuickConnectConfigPhoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigPhoneConfigArgs) ToGetQuickConnectQuickConnectConfigPhoneConfigOutput() GetQuickConnectQuickConnectConfigPhoneConfigOutput {
	return i.ToGetQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigPhoneConfigArgs) ToGetQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigPhoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigPhoneConfigOutput)
}

// GetQuickConnectQuickConnectConfigPhoneConfigArrayInput is an input type that accepts GetQuickConnectQuickConnectConfigPhoneConfigArray and GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigPhoneConfigArrayInput` via:
//
//          GetQuickConnectQuickConnectConfigPhoneConfigArray{ GetQuickConnectQuickConnectConfigPhoneConfigArgs{...} }
type GetQuickConnectQuickConnectConfigPhoneConfigArrayInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutput() GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput
	ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput
}

type GetQuickConnectQuickConnectConfigPhoneConfigArray []GetQuickConnectQuickConnectConfigPhoneConfigInput

func (GetQuickConnectQuickConnectConfigPhoneConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigPhoneConfigArray) ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutput() GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return i.ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigPhoneConfigArray) ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput)
}

type GetQuickConnectQuickConnectConfigPhoneConfigOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigPhoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigPhoneConfigOutput) ToGetQuickConnectQuickConnectConfigPhoneConfigOutput() GetQuickConnectQuickConnectConfigPhoneConfigOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigPhoneConfigOutput) ToGetQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigPhoneConfigOutput {
	return o
}

// Specifies the phone number in in E.164 format.
func (o GetQuickConnectQuickConnectConfigPhoneConfigOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfigPhoneConfig) string { return v.PhoneNumber }).(pulumi.StringOutput)
}

type GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput) ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutput() GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput) ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput) Index(i pulumi.IntInput) GetQuickConnectQuickConnectConfigPhoneConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuickConnectQuickConnectConfigPhoneConfig {
		return vs[0].([]GetQuickConnectQuickConnectConfigPhoneConfig)[vs[1].(int)]
	}).(GetQuickConnectQuickConnectConfigPhoneConfigOutput)
}

type GetQuickConnectQuickConnectConfigQueueConfig struct {
	// Specifies the identifier of the contact flow.
	ContactFlowId string `pulumi:"contactFlowId"`
	// Specifies the identifier for the queue.
	QueueId string `pulumi:"queueId"`
}

// GetQuickConnectQuickConnectConfigQueueConfigInput is an input type that accepts GetQuickConnectQuickConnectConfigQueueConfigArgs and GetQuickConnectQuickConnectConfigQueueConfigOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigQueueConfigInput` via:
//
//          GetQuickConnectQuickConnectConfigQueueConfigArgs{...}
type GetQuickConnectQuickConnectConfigQueueConfigInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigQueueConfigOutput() GetQuickConnectQuickConnectConfigQueueConfigOutput
	ToGetQuickConnectQuickConnectConfigQueueConfigOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigQueueConfigOutput
}

type GetQuickConnectQuickConnectConfigQueueConfigArgs struct {
	// Specifies the identifier of the contact flow.
	ContactFlowId pulumi.StringInput `pulumi:"contactFlowId"`
	// Specifies the identifier for the queue.
	QueueId pulumi.StringInput `pulumi:"queueId"`
}

func (GetQuickConnectQuickConnectConfigQueueConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigQueueConfigArgs) ToGetQuickConnectQuickConnectConfigQueueConfigOutput() GetQuickConnectQuickConnectConfigQueueConfigOutput {
	return i.ToGetQuickConnectQuickConnectConfigQueueConfigOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigQueueConfigArgs) ToGetQuickConnectQuickConnectConfigQueueConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigQueueConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigQueueConfigOutput)
}

// GetQuickConnectQuickConnectConfigQueueConfigArrayInput is an input type that accepts GetQuickConnectQuickConnectConfigQueueConfigArray and GetQuickConnectQuickConnectConfigQueueConfigArrayOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigQueueConfigArrayInput` via:
//
//          GetQuickConnectQuickConnectConfigQueueConfigArray{ GetQuickConnectQuickConnectConfigQueueConfigArgs{...} }
type GetQuickConnectQuickConnectConfigQueueConfigArrayInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutput() GetQuickConnectQuickConnectConfigQueueConfigArrayOutput
	ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigQueueConfigArrayOutput
}

type GetQuickConnectQuickConnectConfigQueueConfigArray []GetQuickConnectQuickConnectConfigQueueConfigInput

func (GetQuickConnectQuickConnectConfigQueueConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigQueueConfigArray) ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutput() GetQuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return i.ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigQueueConfigArray) ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigQueueConfigArrayOutput)
}

type GetQuickConnectQuickConnectConfigQueueConfigOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigQueueConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigQueueConfigOutput) ToGetQuickConnectQuickConnectConfigQueueConfigOutput() GetQuickConnectQuickConnectConfigQueueConfigOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigQueueConfigOutput) ToGetQuickConnectQuickConnectConfigQueueConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigQueueConfigOutput {
	return o
}

// Specifies the identifier of the contact flow.
func (o GetQuickConnectQuickConnectConfigQueueConfigOutput) ContactFlowId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfigQueueConfig) string { return v.ContactFlowId }).(pulumi.StringOutput)
}

// Specifies the identifier for the queue.
func (o GetQuickConnectQuickConnectConfigQueueConfigOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfigQueueConfig) string { return v.QueueId }).(pulumi.StringOutput)
}

type GetQuickConnectQuickConnectConfigQueueConfigArrayOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigQueueConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigQueueConfigArrayOutput) ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutput() GetQuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigQueueConfigArrayOutput) ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigQueueConfigArrayOutput) Index(i pulumi.IntInput) GetQuickConnectQuickConnectConfigQueueConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuickConnectQuickConnectConfigQueueConfig {
		return vs[0].([]GetQuickConnectQuickConnectConfigQueueConfig)[vs[1].(int)]
	}).(GetQuickConnectQuickConnectConfigQueueConfigOutput)
}

type GetQuickConnectQuickConnectConfigUserConfig struct {
	// Specifies the identifier of the contact flow.
	ContactFlowId string `pulumi:"contactFlowId"`
	// Specifies the identifier for the user.
	UserId string `pulumi:"userId"`
}

// GetQuickConnectQuickConnectConfigUserConfigInput is an input type that accepts GetQuickConnectQuickConnectConfigUserConfigArgs and GetQuickConnectQuickConnectConfigUserConfigOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigUserConfigInput` via:
//
//          GetQuickConnectQuickConnectConfigUserConfigArgs{...}
type GetQuickConnectQuickConnectConfigUserConfigInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigUserConfigOutput() GetQuickConnectQuickConnectConfigUserConfigOutput
	ToGetQuickConnectQuickConnectConfigUserConfigOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigUserConfigOutput
}

type GetQuickConnectQuickConnectConfigUserConfigArgs struct {
	// Specifies the identifier of the contact flow.
	ContactFlowId pulumi.StringInput `pulumi:"contactFlowId"`
	// Specifies the identifier for the user.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetQuickConnectQuickConnectConfigUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigUserConfigArgs) ToGetQuickConnectQuickConnectConfigUserConfigOutput() GetQuickConnectQuickConnectConfigUserConfigOutput {
	return i.ToGetQuickConnectQuickConnectConfigUserConfigOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigUserConfigArgs) ToGetQuickConnectQuickConnectConfigUserConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigUserConfigOutput)
}

// GetQuickConnectQuickConnectConfigUserConfigArrayInput is an input type that accepts GetQuickConnectQuickConnectConfigUserConfigArray and GetQuickConnectQuickConnectConfigUserConfigArrayOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigUserConfigArrayInput` via:
//
//          GetQuickConnectQuickConnectConfigUserConfigArray{ GetQuickConnectQuickConnectConfigUserConfigArgs{...} }
type GetQuickConnectQuickConnectConfigUserConfigArrayInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigUserConfigArrayOutput() GetQuickConnectQuickConnectConfigUserConfigArrayOutput
	ToGetQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigUserConfigArrayOutput
}

type GetQuickConnectQuickConnectConfigUserConfigArray []GetQuickConnectQuickConnectConfigUserConfigInput

func (GetQuickConnectQuickConnectConfigUserConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigUserConfigArray) ToGetQuickConnectQuickConnectConfigUserConfigArrayOutput() GetQuickConnectQuickConnectConfigUserConfigArrayOutput {
	return i.ToGetQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigUserConfigArray) ToGetQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigUserConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigUserConfigArrayOutput)
}

type GetQuickConnectQuickConnectConfigUserConfigOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigUserConfigOutput) ToGetQuickConnectQuickConnectConfigUserConfigOutput() GetQuickConnectQuickConnectConfigUserConfigOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigUserConfigOutput) ToGetQuickConnectQuickConnectConfigUserConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigUserConfigOutput {
	return o
}

// Specifies the identifier of the contact flow.
func (o GetQuickConnectQuickConnectConfigUserConfigOutput) ContactFlowId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfigUserConfig) string { return v.ContactFlowId }).(pulumi.StringOutput)
}

// Specifies the identifier for the user.
func (o GetQuickConnectQuickConnectConfigUserConfigOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfigUserConfig) string { return v.UserId }).(pulumi.StringOutput)
}

type GetQuickConnectQuickConnectConfigUserConfigArrayOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigUserConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigUserConfigArrayOutput) ToGetQuickConnectQuickConnectConfigUserConfigArrayOutput() GetQuickConnectQuickConnectConfigUserConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigUserConfigArrayOutput) ToGetQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigUserConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigUserConfigArrayOutput) Index(i pulumi.IntInput) GetQuickConnectQuickConnectConfigUserConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuickConnectQuickConnectConfigUserConfig {
		return vs[0].([]GetQuickConnectQuickConnectConfigUserConfig)[vs[1].(int)]
	}).(GetQuickConnectQuickConnectConfigUserConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotAssociationLexBotInput)(nil)).Elem(), BotAssociationLexBotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotAssociationLexBotPtrInput)(nil)).Elem(), BotAssociationLexBotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigInput)(nil)).Elem(), HoursOfOperationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigArrayInput)(nil)).Elem(), HoursOfOperationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigEndTimeInput)(nil)).Elem(), HoursOfOperationConfigEndTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigStartTimeInput)(nil)).Elem(), HoursOfOperationConfigStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueOutboundCallerConfigInput)(nil)).Elem(), QueueOutboundCallerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueOutboundCallerConfigPtrInput)(nil)).Elem(), QueueOutboundCallerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigInput)(nil)).Elem(), QuickConnectQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigPtrInput)(nil)).Elem(), QuickConnectQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigPhoneConfigInput)(nil)).Elem(), QuickConnectQuickConnectConfigPhoneConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigPhoneConfigArrayInput)(nil)).Elem(), QuickConnectQuickConnectConfigPhoneConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigQueueConfigInput)(nil)).Elem(), QuickConnectQuickConnectConfigQueueConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigQueueConfigArrayInput)(nil)).Elem(), QuickConnectQuickConnectConfigQueueConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigUserConfigInput)(nil)).Elem(), QuickConnectQuickConnectConfigUserConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigUserConfigArrayInput)(nil)).Elem(), QuickConnectQuickConnectConfigUserConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileMediaConcurrencyInput)(nil)).Elem(), RoutingProfileMediaConcurrencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileMediaConcurrencyArrayInput)(nil)).Elem(), RoutingProfileMediaConcurrencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileQueueConfigInput)(nil)).Elem(), RoutingProfileQueueConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileQueueConfigArrayInput)(nil)).Elem(), RoutingProfileQueueConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileQueueConfigsAssociatedInput)(nil)).Elem(), RoutingProfileQueueConfigsAssociatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileQueueConfigsAssociatedArrayInput)(nil)).Elem(), RoutingProfileQueueConfigsAssociatedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructurePtrInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFiveInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelFiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFivePtrInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelFiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFourInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelFourArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFourPtrInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelFourArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelOneInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelOneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelOnePtrInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelOneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelThreeInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelThreeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelThreePtrInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelThreeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelTwoInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelTwoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelTwoPtrInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelTwoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBotAssociationLexBotInput)(nil)).Elem(), GetBotAssociationLexBotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoursOfOperationConfigInput)(nil)).Elem(), GetHoursOfOperationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoursOfOperationConfigArrayInput)(nil)).Elem(), GetHoursOfOperationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoursOfOperationConfigEndTimeInput)(nil)).Elem(), GetHoursOfOperationConfigEndTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoursOfOperationConfigEndTimeArrayInput)(nil)).Elem(), GetHoursOfOperationConfigEndTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoursOfOperationConfigStartTimeInput)(nil)).Elem(), GetHoursOfOperationConfigStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoursOfOperationConfigStartTimeArrayInput)(nil)).Elem(), GetHoursOfOperationConfigStartTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueOutboundCallerConfigInput)(nil)).Elem(), GetQueueOutboundCallerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueOutboundCallerConfigArrayInput)(nil)).Elem(), GetQueueOutboundCallerConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigArrayInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigPhoneConfigInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigPhoneConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigPhoneConfigArrayInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigPhoneConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigQueueConfigInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigQueueConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigQueueConfigArrayInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigQueueConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigUserConfigInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigUserConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigUserConfigArrayInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigUserConfigArray{})
	pulumi.RegisterOutputType(BotAssociationLexBotOutput{})
	pulumi.RegisterOutputType(BotAssociationLexBotPtrOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigArrayOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigEndTimeOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigStartTimeOutput{})
	pulumi.RegisterOutputType(QueueOutboundCallerConfigOutput{})
	pulumi.RegisterOutputType(QueueOutboundCallerConfigPtrOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigPhoneConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigPhoneConfigArrayOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigQueueConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigQueueConfigArrayOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigUserConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigUserConfigArrayOutput{})
	pulumi.RegisterOutputType(RoutingProfileMediaConcurrencyOutput{})
	pulumi.RegisterOutputType(RoutingProfileMediaConcurrencyArrayOutput{})
	pulumi.RegisterOutputType(RoutingProfileQueueConfigOutput{})
	pulumi.RegisterOutputType(RoutingProfileQueueConfigArrayOutput{})
	pulumi.RegisterOutputType(RoutingProfileQueueConfigsAssociatedOutput{})
	pulumi.RegisterOutputType(RoutingProfileQueueConfigsAssociatedArrayOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructurePtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelFiveOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelFivePtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelFourOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelFourPtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelOneOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelOnePtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelThreeOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelThreePtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelTwoOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput{})
	pulumi.RegisterOutputType(GetBotAssociationLexBotOutput{})
	pulumi.RegisterOutputType(GetHoursOfOperationConfigOutput{})
	pulumi.RegisterOutputType(GetHoursOfOperationConfigArrayOutput{})
	pulumi.RegisterOutputType(GetHoursOfOperationConfigEndTimeOutput{})
	pulumi.RegisterOutputType(GetHoursOfOperationConfigEndTimeArrayOutput{})
	pulumi.RegisterOutputType(GetHoursOfOperationConfigStartTimeOutput{})
	pulumi.RegisterOutputType(GetHoursOfOperationConfigStartTimeArrayOutput{})
	pulumi.RegisterOutputType(GetQueueOutboundCallerConfigOutput{})
	pulumi.RegisterOutputType(GetQueueOutboundCallerConfigArrayOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigArrayOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigPhoneConfigOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigQueueConfigOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigQueueConfigArrayOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigUserConfigOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigUserConfigArrayOutput{})
}
