// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type BotAssociationLexBot struct {
	// The Region that the Amazon Lex (V1) bot was created in. Defaults to current region.
	LexRegion *string `pulumi:"lexRegion"`
	// The name of the Amazon Lex (V1) bot.
	Name string `pulumi:"name"`
}

// BotAssociationLexBotInput is an input type that accepts BotAssociationLexBotArgs and BotAssociationLexBotOutput values.
// You can construct a concrete instance of `BotAssociationLexBotInput` via:
//
//	BotAssociationLexBotArgs{...}
type BotAssociationLexBotInput interface {
	pulumi.Input

	ToBotAssociationLexBotOutput() BotAssociationLexBotOutput
	ToBotAssociationLexBotOutputWithContext(context.Context) BotAssociationLexBotOutput
}

type BotAssociationLexBotArgs struct {
	// The Region that the Amazon Lex (V1) bot was created in. Defaults to current region.
	LexRegion pulumi.StringPtrInput `pulumi:"lexRegion"`
	// The name of the Amazon Lex (V1) bot.
	Name pulumi.StringInput `pulumi:"name"`
}

func (BotAssociationLexBotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BotAssociationLexBot)(nil)).Elem()
}

func (i BotAssociationLexBotArgs) ToBotAssociationLexBotOutput() BotAssociationLexBotOutput {
	return i.ToBotAssociationLexBotOutputWithContext(context.Background())
}

func (i BotAssociationLexBotArgs) ToBotAssociationLexBotOutputWithContext(ctx context.Context) BotAssociationLexBotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotAssociationLexBotOutput)
}

func (i BotAssociationLexBotArgs) ToOutput(ctx context.Context) pulumix.Output[BotAssociationLexBot] {
	return pulumix.Output[BotAssociationLexBot]{
		OutputState: i.ToBotAssociationLexBotOutputWithContext(ctx).OutputState,
	}
}

func (i BotAssociationLexBotArgs) ToBotAssociationLexBotPtrOutput() BotAssociationLexBotPtrOutput {
	return i.ToBotAssociationLexBotPtrOutputWithContext(context.Background())
}

func (i BotAssociationLexBotArgs) ToBotAssociationLexBotPtrOutputWithContext(ctx context.Context) BotAssociationLexBotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotAssociationLexBotOutput).ToBotAssociationLexBotPtrOutputWithContext(ctx)
}

// BotAssociationLexBotPtrInput is an input type that accepts BotAssociationLexBotArgs, BotAssociationLexBotPtr and BotAssociationLexBotPtrOutput values.
// You can construct a concrete instance of `BotAssociationLexBotPtrInput` via:
//
//	        BotAssociationLexBotArgs{...}
//
//	or:
//
//	        nil
type BotAssociationLexBotPtrInput interface {
	pulumi.Input

	ToBotAssociationLexBotPtrOutput() BotAssociationLexBotPtrOutput
	ToBotAssociationLexBotPtrOutputWithContext(context.Context) BotAssociationLexBotPtrOutput
}

type botAssociationLexBotPtrType BotAssociationLexBotArgs

func BotAssociationLexBotPtr(v *BotAssociationLexBotArgs) BotAssociationLexBotPtrInput {
	return (*botAssociationLexBotPtrType)(v)
}

func (*botAssociationLexBotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BotAssociationLexBot)(nil)).Elem()
}

func (i *botAssociationLexBotPtrType) ToBotAssociationLexBotPtrOutput() BotAssociationLexBotPtrOutput {
	return i.ToBotAssociationLexBotPtrOutputWithContext(context.Background())
}

func (i *botAssociationLexBotPtrType) ToBotAssociationLexBotPtrOutputWithContext(ctx context.Context) BotAssociationLexBotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotAssociationLexBotPtrOutput)
}

func (i *botAssociationLexBotPtrType) ToOutput(ctx context.Context) pulumix.Output[*BotAssociationLexBot] {
	return pulumix.Output[*BotAssociationLexBot]{
		OutputState: i.ToBotAssociationLexBotPtrOutputWithContext(ctx).OutputState,
	}
}

type BotAssociationLexBotOutput struct{ *pulumi.OutputState }

func (BotAssociationLexBotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotAssociationLexBot)(nil)).Elem()
}

func (o BotAssociationLexBotOutput) ToBotAssociationLexBotOutput() BotAssociationLexBotOutput {
	return o
}

func (o BotAssociationLexBotOutput) ToBotAssociationLexBotOutputWithContext(ctx context.Context) BotAssociationLexBotOutput {
	return o
}

func (o BotAssociationLexBotOutput) ToBotAssociationLexBotPtrOutput() BotAssociationLexBotPtrOutput {
	return o.ToBotAssociationLexBotPtrOutputWithContext(context.Background())
}

func (o BotAssociationLexBotOutput) ToBotAssociationLexBotPtrOutputWithContext(ctx context.Context) BotAssociationLexBotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BotAssociationLexBot) *BotAssociationLexBot {
		return &v
	}).(BotAssociationLexBotPtrOutput)
}

func (o BotAssociationLexBotOutput) ToOutput(ctx context.Context) pulumix.Output[BotAssociationLexBot] {
	return pulumix.Output[BotAssociationLexBot]{
		OutputState: o.OutputState,
	}
}

// The Region that the Amazon Lex (V1) bot was created in. Defaults to current region.
func (o BotAssociationLexBotOutput) LexRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BotAssociationLexBot) *string { return v.LexRegion }).(pulumi.StringPtrOutput)
}

// The name of the Amazon Lex (V1) bot.
func (o BotAssociationLexBotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BotAssociationLexBot) string { return v.Name }).(pulumi.StringOutput)
}

type BotAssociationLexBotPtrOutput struct{ *pulumi.OutputState }

func (BotAssociationLexBotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotAssociationLexBot)(nil)).Elem()
}

func (o BotAssociationLexBotPtrOutput) ToBotAssociationLexBotPtrOutput() BotAssociationLexBotPtrOutput {
	return o
}

func (o BotAssociationLexBotPtrOutput) ToBotAssociationLexBotPtrOutputWithContext(ctx context.Context) BotAssociationLexBotPtrOutput {
	return o
}

func (o BotAssociationLexBotPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BotAssociationLexBot] {
	return pulumix.Output[*BotAssociationLexBot]{
		OutputState: o.OutputState,
	}
}

func (o BotAssociationLexBotPtrOutput) Elem() BotAssociationLexBotOutput {
	return o.ApplyT(func(v *BotAssociationLexBot) BotAssociationLexBot {
		if v != nil {
			return *v
		}
		var ret BotAssociationLexBot
		return ret
	}).(BotAssociationLexBotOutput)
}

// The Region that the Amazon Lex (V1) bot was created in. Defaults to current region.
func (o BotAssociationLexBotPtrOutput) LexRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotAssociationLexBot) *string {
		if v == nil {
			return nil
		}
		return v.LexRegion
	}).(pulumi.StringPtrOutput)
}

// The name of the Amazon Lex (V1) bot.
func (o BotAssociationLexBotPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BotAssociationLexBot) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type HoursOfOperationConfig struct {
	// Specifies the day that the hours of operation applies to.
	Day string `pulumi:"day"`
	// A end time block specifies the time that your contact center closes. The `endTime` is documented below.
	EndTime HoursOfOperationConfigEndTime `pulumi:"endTime"`
	// A start time block specifies the time that your contact center opens. The `startTime` is documented below.
	StartTime HoursOfOperationConfigStartTime `pulumi:"startTime"`
}

// HoursOfOperationConfigInput is an input type that accepts HoursOfOperationConfigArgs and HoursOfOperationConfigOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigInput` via:
//
//	HoursOfOperationConfigArgs{...}
type HoursOfOperationConfigInput interface {
	pulumi.Input

	ToHoursOfOperationConfigOutput() HoursOfOperationConfigOutput
	ToHoursOfOperationConfigOutputWithContext(context.Context) HoursOfOperationConfigOutput
}

type HoursOfOperationConfigArgs struct {
	// Specifies the day that the hours of operation applies to.
	Day pulumi.StringInput `pulumi:"day"`
	// A end time block specifies the time that your contact center closes. The `endTime` is documented below.
	EndTime HoursOfOperationConfigEndTimeInput `pulumi:"endTime"`
	// A start time block specifies the time that your contact center opens. The `startTime` is documented below.
	StartTime HoursOfOperationConfigStartTimeInput `pulumi:"startTime"`
}

func (HoursOfOperationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfig)(nil)).Elem()
}

func (i HoursOfOperationConfigArgs) ToHoursOfOperationConfigOutput() HoursOfOperationConfigOutput {
	return i.ToHoursOfOperationConfigOutputWithContext(context.Background())
}

func (i HoursOfOperationConfigArgs) ToHoursOfOperationConfigOutputWithContext(ctx context.Context) HoursOfOperationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationConfigOutput)
}

func (i HoursOfOperationConfigArgs) ToOutput(ctx context.Context) pulumix.Output[HoursOfOperationConfig] {
	return pulumix.Output[HoursOfOperationConfig]{
		OutputState: i.ToHoursOfOperationConfigOutputWithContext(ctx).OutputState,
	}
}

// HoursOfOperationConfigArrayInput is an input type that accepts HoursOfOperationConfigArray and HoursOfOperationConfigArrayOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigArrayInput` via:
//
//	HoursOfOperationConfigArray{ HoursOfOperationConfigArgs{...} }
type HoursOfOperationConfigArrayInput interface {
	pulumi.Input

	ToHoursOfOperationConfigArrayOutput() HoursOfOperationConfigArrayOutput
	ToHoursOfOperationConfigArrayOutputWithContext(context.Context) HoursOfOperationConfigArrayOutput
}

type HoursOfOperationConfigArray []HoursOfOperationConfigInput

func (HoursOfOperationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoursOfOperationConfig)(nil)).Elem()
}

func (i HoursOfOperationConfigArray) ToHoursOfOperationConfigArrayOutput() HoursOfOperationConfigArrayOutput {
	return i.ToHoursOfOperationConfigArrayOutputWithContext(context.Background())
}

func (i HoursOfOperationConfigArray) ToHoursOfOperationConfigArrayOutputWithContext(ctx context.Context) HoursOfOperationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationConfigArrayOutput)
}

func (i HoursOfOperationConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]HoursOfOperationConfig] {
	return pulumix.Output[[]HoursOfOperationConfig]{
		OutputState: i.ToHoursOfOperationConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type HoursOfOperationConfigOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfig)(nil)).Elem()
}

func (o HoursOfOperationConfigOutput) ToHoursOfOperationConfigOutput() HoursOfOperationConfigOutput {
	return o
}

func (o HoursOfOperationConfigOutput) ToHoursOfOperationConfigOutputWithContext(ctx context.Context) HoursOfOperationConfigOutput {
	return o
}

func (o HoursOfOperationConfigOutput) ToOutput(ctx context.Context) pulumix.Output[HoursOfOperationConfig] {
	return pulumix.Output[HoursOfOperationConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies the day that the hours of operation applies to.
func (o HoursOfOperationConfigOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v HoursOfOperationConfig) string { return v.Day }).(pulumi.StringOutput)
}

// A end time block specifies the time that your contact center closes. The `endTime` is documented below.
func (o HoursOfOperationConfigOutput) EndTime() HoursOfOperationConfigEndTimeOutput {
	return o.ApplyT(func(v HoursOfOperationConfig) HoursOfOperationConfigEndTime { return v.EndTime }).(HoursOfOperationConfigEndTimeOutput)
}

// A start time block specifies the time that your contact center opens. The `startTime` is documented below.
func (o HoursOfOperationConfigOutput) StartTime() HoursOfOperationConfigStartTimeOutput {
	return o.ApplyT(func(v HoursOfOperationConfig) HoursOfOperationConfigStartTime { return v.StartTime }).(HoursOfOperationConfigStartTimeOutput)
}

type HoursOfOperationConfigArrayOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoursOfOperationConfig)(nil)).Elem()
}

func (o HoursOfOperationConfigArrayOutput) ToHoursOfOperationConfigArrayOutput() HoursOfOperationConfigArrayOutput {
	return o
}

func (o HoursOfOperationConfigArrayOutput) ToHoursOfOperationConfigArrayOutputWithContext(ctx context.Context) HoursOfOperationConfigArrayOutput {
	return o
}

func (o HoursOfOperationConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]HoursOfOperationConfig] {
	return pulumix.Output[[]HoursOfOperationConfig]{
		OutputState: o.OutputState,
	}
}

func (o HoursOfOperationConfigArrayOutput) Index(i pulumi.IntInput) HoursOfOperationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HoursOfOperationConfig {
		return vs[0].([]HoursOfOperationConfig)[vs[1].(int)]
	}).(HoursOfOperationConfigOutput)
}

type HoursOfOperationConfigEndTime struct {
	// Specifies the hour of closing.
	Hours int `pulumi:"hours"`
	// Specifies the minute of closing.
	Minutes int `pulumi:"minutes"`
}

// HoursOfOperationConfigEndTimeInput is an input type that accepts HoursOfOperationConfigEndTimeArgs and HoursOfOperationConfigEndTimeOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigEndTimeInput` via:
//
//	HoursOfOperationConfigEndTimeArgs{...}
type HoursOfOperationConfigEndTimeInput interface {
	pulumi.Input

	ToHoursOfOperationConfigEndTimeOutput() HoursOfOperationConfigEndTimeOutput
	ToHoursOfOperationConfigEndTimeOutputWithContext(context.Context) HoursOfOperationConfigEndTimeOutput
}

type HoursOfOperationConfigEndTimeArgs struct {
	// Specifies the hour of closing.
	Hours pulumi.IntInput `pulumi:"hours"`
	// Specifies the minute of closing.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (HoursOfOperationConfigEndTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfigEndTime)(nil)).Elem()
}

func (i HoursOfOperationConfigEndTimeArgs) ToHoursOfOperationConfigEndTimeOutput() HoursOfOperationConfigEndTimeOutput {
	return i.ToHoursOfOperationConfigEndTimeOutputWithContext(context.Background())
}

func (i HoursOfOperationConfigEndTimeArgs) ToHoursOfOperationConfigEndTimeOutputWithContext(ctx context.Context) HoursOfOperationConfigEndTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationConfigEndTimeOutput)
}

func (i HoursOfOperationConfigEndTimeArgs) ToOutput(ctx context.Context) pulumix.Output[HoursOfOperationConfigEndTime] {
	return pulumix.Output[HoursOfOperationConfigEndTime]{
		OutputState: i.ToHoursOfOperationConfigEndTimeOutputWithContext(ctx).OutputState,
	}
}

type HoursOfOperationConfigEndTimeOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigEndTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfigEndTime)(nil)).Elem()
}

func (o HoursOfOperationConfigEndTimeOutput) ToHoursOfOperationConfigEndTimeOutput() HoursOfOperationConfigEndTimeOutput {
	return o
}

func (o HoursOfOperationConfigEndTimeOutput) ToHoursOfOperationConfigEndTimeOutputWithContext(ctx context.Context) HoursOfOperationConfigEndTimeOutput {
	return o
}

func (o HoursOfOperationConfigEndTimeOutput) ToOutput(ctx context.Context) pulumix.Output[HoursOfOperationConfigEndTime] {
	return pulumix.Output[HoursOfOperationConfigEndTime]{
		OutputState: o.OutputState,
	}
}

// Specifies the hour of closing.
func (o HoursOfOperationConfigEndTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v HoursOfOperationConfigEndTime) int { return v.Hours }).(pulumi.IntOutput)
}

// Specifies the minute of closing.
func (o HoursOfOperationConfigEndTimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v HoursOfOperationConfigEndTime) int { return v.Minutes }).(pulumi.IntOutput)
}

type HoursOfOperationConfigStartTime struct {
	// Specifies the hour of opening.
	Hours int `pulumi:"hours"`
	// Specifies the minute of opening.
	Minutes int `pulumi:"minutes"`
}

// HoursOfOperationConfigStartTimeInput is an input type that accepts HoursOfOperationConfigStartTimeArgs and HoursOfOperationConfigStartTimeOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigStartTimeInput` via:
//
//	HoursOfOperationConfigStartTimeArgs{...}
type HoursOfOperationConfigStartTimeInput interface {
	pulumi.Input

	ToHoursOfOperationConfigStartTimeOutput() HoursOfOperationConfigStartTimeOutput
	ToHoursOfOperationConfigStartTimeOutputWithContext(context.Context) HoursOfOperationConfigStartTimeOutput
}

type HoursOfOperationConfigStartTimeArgs struct {
	// Specifies the hour of opening.
	Hours pulumi.IntInput `pulumi:"hours"`
	// Specifies the minute of opening.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (HoursOfOperationConfigStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfigStartTime)(nil)).Elem()
}

func (i HoursOfOperationConfigStartTimeArgs) ToHoursOfOperationConfigStartTimeOutput() HoursOfOperationConfigStartTimeOutput {
	return i.ToHoursOfOperationConfigStartTimeOutputWithContext(context.Background())
}

func (i HoursOfOperationConfigStartTimeArgs) ToHoursOfOperationConfigStartTimeOutputWithContext(ctx context.Context) HoursOfOperationConfigStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationConfigStartTimeOutput)
}

func (i HoursOfOperationConfigStartTimeArgs) ToOutput(ctx context.Context) pulumix.Output[HoursOfOperationConfigStartTime] {
	return pulumix.Output[HoursOfOperationConfigStartTime]{
		OutputState: i.ToHoursOfOperationConfigStartTimeOutputWithContext(ctx).OutputState,
	}
}

type HoursOfOperationConfigStartTimeOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfigStartTime)(nil)).Elem()
}

func (o HoursOfOperationConfigStartTimeOutput) ToHoursOfOperationConfigStartTimeOutput() HoursOfOperationConfigStartTimeOutput {
	return o
}

func (o HoursOfOperationConfigStartTimeOutput) ToHoursOfOperationConfigStartTimeOutputWithContext(ctx context.Context) HoursOfOperationConfigStartTimeOutput {
	return o
}

func (o HoursOfOperationConfigStartTimeOutput) ToOutput(ctx context.Context) pulumix.Output[HoursOfOperationConfigStartTime] {
	return pulumix.Output[HoursOfOperationConfigStartTime]{
		OutputState: o.OutputState,
	}
}

// Specifies the hour of opening.
func (o HoursOfOperationConfigStartTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v HoursOfOperationConfigStartTime) int { return v.Hours }).(pulumi.IntOutput)
}

// Specifies the minute of opening.
func (o HoursOfOperationConfigStartTimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v HoursOfOperationConfigStartTime) int { return v.Minutes }).(pulumi.IntOutput)
}

type InstanceStorageConfigStorageConfig struct {
	// A block that specifies the configuration of the Kinesis Firehose delivery stream. Documented below.
	KinesisFirehoseConfig *InstanceStorageConfigStorageConfigKinesisFirehoseConfig `pulumi:"kinesisFirehoseConfig"`
	// A block that specifies the configuration of the Kinesis data stream. Documented below.
	KinesisStreamConfig *InstanceStorageConfigStorageConfigKinesisStreamConfig `pulumi:"kinesisStreamConfig"`
	// A block that specifies the configuration of the Kinesis video stream. Documented below.
	KinesisVideoStreamConfig *InstanceStorageConfigStorageConfigKinesisVideoStreamConfig `pulumi:"kinesisVideoStreamConfig"`
	// A block that specifies the configuration of S3 Bucket. Documented below.
	S3Config *InstanceStorageConfigStorageConfigS3Config `pulumi:"s3Config"`
	// A valid storage type. Valid Values: `S3` | `KINESIS_VIDEO_STREAM` | `KINESIS_STREAM` | `KINESIS_FIREHOSE`.
	StorageType string `pulumi:"storageType"`
}

// InstanceStorageConfigStorageConfigInput is an input type that accepts InstanceStorageConfigStorageConfigArgs and InstanceStorageConfigStorageConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageConfigInput` via:
//
//	InstanceStorageConfigStorageConfigArgs{...}
type InstanceStorageConfigStorageConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageConfigOutput() InstanceStorageConfigStorageConfigOutput
	ToInstanceStorageConfigStorageConfigOutputWithContext(context.Context) InstanceStorageConfigStorageConfigOutput
}

type InstanceStorageConfigStorageConfigArgs struct {
	// A block that specifies the configuration of the Kinesis Firehose delivery stream. Documented below.
	KinesisFirehoseConfig InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrInput `pulumi:"kinesisFirehoseConfig"`
	// A block that specifies the configuration of the Kinesis data stream. Documented below.
	KinesisStreamConfig InstanceStorageConfigStorageConfigKinesisStreamConfigPtrInput `pulumi:"kinesisStreamConfig"`
	// A block that specifies the configuration of the Kinesis video stream. Documented below.
	KinesisVideoStreamConfig InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrInput `pulumi:"kinesisVideoStreamConfig"`
	// A block that specifies the configuration of S3 Bucket. Documented below.
	S3Config InstanceStorageConfigStorageConfigS3ConfigPtrInput `pulumi:"s3Config"`
	// A valid storage type. Valid Values: `S3` | `KINESIS_VIDEO_STREAM` | `KINESIS_STREAM` | `KINESIS_FIREHOSE`.
	StorageType pulumi.StringInput `pulumi:"storageType"`
}

func (InstanceStorageConfigStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageConfig)(nil)).Elem()
}

func (i InstanceStorageConfigStorageConfigArgs) ToInstanceStorageConfigStorageConfigOutput() InstanceStorageConfigStorageConfigOutput {
	return i.ToInstanceStorageConfigStorageConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigStorageConfigArgs) ToInstanceStorageConfigStorageConfigOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigOutput)
}

func (i InstanceStorageConfigStorageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageConfig] {
	return pulumix.Output[InstanceStorageConfigStorageConfig]{
		OutputState: i.ToInstanceStorageConfigStorageConfigOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceStorageConfigStorageConfigArgs) ToInstanceStorageConfigStorageConfigPtrOutput() InstanceStorageConfigStorageConfigPtrOutput {
	return i.ToInstanceStorageConfigStorageConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigStorageConfigArgs) ToInstanceStorageConfigStorageConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigOutput).ToInstanceStorageConfigStorageConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigStorageConfigPtrInput is an input type that accepts InstanceStorageConfigStorageConfigArgs, InstanceStorageConfigStorageConfigPtr and InstanceStorageConfigStorageConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageConfigPtrInput` via:
//
//	        InstanceStorageConfigStorageConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigStorageConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageConfigPtrOutput() InstanceStorageConfigStorageConfigPtrOutput
	ToInstanceStorageConfigStorageConfigPtrOutputWithContext(context.Context) InstanceStorageConfigStorageConfigPtrOutput
}

type instanceStorageConfigStorageConfigPtrType InstanceStorageConfigStorageConfigArgs

func InstanceStorageConfigStorageConfigPtr(v *InstanceStorageConfigStorageConfigArgs) InstanceStorageConfigStorageConfigPtrInput {
	return (*instanceStorageConfigStorageConfigPtrType)(v)
}

func (*instanceStorageConfigStorageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageConfig)(nil)).Elem()
}

func (i *instanceStorageConfigStorageConfigPtrType) ToInstanceStorageConfigStorageConfigPtrOutput() InstanceStorageConfigStorageConfigPtrOutput {
	return i.ToInstanceStorageConfigStorageConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigStorageConfigPtrType) ToInstanceStorageConfigStorageConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigPtrOutput)
}

func (i *instanceStorageConfigStorageConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageConfig] {
	return pulumix.Output[*InstanceStorageConfigStorageConfig]{
		OutputState: i.ToInstanceStorageConfigStorageConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceStorageConfigStorageConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageConfig)(nil)).Elem()
}

func (o InstanceStorageConfigStorageConfigOutput) ToInstanceStorageConfigStorageConfigOutput() InstanceStorageConfigStorageConfigOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigOutput) ToInstanceStorageConfigStorageConfigOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigOutput) ToInstanceStorageConfigStorageConfigPtrOutput() InstanceStorageConfigStorageConfigPtrOutput {
	return o.ToInstanceStorageConfigStorageConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageConfigOutput) ToInstanceStorageConfigStorageConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigStorageConfig) *InstanceStorageConfigStorageConfig {
		return &v
	}).(InstanceStorageConfigStorageConfigPtrOutput)
}

func (o InstanceStorageConfigStorageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageConfig] {
	return pulumix.Output[InstanceStorageConfigStorageConfig]{
		OutputState: o.OutputState,
	}
}

// A block that specifies the configuration of the Kinesis Firehose delivery stream. Documented below.
func (o InstanceStorageConfigStorageConfigOutput) KinesisFirehoseConfig() InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfig) *InstanceStorageConfigStorageConfigKinesisFirehoseConfig {
		return v.KinesisFirehoseConfig
	}).(InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput)
}

// A block that specifies the configuration of the Kinesis data stream. Documented below.
func (o InstanceStorageConfigStorageConfigOutput) KinesisStreamConfig() InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfig) *InstanceStorageConfigStorageConfigKinesisStreamConfig {
		return v.KinesisStreamConfig
	}).(InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput)
}

// A block that specifies the configuration of the Kinesis video stream. Documented below.
func (o InstanceStorageConfigStorageConfigOutput) KinesisVideoStreamConfig() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfig) *InstanceStorageConfigStorageConfigKinesisVideoStreamConfig {
		return v.KinesisVideoStreamConfig
	}).(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput)
}

// A block that specifies the configuration of S3 Bucket. Documented below.
func (o InstanceStorageConfigStorageConfigOutput) S3Config() InstanceStorageConfigStorageConfigS3ConfigPtrOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfig) *InstanceStorageConfigStorageConfigS3Config {
		return v.S3Config
	}).(InstanceStorageConfigStorageConfigS3ConfigPtrOutput)
}

// A valid storage type. Valid Values: `S3` | `KINESIS_VIDEO_STREAM` | `KINESIS_STREAM` | `KINESIS_FIREHOSE`.
func (o InstanceStorageConfigStorageConfigOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfig) string { return v.StorageType }).(pulumi.StringOutput)
}

type InstanceStorageConfigStorageConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageConfig)(nil)).Elem()
}

func (o InstanceStorageConfigStorageConfigPtrOutput) ToInstanceStorageConfigStorageConfigPtrOutput() InstanceStorageConfigStorageConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigPtrOutput) ToInstanceStorageConfigStorageConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageConfig] {
	return pulumix.Output[*InstanceStorageConfigStorageConfig]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStorageConfigStorageConfigPtrOutput) Elem() InstanceStorageConfigStorageConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfig) InstanceStorageConfigStorageConfig {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigStorageConfig
		return ret
	}).(InstanceStorageConfigStorageConfigOutput)
}

// A block that specifies the configuration of the Kinesis Firehose delivery stream. Documented below.
func (o InstanceStorageConfigStorageConfigPtrOutput) KinesisFirehoseConfig() InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfig) *InstanceStorageConfigStorageConfigKinesisFirehoseConfig {
		if v == nil {
			return nil
		}
		return v.KinesisFirehoseConfig
	}).(InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput)
}

// A block that specifies the configuration of the Kinesis data stream. Documented below.
func (o InstanceStorageConfigStorageConfigPtrOutput) KinesisStreamConfig() InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfig) *InstanceStorageConfigStorageConfigKinesisStreamConfig {
		if v == nil {
			return nil
		}
		return v.KinesisStreamConfig
	}).(InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput)
}

// A block that specifies the configuration of the Kinesis video stream. Documented below.
func (o InstanceStorageConfigStorageConfigPtrOutput) KinesisVideoStreamConfig() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfig) *InstanceStorageConfigStorageConfigKinesisVideoStreamConfig {
		if v == nil {
			return nil
		}
		return v.KinesisVideoStreamConfig
	}).(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput)
}

// A block that specifies the configuration of S3 Bucket. Documented below.
func (o InstanceStorageConfigStorageConfigPtrOutput) S3Config() InstanceStorageConfigStorageConfigS3ConfigPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfig) *InstanceStorageConfigStorageConfigS3Config {
		if v == nil {
			return nil
		}
		return v.S3Config
	}).(InstanceStorageConfigStorageConfigS3ConfigPtrOutput)
}

// A valid storage type. Valid Values: `S3` | `KINESIS_VIDEO_STREAM` | `KINESIS_STREAM` | `KINESIS_FIREHOSE`.
func (o InstanceStorageConfigStorageConfigPtrOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StorageType
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigStorageConfigKinesisFirehoseConfig struct {
	// The Amazon Resource Name (ARN) of the delivery stream.
	FirehoseArn string `pulumi:"firehoseArn"`
}

// InstanceStorageConfigStorageConfigKinesisFirehoseConfigInput is an input type that accepts InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs and InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageConfigKinesisFirehoseConfigInput` via:
//
//	InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs{...}
type InstanceStorageConfigStorageConfigKinesisFirehoseConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput() InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput
	ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutputWithContext(context.Context) InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput
}

type InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs struct {
	// The Amazon Resource Name (ARN) of the delivery stream.
	FirehoseArn pulumi.StringInput `pulumi:"firehoseArn"`
}

func (InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (i InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs) ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput() InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput {
	return i.ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs) ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput)
}

func (i InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageConfigKinesisFirehoseConfig] {
	return pulumix.Output[InstanceStorageConfigStorageConfigKinesisFirehoseConfig]{
		OutputState: i.ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs) ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput {
	return i.ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs) ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput).ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrInput is an input type that accepts InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs, InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtr and InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrInput` via:
//
//	        InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput
	ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutputWithContext(context.Context) InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput
}

type instanceStorageConfigStorageConfigKinesisFirehoseConfigPtrType InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs

func InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtr(v *InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs) InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrInput {
	return (*instanceStorageConfigStorageConfigKinesisFirehoseConfigPtrType)(v)
}

func (*instanceStorageConfigStorageConfigKinesisFirehoseConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (i *instanceStorageConfigStorageConfigKinesisFirehoseConfigPtrType) ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput {
	return i.ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigStorageConfigKinesisFirehoseConfigPtrType) ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput)
}

func (i *instanceStorageConfigStorageConfigKinesisFirehoseConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageConfigKinesisFirehoseConfig] {
	return pulumix.Output[*InstanceStorageConfigStorageConfigKinesisFirehoseConfig]{
		OutputState: i.ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (o InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput) ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput() InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput) ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput) ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput {
	return o.ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput) ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigStorageConfigKinesisFirehoseConfig) *InstanceStorageConfigStorageConfigKinesisFirehoseConfig {
		return &v
	}).(InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput)
}

func (o InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageConfigKinesisFirehoseConfig] {
	return pulumix.Output[InstanceStorageConfigStorageConfigKinesisFirehoseConfig]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the delivery stream.
func (o InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput) FirehoseArn() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfigKinesisFirehoseConfig) string { return v.FirehoseArn }).(pulumi.StringOutput)
}

type InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (o InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput) ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput) ToInstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageConfigKinesisFirehoseConfig] {
	return pulumix.Output[*InstanceStorageConfigStorageConfigKinesisFirehoseConfig]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput) Elem() InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigKinesisFirehoseConfig) InstanceStorageConfigStorageConfigKinesisFirehoseConfig {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigStorageConfigKinesisFirehoseConfig
		return ret
	}).(InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput)
}

// The Amazon Resource Name (ARN) of the delivery stream.
func (o InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput) FirehoseArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigKinesisFirehoseConfig) *string {
		if v == nil {
			return nil
		}
		return &v.FirehoseArn
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigStorageConfigKinesisStreamConfig struct {
	// The Amazon Resource Name (ARN) of the data stream.
	StreamArn string `pulumi:"streamArn"`
}

// InstanceStorageConfigStorageConfigKinesisStreamConfigInput is an input type that accepts InstanceStorageConfigStorageConfigKinesisStreamConfigArgs and InstanceStorageConfigStorageConfigKinesisStreamConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageConfigKinesisStreamConfigInput` via:
//
//	InstanceStorageConfigStorageConfigKinesisStreamConfigArgs{...}
type InstanceStorageConfigStorageConfigKinesisStreamConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageConfigKinesisStreamConfigOutput() InstanceStorageConfigStorageConfigKinesisStreamConfigOutput
	ToInstanceStorageConfigStorageConfigKinesisStreamConfigOutputWithContext(context.Context) InstanceStorageConfigStorageConfigKinesisStreamConfigOutput
}

type InstanceStorageConfigStorageConfigKinesisStreamConfigArgs struct {
	// The Amazon Resource Name (ARN) of the data stream.
	StreamArn pulumi.StringInput `pulumi:"streamArn"`
}

func (InstanceStorageConfigStorageConfigKinesisStreamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (i InstanceStorageConfigStorageConfigKinesisStreamConfigArgs) ToInstanceStorageConfigStorageConfigKinesisStreamConfigOutput() InstanceStorageConfigStorageConfigKinesisStreamConfigOutput {
	return i.ToInstanceStorageConfigStorageConfigKinesisStreamConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigStorageConfigKinesisStreamConfigArgs) ToInstanceStorageConfigStorageConfigKinesisStreamConfigOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisStreamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigKinesisStreamConfigOutput)
}

func (i InstanceStorageConfigStorageConfigKinesisStreamConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageConfigKinesisStreamConfig] {
	return pulumix.Output[InstanceStorageConfigStorageConfigKinesisStreamConfig]{
		OutputState: i.ToInstanceStorageConfigStorageConfigKinesisStreamConfigOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceStorageConfigStorageConfigKinesisStreamConfigArgs) ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput {
	return i.ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigStorageConfigKinesisStreamConfigArgs) ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigKinesisStreamConfigOutput).ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigStorageConfigKinesisStreamConfigPtrInput is an input type that accepts InstanceStorageConfigStorageConfigKinesisStreamConfigArgs, InstanceStorageConfigStorageConfigKinesisStreamConfigPtr and InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageConfigKinesisStreamConfigPtrInput` via:
//
//	        InstanceStorageConfigStorageConfigKinesisStreamConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigStorageConfigKinesisStreamConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput
	ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutputWithContext(context.Context) InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput
}

type instanceStorageConfigStorageConfigKinesisStreamConfigPtrType InstanceStorageConfigStorageConfigKinesisStreamConfigArgs

func InstanceStorageConfigStorageConfigKinesisStreamConfigPtr(v *InstanceStorageConfigStorageConfigKinesisStreamConfigArgs) InstanceStorageConfigStorageConfigKinesisStreamConfigPtrInput {
	return (*instanceStorageConfigStorageConfigKinesisStreamConfigPtrType)(v)
}

func (*instanceStorageConfigStorageConfigKinesisStreamConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (i *instanceStorageConfigStorageConfigKinesisStreamConfigPtrType) ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput {
	return i.ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigStorageConfigKinesisStreamConfigPtrType) ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput)
}

func (i *instanceStorageConfigStorageConfigKinesisStreamConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageConfigKinesisStreamConfig] {
	return pulumix.Output[*InstanceStorageConfigStorageConfigKinesisStreamConfig]{
		OutputState: i.ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceStorageConfigStorageConfigKinesisStreamConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageConfigKinesisStreamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (o InstanceStorageConfigStorageConfigKinesisStreamConfigOutput) ToInstanceStorageConfigStorageConfigKinesisStreamConfigOutput() InstanceStorageConfigStorageConfigKinesisStreamConfigOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisStreamConfigOutput) ToInstanceStorageConfigStorageConfigKinesisStreamConfigOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisStreamConfigOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisStreamConfigOutput) ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput {
	return o.ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageConfigKinesisStreamConfigOutput) ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigStorageConfigKinesisStreamConfig) *InstanceStorageConfigStorageConfigKinesisStreamConfig {
		return &v
	}).(InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput)
}

func (o InstanceStorageConfigStorageConfigKinesisStreamConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageConfigKinesisStreamConfig] {
	return pulumix.Output[InstanceStorageConfigStorageConfigKinesisStreamConfig]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the data stream.
func (o InstanceStorageConfigStorageConfigKinesisStreamConfigOutput) StreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfigKinesisStreamConfig) string { return v.StreamArn }).(pulumi.StringOutput)
}

type InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (o InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput) ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput) ToInstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageConfigKinesisStreamConfig] {
	return pulumix.Output[*InstanceStorageConfigStorageConfigKinesisStreamConfig]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput) Elem() InstanceStorageConfigStorageConfigKinesisStreamConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigKinesisStreamConfig) InstanceStorageConfigStorageConfigKinesisStreamConfig {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigStorageConfigKinesisStreamConfig
		return ret
	}).(InstanceStorageConfigStorageConfigKinesisStreamConfigOutput)
}

// The Amazon Resource Name (ARN) of the data stream.
func (o InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput) StreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigKinesisStreamConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StreamArn
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigStorageConfigKinesisVideoStreamConfig struct {
	// The encryption configuration. Documented below.
	EncryptionConfig InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig `pulumi:"encryptionConfig"`
	// The prefix of the video stream. Minimum length of `1`. Maximum length of `128`. When read from the state, the value returned is `<prefix>-connect-<connect_instance_alias>-contact-` since the API appends additional details to the `prefix`.
	Prefix string `pulumi:"prefix"`
	// The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream. Minimum value of `0`. Maximum value of `87600`. A value of `0`, indicates that the stream does not persist data.
	RetentionPeriodHours int `pulumi:"retentionPeriodHours"`
}

// InstanceStorageConfigStorageConfigKinesisVideoStreamConfigInput is an input type that accepts InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs and InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageConfigKinesisVideoStreamConfigInput` via:
//
//	InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs{...}
type InstanceStorageConfigStorageConfigKinesisVideoStreamConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput
	ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutputWithContext(context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput
}

type InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs struct {
	// The encryption configuration. Documented below.
	EncryptionConfig InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigInput `pulumi:"encryptionConfig"`
	// The prefix of the video stream. Minimum length of `1`. Maximum length of `128`. When read from the state, the value returned is `<prefix>-connect-<connect_instance_alias>-contact-` since the API appends additional details to the `prefix`.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream. Minimum value of `0`. Maximum value of `87600`. A value of `0`, indicates that the stream does not persist data.
	RetentionPeriodHours pulumi.IntInput `pulumi:"retentionPeriodHours"`
}

func (InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (i InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput {
	return i.ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput)
}

func (i InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageConfigKinesisVideoStreamConfig] {
	return pulumix.Output[InstanceStorageConfigStorageConfigKinesisVideoStreamConfig]{
		OutputState: i.ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput {
	return i.ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput).ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrInput is an input type that accepts InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs, InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtr and InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrInput` via:
//
//	        InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput
	ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput
}

type instanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrType InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs

func InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtr(v *InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrInput {
	return (*instanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrType)(v)
}

func (*instanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (i *instanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrType) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput {
	return i.ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrType) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput)
}

func (i *instanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageConfigKinesisVideoStreamConfig] {
	return pulumix.Output[*InstanceStorageConfigStorageConfigKinesisVideoStreamConfig]{
		OutputState: i.ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput {
	return o.ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigStorageConfigKinesisVideoStreamConfig) *InstanceStorageConfigStorageConfigKinesisVideoStreamConfig {
		return &v
	}).(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput)
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageConfigKinesisVideoStreamConfig] {
	return pulumix.Output[InstanceStorageConfigStorageConfigKinesisVideoStreamConfig]{
		OutputState: o.OutputState,
	}
}

// The encryption configuration. Documented below.
func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) EncryptionConfig() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfigKinesisVideoStreamConfig) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig {
		return v.EncryptionConfig
	}).(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput)
}

// The prefix of the video stream. Minimum length of `1`. Maximum length of `128`. When read from the state, the value returned is `<prefix>-connect-<connect_instance_alias>-contact-` since the API appends additional details to the `prefix`.
func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfigKinesisVideoStreamConfig) string { return v.Prefix }).(pulumi.StringOutput)
}

// The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream. Minimum value of `0`. Maximum value of `87600`. A value of `0`, indicates that the stream does not persist data.
func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) RetentionPeriodHours() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfigKinesisVideoStreamConfig) int { return v.RetentionPeriodHours }).(pulumi.IntOutput)
}

type InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageConfigKinesisVideoStreamConfig] {
	return pulumix.Output[*InstanceStorageConfigStorageConfigKinesisVideoStreamConfig]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput) Elem() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigKinesisVideoStreamConfig) InstanceStorageConfigStorageConfigKinesisVideoStreamConfig {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigStorageConfigKinesisVideoStreamConfig
		return ret
	}).(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput)
}

// The encryption configuration. Documented below.
func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput) EncryptionConfig() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigKinesisVideoStreamConfig) *InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig {
		if v == nil {
			return nil
		}
		return &v.EncryptionConfig
	}).(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput)
}

// The prefix of the video stream. Minimum length of `1`. Maximum length of `128`. When read from the state, the value returned is `<prefix>-connect-<connect_instance_alias>-contact-` since the API appends additional details to the `prefix`.
func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigKinesisVideoStreamConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream. Minimum value of `0`. Maximum value of `87600`. A value of `0`, indicates that the stream does not persist data.
func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput) RetentionPeriodHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigKinesisVideoStreamConfig) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionPeriodHours
	}).(pulumi.IntPtrOutput)
}

type InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig struct {
	// The type of encryption. Valid Values: `KMS`.
	EncryptionType string `pulumi:"encryptionType"`
	// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
	KeyId string `pulumi:"keyId"`
}

// InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigInput is an input type that accepts InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs and InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigInput` via:
//
//	InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs{...}
type InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput
	ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutputWithContext(context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput
}

type InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs struct {
	// The type of encryption. Valid Values: `KMS`.
	EncryptionType pulumi.StringInput `pulumi:"encryptionType"`
	// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig)(nil)).Elem()
}

func (i InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput {
	return i.ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput)
}

func (i InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig] {
	return pulumix.Output[InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig]{
		OutputState: i.ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput {
	return i.ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput).ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrInput is an input type that accepts InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs, InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtr and InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrInput` via:
//
//	        InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput
	ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutputWithContext(context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput
}

type instanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrType InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs

func InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtr(v *InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrInput {
	return (*instanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrType)(v)
}

func (*instanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig)(nil)).Elem()
}

func (i *instanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrType) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput {
	return i.ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrType) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput)
}

func (i *instanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig] {
	return pulumix.Output[*InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig]{
		OutputState: i.ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig)(nil)).Elem()
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput {
	return o.ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig) *InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig {
		return &v
	}).(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput)
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig] {
	return pulumix.Output[InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

// The type of encryption. Valid Values: `KMS`.
func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput) EncryptionType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig) string {
		return v.EncryptionType
	}).(pulumi.StringOutput)
}

// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig) string {
		return v.KeyId
	}).(pulumi.StringOutput)
}

type InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig)(nil)).Elem()
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput) ToInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig] {
	return pulumix.Output[*InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput) Elem() InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig) InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig
		return ret
	}).(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput)
}

// The type of encryption. Valid Values: `KMS`.
func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionType
	}).(pulumi.StringPtrOutput)
}

// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
func (o InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return &v.KeyId
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigStorageConfigS3Config struct {
	// The S3 bucket name.
	BucketName string `pulumi:"bucketName"`
	// The S3 bucket prefix.
	BucketPrefix string `pulumi:"bucketPrefix"`
	// The encryption configuration. Documented below.
	EncryptionConfig *InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig `pulumi:"encryptionConfig"`
}

// InstanceStorageConfigStorageConfigS3ConfigInput is an input type that accepts InstanceStorageConfigStorageConfigS3ConfigArgs and InstanceStorageConfigStorageConfigS3ConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageConfigS3ConfigInput` via:
//
//	InstanceStorageConfigStorageConfigS3ConfigArgs{...}
type InstanceStorageConfigStorageConfigS3ConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageConfigS3ConfigOutput() InstanceStorageConfigStorageConfigS3ConfigOutput
	ToInstanceStorageConfigStorageConfigS3ConfigOutputWithContext(context.Context) InstanceStorageConfigStorageConfigS3ConfigOutput
}

type InstanceStorageConfigStorageConfigS3ConfigArgs struct {
	// The S3 bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The S3 bucket prefix.
	BucketPrefix pulumi.StringInput `pulumi:"bucketPrefix"`
	// The encryption configuration. Documented below.
	EncryptionConfig InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrInput `pulumi:"encryptionConfig"`
}

func (InstanceStorageConfigStorageConfigS3ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageConfigS3Config)(nil)).Elem()
}

func (i InstanceStorageConfigStorageConfigS3ConfigArgs) ToInstanceStorageConfigStorageConfigS3ConfigOutput() InstanceStorageConfigStorageConfigS3ConfigOutput {
	return i.ToInstanceStorageConfigStorageConfigS3ConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigStorageConfigS3ConfigArgs) ToInstanceStorageConfigStorageConfigS3ConfigOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigS3ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigS3ConfigOutput)
}

func (i InstanceStorageConfigStorageConfigS3ConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageConfigS3Config] {
	return pulumix.Output[InstanceStorageConfigStorageConfigS3Config]{
		OutputState: i.ToInstanceStorageConfigStorageConfigS3ConfigOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceStorageConfigStorageConfigS3ConfigArgs) ToInstanceStorageConfigStorageConfigS3ConfigPtrOutput() InstanceStorageConfigStorageConfigS3ConfigPtrOutput {
	return i.ToInstanceStorageConfigStorageConfigS3ConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigStorageConfigS3ConfigArgs) ToInstanceStorageConfigStorageConfigS3ConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigS3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigS3ConfigOutput).ToInstanceStorageConfigStorageConfigS3ConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigStorageConfigS3ConfigPtrInput is an input type that accepts InstanceStorageConfigStorageConfigS3ConfigArgs, InstanceStorageConfigStorageConfigS3ConfigPtr and InstanceStorageConfigStorageConfigS3ConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageConfigS3ConfigPtrInput` via:
//
//	        InstanceStorageConfigStorageConfigS3ConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigStorageConfigS3ConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageConfigS3ConfigPtrOutput() InstanceStorageConfigStorageConfigS3ConfigPtrOutput
	ToInstanceStorageConfigStorageConfigS3ConfigPtrOutputWithContext(context.Context) InstanceStorageConfigStorageConfigS3ConfigPtrOutput
}

type instanceStorageConfigStorageConfigS3ConfigPtrType InstanceStorageConfigStorageConfigS3ConfigArgs

func InstanceStorageConfigStorageConfigS3ConfigPtr(v *InstanceStorageConfigStorageConfigS3ConfigArgs) InstanceStorageConfigStorageConfigS3ConfigPtrInput {
	return (*instanceStorageConfigStorageConfigS3ConfigPtrType)(v)
}

func (*instanceStorageConfigStorageConfigS3ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageConfigS3Config)(nil)).Elem()
}

func (i *instanceStorageConfigStorageConfigS3ConfigPtrType) ToInstanceStorageConfigStorageConfigS3ConfigPtrOutput() InstanceStorageConfigStorageConfigS3ConfigPtrOutput {
	return i.ToInstanceStorageConfigStorageConfigS3ConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigStorageConfigS3ConfigPtrType) ToInstanceStorageConfigStorageConfigS3ConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigS3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigS3ConfigPtrOutput)
}

func (i *instanceStorageConfigStorageConfigS3ConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageConfigS3Config] {
	return pulumix.Output[*InstanceStorageConfigStorageConfigS3Config]{
		OutputState: i.ToInstanceStorageConfigStorageConfigS3ConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceStorageConfigStorageConfigS3ConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageConfigS3ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageConfigS3Config)(nil)).Elem()
}

func (o InstanceStorageConfigStorageConfigS3ConfigOutput) ToInstanceStorageConfigStorageConfigS3ConfigOutput() InstanceStorageConfigStorageConfigS3ConfigOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigS3ConfigOutput) ToInstanceStorageConfigStorageConfigS3ConfigOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigS3ConfigOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigS3ConfigOutput) ToInstanceStorageConfigStorageConfigS3ConfigPtrOutput() InstanceStorageConfigStorageConfigS3ConfigPtrOutput {
	return o.ToInstanceStorageConfigStorageConfigS3ConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageConfigS3ConfigOutput) ToInstanceStorageConfigStorageConfigS3ConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigS3ConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigStorageConfigS3Config) *InstanceStorageConfigStorageConfigS3Config {
		return &v
	}).(InstanceStorageConfigStorageConfigS3ConfigPtrOutput)
}

func (o InstanceStorageConfigStorageConfigS3ConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageConfigS3Config] {
	return pulumix.Output[InstanceStorageConfigStorageConfigS3Config]{
		OutputState: o.OutputState,
	}
}

// The S3 bucket name.
func (o InstanceStorageConfigStorageConfigS3ConfigOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfigS3Config) string { return v.BucketName }).(pulumi.StringOutput)
}

// The S3 bucket prefix.
func (o InstanceStorageConfigStorageConfigS3ConfigOutput) BucketPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfigS3Config) string { return v.BucketPrefix }).(pulumi.StringOutput)
}

// The encryption configuration. Documented below.
func (o InstanceStorageConfigStorageConfigS3ConfigOutput) EncryptionConfig() InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfigS3Config) *InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig {
		return v.EncryptionConfig
	}).(InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput)
}

type InstanceStorageConfigStorageConfigS3ConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageConfigS3ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageConfigS3Config)(nil)).Elem()
}

func (o InstanceStorageConfigStorageConfigS3ConfigPtrOutput) ToInstanceStorageConfigStorageConfigS3ConfigPtrOutput() InstanceStorageConfigStorageConfigS3ConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigS3ConfigPtrOutput) ToInstanceStorageConfigStorageConfigS3ConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigS3ConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigS3ConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageConfigS3Config] {
	return pulumix.Output[*InstanceStorageConfigStorageConfigS3Config]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStorageConfigStorageConfigS3ConfigPtrOutput) Elem() InstanceStorageConfigStorageConfigS3ConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigS3Config) InstanceStorageConfigStorageConfigS3Config {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigStorageConfigS3Config
		return ret
	}).(InstanceStorageConfigStorageConfigS3ConfigOutput)
}

// The S3 bucket name.
func (o InstanceStorageConfigStorageConfigS3ConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigS3Config) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// The S3 bucket prefix.
func (o InstanceStorageConfigStorageConfigS3ConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigS3Config) *string {
		if v == nil {
			return nil
		}
		return &v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// The encryption configuration. Documented below.
func (o InstanceStorageConfigStorageConfigS3ConfigPtrOutput) EncryptionConfig() InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigS3Config) *InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig {
		if v == nil {
			return nil
		}
		return v.EncryptionConfig
	}).(InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput)
}

type InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig struct {
	// The type of encryption. Valid Values: `KMS`.
	EncryptionType string `pulumi:"encryptionType"`
	// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
	KeyId string `pulumi:"keyId"`
}

// InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigInput is an input type that accepts InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs and InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigInput` via:
//
//	InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs{...}
type InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput() InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput
	ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutputWithContext(context.Context) InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput
}

type InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs struct {
	// The type of encryption. Valid Values: `KMS`.
	EncryptionType pulumi.StringInput `pulumi:"encryptionType"`
	// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig)(nil)).Elem()
}

func (i InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs) ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput() InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput {
	return i.ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs) ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput)
}

func (i InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig] {
	return pulumix.Output[InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig]{
		OutputState: i.ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs) ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput() InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput {
	return i.ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs) ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput).ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrInput is an input type that accepts InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs, InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtr and InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrInput` via:
//
//	        InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput() InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput
	ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutputWithContext(context.Context) InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput
}

type instanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrType InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs

func InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtr(v *InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs) InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrInput {
	return (*instanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrType)(v)
}

func (*instanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig)(nil)).Elem()
}

func (i *instanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrType) ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput() InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput {
	return i.ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrType) ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput)
}

func (i *instanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig] {
	return pulumix.Output[*InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig]{
		OutputState: i.ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig)(nil)).Elem()
}

func (o InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput) ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput() InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput) ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput) ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput() InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput {
	return o.ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput) ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig) *InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig {
		return &v
	}).(InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput)
}

func (o InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig] {
	return pulumix.Output[InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

// The type of encryption. Valid Values: `KMS`.
func (o InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput) EncryptionType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig) string { return v.EncryptionType }).(pulumi.StringOutput)
}

// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
func (o InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig) string { return v.KeyId }).(pulumi.StringOutput)
}

type InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig)(nil)).Elem()
}

func (o InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput) ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput() InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput) ToInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig] {
	return pulumix.Output[*InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput) Elem() InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig) InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig
		return ret
	}).(InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput)
}

// The type of encryption. Valid Values: `KMS`.
func (o InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionType
	}).(pulumi.StringPtrOutput)
}

// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
func (o InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageConfigS3ConfigEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return &v.KeyId
	}).(pulumi.StringPtrOutput)
}

type PhoneNumberStatus struct {
	// The status message.
	Message *string `pulumi:"message"`
	// The status of the phone number. Valid Values: `CLAIMED` | `IN_PROGRESS` | `FAILED`.
	Status *string `pulumi:"status"`
}

// PhoneNumberStatusInput is an input type that accepts PhoneNumberStatusArgs and PhoneNumberStatusOutput values.
// You can construct a concrete instance of `PhoneNumberStatusInput` via:
//
//	PhoneNumberStatusArgs{...}
type PhoneNumberStatusInput interface {
	pulumi.Input

	ToPhoneNumberStatusOutput() PhoneNumberStatusOutput
	ToPhoneNumberStatusOutputWithContext(context.Context) PhoneNumberStatusOutput
}

type PhoneNumberStatusArgs struct {
	// The status message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The status of the phone number. Valid Values: `CLAIMED` | `IN_PROGRESS` | `FAILED`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PhoneNumberStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoneNumberStatus)(nil)).Elem()
}

func (i PhoneNumberStatusArgs) ToPhoneNumberStatusOutput() PhoneNumberStatusOutput {
	return i.ToPhoneNumberStatusOutputWithContext(context.Background())
}

func (i PhoneNumberStatusArgs) ToPhoneNumberStatusOutputWithContext(ctx context.Context) PhoneNumberStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoneNumberStatusOutput)
}

func (i PhoneNumberStatusArgs) ToOutput(ctx context.Context) pulumix.Output[PhoneNumberStatus] {
	return pulumix.Output[PhoneNumberStatus]{
		OutputState: i.ToPhoneNumberStatusOutputWithContext(ctx).OutputState,
	}
}

// PhoneNumberStatusArrayInput is an input type that accepts PhoneNumberStatusArray and PhoneNumberStatusArrayOutput values.
// You can construct a concrete instance of `PhoneNumberStatusArrayInput` via:
//
//	PhoneNumberStatusArray{ PhoneNumberStatusArgs{...} }
type PhoneNumberStatusArrayInput interface {
	pulumi.Input

	ToPhoneNumberStatusArrayOutput() PhoneNumberStatusArrayOutput
	ToPhoneNumberStatusArrayOutputWithContext(context.Context) PhoneNumberStatusArrayOutput
}

type PhoneNumberStatusArray []PhoneNumberStatusInput

func (PhoneNumberStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhoneNumberStatus)(nil)).Elem()
}

func (i PhoneNumberStatusArray) ToPhoneNumberStatusArrayOutput() PhoneNumberStatusArrayOutput {
	return i.ToPhoneNumberStatusArrayOutputWithContext(context.Background())
}

func (i PhoneNumberStatusArray) ToPhoneNumberStatusArrayOutputWithContext(ctx context.Context) PhoneNumberStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoneNumberStatusArrayOutput)
}

func (i PhoneNumberStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]PhoneNumberStatus] {
	return pulumix.Output[[]PhoneNumberStatus]{
		OutputState: i.ToPhoneNumberStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type PhoneNumberStatusOutput struct{ *pulumi.OutputState }

func (PhoneNumberStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoneNumberStatus)(nil)).Elem()
}

func (o PhoneNumberStatusOutput) ToPhoneNumberStatusOutput() PhoneNumberStatusOutput {
	return o
}

func (o PhoneNumberStatusOutput) ToPhoneNumberStatusOutputWithContext(ctx context.Context) PhoneNumberStatusOutput {
	return o
}

func (o PhoneNumberStatusOutput) ToOutput(ctx context.Context) pulumix.Output[PhoneNumberStatus] {
	return pulumix.Output[PhoneNumberStatus]{
		OutputState: o.OutputState,
	}
}

// The status message.
func (o PhoneNumberStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhoneNumberStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The status of the phone number. Valid Values: `CLAIMED` | `IN_PROGRESS` | `FAILED`.
func (o PhoneNumberStatusOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhoneNumberStatus) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PhoneNumberStatusArrayOutput struct{ *pulumi.OutputState }

func (PhoneNumberStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhoneNumberStatus)(nil)).Elem()
}

func (o PhoneNumberStatusArrayOutput) ToPhoneNumberStatusArrayOutput() PhoneNumberStatusArrayOutput {
	return o
}

func (o PhoneNumberStatusArrayOutput) ToPhoneNumberStatusArrayOutputWithContext(ctx context.Context) PhoneNumberStatusArrayOutput {
	return o
}

func (o PhoneNumberStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]PhoneNumberStatus] {
	return pulumix.Output[[]PhoneNumberStatus]{
		OutputState: o.OutputState,
	}
}

func (o PhoneNumberStatusArrayOutput) Index(i pulumi.IntInput) PhoneNumberStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PhoneNumberStatus {
		return vs[0].([]PhoneNumberStatus)[vs[1].(int)]
	}).(PhoneNumberStatusOutput)
}

type QueueOutboundCallerConfig struct {
	// Specifies the caller ID name.
	OutboundCallerIdName *string `pulumi:"outboundCallerIdName"`
	// Specifies the caller ID number.
	OutboundCallerIdNumberId *string `pulumi:"outboundCallerIdNumberId"`
	// Specifies outbound whisper flow to be used during an outbound call.
	OutboundFlowId *string `pulumi:"outboundFlowId"`
}

// QueueOutboundCallerConfigInput is an input type that accepts QueueOutboundCallerConfigArgs and QueueOutboundCallerConfigOutput values.
// You can construct a concrete instance of `QueueOutboundCallerConfigInput` via:
//
//	QueueOutboundCallerConfigArgs{...}
type QueueOutboundCallerConfigInput interface {
	pulumi.Input

	ToQueueOutboundCallerConfigOutput() QueueOutboundCallerConfigOutput
	ToQueueOutboundCallerConfigOutputWithContext(context.Context) QueueOutboundCallerConfigOutput
}

type QueueOutboundCallerConfigArgs struct {
	// Specifies the caller ID name.
	OutboundCallerIdName pulumi.StringPtrInput `pulumi:"outboundCallerIdName"`
	// Specifies the caller ID number.
	OutboundCallerIdNumberId pulumi.StringPtrInput `pulumi:"outboundCallerIdNumberId"`
	// Specifies outbound whisper flow to be used during an outbound call.
	OutboundFlowId pulumi.StringPtrInput `pulumi:"outboundFlowId"`
}

func (QueueOutboundCallerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueOutboundCallerConfig)(nil)).Elem()
}

func (i QueueOutboundCallerConfigArgs) ToQueueOutboundCallerConfigOutput() QueueOutboundCallerConfigOutput {
	return i.ToQueueOutboundCallerConfigOutputWithContext(context.Background())
}

func (i QueueOutboundCallerConfigArgs) ToQueueOutboundCallerConfigOutputWithContext(ctx context.Context) QueueOutboundCallerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueOutboundCallerConfigOutput)
}

func (i QueueOutboundCallerConfigArgs) ToOutput(ctx context.Context) pulumix.Output[QueueOutboundCallerConfig] {
	return pulumix.Output[QueueOutboundCallerConfig]{
		OutputState: i.ToQueueOutboundCallerConfigOutputWithContext(ctx).OutputState,
	}
}

func (i QueueOutboundCallerConfigArgs) ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput {
	return i.ToQueueOutboundCallerConfigPtrOutputWithContext(context.Background())
}

func (i QueueOutboundCallerConfigArgs) ToQueueOutboundCallerConfigPtrOutputWithContext(ctx context.Context) QueueOutboundCallerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueOutboundCallerConfigOutput).ToQueueOutboundCallerConfigPtrOutputWithContext(ctx)
}

// QueueOutboundCallerConfigPtrInput is an input type that accepts QueueOutboundCallerConfigArgs, QueueOutboundCallerConfigPtr and QueueOutboundCallerConfigPtrOutput values.
// You can construct a concrete instance of `QueueOutboundCallerConfigPtrInput` via:
//
//	        QueueOutboundCallerConfigArgs{...}
//
//	or:
//
//	        nil
type QueueOutboundCallerConfigPtrInput interface {
	pulumi.Input

	ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput
	ToQueueOutboundCallerConfigPtrOutputWithContext(context.Context) QueueOutboundCallerConfigPtrOutput
}

type queueOutboundCallerConfigPtrType QueueOutboundCallerConfigArgs

func QueueOutboundCallerConfigPtr(v *QueueOutboundCallerConfigArgs) QueueOutboundCallerConfigPtrInput {
	return (*queueOutboundCallerConfigPtrType)(v)
}

func (*queueOutboundCallerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueOutboundCallerConfig)(nil)).Elem()
}

func (i *queueOutboundCallerConfigPtrType) ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput {
	return i.ToQueueOutboundCallerConfigPtrOutputWithContext(context.Background())
}

func (i *queueOutboundCallerConfigPtrType) ToQueueOutboundCallerConfigPtrOutputWithContext(ctx context.Context) QueueOutboundCallerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueOutboundCallerConfigPtrOutput)
}

func (i *queueOutboundCallerConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*QueueOutboundCallerConfig] {
	return pulumix.Output[*QueueOutboundCallerConfig]{
		OutputState: i.ToQueueOutboundCallerConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type QueueOutboundCallerConfigOutput struct{ *pulumi.OutputState }

func (QueueOutboundCallerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueOutboundCallerConfig)(nil)).Elem()
}

func (o QueueOutboundCallerConfigOutput) ToQueueOutboundCallerConfigOutput() QueueOutboundCallerConfigOutput {
	return o
}

func (o QueueOutboundCallerConfigOutput) ToQueueOutboundCallerConfigOutputWithContext(ctx context.Context) QueueOutboundCallerConfigOutput {
	return o
}

func (o QueueOutboundCallerConfigOutput) ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput {
	return o.ToQueueOutboundCallerConfigPtrOutputWithContext(context.Background())
}

func (o QueueOutboundCallerConfigOutput) ToQueueOutboundCallerConfigPtrOutputWithContext(ctx context.Context) QueueOutboundCallerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueOutboundCallerConfig) *QueueOutboundCallerConfig {
		return &v
	}).(QueueOutboundCallerConfigPtrOutput)
}

func (o QueueOutboundCallerConfigOutput) ToOutput(ctx context.Context) pulumix.Output[QueueOutboundCallerConfig] {
	return pulumix.Output[QueueOutboundCallerConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies the caller ID name.
func (o QueueOutboundCallerConfigOutput) OutboundCallerIdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueOutboundCallerConfig) *string { return v.OutboundCallerIdName }).(pulumi.StringPtrOutput)
}

// Specifies the caller ID number.
func (o QueueOutboundCallerConfigOutput) OutboundCallerIdNumberId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueOutboundCallerConfig) *string { return v.OutboundCallerIdNumberId }).(pulumi.StringPtrOutput)
}

// Specifies outbound whisper flow to be used during an outbound call.
func (o QueueOutboundCallerConfigOutput) OutboundFlowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueOutboundCallerConfig) *string { return v.OutboundFlowId }).(pulumi.StringPtrOutput)
}

type QueueOutboundCallerConfigPtrOutput struct{ *pulumi.OutputState }

func (QueueOutboundCallerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueOutboundCallerConfig)(nil)).Elem()
}

func (o QueueOutboundCallerConfigPtrOutput) ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput {
	return o
}

func (o QueueOutboundCallerConfigPtrOutput) ToQueueOutboundCallerConfigPtrOutputWithContext(ctx context.Context) QueueOutboundCallerConfigPtrOutput {
	return o
}

func (o QueueOutboundCallerConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*QueueOutboundCallerConfig] {
	return pulumix.Output[*QueueOutboundCallerConfig]{
		OutputState: o.OutputState,
	}
}

func (o QueueOutboundCallerConfigPtrOutput) Elem() QueueOutboundCallerConfigOutput {
	return o.ApplyT(func(v *QueueOutboundCallerConfig) QueueOutboundCallerConfig {
		if v != nil {
			return *v
		}
		var ret QueueOutboundCallerConfig
		return ret
	}).(QueueOutboundCallerConfigOutput)
}

// Specifies the caller ID name.
func (o QueueOutboundCallerConfigPtrOutput) OutboundCallerIdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueOutboundCallerConfig) *string {
		if v == nil {
			return nil
		}
		return v.OutboundCallerIdName
	}).(pulumi.StringPtrOutput)
}

// Specifies the caller ID number.
func (o QueueOutboundCallerConfigPtrOutput) OutboundCallerIdNumberId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueOutboundCallerConfig) *string {
		if v == nil {
			return nil
		}
		return v.OutboundCallerIdNumberId
	}).(pulumi.StringPtrOutput)
}

// Specifies outbound whisper flow to be used during an outbound call.
func (o QueueOutboundCallerConfigPtrOutput) OutboundFlowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueOutboundCallerConfig) *string {
		if v == nil {
			return nil
		}
		return v.OutboundFlowId
	}).(pulumi.StringPtrOutput)
}

type QuickConnectQuickConnectConfig struct {
	// Specifies the phone configuration of the Quick Connect. This is required only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
	PhoneConfigs []QuickConnectQuickConnectConfigPhoneConfig `pulumi:"phoneConfigs"`
	// Specifies the queue configuration of the Quick Connect. This is required only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
	QueueConfigs []QuickConnectQuickConnectConfigQueueConfig `pulumi:"queueConfigs"`
	// Specifies the configuration type of the quick connect. valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
	QuickConnectType string `pulumi:"quickConnectType"`
	// Specifies the user configuration of the Quick Connect. This is required only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
	UserConfigs []QuickConnectQuickConnectConfigUserConfig `pulumi:"userConfigs"`
}

// QuickConnectQuickConnectConfigInput is an input type that accepts QuickConnectQuickConnectConfigArgs and QuickConnectQuickConnectConfigOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigInput` via:
//
//	QuickConnectQuickConnectConfigArgs{...}
type QuickConnectQuickConnectConfigInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigOutput() QuickConnectQuickConnectConfigOutput
	ToQuickConnectQuickConnectConfigOutputWithContext(context.Context) QuickConnectQuickConnectConfigOutput
}

type QuickConnectQuickConnectConfigArgs struct {
	// Specifies the phone configuration of the Quick Connect. This is required only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
	PhoneConfigs QuickConnectQuickConnectConfigPhoneConfigArrayInput `pulumi:"phoneConfigs"`
	// Specifies the queue configuration of the Quick Connect. This is required only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
	QueueConfigs QuickConnectQuickConnectConfigQueueConfigArrayInput `pulumi:"queueConfigs"`
	// Specifies the configuration type of the quick connect. valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
	QuickConnectType pulumi.StringInput `pulumi:"quickConnectType"`
	// Specifies the user configuration of the Quick Connect. This is required only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
	UserConfigs QuickConnectQuickConnectConfigUserConfigArrayInput `pulumi:"userConfigs"`
}

func (QuickConnectQuickConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfig)(nil)).Elem()
}

func (i QuickConnectQuickConnectConfigArgs) ToQuickConnectQuickConnectConfigOutput() QuickConnectQuickConnectConfigOutput {
	return i.ToQuickConnectQuickConnectConfigOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigArgs) ToQuickConnectQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigOutput)
}

func (i QuickConnectQuickConnectConfigArgs) ToOutput(ctx context.Context) pulumix.Output[QuickConnectQuickConnectConfig] {
	return pulumix.Output[QuickConnectQuickConnectConfig]{
		OutputState: i.ToQuickConnectQuickConnectConfigOutputWithContext(ctx).OutputState,
	}
}

func (i QuickConnectQuickConnectConfigArgs) ToQuickConnectQuickConnectConfigPtrOutput() QuickConnectQuickConnectConfigPtrOutput {
	return i.ToQuickConnectQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigArgs) ToQuickConnectQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigOutput).ToQuickConnectQuickConnectConfigPtrOutputWithContext(ctx)
}

// QuickConnectQuickConnectConfigPtrInput is an input type that accepts QuickConnectQuickConnectConfigArgs, QuickConnectQuickConnectConfigPtr and QuickConnectQuickConnectConfigPtrOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigPtrInput` via:
//
//	        QuickConnectQuickConnectConfigArgs{...}
//
//	or:
//
//	        nil
type QuickConnectQuickConnectConfigPtrInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigPtrOutput() QuickConnectQuickConnectConfigPtrOutput
	ToQuickConnectQuickConnectConfigPtrOutputWithContext(context.Context) QuickConnectQuickConnectConfigPtrOutput
}

type quickConnectQuickConnectConfigPtrType QuickConnectQuickConnectConfigArgs

func QuickConnectQuickConnectConfigPtr(v *QuickConnectQuickConnectConfigArgs) QuickConnectQuickConnectConfigPtrInput {
	return (*quickConnectQuickConnectConfigPtrType)(v)
}

func (*quickConnectQuickConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectQuickConnectConfig)(nil)).Elem()
}

func (i *quickConnectQuickConnectConfigPtrType) ToQuickConnectQuickConnectConfigPtrOutput() QuickConnectQuickConnectConfigPtrOutput {
	return i.ToQuickConnectQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i *quickConnectQuickConnectConfigPtrType) ToQuickConnectQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigPtrOutput)
}

func (i *quickConnectQuickConnectConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*QuickConnectQuickConnectConfig] {
	return pulumix.Output[*QuickConnectQuickConnectConfig]{
		OutputState: i.ToQuickConnectQuickConnectConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type QuickConnectQuickConnectConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigOutput) ToQuickConnectQuickConnectConfigOutput() QuickConnectQuickConnectConfigOutput {
	return o
}

func (o QuickConnectQuickConnectConfigOutput) ToQuickConnectQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigOutput {
	return o
}

func (o QuickConnectQuickConnectConfigOutput) ToQuickConnectQuickConnectConfigPtrOutput() QuickConnectQuickConnectConfigPtrOutput {
	return o.ToQuickConnectQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (o QuickConnectQuickConnectConfigOutput) ToQuickConnectQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QuickConnectQuickConnectConfig) *QuickConnectQuickConnectConfig {
		return &v
	}).(QuickConnectQuickConnectConfigPtrOutput)
}

func (o QuickConnectQuickConnectConfigOutput) ToOutput(ctx context.Context) pulumix.Output[QuickConnectQuickConnectConfig] {
	return pulumix.Output[QuickConnectQuickConnectConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies the phone configuration of the Quick Connect. This is required only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
func (o QuickConnectQuickConnectConfigOutput) PhoneConfigs() QuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfig) []QuickConnectQuickConnectConfigPhoneConfig {
		return v.PhoneConfigs
	}).(QuickConnectQuickConnectConfigPhoneConfigArrayOutput)
}

// Specifies the queue configuration of the Quick Connect. This is required only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
func (o QuickConnectQuickConnectConfigOutput) QueueConfigs() QuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfig) []QuickConnectQuickConnectConfigQueueConfig {
		return v.QueueConfigs
	}).(QuickConnectQuickConnectConfigQueueConfigArrayOutput)
}

// Specifies the configuration type of the quick connect. valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
func (o QuickConnectQuickConnectConfigOutput) QuickConnectType() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfig) string { return v.QuickConnectType }).(pulumi.StringOutput)
}

// Specifies the user configuration of the Quick Connect. This is required only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
func (o QuickConnectQuickConnectConfigOutput) UserConfigs() QuickConnectQuickConnectConfigUserConfigArrayOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfig) []QuickConnectQuickConnectConfigUserConfig {
		return v.UserConfigs
	}).(QuickConnectQuickConnectConfigUserConfigArrayOutput)
}

type QuickConnectQuickConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigPtrOutput) ToQuickConnectQuickConnectConfigPtrOutput() QuickConnectQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectQuickConnectConfigPtrOutput) ToQuickConnectQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectQuickConnectConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*QuickConnectQuickConnectConfig] {
	return pulumix.Output[*QuickConnectQuickConnectConfig]{
		OutputState: o.OutputState,
	}
}

func (o QuickConnectQuickConnectConfigPtrOutput) Elem() QuickConnectQuickConnectConfigOutput {
	return o.ApplyT(func(v *QuickConnectQuickConnectConfig) QuickConnectQuickConnectConfig {
		if v != nil {
			return *v
		}
		var ret QuickConnectQuickConnectConfig
		return ret
	}).(QuickConnectQuickConnectConfigOutput)
}

// Specifies the phone configuration of the Quick Connect. This is required only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
func (o QuickConnectQuickConnectConfigPtrOutput) PhoneConfigs() QuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return o.ApplyT(func(v *QuickConnectQuickConnectConfig) []QuickConnectQuickConnectConfigPhoneConfig {
		if v == nil {
			return nil
		}
		return v.PhoneConfigs
	}).(QuickConnectQuickConnectConfigPhoneConfigArrayOutput)
}

// Specifies the queue configuration of the Quick Connect. This is required only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
func (o QuickConnectQuickConnectConfigPtrOutput) QueueConfigs() QuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return o.ApplyT(func(v *QuickConnectQuickConnectConfig) []QuickConnectQuickConnectConfigQueueConfig {
		if v == nil {
			return nil
		}
		return v.QueueConfigs
	}).(QuickConnectQuickConnectConfigQueueConfigArrayOutput)
}

// Specifies the configuration type of the quick connect. valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
func (o QuickConnectQuickConnectConfigPtrOutput) QuickConnectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuickConnectQuickConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.QuickConnectType
	}).(pulumi.StringPtrOutput)
}

// Specifies the user configuration of the Quick Connect. This is required only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
func (o QuickConnectQuickConnectConfigPtrOutput) UserConfigs() QuickConnectQuickConnectConfigUserConfigArrayOutput {
	return o.ApplyT(func(v *QuickConnectQuickConnectConfig) []QuickConnectQuickConnectConfigUserConfig {
		if v == nil {
			return nil
		}
		return v.UserConfigs
	}).(QuickConnectQuickConnectConfigUserConfigArrayOutput)
}

type QuickConnectQuickConnectConfigPhoneConfig struct {
	// Specifies the phone number in in E.164 format.
	PhoneNumber string `pulumi:"phoneNumber"`
}

// QuickConnectQuickConnectConfigPhoneConfigInput is an input type that accepts QuickConnectQuickConnectConfigPhoneConfigArgs and QuickConnectQuickConnectConfigPhoneConfigOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigPhoneConfigInput` via:
//
//	QuickConnectQuickConnectConfigPhoneConfigArgs{...}
type QuickConnectQuickConnectConfigPhoneConfigInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigPhoneConfigOutput() QuickConnectQuickConnectConfigPhoneConfigOutput
	ToQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(context.Context) QuickConnectQuickConnectConfigPhoneConfigOutput
}

type QuickConnectQuickConnectConfigPhoneConfigArgs struct {
	// Specifies the phone number in in E.164 format.
	PhoneNumber pulumi.StringInput `pulumi:"phoneNumber"`
}

func (QuickConnectQuickConnectConfigPhoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (i QuickConnectQuickConnectConfigPhoneConfigArgs) ToQuickConnectQuickConnectConfigPhoneConfigOutput() QuickConnectQuickConnectConfigPhoneConfigOutput {
	return i.ToQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigPhoneConfigArgs) ToQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPhoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigPhoneConfigOutput)
}

func (i QuickConnectQuickConnectConfigPhoneConfigArgs) ToOutput(ctx context.Context) pulumix.Output[QuickConnectQuickConnectConfigPhoneConfig] {
	return pulumix.Output[QuickConnectQuickConnectConfigPhoneConfig]{
		OutputState: i.ToQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(ctx).OutputState,
	}
}

// QuickConnectQuickConnectConfigPhoneConfigArrayInput is an input type that accepts QuickConnectQuickConnectConfigPhoneConfigArray and QuickConnectQuickConnectConfigPhoneConfigArrayOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigPhoneConfigArrayInput` via:
//
//	QuickConnectQuickConnectConfigPhoneConfigArray{ QuickConnectQuickConnectConfigPhoneConfigArgs{...} }
type QuickConnectQuickConnectConfigPhoneConfigArrayInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigPhoneConfigArrayOutput() QuickConnectQuickConnectConfigPhoneConfigArrayOutput
	ToQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(context.Context) QuickConnectQuickConnectConfigPhoneConfigArrayOutput
}

type QuickConnectQuickConnectConfigPhoneConfigArray []QuickConnectQuickConnectConfigPhoneConfigInput

func (QuickConnectQuickConnectConfigPhoneConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (i QuickConnectQuickConnectConfigPhoneConfigArray) ToQuickConnectQuickConnectConfigPhoneConfigArrayOutput() QuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return i.ToQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigPhoneConfigArray) ToQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigPhoneConfigArrayOutput)
}

func (i QuickConnectQuickConnectConfigPhoneConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]QuickConnectQuickConnectConfigPhoneConfig] {
	return pulumix.Output[[]QuickConnectQuickConnectConfigPhoneConfig]{
		OutputState: i.ToQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type QuickConnectQuickConnectConfigPhoneConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigPhoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigPhoneConfigOutput) ToQuickConnectQuickConnectConfigPhoneConfigOutput() QuickConnectQuickConnectConfigPhoneConfigOutput {
	return o
}

func (o QuickConnectQuickConnectConfigPhoneConfigOutput) ToQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPhoneConfigOutput {
	return o
}

func (o QuickConnectQuickConnectConfigPhoneConfigOutput) ToOutput(ctx context.Context) pulumix.Output[QuickConnectQuickConnectConfigPhoneConfig] {
	return pulumix.Output[QuickConnectQuickConnectConfigPhoneConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies the phone number in in E.164 format.
func (o QuickConnectQuickConnectConfigPhoneConfigOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfigPhoneConfig) string { return v.PhoneNumber }).(pulumi.StringOutput)
}

type QuickConnectQuickConnectConfigPhoneConfigArrayOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigPhoneConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigPhoneConfigArrayOutput) ToQuickConnectQuickConnectConfigPhoneConfigArrayOutput() QuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return o
}

func (o QuickConnectQuickConnectConfigPhoneConfigArrayOutput) ToQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return o
}

func (o QuickConnectQuickConnectConfigPhoneConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]QuickConnectQuickConnectConfigPhoneConfig] {
	return pulumix.Output[[]QuickConnectQuickConnectConfigPhoneConfig]{
		OutputState: o.OutputState,
	}
}

func (o QuickConnectQuickConnectConfigPhoneConfigArrayOutput) Index(i pulumi.IntInput) QuickConnectQuickConnectConfigPhoneConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QuickConnectQuickConnectConfigPhoneConfig {
		return vs[0].([]QuickConnectQuickConnectConfigPhoneConfig)[vs[1].(int)]
	}).(QuickConnectQuickConnectConfigPhoneConfigOutput)
}

type QuickConnectQuickConnectConfigQueueConfig struct {
	// Specifies the identifier of the contact flow.
	ContactFlowId string `pulumi:"contactFlowId"`
	// Specifies the identifier for the queue.
	QueueId string `pulumi:"queueId"`
}

// QuickConnectQuickConnectConfigQueueConfigInput is an input type that accepts QuickConnectQuickConnectConfigQueueConfigArgs and QuickConnectQuickConnectConfigQueueConfigOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigQueueConfigInput` via:
//
//	QuickConnectQuickConnectConfigQueueConfigArgs{...}
type QuickConnectQuickConnectConfigQueueConfigInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigQueueConfigOutput() QuickConnectQuickConnectConfigQueueConfigOutput
	ToQuickConnectQuickConnectConfigQueueConfigOutputWithContext(context.Context) QuickConnectQuickConnectConfigQueueConfigOutput
}

type QuickConnectQuickConnectConfigQueueConfigArgs struct {
	// Specifies the identifier of the contact flow.
	ContactFlowId pulumi.StringInput `pulumi:"contactFlowId"`
	// Specifies the identifier for the queue.
	QueueId pulumi.StringInput `pulumi:"queueId"`
}

func (QuickConnectQuickConnectConfigQueueConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (i QuickConnectQuickConnectConfigQueueConfigArgs) ToQuickConnectQuickConnectConfigQueueConfigOutput() QuickConnectQuickConnectConfigQueueConfigOutput {
	return i.ToQuickConnectQuickConnectConfigQueueConfigOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigQueueConfigArgs) ToQuickConnectQuickConnectConfigQueueConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigQueueConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigQueueConfigOutput)
}

func (i QuickConnectQuickConnectConfigQueueConfigArgs) ToOutput(ctx context.Context) pulumix.Output[QuickConnectQuickConnectConfigQueueConfig] {
	return pulumix.Output[QuickConnectQuickConnectConfigQueueConfig]{
		OutputState: i.ToQuickConnectQuickConnectConfigQueueConfigOutputWithContext(ctx).OutputState,
	}
}

// QuickConnectQuickConnectConfigQueueConfigArrayInput is an input type that accepts QuickConnectQuickConnectConfigQueueConfigArray and QuickConnectQuickConnectConfigQueueConfigArrayOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigQueueConfigArrayInput` via:
//
//	QuickConnectQuickConnectConfigQueueConfigArray{ QuickConnectQuickConnectConfigQueueConfigArgs{...} }
type QuickConnectQuickConnectConfigQueueConfigArrayInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigQueueConfigArrayOutput() QuickConnectQuickConnectConfigQueueConfigArrayOutput
	ToQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(context.Context) QuickConnectQuickConnectConfigQueueConfigArrayOutput
}

type QuickConnectQuickConnectConfigQueueConfigArray []QuickConnectQuickConnectConfigQueueConfigInput

func (QuickConnectQuickConnectConfigQueueConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (i QuickConnectQuickConnectConfigQueueConfigArray) ToQuickConnectQuickConnectConfigQueueConfigArrayOutput() QuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return i.ToQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigQueueConfigArray) ToQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigQueueConfigArrayOutput)
}

func (i QuickConnectQuickConnectConfigQueueConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]QuickConnectQuickConnectConfigQueueConfig] {
	return pulumix.Output[[]QuickConnectQuickConnectConfigQueueConfig]{
		OutputState: i.ToQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type QuickConnectQuickConnectConfigQueueConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigQueueConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigQueueConfigOutput) ToQuickConnectQuickConnectConfigQueueConfigOutput() QuickConnectQuickConnectConfigQueueConfigOutput {
	return o
}

func (o QuickConnectQuickConnectConfigQueueConfigOutput) ToQuickConnectQuickConnectConfigQueueConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigQueueConfigOutput {
	return o
}

func (o QuickConnectQuickConnectConfigQueueConfigOutput) ToOutput(ctx context.Context) pulumix.Output[QuickConnectQuickConnectConfigQueueConfig] {
	return pulumix.Output[QuickConnectQuickConnectConfigQueueConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies the identifier of the contact flow.
func (o QuickConnectQuickConnectConfigQueueConfigOutput) ContactFlowId() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfigQueueConfig) string { return v.ContactFlowId }).(pulumi.StringOutput)
}

// Specifies the identifier for the queue.
func (o QuickConnectQuickConnectConfigQueueConfigOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfigQueueConfig) string { return v.QueueId }).(pulumi.StringOutput)
}

type QuickConnectQuickConnectConfigQueueConfigArrayOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigQueueConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigQueueConfigArrayOutput) ToQuickConnectQuickConnectConfigQueueConfigArrayOutput() QuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return o
}

func (o QuickConnectQuickConnectConfigQueueConfigArrayOutput) ToQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return o
}

func (o QuickConnectQuickConnectConfigQueueConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]QuickConnectQuickConnectConfigQueueConfig] {
	return pulumix.Output[[]QuickConnectQuickConnectConfigQueueConfig]{
		OutputState: o.OutputState,
	}
}

func (o QuickConnectQuickConnectConfigQueueConfigArrayOutput) Index(i pulumi.IntInput) QuickConnectQuickConnectConfigQueueConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QuickConnectQuickConnectConfigQueueConfig {
		return vs[0].([]QuickConnectQuickConnectConfigQueueConfig)[vs[1].(int)]
	}).(QuickConnectQuickConnectConfigQueueConfigOutput)
}

type QuickConnectQuickConnectConfigUserConfig struct {
	// Specifies the identifier of the contact flow.
	ContactFlowId string `pulumi:"contactFlowId"`
	// Specifies the identifier for the user.
	UserId string `pulumi:"userId"`
}

// QuickConnectQuickConnectConfigUserConfigInput is an input type that accepts QuickConnectQuickConnectConfigUserConfigArgs and QuickConnectQuickConnectConfigUserConfigOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigUserConfigInput` via:
//
//	QuickConnectQuickConnectConfigUserConfigArgs{...}
type QuickConnectQuickConnectConfigUserConfigInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigUserConfigOutput() QuickConnectQuickConnectConfigUserConfigOutput
	ToQuickConnectQuickConnectConfigUserConfigOutputWithContext(context.Context) QuickConnectQuickConnectConfigUserConfigOutput
}

type QuickConnectQuickConnectConfigUserConfigArgs struct {
	// Specifies the identifier of the contact flow.
	ContactFlowId pulumi.StringInput `pulumi:"contactFlowId"`
	// Specifies the identifier for the user.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (QuickConnectQuickConnectConfigUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (i QuickConnectQuickConnectConfigUserConfigArgs) ToQuickConnectQuickConnectConfigUserConfigOutput() QuickConnectQuickConnectConfigUserConfigOutput {
	return i.ToQuickConnectQuickConnectConfigUserConfigOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigUserConfigArgs) ToQuickConnectQuickConnectConfigUserConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigUserConfigOutput)
}

func (i QuickConnectQuickConnectConfigUserConfigArgs) ToOutput(ctx context.Context) pulumix.Output[QuickConnectQuickConnectConfigUserConfig] {
	return pulumix.Output[QuickConnectQuickConnectConfigUserConfig]{
		OutputState: i.ToQuickConnectQuickConnectConfigUserConfigOutputWithContext(ctx).OutputState,
	}
}

// QuickConnectQuickConnectConfigUserConfigArrayInput is an input type that accepts QuickConnectQuickConnectConfigUserConfigArray and QuickConnectQuickConnectConfigUserConfigArrayOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectConfigUserConfigArrayInput` via:
//
//	QuickConnectQuickConnectConfigUserConfigArray{ QuickConnectQuickConnectConfigUserConfigArgs{...} }
type QuickConnectQuickConnectConfigUserConfigArrayInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectConfigUserConfigArrayOutput() QuickConnectQuickConnectConfigUserConfigArrayOutput
	ToQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(context.Context) QuickConnectQuickConnectConfigUserConfigArrayOutput
}

type QuickConnectQuickConnectConfigUserConfigArray []QuickConnectQuickConnectConfigUserConfigInput

func (QuickConnectQuickConnectConfigUserConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (i QuickConnectQuickConnectConfigUserConfigArray) ToQuickConnectQuickConnectConfigUserConfigArrayOutput() QuickConnectQuickConnectConfigUserConfigArrayOutput {
	return i.ToQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(context.Background())
}

func (i QuickConnectQuickConnectConfigUserConfigArray) ToQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigUserConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQuickConnectConfigUserConfigArrayOutput)
}

func (i QuickConnectQuickConnectConfigUserConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]QuickConnectQuickConnectConfigUserConfig] {
	return pulumix.Output[[]QuickConnectQuickConnectConfigUserConfig]{
		OutputState: i.ToQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type QuickConnectQuickConnectConfigUserConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigUserConfigOutput) ToQuickConnectQuickConnectConfigUserConfigOutput() QuickConnectQuickConnectConfigUserConfigOutput {
	return o
}

func (o QuickConnectQuickConnectConfigUserConfigOutput) ToQuickConnectQuickConnectConfigUserConfigOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigUserConfigOutput {
	return o
}

func (o QuickConnectQuickConnectConfigUserConfigOutput) ToOutput(ctx context.Context) pulumix.Output[QuickConnectQuickConnectConfigUserConfig] {
	return pulumix.Output[QuickConnectQuickConnectConfigUserConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies the identifier of the contact flow.
func (o QuickConnectQuickConnectConfigUserConfigOutput) ContactFlowId() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfigUserConfig) string { return v.ContactFlowId }).(pulumi.StringOutput)
}

// Specifies the identifier for the user.
func (o QuickConnectQuickConnectConfigUserConfigOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQuickConnectConfigUserConfig) string { return v.UserId }).(pulumi.StringOutput)
}

type QuickConnectQuickConnectConfigUserConfigArrayOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectConfigUserConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (o QuickConnectQuickConnectConfigUserConfigArrayOutput) ToQuickConnectQuickConnectConfigUserConfigArrayOutput() QuickConnectQuickConnectConfigUserConfigArrayOutput {
	return o
}

func (o QuickConnectQuickConnectConfigUserConfigArrayOutput) ToQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(ctx context.Context) QuickConnectQuickConnectConfigUserConfigArrayOutput {
	return o
}

func (o QuickConnectQuickConnectConfigUserConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]QuickConnectQuickConnectConfigUserConfig] {
	return pulumix.Output[[]QuickConnectQuickConnectConfigUserConfig]{
		OutputState: o.OutputState,
	}
}

func (o QuickConnectQuickConnectConfigUserConfigArrayOutput) Index(i pulumi.IntInput) QuickConnectQuickConnectConfigUserConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QuickConnectQuickConnectConfigUserConfig {
		return vs[0].([]QuickConnectQuickConnectConfigUserConfig)[vs[1].(int)]
	}).(QuickConnectQuickConnectConfigUserConfigOutput)
}

type RoutingProfileMediaConcurrency struct {
	// Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
	Channel string `pulumi:"channel"`
	// Specifies the number of contacts an agent can have on a channel simultaneously. Valid Range for `VOICE`: Minimum value of 1. Maximum value of 1. Valid Range for `CHAT`: Minimum value of 1. Maximum value of 10. Valid Range for `TASK`: Minimum value of 1. Maximum value of 10.
	Concurrency int `pulumi:"concurrency"`
}

// RoutingProfileMediaConcurrencyInput is an input type that accepts RoutingProfileMediaConcurrencyArgs and RoutingProfileMediaConcurrencyOutput values.
// You can construct a concrete instance of `RoutingProfileMediaConcurrencyInput` via:
//
//	RoutingProfileMediaConcurrencyArgs{...}
type RoutingProfileMediaConcurrencyInput interface {
	pulumi.Input

	ToRoutingProfileMediaConcurrencyOutput() RoutingProfileMediaConcurrencyOutput
	ToRoutingProfileMediaConcurrencyOutputWithContext(context.Context) RoutingProfileMediaConcurrencyOutput
}

type RoutingProfileMediaConcurrencyArgs struct {
	// Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
	Channel pulumi.StringInput `pulumi:"channel"`
	// Specifies the number of contacts an agent can have on a channel simultaneously. Valid Range for `VOICE`: Minimum value of 1. Maximum value of 1. Valid Range for `CHAT`: Minimum value of 1. Maximum value of 10. Valid Range for `TASK`: Minimum value of 1. Maximum value of 10.
	Concurrency pulumi.IntInput `pulumi:"concurrency"`
}

func (RoutingProfileMediaConcurrencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileMediaConcurrency)(nil)).Elem()
}

func (i RoutingProfileMediaConcurrencyArgs) ToRoutingProfileMediaConcurrencyOutput() RoutingProfileMediaConcurrencyOutput {
	return i.ToRoutingProfileMediaConcurrencyOutputWithContext(context.Background())
}

func (i RoutingProfileMediaConcurrencyArgs) ToRoutingProfileMediaConcurrencyOutputWithContext(ctx context.Context) RoutingProfileMediaConcurrencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileMediaConcurrencyOutput)
}

func (i RoutingProfileMediaConcurrencyArgs) ToOutput(ctx context.Context) pulumix.Output[RoutingProfileMediaConcurrency] {
	return pulumix.Output[RoutingProfileMediaConcurrency]{
		OutputState: i.ToRoutingProfileMediaConcurrencyOutputWithContext(ctx).OutputState,
	}
}

// RoutingProfileMediaConcurrencyArrayInput is an input type that accepts RoutingProfileMediaConcurrencyArray and RoutingProfileMediaConcurrencyArrayOutput values.
// You can construct a concrete instance of `RoutingProfileMediaConcurrencyArrayInput` via:
//
//	RoutingProfileMediaConcurrencyArray{ RoutingProfileMediaConcurrencyArgs{...} }
type RoutingProfileMediaConcurrencyArrayInput interface {
	pulumi.Input

	ToRoutingProfileMediaConcurrencyArrayOutput() RoutingProfileMediaConcurrencyArrayOutput
	ToRoutingProfileMediaConcurrencyArrayOutputWithContext(context.Context) RoutingProfileMediaConcurrencyArrayOutput
}

type RoutingProfileMediaConcurrencyArray []RoutingProfileMediaConcurrencyInput

func (RoutingProfileMediaConcurrencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingProfileMediaConcurrency)(nil)).Elem()
}

func (i RoutingProfileMediaConcurrencyArray) ToRoutingProfileMediaConcurrencyArrayOutput() RoutingProfileMediaConcurrencyArrayOutput {
	return i.ToRoutingProfileMediaConcurrencyArrayOutputWithContext(context.Background())
}

func (i RoutingProfileMediaConcurrencyArray) ToRoutingProfileMediaConcurrencyArrayOutputWithContext(ctx context.Context) RoutingProfileMediaConcurrencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileMediaConcurrencyArrayOutput)
}

func (i RoutingProfileMediaConcurrencyArray) ToOutput(ctx context.Context) pulumix.Output[[]RoutingProfileMediaConcurrency] {
	return pulumix.Output[[]RoutingProfileMediaConcurrency]{
		OutputState: i.ToRoutingProfileMediaConcurrencyArrayOutputWithContext(ctx).OutputState,
	}
}

type RoutingProfileMediaConcurrencyOutput struct{ *pulumi.OutputState }

func (RoutingProfileMediaConcurrencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileMediaConcurrency)(nil)).Elem()
}

func (o RoutingProfileMediaConcurrencyOutput) ToRoutingProfileMediaConcurrencyOutput() RoutingProfileMediaConcurrencyOutput {
	return o
}

func (o RoutingProfileMediaConcurrencyOutput) ToRoutingProfileMediaConcurrencyOutputWithContext(ctx context.Context) RoutingProfileMediaConcurrencyOutput {
	return o
}

func (o RoutingProfileMediaConcurrencyOutput) ToOutput(ctx context.Context) pulumix.Output[RoutingProfileMediaConcurrency] {
	return pulumix.Output[RoutingProfileMediaConcurrency]{
		OutputState: o.OutputState,
	}
}

// Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
func (o RoutingProfileMediaConcurrencyOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingProfileMediaConcurrency) string { return v.Channel }).(pulumi.StringOutput)
}

// Specifies the number of contacts an agent can have on a channel simultaneously. Valid Range for `VOICE`: Minimum value of 1. Maximum value of 1. Valid Range for `CHAT`: Minimum value of 1. Maximum value of 10. Valid Range for `TASK`: Minimum value of 1. Maximum value of 10.
func (o RoutingProfileMediaConcurrencyOutput) Concurrency() pulumi.IntOutput {
	return o.ApplyT(func(v RoutingProfileMediaConcurrency) int { return v.Concurrency }).(pulumi.IntOutput)
}

type RoutingProfileMediaConcurrencyArrayOutput struct{ *pulumi.OutputState }

func (RoutingProfileMediaConcurrencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingProfileMediaConcurrency)(nil)).Elem()
}

func (o RoutingProfileMediaConcurrencyArrayOutput) ToRoutingProfileMediaConcurrencyArrayOutput() RoutingProfileMediaConcurrencyArrayOutput {
	return o
}

func (o RoutingProfileMediaConcurrencyArrayOutput) ToRoutingProfileMediaConcurrencyArrayOutputWithContext(ctx context.Context) RoutingProfileMediaConcurrencyArrayOutput {
	return o
}

func (o RoutingProfileMediaConcurrencyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RoutingProfileMediaConcurrency] {
	return pulumix.Output[[]RoutingProfileMediaConcurrency]{
		OutputState: o.OutputState,
	}
}

func (o RoutingProfileMediaConcurrencyArrayOutput) Index(i pulumi.IntInput) RoutingProfileMediaConcurrencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingProfileMediaConcurrency {
		return vs[0].([]RoutingProfileMediaConcurrency)[vs[1].(int)]
	}).(RoutingProfileMediaConcurrencyOutput)
}

type RoutingProfileQueueConfig struct {
	// Specifies the channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
	Channel string `pulumi:"channel"`
	// Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
	Delay int `pulumi:"delay"`
	// Specifies the order in which contacts are to be handled for the queue.
	Priority int `pulumi:"priority"`
	// ARN for the queue.
	QueueArn *string `pulumi:"queueArn"`
	// Specifies the identifier for the queue.
	QueueId string `pulumi:"queueId"`
	// Name for the queue.
	QueueName *string `pulumi:"queueName"`
}

// RoutingProfileQueueConfigInput is an input type that accepts RoutingProfileQueueConfigArgs and RoutingProfileQueueConfigOutput values.
// You can construct a concrete instance of `RoutingProfileQueueConfigInput` via:
//
//	RoutingProfileQueueConfigArgs{...}
type RoutingProfileQueueConfigInput interface {
	pulumi.Input

	ToRoutingProfileQueueConfigOutput() RoutingProfileQueueConfigOutput
	ToRoutingProfileQueueConfigOutputWithContext(context.Context) RoutingProfileQueueConfigOutput
}

type RoutingProfileQueueConfigArgs struct {
	// Specifies the channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
	Channel pulumi.StringInput `pulumi:"channel"`
	// Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
	Delay pulumi.IntInput `pulumi:"delay"`
	// Specifies the order in which contacts are to be handled for the queue.
	Priority pulumi.IntInput `pulumi:"priority"`
	// ARN for the queue.
	QueueArn pulumi.StringPtrInput `pulumi:"queueArn"`
	// Specifies the identifier for the queue.
	QueueId pulumi.StringInput `pulumi:"queueId"`
	// Name for the queue.
	QueueName pulumi.StringPtrInput `pulumi:"queueName"`
}

func (RoutingProfileQueueConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileQueueConfig)(nil)).Elem()
}

func (i RoutingProfileQueueConfigArgs) ToRoutingProfileQueueConfigOutput() RoutingProfileQueueConfigOutput {
	return i.ToRoutingProfileQueueConfigOutputWithContext(context.Background())
}

func (i RoutingProfileQueueConfigArgs) ToRoutingProfileQueueConfigOutputWithContext(ctx context.Context) RoutingProfileQueueConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileQueueConfigOutput)
}

func (i RoutingProfileQueueConfigArgs) ToOutput(ctx context.Context) pulumix.Output[RoutingProfileQueueConfig] {
	return pulumix.Output[RoutingProfileQueueConfig]{
		OutputState: i.ToRoutingProfileQueueConfigOutputWithContext(ctx).OutputState,
	}
}

// RoutingProfileQueueConfigArrayInput is an input type that accepts RoutingProfileQueueConfigArray and RoutingProfileQueueConfigArrayOutput values.
// You can construct a concrete instance of `RoutingProfileQueueConfigArrayInput` via:
//
//	RoutingProfileQueueConfigArray{ RoutingProfileQueueConfigArgs{...} }
type RoutingProfileQueueConfigArrayInput interface {
	pulumi.Input

	ToRoutingProfileQueueConfigArrayOutput() RoutingProfileQueueConfigArrayOutput
	ToRoutingProfileQueueConfigArrayOutputWithContext(context.Context) RoutingProfileQueueConfigArrayOutput
}

type RoutingProfileQueueConfigArray []RoutingProfileQueueConfigInput

func (RoutingProfileQueueConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingProfileQueueConfig)(nil)).Elem()
}

func (i RoutingProfileQueueConfigArray) ToRoutingProfileQueueConfigArrayOutput() RoutingProfileQueueConfigArrayOutput {
	return i.ToRoutingProfileQueueConfigArrayOutputWithContext(context.Background())
}

func (i RoutingProfileQueueConfigArray) ToRoutingProfileQueueConfigArrayOutputWithContext(ctx context.Context) RoutingProfileQueueConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileQueueConfigArrayOutput)
}

func (i RoutingProfileQueueConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]RoutingProfileQueueConfig] {
	return pulumix.Output[[]RoutingProfileQueueConfig]{
		OutputState: i.ToRoutingProfileQueueConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type RoutingProfileQueueConfigOutput struct{ *pulumi.OutputState }

func (RoutingProfileQueueConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileQueueConfig)(nil)).Elem()
}

func (o RoutingProfileQueueConfigOutput) ToRoutingProfileQueueConfigOutput() RoutingProfileQueueConfigOutput {
	return o
}

func (o RoutingProfileQueueConfigOutput) ToRoutingProfileQueueConfigOutputWithContext(ctx context.Context) RoutingProfileQueueConfigOutput {
	return o
}

func (o RoutingProfileQueueConfigOutput) ToOutput(ctx context.Context) pulumix.Output[RoutingProfileQueueConfig] {
	return pulumix.Output[RoutingProfileQueueConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies the channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
func (o RoutingProfileQueueConfigOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) string { return v.Channel }).(pulumi.StringOutput)
}

// Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
func (o RoutingProfileQueueConfigOutput) Delay() pulumi.IntOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) int { return v.Delay }).(pulumi.IntOutput)
}

// Specifies the order in which contacts are to be handled for the queue.
func (o RoutingProfileQueueConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// ARN for the queue.
func (o RoutingProfileQueueConfigOutput) QueueArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) *string { return v.QueueArn }).(pulumi.StringPtrOutput)
}

// Specifies the identifier for the queue.
func (o RoutingProfileQueueConfigOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) string { return v.QueueId }).(pulumi.StringOutput)
}

// Name for the queue.
func (o RoutingProfileQueueConfigOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) *string { return v.QueueName }).(pulumi.StringPtrOutput)
}

type RoutingProfileQueueConfigArrayOutput struct{ *pulumi.OutputState }

func (RoutingProfileQueueConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingProfileQueueConfig)(nil)).Elem()
}

func (o RoutingProfileQueueConfigArrayOutput) ToRoutingProfileQueueConfigArrayOutput() RoutingProfileQueueConfigArrayOutput {
	return o
}

func (o RoutingProfileQueueConfigArrayOutput) ToRoutingProfileQueueConfigArrayOutputWithContext(ctx context.Context) RoutingProfileQueueConfigArrayOutput {
	return o
}

func (o RoutingProfileQueueConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RoutingProfileQueueConfig] {
	return pulumix.Output[[]RoutingProfileQueueConfig]{
		OutputState: o.OutputState,
	}
}

func (o RoutingProfileQueueConfigArrayOutput) Index(i pulumi.IntInput) RoutingProfileQueueConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingProfileQueueConfig {
		return vs[0].([]RoutingProfileQueueConfig)[vs[1].(int)]
	}).(RoutingProfileQueueConfigOutput)
}

type UserHierarchyGroupHierarchyPath struct {
	// A block that defines the details of level five. The level block is documented below.
	LevelFives []UserHierarchyGroupHierarchyPathLevelFife `pulumi:"levelFives"`
	// A block that defines the details of level four. The level block is documented below.
	LevelFours []UserHierarchyGroupHierarchyPathLevelFour `pulumi:"levelFours"`
	// A block that defines the details of level one. The level block is documented below.
	LevelOnes []UserHierarchyGroupHierarchyPathLevelOne `pulumi:"levelOnes"`
	// A block that defines the details of level three. The level block is documented below.
	LevelThrees []UserHierarchyGroupHierarchyPathLevelThree `pulumi:"levelThrees"`
	// A block that defines the details of level two. The level block is documented below.
	LevelTwos []UserHierarchyGroupHierarchyPathLevelTwo `pulumi:"levelTwos"`
}

// UserHierarchyGroupHierarchyPathInput is an input type that accepts UserHierarchyGroupHierarchyPathArgs and UserHierarchyGroupHierarchyPathOutput values.
// You can construct a concrete instance of `UserHierarchyGroupHierarchyPathInput` via:
//
//	UserHierarchyGroupHierarchyPathArgs{...}
type UserHierarchyGroupHierarchyPathInput interface {
	pulumi.Input

	ToUserHierarchyGroupHierarchyPathOutput() UserHierarchyGroupHierarchyPathOutput
	ToUserHierarchyGroupHierarchyPathOutputWithContext(context.Context) UserHierarchyGroupHierarchyPathOutput
}

type UserHierarchyGroupHierarchyPathArgs struct {
	// A block that defines the details of level five. The level block is documented below.
	LevelFives UserHierarchyGroupHierarchyPathLevelFifeArrayInput `pulumi:"levelFives"`
	// A block that defines the details of level four. The level block is documented below.
	LevelFours UserHierarchyGroupHierarchyPathLevelFourArrayInput `pulumi:"levelFours"`
	// A block that defines the details of level one. The level block is documented below.
	LevelOnes UserHierarchyGroupHierarchyPathLevelOneArrayInput `pulumi:"levelOnes"`
	// A block that defines the details of level three. The level block is documented below.
	LevelThrees UserHierarchyGroupHierarchyPathLevelThreeArrayInput `pulumi:"levelThrees"`
	// A block that defines the details of level two. The level block is documented below.
	LevelTwos UserHierarchyGroupHierarchyPathLevelTwoArrayInput `pulumi:"levelTwos"`
}

func (UserHierarchyGroupHierarchyPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyGroupHierarchyPath)(nil)).Elem()
}

func (i UserHierarchyGroupHierarchyPathArgs) ToUserHierarchyGroupHierarchyPathOutput() UserHierarchyGroupHierarchyPathOutput {
	return i.ToUserHierarchyGroupHierarchyPathOutputWithContext(context.Background())
}

func (i UserHierarchyGroupHierarchyPathArgs) ToUserHierarchyGroupHierarchyPathOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyGroupHierarchyPathOutput)
}

func (i UserHierarchyGroupHierarchyPathArgs) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyGroupHierarchyPath] {
	return pulumix.Output[UserHierarchyGroupHierarchyPath]{
		OutputState: i.ToUserHierarchyGroupHierarchyPathOutputWithContext(ctx).OutputState,
	}
}

// UserHierarchyGroupHierarchyPathArrayInput is an input type that accepts UserHierarchyGroupHierarchyPathArray and UserHierarchyGroupHierarchyPathArrayOutput values.
// You can construct a concrete instance of `UserHierarchyGroupHierarchyPathArrayInput` via:
//
//	UserHierarchyGroupHierarchyPathArray{ UserHierarchyGroupHierarchyPathArgs{...} }
type UserHierarchyGroupHierarchyPathArrayInput interface {
	pulumi.Input

	ToUserHierarchyGroupHierarchyPathArrayOutput() UserHierarchyGroupHierarchyPathArrayOutput
	ToUserHierarchyGroupHierarchyPathArrayOutputWithContext(context.Context) UserHierarchyGroupHierarchyPathArrayOutput
}

type UserHierarchyGroupHierarchyPathArray []UserHierarchyGroupHierarchyPathInput

func (UserHierarchyGroupHierarchyPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHierarchyGroupHierarchyPath)(nil)).Elem()
}

func (i UserHierarchyGroupHierarchyPathArray) ToUserHierarchyGroupHierarchyPathArrayOutput() UserHierarchyGroupHierarchyPathArrayOutput {
	return i.ToUserHierarchyGroupHierarchyPathArrayOutputWithContext(context.Background())
}

func (i UserHierarchyGroupHierarchyPathArray) ToUserHierarchyGroupHierarchyPathArrayOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyGroupHierarchyPathArrayOutput)
}

func (i UserHierarchyGroupHierarchyPathArray) ToOutput(ctx context.Context) pulumix.Output[[]UserHierarchyGroupHierarchyPath] {
	return pulumix.Output[[]UserHierarchyGroupHierarchyPath]{
		OutputState: i.ToUserHierarchyGroupHierarchyPathArrayOutputWithContext(ctx).OutputState,
	}
}

type UserHierarchyGroupHierarchyPathOutput struct{ *pulumi.OutputState }

func (UserHierarchyGroupHierarchyPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyGroupHierarchyPath)(nil)).Elem()
}

func (o UserHierarchyGroupHierarchyPathOutput) ToUserHierarchyGroupHierarchyPathOutput() UserHierarchyGroupHierarchyPathOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathOutput) ToUserHierarchyGroupHierarchyPathOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathOutput) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyGroupHierarchyPath] {
	return pulumix.Output[UserHierarchyGroupHierarchyPath]{
		OutputState: o.OutputState,
	}
}

// A block that defines the details of level five. The level block is documented below.
func (o UserHierarchyGroupHierarchyPathOutput) LevelFives() UserHierarchyGroupHierarchyPathLevelFifeArrayOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPath) []UserHierarchyGroupHierarchyPathLevelFife {
		return v.LevelFives
	}).(UserHierarchyGroupHierarchyPathLevelFifeArrayOutput)
}

// A block that defines the details of level four. The level block is documented below.
func (o UserHierarchyGroupHierarchyPathOutput) LevelFours() UserHierarchyGroupHierarchyPathLevelFourArrayOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPath) []UserHierarchyGroupHierarchyPathLevelFour {
		return v.LevelFours
	}).(UserHierarchyGroupHierarchyPathLevelFourArrayOutput)
}

// A block that defines the details of level one. The level block is documented below.
func (o UserHierarchyGroupHierarchyPathOutput) LevelOnes() UserHierarchyGroupHierarchyPathLevelOneArrayOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPath) []UserHierarchyGroupHierarchyPathLevelOne { return v.LevelOnes }).(UserHierarchyGroupHierarchyPathLevelOneArrayOutput)
}

// A block that defines the details of level three. The level block is documented below.
func (o UserHierarchyGroupHierarchyPathOutput) LevelThrees() UserHierarchyGroupHierarchyPathLevelThreeArrayOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPath) []UserHierarchyGroupHierarchyPathLevelThree {
		return v.LevelThrees
	}).(UserHierarchyGroupHierarchyPathLevelThreeArrayOutput)
}

// A block that defines the details of level two. The level block is documented below.
func (o UserHierarchyGroupHierarchyPathOutput) LevelTwos() UserHierarchyGroupHierarchyPathLevelTwoArrayOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPath) []UserHierarchyGroupHierarchyPathLevelTwo { return v.LevelTwos }).(UserHierarchyGroupHierarchyPathLevelTwoArrayOutput)
}

type UserHierarchyGroupHierarchyPathArrayOutput struct{ *pulumi.OutputState }

func (UserHierarchyGroupHierarchyPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHierarchyGroupHierarchyPath)(nil)).Elem()
}

func (o UserHierarchyGroupHierarchyPathArrayOutput) ToUserHierarchyGroupHierarchyPathArrayOutput() UserHierarchyGroupHierarchyPathArrayOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathArrayOutput) ToUserHierarchyGroupHierarchyPathArrayOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathArrayOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserHierarchyGroupHierarchyPath] {
	return pulumix.Output[[]UserHierarchyGroupHierarchyPath]{
		OutputState: o.OutputState,
	}
}

func (o UserHierarchyGroupHierarchyPathArrayOutput) Index(i pulumi.IntInput) UserHierarchyGroupHierarchyPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserHierarchyGroupHierarchyPath {
		return vs[0].([]UserHierarchyGroupHierarchyPath)[vs[1].(int)]
	}).(UserHierarchyGroupHierarchyPathOutput)
}

type UserHierarchyGroupHierarchyPathLevelFife struct {
	// The Amazon Resource Name (ARN) of the hierarchy group.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name *string `pulumi:"name"`
}

// UserHierarchyGroupHierarchyPathLevelFifeInput is an input type that accepts UserHierarchyGroupHierarchyPathLevelFifeArgs and UserHierarchyGroupHierarchyPathLevelFifeOutput values.
// You can construct a concrete instance of `UserHierarchyGroupHierarchyPathLevelFifeInput` via:
//
//	UserHierarchyGroupHierarchyPathLevelFifeArgs{...}
type UserHierarchyGroupHierarchyPathLevelFifeInput interface {
	pulumi.Input

	ToUserHierarchyGroupHierarchyPathLevelFifeOutput() UserHierarchyGroupHierarchyPathLevelFifeOutput
	ToUserHierarchyGroupHierarchyPathLevelFifeOutputWithContext(context.Context) UserHierarchyGroupHierarchyPathLevelFifeOutput
}

type UserHierarchyGroupHierarchyPathLevelFifeArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy group.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserHierarchyGroupHierarchyPathLevelFifeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelFife)(nil)).Elem()
}

func (i UserHierarchyGroupHierarchyPathLevelFifeArgs) ToUserHierarchyGroupHierarchyPathLevelFifeOutput() UserHierarchyGroupHierarchyPathLevelFifeOutput {
	return i.ToUserHierarchyGroupHierarchyPathLevelFifeOutputWithContext(context.Background())
}

func (i UserHierarchyGroupHierarchyPathLevelFifeArgs) ToUserHierarchyGroupHierarchyPathLevelFifeOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelFifeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyGroupHierarchyPathLevelFifeOutput)
}

func (i UserHierarchyGroupHierarchyPathLevelFifeArgs) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyGroupHierarchyPathLevelFife] {
	return pulumix.Output[UserHierarchyGroupHierarchyPathLevelFife]{
		OutputState: i.ToUserHierarchyGroupHierarchyPathLevelFifeOutputWithContext(ctx).OutputState,
	}
}

// UserHierarchyGroupHierarchyPathLevelFifeArrayInput is an input type that accepts UserHierarchyGroupHierarchyPathLevelFifeArray and UserHierarchyGroupHierarchyPathLevelFifeArrayOutput values.
// You can construct a concrete instance of `UserHierarchyGroupHierarchyPathLevelFifeArrayInput` via:
//
//	UserHierarchyGroupHierarchyPathLevelFifeArray{ UserHierarchyGroupHierarchyPathLevelFifeArgs{...} }
type UserHierarchyGroupHierarchyPathLevelFifeArrayInput interface {
	pulumi.Input

	ToUserHierarchyGroupHierarchyPathLevelFifeArrayOutput() UserHierarchyGroupHierarchyPathLevelFifeArrayOutput
	ToUserHierarchyGroupHierarchyPathLevelFifeArrayOutputWithContext(context.Context) UserHierarchyGroupHierarchyPathLevelFifeArrayOutput
}

type UserHierarchyGroupHierarchyPathLevelFifeArray []UserHierarchyGroupHierarchyPathLevelFifeInput

func (UserHierarchyGroupHierarchyPathLevelFifeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHierarchyGroupHierarchyPathLevelFife)(nil)).Elem()
}

func (i UserHierarchyGroupHierarchyPathLevelFifeArray) ToUserHierarchyGroupHierarchyPathLevelFifeArrayOutput() UserHierarchyGroupHierarchyPathLevelFifeArrayOutput {
	return i.ToUserHierarchyGroupHierarchyPathLevelFifeArrayOutputWithContext(context.Background())
}

func (i UserHierarchyGroupHierarchyPathLevelFifeArray) ToUserHierarchyGroupHierarchyPathLevelFifeArrayOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelFifeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyGroupHierarchyPathLevelFifeArrayOutput)
}

func (i UserHierarchyGroupHierarchyPathLevelFifeArray) ToOutput(ctx context.Context) pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelFife] {
	return pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelFife]{
		OutputState: i.ToUserHierarchyGroupHierarchyPathLevelFifeArrayOutputWithContext(ctx).OutputState,
	}
}

type UserHierarchyGroupHierarchyPathLevelFifeOutput struct{ *pulumi.OutputState }

func (UserHierarchyGroupHierarchyPathLevelFifeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelFife)(nil)).Elem()
}

func (o UserHierarchyGroupHierarchyPathLevelFifeOutput) ToUserHierarchyGroupHierarchyPathLevelFifeOutput() UserHierarchyGroupHierarchyPathLevelFifeOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelFifeOutput) ToUserHierarchyGroupHierarchyPathLevelFifeOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelFifeOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelFifeOutput) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyGroupHierarchyPathLevelFife] {
	return pulumix.Output[UserHierarchyGroupHierarchyPathLevelFife]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the hierarchy group.
func (o UserHierarchyGroupHierarchyPathLevelFifeOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelFife) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy group.
func (o UserHierarchyGroupHierarchyPathLevelFifeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelFife) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy group. Must not be more than 100 characters.
func (o UserHierarchyGroupHierarchyPathLevelFifeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelFife) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserHierarchyGroupHierarchyPathLevelFifeArrayOutput struct{ *pulumi.OutputState }

func (UserHierarchyGroupHierarchyPathLevelFifeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHierarchyGroupHierarchyPathLevelFife)(nil)).Elem()
}

func (o UserHierarchyGroupHierarchyPathLevelFifeArrayOutput) ToUserHierarchyGroupHierarchyPathLevelFifeArrayOutput() UserHierarchyGroupHierarchyPathLevelFifeArrayOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelFifeArrayOutput) ToUserHierarchyGroupHierarchyPathLevelFifeArrayOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelFifeArrayOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelFifeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelFife] {
	return pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelFife]{
		OutputState: o.OutputState,
	}
}

func (o UserHierarchyGroupHierarchyPathLevelFifeArrayOutput) Index(i pulumi.IntInput) UserHierarchyGroupHierarchyPathLevelFifeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserHierarchyGroupHierarchyPathLevelFife {
		return vs[0].([]UserHierarchyGroupHierarchyPathLevelFife)[vs[1].(int)]
	}).(UserHierarchyGroupHierarchyPathLevelFifeOutput)
}

type UserHierarchyGroupHierarchyPathLevelFour struct {
	// The Amazon Resource Name (ARN) of the hierarchy group.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name *string `pulumi:"name"`
}

// UserHierarchyGroupHierarchyPathLevelFourInput is an input type that accepts UserHierarchyGroupHierarchyPathLevelFourArgs and UserHierarchyGroupHierarchyPathLevelFourOutput values.
// You can construct a concrete instance of `UserHierarchyGroupHierarchyPathLevelFourInput` via:
//
//	UserHierarchyGroupHierarchyPathLevelFourArgs{...}
type UserHierarchyGroupHierarchyPathLevelFourInput interface {
	pulumi.Input

	ToUserHierarchyGroupHierarchyPathLevelFourOutput() UserHierarchyGroupHierarchyPathLevelFourOutput
	ToUserHierarchyGroupHierarchyPathLevelFourOutputWithContext(context.Context) UserHierarchyGroupHierarchyPathLevelFourOutput
}

type UserHierarchyGroupHierarchyPathLevelFourArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy group.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserHierarchyGroupHierarchyPathLevelFourArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelFour)(nil)).Elem()
}

func (i UserHierarchyGroupHierarchyPathLevelFourArgs) ToUserHierarchyGroupHierarchyPathLevelFourOutput() UserHierarchyGroupHierarchyPathLevelFourOutput {
	return i.ToUserHierarchyGroupHierarchyPathLevelFourOutputWithContext(context.Background())
}

func (i UserHierarchyGroupHierarchyPathLevelFourArgs) ToUserHierarchyGroupHierarchyPathLevelFourOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelFourOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyGroupHierarchyPathLevelFourOutput)
}

func (i UserHierarchyGroupHierarchyPathLevelFourArgs) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyGroupHierarchyPathLevelFour] {
	return pulumix.Output[UserHierarchyGroupHierarchyPathLevelFour]{
		OutputState: i.ToUserHierarchyGroupHierarchyPathLevelFourOutputWithContext(ctx).OutputState,
	}
}

// UserHierarchyGroupHierarchyPathLevelFourArrayInput is an input type that accepts UserHierarchyGroupHierarchyPathLevelFourArray and UserHierarchyGroupHierarchyPathLevelFourArrayOutput values.
// You can construct a concrete instance of `UserHierarchyGroupHierarchyPathLevelFourArrayInput` via:
//
//	UserHierarchyGroupHierarchyPathLevelFourArray{ UserHierarchyGroupHierarchyPathLevelFourArgs{...} }
type UserHierarchyGroupHierarchyPathLevelFourArrayInput interface {
	pulumi.Input

	ToUserHierarchyGroupHierarchyPathLevelFourArrayOutput() UserHierarchyGroupHierarchyPathLevelFourArrayOutput
	ToUserHierarchyGroupHierarchyPathLevelFourArrayOutputWithContext(context.Context) UserHierarchyGroupHierarchyPathLevelFourArrayOutput
}

type UserHierarchyGroupHierarchyPathLevelFourArray []UserHierarchyGroupHierarchyPathLevelFourInput

func (UserHierarchyGroupHierarchyPathLevelFourArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHierarchyGroupHierarchyPathLevelFour)(nil)).Elem()
}

func (i UserHierarchyGroupHierarchyPathLevelFourArray) ToUserHierarchyGroupHierarchyPathLevelFourArrayOutput() UserHierarchyGroupHierarchyPathLevelFourArrayOutput {
	return i.ToUserHierarchyGroupHierarchyPathLevelFourArrayOutputWithContext(context.Background())
}

func (i UserHierarchyGroupHierarchyPathLevelFourArray) ToUserHierarchyGroupHierarchyPathLevelFourArrayOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelFourArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyGroupHierarchyPathLevelFourArrayOutput)
}

func (i UserHierarchyGroupHierarchyPathLevelFourArray) ToOutput(ctx context.Context) pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelFour] {
	return pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelFour]{
		OutputState: i.ToUserHierarchyGroupHierarchyPathLevelFourArrayOutputWithContext(ctx).OutputState,
	}
}

type UserHierarchyGroupHierarchyPathLevelFourOutput struct{ *pulumi.OutputState }

func (UserHierarchyGroupHierarchyPathLevelFourOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelFour)(nil)).Elem()
}

func (o UserHierarchyGroupHierarchyPathLevelFourOutput) ToUserHierarchyGroupHierarchyPathLevelFourOutput() UserHierarchyGroupHierarchyPathLevelFourOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelFourOutput) ToUserHierarchyGroupHierarchyPathLevelFourOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelFourOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelFourOutput) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyGroupHierarchyPathLevelFour] {
	return pulumix.Output[UserHierarchyGroupHierarchyPathLevelFour]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the hierarchy group.
func (o UserHierarchyGroupHierarchyPathLevelFourOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelFour) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy group.
func (o UserHierarchyGroupHierarchyPathLevelFourOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelFour) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy group. Must not be more than 100 characters.
func (o UserHierarchyGroupHierarchyPathLevelFourOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelFour) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserHierarchyGroupHierarchyPathLevelFourArrayOutput struct{ *pulumi.OutputState }

func (UserHierarchyGroupHierarchyPathLevelFourArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHierarchyGroupHierarchyPathLevelFour)(nil)).Elem()
}

func (o UserHierarchyGroupHierarchyPathLevelFourArrayOutput) ToUserHierarchyGroupHierarchyPathLevelFourArrayOutput() UserHierarchyGroupHierarchyPathLevelFourArrayOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelFourArrayOutput) ToUserHierarchyGroupHierarchyPathLevelFourArrayOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelFourArrayOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelFourArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelFour] {
	return pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelFour]{
		OutputState: o.OutputState,
	}
}

func (o UserHierarchyGroupHierarchyPathLevelFourArrayOutput) Index(i pulumi.IntInput) UserHierarchyGroupHierarchyPathLevelFourOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserHierarchyGroupHierarchyPathLevelFour {
		return vs[0].([]UserHierarchyGroupHierarchyPathLevelFour)[vs[1].(int)]
	}).(UserHierarchyGroupHierarchyPathLevelFourOutput)
}

type UserHierarchyGroupHierarchyPathLevelOne struct {
	// The Amazon Resource Name (ARN) of the hierarchy group.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name *string `pulumi:"name"`
}

// UserHierarchyGroupHierarchyPathLevelOneInput is an input type that accepts UserHierarchyGroupHierarchyPathLevelOneArgs and UserHierarchyGroupHierarchyPathLevelOneOutput values.
// You can construct a concrete instance of `UserHierarchyGroupHierarchyPathLevelOneInput` via:
//
//	UserHierarchyGroupHierarchyPathLevelOneArgs{...}
type UserHierarchyGroupHierarchyPathLevelOneInput interface {
	pulumi.Input

	ToUserHierarchyGroupHierarchyPathLevelOneOutput() UserHierarchyGroupHierarchyPathLevelOneOutput
	ToUserHierarchyGroupHierarchyPathLevelOneOutputWithContext(context.Context) UserHierarchyGroupHierarchyPathLevelOneOutput
}

type UserHierarchyGroupHierarchyPathLevelOneArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy group.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserHierarchyGroupHierarchyPathLevelOneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelOne)(nil)).Elem()
}

func (i UserHierarchyGroupHierarchyPathLevelOneArgs) ToUserHierarchyGroupHierarchyPathLevelOneOutput() UserHierarchyGroupHierarchyPathLevelOneOutput {
	return i.ToUserHierarchyGroupHierarchyPathLevelOneOutputWithContext(context.Background())
}

func (i UserHierarchyGroupHierarchyPathLevelOneArgs) ToUserHierarchyGroupHierarchyPathLevelOneOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelOneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyGroupHierarchyPathLevelOneOutput)
}

func (i UserHierarchyGroupHierarchyPathLevelOneArgs) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyGroupHierarchyPathLevelOne] {
	return pulumix.Output[UserHierarchyGroupHierarchyPathLevelOne]{
		OutputState: i.ToUserHierarchyGroupHierarchyPathLevelOneOutputWithContext(ctx).OutputState,
	}
}

// UserHierarchyGroupHierarchyPathLevelOneArrayInput is an input type that accepts UserHierarchyGroupHierarchyPathLevelOneArray and UserHierarchyGroupHierarchyPathLevelOneArrayOutput values.
// You can construct a concrete instance of `UserHierarchyGroupHierarchyPathLevelOneArrayInput` via:
//
//	UserHierarchyGroupHierarchyPathLevelOneArray{ UserHierarchyGroupHierarchyPathLevelOneArgs{...} }
type UserHierarchyGroupHierarchyPathLevelOneArrayInput interface {
	pulumi.Input

	ToUserHierarchyGroupHierarchyPathLevelOneArrayOutput() UserHierarchyGroupHierarchyPathLevelOneArrayOutput
	ToUserHierarchyGroupHierarchyPathLevelOneArrayOutputWithContext(context.Context) UserHierarchyGroupHierarchyPathLevelOneArrayOutput
}

type UserHierarchyGroupHierarchyPathLevelOneArray []UserHierarchyGroupHierarchyPathLevelOneInput

func (UserHierarchyGroupHierarchyPathLevelOneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHierarchyGroupHierarchyPathLevelOne)(nil)).Elem()
}

func (i UserHierarchyGroupHierarchyPathLevelOneArray) ToUserHierarchyGroupHierarchyPathLevelOneArrayOutput() UserHierarchyGroupHierarchyPathLevelOneArrayOutput {
	return i.ToUserHierarchyGroupHierarchyPathLevelOneArrayOutputWithContext(context.Background())
}

func (i UserHierarchyGroupHierarchyPathLevelOneArray) ToUserHierarchyGroupHierarchyPathLevelOneArrayOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelOneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyGroupHierarchyPathLevelOneArrayOutput)
}

func (i UserHierarchyGroupHierarchyPathLevelOneArray) ToOutput(ctx context.Context) pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelOne] {
	return pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelOne]{
		OutputState: i.ToUserHierarchyGroupHierarchyPathLevelOneArrayOutputWithContext(ctx).OutputState,
	}
}

type UserHierarchyGroupHierarchyPathLevelOneOutput struct{ *pulumi.OutputState }

func (UserHierarchyGroupHierarchyPathLevelOneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelOne)(nil)).Elem()
}

func (o UserHierarchyGroupHierarchyPathLevelOneOutput) ToUserHierarchyGroupHierarchyPathLevelOneOutput() UserHierarchyGroupHierarchyPathLevelOneOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelOneOutput) ToUserHierarchyGroupHierarchyPathLevelOneOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelOneOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelOneOutput) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyGroupHierarchyPathLevelOne] {
	return pulumix.Output[UserHierarchyGroupHierarchyPathLevelOne]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the hierarchy group.
func (o UserHierarchyGroupHierarchyPathLevelOneOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelOne) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy group.
func (o UserHierarchyGroupHierarchyPathLevelOneOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelOne) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy group. Must not be more than 100 characters.
func (o UserHierarchyGroupHierarchyPathLevelOneOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelOne) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserHierarchyGroupHierarchyPathLevelOneArrayOutput struct{ *pulumi.OutputState }

func (UserHierarchyGroupHierarchyPathLevelOneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHierarchyGroupHierarchyPathLevelOne)(nil)).Elem()
}

func (o UserHierarchyGroupHierarchyPathLevelOneArrayOutput) ToUserHierarchyGroupHierarchyPathLevelOneArrayOutput() UserHierarchyGroupHierarchyPathLevelOneArrayOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelOneArrayOutput) ToUserHierarchyGroupHierarchyPathLevelOneArrayOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelOneArrayOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelOneArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelOne] {
	return pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelOne]{
		OutputState: o.OutputState,
	}
}

func (o UserHierarchyGroupHierarchyPathLevelOneArrayOutput) Index(i pulumi.IntInput) UserHierarchyGroupHierarchyPathLevelOneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserHierarchyGroupHierarchyPathLevelOne {
		return vs[0].([]UserHierarchyGroupHierarchyPathLevelOne)[vs[1].(int)]
	}).(UserHierarchyGroupHierarchyPathLevelOneOutput)
}

type UserHierarchyGroupHierarchyPathLevelThree struct {
	// The Amazon Resource Name (ARN) of the hierarchy group.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name *string `pulumi:"name"`
}

// UserHierarchyGroupHierarchyPathLevelThreeInput is an input type that accepts UserHierarchyGroupHierarchyPathLevelThreeArgs and UserHierarchyGroupHierarchyPathLevelThreeOutput values.
// You can construct a concrete instance of `UserHierarchyGroupHierarchyPathLevelThreeInput` via:
//
//	UserHierarchyGroupHierarchyPathLevelThreeArgs{...}
type UserHierarchyGroupHierarchyPathLevelThreeInput interface {
	pulumi.Input

	ToUserHierarchyGroupHierarchyPathLevelThreeOutput() UserHierarchyGroupHierarchyPathLevelThreeOutput
	ToUserHierarchyGroupHierarchyPathLevelThreeOutputWithContext(context.Context) UserHierarchyGroupHierarchyPathLevelThreeOutput
}

type UserHierarchyGroupHierarchyPathLevelThreeArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy group.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserHierarchyGroupHierarchyPathLevelThreeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelThree)(nil)).Elem()
}

func (i UserHierarchyGroupHierarchyPathLevelThreeArgs) ToUserHierarchyGroupHierarchyPathLevelThreeOutput() UserHierarchyGroupHierarchyPathLevelThreeOutput {
	return i.ToUserHierarchyGroupHierarchyPathLevelThreeOutputWithContext(context.Background())
}

func (i UserHierarchyGroupHierarchyPathLevelThreeArgs) ToUserHierarchyGroupHierarchyPathLevelThreeOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelThreeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyGroupHierarchyPathLevelThreeOutput)
}

func (i UserHierarchyGroupHierarchyPathLevelThreeArgs) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyGroupHierarchyPathLevelThree] {
	return pulumix.Output[UserHierarchyGroupHierarchyPathLevelThree]{
		OutputState: i.ToUserHierarchyGroupHierarchyPathLevelThreeOutputWithContext(ctx).OutputState,
	}
}

// UserHierarchyGroupHierarchyPathLevelThreeArrayInput is an input type that accepts UserHierarchyGroupHierarchyPathLevelThreeArray and UserHierarchyGroupHierarchyPathLevelThreeArrayOutput values.
// You can construct a concrete instance of `UserHierarchyGroupHierarchyPathLevelThreeArrayInput` via:
//
//	UserHierarchyGroupHierarchyPathLevelThreeArray{ UserHierarchyGroupHierarchyPathLevelThreeArgs{...} }
type UserHierarchyGroupHierarchyPathLevelThreeArrayInput interface {
	pulumi.Input

	ToUserHierarchyGroupHierarchyPathLevelThreeArrayOutput() UserHierarchyGroupHierarchyPathLevelThreeArrayOutput
	ToUserHierarchyGroupHierarchyPathLevelThreeArrayOutputWithContext(context.Context) UserHierarchyGroupHierarchyPathLevelThreeArrayOutput
}

type UserHierarchyGroupHierarchyPathLevelThreeArray []UserHierarchyGroupHierarchyPathLevelThreeInput

func (UserHierarchyGroupHierarchyPathLevelThreeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHierarchyGroupHierarchyPathLevelThree)(nil)).Elem()
}

func (i UserHierarchyGroupHierarchyPathLevelThreeArray) ToUserHierarchyGroupHierarchyPathLevelThreeArrayOutput() UserHierarchyGroupHierarchyPathLevelThreeArrayOutput {
	return i.ToUserHierarchyGroupHierarchyPathLevelThreeArrayOutputWithContext(context.Background())
}

func (i UserHierarchyGroupHierarchyPathLevelThreeArray) ToUserHierarchyGroupHierarchyPathLevelThreeArrayOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelThreeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyGroupHierarchyPathLevelThreeArrayOutput)
}

func (i UserHierarchyGroupHierarchyPathLevelThreeArray) ToOutput(ctx context.Context) pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelThree] {
	return pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelThree]{
		OutputState: i.ToUserHierarchyGroupHierarchyPathLevelThreeArrayOutputWithContext(ctx).OutputState,
	}
}

type UserHierarchyGroupHierarchyPathLevelThreeOutput struct{ *pulumi.OutputState }

func (UserHierarchyGroupHierarchyPathLevelThreeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelThree)(nil)).Elem()
}

func (o UserHierarchyGroupHierarchyPathLevelThreeOutput) ToUserHierarchyGroupHierarchyPathLevelThreeOutput() UserHierarchyGroupHierarchyPathLevelThreeOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelThreeOutput) ToUserHierarchyGroupHierarchyPathLevelThreeOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelThreeOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelThreeOutput) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyGroupHierarchyPathLevelThree] {
	return pulumix.Output[UserHierarchyGroupHierarchyPathLevelThree]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the hierarchy group.
func (o UserHierarchyGroupHierarchyPathLevelThreeOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelThree) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy group.
func (o UserHierarchyGroupHierarchyPathLevelThreeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelThree) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy group. Must not be more than 100 characters.
func (o UserHierarchyGroupHierarchyPathLevelThreeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelThree) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserHierarchyGroupHierarchyPathLevelThreeArrayOutput struct{ *pulumi.OutputState }

func (UserHierarchyGroupHierarchyPathLevelThreeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHierarchyGroupHierarchyPathLevelThree)(nil)).Elem()
}

func (o UserHierarchyGroupHierarchyPathLevelThreeArrayOutput) ToUserHierarchyGroupHierarchyPathLevelThreeArrayOutput() UserHierarchyGroupHierarchyPathLevelThreeArrayOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelThreeArrayOutput) ToUserHierarchyGroupHierarchyPathLevelThreeArrayOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelThreeArrayOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelThreeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelThree] {
	return pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelThree]{
		OutputState: o.OutputState,
	}
}

func (o UserHierarchyGroupHierarchyPathLevelThreeArrayOutput) Index(i pulumi.IntInput) UserHierarchyGroupHierarchyPathLevelThreeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserHierarchyGroupHierarchyPathLevelThree {
		return vs[0].([]UserHierarchyGroupHierarchyPathLevelThree)[vs[1].(int)]
	}).(UserHierarchyGroupHierarchyPathLevelThreeOutput)
}

type UserHierarchyGroupHierarchyPathLevelTwo struct {
	// The Amazon Resource Name (ARN) of the hierarchy group.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name *string `pulumi:"name"`
}

// UserHierarchyGroupHierarchyPathLevelTwoInput is an input type that accepts UserHierarchyGroupHierarchyPathLevelTwoArgs and UserHierarchyGroupHierarchyPathLevelTwoOutput values.
// You can construct a concrete instance of `UserHierarchyGroupHierarchyPathLevelTwoInput` via:
//
//	UserHierarchyGroupHierarchyPathLevelTwoArgs{...}
type UserHierarchyGroupHierarchyPathLevelTwoInput interface {
	pulumi.Input

	ToUserHierarchyGroupHierarchyPathLevelTwoOutput() UserHierarchyGroupHierarchyPathLevelTwoOutput
	ToUserHierarchyGroupHierarchyPathLevelTwoOutputWithContext(context.Context) UserHierarchyGroupHierarchyPathLevelTwoOutput
}

type UserHierarchyGroupHierarchyPathLevelTwoArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy group.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (UserHierarchyGroupHierarchyPathLevelTwoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelTwo)(nil)).Elem()
}

func (i UserHierarchyGroupHierarchyPathLevelTwoArgs) ToUserHierarchyGroupHierarchyPathLevelTwoOutput() UserHierarchyGroupHierarchyPathLevelTwoOutput {
	return i.ToUserHierarchyGroupHierarchyPathLevelTwoOutputWithContext(context.Background())
}

func (i UserHierarchyGroupHierarchyPathLevelTwoArgs) ToUserHierarchyGroupHierarchyPathLevelTwoOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelTwoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyGroupHierarchyPathLevelTwoOutput)
}

func (i UserHierarchyGroupHierarchyPathLevelTwoArgs) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyGroupHierarchyPathLevelTwo] {
	return pulumix.Output[UserHierarchyGroupHierarchyPathLevelTwo]{
		OutputState: i.ToUserHierarchyGroupHierarchyPathLevelTwoOutputWithContext(ctx).OutputState,
	}
}

// UserHierarchyGroupHierarchyPathLevelTwoArrayInput is an input type that accepts UserHierarchyGroupHierarchyPathLevelTwoArray and UserHierarchyGroupHierarchyPathLevelTwoArrayOutput values.
// You can construct a concrete instance of `UserHierarchyGroupHierarchyPathLevelTwoArrayInput` via:
//
//	UserHierarchyGroupHierarchyPathLevelTwoArray{ UserHierarchyGroupHierarchyPathLevelTwoArgs{...} }
type UserHierarchyGroupHierarchyPathLevelTwoArrayInput interface {
	pulumi.Input

	ToUserHierarchyGroupHierarchyPathLevelTwoArrayOutput() UserHierarchyGroupHierarchyPathLevelTwoArrayOutput
	ToUserHierarchyGroupHierarchyPathLevelTwoArrayOutputWithContext(context.Context) UserHierarchyGroupHierarchyPathLevelTwoArrayOutput
}

type UserHierarchyGroupHierarchyPathLevelTwoArray []UserHierarchyGroupHierarchyPathLevelTwoInput

func (UserHierarchyGroupHierarchyPathLevelTwoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHierarchyGroupHierarchyPathLevelTwo)(nil)).Elem()
}

func (i UserHierarchyGroupHierarchyPathLevelTwoArray) ToUserHierarchyGroupHierarchyPathLevelTwoArrayOutput() UserHierarchyGroupHierarchyPathLevelTwoArrayOutput {
	return i.ToUserHierarchyGroupHierarchyPathLevelTwoArrayOutputWithContext(context.Background())
}

func (i UserHierarchyGroupHierarchyPathLevelTwoArray) ToUserHierarchyGroupHierarchyPathLevelTwoArrayOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelTwoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyGroupHierarchyPathLevelTwoArrayOutput)
}

func (i UserHierarchyGroupHierarchyPathLevelTwoArray) ToOutput(ctx context.Context) pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelTwo] {
	return pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelTwo]{
		OutputState: i.ToUserHierarchyGroupHierarchyPathLevelTwoArrayOutputWithContext(ctx).OutputState,
	}
}

type UserHierarchyGroupHierarchyPathLevelTwoOutput struct{ *pulumi.OutputState }

func (UserHierarchyGroupHierarchyPathLevelTwoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelTwo)(nil)).Elem()
}

func (o UserHierarchyGroupHierarchyPathLevelTwoOutput) ToUserHierarchyGroupHierarchyPathLevelTwoOutput() UserHierarchyGroupHierarchyPathLevelTwoOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelTwoOutput) ToUserHierarchyGroupHierarchyPathLevelTwoOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelTwoOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelTwoOutput) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyGroupHierarchyPathLevelTwo] {
	return pulumix.Output[UserHierarchyGroupHierarchyPathLevelTwo]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the hierarchy group.
func (o UserHierarchyGroupHierarchyPathLevelTwoOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelTwo) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy group.
func (o UserHierarchyGroupHierarchyPathLevelTwoOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelTwo) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy group. Must not be more than 100 characters.
func (o UserHierarchyGroupHierarchyPathLevelTwoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyGroupHierarchyPathLevelTwo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type UserHierarchyGroupHierarchyPathLevelTwoArrayOutput struct{ *pulumi.OutputState }

func (UserHierarchyGroupHierarchyPathLevelTwoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHierarchyGroupHierarchyPathLevelTwo)(nil)).Elem()
}

func (o UserHierarchyGroupHierarchyPathLevelTwoArrayOutput) ToUserHierarchyGroupHierarchyPathLevelTwoArrayOutput() UserHierarchyGroupHierarchyPathLevelTwoArrayOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelTwoArrayOutput) ToUserHierarchyGroupHierarchyPathLevelTwoArrayOutputWithContext(ctx context.Context) UserHierarchyGroupHierarchyPathLevelTwoArrayOutput {
	return o
}

func (o UserHierarchyGroupHierarchyPathLevelTwoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelTwo] {
	return pulumix.Output[[]UserHierarchyGroupHierarchyPathLevelTwo]{
		OutputState: o.OutputState,
	}
}

func (o UserHierarchyGroupHierarchyPathLevelTwoArrayOutput) Index(i pulumi.IntInput) UserHierarchyGroupHierarchyPathLevelTwoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserHierarchyGroupHierarchyPathLevelTwo {
		return vs[0].([]UserHierarchyGroupHierarchyPathLevelTwo)[vs[1].(int)]
	}).(UserHierarchyGroupHierarchyPathLevelTwoOutput)
}

type UserHierarchyStructureHierarchyStructure struct {
	// A block that defines the details of level five. The level block is documented below.
	//
	// Each level block supports the following arguments:
	LevelFive *UserHierarchyStructureHierarchyStructureLevelFive `pulumi:"levelFive"`
	// A block that defines the details of level four. The level block is documented below.
	LevelFour *UserHierarchyStructureHierarchyStructureLevelFour `pulumi:"levelFour"`
	// A block that defines the details of level one. The level block is documented below.
	LevelOne *UserHierarchyStructureHierarchyStructureLevelOne `pulumi:"levelOne"`
	// A block that defines the details of level three. The level block is documented below.
	LevelThree *UserHierarchyStructureHierarchyStructureLevelThree `pulumi:"levelThree"`
	// A block that defines the details of level two. The level block is documented below.
	LevelTwo *UserHierarchyStructureHierarchyStructureLevelTwo `pulumi:"levelTwo"`
}

// UserHierarchyStructureHierarchyStructureInput is an input type that accepts UserHierarchyStructureHierarchyStructureArgs and UserHierarchyStructureHierarchyStructureOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureInput` via:
//
//	UserHierarchyStructureHierarchyStructureArgs{...}
type UserHierarchyStructureHierarchyStructureInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureOutput() UserHierarchyStructureHierarchyStructureOutput
	ToUserHierarchyStructureHierarchyStructureOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureOutput
}

type UserHierarchyStructureHierarchyStructureArgs struct {
	// A block that defines the details of level five. The level block is documented below.
	//
	// Each level block supports the following arguments:
	LevelFive UserHierarchyStructureHierarchyStructureLevelFivePtrInput `pulumi:"levelFive"`
	// A block that defines the details of level four. The level block is documented below.
	LevelFour UserHierarchyStructureHierarchyStructureLevelFourPtrInput `pulumi:"levelFour"`
	// A block that defines the details of level one. The level block is documented below.
	LevelOne UserHierarchyStructureHierarchyStructureLevelOnePtrInput `pulumi:"levelOne"`
	// A block that defines the details of level three. The level block is documented below.
	LevelThree UserHierarchyStructureHierarchyStructureLevelThreePtrInput `pulumi:"levelThree"`
	// A block that defines the details of level two. The level block is documented below.
	LevelTwo UserHierarchyStructureHierarchyStructureLevelTwoPtrInput `pulumi:"levelTwo"`
}

func (UserHierarchyStructureHierarchyStructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructure)(nil)).Elem()
}

func (i UserHierarchyStructureHierarchyStructureArgs) ToUserHierarchyStructureHierarchyStructureOutput() UserHierarchyStructureHierarchyStructureOutput {
	return i.ToUserHierarchyStructureHierarchyStructureOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureArgs) ToUserHierarchyStructureHierarchyStructureOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureOutput)
}

func (i UserHierarchyStructureHierarchyStructureArgs) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyStructureHierarchyStructure] {
	return pulumix.Output[UserHierarchyStructureHierarchyStructure]{
		OutputState: i.ToUserHierarchyStructureHierarchyStructureOutputWithContext(ctx).OutputState,
	}
}

func (i UserHierarchyStructureHierarchyStructureArgs) ToUserHierarchyStructureHierarchyStructurePtrOutput() UserHierarchyStructureHierarchyStructurePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureArgs) ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureOutput).ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(ctx)
}

// UserHierarchyStructureHierarchyStructurePtrInput is an input type that accepts UserHierarchyStructureHierarchyStructureArgs, UserHierarchyStructureHierarchyStructurePtr and UserHierarchyStructureHierarchyStructurePtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructurePtrInput` via:
//
//	        UserHierarchyStructureHierarchyStructureArgs{...}
//
//	or:
//
//	        nil
type UserHierarchyStructureHierarchyStructurePtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructurePtrOutput() UserHierarchyStructureHierarchyStructurePtrOutput
	ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructurePtrOutput
}

type userHierarchyStructureHierarchyStructurePtrType UserHierarchyStructureHierarchyStructureArgs

func UserHierarchyStructureHierarchyStructurePtr(v *UserHierarchyStructureHierarchyStructureArgs) UserHierarchyStructureHierarchyStructurePtrInput {
	return (*userHierarchyStructureHierarchyStructurePtrType)(v)
}

func (*userHierarchyStructureHierarchyStructurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructure)(nil)).Elem()
}

func (i *userHierarchyStructureHierarchyStructurePtrType) ToUserHierarchyStructureHierarchyStructurePtrOutput() UserHierarchyStructureHierarchyStructurePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureHierarchyStructurePtrType) ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructurePtrOutput)
}

func (i *userHierarchyStructureHierarchyStructurePtrType) ToOutput(ctx context.Context) pulumix.Output[*UserHierarchyStructureHierarchyStructure] {
	return pulumix.Output[*UserHierarchyStructureHierarchyStructure]{
		OutputState: i.ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(ctx).OutputState,
	}
}

type UserHierarchyStructureHierarchyStructureOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructure)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureOutput) ToUserHierarchyStructureHierarchyStructureOutput() UserHierarchyStructureHierarchyStructureOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureOutput) ToUserHierarchyStructureHierarchyStructureOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureOutput) ToUserHierarchyStructureHierarchyStructurePtrOutput() UserHierarchyStructureHierarchyStructurePtrOutput {
	return o.ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureHierarchyStructureOutput) ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructure {
		return &v
	}).(UserHierarchyStructureHierarchyStructurePtrOutput)
}

func (o UserHierarchyStructureHierarchyStructureOutput) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyStructureHierarchyStructure] {
	return pulumix.Output[UserHierarchyStructureHierarchyStructure]{
		OutputState: o.OutputState,
	}
}

// A block that defines the details of level five. The level block is documented below.
//
// Each level block supports the following arguments:
func (o UserHierarchyStructureHierarchyStructureOutput) LevelFive() UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelFive {
		return v.LevelFive
	}).(UserHierarchyStructureHierarchyStructureLevelFivePtrOutput)
}

// A block that defines the details of level four. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructureOutput) LevelFour() UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelFour {
		return v.LevelFour
	}).(UserHierarchyStructureHierarchyStructureLevelFourPtrOutput)
}

// A block that defines the details of level one. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructureOutput) LevelOne() UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelOne {
		return v.LevelOne
	}).(UserHierarchyStructureHierarchyStructureLevelOnePtrOutput)
}

// A block that defines the details of level three. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructureOutput) LevelThree() UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelThree {
		return v.LevelThree
	}).(UserHierarchyStructureHierarchyStructureLevelThreePtrOutput)
}

// A block that defines the details of level two. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructureOutput) LevelTwo() UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelTwo {
		return v.LevelTwo
	}).(UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput)
}

type UserHierarchyStructureHierarchyStructurePtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructure)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructurePtrOutput) ToUserHierarchyStructureHierarchyStructurePtrOutput() UserHierarchyStructureHierarchyStructurePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructurePtrOutput) ToUserHierarchyStructureHierarchyStructurePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructurePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructurePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserHierarchyStructureHierarchyStructure] {
	return pulumix.Output[*UserHierarchyStructureHierarchyStructure]{
		OutputState: o.OutputState,
	}
}

func (o UserHierarchyStructureHierarchyStructurePtrOutput) Elem() UserHierarchyStructureHierarchyStructureOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructure) UserHierarchyStructureHierarchyStructure {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureHierarchyStructure
		return ret
	}).(UserHierarchyStructureHierarchyStructureOutput)
}

// A block that defines the details of level five. The level block is documented below.
//
// Each level block supports the following arguments:
func (o UserHierarchyStructureHierarchyStructurePtrOutput) LevelFive() UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelFive {
		if v == nil {
			return nil
		}
		return v.LevelFive
	}).(UserHierarchyStructureHierarchyStructureLevelFivePtrOutput)
}

// A block that defines the details of level four. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructurePtrOutput) LevelFour() UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelFour {
		if v == nil {
			return nil
		}
		return v.LevelFour
	}).(UserHierarchyStructureHierarchyStructureLevelFourPtrOutput)
}

// A block that defines the details of level one. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructurePtrOutput) LevelOne() UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelOne {
		if v == nil {
			return nil
		}
		return v.LevelOne
	}).(UserHierarchyStructureHierarchyStructureLevelOnePtrOutput)
}

// A block that defines the details of level three. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructurePtrOutput) LevelThree() UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelThree {
		if v == nil {
			return nil
		}
		return v.LevelThree
	}).(UserHierarchyStructureHierarchyStructureLevelThreePtrOutput)
}

// A block that defines the details of level two. The level block is documented below.
func (o UserHierarchyStructureHierarchyStructurePtrOutput) LevelTwo() UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructure) *UserHierarchyStructureHierarchyStructureLevelTwo {
		if v == nil {
			return nil
		}
		return v.LevelTwo
	}).(UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelFive struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureHierarchyStructureLevelFiveInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelFiveArgs and UserHierarchyStructureHierarchyStructureLevelFiveOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelFiveInput` via:
//
//	UserHierarchyStructureHierarchyStructureLevelFiveArgs{...}
type UserHierarchyStructureHierarchyStructureLevelFiveInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelFiveOutput() UserHierarchyStructureHierarchyStructureLevelFiveOutput
	ToUserHierarchyStructureHierarchyStructureLevelFiveOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelFiveOutput
}

type UserHierarchyStructureHierarchyStructureLevelFiveArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureHierarchyStructureLevelFiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFive)(nil)).Elem()
}

func (i UserHierarchyStructureHierarchyStructureLevelFiveArgs) ToUserHierarchyStructureHierarchyStructureLevelFiveOutput() UserHierarchyStructureHierarchyStructureLevelFiveOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelFiveOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelFiveArgs) ToUserHierarchyStructureHierarchyStructureLevelFiveOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelFiveOutput)
}

func (i UserHierarchyStructureHierarchyStructureLevelFiveArgs) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyStructureHierarchyStructureLevelFive] {
	return pulumix.Output[UserHierarchyStructureHierarchyStructureLevelFive]{
		OutputState: i.ToUserHierarchyStructureHierarchyStructureLevelFiveOutputWithContext(ctx).OutputState,
	}
}

func (i UserHierarchyStructureHierarchyStructureLevelFiveArgs) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelFiveArgs) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelFiveOutput).ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(ctx)
}

// UserHierarchyStructureHierarchyStructureLevelFivePtrInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelFiveArgs, UserHierarchyStructureHierarchyStructureLevelFivePtr and UserHierarchyStructureHierarchyStructureLevelFivePtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelFivePtrInput` via:
//
//	        UserHierarchyStructureHierarchyStructureLevelFiveArgs{...}
//
//	or:
//
//	        nil
type UserHierarchyStructureHierarchyStructureLevelFivePtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureHierarchyStructureLevelFivePtrOutput
	ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelFivePtrOutput
}

type userHierarchyStructureHierarchyStructureLevelFivePtrType UserHierarchyStructureHierarchyStructureLevelFiveArgs

func UserHierarchyStructureHierarchyStructureLevelFivePtr(v *UserHierarchyStructureHierarchyStructureLevelFiveArgs) UserHierarchyStructureHierarchyStructureLevelFivePtrInput {
	return (*userHierarchyStructureHierarchyStructureLevelFivePtrType)(v)
}

func (*userHierarchyStructureHierarchyStructureLevelFivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelFive)(nil)).Elem()
}

func (i *userHierarchyStructureHierarchyStructureLevelFivePtrType) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureHierarchyStructureLevelFivePtrType) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelFivePtrOutput)
}

func (i *userHierarchyStructureHierarchyStructureLevelFivePtrType) ToOutput(ctx context.Context) pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelFive] {
	return pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelFive]{
		OutputState: i.ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(ctx).OutputState,
	}
}

type UserHierarchyStructureHierarchyStructureLevelFiveOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelFiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFive)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) ToUserHierarchyStructureHierarchyStructureLevelFiveOutput() UserHierarchyStructureHierarchyStructureLevelFiveOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) ToUserHierarchyStructureHierarchyStructureLevelFiveOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFiveOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return o.ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureHierarchyStructureLevelFive) *UserHierarchyStructureHierarchyStructureLevelFive {
		return &v
	}).(UserHierarchyStructureHierarchyStructureLevelFivePtrOutput)
}

func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyStructureHierarchyStructureLevelFive] {
	return pulumix.Output[UserHierarchyStructureHierarchyStructureLevelFive]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelFive) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelFive) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelFiveOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelFive) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureHierarchyStructureLevelFivePtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelFive)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) ToUserHierarchyStructureHierarchyStructureLevelFivePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFivePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelFive] {
	return pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelFive]{
		OutputState: o.OutputState,
	}
}

func (o UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) Elem() UserHierarchyStructureHierarchyStructureLevelFiveOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFive) UserHierarchyStructureHierarchyStructureLevelFive {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureHierarchyStructureLevelFive
		return ret
	}).(UserHierarchyStructureHierarchyStructureLevelFiveOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFive) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFive) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelFivePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFive) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelFour struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureHierarchyStructureLevelFourInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelFourArgs and UserHierarchyStructureHierarchyStructureLevelFourOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelFourInput` via:
//
//	UserHierarchyStructureHierarchyStructureLevelFourArgs{...}
type UserHierarchyStructureHierarchyStructureLevelFourInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelFourOutput() UserHierarchyStructureHierarchyStructureLevelFourOutput
	ToUserHierarchyStructureHierarchyStructureLevelFourOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelFourOutput
}

type UserHierarchyStructureHierarchyStructureLevelFourArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureHierarchyStructureLevelFourArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFour)(nil)).Elem()
}

func (i UserHierarchyStructureHierarchyStructureLevelFourArgs) ToUserHierarchyStructureHierarchyStructureLevelFourOutput() UserHierarchyStructureHierarchyStructureLevelFourOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelFourOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelFourArgs) ToUserHierarchyStructureHierarchyStructureLevelFourOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFourOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelFourOutput)
}

func (i UserHierarchyStructureHierarchyStructureLevelFourArgs) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyStructureHierarchyStructureLevelFour] {
	return pulumix.Output[UserHierarchyStructureHierarchyStructureLevelFour]{
		OutputState: i.ToUserHierarchyStructureHierarchyStructureLevelFourOutputWithContext(ctx).OutputState,
	}
}

func (i UserHierarchyStructureHierarchyStructureLevelFourArgs) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelFourArgs) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelFourOutput).ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(ctx)
}

// UserHierarchyStructureHierarchyStructureLevelFourPtrInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelFourArgs, UserHierarchyStructureHierarchyStructureLevelFourPtr and UserHierarchyStructureHierarchyStructureLevelFourPtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelFourPtrInput` via:
//
//	        UserHierarchyStructureHierarchyStructureLevelFourArgs{...}
//
//	or:
//
//	        nil
type UserHierarchyStructureHierarchyStructureLevelFourPtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureHierarchyStructureLevelFourPtrOutput
	ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelFourPtrOutput
}

type userHierarchyStructureHierarchyStructureLevelFourPtrType UserHierarchyStructureHierarchyStructureLevelFourArgs

func UserHierarchyStructureHierarchyStructureLevelFourPtr(v *UserHierarchyStructureHierarchyStructureLevelFourArgs) UserHierarchyStructureHierarchyStructureLevelFourPtrInput {
	return (*userHierarchyStructureHierarchyStructureLevelFourPtrType)(v)
}

func (*userHierarchyStructureHierarchyStructureLevelFourPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelFour)(nil)).Elem()
}

func (i *userHierarchyStructureHierarchyStructureLevelFourPtrType) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureHierarchyStructureLevelFourPtrType) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelFourPtrOutput)
}

func (i *userHierarchyStructureHierarchyStructureLevelFourPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelFour] {
	return pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelFour]{
		OutputState: i.ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(ctx).OutputState,
	}
}

type UserHierarchyStructureHierarchyStructureLevelFourOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelFourOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFour)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) ToUserHierarchyStructureHierarchyStructureLevelFourOutput() UserHierarchyStructureHierarchyStructureLevelFourOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) ToUserHierarchyStructureHierarchyStructureLevelFourOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFourOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return o.ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureHierarchyStructureLevelFour) *UserHierarchyStructureHierarchyStructureLevelFour {
		return &v
	}).(UserHierarchyStructureHierarchyStructureLevelFourPtrOutput)
}

func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyStructureHierarchyStructureLevelFour] {
	return pulumix.Output[UserHierarchyStructureHierarchyStructureLevelFour]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelFour) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelFour) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelFourOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelFour) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureHierarchyStructureLevelFourPtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelFour)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) ToUserHierarchyStructureHierarchyStructureLevelFourPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelFourPtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelFour] {
	return pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelFour]{
		OutputState: o.OutputState,
	}
}

func (o UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) Elem() UserHierarchyStructureHierarchyStructureLevelFourOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFour) UserHierarchyStructureHierarchyStructureLevelFour {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureHierarchyStructureLevelFour
		return ret
	}).(UserHierarchyStructureHierarchyStructureLevelFourOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFour) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFour) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelFourPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelFour) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelOne struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureHierarchyStructureLevelOneInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelOneArgs and UserHierarchyStructureHierarchyStructureLevelOneOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelOneInput` via:
//
//	UserHierarchyStructureHierarchyStructureLevelOneArgs{...}
type UserHierarchyStructureHierarchyStructureLevelOneInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelOneOutput() UserHierarchyStructureHierarchyStructureLevelOneOutput
	ToUserHierarchyStructureHierarchyStructureLevelOneOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelOneOutput
}

type UserHierarchyStructureHierarchyStructureLevelOneArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureHierarchyStructureLevelOneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelOne)(nil)).Elem()
}

func (i UserHierarchyStructureHierarchyStructureLevelOneArgs) ToUserHierarchyStructureHierarchyStructureLevelOneOutput() UserHierarchyStructureHierarchyStructureLevelOneOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelOneOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelOneArgs) ToUserHierarchyStructureHierarchyStructureLevelOneOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelOneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelOneOutput)
}

func (i UserHierarchyStructureHierarchyStructureLevelOneArgs) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyStructureHierarchyStructureLevelOne] {
	return pulumix.Output[UserHierarchyStructureHierarchyStructureLevelOne]{
		OutputState: i.ToUserHierarchyStructureHierarchyStructureLevelOneOutputWithContext(ctx).OutputState,
	}
}

func (i UserHierarchyStructureHierarchyStructureLevelOneArgs) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelOneArgs) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelOneOutput).ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(ctx)
}

// UserHierarchyStructureHierarchyStructureLevelOnePtrInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelOneArgs, UserHierarchyStructureHierarchyStructureLevelOnePtr and UserHierarchyStructureHierarchyStructureLevelOnePtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelOnePtrInput` via:
//
//	        UserHierarchyStructureHierarchyStructureLevelOneArgs{...}
//
//	or:
//
//	        nil
type UserHierarchyStructureHierarchyStructureLevelOnePtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureHierarchyStructureLevelOnePtrOutput
	ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelOnePtrOutput
}

type userHierarchyStructureHierarchyStructureLevelOnePtrType UserHierarchyStructureHierarchyStructureLevelOneArgs

func UserHierarchyStructureHierarchyStructureLevelOnePtr(v *UserHierarchyStructureHierarchyStructureLevelOneArgs) UserHierarchyStructureHierarchyStructureLevelOnePtrInput {
	return (*userHierarchyStructureHierarchyStructureLevelOnePtrType)(v)
}

func (*userHierarchyStructureHierarchyStructureLevelOnePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelOne)(nil)).Elem()
}

func (i *userHierarchyStructureHierarchyStructureLevelOnePtrType) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureHierarchyStructureLevelOnePtrType) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelOnePtrOutput)
}

func (i *userHierarchyStructureHierarchyStructureLevelOnePtrType) ToOutput(ctx context.Context) pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelOne] {
	return pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelOne]{
		OutputState: i.ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(ctx).OutputState,
	}
}

type UserHierarchyStructureHierarchyStructureLevelOneOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelOneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelOne)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) ToUserHierarchyStructureHierarchyStructureLevelOneOutput() UserHierarchyStructureHierarchyStructureLevelOneOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) ToUserHierarchyStructureHierarchyStructureLevelOneOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelOneOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return o.ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureHierarchyStructureLevelOne) *UserHierarchyStructureHierarchyStructureLevelOne {
		return &v
	}).(UserHierarchyStructureHierarchyStructureLevelOnePtrOutput)
}

func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyStructureHierarchyStructureLevelOne] {
	return pulumix.Output[UserHierarchyStructureHierarchyStructureLevelOne]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelOne) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelOne) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelOneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelOne) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureHierarchyStructureLevelOnePtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelOne)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) ToUserHierarchyStructureHierarchyStructureLevelOnePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelOnePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelOne] {
	return pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelOne]{
		OutputState: o.OutputState,
	}
}

func (o UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) Elem() UserHierarchyStructureHierarchyStructureLevelOneOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelOne) UserHierarchyStructureHierarchyStructureLevelOne {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureHierarchyStructureLevelOne
		return ret
	}).(UserHierarchyStructureHierarchyStructureLevelOneOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelOne) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelOne) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelOnePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelOne) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelThree struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureHierarchyStructureLevelThreeInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelThreeArgs and UserHierarchyStructureHierarchyStructureLevelThreeOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelThreeInput` via:
//
//	UserHierarchyStructureHierarchyStructureLevelThreeArgs{...}
type UserHierarchyStructureHierarchyStructureLevelThreeInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelThreeOutput() UserHierarchyStructureHierarchyStructureLevelThreeOutput
	ToUserHierarchyStructureHierarchyStructureLevelThreeOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelThreeOutput
}

type UserHierarchyStructureHierarchyStructureLevelThreeArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureHierarchyStructureLevelThreeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelThree)(nil)).Elem()
}

func (i UserHierarchyStructureHierarchyStructureLevelThreeArgs) ToUserHierarchyStructureHierarchyStructureLevelThreeOutput() UserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelThreeOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelThreeArgs) ToUserHierarchyStructureHierarchyStructureLevelThreeOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelThreeOutput)
}

func (i UserHierarchyStructureHierarchyStructureLevelThreeArgs) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyStructureHierarchyStructureLevelThree] {
	return pulumix.Output[UserHierarchyStructureHierarchyStructureLevelThree]{
		OutputState: i.ToUserHierarchyStructureHierarchyStructureLevelThreeOutputWithContext(ctx).OutputState,
	}
}

func (i UserHierarchyStructureHierarchyStructureLevelThreeArgs) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelThreeArgs) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelThreeOutput).ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(ctx)
}

// UserHierarchyStructureHierarchyStructureLevelThreePtrInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelThreeArgs, UserHierarchyStructureHierarchyStructureLevelThreePtr and UserHierarchyStructureHierarchyStructureLevelThreePtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelThreePtrInput` via:
//
//	        UserHierarchyStructureHierarchyStructureLevelThreeArgs{...}
//
//	or:
//
//	        nil
type UserHierarchyStructureHierarchyStructureLevelThreePtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureHierarchyStructureLevelThreePtrOutput
	ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelThreePtrOutput
}

type userHierarchyStructureHierarchyStructureLevelThreePtrType UserHierarchyStructureHierarchyStructureLevelThreeArgs

func UserHierarchyStructureHierarchyStructureLevelThreePtr(v *UserHierarchyStructureHierarchyStructureLevelThreeArgs) UserHierarchyStructureHierarchyStructureLevelThreePtrInput {
	return (*userHierarchyStructureHierarchyStructureLevelThreePtrType)(v)
}

func (*userHierarchyStructureHierarchyStructureLevelThreePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelThree)(nil)).Elem()
}

func (i *userHierarchyStructureHierarchyStructureLevelThreePtrType) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureHierarchyStructureLevelThreePtrType) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelThreePtrOutput)
}

func (i *userHierarchyStructureHierarchyStructureLevelThreePtrType) ToOutput(ctx context.Context) pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelThree] {
	return pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelThree]{
		OutputState: i.ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(ctx).OutputState,
	}
}

type UserHierarchyStructureHierarchyStructureLevelThreeOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelThreeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelThree)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) ToUserHierarchyStructureHierarchyStructureLevelThreeOutput() UserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) ToUserHierarchyStructureHierarchyStructureLevelThreeOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return o.ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureHierarchyStructureLevelThree) *UserHierarchyStructureHierarchyStructureLevelThree {
		return &v
	}).(UserHierarchyStructureHierarchyStructureLevelThreePtrOutput)
}

func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyStructureHierarchyStructureLevelThree] {
	return pulumix.Output[UserHierarchyStructureHierarchyStructureLevelThree]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelThree) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelThree) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelThreeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelThree) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureHierarchyStructureLevelThreePtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelThree)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) ToUserHierarchyStructureHierarchyStructureLevelThreePtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelThreePtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelThree] {
	return pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelThree]{
		OutputState: o.OutputState,
	}
}

func (o UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) Elem() UserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelThree) UserHierarchyStructureHierarchyStructureLevelThree {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureHierarchyStructureLevelThree
		return ret
	}).(UserHierarchyStructureHierarchyStructureLevelThreeOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelThree) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelThree) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelThreePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelThree) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type UserHierarchyStructureHierarchyStructureLevelTwo struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn *string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id *string `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureHierarchyStructureLevelTwoInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelTwoArgs and UserHierarchyStructureHierarchyStructureLevelTwoOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelTwoInput` via:
//
//	UserHierarchyStructureHierarchyStructureLevelTwoArgs{...}
type UserHierarchyStructureHierarchyStructureLevelTwoInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelTwoOutput() UserHierarchyStructureHierarchyStructureLevelTwoOutput
	ToUserHierarchyStructureHierarchyStructureLevelTwoOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelTwoOutput
}

type UserHierarchyStructureHierarchyStructureLevelTwoArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureHierarchyStructureLevelTwoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelTwo)(nil)).Elem()
}

func (i UserHierarchyStructureHierarchyStructureLevelTwoArgs) ToUserHierarchyStructureHierarchyStructureLevelTwoOutput() UserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelTwoOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelTwoArgs) ToUserHierarchyStructureHierarchyStructureLevelTwoOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelTwoOutput)
}

func (i UserHierarchyStructureHierarchyStructureLevelTwoArgs) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyStructureHierarchyStructureLevelTwo] {
	return pulumix.Output[UserHierarchyStructureHierarchyStructureLevelTwo]{
		OutputState: i.ToUserHierarchyStructureHierarchyStructureLevelTwoOutputWithContext(ctx).OutputState,
	}
}

func (i UserHierarchyStructureHierarchyStructureLevelTwoArgs) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureHierarchyStructureLevelTwoArgs) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelTwoOutput).ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(ctx)
}

// UserHierarchyStructureHierarchyStructureLevelTwoPtrInput is an input type that accepts UserHierarchyStructureHierarchyStructureLevelTwoArgs, UserHierarchyStructureHierarchyStructureLevelTwoPtr and UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureHierarchyStructureLevelTwoPtrInput` via:
//
//	        UserHierarchyStructureHierarchyStructureLevelTwoArgs{...}
//
//	or:
//
//	        nil
type UserHierarchyStructureHierarchyStructureLevelTwoPtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput
	ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(context.Context) UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput
}

type userHierarchyStructureHierarchyStructureLevelTwoPtrType UserHierarchyStructureHierarchyStructureLevelTwoArgs

func UserHierarchyStructureHierarchyStructureLevelTwoPtr(v *UserHierarchyStructureHierarchyStructureLevelTwoArgs) UserHierarchyStructureHierarchyStructureLevelTwoPtrInput {
	return (*userHierarchyStructureHierarchyStructureLevelTwoPtrType)(v)
}

func (*userHierarchyStructureHierarchyStructureLevelTwoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelTwo)(nil)).Elem()
}

func (i *userHierarchyStructureHierarchyStructureLevelTwoPtrType) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return i.ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureHierarchyStructureLevelTwoPtrType) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput)
}

func (i *userHierarchyStructureHierarchyStructureLevelTwoPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelTwo] {
	return pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelTwo]{
		OutputState: i.ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(ctx).OutputState,
	}
}

type UserHierarchyStructureHierarchyStructureLevelTwoOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelTwoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelTwo)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) ToUserHierarchyStructureHierarchyStructureLevelTwoOutput() UserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) ToUserHierarchyStructureHierarchyStructureLevelTwoOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return o.ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureHierarchyStructureLevelTwo) *UserHierarchyStructureHierarchyStructureLevelTwo {
		return &v
	}).(UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput)
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyStructureHierarchyStructureLevelTwo] {
	return pulumix.Output[UserHierarchyStructureHierarchyStructureLevelTwo]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelTwo) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelTwo) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelTwoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureHierarchyStructureLevelTwo) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureHierarchyStructureLevelTwo)(nil)).Elem()
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) ToUserHierarchyStructureHierarchyStructureLevelTwoPtrOutputWithContext(ctx context.Context) UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput {
	return o
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelTwo] {
	return pulumix.Output[*UserHierarchyStructureHierarchyStructureLevelTwo]{
		OutputState: o.OutputState,
	}
}

func (o UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) Elem() UserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelTwo) UserHierarchyStructureHierarchyStructureLevelTwo {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureHierarchyStructureLevelTwo
		return ret
	}).(UserHierarchyStructureHierarchyStructureLevelTwoOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelTwo) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelTwo) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the user hierarchy level. Must not be more than 50 characters.
func (o UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureHierarchyStructureLevelTwo) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type UserIdentityInfo struct {
	// The email address. If you are using SAML for identity management and include this parameter, an error is returned. Note that updates to the `email` is supported. From the [UpdateUserIdentityInfo API documentation](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdateUserIdentityInfo.html) it is strongly recommended to limit who has the ability to invoke `UpdateUserIdentityInfo`. Someone with that ability can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker's email address, and then reset the password through email. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.
	Email *string `pulumi:"email"`
	// The first name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
	FirstName *string `pulumi:"firstName"`
	// The last name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
	LastName *string `pulumi:"lastName"`
}

// UserIdentityInfoInput is an input type that accepts UserIdentityInfoArgs and UserIdentityInfoOutput values.
// You can construct a concrete instance of `UserIdentityInfoInput` via:
//
//	UserIdentityInfoArgs{...}
type UserIdentityInfoInput interface {
	pulumi.Input

	ToUserIdentityInfoOutput() UserIdentityInfoOutput
	ToUserIdentityInfoOutputWithContext(context.Context) UserIdentityInfoOutput
}

type UserIdentityInfoArgs struct {
	// The email address. If you are using SAML for identity management and include this parameter, an error is returned. Note that updates to the `email` is supported. From the [UpdateUserIdentityInfo API documentation](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdateUserIdentityInfo.html) it is strongly recommended to limit who has the ability to invoke `UpdateUserIdentityInfo`. Someone with that ability can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker's email address, and then reset the password through email. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The first name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
	FirstName pulumi.StringPtrInput `pulumi:"firstName"`
	// The last name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
	LastName pulumi.StringPtrInput `pulumi:"lastName"`
}

func (UserIdentityInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityInfo)(nil)).Elem()
}

func (i UserIdentityInfoArgs) ToUserIdentityInfoOutput() UserIdentityInfoOutput {
	return i.ToUserIdentityInfoOutputWithContext(context.Background())
}

func (i UserIdentityInfoArgs) ToUserIdentityInfoOutputWithContext(ctx context.Context) UserIdentityInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityInfoOutput)
}

func (i UserIdentityInfoArgs) ToOutput(ctx context.Context) pulumix.Output[UserIdentityInfo] {
	return pulumix.Output[UserIdentityInfo]{
		OutputState: i.ToUserIdentityInfoOutputWithContext(ctx).OutputState,
	}
}

func (i UserIdentityInfoArgs) ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput {
	return i.ToUserIdentityInfoPtrOutputWithContext(context.Background())
}

func (i UserIdentityInfoArgs) ToUserIdentityInfoPtrOutputWithContext(ctx context.Context) UserIdentityInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityInfoOutput).ToUserIdentityInfoPtrOutputWithContext(ctx)
}

// UserIdentityInfoPtrInput is an input type that accepts UserIdentityInfoArgs, UserIdentityInfoPtr and UserIdentityInfoPtrOutput values.
// You can construct a concrete instance of `UserIdentityInfoPtrInput` via:
//
//	        UserIdentityInfoArgs{...}
//
//	or:
//
//	        nil
type UserIdentityInfoPtrInput interface {
	pulumi.Input

	ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput
	ToUserIdentityInfoPtrOutputWithContext(context.Context) UserIdentityInfoPtrOutput
}

type userIdentityInfoPtrType UserIdentityInfoArgs

func UserIdentityInfoPtr(v *UserIdentityInfoArgs) UserIdentityInfoPtrInput {
	return (*userIdentityInfoPtrType)(v)
}

func (*userIdentityInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserIdentityInfo)(nil)).Elem()
}

func (i *userIdentityInfoPtrType) ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput {
	return i.ToUserIdentityInfoPtrOutputWithContext(context.Background())
}

func (i *userIdentityInfoPtrType) ToUserIdentityInfoPtrOutputWithContext(ctx context.Context) UserIdentityInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityInfoPtrOutput)
}

func (i *userIdentityInfoPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserIdentityInfo] {
	return pulumix.Output[*UserIdentityInfo]{
		OutputState: i.ToUserIdentityInfoPtrOutputWithContext(ctx).OutputState,
	}
}

type UserIdentityInfoOutput struct{ *pulumi.OutputState }

func (UserIdentityInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityInfo)(nil)).Elem()
}

func (o UserIdentityInfoOutput) ToUserIdentityInfoOutput() UserIdentityInfoOutput {
	return o
}

func (o UserIdentityInfoOutput) ToUserIdentityInfoOutputWithContext(ctx context.Context) UserIdentityInfoOutput {
	return o
}

func (o UserIdentityInfoOutput) ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput {
	return o.ToUserIdentityInfoPtrOutputWithContext(context.Background())
}

func (o UserIdentityInfoOutput) ToUserIdentityInfoPtrOutputWithContext(ctx context.Context) UserIdentityInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserIdentityInfo) *UserIdentityInfo {
		return &v
	}).(UserIdentityInfoPtrOutput)
}

func (o UserIdentityInfoOutput) ToOutput(ctx context.Context) pulumix.Output[UserIdentityInfo] {
	return pulumix.Output[UserIdentityInfo]{
		OutputState: o.OutputState,
	}
}

// The email address. If you are using SAML for identity management and include this parameter, an error is returned. Note that updates to the `email` is supported. From the [UpdateUserIdentityInfo API documentation](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdateUserIdentityInfo.html) it is strongly recommended to limit who has the ability to invoke `UpdateUserIdentityInfo`. Someone with that ability can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker's email address, and then reset the password through email. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.
func (o UserIdentityInfoOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInfo) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The first name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
func (o UserIdentityInfoOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInfo) *string { return v.FirstName }).(pulumi.StringPtrOutput)
}

// The last name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
func (o UserIdentityInfoOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInfo) *string { return v.LastName }).(pulumi.StringPtrOutput)
}

type UserIdentityInfoPtrOutput struct{ *pulumi.OutputState }

func (UserIdentityInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserIdentityInfo)(nil)).Elem()
}

func (o UserIdentityInfoPtrOutput) ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput {
	return o
}

func (o UserIdentityInfoPtrOutput) ToUserIdentityInfoPtrOutputWithContext(ctx context.Context) UserIdentityInfoPtrOutput {
	return o
}

func (o UserIdentityInfoPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserIdentityInfo] {
	return pulumix.Output[*UserIdentityInfo]{
		OutputState: o.OutputState,
	}
}

func (o UserIdentityInfoPtrOutput) Elem() UserIdentityInfoOutput {
	return o.ApplyT(func(v *UserIdentityInfo) UserIdentityInfo {
		if v != nil {
			return *v
		}
		var ret UserIdentityInfo
		return ret
	}).(UserIdentityInfoOutput)
}

// The email address. If you are using SAML for identity management and include this parameter, an error is returned. Note that updates to the `email` is supported. From the [UpdateUserIdentityInfo API documentation](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdateUserIdentityInfo.html) it is strongly recommended to limit who has the ability to invoke `UpdateUserIdentityInfo`. Someone with that ability can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker's email address, and then reset the password through email. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.
func (o UserIdentityInfoPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The first name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
func (o UserIdentityInfoPtrOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.FirstName
	}).(pulumi.StringPtrOutput)
}

// The last name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
func (o UserIdentityInfoPtrOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastName
	}).(pulumi.StringPtrOutput)
}

type UserPhoneConfig struct {
	// The After Call Work (ACW) timeout setting, in seconds. Minimum value of 0.
	AfterContactWorkTimeLimit *int `pulumi:"afterContactWorkTimeLimit"`
	// When Auto-Accept Call is enabled for an available agent, the agent connects to contacts automatically.
	AutoAccept *bool `pulumi:"autoAccept"`
	// The phone number for the user's desk phone. Required if `phoneType` is set as `DESK_PHONE`.
	DeskPhoneNumber *string `pulumi:"deskPhoneNumber"`
	// The phone type. Valid values are `DESK_PHONE` and `SOFT_PHONE`.
	PhoneType string `pulumi:"phoneType"`
}

// UserPhoneConfigInput is an input type that accepts UserPhoneConfigArgs and UserPhoneConfigOutput values.
// You can construct a concrete instance of `UserPhoneConfigInput` via:
//
//	UserPhoneConfigArgs{...}
type UserPhoneConfigInput interface {
	pulumi.Input

	ToUserPhoneConfigOutput() UserPhoneConfigOutput
	ToUserPhoneConfigOutputWithContext(context.Context) UserPhoneConfigOutput
}

type UserPhoneConfigArgs struct {
	// The After Call Work (ACW) timeout setting, in seconds. Minimum value of 0.
	AfterContactWorkTimeLimit pulumi.IntPtrInput `pulumi:"afterContactWorkTimeLimit"`
	// When Auto-Accept Call is enabled for an available agent, the agent connects to contacts automatically.
	AutoAccept pulumi.BoolPtrInput `pulumi:"autoAccept"`
	// The phone number for the user's desk phone. Required if `phoneType` is set as `DESK_PHONE`.
	DeskPhoneNumber pulumi.StringPtrInput `pulumi:"deskPhoneNumber"`
	// The phone type. Valid values are `DESK_PHONE` and `SOFT_PHONE`.
	PhoneType pulumi.StringInput `pulumi:"phoneType"`
}

func (UserPhoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPhoneConfig)(nil)).Elem()
}

func (i UserPhoneConfigArgs) ToUserPhoneConfigOutput() UserPhoneConfigOutput {
	return i.ToUserPhoneConfigOutputWithContext(context.Background())
}

func (i UserPhoneConfigArgs) ToUserPhoneConfigOutputWithContext(ctx context.Context) UserPhoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPhoneConfigOutput)
}

func (i UserPhoneConfigArgs) ToOutput(ctx context.Context) pulumix.Output[UserPhoneConfig] {
	return pulumix.Output[UserPhoneConfig]{
		OutputState: i.ToUserPhoneConfigOutputWithContext(ctx).OutputState,
	}
}

func (i UserPhoneConfigArgs) ToUserPhoneConfigPtrOutput() UserPhoneConfigPtrOutput {
	return i.ToUserPhoneConfigPtrOutputWithContext(context.Background())
}

func (i UserPhoneConfigArgs) ToUserPhoneConfigPtrOutputWithContext(ctx context.Context) UserPhoneConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPhoneConfigOutput).ToUserPhoneConfigPtrOutputWithContext(ctx)
}

// UserPhoneConfigPtrInput is an input type that accepts UserPhoneConfigArgs, UserPhoneConfigPtr and UserPhoneConfigPtrOutput values.
// You can construct a concrete instance of `UserPhoneConfigPtrInput` via:
//
//	        UserPhoneConfigArgs{...}
//
//	or:
//
//	        nil
type UserPhoneConfigPtrInput interface {
	pulumi.Input

	ToUserPhoneConfigPtrOutput() UserPhoneConfigPtrOutput
	ToUserPhoneConfigPtrOutputWithContext(context.Context) UserPhoneConfigPtrOutput
}

type userPhoneConfigPtrType UserPhoneConfigArgs

func UserPhoneConfigPtr(v *UserPhoneConfigArgs) UserPhoneConfigPtrInput {
	return (*userPhoneConfigPtrType)(v)
}

func (*userPhoneConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPhoneConfig)(nil)).Elem()
}

func (i *userPhoneConfigPtrType) ToUserPhoneConfigPtrOutput() UserPhoneConfigPtrOutput {
	return i.ToUserPhoneConfigPtrOutputWithContext(context.Background())
}

func (i *userPhoneConfigPtrType) ToUserPhoneConfigPtrOutputWithContext(ctx context.Context) UserPhoneConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPhoneConfigPtrOutput)
}

func (i *userPhoneConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserPhoneConfig] {
	return pulumix.Output[*UserPhoneConfig]{
		OutputState: i.ToUserPhoneConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type UserPhoneConfigOutput struct{ *pulumi.OutputState }

func (UserPhoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPhoneConfig)(nil)).Elem()
}

func (o UserPhoneConfigOutput) ToUserPhoneConfigOutput() UserPhoneConfigOutput {
	return o
}

func (o UserPhoneConfigOutput) ToUserPhoneConfigOutputWithContext(ctx context.Context) UserPhoneConfigOutput {
	return o
}

func (o UserPhoneConfigOutput) ToUserPhoneConfigPtrOutput() UserPhoneConfigPtrOutput {
	return o.ToUserPhoneConfigPtrOutputWithContext(context.Background())
}

func (o UserPhoneConfigOutput) ToUserPhoneConfigPtrOutputWithContext(ctx context.Context) UserPhoneConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPhoneConfig) *UserPhoneConfig {
		return &v
	}).(UserPhoneConfigPtrOutput)
}

func (o UserPhoneConfigOutput) ToOutput(ctx context.Context) pulumix.Output[UserPhoneConfig] {
	return pulumix.Output[UserPhoneConfig]{
		OutputState: o.OutputState,
	}
}

// The After Call Work (ACW) timeout setting, in seconds. Minimum value of 0.
func (o UserPhoneConfigOutput) AfterContactWorkTimeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPhoneConfig) *int { return v.AfterContactWorkTimeLimit }).(pulumi.IntPtrOutput)
}

// When Auto-Accept Call is enabled for an available agent, the agent connects to contacts automatically.
func (o UserPhoneConfigOutput) AutoAccept() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPhoneConfig) *bool { return v.AutoAccept }).(pulumi.BoolPtrOutput)
}

// The phone number for the user's desk phone. Required if `phoneType` is set as `DESK_PHONE`.
func (o UserPhoneConfigOutput) DeskPhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPhoneConfig) *string { return v.DeskPhoneNumber }).(pulumi.StringPtrOutput)
}

// The phone type. Valid values are `DESK_PHONE` and `SOFT_PHONE`.
func (o UserPhoneConfigOutput) PhoneType() pulumi.StringOutput {
	return o.ApplyT(func(v UserPhoneConfig) string { return v.PhoneType }).(pulumi.StringOutput)
}

type UserPhoneConfigPtrOutput struct{ *pulumi.OutputState }

func (UserPhoneConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPhoneConfig)(nil)).Elem()
}

func (o UserPhoneConfigPtrOutput) ToUserPhoneConfigPtrOutput() UserPhoneConfigPtrOutput {
	return o
}

func (o UserPhoneConfigPtrOutput) ToUserPhoneConfigPtrOutputWithContext(ctx context.Context) UserPhoneConfigPtrOutput {
	return o
}

func (o UserPhoneConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserPhoneConfig] {
	return pulumix.Output[*UserPhoneConfig]{
		OutputState: o.OutputState,
	}
}

func (o UserPhoneConfigPtrOutput) Elem() UserPhoneConfigOutput {
	return o.ApplyT(func(v *UserPhoneConfig) UserPhoneConfig {
		if v != nil {
			return *v
		}
		var ret UserPhoneConfig
		return ret
	}).(UserPhoneConfigOutput)
}

// The After Call Work (ACW) timeout setting, in seconds. Minimum value of 0.
func (o UserPhoneConfigPtrOutput) AfterContactWorkTimeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserPhoneConfig) *int {
		if v == nil {
			return nil
		}
		return v.AfterContactWorkTimeLimit
	}).(pulumi.IntPtrOutput)
}

// When Auto-Accept Call is enabled for an available agent, the agent connects to contacts automatically.
func (o UserPhoneConfigPtrOutput) AutoAccept() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPhoneConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AutoAccept
	}).(pulumi.BoolPtrOutput)
}

// The phone number for the user's desk phone. Required if `phoneType` is set as `DESK_PHONE`.
func (o UserPhoneConfigPtrOutput) DeskPhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPhoneConfig) *string {
		if v == nil {
			return nil
		}
		return v.DeskPhoneNumber
	}).(pulumi.StringPtrOutput)
}

// The phone type. Valid values are `DESK_PHONE` and `SOFT_PHONE`.
func (o UserPhoneConfigPtrOutput) PhoneType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPhoneConfig) *string {
		if v == nil {
			return nil
		}
		return &v.PhoneType
	}).(pulumi.StringPtrOutput)
}

type GetBotAssociationLexBot struct {
	// Region that the Amazon Lex (V1) bot was created in.
	LexRegion string `pulumi:"lexRegion"`
	// Name of the Amazon Lex (V1) bot.
	Name string `pulumi:"name"`
}

// GetBotAssociationLexBotInput is an input type that accepts GetBotAssociationLexBotArgs and GetBotAssociationLexBotOutput values.
// You can construct a concrete instance of `GetBotAssociationLexBotInput` via:
//
//	GetBotAssociationLexBotArgs{...}
type GetBotAssociationLexBotInput interface {
	pulumi.Input

	ToGetBotAssociationLexBotOutput() GetBotAssociationLexBotOutput
	ToGetBotAssociationLexBotOutputWithContext(context.Context) GetBotAssociationLexBotOutput
}

type GetBotAssociationLexBotArgs struct {
	// Region that the Amazon Lex (V1) bot was created in.
	LexRegion pulumi.StringInput `pulumi:"lexRegion"`
	// Name of the Amazon Lex (V1) bot.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetBotAssociationLexBotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBotAssociationLexBot)(nil)).Elem()
}

func (i GetBotAssociationLexBotArgs) ToGetBotAssociationLexBotOutput() GetBotAssociationLexBotOutput {
	return i.ToGetBotAssociationLexBotOutputWithContext(context.Background())
}

func (i GetBotAssociationLexBotArgs) ToGetBotAssociationLexBotOutputWithContext(ctx context.Context) GetBotAssociationLexBotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBotAssociationLexBotOutput)
}

func (i GetBotAssociationLexBotArgs) ToOutput(ctx context.Context) pulumix.Output[GetBotAssociationLexBot] {
	return pulumix.Output[GetBotAssociationLexBot]{
		OutputState: i.ToGetBotAssociationLexBotOutputWithContext(ctx).OutputState,
	}
}

type GetBotAssociationLexBotOutput struct{ *pulumi.OutputState }

func (GetBotAssociationLexBotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBotAssociationLexBot)(nil)).Elem()
}

func (o GetBotAssociationLexBotOutput) ToGetBotAssociationLexBotOutput() GetBotAssociationLexBotOutput {
	return o
}

func (o GetBotAssociationLexBotOutput) ToGetBotAssociationLexBotOutputWithContext(ctx context.Context) GetBotAssociationLexBotOutput {
	return o
}

func (o GetBotAssociationLexBotOutput) ToOutput(ctx context.Context) pulumix.Output[GetBotAssociationLexBot] {
	return pulumix.Output[GetBotAssociationLexBot]{
		OutputState: o.OutputState,
	}
}

// Region that the Amazon Lex (V1) bot was created in.
func (o GetBotAssociationLexBotOutput) LexRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetBotAssociationLexBot) string { return v.LexRegion }).(pulumi.StringOutput)
}

// Name of the Amazon Lex (V1) bot.
func (o GetBotAssociationLexBotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBotAssociationLexBot) string { return v.Name }).(pulumi.StringOutput)
}

type GetHoursOfOperationConfig struct {
	// Day that the hours of operation applies to.
	Day string `pulumi:"day"`
	// End time block specifies the time that your contact center closes. The `endTime` is documented below.
	EndTimes []GetHoursOfOperationConfigEndTime `pulumi:"endTimes"`
	// Start time block specifies the time that your contact center opens. The `startTime` is documented below.
	StartTimes []GetHoursOfOperationConfigStartTime `pulumi:"startTimes"`
}

// GetHoursOfOperationConfigInput is an input type that accepts GetHoursOfOperationConfigArgs and GetHoursOfOperationConfigOutput values.
// You can construct a concrete instance of `GetHoursOfOperationConfigInput` via:
//
//	GetHoursOfOperationConfigArgs{...}
type GetHoursOfOperationConfigInput interface {
	pulumi.Input

	ToGetHoursOfOperationConfigOutput() GetHoursOfOperationConfigOutput
	ToGetHoursOfOperationConfigOutputWithContext(context.Context) GetHoursOfOperationConfigOutput
}

type GetHoursOfOperationConfigArgs struct {
	// Day that the hours of operation applies to.
	Day pulumi.StringInput `pulumi:"day"`
	// End time block specifies the time that your contact center closes. The `endTime` is documented below.
	EndTimes GetHoursOfOperationConfigEndTimeArrayInput `pulumi:"endTimes"`
	// Start time block specifies the time that your contact center opens. The `startTime` is documented below.
	StartTimes GetHoursOfOperationConfigStartTimeArrayInput `pulumi:"startTimes"`
}

func (GetHoursOfOperationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoursOfOperationConfig)(nil)).Elem()
}

func (i GetHoursOfOperationConfigArgs) ToGetHoursOfOperationConfigOutput() GetHoursOfOperationConfigOutput {
	return i.ToGetHoursOfOperationConfigOutputWithContext(context.Background())
}

func (i GetHoursOfOperationConfigArgs) ToGetHoursOfOperationConfigOutputWithContext(ctx context.Context) GetHoursOfOperationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoursOfOperationConfigOutput)
}

func (i GetHoursOfOperationConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetHoursOfOperationConfig] {
	return pulumix.Output[GetHoursOfOperationConfig]{
		OutputState: i.ToGetHoursOfOperationConfigOutputWithContext(ctx).OutputState,
	}
}

// GetHoursOfOperationConfigArrayInput is an input type that accepts GetHoursOfOperationConfigArray and GetHoursOfOperationConfigArrayOutput values.
// You can construct a concrete instance of `GetHoursOfOperationConfigArrayInput` via:
//
//	GetHoursOfOperationConfigArray{ GetHoursOfOperationConfigArgs{...} }
type GetHoursOfOperationConfigArrayInput interface {
	pulumi.Input

	ToGetHoursOfOperationConfigArrayOutput() GetHoursOfOperationConfigArrayOutput
	ToGetHoursOfOperationConfigArrayOutputWithContext(context.Context) GetHoursOfOperationConfigArrayOutput
}

type GetHoursOfOperationConfigArray []GetHoursOfOperationConfigInput

func (GetHoursOfOperationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoursOfOperationConfig)(nil)).Elem()
}

func (i GetHoursOfOperationConfigArray) ToGetHoursOfOperationConfigArrayOutput() GetHoursOfOperationConfigArrayOutput {
	return i.ToGetHoursOfOperationConfigArrayOutputWithContext(context.Background())
}

func (i GetHoursOfOperationConfigArray) ToGetHoursOfOperationConfigArrayOutputWithContext(ctx context.Context) GetHoursOfOperationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoursOfOperationConfigArrayOutput)
}

func (i GetHoursOfOperationConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetHoursOfOperationConfig] {
	return pulumix.Output[[]GetHoursOfOperationConfig]{
		OutputState: i.ToGetHoursOfOperationConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetHoursOfOperationConfigOutput struct{ *pulumi.OutputState }

func (GetHoursOfOperationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoursOfOperationConfig)(nil)).Elem()
}

func (o GetHoursOfOperationConfigOutput) ToGetHoursOfOperationConfigOutput() GetHoursOfOperationConfigOutput {
	return o
}

func (o GetHoursOfOperationConfigOutput) ToGetHoursOfOperationConfigOutputWithContext(ctx context.Context) GetHoursOfOperationConfigOutput {
	return o
}

func (o GetHoursOfOperationConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetHoursOfOperationConfig] {
	return pulumix.Output[GetHoursOfOperationConfig]{
		OutputState: o.OutputState,
	}
}

// Day that the hours of operation applies to.
func (o GetHoursOfOperationConfigOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v GetHoursOfOperationConfig) string { return v.Day }).(pulumi.StringOutput)
}

// End time block specifies the time that your contact center closes. The `endTime` is documented below.
func (o GetHoursOfOperationConfigOutput) EndTimes() GetHoursOfOperationConfigEndTimeArrayOutput {
	return o.ApplyT(func(v GetHoursOfOperationConfig) []GetHoursOfOperationConfigEndTime { return v.EndTimes }).(GetHoursOfOperationConfigEndTimeArrayOutput)
}

// Start time block specifies the time that your contact center opens. The `startTime` is documented below.
func (o GetHoursOfOperationConfigOutput) StartTimes() GetHoursOfOperationConfigStartTimeArrayOutput {
	return o.ApplyT(func(v GetHoursOfOperationConfig) []GetHoursOfOperationConfigStartTime { return v.StartTimes }).(GetHoursOfOperationConfigStartTimeArrayOutput)
}

type GetHoursOfOperationConfigArrayOutput struct{ *pulumi.OutputState }

func (GetHoursOfOperationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoursOfOperationConfig)(nil)).Elem()
}

func (o GetHoursOfOperationConfigArrayOutput) ToGetHoursOfOperationConfigArrayOutput() GetHoursOfOperationConfigArrayOutput {
	return o
}

func (o GetHoursOfOperationConfigArrayOutput) ToGetHoursOfOperationConfigArrayOutputWithContext(ctx context.Context) GetHoursOfOperationConfigArrayOutput {
	return o
}

func (o GetHoursOfOperationConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetHoursOfOperationConfig] {
	return pulumix.Output[[]GetHoursOfOperationConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetHoursOfOperationConfigArrayOutput) Index(i pulumi.IntInput) GetHoursOfOperationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHoursOfOperationConfig {
		return vs[0].([]GetHoursOfOperationConfig)[vs[1].(int)]
	}).(GetHoursOfOperationConfigOutput)
}

type GetHoursOfOperationConfigEndTime struct {
	// Hour of opening.
	Hours int `pulumi:"hours"`
	// Minute of opening.
	Minutes int `pulumi:"minutes"`
}

// GetHoursOfOperationConfigEndTimeInput is an input type that accepts GetHoursOfOperationConfigEndTimeArgs and GetHoursOfOperationConfigEndTimeOutput values.
// You can construct a concrete instance of `GetHoursOfOperationConfigEndTimeInput` via:
//
//	GetHoursOfOperationConfigEndTimeArgs{...}
type GetHoursOfOperationConfigEndTimeInput interface {
	pulumi.Input

	ToGetHoursOfOperationConfigEndTimeOutput() GetHoursOfOperationConfigEndTimeOutput
	ToGetHoursOfOperationConfigEndTimeOutputWithContext(context.Context) GetHoursOfOperationConfigEndTimeOutput
}

type GetHoursOfOperationConfigEndTimeArgs struct {
	// Hour of opening.
	Hours pulumi.IntInput `pulumi:"hours"`
	// Minute of opening.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (GetHoursOfOperationConfigEndTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoursOfOperationConfigEndTime)(nil)).Elem()
}

func (i GetHoursOfOperationConfigEndTimeArgs) ToGetHoursOfOperationConfigEndTimeOutput() GetHoursOfOperationConfigEndTimeOutput {
	return i.ToGetHoursOfOperationConfigEndTimeOutputWithContext(context.Background())
}

func (i GetHoursOfOperationConfigEndTimeArgs) ToGetHoursOfOperationConfigEndTimeOutputWithContext(ctx context.Context) GetHoursOfOperationConfigEndTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoursOfOperationConfigEndTimeOutput)
}

func (i GetHoursOfOperationConfigEndTimeArgs) ToOutput(ctx context.Context) pulumix.Output[GetHoursOfOperationConfigEndTime] {
	return pulumix.Output[GetHoursOfOperationConfigEndTime]{
		OutputState: i.ToGetHoursOfOperationConfigEndTimeOutputWithContext(ctx).OutputState,
	}
}

// GetHoursOfOperationConfigEndTimeArrayInput is an input type that accepts GetHoursOfOperationConfigEndTimeArray and GetHoursOfOperationConfigEndTimeArrayOutput values.
// You can construct a concrete instance of `GetHoursOfOperationConfigEndTimeArrayInput` via:
//
//	GetHoursOfOperationConfigEndTimeArray{ GetHoursOfOperationConfigEndTimeArgs{...} }
type GetHoursOfOperationConfigEndTimeArrayInput interface {
	pulumi.Input

	ToGetHoursOfOperationConfigEndTimeArrayOutput() GetHoursOfOperationConfigEndTimeArrayOutput
	ToGetHoursOfOperationConfigEndTimeArrayOutputWithContext(context.Context) GetHoursOfOperationConfigEndTimeArrayOutput
}

type GetHoursOfOperationConfigEndTimeArray []GetHoursOfOperationConfigEndTimeInput

func (GetHoursOfOperationConfigEndTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoursOfOperationConfigEndTime)(nil)).Elem()
}

func (i GetHoursOfOperationConfigEndTimeArray) ToGetHoursOfOperationConfigEndTimeArrayOutput() GetHoursOfOperationConfigEndTimeArrayOutput {
	return i.ToGetHoursOfOperationConfigEndTimeArrayOutputWithContext(context.Background())
}

func (i GetHoursOfOperationConfigEndTimeArray) ToGetHoursOfOperationConfigEndTimeArrayOutputWithContext(ctx context.Context) GetHoursOfOperationConfigEndTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoursOfOperationConfigEndTimeArrayOutput)
}

func (i GetHoursOfOperationConfigEndTimeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetHoursOfOperationConfigEndTime] {
	return pulumix.Output[[]GetHoursOfOperationConfigEndTime]{
		OutputState: i.ToGetHoursOfOperationConfigEndTimeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetHoursOfOperationConfigEndTimeOutput struct{ *pulumi.OutputState }

func (GetHoursOfOperationConfigEndTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoursOfOperationConfigEndTime)(nil)).Elem()
}

func (o GetHoursOfOperationConfigEndTimeOutput) ToGetHoursOfOperationConfigEndTimeOutput() GetHoursOfOperationConfigEndTimeOutput {
	return o
}

func (o GetHoursOfOperationConfigEndTimeOutput) ToGetHoursOfOperationConfigEndTimeOutputWithContext(ctx context.Context) GetHoursOfOperationConfigEndTimeOutput {
	return o
}

func (o GetHoursOfOperationConfigEndTimeOutput) ToOutput(ctx context.Context) pulumix.Output[GetHoursOfOperationConfigEndTime] {
	return pulumix.Output[GetHoursOfOperationConfigEndTime]{
		OutputState: o.OutputState,
	}
}

// Hour of opening.
func (o GetHoursOfOperationConfigEndTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v GetHoursOfOperationConfigEndTime) int { return v.Hours }).(pulumi.IntOutput)
}

// Minute of opening.
func (o GetHoursOfOperationConfigEndTimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetHoursOfOperationConfigEndTime) int { return v.Minutes }).(pulumi.IntOutput)
}

type GetHoursOfOperationConfigEndTimeArrayOutput struct{ *pulumi.OutputState }

func (GetHoursOfOperationConfigEndTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoursOfOperationConfigEndTime)(nil)).Elem()
}

func (o GetHoursOfOperationConfigEndTimeArrayOutput) ToGetHoursOfOperationConfigEndTimeArrayOutput() GetHoursOfOperationConfigEndTimeArrayOutput {
	return o
}

func (o GetHoursOfOperationConfigEndTimeArrayOutput) ToGetHoursOfOperationConfigEndTimeArrayOutputWithContext(ctx context.Context) GetHoursOfOperationConfigEndTimeArrayOutput {
	return o
}

func (o GetHoursOfOperationConfigEndTimeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetHoursOfOperationConfigEndTime] {
	return pulumix.Output[[]GetHoursOfOperationConfigEndTime]{
		OutputState: o.OutputState,
	}
}

func (o GetHoursOfOperationConfigEndTimeArrayOutput) Index(i pulumi.IntInput) GetHoursOfOperationConfigEndTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHoursOfOperationConfigEndTime {
		return vs[0].([]GetHoursOfOperationConfigEndTime)[vs[1].(int)]
	}).(GetHoursOfOperationConfigEndTimeOutput)
}

type GetHoursOfOperationConfigStartTime struct {
	// Hour of opening.
	Hours int `pulumi:"hours"`
	// Minute of opening.
	Minutes int `pulumi:"minutes"`
}

// GetHoursOfOperationConfigStartTimeInput is an input type that accepts GetHoursOfOperationConfigStartTimeArgs and GetHoursOfOperationConfigStartTimeOutput values.
// You can construct a concrete instance of `GetHoursOfOperationConfigStartTimeInput` via:
//
//	GetHoursOfOperationConfigStartTimeArgs{...}
type GetHoursOfOperationConfigStartTimeInput interface {
	pulumi.Input

	ToGetHoursOfOperationConfigStartTimeOutput() GetHoursOfOperationConfigStartTimeOutput
	ToGetHoursOfOperationConfigStartTimeOutputWithContext(context.Context) GetHoursOfOperationConfigStartTimeOutput
}

type GetHoursOfOperationConfigStartTimeArgs struct {
	// Hour of opening.
	Hours pulumi.IntInput `pulumi:"hours"`
	// Minute of opening.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (GetHoursOfOperationConfigStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoursOfOperationConfigStartTime)(nil)).Elem()
}

func (i GetHoursOfOperationConfigStartTimeArgs) ToGetHoursOfOperationConfigStartTimeOutput() GetHoursOfOperationConfigStartTimeOutput {
	return i.ToGetHoursOfOperationConfigStartTimeOutputWithContext(context.Background())
}

func (i GetHoursOfOperationConfigStartTimeArgs) ToGetHoursOfOperationConfigStartTimeOutputWithContext(ctx context.Context) GetHoursOfOperationConfigStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoursOfOperationConfigStartTimeOutput)
}

func (i GetHoursOfOperationConfigStartTimeArgs) ToOutput(ctx context.Context) pulumix.Output[GetHoursOfOperationConfigStartTime] {
	return pulumix.Output[GetHoursOfOperationConfigStartTime]{
		OutputState: i.ToGetHoursOfOperationConfigStartTimeOutputWithContext(ctx).OutputState,
	}
}

// GetHoursOfOperationConfigStartTimeArrayInput is an input type that accepts GetHoursOfOperationConfigStartTimeArray and GetHoursOfOperationConfigStartTimeArrayOutput values.
// You can construct a concrete instance of `GetHoursOfOperationConfigStartTimeArrayInput` via:
//
//	GetHoursOfOperationConfigStartTimeArray{ GetHoursOfOperationConfigStartTimeArgs{...} }
type GetHoursOfOperationConfigStartTimeArrayInput interface {
	pulumi.Input

	ToGetHoursOfOperationConfigStartTimeArrayOutput() GetHoursOfOperationConfigStartTimeArrayOutput
	ToGetHoursOfOperationConfigStartTimeArrayOutputWithContext(context.Context) GetHoursOfOperationConfigStartTimeArrayOutput
}

type GetHoursOfOperationConfigStartTimeArray []GetHoursOfOperationConfigStartTimeInput

func (GetHoursOfOperationConfigStartTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoursOfOperationConfigStartTime)(nil)).Elem()
}

func (i GetHoursOfOperationConfigStartTimeArray) ToGetHoursOfOperationConfigStartTimeArrayOutput() GetHoursOfOperationConfigStartTimeArrayOutput {
	return i.ToGetHoursOfOperationConfigStartTimeArrayOutputWithContext(context.Background())
}

func (i GetHoursOfOperationConfigStartTimeArray) ToGetHoursOfOperationConfigStartTimeArrayOutputWithContext(ctx context.Context) GetHoursOfOperationConfigStartTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHoursOfOperationConfigStartTimeArrayOutput)
}

func (i GetHoursOfOperationConfigStartTimeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetHoursOfOperationConfigStartTime] {
	return pulumix.Output[[]GetHoursOfOperationConfigStartTime]{
		OutputState: i.ToGetHoursOfOperationConfigStartTimeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetHoursOfOperationConfigStartTimeOutput struct{ *pulumi.OutputState }

func (GetHoursOfOperationConfigStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHoursOfOperationConfigStartTime)(nil)).Elem()
}

func (o GetHoursOfOperationConfigStartTimeOutput) ToGetHoursOfOperationConfigStartTimeOutput() GetHoursOfOperationConfigStartTimeOutput {
	return o
}

func (o GetHoursOfOperationConfigStartTimeOutput) ToGetHoursOfOperationConfigStartTimeOutputWithContext(ctx context.Context) GetHoursOfOperationConfigStartTimeOutput {
	return o
}

func (o GetHoursOfOperationConfigStartTimeOutput) ToOutput(ctx context.Context) pulumix.Output[GetHoursOfOperationConfigStartTime] {
	return pulumix.Output[GetHoursOfOperationConfigStartTime]{
		OutputState: o.OutputState,
	}
}

// Hour of opening.
func (o GetHoursOfOperationConfigStartTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v GetHoursOfOperationConfigStartTime) int { return v.Hours }).(pulumi.IntOutput)
}

// Minute of opening.
func (o GetHoursOfOperationConfigStartTimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetHoursOfOperationConfigStartTime) int { return v.Minutes }).(pulumi.IntOutput)
}

type GetHoursOfOperationConfigStartTimeArrayOutput struct{ *pulumi.OutputState }

func (GetHoursOfOperationConfigStartTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHoursOfOperationConfigStartTime)(nil)).Elem()
}

func (o GetHoursOfOperationConfigStartTimeArrayOutput) ToGetHoursOfOperationConfigStartTimeArrayOutput() GetHoursOfOperationConfigStartTimeArrayOutput {
	return o
}

func (o GetHoursOfOperationConfigStartTimeArrayOutput) ToGetHoursOfOperationConfigStartTimeArrayOutputWithContext(ctx context.Context) GetHoursOfOperationConfigStartTimeArrayOutput {
	return o
}

func (o GetHoursOfOperationConfigStartTimeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetHoursOfOperationConfigStartTime] {
	return pulumix.Output[[]GetHoursOfOperationConfigStartTime]{
		OutputState: o.OutputState,
	}
}

func (o GetHoursOfOperationConfigStartTimeArrayOutput) Index(i pulumi.IntInput) GetHoursOfOperationConfigStartTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHoursOfOperationConfigStartTime {
		return vs[0].([]GetHoursOfOperationConfigStartTime)[vs[1].(int)]
	}).(GetHoursOfOperationConfigStartTimeOutput)
}

type GetInstanceStorageConfigStorageConfig struct {
	// A block that specifies the configuration of the Kinesis Firehose delivery stream. Documented below.
	KinesisFirehoseConfigs []GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig `pulumi:"kinesisFirehoseConfigs"`
	// A block that specifies the configuration of the Kinesis data stream. Documented below.
	KinesisStreamConfigs []GetInstanceStorageConfigStorageConfigKinesisStreamConfig `pulumi:"kinesisStreamConfigs"`
	// A block that specifies the configuration of the Kinesis video stream. Documented below.
	KinesisVideoStreamConfigs []GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig `pulumi:"kinesisVideoStreamConfigs"`
	// A block that specifies the configuration of S3 Bucket. Documented below.
	S3Configs []GetInstanceStorageConfigStorageConfigS3Config `pulumi:"s3Configs"`
	// A valid storage type. Valid Values: `S3` | `KINESIS_VIDEO_STREAM` | `KINESIS_STREAM` | `KINESIS_FIREHOSE`.
	StorageType string `pulumi:"storageType"`
}

// GetInstanceStorageConfigStorageConfigInput is an input type that accepts GetInstanceStorageConfigStorageConfigArgs and GetInstanceStorageConfigStorageConfigOutput values.
// You can construct a concrete instance of `GetInstanceStorageConfigStorageConfigInput` via:
//
//	GetInstanceStorageConfigStorageConfigArgs{...}
type GetInstanceStorageConfigStorageConfigInput interface {
	pulumi.Input

	ToGetInstanceStorageConfigStorageConfigOutput() GetInstanceStorageConfigStorageConfigOutput
	ToGetInstanceStorageConfigStorageConfigOutputWithContext(context.Context) GetInstanceStorageConfigStorageConfigOutput
}

type GetInstanceStorageConfigStorageConfigArgs struct {
	// A block that specifies the configuration of the Kinesis Firehose delivery stream. Documented below.
	KinesisFirehoseConfigs GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayInput `pulumi:"kinesisFirehoseConfigs"`
	// A block that specifies the configuration of the Kinesis data stream. Documented below.
	KinesisStreamConfigs GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayInput `pulumi:"kinesisStreamConfigs"`
	// A block that specifies the configuration of the Kinesis video stream. Documented below.
	KinesisVideoStreamConfigs GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayInput `pulumi:"kinesisVideoStreamConfigs"`
	// A block that specifies the configuration of S3 Bucket. Documented below.
	S3Configs GetInstanceStorageConfigStorageConfigS3ConfigArrayInput `pulumi:"s3Configs"`
	// A valid storage type. Valid Values: `S3` | `KINESIS_VIDEO_STREAM` | `KINESIS_STREAM` | `KINESIS_FIREHOSE`.
	StorageType pulumi.StringInput `pulumi:"storageType"`
}

func (GetInstanceStorageConfigStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceStorageConfigStorageConfig)(nil)).Elem()
}

func (i GetInstanceStorageConfigStorageConfigArgs) ToGetInstanceStorageConfigStorageConfigOutput() GetInstanceStorageConfigStorageConfigOutput {
	return i.ToGetInstanceStorageConfigStorageConfigOutputWithContext(context.Background())
}

func (i GetInstanceStorageConfigStorageConfigArgs) ToGetInstanceStorageConfigStorageConfigOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceStorageConfigStorageConfigOutput)
}

func (i GetInstanceStorageConfigStorageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceStorageConfigStorageConfig] {
	return pulumix.Output[GetInstanceStorageConfigStorageConfig]{
		OutputState: i.ToGetInstanceStorageConfigStorageConfigOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceStorageConfigStorageConfigArrayInput is an input type that accepts GetInstanceStorageConfigStorageConfigArray and GetInstanceStorageConfigStorageConfigArrayOutput values.
// You can construct a concrete instance of `GetInstanceStorageConfigStorageConfigArrayInput` via:
//
//	GetInstanceStorageConfigStorageConfigArray{ GetInstanceStorageConfigStorageConfigArgs{...} }
type GetInstanceStorageConfigStorageConfigArrayInput interface {
	pulumi.Input

	ToGetInstanceStorageConfigStorageConfigArrayOutput() GetInstanceStorageConfigStorageConfigArrayOutput
	ToGetInstanceStorageConfigStorageConfigArrayOutputWithContext(context.Context) GetInstanceStorageConfigStorageConfigArrayOutput
}

type GetInstanceStorageConfigStorageConfigArray []GetInstanceStorageConfigStorageConfigInput

func (GetInstanceStorageConfigStorageConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceStorageConfigStorageConfig)(nil)).Elem()
}

func (i GetInstanceStorageConfigStorageConfigArray) ToGetInstanceStorageConfigStorageConfigArrayOutput() GetInstanceStorageConfigStorageConfigArrayOutput {
	return i.ToGetInstanceStorageConfigStorageConfigArrayOutputWithContext(context.Background())
}

func (i GetInstanceStorageConfigStorageConfigArray) ToGetInstanceStorageConfigStorageConfigArrayOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceStorageConfigStorageConfigArrayOutput)
}

func (i GetInstanceStorageConfigStorageConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceStorageConfigStorageConfig] {
	return pulumix.Output[[]GetInstanceStorageConfigStorageConfig]{
		OutputState: i.ToGetInstanceStorageConfigStorageConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceStorageConfigStorageConfigOutput struct{ *pulumi.OutputState }

func (GetInstanceStorageConfigStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceStorageConfigStorageConfig)(nil)).Elem()
}

func (o GetInstanceStorageConfigStorageConfigOutput) ToGetInstanceStorageConfigStorageConfigOutput() GetInstanceStorageConfigStorageConfigOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigOutput) ToGetInstanceStorageConfigStorageConfigOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceStorageConfigStorageConfig] {
	return pulumix.Output[GetInstanceStorageConfigStorageConfig]{
		OutputState: o.OutputState,
	}
}

// A block that specifies the configuration of the Kinesis Firehose delivery stream. Documented below.
func (o GetInstanceStorageConfigStorageConfigOutput) KinesisFirehoseConfigs() GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfig) []GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig {
		return v.KinesisFirehoseConfigs
	}).(GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput)
}

// A block that specifies the configuration of the Kinesis data stream. Documented below.
func (o GetInstanceStorageConfigStorageConfigOutput) KinesisStreamConfigs() GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfig) []GetInstanceStorageConfigStorageConfigKinesisStreamConfig {
		return v.KinesisStreamConfigs
	}).(GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput)
}

// A block that specifies the configuration of the Kinesis video stream. Documented below.
func (o GetInstanceStorageConfigStorageConfigOutput) KinesisVideoStreamConfigs() GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfig) []GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig {
		return v.KinesisVideoStreamConfigs
	}).(GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput)
}

// A block that specifies the configuration of S3 Bucket. Documented below.
func (o GetInstanceStorageConfigStorageConfigOutput) S3Configs() GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfig) []GetInstanceStorageConfigStorageConfigS3Config {
		return v.S3Configs
	}).(GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput)
}

// A valid storage type. Valid Values: `S3` | `KINESIS_VIDEO_STREAM` | `KINESIS_STREAM` | `KINESIS_FIREHOSE`.
func (o GetInstanceStorageConfigStorageConfigOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfig) string { return v.StorageType }).(pulumi.StringOutput)
}

type GetInstanceStorageConfigStorageConfigArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceStorageConfigStorageConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceStorageConfigStorageConfig)(nil)).Elem()
}

func (o GetInstanceStorageConfigStorageConfigArrayOutput) ToGetInstanceStorageConfigStorageConfigArrayOutput() GetInstanceStorageConfigStorageConfigArrayOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigArrayOutput) ToGetInstanceStorageConfigStorageConfigArrayOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigArrayOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceStorageConfigStorageConfig] {
	return pulumix.Output[[]GetInstanceStorageConfigStorageConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceStorageConfigStorageConfigArrayOutput) Index(i pulumi.IntInput) GetInstanceStorageConfigStorageConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceStorageConfigStorageConfig {
		return vs[0].([]GetInstanceStorageConfigStorageConfig)[vs[1].(int)]
	}).(GetInstanceStorageConfigStorageConfigOutput)
}

type GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig struct {
	// The Amazon Resource Name (ARN) of the delivery stream.
	FirehoseArn string `pulumi:"firehoseArn"`
}

// GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigInput is an input type that accepts GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs and GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput values.
// You can construct a concrete instance of `GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigInput` via:
//
//	GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs{...}
type GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigInput interface {
	pulumi.Input

	ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput() GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput
	ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutputWithContext(context.Context) GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput
}

type GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs struct {
	// The Amazon Resource Name (ARN) of the delivery stream.
	FirehoseArn pulumi.StringInput `pulumi:"firehoseArn"`
}

func (GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (i GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs) ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput() GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput {
	return i.ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutputWithContext(context.Background())
}

func (i GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs) ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput)
}

func (i GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig] {
	return pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig]{
		OutputState: i.ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayInput is an input type that accepts GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArray and GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput values.
// You can construct a concrete instance of `GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayInput` via:
//
//	GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArray{ GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs{...} }
type GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayInput interface {
	pulumi.Input

	ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput() GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput
	ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutputWithContext(context.Context) GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput
}

type GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArray []GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigInput

func (GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (i GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArray) ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput() GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput {
	return i.ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutputWithContext(context.Background())
}

func (i GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArray) ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput)
}

func (i GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig] {
	return pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig]{
		OutputState: i.ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput struct{ *pulumi.OutputState }

func (GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (o GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput) ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput() GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput) ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig] {
	return pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the delivery stream.
func (o GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput) FirehoseArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig) string { return v.FirehoseArn }).(pulumi.StringOutput)
}

type GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (o GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput) ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput() GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput) ToGetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig] {
	return pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput) Index(i pulumi.IntInput) GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig {
		return vs[0].([]GetInstanceStorageConfigStorageConfigKinesisFirehoseConfig)[vs[1].(int)]
	}).(GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput)
}

type GetInstanceStorageConfigStorageConfigKinesisStreamConfig struct {
	// The Amazon Resource Name (ARN) of the data stream.
	StreamArn string `pulumi:"streamArn"`
}

// GetInstanceStorageConfigStorageConfigKinesisStreamConfigInput is an input type that accepts GetInstanceStorageConfigStorageConfigKinesisStreamConfigArgs and GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput values.
// You can construct a concrete instance of `GetInstanceStorageConfigStorageConfigKinesisStreamConfigInput` via:
//
//	GetInstanceStorageConfigStorageConfigKinesisStreamConfigArgs{...}
type GetInstanceStorageConfigStorageConfigKinesisStreamConfigInput interface {
	pulumi.Input

	ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput() GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput
	ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigOutputWithContext(context.Context) GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput
}

type GetInstanceStorageConfigStorageConfigKinesisStreamConfigArgs struct {
	// The Amazon Resource Name (ARN) of the data stream.
	StreamArn pulumi.StringInput `pulumi:"streamArn"`
}

func (GetInstanceStorageConfigStorageConfigKinesisStreamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (i GetInstanceStorageConfigStorageConfigKinesisStreamConfigArgs) ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput() GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput {
	return i.ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigOutputWithContext(context.Background())
}

func (i GetInstanceStorageConfigStorageConfigKinesisStreamConfigArgs) ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput)
}

func (i GetInstanceStorageConfigStorageConfigKinesisStreamConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisStreamConfig] {
	return pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisStreamConfig]{
		OutputState: i.ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayInput is an input type that accepts GetInstanceStorageConfigStorageConfigKinesisStreamConfigArray and GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput values.
// You can construct a concrete instance of `GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayInput` via:
//
//	GetInstanceStorageConfigStorageConfigKinesisStreamConfigArray{ GetInstanceStorageConfigStorageConfigKinesisStreamConfigArgs{...} }
type GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayInput interface {
	pulumi.Input

	ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput() GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput
	ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutputWithContext(context.Context) GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput
}

type GetInstanceStorageConfigStorageConfigKinesisStreamConfigArray []GetInstanceStorageConfigStorageConfigKinesisStreamConfigInput

func (GetInstanceStorageConfigStorageConfigKinesisStreamConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceStorageConfigStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (i GetInstanceStorageConfigStorageConfigKinesisStreamConfigArray) ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput() GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput {
	return i.ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutputWithContext(context.Background())
}

func (i GetInstanceStorageConfigStorageConfigKinesisStreamConfigArray) ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput)
}

func (i GetInstanceStorageConfigStorageConfigKinesisStreamConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisStreamConfig] {
	return pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisStreamConfig]{
		OutputState: i.ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput struct{ *pulumi.OutputState }

func (GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (o GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput) ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput() GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput) ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisStreamConfig] {
	return pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisStreamConfig]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the data stream.
func (o GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput) StreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfigKinesisStreamConfig) string { return v.StreamArn }).(pulumi.StringOutput)
}

type GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceStorageConfigStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (o GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput) ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput() GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput) ToGetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisStreamConfig] {
	return pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisStreamConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput) Index(i pulumi.IntInput) GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceStorageConfigStorageConfigKinesisStreamConfig {
		return vs[0].([]GetInstanceStorageConfigStorageConfigKinesisStreamConfig)[vs[1].(int)]
	}).(GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput)
}

type GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig struct {
	// The encryption configuration. Documented below.
	EncryptionConfigs []GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig `pulumi:"encryptionConfigs"`
	// The prefix of the video stream. Minimum length of `1`. Maximum length of `128`. When read from the state, the value returned is `<prefix>-connect-<connect_instance_alias>-contact-` since the API appends additional details to the `prefix`.
	Prefix string `pulumi:"prefix"`
	// The number of hours to retain the data in a data store associated with the stream. Minimum value of `0`. Maximum value of `87600`. A value of `0` indicates that the stream does not persist data.
	RetentionPeriodHours int `pulumi:"retentionPeriodHours"`
}

// GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigInput is an input type that accepts GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs and GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput values.
// You can construct a concrete instance of `GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigInput` via:
//
//	GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs{...}
type GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigInput interface {
	pulumi.Input

	ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput() GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput
	ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutputWithContext(context.Context) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput
}

type GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs struct {
	// The encryption configuration. Documented below.
	EncryptionConfigs GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayInput `pulumi:"encryptionConfigs"`
	// The prefix of the video stream. Minimum length of `1`. Maximum length of `128`. When read from the state, the value returned is `<prefix>-connect-<connect_instance_alias>-contact-` since the API appends additional details to the `prefix`.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// The number of hours to retain the data in a data store associated with the stream. Minimum value of `0`. Maximum value of `87600`. A value of `0` indicates that the stream does not persist data.
	RetentionPeriodHours pulumi.IntInput `pulumi:"retentionPeriodHours"`
}

func (GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (i GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput() GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput {
	return i.ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutputWithContext(context.Background())
}

func (i GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput)
}

func (i GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig] {
	return pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig]{
		OutputState: i.ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayInput is an input type that accepts GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArray and GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput values.
// You can construct a concrete instance of `GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayInput` via:
//
//	GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArray{ GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs{...} }
type GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayInput interface {
	pulumi.Input

	ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput() GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput
	ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutputWithContext(context.Context) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput
}

type GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArray []GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigInput

func (GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (i GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArray) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput() GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput {
	return i.ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutputWithContext(context.Background())
}

func (i GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArray) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput)
}

func (i GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig] {
	return pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig]{
		OutputState: i.ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput struct{ *pulumi.OutputState }

func (GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput() GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig] {
	return pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig]{
		OutputState: o.OutputState,
	}
}

// The encryption configuration. Documented below.
func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) EncryptionConfigs() GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig) []GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig {
		return v.EncryptionConfigs
	}).(GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput)
}

// The prefix of the video stream. Minimum length of `1`. Maximum length of `128`. When read from the state, the value returned is `<prefix>-connect-<connect_instance_alias>-contact-` since the API appends additional details to the `prefix`.
func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig) string { return v.Prefix }).(pulumi.StringOutput)
}

// The number of hours to retain the data in a data store associated with the stream. Minimum value of `0`. Maximum value of `87600`. A value of `0` indicates that the stream does not persist data.
func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput) RetentionPeriodHours() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig) int {
		return v.RetentionPeriodHours
	}).(pulumi.IntOutput)
}

type GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput() GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig] {
	return pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput) Index(i pulumi.IntInput) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig {
		return vs[0].([]GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfig)[vs[1].(int)]
	}).(GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput)
}

type GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig struct {
	// The type of encryption. Valid Values: `KMS`.
	EncryptionType string `pulumi:"encryptionType"`
	// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
	KeyId string `pulumi:"keyId"`
}

// GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigInput is an input type that accepts GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs and GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput values.
// You can construct a concrete instance of `GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigInput` via:
//
//	GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs{...}
type GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigInput interface {
	pulumi.Input

	ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput() GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput
	ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutputWithContext(context.Context) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput
}

type GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs struct {
	// The type of encryption. Valid Values: `KMS`.
	EncryptionType pulumi.StringInput `pulumi:"encryptionType"`
	// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig)(nil)).Elem()
}

func (i GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput() GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput {
	return i.ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutputWithContext(context.Background())
}

func (i GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput)
}

func (i GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig] {
	return pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig]{
		OutputState: i.ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayInput is an input type that accepts GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArray and GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput values.
// You can construct a concrete instance of `GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayInput` via:
//
//	GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArray{ GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs{...} }
type GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayInput interface {
	pulumi.Input

	ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput() GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput
	ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutputWithContext(context.Context) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput
}

type GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArray []GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigInput

func (GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig)(nil)).Elem()
}

func (i GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArray) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput() GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput {
	return i.ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutputWithContext(context.Background())
}

func (i GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArray) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput)
}

func (i GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig] {
	return pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig]{
		OutputState: i.ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput struct{ *pulumi.OutputState }

func (GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig)(nil)).Elem()
}

func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput() GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig] {
	return pulumix.Output[GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

// The type of encryption. Valid Values: `KMS`.
func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput) EncryptionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig) string {
		return v.EncryptionType
	}).(pulumi.StringOutput)
}

// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig) string {
		return v.KeyId
	}).(pulumi.StringOutput)
}

type GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig)(nil)).Elem()
}

func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput() GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput) ToGetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig] {
	return pulumix.Output[[]GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput) Index(i pulumi.IntInput) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig {
		return vs[0].([]GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfig)[vs[1].(int)]
	}).(GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput)
}

type GetInstanceStorageConfigStorageConfigS3Config struct {
	// The S3 bucket name.
	BucketName string `pulumi:"bucketName"`
	// The S3 bucket prefix.
	BucketPrefix string `pulumi:"bucketPrefix"`
	// The encryption configuration. Documented below.
	EncryptionConfigs []GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig `pulumi:"encryptionConfigs"`
}

// GetInstanceStorageConfigStorageConfigS3ConfigInput is an input type that accepts GetInstanceStorageConfigStorageConfigS3ConfigArgs and GetInstanceStorageConfigStorageConfigS3ConfigOutput values.
// You can construct a concrete instance of `GetInstanceStorageConfigStorageConfigS3ConfigInput` via:
//
//	GetInstanceStorageConfigStorageConfigS3ConfigArgs{...}
type GetInstanceStorageConfigStorageConfigS3ConfigInput interface {
	pulumi.Input

	ToGetInstanceStorageConfigStorageConfigS3ConfigOutput() GetInstanceStorageConfigStorageConfigS3ConfigOutput
	ToGetInstanceStorageConfigStorageConfigS3ConfigOutputWithContext(context.Context) GetInstanceStorageConfigStorageConfigS3ConfigOutput
}

type GetInstanceStorageConfigStorageConfigS3ConfigArgs struct {
	// The S3 bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The S3 bucket prefix.
	BucketPrefix pulumi.StringInput `pulumi:"bucketPrefix"`
	// The encryption configuration. Documented below.
	EncryptionConfigs GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayInput `pulumi:"encryptionConfigs"`
}

func (GetInstanceStorageConfigStorageConfigS3ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceStorageConfigStorageConfigS3Config)(nil)).Elem()
}

func (i GetInstanceStorageConfigStorageConfigS3ConfigArgs) ToGetInstanceStorageConfigStorageConfigS3ConfigOutput() GetInstanceStorageConfigStorageConfigS3ConfigOutput {
	return i.ToGetInstanceStorageConfigStorageConfigS3ConfigOutputWithContext(context.Background())
}

func (i GetInstanceStorageConfigStorageConfigS3ConfigArgs) ToGetInstanceStorageConfigStorageConfigS3ConfigOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigS3ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceStorageConfigStorageConfigS3ConfigOutput)
}

func (i GetInstanceStorageConfigStorageConfigS3ConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceStorageConfigStorageConfigS3Config] {
	return pulumix.Output[GetInstanceStorageConfigStorageConfigS3Config]{
		OutputState: i.ToGetInstanceStorageConfigStorageConfigS3ConfigOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceStorageConfigStorageConfigS3ConfigArrayInput is an input type that accepts GetInstanceStorageConfigStorageConfigS3ConfigArray and GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput values.
// You can construct a concrete instance of `GetInstanceStorageConfigStorageConfigS3ConfigArrayInput` via:
//
//	GetInstanceStorageConfigStorageConfigS3ConfigArray{ GetInstanceStorageConfigStorageConfigS3ConfigArgs{...} }
type GetInstanceStorageConfigStorageConfigS3ConfigArrayInput interface {
	pulumi.Input

	ToGetInstanceStorageConfigStorageConfigS3ConfigArrayOutput() GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput
	ToGetInstanceStorageConfigStorageConfigS3ConfigArrayOutputWithContext(context.Context) GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput
}

type GetInstanceStorageConfigStorageConfigS3ConfigArray []GetInstanceStorageConfigStorageConfigS3ConfigInput

func (GetInstanceStorageConfigStorageConfigS3ConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceStorageConfigStorageConfigS3Config)(nil)).Elem()
}

func (i GetInstanceStorageConfigStorageConfigS3ConfigArray) ToGetInstanceStorageConfigStorageConfigS3ConfigArrayOutput() GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput {
	return i.ToGetInstanceStorageConfigStorageConfigS3ConfigArrayOutputWithContext(context.Background())
}

func (i GetInstanceStorageConfigStorageConfigS3ConfigArray) ToGetInstanceStorageConfigStorageConfigS3ConfigArrayOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput)
}

func (i GetInstanceStorageConfigStorageConfigS3ConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceStorageConfigStorageConfigS3Config] {
	return pulumix.Output[[]GetInstanceStorageConfigStorageConfigS3Config]{
		OutputState: i.ToGetInstanceStorageConfigStorageConfigS3ConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceStorageConfigStorageConfigS3ConfigOutput struct{ *pulumi.OutputState }

func (GetInstanceStorageConfigStorageConfigS3ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceStorageConfigStorageConfigS3Config)(nil)).Elem()
}

func (o GetInstanceStorageConfigStorageConfigS3ConfigOutput) ToGetInstanceStorageConfigStorageConfigS3ConfigOutput() GetInstanceStorageConfigStorageConfigS3ConfigOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigS3ConfigOutput) ToGetInstanceStorageConfigStorageConfigS3ConfigOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigS3ConfigOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigS3ConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceStorageConfigStorageConfigS3Config] {
	return pulumix.Output[GetInstanceStorageConfigStorageConfigS3Config]{
		OutputState: o.OutputState,
	}
}

// The S3 bucket name.
func (o GetInstanceStorageConfigStorageConfigS3ConfigOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfigS3Config) string { return v.BucketName }).(pulumi.StringOutput)
}

// The S3 bucket prefix.
func (o GetInstanceStorageConfigStorageConfigS3ConfigOutput) BucketPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfigS3Config) string { return v.BucketPrefix }).(pulumi.StringOutput)
}

// The encryption configuration. Documented below.
func (o GetInstanceStorageConfigStorageConfigS3ConfigOutput) EncryptionConfigs() GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfigS3Config) []GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig {
		return v.EncryptionConfigs
	}).(GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput)
}

type GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceStorageConfigStorageConfigS3Config)(nil)).Elem()
}

func (o GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput) ToGetInstanceStorageConfigStorageConfigS3ConfigArrayOutput() GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput) ToGetInstanceStorageConfigStorageConfigS3ConfigArrayOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceStorageConfigStorageConfigS3Config] {
	return pulumix.Output[[]GetInstanceStorageConfigStorageConfigS3Config]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput) Index(i pulumi.IntInput) GetInstanceStorageConfigStorageConfigS3ConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceStorageConfigStorageConfigS3Config {
		return vs[0].([]GetInstanceStorageConfigStorageConfigS3Config)[vs[1].(int)]
	}).(GetInstanceStorageConfigStorageConfigS3ConfigOutput)
}

type GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig struct {
	// The type of encryption. Valid Values: `KMS`.
	EncryptionType string `pulumi:"encryptionType"`
	// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
	KeyId string `pulumi:"keyId"`
}

// GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigInput is an input type that accepts GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs and GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput values.
// You can construct a concrete instance of `GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigInput` via:
//
//	GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs{...}
type GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigInput interface {
	pulumi.Input

	ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput() GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput
	ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutputWithContext(context.Context) GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput
}

type GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs struct {
	// The type of encryption. Valid Values: `KMS`.
	EncryptionType pulumi.StringInput `pulumi:"encryptionType"`
	// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig)(nil)).Elem()
}

func (i GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs) ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput() GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput {
	return i.ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutputWithContext(context.Background())
}

func (i GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs) ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput)
}

func (i GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig] {
	return pulumix.Output[GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig]{
		OutputState: i.ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutputWithContext(ctx).OutputState,
	}
}

// GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayInput is an input type that accepts GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArray and GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput values.
// You can construct a concrete instance of `GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayInput` via:
//
//	GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArray{ GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs{...} }
type GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayInput interface {
	pulumi.Input

	ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput() GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput
	ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutputWithContext(context.Context) GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput
}

type GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArray []GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigInput

func (GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig)(nil)).Elem()
}

func (i GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArray) ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput() GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput {
	return i.ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutputWithContext(context.Background())
}

func (i GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArray) ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput)
}

func (i GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig] {
	return pulumix.Output[[]GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig]{
		OutputState: i.ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput struct{ *pulumi.OutputState }

func (GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig)(nil)).Elem()
}

func (o GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput) ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput() GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput) ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig] {
	return pulumix.Output[GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

// The type of encryption. Valid Values: `KMS`.
func (o GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput) EncryptionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig) string { return v.EncryptionType }).(pulumi.StringOutput)
}

// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
func (o GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig) string { return v.KeyId }).(pulumi.StringOutput)
}

type GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig)(nil)).Elem()
}

func (o GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput) ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput() GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput) ToGetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutputWithContext(ctx context.Context) GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput {
	return o
}

func (o GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig] {
	return pulumix.Output[[]GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput) Index(i pulumi.IntInput) GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig {
		return vs[0].([]GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfig)[vs[1].(int)]
	}).(GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput)
}

type GetQueueOutboundCallerConfig struct {
	// Specifies the caller ID name.
	OutboundCallerIdName string `pulumi:"outboundCallerIdName"`
	// Specifies the caller ID number.
	OutboundCallerIdNumberId string `pulumi:"outboundCallerIdNumberId"`
	// Outbound whisper flow to be used during an outbound call.
	OutboundFlowId string `pulumi:"outboundFlowId"`
}

// GetQueueOutboundCallerConfigInput is an input type that accepts GetQueueOutboundCallerConfigArgs and GetQueueOutboundCallerConfigOutput values.
// You can construct a concrete instance of `GetQueueOutboundCallerConfigInput` via:
//
//	GetQueueOutboundCallerConfigArgs{...}
type GetQueueOutboundCallerConfigInput interface {
	pulumi.Input

	ToGetQueueOutboundCallerConfigOutput() GetQueueOutboundCallerConfigOutput
	ToGetQueueOutboundCallerConfigOutputWithContext(context.Context) GetQueueOutboundCallerConfigOutput
}

type GetQueueOutboundCallerConfigArgs struct {
	// Specifies the caller ID name.
	OutboundCallerIdName pulumi.StringInput `pulumi:"outboundCallerIdName"`
	// Specifies the caller ID number.
	OutboundCallerIdNumberId pulumi.StringInput `pulumi:"outboundCallerIdNumberId"`
	// Outbound whisper flow to be used during an outbound call.
	OutboundFlowId pulumi.StringInput `pulumi:"outboundFlowId"`
}

func (GetQueueOutboundCallerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueOutboundCallerConfig)(nil)).Elem()
}

func (i GetQueueOutboundCallerConfigArgs) ToGetQueueOutboundCallerConfigOutput() GetQueueOutboundCallerConfigOutput {
	return i.ToGetQueueOutboundCallerConfigOutputWithContext(context.Background())
}

func (i GetQueueOutboundCallerConfigArgs) ToGetQueueOutboundCallerConfigOutputWithContext(ctx context.Context) GetQueueOutboundCallerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueOutboundCallerConfigOutput)
}

func (i GetQueueOutboundCallerConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetQueueOutboundCallerConfig] {
	return pulumix.Output[GetQueueOutboundCallerConfig]{
		OutputState: i.ToGetQueueOutboundCallerConfigOutputWithContext(ctx).OutputState,
	}
}

// GetQueueOutboundCallerConfigArrayInput is an input type that accepts GetQueueOutboundCallerConfigArray and GetQueueOutboundCallerConfigArrayOutput values.
// You can construct a concrete instance of `GetQueueOutboundCallerConfigArrayInput` via:
//
//	GetQueueOutboundCallerConfigArray{ GetQueueOutboundCallerConfigArgs{...} }
type GetQueueOutboundCallerConfigArrayInput interface {
	pulumi.Input

	ToGetQueueOutboundCallerConfigArrayOutput() GetQueueOutboundCallerConfigArrayOutput
	ToGetQueueOutboundCallerConfigArrayOutputWithContext(context.Context) GetQueueOutboundCallerConfigArrayOutput
}

type GetQueueOutboundCallerConfigArray []GetQueueOutboundCallerConfigInput

func (GetQueueOutboundCallerConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueOutboundCallerConfig)(nil)).Elem()
}

func (i GetQueueOutboundCallerConfigArray) ToGetQueueOutboundCallerConfigArrayOutput() GetQueueOutboundCallerConfigArrayOutput {
	return i.ToGetQueueOutboundCallerConfigArrayOutputWithContext(context.Background())
}

func (i GetQueueOutboundCallerConfigArray) ToGetQueueOutboundCallerConfigArrayOutputWithContext(ctx context.Context) GetQueueOutboundCallerConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQueueOutboundCallerConfigArrayOutput)
}

func (i GetQueueOutboundCallerConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetQueueOutboundCallerConfig] {
	return pulumix.Output[[]GetQueueOutboundCallerConfig]{
		OutputState: i.ToGetQueueOutboundCallerConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetQueueOutboundCallerConfigOutput struct{ *pulumi.OutputState }

func (GetQueueOutboundCallerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueueOutboundCallerConfig)(nil)).Elem()
}

func (o GetQueueOutboundCallerConfigOutput) ToGetQueueOutboundCallerConfigOutput() GetQueueOutboundCallerConfigOutput {
	return o
}

func (o GetQueueOutboundCallerConfigOutput) ToGetQueueOutboundCallerConfigOutputWithContext(ctx context.Context) GetQueueOutboundCallerConfigOutput {
	return o
}

func (o GetQueueOutboundCallerConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetQueueOutboundCallerConfig] {
	return pulumix.Output[GetQueueOutboundCallerConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies the caller ID name.
func (o GetQueueOutboundCallerConfigOutput) OutboundCallerIdName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueOutboundCallerConfig) string { return v.OutboundCallerIdName }).(pulumi.StringOutput)
}

// Specifies the caller ID number.
func (o GetQueueOutboundCallerConfigOutput) OutboundCallerIdNumberId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueOutboundCallerConfig) string { return v.OutboundCallerIdNumberId }).(pulumi.StringOutput)
}

// Outbound whisper flow to be used during an outbound call.
func (o GetQueueOutboundCallerConfigOutput) OutboundFlowId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueueOutboundCallerConfig) string { return v.OutboundFlowId }).(pulumi.StringOutput)
}

type GetQueueOutboundCallerConfigArrayOutput struct{ *pulumi.OutputState }

func (GetQueueOutboundCallerConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQueueOutboundCallerConfig)(nil)).Elem()
}

func (o GetQueueOutboundCallerConfigArrayOutput) ToGetQueueOutboundCallerConfigArrayOutput() GetQueueOutboundCallerConfigArrayOutput {
	return o
}

func (o GetQueueOutboundCallerConfigArrayOutput) ToGetQueueOutboundCallerConfigArrayOutputWithContext(ctx context.Context) GetQueueOutboundCallerConfigArrayOutput {
	return o
}

func (o GetQueueOutboundCallerConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetQueueOutboundCallerConfig] {
	return pulumix.Output[[]GetQueueOutboundCallerConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetQueueOutboundCallerConfigArrayOutput) Index(i pulumi.IntInput) GetQueueOutboundCallerConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQueueOutboundCallerConfig {
		return vs[0].([]GetQueueOutboundCallerConfig)[vs[1].(int)]
	}).(GetQueueOutboundCallerConfigOutput)
}

type GetQuickConnectQuickConnectConfig struct {
	// Phone configuration of the Quick Connect. This is returned only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
	PhoneConfigs []GetQuickConnectQuickConnectConfigPhoneConfig `pulumi:"phoneConfigs"`
	// Queue configuration of the Quick Connect. This is returned only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
	QueueConfigs []GetQuickConnectQuickConnectConfigQueueConfig `pulumi:"queueConfigs"`
	// Configuration type of the Quick Connect. Valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
	QuickConnectType string `pulumi:"quickConnectType"`
	// User configuration of the Quick Connect. This is returned only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
	UserConfigs []GetQuickConnectQuickConnectConfigUserConfig `pulumi:"userConfigs"`
}

// GetQuickConnectQuickConnectConfigInput is an input type that accepts GetQuickConnectQuickConnectConfigArgs and GetQuickConnectQuickConnectConfigOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigInput` via:
//
//	GetQuickConnectQuickConnectConfigArgs{...}
type GetQuickConnectQuickConnectConfigInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigOutput() GetQuickConnectQuickConnectConfigOutput
	ToGetQuickConnectQuickConnectConfigOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigOutput
}

type GetQuickConnectQuickConnectConfigArgs struct {
	// Phone configuration of the Quick Connect. This is returned only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
	PhoneConfigs GetQuickConnectQuickConnectConfigPhoneConfigArrayInput `pulumi:"phoneConfigs"`
	// Queue configuration of the Quick Connect. This is returned only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
	QueueConfigs GetQuickConnectQuickConnectConfigQueueConfigArrayInput `pulumi:"queueConfigs"`
	// Configuration type of the Quick Connect. Valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
	QuickConnectType pulumi.StringInput `pulumi:"quickConnectType"`
	// User configuration of the Quick Connect. This is returned only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
	UserConfigs GetQuickConnectQuickConnectConfigUserConfigArrayInput `pulumi:"userConfigs"`
}

func (GetQuickConnectQuickConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigArgs) ToGetQuickConnectQuickConnectConfigOutput() GetQuickConnectQuickConnectConfigOutput {
	return i.ToGetQuickConnectQuickConnectConfigOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigArgs) ToGetQuickConnectQuickConnectConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigOutput)
}

func (i GetQuickConnectQuickConnectConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetQuickConnectQuickConnectConfig] {
	return pulumix.Output[GetQuickConnectQuickConnectConfig]{
		OutputState: i.ToGetQuickConnectQuickConnectConfigOutputWithContext(ctx).OutputState,
	}
}

// GetQuickConnectQuickConnectConfigArrayInput is an input type that accepts GetQuickConnectQuickConnectConfigArray and GetQuickConnectQuickConnectConfigArrayOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigArrayInput` via:
//
//	GetQuickConnectQuickConnectConfigArray{ GetQuickConnectQuickConnectConfigArgs{...} }
type GetQuickConnectQuickConnectConfigArrayInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigArrayOutput() GetQuickConnectQuickConnectConfigArrayOutput
	ToGetQuickConnectQuickConnectConfigArrayOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigArrayOutput
}

type GetQuickConnectQuickConnectConfigArray []GetQuickConnectQuickConnectConfigInput

func (GetQuickConnectQuickConnectConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigArray) ToGetQuickConnectQuickConnectConfigArrayOutput() GetQuickConnectQuickConnectConfigArrayOutput {
	return i.ToGetQuickConnectQuickConnectConfigArrayOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigArray) ToGetQuickConnectQuickConnectConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigArrayOutput)
}

func (i GetQuickConnectQuickConnectConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetQuickConnectQuickConnectConfig] {
	return pulumix.Output[[]GetQuickConnectQuickConnectConfig]{
		OutputState: i.ToGetQuickConnectQuickConnectConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetQuickConnectQuickConnectConfigOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigOutput) ToGetQuickConnectQuickConnectConfigOutput() GetQuickConnectQuickConnectConfigOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigOutput) ToGetQuickConnectQuickConnectConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetQuickConnectQuickConnectConfig] {
	return pulumix.Output[GetQuickConnectQuickConnectConfig]{
		OutputState: o.OutputState,
	}
}

// Phone configuration of the Quick Connect. This is returned only if `quickConnectType` is `PHONE_NUMBER`. The `phoneConfig` block is documented below.
func (o GetQuickConnectQuickConnectConfigOutput) PhoneConfigs() GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfig) []GetQuickConnectQuickConnectConfigPhoneConfig {
		return v.PhoneConfigs
	}).(GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput)
}

// Queue configuration of the Quick Connect. This is returned only if `quickConnectType` is `QUEUE`. The `queueConfig` block is documented below.
func (o GetQuickConnectQuickConnectConfigOutput) QueueConfigs() GetQuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfig) []GetQuickConnectQuickConnectConfigQueueConfig {
		return v.QueueConfigs
	}).(GetQuickConnectQuickConnectConfigQueueConfigArrayOutput)
}

// Configuration type of the Quick Connect. Valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
func (o GetQuickConnectQuickConnectConfigOutput) QuickConnectType() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfig) string { return v.QuickConnectType }).(pulumi.StringOutput)
}

// User configuration of the Quick Connect. This is returned only if `quickConnectType` is `USER`. The `userConfig` block is documented below.
func (o GetQuickConnectQuickConnectConfigOutput) UserConfigs() GetQuickConnectQuickConnectConfigUserConfigArrayOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfig) []GetQuickConnectQuickConnectConfigUserConfig {
		return v.UserConfigs
	}).(GetQuickConnectQuickConnectConfigUserConfigArrayOutput)
}

type GetQuickConnectQuickConnectConfigArrayOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigArrayOutput) ToGetQuickConnectQuickConnectConfigArrayOutput() GetQuickConnectQuickConnectConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigArrayOutput) ToGetQuickConnectQuickConnectConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetQuickConnectQuickConnectConfig] {
	return pulumix.Output[[]GetQuickConnectQuickConnectConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetQuickConnectQuickConnectConfigArrayOutput) Index(i pulumi.IntInput) GetQuickConnectQuickConnectConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuickConnectQuickConnectConfig {
		return vs[0].([]GetQuickConnectQuickConnectConfig)[vs[1].(int)]
	}).(GetQuickConnectQuickConnectConfigOutput)
}

type GetQuickConnectQuickConnectConfigPhoneConfig struct {
	// Phone number in in E.164 format.
	PhoneNumber string `pulumi:"phoneNumber"`
}

// GetQuickConnectQuickConnectConfigPhoneConfigInput is an input type that accepts GetQuickConnectQuickConnectConfigPhoneConfigArgs and GetQuickConnectQuickConnectConfigPhoneConfigOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigPhoneConfigInput` via:
//
//	GetQuickConnectQuickConnectConfigPhoneConfigArgs{...}
type GetQuickConnectQuickConnectConfigPhoneConfigInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigPhoneConfigOutput() GetQuickConnectQuickConnectConfigPhoneConfigOutput
	ToGetQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigPhoneConfigOutput
}

type GetQuickConnectQuickConnectConfigPhoneConfigArgs struct {
	// Phone number in in E.164 format.
	PhoneNumber pulumi.StringInput `pulumi:"phoneNumber"`
}

func (GetQuickConnectQuickConnectConfigPhoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigPhoneConfigArgs) ToGetQuickConnectQuickConnectConfigPhoneConfigOutput() GetQuickConnectQuickConnectConfigPhoneConfigOutput {
	return i.ToGetQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigPhoneConfigArgs) ToGetQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigPhoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigPhoneConfigOutput)
}

func (i GetQuickConnectQuickConnectConfigPhoneConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetQuickConnectQuickConnectConfigPhoneConfig] {
	return pulumix.Output[GetQuickConnectQuickConnectConfigPhoneConfig]{
		OutputState: i.ToGetQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(ctx).OutputState,
	}
}

// GetQuickConnectQuickConnectConfigPhoneConfigArrayInput is an input type that accepts GetQuickConnectQuickConnectConfigPhoneConfigArray and GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigPhoneConfigArrayInput` via:
//
//	GetQuickConnectQuickConnectConfigPhoneConfigArray{ GetQuickConnectQuickConnectConfigPhoneConfigArgs{...} }
type GetQuickConnectQuickConnectConfigPhoneConfigArrayInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutput() GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput
	ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput
}

type GetQuickConnectQuickConnectConfigPhoneConfigArray []GetQuickConnectQuickConnectConfigPhoneConfigInput

func (GetQuickConnectQuickConnectConfigPhoneConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigPhoneConfigArray) ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutput() GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return i.ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigPhoneConfigArray) ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput)
}

func (i GetQuickConnectQuickConnectConfigPhoneConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetQuickConnectQuickConnectConfigPhoneConfig] {
	return pulumix.Output[[]GetQuickConnectQuickConnectConfigPhoneConfig]{
		OutputState: i.ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetQuickConnectQuickConnectConfigPhoneConfigOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigPhoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigPhoneConfigOutput) ToGetQuickConnectQuickConnectConfigPhoneConfigOutput() GetQuickConnectQuickConnectConfigPhoneConfigOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigPhoneConfigOutput) ToGetQuickConnectQuickConnectConfigPhoneConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigPhoneConfigOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigPhoneConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetQuickConnectQuickConnectConfigPhoneConfig] {
	return pulumix.Output[GetQuickConnectQuickConnectConfigPhoneConfig]{
		OutputState: o.OutputState,
	}
}

// Phone number in in E.164 format.
func (o GetQuickConnectQuickConnectConfigPhoneConfigOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfigPhoneConfig) string { return v.PhoneNumber }).(pulumi.StringOutput)
}

type GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfigPhoneConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput) ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutput() GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput) ToGetQuickConnectQuickConnectConfigPhoneConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetQuickConnectQuickConnectConfigPhoneConfig] {
	return pulumix.Output[[]GetQuickConnectQuickConnectConfigPhoneConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput) Index(i pulumi.IntInput) GetQuickConnectQuickConnectConfigPhoneConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuickConnectQuickConnectConfigPhoneConfig {
		return vs[0].([]GetQuickConnectQuickConnectConfigPhoneConfig)[vs[1].(int)]
	}).(GetQuickConnectQuickConnectConfigPhoneConfigOutput)
}

type GetQuickConnectQuickConnectConfigQueueConfig struct {
	// Identifier of the contact flow.
	ContactFlowId string `pulumi:"contactFlowId"`
	// Identifier for the queue.
	QueueId string `pulumi:"queueId"`
}

// GetQuickConnectQuickConnectConfigQueueConfigInput is an input type that accepts GetQuickConnectQuickConnectConfigQueueConfigArgs and GetQuickConnectQuickConnectConfigQueueConfigOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigQueueConfigInput` via:
//
//	GetQuickConnectQuickConnectConfigQueueConfigArgs{...}
type GetQuickConnectQuickConnectConfigQueueConfigInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigQueueConfigOutput() GetQuickConnectQuickConnectConfigQueueConfigOutput
	ToGetQuickConnectQuickConnectConfigQueueConfigOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigQueueConfigOutput
}

type GetQuickConnectQuickConnectConfigQueueConfigArgs struct {
	// Identifier of the contact flow.
	ContactFlowId pulumi.StringInput `pulumi:"contactFlowId"`
	// Identifier for the queue.
	QueueId pulumi.StringInput `pulumi:"queueId"`
}

func (GetQuickConnectQuickConnectConfigQueueConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigQueueConfigArgs) ToGetQuickConnectQuickConnectConfigQueueConfigOutput() GetQuickConnectQuickConnectConfigQueueConfigOutput {
	return i.ToGetQuickConnectQuickConnectConfigQueueConfigOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigQueueConfigArgs) ToGetQuickConnectQuickConnectConfigQueueConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigQueueConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigQueueConfigOutput)
}

func (i GetQuickConnectQuickConnectConfigQueueConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetQuickConnectQuickConnectConfigQueueConfig] {
	return pulumix.Output[GetQuickConnectQuickConnectConfigQueueConfig]{
		OutputState: i.ToGetQuickConnectQuickConnectConfigQueueConfigOutputWithContext(ctx).OutputState,
	}
}

// GetQuickConnectQuickConnectConfigQueueConfigArrayInput is an input type that accepts GetQuickConnectQuickConnectConfigQueueConfigArray and GetQuickConnectQuickConnectConfigQueueConfigArrayOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigQueueConfigArrayInput` via:
//
//	GetQuickConnectQuickConnectConfigQueueConfigArray{ GetQuickConnectQuickConnectConfigQueueConfigArgs{...} }
type GetQuickConnectQuickConnectConfigQueueConfigArrayInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutput() GetQuickConnectQuickConnectConfigQueueConfigArrayOutput
	ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigQueueConfigArrayOutput
}

type GetQuickConnectQuickConnectConfigQueueConfigArray []GetQuickConnectQuickConnectConfigQueueConfigInput

func (GetQuickConnectQuickConnectConfigQueueConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigQueueConfigArray) ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutput() GetQuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return i.ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigQueueConfigArray) ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigQueueConfigArrayOutput)
}

func (i GetQuickConnectQuickConnectConfigQueueConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetQuickConnectQuickConnectConfigQueueConfig] {
	return pulumix.Output[[]GetQuickConnectQuickConnectConfigQueueConfig]{
		OutputState: i.ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetQuickConnectQuickConnectConfigQueueConfigOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigQueueConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigQueueConfigOutput) ToGetQuickConnectQuickConnectConfigQueueConfigOutput() GetQuickConnectQuickConnectConfigQueueConfigOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigQueueConfigOutput) ToGetQuickConnectQuickConnectConfigQueueConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigQueueConfigOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigQueueConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetQuickConnectQuickConnectConfigQueueConfig] {
	return pulumix.Output[GetQuickConnectQuickConnectConfigQueueConfig]{
		OutputState: o.OutputState,
	}
}

// Identifier of the contact flow.
func (o GetQuickConnectQuickConnectConfigQueueConfigOutput) ContactFlowId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfigQueueConfig) string { return v.ContactFlowId }).(pulumi.StringOutput)
}

// Identifier for the queue.
func (o GetQuickConnectQuickConnectConfigQueueConfigOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfigQueueConfig) string { return v.QueueId }).(pulumi.StringOutput)
}

type GetQuickConnectQuickConnectConfigQueueConfigArrayOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigQueueConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfigQueueConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigQueueConfigArrayOutput) ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutput() GetQuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigQueueConfigArrayOutput) ToGetQuickConnectQuickConnectConfigQueueConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigQueueConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigQueueConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetQuickConnectQuickConnectConfigQueueConfig] {
	return pulumix.Output[[]GetQuickConnectQuickConnectConfigQueueConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetQuickConnectQuickConnectConfigQueueConfigArrayOutput) Index(i pulumi.IntInput) GetQuickConnectQuickConnectConfigQueueConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuickConnectQuickConnectConfigQueueConfig {
		return vs[0].([]GetQuickConnectQuickConnectConfigQueueConfig)[vs[1].(int)]
	}).(GetQuickConnectQuickConnectConfigQueueConfigOutput)
}

type GetQuickConnectQuickConnectConfigUserConfig struct {
	// Identifier of the contact flow.
	ContactFlowId string `pulumi:"contactFlowId"`
	// Identifier for the user.
	UserId string `pulumi:"userId"`
}

// GetQuickConnectQuickConnectConfigUserConfigInput is an input type that accepts GetQuickConnectQuickConnectConfigUserConfigArgs and GetQuickConnectQuickConnectConfigUserConfigOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigUserConfigInput` via:
//
//	GetQuickConnectQuickConnectConfigUserConfigArgs{...}
type GetQuickConnectQuickConnectConfigUserConfigInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigUserConfigOutput() GetQuickConnectQuickConnectConfigUserConfigOutput
	ToGetQuickConnectQuickConnectConfigUserConfigOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigUserConfigOutput
}

type GetQuickConnectQuickConnectConfigUserConfigArgs struct {
	// Identifier of the contact flow.
	ContactFlowId pulumi.StringInput `pulumi:"contactFlowId"`
	// Identifier for the user.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetQuickConnectQuickConnectConfigUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigUserConfigArgs) ToGetQuickConnectQuickConnectConfigUserConfigOutput() GetQuickConnectQuickConnectConfigUserConfigOutput {
	return i.ToGetQuickConnectQuickConnectConfigUserConfigOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigUserConfigArgs) ToGetQuickConnectQuickConnectConfigUserConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigUserConfigOutput)
}

func (i GetQuickConnectQuickConnectConfigUserConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetQuickConnectQuickConnectConfigUserConfig] {
	return pulumix.Output[GetQuickConnectQuickConnectConfigUserConfig]{
		OutputState: i.ToGetQuickConnectQuickConnectConfigUserConfigOutputWithContext(ctx).OutputState,
	}
}

// GetQuickConnectQuickConnectConfigUserConfigArrayInput is an input type that accepts GetQuickConnectQuickConnectConfigUserConfigArray and GetQuickConnectQuickConnectConfigUserConfigArrayOutput values.
// You can construct a concrete instance of `GetQuickConnectQuickConnectConfigUserConfigArrayInput` via:
//
//	GetQuickConnectQuickConnectConfigUserConfigArray{ GetQuickConnectQuickConnectConfigUserConfigArgs{...} }
type GetQuickConnectQuickConnectConfigUserConfigArrayInput interface {
	pulumi.Input

	ToGetQuickConnectQuickConnectConfigUserConfigArrayOutput() GetQuickConnectQuickConnectConfigUserConfigArrayOutput
	ToGetQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(context.Context) GetQuickConnectQuickConnectConfigUserConfigArrayOutput
}

type GetQuickConnectQuickConnectConfigUserConfigArray []GetQuickConnectQuickConnectConfigUserConfigInput

func (GetQuickConnectQuickConnectConfigUserConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (i GetQuickConnectQuickConnectConfigUserConfigArray) ToGetQuickConnectQuickConnectConfigUserConfigArrayOutput() GetQuickConnectQuickConnectConfigUserConfigArrayOutput {
	return i.ToGetQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(context.Background())
}

func (i GetQuickConnectQuickConnectConfigUserConfigArray) ToGetQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigUserConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuickConnectQuickConnectConfigUserConfigArrayOutput)
}

func (i GetQuickConnectQuickConnectConfigUserConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetQuickConnectQuickConnectConfigUserConfig] {
	return pulumix.Output[[]GetQuickConnectQuickConnectConfigUserConfig]{
		OutputState: i.ToGetQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetQuickConnectQuickConnectConfigUserConfigOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigUserConfigOutput) ToGetQuickConnectQuickConnectConfigUserConfigOutput() GetQuickConnectQuickConnectConfigUserConfigOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigUserConfigOutput) ToGetQuickConnectQuickConnectConfigUserConfigOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigUserConfigOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigUserConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetQuickConnectQuickConnectConfigUserConfig] {
	return pulumix.Output[GetQuickConnectQuickConnectConfigUserConfig]{
		OutputState: o.OutputState,
	}
}

// Identifier of the contact flow.
func (o GetQuickConnectQuickConnectConfigUserConfigOutput) ContactFlowId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfigUserConfig) string { return v.ContactFlowId }).(pulumi.StringOutput)
}

// Identifier for the user.
func (o GetQuickConnectQuickConnectConfigUserConfigOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuickConnectQuickConnectConfigUserConfig) string { return v.UserId }).(pulumi.StringOutput)
}

type GetQuickConnectQuickConnectConfigUserConfigArrayOutput struct{ *pulumi.OutputState }

func (GetQuickConnectQuickConnectConfigUserConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuickConnectQuickConnectConfigUserConfig)(nil)).Elem()
}

func (o GetQuickConnectQuickConnectConfigUserConfigArrayOutput) ToGetQuickConnectQuickConnectConfigUserConfigArrayOutput() GetQuickConnectQuickConnectConfigUserConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigUserConfigArrayOutput) ToGetQuickConnectQuickConnectConfigUserConfigArrayOutputWithContext(ctx context.Context) GetQuickConnectQuickConnectConfigUserConfigArrayOutput {
	return o
}

func (o GetQuickConnectQuickConnectConfigUserConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetQuickConnectQuickConnectConfigUserConfig] {
	return pulumix.Output[[]GetQuickConnectQuickConnectConfigUserConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetQuickConnectQuickConnectConfigUserConfigArrayOutput) Index(i pulumi.IntInput) GetQuickConnectQuickConnectConfigUserConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuickConnectQuickConnectConfigUserConfig {
		return vs[0].([]GetQuickConnectQuickConnectConfigUserConfig)[vs[1].(int)]
	}).(GetQuickConnectQuickConnectConfigUserConfigOutput)
}

type GetRoutingProfileMediaConcurrency struct {
	// Channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
	Channel string `pulumi:"channel"`
	// Number of contacts an agent can have on a channel simultaneously. Valid Range for `VOICE`: Minimum value of 1. Maximum value of 1. Valid Range for `CHAT`: Minimum value of 1. Maximum value of 10. Valid Range for `TASK`: Minimum value of 1. Maximum value of 10.
	Concurrency int `pulumi:"concurrency"`
}

// GetRoutingProfileMediaConcurrencyInput is an input type that accepts GetRoutingProfileMediaConcurrencyArgs and GetRoutingProfileMediaConcurrencyOutput values.
// You can construct a concrete instance of `GetRoutingProfileMediaConcurrencyInput` via:
//
//	GetRoutingProfileMediaConcurrencyArgs{...}
type GetRoutingProfileMediaConcurrencyInput interface {
	pulumi.Input

	ToGetRoutingProfileMediaConcurrencyOutput() GetRoutingProfileMediaConcurrencyOutput
	ToGetRoutingProfileMediaConcurrencyOutputWithContext(context.Context) GetRoutingProfileMediaConcurrencyOutput
}

type GetRoutingProfileMediaConcurrencyArgs struct {
	// Channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
	Channel pulumi.StringInput `pulumi:"channel"`
	// Number of contacts an agent can have on a channel simultaneously. Valid Range for `VOICE`: Minimum value of 1. Maximum value of 1. Valid Range for `CHAT`: Minimum value of 1. Maximum value of 10. Valid Range for `TASK`: Minimum value of 1. Maximum value of 10.
	Concurrency pulumi.IntInput `pulumi:"concurrency"`
}

func (GetRoutingProfileMediaConcurrencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutingProfileMediaConcurrency)(nil)).Elem()
}

func (i GetRoutingProfileMediaConcurrencyArgs) ToGetRoutingProfileMediaConcurrencyOutput() GetRoutingProfileMediaConcurrencyOutput {
	return i.ToGetRoutingProfileMediaConcurrencyOutputWithContext(context.Background())
}

func (i GetRoutingProfileMediaConcurrencyArgs) ToGetRoutingProfileMediaConcurrencyOutputWithContext(ctx context.Context) GetRoutingProfileMediaConcurrencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutingProfileMediaConcurrencyOutput)
}

func (i GetRoutingProfileMediaConcurrencyArgs) ToOutput(ctx context.Context) pulumix.Output[GetRoutingProfileMediaConcurrency] {
	return pulumix.Output[GetRoutingProfileMediaConcurrency]{
		OutputState: i.ToGetRoutingProfileMediaConcurrencyOutputWithContext(ctx).OutputState,
	}
}

// GetRoutingProfileMediaConcurrencyArrayInput is an input type that accepts GetRoutingProfileMediaConcurrencyArray and GetRoutingProfileMediaConcurrencyArrayOutput values.
// You can construct a concrete instance of `GetRoutingProfileMediaConcurrencyArrayInput` via:
//
//	GetRoutingProfileMediaConcurrencyArray{ GetRoutingProfileMediaConcurrencyArgs{...} }
type GetRoutingProfileMediaConcurrencyArrayInput interface {
	pulumi.Input

	ToGetRoutingProfileMediaConcurrencyArrayOutput() GetRoutingProfileMediaConcurrencyArrayOutput
	ToGetRoutingProfileMediaConcurrencyArrayOutputWithContext(context.Context) GetRoutingProfileMediaConcurrencyArrayOutput
}

type GetRoutingProfileMediaConcurrencyArray []GetRoutingProfileMediaConcurrencyInput

func (GetRoutingProfileMediaConcurrencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutingProfileMediaConcurrency)(nil)).Elem()
}

func (i GetRoutingProfileMediaConcurrencyArray) ToGetRoutingProfileMediaConcurrencyArrayOutput() GetRoutingProfileMediaConcurrencyArrayOutput {
	return i.ToGetRoutingProfileMediaConcurrencyArrayOutputWithContext(context.Background())
}

func (i GetRoutingProfileMediaConcurrencyArray) ToGetRoutingProfileMediaConcurrencyArrayOutputWithContext(ctx context.Context) GetRoutingProfileMediaConcurrencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutingProfileMediaConcurrencyArrayOutput)
}

func (i GetRoutingProfileMediaConcurrencyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetRoutingProfileMediaConcurrency] {
	return pulumix.Output[[]GetRoutingProfileMediaConcurrency]{
		OutputState: i.ToGetRoutingProfileMediaConcurrencyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetRoutingProfileMediaConcurrencyOutput struct{ *pulumi.OutputState }

func (GetRoutingProfileMediaConcurrencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutingProfileMediaConcurrency)(nil)).Elem()
}

func (o GetRoutingProfileMediaConcurrencyOutput) ToGetRoutingProfileMediaConcurrencyOutput() GetRoutingProfileMediaConcurrencyOutput {
	return o
}

func (o GetRoutingProfileMediaConcurrencyOutput) ToGetRoutingProfileMediaConcurrencyOutputWithContext(ctx context.Context) GetRoutingProfileMediaConcurrencyOutput {
	return o
}

func (o GetRoutingProfileMediaConcurrencyOutput) ToOutput(ctx context.Context) pulumix.Output[GetRoutingProfileMediaConcurrency] {
	return pulumix.Output[GetRoutingProfileMediaConcurrency]{
		OutputState: o.OutputState,
	}
}

// Channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
func (o GetRoutingProfileMediaConcurrencyOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutingProfileMediaConcurrency) string { return v.Channel }).(pulumi.StringOutput)
}

// Number of contacts an agent can have on a channel simultaneously. Valid Range for `VOICE`: Minimum value of 1. Maximum value of 1. Valid Range for `CHAT`: Minimum value of 1. Maximum value of 10. Valid Range for `TASK`: Minimum value of 1. Maximum value of 10.
func (o GetRoutingProfileMediaConcurrencyOutput) Concurrency() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutingProfileMediaConcurrency) int { return v.Concurrency }).(pulumi.IntOutput)
}

type GetRoutingProfileMediaConcurrencyArrayOutput struct{ *pulumi.OutputState }

func (GetRoutingProfileMediaConcurrencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutingProfileMediaConcurrency)(nil)).Elem()
}

func (o GetRoutingProfileMediaConcurrencyArrayOutput) ToGetRoutingProfileMediaConcurrencyArrayOutput() GetRoutingProfileMediaConcurrencyArrayOutput {
	return o
}

func (o GetRoutingProfileMediaConcurrencyArrayOutput) ToGetRoutingProfileMediaConcurrencyArrayOutputWithContext(ctx context.Context) GetRoutingProfileMediaConcurrencyArrayOutput {
	return o
}

func (o GetRoutingProfileMediaConcurrencyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetRoutingProfileMediaConcurrency] {
	return pulumix.Output[[]GetRoutingProfileMediaConcurrency]{
		OutputState: o.OutputState,
	}
}

func (o GetRoutingProfileMediaConcurrencyArrayOutput) Index(i pulumi.IntInput) GetRoutingProfileMediaConcurrencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoutingProfileMediaConcurrency {
		return vs[0].([]GetRoutingProfileMediaConcurrency)[vs[1].(int)]
	}).(GetRoutingProfileMediaConcurrencyOutput)
}

type GetRoutingProfileQueueConfig struct {
	// Channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
	Channel string `pulumi:"channel"`
	// Delay, in seconds, that a contact should be in the queue before they are routed to an available agent
	Delay int `pulumi:"delay"`
	// Order in which contacts are to be handled for the queue.
	Priority int `pulumi:"priority"`
	// ARN for the queue.
	QueueArn string `pulumi:"queueArn"`
	// Identifier for the queue.
	QueueId string `pulumi:"queueId"`
	// Name for the queue.
	QueueName string `pulumi:"queueName"`
}

// GetRoutingProfileQueueConfigInput is an input type that accepts GetRoutingProfileQueueConfigArgs and GetRoutingProfileQueueConfigOutput values.
// You can construct a concrete instance of `GetRoutingProfileQueueConfigInput` via:
//
//	GetRoutingProfileQueueConfigArgs{...}
type GetRoutingProfileQueueConfigInput interface {
	pulumi.Input

	ToGetRoutingProfileQueueConfigOutput() GetRoutingProfileQueueConfigOutput
	ToGetRoutingProfileQueueConfigOutputWithContext(context.Context) GetRoutingProfileQueueConfigOutput
}

type GetRoutingProfileQueueConfigArgs struct {
	// Channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
	Channel pulumi.StringInput `pulumi:"channel"`
	// Delay, in seconds, that a contact should be in the queue before they are routed to an available agent
	Delay pulumi.IntInput `pulumi:"delay"`
	// Order in which contacts are to be handled for the queue.
	Priority pulumi.IntInput `pulumi:"priority"`
	// ARN for the queue.
	QueueArn pulumi.StringInput `pulumi:"queueArn"`
	// Identifier for the queue.
	QueueId pulumi.StringInput `pulumi:"queueId"`
	// Name for the queue.
	QueueName pulumi.StringInput `pulumi:"queueName"`
}

func (GetRoutingProfileQueueConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutingProfileQueueConfig)(nil)).Elem()
}

func (i GetRoutingProfileQueueConfigArgs) ToGetRoutingProfileQueueConfigOutput() GetRoutingProfileQueueConfigOutput {
	return i.ToGetRoutingProfileQueueConfigOutputWithContext(context.Background())
}

func (i GetRoutingProfileQueueConfigArgs) ToGetRoutingProfileQueueConfigOutputWithContext(ctx context.Context) GetRoutingProfileQueueConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutingProfileQueueConfigOutput)
}

func (i GetRoutingProfileQueueConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetRoutingProfileQueueConfig] {
	return pulumix.Output[GetRoutingProfileQueueConfig]{
		OutputState: i.ToGetRoutingProfileQueueConfigOutputWithContext(ctx).OutputState,
	}
}

// GetRoutingProfileQueueConfigArrayInput is an input type that accepts GetRoutingProfileQueueConfigArray and GetRoutingProfileQueueConfigArrayOutput values.
// You can construct a concrete instance of `GetRoutingProfileQueueConfigArrayInput` via:
//
//	GetRoutingProfileQueueConfigArray{ GetRoutingProfileQueueConfigArgs{...} }
type GetRoutingProfileQueueConfigArrayInput interface {
	pulumi.Input

	ToGetRoutingProfileQueueConfigArrayOutput() GetRoutingProfileQueueConfigArrayOutput
	ToGetRoutingProfileQueueConfigArrayOutputWithContext(context.Context) GetRoutingProfileQueueConfigArrayOutput
}

type GetRoutingProfileQueueConfigArray []GetRoutingProfileQueueConfigInput

func (GetRoutingProfileQueueConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutingProfileQueueConfig)(nil)).Elem()
}

func (i GetRoutingProfileQueueConfigArray) ToGetRoutingProfileQueueConfigArrayOutput() GetRoutingProfileQueueConfigArrayOutput {
	return i.ToGetRoutingProfileQueueConfigArrayOutputWithContext(context.Background())
}

func (i GetRoutingProfileQueueConfigArray) ToGetRoutingProfileQueueConfigArrayOutputWithContext(ctx context.Context) GetRoutingProfileQueueConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutingProfileQueueConfigArrayOutput)
}

func (i GetRoutingProfileQueueConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetRoutingProfileQueueConfig] {
	return pulumix.Output[[]GetRoutingProfileQueueConfig]{
		OutputState: i.ToGetRoutingProfileQueueConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetRoutingProfileQueueConfigOutput struct{ *pulumi.OutputState }

func (GetRoutingProfileQueueConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutingProfileQueueConfig)(nil)).Elem()
}

func (o GetRoutingProfileQueueConfigOutput) ToGetRoutingProfileQueueConfigOutput() GetRoutingProfileQueueConfigOutput {
	return o
}

func (o GetRoutingProfileQueueConfigOutput) ToGetRoutingProfileQueueConfigOutputWithContext(ctx context.Context) GetRoutingProfileQueueConfigOutput {
	return o
}

func (o GetRoutingProfileQueueConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetRoutingProfileQueueConfig] {
	return pulumix.Output[GetRoutingProfileQueueConfig]{
		OutputState: o.OutputState,
	}
}

// Channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
func (o GetRoutingProfileQueueConfigOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutingProfileQueueConfig) string { return v.Channel }).(pulumi.StringOutput)
}

// Delay, in seconds, that a contact should be in the queue before they are routed to an available agent
func (o GetRoutingProfileQueueConfigOutput) Delay() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutingProfileQueueConfig) int { return v.Delay }).(pulumi.IntOutput)
}

// Order in which contacts are to be handled for the queue.
func (o GetRoutingProfileQueueConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRoutingProfileQueueConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// ARN for the queue.
func (o GetRoutingProfileQueueConfigOutput) QueueArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutingProfileQueueConfig) string { return v.QueueArn }).(pulumi.StringOutput)
}

// Identifier for the queue.
func (o GetRoutingProfileQueueConfigOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutingProfileQueueConfig) string { return v.QueueId }).(pulumi.StringOutput)
}

// Name for the queue.
func (o GetRoutingProfileQueueConfigOutput) QueueName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutingProfileQueueConfig) string { return v.QueueName }).(pulumi.StringOutput)
}

type GetRoutingProfileQueueConfigArrayOutput struct{ *pulumi.OutputState }

func (GetRoutingProfileQueueConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutingProfileQueueConfig)(nil)).Elem()
}

func (o GetRoutingProfileQueueConfigArrayOutput) ToGetRoutingProfileQueueConfigArrayOutput() GetRoutingProfileQueueConfigArrayOutput {
	return o
}

func (o GetRoutingProfileQueueConfigArrayOutput) ToGetRoutingProfileQueueConfigArrayOutputWithContext(ctx context.Context) GetRoutingProfileQueueConfigArrayOutput {
	return o
}

func (o GetRoutingProfileQueueConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetRoutingProfileQueueConfig] {
	return pulumix.Output[[]GetRoutingProfileQueueConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetRoutingProfileQueueConfigArrayOutput) Index(i pulumi.IntInput) GetRoutingProfileQueueConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoutingProfileQueueConfig {
		return vs[0].([]GetRoutingProfileQueueConfig)[vs[1].(int)]
	}).(GetRoutingProfileQueueConfigOutput)
}

type GetUserHierarchyGroupHierarchyPath struct {
	// Details of level five. See below.
	LevelFives []GetUserHierarchyGroupHierarchyPathLevelFife `pulumi:"levelFives"`
	// Details of level four. See below.
	LevelFours []GetUserHierarchyGroupHierarchyPathLevelFour `pulumi:"levelFours"`
	// Details of level one. See below.
	LevelOnes []GetUserHierarchyGroupHierarchyPathLevelOne `pulumi:"levelOnes"`
	// Details of level three. See below.
	LevelThrees []GetUserHierarchyGroupHierarchyPathLevelThree `pulumi:"levelThrees"`
	// Details of level two. See below.
	LevelTwos []GetUserHierarchyGroupHierarchyPathLevelTwo `pulumi:"levelTwos"`
}

// GetUserHierarchyGroupHierarchyPathInput is an input type that accepts GetUserHierarchyGroupHierarchyPathArgs and GetUserHierarchyGroupHierarchyPathOutput values.
// You can construct a concrete instance of `GetUserHierarchyGroupHierarchyPathInput` via:
//
//	GetUserHierarchyGroupHierarchyPathArgs{...}
type GetUserHierarchyGroupHierarchyPathInput interface {
	pulumi.Input

	ToGetUserHierarchyGroupHierarchyPathOutput() GetUserHierarchyGroupHierarchyPathOutput
	ToGetUserHierarchyGroupHierarchyPathOutputWithContext(context.Context) GetUserHierarchyGroupHierarchyPathOutput
}

type GetUserHierarchyGroupHierarchyPathArgs struct {
	// Details of level five. See below.
	LevelFives GetUserHierarchyGroupHierarchyPathLevelFifeArrayInput `pulumi:"levelFives"`
	// Details of level four. See below.
	LevelFours GetUserHierarchyGroupHierarchyPathLevelFourArrayInput `pulumi:"levelFours"`
	// Details of level one. See below.
	LevelOnes GetUserHierarchyGroupHierarchyPathLevelOneArrayInput `pulumi:"levelOnes"`
	// Details of level three. See below.
	LevelThrees GetUserHierarchyGroupHierarchyPathLevelThreeArrayInput `pulumi:"levelThrees"`
	// Details of level two. See below.
	LevelTwos GetUserHierarchyGroupHierarchyPathLevelTwoArrayInput `pulumi:"levelTwos"`
}

func (GetUserHierarchyGroupHierarchyPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyGroupHierarchyPath)(nil)).Elem()
}

func (i GetUserHierarchyGroupHierarchyPathArgs) ToGetUserHierarchyGroupHierarchyPathOutput() GetUserHierarchyGroupHierarchyPathOutput {
	return i.ToGetUserHierarchyGroupHierarchyPathOutputWithContext(context.Background())
}

func (i GetUserHierarchyGroupHierarchyPathArgs) ToGetUserHierarchyGroupHierarchyPathOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyGroupHierarchyPathOutput)
}

func (i GetUserHierarchyGroupHierarchyPathArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyGroupHierarchyPath] {
	return pulumix.Output[GetUserHierarchyGroupHierarchyPath]{
		OutputState: i.ToGetUserHierarchyGroupHierarchyPathOutputWithContext(ctx).OutputState,
	}
}

// GetUserHierarchyGroupHierarchyPathArrayInput is an input type that accepts GetUserHierarchyGroupHierarchyPathArray and GetUserHierarchyGroupHierarchyPathArrayOutput values.
// You can construct a concrete instance of `GetUserHierarchyGroupHierarchyPathArrayInput` via:
//
//	GetUserHierarchyGroupHierarchyPathArray{ GetUserHierarchyGroupHierarchyPathArgs{...} }
type GetUserHierarchyGroupHierarchyPathArrayInput interface {
	pulumi.Input

	ToGetUserHierarchyGroupHierarchyPathArrayOutput() GetUserHierarchyGroupHierarchyPathArrayOutput
	ToGetUserHierarchyGroupHierarchyPathArrayOutputWithContext(context.Context) GetUserHierarchyGroupHierarchyPathArrayOutput
}

type GetUserHierarchyGroupHierarchyPathArray []GetUserHierarchyGroupHierarchyPathInput

func (GetUserHierarchyGroupHierarchyPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyGroupHierarchyPath)(nil)).Elem()
}

func (i GetUserHierarchyGroupHierarchyPathArray) ToGetUserHierarchyGroupHierarchyPathArrayOutput() GetUserHierarchyGroupHierarchyPathArrayOutput {
	return i.ToGetUserHierarchyGroupHierarchyPathArrayOutputWithContext(context.Background())
}

func (i GetUserHierarchyGroupHierarchyPathArray) ToGetUserHierarchyGroupHierarchyPathArrayOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyGroupHierarchyPathArrayOutput)
}

func (i GetUserHierarchyGroupHierarchyPathArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyGroupHierarchyPath] {
	return pulumix.Output[[]GetUserHierarchyGroupHierarchyPath]{
		OutputState: i.ToGetUserHierarchyGroupHierarchyPathArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserHierarchyGroupHierarchyPathOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyGroupHierarchyPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyGroupHierarchyPath)(nil)).Elem()
}

func (o GetUserHierarchyGroupHierarchyPathOutput) ToGetUserHierarchyGroupHierarchyPathOutput() GetUserHierarchyGroupHierarchyPathOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathOutput) ToGetUserHierarchyGroupHierarchyPathOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyGroupHierarchyPath] {
	return pulumix.Output[GetUserHierarchyGroupHierarchyPath]{
		OutputState: o.OutputState,
	}
}

// Details of level five. See below.
func (o GetUserHierarchyGroupHierarchyPathOutput) LevelFives() GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPath) []GetUserHierarchyGroupHierarchyPathLevelFife {
		return v.LevelFives
	}).(GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput)
}

// Details of level four. See below.
func (o GetUserHierarchyGroupHierarchyPathOutput) LevelFours() GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPath) []GetUserHierarchyGroupHierarchyPathLevelFour {
		return v.LevelFours
	}).(GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput)
}

// Details of level one. See below.
func (o GetUserHierarchyGroupHierarchyPathOutput) LevelOnes() GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPath) []GetUserHierarchyGroupHierarchyPathLevelOne {
		return v.LevelOnes
	}).(GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput)
}

// Details of level three. See below.
func (o GetUserHierarchyGroupHierarchyPathOutput) LevelThrees() GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPath) []GetUserHierarchyGroupHierarchyPathLevelThree {
		return v.LevelThrees
	}).(GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput)
}

// Details of level two. See below.
func (o GetUserHierarchyGroupHierarchyPathOutput) LevelTwos() GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPath) []GetUserHierarchyGroupHierarchyPathLevelTwo {
		return v.LevelTwos
	}).(GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput)
}

type GetUserHierarchyGroupHierarchyPathArrayOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyGroupHierarchyPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyGroupHierarchyPath)(nil)).Elem()
}

func (o GetUserHierarchyGroupHierarchyPathArrayOutput) ToGetUserHierarchyGroupHierarchyPathArrayOutput() GetUserHierarchyGroupHierarchyPathArrayOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathArrayOutput) ToGetUserHierarchyGroupHierarchyPathArrayOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathArrayOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyGroupHierarchyPath] {
	return pulumix.Output[[]GetUserHierarchyGroupHierarchyPath]{
		OutputState: o.OutputState,
	}
}

func (o GetUserHierarchyGroupHierarchyPathArrayOutput) Index(i pulumi.IntInput) GetUserHierarchyGroupHierarchyPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserHierarchyGroupHierarchyPath {
		return vs[0].([]GetUserHierarchyGroupHierarchyPath)[vs[1].(int)]
	}).(GetUserHierarchyGroupHierarchyPathOutput)
}

type GetUserHierarchyGroupHierarchyPathLevelFife struct {
	// ARN of the hierarchy group.
	Arn string `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id string `pulumi:"id"`
	// Returns information on a specific hierarchy group by name
	Name string `pulumi:"name"`
}

// GetUserHierarchyGroupHierarchyPathLevelFifeInput is an input type that accepts GetUserHierarchyGroupHierarchyPathLevelFifeArgs and GetUserHierarchyGroupHierarchyPathLevelFifeOutput values.
// You can construct a concrete instance of `GetUserHierarchyGroupHierarchyPathLevelFifeInput` via:
//
//	GetUserHierarchyGroupHierarchyPathLevelFifeArgs{...}
type GetUserHierarchyGroupHierarchyPathLevelFifeInput interface {
	pulumi.Input

	ToGetUserHierarchyGroupHierarchyPathLevelFifeOutput() GetUserHierarchyGroupHierarchyPathLevelFifeOutput
	ToGetUserHierarchyGroupHierarchyPathLevelFifeOutputWithContext(context.Context) GetUserHierarchyGroupHierarchyPathLevelFifeOutput
}

type GetUserHierarchyGroupHierarchyPathLevelFifeArgs struct {
	// ARN of the hierarchy group.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id pulumi.StringInput `pulumi:"id"`
	// Returns information on a specific hierarchy group by name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetUserHierarchyGroupHierarchyPathLevelFifeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelFife)(nil)).Elem()
}

func (i GetUserHierarchyGroupHierarchyPathLevelFifeArgs) ToGetUserHierarchyGroupHierarchyPathLevelFifeOutput() GetUserHierarchyGroupHierarchyPathLevelFifeOutput {
	return i.ToGetUserHierarchyGroupHierarchyPathLevelFifeOutputWithContext(context.Background())
}

func (i GetUserHierarchyGroupHierarchyPathLevelFifeArgs) ToGetUserHierarchyGroupHierarchyPathLevelFifeOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelFifeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyGroupHierarchyPathLevelFifeOutput)
}

func (i GetUserHierarchyGroupHierarchyPathLevelFifeArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelFife] {
	return pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelFife]{
		OutputState: i.ToGetUserHierarchyGroupHierarchyPathLevelFifeOutputWithContext(ctx).OutputState,
	}
}

// GetUserHierarchyGroupHierarchyPathLevelFifeArrayInput is an input type that accepts GetUserHierarchyGroupHierarchyPathLevelFifeArray and GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput values.
// You can construct a concrete instance of `GetUserHierarchyGroupHierarchyPathLevelFifeArrayInput` via:
//
//	GetUserHierarchyGroupHierarchyPathLevelFifeArray{ GetUserHierarchyGroupHierarchyPathLevelFifeArgs{...} }
type GetUserHierarchyGroupHierarchyPathLevelFifeArrayInput interface {
	pulumi.Input

	ToGetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput() GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput
	ToGetUserHierarchyGroupHierarchyPathLevelFifeArrayOutputWithContext(context.Context) GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput
}

type GetUserHierarchyGroupHierarchyPathLevelFifeArray []GetUserHierarchyGroupHierarchyPathLevelFifeInput

func (GetUserHierarchyGroupHierarchyPathLevelFifeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyGroupHierarchyPathLevelFife)(nil)).Elem()
}

func (i GetUserHierarchyGroupHierarchyPathLevelFifeArray) ToGetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput() GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput {
	return i.ToGetUserHierarchyGroupHierarchyPathLevelFifeArrayOutputWithContext(context.Background())
}

func (i GetUserHierarchyGroupHierarchyPathLevelFifeArray) ToGetUserHierarchyGroupHierarchyPathLevelFifeArrayOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput)
}

func (i GetUserHierarchyGroupHierarchyPathLevelFifeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelFife] {
	return pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelFife]{
		OutputState: i.ToGetUserHierarchyGroupHierarchyPathLevelFifeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserHierarchyGroupHierarchyPathLevelFifeOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyGroupHierarchyPathLevelFifeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelFife)(nil)).Elem()
}

func (o GetUserHierarchyGroupHierarchyPathLevelFifeOutput) ToGetUserHierarchyGroupHierarchyPathLevelFifeOutput() GetUserHierarchyGroupHierarchyPathLevelFifeOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelFifeOutput) ToGetUserHierarchyGroupHierarchyPathLevelFifeOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelFifeOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelFifeOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelFife] {
	return pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelFife]{
		OutputState: o.OutputState,
	}
}

// ARN of the hierarchy group.
func (o GetUserHierarchyGroupHierarchyPathLevelFifeOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelFife) string { return v.Arn }).(pulumi.StringOutput)
}

// The identifier of the hierarchy group.
func (o GetUserHierarchyGroupHierarchyPathLevelFifeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelFife) string { return v.Id }).(pulumi.StringOutput)
}

// Returns information on a specific hierarchy group by name
func (o GetUserHierarchyGroupHierarchyPathLevelFifeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelFife) string { return v.Name }).(pulumi.StringOutput)
}

type GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyGroupHierarchyPathLevelFife)(nil)).Elem()
}

func (o GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput) ToGetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput() GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput) ToGetUserHierarchyGroupHierarchyPathLevelFifeArrayOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelFife] {
	return pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelFife]{
		OutputState: o.OutputState,
	}
}

func (o GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput) Index(i pulumi.IntInput) GetUserHierarchyGroupHierarchyPathLevelFifeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserHierarchyGroupHierarchyPathLevelFife {
		return vs[0].([]GetUserHierarchyGroupHierarchyPathLevelFife)[vs[1].(int)]
	}).(GetUserHierarchyGroupHierarchyPathLevelFifeOutput)
}

type GetUserHierarchyGroupHierarchyPathLevelFour struct {
	// ARN of the hierarchy group.
	Arn string `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id string `pulumi:"id"`
	// Returns information on a specific hierarchy group by name
	Name string `pulumi:"name"`
}

// GetUserHierarchyGroupHierarchyPathLevelFourInput is an input type that accepts GetUserHierarchyGroupHierarchyPathLevelFourArgs and GetUserHierarchyGroupHierarchyPathLevelFourOutput values.
// You can construct a concrete instance of `GetUserHierarchyGroupHierarchyPathLevelFourInput` via:
//
//	GetUserHierarchyGroupHierarchyPathLevelFourArgs{...}
type GetUserHierarchyGroupHierarchyPathLevelFourInput interface {
	pulumi.Input

	ToGetUserHierarchyGroupHierarchyPathLevelFourOutput() GetUserHierarchyGroupHierarchyPathLevelFourOutput
	ToGetUserHierarchyGroupHierarchyPathLevelFourOutputWithContext(context.Context) GetUserHierarchyGroupHierarchyPathLevelFourOutput
}

type GetUserHierarchyGroupHierarchyPathLevelFourArgs struct {
	// ARN of the hierarchy group.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id pulumi.StringInput `pulumi:"id"`
	// Returns information on a specific hierarchy group by name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetUserHierarchyGroupHierarchyPathLevelFourArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelFour)(nil)).Elem()
}

func (i GetUserHierarchyGroupHierarchyPathLevelFourArgs) ToGetUserHierarchyGroupHierarchyPathLevelFourOutput() GetUserHierarchyGroupHierarchyPathLevelFourOutput {
	return i.ToGetUserHierarchyGroupHierarchyPathLevelFourOutputWithContext(context.Background())
}

func (i GetUserHierarchyGroupHierarchyPathLevelFourArgs) ToGetUserHierarchyGroupHierarchyPathLevelFourOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelFourOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyGroupHierarchyPathLevelFourOutput)
}

func (i GetUserHierarchyGroupHierarchyPathLevelFourArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelFour] {
	return pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelFour]{
		OutputState: i.ToGetUserHierarchyGroupHierarchyPathLevelFourOutputWithContext(ctx).OutputState,
	}
}

// GetUserHierarchyGroupHierarchyPathLevelFourArrayInput is an input type that accepts GetUserHierarchyGroupHierarchyPathLevelFourArray and GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput values.
// You can construct a concrete instance of `GetUserHierarchyGroupHierarchyPathLevelFourArrayInput` via:
//
//	GetUserHierarchyGroupHierarchyPathLevelFourArray{ GetUserHierarchyGroupHierarchyPathLevelFourArgs{...} }
type GetUserHierarchyGroupHierarchyPathLevelFourArrayInput interface {
	pulumi.Input

	ToGetUserHierarchyGroupHierarchyPathLevelFourArrayOutput() GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput
	ToGetUserHierarchyGroupHierarchyPathLevelFourArrayOutputWithContext(context.Context) GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput
}

type GetUserHierarchyGroupHierarchyPathLevelFourArray []GetUserHierarchyGroupHierarchyPathLevelFourInput

func (GetUserHierarchyGroupHierarchyPathLevelFourArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyGroupHierarchyPathLevelFour)(nil)).Elem()
}

func (i GetUserHierarchyGroupHierarchyPathLevelFourArray) ToGetUserHierarchyGroupHierarchyPathLevelFourArrayOutput() GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput {
	return i.ToGetUserHierarchyGroupHierarchyPathLevelFourArrayOutputWithContext(context.Background())
}

func (i GetUserHierarchyGroupHierarchyPathLevelFourArray) ToGetUserHierarchyGroupHierarchyPathLevelFourArrayOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput)
}

func (i GetUserHierarchyGroupHierarchyPathLevelFourArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelFour] {
	return pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelFour]{
		OutputState: i.ToGetUserHierarchyGroupHierarchyPathLevelFourArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserHierarchyGroupHierarchyPathLevelFourOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyGroupHierarchyPathLevelFourOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelFour)(nil)).Elem()
}

func (o GetUserHierarchyGroupHierarchyPathLevelFourOutput) ToGetUserHierarchyGroupHierarchyPathLevelFourOutput() GetUserHierarchyGroupHierarchyPathLevelFourOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelFourOutput) ToGetUserHierarchyGroupHierarchyPathLevelFourOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelFourOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelFourOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelFour] {
	return pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelFour]{
		OutputState: o.OutputState,
	}
}

// ARN of the hierarchy group.
func (o GetUserHierarchyGroupHierarchyPathLevelFourOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelFour) string { return v.Arn }).(pulumi.StringOutput)
}

// The identifier of the hierarchy group.
func (o GetUserHierarchyGroupHierarchyPathLevelFourOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelFour) string { return v.Id }).(pulumi.StringOutput)
}

// Returns information on a specific hierarchy group by name
func (o GetUserHierarchyGroupHierarchyPathLevelFourOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelFour) string { return v.Name }).(pulumi.StringOutput)
}

type GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyGroupHierarchyPathLevelFour)(nil)).Elem()
}

func (o GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput) ToGetUserHierarchyGroupHierarchyPathLevelFourArrayOutput() GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput) ToGetUserHierarchyGroupHierarchyPathLevelFourArrayOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelFour] {
	return pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelFour]{
		OutputState: o.OutputState,
	}
}

func (o GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput) Index(i pulumi.IntInput) GetUserHierarchyGroupHierarchyPathLevelFourOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserHierarchyGroupHierarchyPathLevelFour {
		return vs[0].([]GetUserHierarchyGroupHierarchyPathLevelFour)[vs[1].(int)]
	}).(GetUserHierarchyGroupHierarchyPathLevelFourOutput)
}

type GetUserHierarchyGroupHierarchyPathLevelOne struct {
	// ARN of the hierarchy group.
	Arn string `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id string `pulumi:"id"`
	// Returns information on a specific hierarchy group by name
	Name string `pulumi:"name"`
}

// GetUserHierarchyGroupHierarchyPathLevelOneInput is an input type that accepts GetUserHierarchyGroupHierarchyPathLevelOneArgs and GetUserHierarchyGroupHierarchyPathLevelOneOutput values.
// You can construct a concrete instance of `GetUserHierarchyGroupHierarchyPathLevelOneInput` via:
//
//	GetUserHierarchyGroupHierarchyPathLevelOneArgs{...}
type GetUserHierarchyGroupHierarchyPathLevelOneInput interface {
	pulumi.Input

	ToGetUserHierarchyGroupHierarchyPathLevelOneOutput() GetUserHierarchyGroupHierarchyPathLevelOneOutput
	ToGetUserHierarchyGroupHierarchyPathLevelOneOutputWithContext(context.Context) GetUserHierarchyGroupHierarchyPathLevelOneOutput
}

type GetUserHierarchyGroupHierarchyPathLevelOneArgs struct {
	// ARN of the hierarchy group.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id pulumi.StringInput `pulumi:"id"`
	// Returns information on a specific hierarchy group by name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetUserHierarchyGroupHierarchyPathLevelOneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelOne)(nil)).Elem()
}

func (i GetUserHierarchyGroupHierarchyPathLevelOneArgs) ToGetUserHierarchyGroupHierarchyPathLevelOneOutput() GetUserHierarchyGroupHierarchyPathLevelOneOutput {
	return i.ToGetUserHierarchyGroupHierarchyPathLevelOneOutputWithContext(context.Background())
}

func (i GetUserHierarchyGroupHierarchyPathLevelOneArgs) ToGetUserHierarchyGroupHierarchyPathLevelOneOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelOneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyGroupHierarchyPathLevelOneOutput)
}

func (i GetUserHierarchyGroupHierarchyPathLevelOneArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelOne] {
	return pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelOne]{
		OutputState: i.ToGetUserHierarchyGroupHierarchyPathLevelOneOutputWithContext(ctx).OutputState,
	}
}

// GetUserHierarchyGroupHierarchyPathLevelOneArrayInput is an input type that accepts GetUserHierarchyGroupHierarchyPathLevelOneArray and GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput values.
// You can construct a concrete instance of `GetUserHierarchyGroupHierarchyPathLevelOneArrayInput` via:
//
//	GetUserHierarchyGroupHierarchyPathLevelOneArray{ GetUserHierarchyGroupHierarchyPathLevelOneArgs{...} }
type GetUserHierarchyGroupHierarchyPathLevelOneArrayInput interface {
	pulumi.Input

	ToGetUserHierarchyGroupHierarchyPathLevelOneArrayOutput() GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput
	ToGetUserHierarchyGroupHierarchyPathLevelOneArrayOutputWithContext(context.Context) GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput
}

type GetUserHierarchyGroupHierarchyPathLevelOneArray []GetUserHierarchyGroupHierarchyPathLevelOneInput

func (GetUserHierarchyGroupHierarchyPathLevelOneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyGroupHierarchyPathLevelOne)(nil)).Elem()
}

func (i GetUserHierarchyGroupHierarchyPathLevelOneArray) ToGetUserHierarchyGroupHierarchyPathLevelOneArrayOutput() GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput {
	return i.ToGetUserHierarchyGroupHierarchyPathLevelOneArrayOutputWithContext(context.Background())
}

func (i GetUserHierarchyGroupHierarchyPathLevelOneArray) ToGetUserHierarchyGroupHierarchyPathLevelOneArrayOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput)
}

func (i GetUserHierarchyGroupHierarchyPathLevelOneArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelOne] {
	return pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelOne]{
		OutputState: i.ToGetUserHierarchyGroupHierarchyPathLevelOneArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserHierarchyGroupHierarchyPathLevelOneOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyGroupHierarchyPathLevelOneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelOne)(nil)).Elem()
}

func (o GetUserHierarchyGroupHierarchyPathLevelOneOutput) ToGetUserHierarchyGroupHierarchyPathLevelOneOutput() GetUserHierarchyGroupHierarchyPathLevelOneOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelOneOutput) ToGetUserHierarchyGroupHierarchyPathLevelOneOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelOneOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelOneOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelOne] {
	return pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelOne]{
		OutputState: o.OutputState,
	}
}

// ARN of the hierarchy group.
func (o GetUserHierarchyGroupHierarchyPathLevelOneOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelOne) string { return v.Arn }).(pulumi.StringOutput)
}

// The identifier of the hierarchy group.
func (o GetUserHierarchyGroupHierarchyPathLevelOneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelOne) string { return v.Id }).(pulumi.StringOutput)
}

// Returns information on a specific hierarchy group by name
func (o GetUserHierarchyGroupHierarchyPathLevelOneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelOne) string { return v.Name }).(pulumi.StringOutput)
}

type GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyGroupHierarchyPathLevelOne)(nil)).Elem()
}

func (o GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput) ToGetUserHierarchyGroupHierarchyPathLevelOneArrayOutput() GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput) ToGetUserHierarchyGroupHierarchyPathLevelOneArrayOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelOne] {
	return pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelOne]{
		OutputState: o.OutputState,
	}
}

func (o GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput) Index(i pulumi.IntInput) GetUserHierarchyGroupHierarchyPathLevelOneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserHierarchyGroupHierarchyPathLevelOne {
		return vs[0].([]GetUserHierarchyGroupHierarchyPathLevelOne)[vs[1].(int)]
	}).(GetUserHierarchyGroupHierarchyPathLevelOneOutput)
}

type GetUserHierarchyGroupHierarchyPathLevelThree struct {
	// ARN of the hierarchy group.
	Arn string `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id string `pulumi:"id"`
	// Returns information on a specific hierarchy group by name
	Name string `pulumi:"name"`
}

// GetUserHierarchyGroupHierarchyPathLevelThreeInput is an input type that accepts GetUserHierarchyGroupHierarchyPathLevelThreeArgs and GetUserHierarchyGroupHierarchyPathLevelThreeOutput values.
// You can construct a concrete instance of `GetUserHierarchyGroupHierarchyPathLevelThreeInput` via:
//
//	GetUserHierarchyGroupHierarchyPathLevelThreeArgs{...}
type GetUserHierarchyGroupHierarchyPathLevelThreeInput interface {
	pulumi.Input

	ToGetUserHierarchyGroupHierarchyPathLevelThreeOutput() GetUserHierarchyGroupHierarchyPathLevelThreeOutput
	ToGetUserHierarchyGroupHierarchyPathLevelThreeOutputWithContext(context.Context) GetUserHierarchyGroupHierarchyPathLevelThreeOutput
}

type GetUserHierarchyGroupHierarchyPathLevelThreeArgs struct {
	// ARN of the hierarchy group.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id pulumi.StringInput `pulumi:"id"`
	// Returns information on a specific hierarchy group by name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetUserHierarchyGroupHierarchyPathLevelThreeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelThree)(nil)).Elem()
}

func (i GetUserHierarchyGroupHierarchyPathLevelThreeArgs) ToGetUserHierarchyGroupHierarchyPathLevelThreeOutput() GetUserHierarchyGroupHierarchyPathLevelThreeOutput {
	return i.ToGetUserHierarchyGroupHierarchyPathLevelThreeOutputWithContext(context.Background())
}

func (i GetUserHierarchyGroupHierarchyPathLevelThreeArgs) ToGetUserHierarchyGroupHierarchyPathLevelThreeOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelThreeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyGroupHierarchyPathLevelThreeOutput)
}

func (i GetUserHierarchyGroupHierarchyPathLevelThreeArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelThree] {
	return pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelThree]{
		OutputState: i.ToGetUserHierarchyGroupHierarchyPathLevelThreeOutputWithContext(ctx).OutputState,
	}
}

// GetUserHierarchyGroupHierarchyPathLevelThreeArrayInput is an input type that accepts GetUserHierarchyGroupHierarchyPathLevelThreeArray and GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput values.
// You can construct a concrete instance of `GetUserHierarchyGroupHierarchyPathLevelThreeArrayInput` via:
//
//	GetUserHierarchyGroupHierarchyPathLevelThreeArray{ GetUserHierarchyGroupHierarchyPathLevelThreeArgs{...} }
type GetUserHierarchyGroupHierarchyPathLevelThreeArrayInput interface {
	pulumi.Input

	ToGetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput() GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput
	ToGetUserHierarchyGroupHierarchyPathLevelThreeArrayOutputWithContext(context.Context) GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput
}

type GetUserHierarchyGroupHierarchyPathLevelThreeArray []GetUserHierarchyGroupHierarchyPathLevelThreeInput

func (GetUserHierarchyGroupHierarchyPathLevelThreeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyGroupHierarchyPathLevelThree)(nil)).Elem()
}

func (i GetUserHierarchyGroupHierarchyPathLevelThreeArray) ToGetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput() GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput {
	return i.ToGetUserHierarchyGroupHierarchyPathLevelThreeArrayOutputWithContext(context.Background())
}

func (i GetUserHierarchyGroupHierarchyPathLevelThreeArray) ToGetUserHierarchyGroupHierarchyPathLevelThreeArrayOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput)
}

func (i GetUserHierarchyGroupHierarchyPathLevelThreeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelThree] {
	return pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelThree]{
		OutputState: i.ToGetUserHierarchyGroupHierarchyPathLevelThreeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserHierarchyGroupHierarchyPathLevelThreeOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyGroupHierarchyPathLevelThreeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelThree)(nil)).Elem()
}

func (o GetUserHierarchyGroupHierarchyPathLevelThreeOutput) ToGetUserHierarchyGroupHierarchyPathLevelThreeOutput() GetUserHierarchyGroupHierarchyPathLevelThreeOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelThreeOutput) ToGetUserHierarchyGroupHierarchyPathLevelThreeOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelThreeOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelThreeOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelThree] {
	return pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelThree]{
		OutputState: o.OutputState,
	}
}

// ARN of the hierarchy group.
func (o GetUserHierarchyGroupHierarchyPathLevelThreeOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelThree) string { return v.Arn }).(pulumi.StringOutput)
}

// The identifier of the hierarchy group.
func (o GetUserHierarchyGroupHierarchyPathLevelThreeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelThree) string { return v.Id }).(pulumi.StringOutput)
}

// Returns information on a specific hierarchy group by name
func (o GetUserHierarchyGroupHierarchyPathLevelThreeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelThree) string { return v.Name }).(pulumi.StringOutput)
}

type GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyGroupHierarchyPathLevelThree)(nil)).Elem()
}

func (o GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput) ToGetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput() GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput) ToGetUserHierarchyGroupHierarchyPathLevelThreeArrayOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelThree] {
	return pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelThree]{
		OutputState: o.OutputState,
	}
}

func (o GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput) Index(i pulumi.IntInput) GetUserHierarchyGroupHierarchyPathLevelThreeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserHierarchyGroupHierarchyPathLevelThree {
		return vs[0].([]GetUserHierarchyGroupHierarchyPathLevelThree)[vs[1].(int)]
	}).(GetUserHierarchyGroupHierarchyPathLevelThreeOutput)
}

type GetUserHierarchyGroupHierarchyPathLevelTwo struct {
	// ARN of the hierarchy group.
	Arn string `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id string `pulumi:"id"`
	// Returns information on a specific hierarchy group by name
	Name string `pulumi:"name"`
}

// GetUserHierarchyGroupHierarchyPathLevelTwoInput is an input type that accepts GetUserHierarchyGroupHierarchyPathLevelTwoArgs and GetUserHierarchyGroupHierarchyPathLevelTwoOutput values.
// You can construct a concrete instance of `GetUserHierarchyGroupHierarchyPathLevelTwoInput` via:
//
//	GetUserHierarchyGroupHierarchyPathLevelTwoArgs{...}
type GetUserHierarchyGroupHierarchyPathLevelTwoInput interface {
	pulumi.Input

	ToGetUserHierarchyGroupHierarchyPathLevelTwoOutput() GetUserHierarchyGroupHierarchyPathLevelTwoOutput
	ToGetUserHierarchyGroupHierarchyPathLevelTwoOutputWithContext(context.Context) GetUserHierarchyGroupHierarchyPathLevelTwoOutput
}

type GetUserHierarchyGroupHierarchyPathLevelTwoArgs struct {
	// ARN of the hierarchy group.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The identifier of the hierarchy group.
	Id pulumi.StringInput `pulumi:"id"`
	// Returns information on a specific hierarchy group by name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetUserHierarchyGroupHierarchyPathLevelTwoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelTwo)(nil)).Elem()
}

func (i GetUserHierarchyGroupHierarchyPathLevelTwoArgs) ToGetUserHierarchyGroupHierarchyPathLevelTwoOutput() GetUserHierarchyGroupHierarchyPathLevelTwoOutput {
	return i.ToGetUserHierarchyGroupHierarchyPathLevelTwoOutputWithContext(context.Background())
}

func (i GetUserHierarchyGroupHierarchyPathLevelTwoArgs) ToGetUserHierarchyGroupHierarchyPathLevelTwoOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelTwoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyGroupHierarchyPathLevelTwoOutput)
}

func (i GetUserHierarchyGroupHierarchyPathLevelTwoArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelTwo] {
	return pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelTwo]{
		OutputState: i.ToGetUserHierarchyGroupHierarchyPathLevelTwoOutputWithContext(ctx).OutputState,
	}
}

// GetUserHierarchyGroupHierarchyPathLevelTwoArrayInput is an input type that accepts GetUserHierarchyGroupHierarchyPathLevelTwoArray and GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput values.
// You can construct a concrete instance of `GetUserHierarchyGroupHierarchyPathLevelTwoArrayInput` via:
//
//	GetUserHierarchyGroupHierarchyPathLevelTwoArray{ GetUserHierarchyGroupHierarchyPathLevelTwoArgs{...} }
type GetUserHierarchyGroupHierarchyPathLevelTwoArrayInput interface {
	pulumi.Input

	ToGetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput() GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput
	ToGetUserHierarchyGroupHierarchyPathLevelTwoArrayOutputWithContext(context.Context) GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput
}

type GetUserHierarchyGroupHierarchyPathLevelTwoArray []GetUserHierarchyGroupHierarchyPathLevelTwoInput

func (GetUserHierarchyGroupHierarchyPathLevelTwoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyGroupHierarchyPathLevelTwo)(nil)).Elem()
}

func (i GetUserHierarchyGroupHierarchyPathLevelTwoArray) ToGetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput() GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput {
	return i.ToGetUserHierarchyGroupHierarchyPathLevelTwoArrayOutputWithContext(context.Background())
}

func (i GetUserHierarchyGroupHierarchyPathLevelTwoArray) ToGetUserHierarchyGroupHierarchyPathLevelTwoArrayOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput)
}

func (i GetUserHierarchyGroupHierarchyPathLevelTwoArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelTwo] {
	return pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelTwo]{
		OutputState: i.ToGetUserHierarchyGroupHierarchyPathLevelTwoArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserHierarchyGroupHierarchyPathLevelTwoOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyGroupHierarchyPathLevelTwoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelTwo)(nil)).Elem()
}

func (o GetUserHierarchyGroupHierarchyPathLevelTwoOutput) ToGetUserHierarchyGroupHierarchyPathLevelTwoOutput() GetUserHierarchyGroupHierarchyPathLevelTwoOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelTwoOutput) ToGetUserHierarchyGroupHierarchyPathLevelTwoOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelTwoOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelTwoOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelTwo] {
	return pulumix.Output[GetUserHierarchyGroupHierarchyPathLevelTwo]{
		OutputState: o.OutputState,
	}
}

// ARN of the hierarchy group.
func (o GetUserHierarchyGroupHierarchyPathLevelTwoOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelTwo) string { return v.Arn }).(pulumi.StringOutput)
}

// The identifier of the hierarchy group.
func (o GetUserHierarchyGroupHierarchyPathLevelTwoOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelTwo) string { return v.Id }).(pulumi.StringOutput)
}

// Returns information on a specific hierarchy group by name
func (o GetUserHierarchyGroupHierarchyPathLevelTwoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyGroupHierarchyPathLevelTwo) string { return v.Name }).(pulumi.StringOutput)
}

type GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyGroupHierarchyPathLevelTwo)(nil)).Elem()
}

func (o GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput) ToGetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput() GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput) ToGetUserHierarchyGroupHierarchyPathLevelTwoArrayOutputWithContext(ctx context.Context) GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput {
	return o
}

func (o GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelTwo] {
	return pulumix.Output[[]GetUserHierarchyGroupHierarchyPathLevelTwo]{
		OutputState: o.OutputState,
	}
}

func (o GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput) Index(i pulumi.IntInput) GetUserHierarchyGroupHierarchyPathLevelTwoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserHierarchyGroupHierarchyPathLevelTwo {
		return vs[0].([]GetUserHierarchyGroupHierarchyPathLevelTwo)[vs[1].(int)]
	}).(GetUserHierarchyGroupHierarchyPathLevelTwoOutput)
}

type GetUserHierarchyStructureHierarchyStructure struct {
	// Details of level five. See below.
	LevelFives []GetUserHierarchyStructureHierarchyStructureLevelFife `pulumi:"levelFives"`
	// Details of level four. See below.
	LevelFours []GetUserHierarchyStructureHierarchyStructureLevelFour `pulumi:"levelFours"`
	// Details of level one. See below.
	LevelOnes []GetUserHierarchyStructureHierarchyStructureLevelOne `pulumi:"levelOnes"`
	// Details of level three. See below.
	LevelThrees []GetUserHierarchyStructureHierarchyStructureLevelThree `pulumi:"levelThrees"`
	// Details of level two. See below.
	LevelTwos []GetUserHierarchyStructureHierarchyStructureLevelTwo `pulumi:"levelTwos"`
}

// GetUserHierarchyStructureHierarchyStructureInput is an input type that accepts GetUserHierarchyStructureHierarchyStructureArgs and GetUserHierarchyStructureHierarchyStructureOutput values.
// You can construct a concrete instance of `GetUserHierarchyStructureHierarchyStructureInput` via:
//
//	GetUserHierarchyStructureHierarchyStructureArgs{...}
type GetUserHierarchyStructureHierarchyStructureInput interface {
	pulumi.Input

	ToGetUserHierarchyStructureHierarchyStructureOutput() GetUserHierarchyStructureHierarchyStructureOutput
	ToGetUserHierarchyStructureHierarchyStructureOutputWithContext(context.Context) GetUserHierarchyStructureHierarchyStructureOutput
}

type GetUserHierarchyStructureHierarchyStructureArgs struct {
	// Details of level five. See below.
	LevelFives GetUserHierarchyStructureHierarchyStructureLevelFifeArrayInput `pulumi:"levelFives"`
	// Details of level four. See below.
	LevelFours GetUserHierarchyStructureHierarchyStructureLevelFourArrayInput `pulumi:"levelFours"`
	// Details of level one. See below.
	LevelOnes GetUserHierarchyStructureHierarchyStructureLevelOneArrayInput `pulumi:"levelOnes"`
	// Details of level three. See below.
	LevelThrees GetUserHierarchyStructureHierarchyStructureLevelThreeArrayInput `pulumi:"levelThrees"`
	// Details of level two. See below.
	LevelTwos GetUserHierarchyStructureHierarchyStructureLevelTwoArrayInput `pulumi:"levelTwos"`
}

func (GetUserHierarchyStructureHierarchyStructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructure)(nil)).Elem()
}

func (i GetUserHierarchyStructureHierarchyStructureArgs) ToGetUserHierarchyStructureHierarchyStructureOutput() GetUserHierarchyStructureHierarchyStructureOutput {
	return i.ToGetUserHierarchyStructureHierarchyStructureOutputWithContext(context.Background())
}

func (i GetUserHierarchyStructureHierarchyStructureArgs) ToGetUserHierarchyStructureHierarchyStructureOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyStructureHierarchyStructureOutput)
}

func (i GetUserHierarchyStructureHierarchyStructureArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyStructureHierarchyStructure] {
	return pulumix.Output[GetUserHierarchyStructureHierarchyStructure]{
		OutputState: i.ToGetUserHierarchyStructureHierarchyStructureOutputWithContext(ctx).OutputState,
	}
}

// GetUserHierarchyStructureHierarchyStructureArrayInput is an input type that accepts GetUserHierarchyStructureHierarchyStructureArray and GetUserHierarchyStructureHierarchyStructureArrayOutput values.
// You can construct a concrete instance of `GetUserHierarchyStructureHierarchyStructureArrayInput` via:
//
//	GetUserHierarchyStructureHierarchyStructureArray{ GetUserHierarchyStructureHierarchyStructureArgs{...} }
type GetUserHierarchyStructureHierarchyStructureArrayInput interface {
	pulumi.Input

	ToGetUserHierarchyStructureHierarchyStructureArrayOutput() GetUserHierarchyStructureHierarchyStructureArrayOutput
	ToGetUserHierarchyStructureHierarchyStructureArrayOutputWithContext(context.Context) GetUserHierarchyStructureHierarchyStructureArrayOutput
}

type GetUserHierarchyStructureHierarchyStructureArray []GetUserHierarchyStructureHierarchyStructureInput

func (GetUserHierarchyStructureHierarchyStructureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyStructureHierarchyStructure)(nil)).Elem()
}

func (i GetUserHierarchyStructureHierarchyStructureArray) ToGetUserHierarchyStructureHierarchyStructureArrayOutput() GetUserHierarchyStructureHierarchyStructureArrayOutput {
	return i.ToGetUserHierarchyStructureHierarchyStructureArrayOutputWithContext(context.Background())
}

func (i GetUserHierarchyStructureHierarchyStructureArray) ToGetUserHierarchyStructureHierarchyStructureArrayOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyStructureHierarchyStructureArrayOutput)
}

func (i GetUserHierarchyStructureHierarchyStructureArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyStructureHierarchyStructure] {
	return pulumix.Output[[]GetUserHierarchyStructureHierarchyStructure]{
		OutputState: i.ToGetUserHierarchyStructureHierarchyStructureArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserHierarchyStructureHierarchyStructureOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyStructureHierarchyStructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructure)(nil)).Elem()
}

func (o GetUserHierarchyStructureHierarchyStructureOutput) ToGetUserHierarchyStructureHierarchyStructureOutput() GetUserHierarchyStructureHierarchyStructureOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureOutput) ToGetUserHierarchyStructureHierarchyStructureOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyStructureHierarchyStructure] {
	return pulumix.Output[GetUserHierarchyStructureHierarchyStructure]{
		OutputState: o.OutputState,
	}
}

// Details of level five. See below.
func (o GetUserHierarchyStructureHierarchyStructureOutput) LevelFives() GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructure) []GetUserHierarchyStructureHierarchyStructureLevelFife {
		return v.LevelFives
	}).(GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput)
}

// Details of level four. See below.
func (o GetUserHierarchyStructureHierarchyStructureOutput) LevelFours() GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructure) []GetUserHierarchyStructureHierarchyStructureLevelFour {
		return v.LevelFours
	}).(GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput)
}

// Details of level one. See below.
func (o GetUserHierarchyStructureHierarchyStructureOutput) LevelOnes() GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructure) []GetUserHierarchyStructureHierarchyStructureLevelOne {
		return v.LevelOnes
	}).(GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput)
}

// Details of level three. See below.
func (o GetUserHierarchyStructureHierarchyStructureOutput) LevelThrees() GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructure) []GetUserHierarchyStructureHierarchyStructureLevelThree {
		return v.LevelThrees
	}).(GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput)
}

// Details of level two. See below.
func (o GetUserHierarchyStructureHierarchyStructureOutput) LevelTwos() GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructure) []GetUserHierarchyStructureHierarchyStructureLevelTwo {
		return v.LevelTwos
	}).(GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput)
}

type GetUserHierarchyStructureHierarchyStructureArrayOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyStructureHierarchyStructureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyStructureHierarchyStructure)(nil)).Elem()
}

func (o GetUserHierarchyStructureHierarchyStructureArrayOutput) ToGetUserHierarchyStructureHierarchyStructureArrayOutput() GetUserHierarchyStructureHierarchyStructureArrayOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureArrayOutput) ToGetUserHierarchyStructureHierarchyStructureArrayOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureArrayOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyStructureHierarchyStructure] {
	return pulumix.Output[[]GetUserHierarchyStructureHierarchyStructure]{
		OutputState: o.OutputState,
	}
}

func (o GetUserHierarchyStructureHierarchyStructureArrayOutput) Index(i pulumi.IntInput) GetUserHierarchyStructureHierarchyStructureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserHierarchyStructureHierarchyStructure {
		return vs[0].([]GetUserHierarchyStructureHierarchyStructure)[vs[1].(int)]
	}).(GetUserHierarchyStructureHierarchyStructureOutput)
}

type GetUserHierarchyStructureHierarchyStructureLevelFife struct {
	// ARN of the hierarchy level.
	Arn string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id string `pulumi:"id"`
	// Name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// GetUserHierarchyStructureHierarchyStructureLevelFifeInput is an input type that accepts GetUserHierarchyStructureHierarchyStructureLevelFifeArgs and GetUserHierarchyStructureHierarchyStructureLevelFifeOutput values.
// You can construct a concrete instance of `GetUserHierarchyStructureHierarchyStructureLevelFifeInput` via:
//
//	GetUserHierarchyStructureHierarchyStructureLevelFifeArgs{...}
type GetUserHierarchyStructureHierarchyStructureLevelFifeInput interface {
	pulumi.Input

	ToGetUserHierarchyStructureHierarchyStructureLevelFifeOutput() GetUserHierarchyStructureHierarchyStructureLevelFifeOutput
	ToGetUserHierarchyStructureHierarchyStructureLevelFifeOutputWithContext(context.Context) GetUserHierarchyStructureHierarchyStructureLevelFifeOutput
}

type GetUserHierarchyStructureHierarchyStructureLevelFifeArgs struct {
	// ARN of the hierarchy level.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetUserHierarchyStructureHierarchyStructureLevelFifeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelFife)(nil)).Elem()
}

func (i GetUserHierarchyStructureHierarchyStructureLevelFifeArgs) ToGetUserHierarchyStructureHierarchyStructureLevelFifeOutput() GetUserHierarchyStructureHierarchyStructureLevelFifeOutput {
	return i.ToGetUserHierarchyStructureHierarchyStructureLevelFifeOutputWithContext(context.Background())
}

func (i GetUserHierarchyStructureHierarchyStructureLevelFifeArgs) ToGetUserHierarchyStructureHierarchyStructureLevelFifeOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelFifeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyStructureHierarchyStructureLevelFifeOutput)
}

func (i GetUserHierarchyStructureHierarchyStructureLevelFifeArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelFife] {
	return pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelFife]{
		OutputState: i.ToGetUserHierarchyStructureHierarchyStructureLevelFifeOutputWithContext(ctx).OutputState,
	}
}

// GetUserHierarchyStructureHierarchyStructureLevelFifeArrayInput is an input type that accepts GetUserHierarchyStructureHierarchyStructureLevelFifeArray and GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput values.
// You can construct a concrete instance of `GetUserHierarchyStructureHierarchyStructureLevelFifeArrayInput` via:
//
//	GetUserHierarchyStructureHierarchyStructureLevelFifeArray{ GetUserHierarchyStructureHierarchyStructureLevelFifeArgs{...} }
type GetUserHierarchyStructureHierarchyStructureLevelFifeArrayInput interface {
	pulumi.Input

	ToGetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput
	ToGetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutputWithContext(context.Context) GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput
}

type GetUserHierarchyStructureHierarchyStructureLevelFifeArray []GetUserHierarchyStructureHierarchyStructureLevelFifeInput

func (GetUserHierarchyStructureHierarchyStructureLevelFifeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyStructureHierarchyStructureLevelFife)(nil)).Elem()
}

func (i GetUserHierarchyStructureHierarchyStructureLevelFifeArray) ToGetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput {
	return i.ToGetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutputWithContext(context.Background())
}

func (i GetUserHierarchyStructureHierarchyStructureLevelFifeArray) ToGetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput)
}

func (i GetUserHierarchyStructureHierarchyStructureLevelFifeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelFife] {
	return pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelFife]{
		OutputState: i.ToGetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserHierarchyStructureHierarchyStructureLevelFifeOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyStructureHierarchyStructureLevelFifeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelFife)(nil)).Elem()
}

func (o GetUserHierarchyStructureHierarchyStructureLevelFifeOutput) ToGetUserHierarchyStructureHierarchyStructureLevelFifeOutput() GetUserHierarchyStructureHierarchyStructureLevelFifeOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelFifeOutput) ToGetUserHierarchyStructureHierarchyStructureLevelFifeOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelFifeOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelFifeOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelFife] {
	return pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelFife]{
		OutputState: o.OutputState,
	}
}

// ARN of the hierarchy level.
func (o GetUserHierarchyStructureHierarchyStructureLevelFifeOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelFife) string { return v.Arn }).(pulumi.StringOutput)
}

// The identifier of the hierarchy level.
func (o GetUserHierarchyStructureHierarchyStructureLevelFifeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelFife) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the user hierarchy level. Must not be more than 50 characters.
func (o GetUserHierarchyStructureHierarchyStructureLevelFifeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelFife) string { return v.Name }).(pulumi.StringOutput)
}

type GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyStructureHierarchyStructureLevelFife)(nil)).Elem()
}

func (o GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput) ToGetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput) ToGetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelFife] {
	return pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelFife]{
		OutputState: o.OutputState,
	}
}

func (o GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput) Index(i pulumi.IntInput) GetUserHierarchyStructureHierarchyStructureLevelFifeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserHierarchyStructureHierarchyStructureLevelFife {
		return vs[0].([]GetUserHierarchyStructureHierarchyStructureLevelFife)[vs[1].(int)]
	}).(GetUserHierarchyStructureHierarchyStructureLevelFifeOutput)
}

type GetUserHierarchyStructureHierarchyStructureLevelFour struct {
	// ARN of the hierarchy level.
	Arn string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id string `pulumi:"id"`
	// Name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// GetUserHierarchyStructureHierarchyStructureLevelFourInput is an input type that accepts GetUserHierarchyStructureHierarchyStructureLevelFourArgs and GetUserHierarchyStructureHierarchyStructureLevelFourOutput values.
// You can construct a concrete instance of `GetUserHierarchyStructureHierarchyStructureLevelFourInput` via:
//
//	GetUserHierarchyStructureHierarchyStructureLevelFourArgs{...}
type GetUserHierarchyStructureHierarchyStructureLevelFourInput interface {
	pulumi.Input

	ToGetUserHierarchyStructureHierarchyStructureLevelFourOutput() GetUserHierarchyStructureHierarchyStructureLevelFourOutput
	ToGetUserHierarchyStructureHierarchyStructureLevelFourOutputWithContext(context.Context) GetUserHierarchyStructureHierarchyStructureLevelFourOutput
}

type GetUserHierarchyStructureHierarchyStructureLevelFourArgs struct {
	// ARN of the hierarchy level.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetUserHierarchyStructureHierarchyStructureLevelFourArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelFour)(nil)).Elem()
}

func (i GetUserHierarchyStructureHierarchyStructureLevelFourArgs) ToGetUserHierarchyStructureHierarchyStructureLevelFourOutput() GetUserHierarchyStructureHierarchyStructureLevelFourOutput {
	return i.ToGetUserHierarchyStructureHierarchyStructureLevelFourOutputWithContext(context.Background())
}

func (i GetUserHierarchyStructureHierarchyStructureLevelFourArgs) ToGetUserHierarchyStructureHierarchyStructureLevelFourOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelFourOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyStructureHierarchyStructureLevelFourOutput)
}

func (i GetUserHierarchyStructureHierarchyStructureLevelFourArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelFour] {
	return pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelFour]{
		OutputState: i.ToGetUserHierarchyStructureHierarchyStructureLevelFourOutputWithContext(ctx).OutputState,
	}
}

// GetUserHierarchyStructureHierarchyStructureLevelFourArrayInput is an input type that accepts GetUserHierarchyStructureHierarchyStructureLevelFourArray and GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput values.
// You can construct a concrete instance of `GetUserHierarchyStructureHierarchyStructureLevelFourArrayInput` via:
//
//	GetUserHierarchyStructureHierarchyStructureLevelFourArray{ GetUserHierarchyStructureHierarchyStructureLevelFourArgs{...} }
type GetUserHierarchyStructureHierarchyStructureLevelFourArrayInput interface {
	pulumi.Input

	ToGetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput
	ToGetUserHierarchyStructureHierarchyStructureLevelFourArrayOutputWithContext(context.Context) GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput
}

type GetUserHierarchyStructureHierarchyStructureLevelFourArray []GetUserHierarchyStructureHierarchyStructureLevelFourInput

func (GetUserHierarchyStructureHierarchyStructureLevelFourArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyStructureHierarchyStructureLevelFour)(nil)).Elem()
}

func (i GetUserHierarchyStructureHierarchyStructureLevelFourArray) ToGetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput {
	return i.ToGetUserHierarchyStructureHierarchyStructureLevelFourArrayOutputWithContext(context.Background())
}

func (i GetUserHierarchyStructureHierarchyStructureLevelFourArray) ToGetUserHierarchyStructureHierarchyStructureLevelFourArrayOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput)
}

func (i GetUserHierarchyStructureHierarchyStructureLevelFourArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelFour] {
	return pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelFour]{
		OutputState: i.ToGetUserHierarchyStructureHierarchyStructureLevelFourArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserHierarchyStructureHierarchyStructureLevelFourOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyStructureHierarchyStructureLevelFourOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelFour)(nil)).Elem()
}

func (o GetUserHierarchyStructureHierarchyStructureLevelFourOutput) ToGetUserHierarchyStructureHierarchyStructureLevelFourOutput() GetUserHierarchyStructureHierarchyStructureLevelFourOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelFourOutput) ToGetUserHierarchyStructureHierarchyStructureLevelFourOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelFourOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelFourOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelFour] {
	return pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelFour]{
		OutputState: o.OutputState,
	}
}

// ARN of the hierarchy level.
func (o GetUserHierarchyStructureHierarchyStructureLevelFourOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelFour) string { return v.Arn }).(pulumi.StringOutput)
}

// The identifier of the hierarchy level.
func (o GetUserHierarchyStructureHierarchyStructureLevelFourOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelFour) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the user hierarchy level. Must not be more than 50 characters.
func (o GetUserHierarchyStructureHierarchyStructureLevelFourOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelFour) string { return v.Name }).(pulumi.StringOutput)
}

type GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyStructureHierarchyStructureLevelFour)(nil)).Elem()
}

func (o GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput) ToGetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput) ToGetUserHierarchyStructureHierarchyStructureLevelFourArrayOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelFour] {
	return pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelFour]{
		OutputState: o.OutputState,
	}
}

func (o GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput) Index(i pulumi.IntInput) GetUserHierarchyStructureHierarchyStructureLevelFourOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserHierarchyStructureHierarchyStructureLevelFour {
		return vs[0].([]GetUserHierarchyStructureHierarchyStructureLevelFour)[vs[1].(int)]
	}).(GetUserHierarchyStructureHierarchyStructureLevelFourOutput)
}

type GetUserHierarchyStructureHierarchyStructureLevelOne struct {
	// ARN of the hierarchy level.
	Arn string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id string `pulumi:"id"`
	// Name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// GetUserHierarchyStructureHierarchyStructureLevelOneInput is an input type that accepts GetUserHierarchyStructureHierarchyStructureLevelOneArgs and GetUserHierarchyStructureHierarchyStructureLevelOneOutput values.
// You can construct a concrete instance of `GetUserHierarchyStructureHierarchyStructureLevelOneInput` via:
//
//	GetUserHierarchyStructureHierarchyStructureLevelOneArgs{...}
type GetUserHierarchyStructureHierarchyStructureLevelOneInput interface {
	pulumi.Input

	ToGetUserHierarchyStructureHierarchyStructureLevelOneOutput() GetUserHierarchyStructureHierarchyStructureLevelOneOutput
	ToGetUserHierarchyStructureHierarchyStructureLevelOneOutputWithContext(context.Context) GetUserHierarchyStructureHierarchyStructureLevelOneOutput
}

type GetUserHierarchyStructureHierarchyStructureLevelOneArgs struct {
	// ARN of the hierarchy level.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetUserHierarchyStructureHierarchyStructureLevelOneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelOne)(nil)).Elem()
}

func (i GetUserHierarchyStructureHierarchyStructureLevelOneArgs) ToGetUserHierarchyStructureHierarchyStructureLevelOneOutput() GetUserHierarchyStructureHierarchyStructureLevelOneOutput {
	return i.ToGetUserHierarchyStructureHierarchyStructureLevelOneOutputWithContext(context.Background())
}

func (i GetUserHierarchyStructureHierarchyStructureLevelOneArgs) ToGetUserHierarchyStructureHierarchyStructureLevelOneOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelOneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyStructureHierarchyStructureLevelOneOutput)
}

func (i GetUserHierarchyStructureHierarchyStructureLevelOneArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelOne] {
	return pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelOne]{
		OutputState: i.ToGetUserHierarchyStructureHierarchyStructureLevelOneOutputWithContext(ctx).OutputState,
	}
}

// GetUserHierarchyStructureHierarchyStructureLevelOneArrayInput is an input type that accepts GetUserHierarchyStructureHierarchyStructureLevelOneArray and GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput values.
// You can construct a concrete instance of `GetUserHierarchyStructureHierarchyStructureLevelOneArrayInput` via:
//
//	GetUserHierarchyStructureHierarchyStructureLevelOneArray{ GetUserHierarchyStructureHierarchyStructureLevelOneArgs{...} }
type GetUserHierarchyStructureHierarchyStructureLevelOneArrayInput interface {
	pulumi.Input

	ToGetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput
	ToGetUserHierarchyStructureHierarchyStructureLevelOneArrayOutputWithContext(context.Context) GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput
}

type GetUserHierarchyStructureHierarchyStructureLevelOneArray []GetUserHierarchyStructureHierarchyStructureLevelOneInput

func (GetUserHierarchyStructureHierarchyStructureLevelOneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyStructureHierarchyStructureLevelOne)(nil)).Elem()
}

func (i GetUserHierarchyStructureHierarchyStructureLevelOneArray) ToGetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput {
	return i.ToGetUserHierarchyStructureHierarchyStructureLevelOneArrayOutputWithContext(context.Background())
}

func (i GetUserHierarchyStructureHierarchyStructureLevelOneArray) ToGetUserHierarchyStructureHierarchyStructureLevelOneArrayOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput)
}

func (i GetUserHierarchyStructureHierarchyStructureLevelOneArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelOne] {
	return pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelOne]{
		OutputState: i.ToGetUserHierarchyStructureHierarchyStructureLevelOneArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserHierarchyStructureHierarchyStructureLevelOneOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyStructureHierarchyStructureLevelOneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelOne)(nil)).Elem()
}

func (o GetUserHierarchyStructureHierarchyStructureLevelOneOutput) ToGetUserHierarchyStructureHierarchyStructureLevelOneOutput() GetUserHierarchyStructureHierarchyStructureLevelOneOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelOneOutput) ToGetUserHierarchyStructureHierarchyStructureLevelOneOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelOneOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelOneOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelOne] {
	return pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelOne]{
		OutputState: o.OutputState,
	}
}

// ARN of the hierarchy level.
func (o GetUserHierarchyStructureHierarchyStructureLevelOneOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelOne) string { return v.Arn }).(pulumi.StringOutput)
}

// The identifier of the hierarchy level.
func (o GetUserHierarchyStructureHierarchyStructureLevelOneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelOne) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the user hierarchy level. Must not be more than 50 characters.
func (o GetUserHierarchyStructureHierarchyStructureLevelOneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelOne) string { return v.Name }).(pulumi.StringOutput)
}

type GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyStructureHierarchyStructureLevelOne)(nil)).Elem()
}

func (o GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput) ToGetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput) ToGetUserHierarchyStructureHierarchyStructureLevelOneArrayOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelOne] {
	return pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelOne]{
		OutputState: o.OutputState,
	}
}

func (o GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput) Index(i pulumi.IntInput) GetUserHierarchyStructureHierarchyStructureLevelOneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserHierarchyStructureHierarchyStructureLevelOne {
		return vs[0].([]GetUserHierarchyStructureHierarchyStructureLevelOne)[vs[1].(int)]
	}).(GetUserHierarchyStructureHierarchyStructureLevelOneOutput)
}

type GetUserHierarchyStructureHierarchyStructureLevelThree struct {
	// ARN of the hierarchy level.
	Arn string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id string `pulumi:"id"`
	// Name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// GetUserHierarchyStructureHierarchyStructureLevelThreeInput is an input type that accepts GetUserHierarchyStructureHierarchyStructureLevelThreeArgs and GetUserHierarchyStructureHierarchyStructureLevelThreeOutput values.
// You can construct a concrete instance of `GetUserHierarchyStructureHierarchyStructureLevelThreeInput` via:
//
//	GetUserHierarchyStructureHierarchyStructureLevelThreeArgs{...}
type GetUserHierarchyStructureHierarchyStructureLevelThreeInput interface {
	pulumi.Input

	ToGetUserHierarchyStructureHierarchyStructureLevelThreeOutput() GetUserHierarchyStructureHierarchyStructureLevelThreeOutput
	ToGetUserHierarchyStructureHierarchyStructureLevelThreeOutputWithContext(context.Context) GetUserHierarchyStructureHierarchyStructureLevelThreeOutput
}

type GetUserHierarchyStructureHierarchyStructureLevelThreeArgs struct {
	// ARN of the hierarchy level.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetUserHierarchyStructureHierarchyStructureLevelThreeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelThree)(nil)).Elem()
}

func (i GetUserHierarchyStructureHierarchyStructureLevelThreeArgs) ToGetUserHierarchyStructureHierarchyStructureLevelThreeOutput() GetUserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return i.ToGetUserHierarchyStructureHierarchyStructureLevelThreeOutputWithContext(context.Background())
}

func (i GetUserHierarchyStructureHierarchyStructureLevelThreeArgs) ToGetUserHierarchyStructureHierarchyStructureLevelThreeOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyStructureHierarchyStructureLevelThreeOutput)
}

func (i GetUserHierarchyStructureHierarchyStructureLevelThreeArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelThree] {
	return pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelThree]{
		OutputState: i.ToGetUserHierarchyStructureHierarchyStructureLevelThreeOutputWithContext(ctx).OutputState,
	}
}

// GetUserHierarchyStructureHierarchyStructureLevelThreeArrayInput is an input type that accepts GetUserHierarchyStructureHierarchyStructureLevelThreeArray and GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput values.
// You can construct a concrete instance of `GetUserHierarchyStructureHierarchyStructureLevelThreeArrayInput` via:
//
//	GetUserHierarchyStructureHierarchyStructureLevelThreeArray{ GetUserHierarchyStructureHierarchyStructureLevelThreeArgs{...} }
type GetUserHierarchyStructureHierarchyStructureLevelThreeArrayInput interface {
	pulumi.Input

	ToGetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput
	ToGetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutputWithContext(context.Context) GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput
}

type GetUserHierarchyStructureHierarchyStructureLevelThreeArray []GetUserHierarchyStructureHierarchyStructureLevelThreeInput

func (GetUserHierarchyStructureHierarchyStructureLevelThreeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyStructureHierarchyStructureLevelThree)(nil)).Elem()
}

func (i GetUserHierarchyStructureHierarchyStructureLevelThreeArray) ToGetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput {
	return i.ToGetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutputWithContext(context.Background())
}

func (i GetUserHierarchyStructureHierarchyStructureLevelThreeArray) ToGetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput)
}

func (i GetUserHierarchyStructureHierarchyStructureLevelThreeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelThree] {
	return pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelThree]{
		OutputState: i.ToGetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserHierarchyStructureHierarchyStructureLevelThreeOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyStructureHierarchyStructureLevelThreeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelThree)(nil)).Elem()
}

func (o GetUserHierarchyStructureHierarchyStructureLevelThreeOutput) ToGetUserHierarchyStructureHierarchyStructureLevelThreeOutput() GetUserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelThreeOutput) ToGetUserHierarchyStructureHierarchyStructureLevelThreeOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelThreeOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelThree] {
	return pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelThree]{
		OutputState: o.OutputState,
	}
}

// ARN of the hierarchy level.
func (o GetUserHierarchyStructureHierarchyStructureLevelThreeOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelThree) string { return v.Arn }).(pulumi.StringOutput)
}

// The identifier of the hierarchy level.
func (o GetUserHierarchyStructureHierarchyStructureLevelThreeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelThree) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the user hierarchy level. Must not be more than 50 characters.
func (o GetUserHierarchyStructureHierarchyStructureLevelThreeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelThree) string { return v.Name }).(pulumi.StringOutput)
}

type GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyStructureHierarchyStructureLevelThree)(nil)).Elem()
}

func (o GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput) ToGetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput) ToGetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelThree] {
	return pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelThree]{
		OutputState: o.OutputState,
	}
}

func (o GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput) Index(i pulumi.IntInput) GetUserHierarchyStructureHierarchyStructureLevelThreeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserHierarchyStructureHierarchyStructureLevelThree {
		return vs[0].([]GetUserHierarchyStructureHierarchyStructureLevelThree)[vs[1].(int)]
	}).(GetUserHierarchyStructureHierarchyStructureLevelThreeOutput)
}

type GetUserHierarchyStructureHierarchyStructureLevelTwo struct {
	// ARN of the hierarchy level.
	Arn string `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id string `pulumi:"id"`
	// Name of the user hierarchy level. Must not be more than 50 characters.
	Name string `pulumi:"name"`
}

// GetUserHierarchyStructureHierarchyStructureLevelTwoInput is an input type that accepts GetUserHierarchyStructureHierarchyStructureLevelTwoArgs and GetUserHierarchyStructureHierarchyStructureLevelTwoOutput values.
// You can construct a concrete instance of `GetUserHierarchyStructureHierarchyStructureLevelTwoInput` via:
//
//	GetUserHierarchyStructureHierarchyStructureLevelTwoArgs{...}
type GetUserHierarchyStructureHierarchyStructureLevelTwoInput interface {
	pulumi.Input

	ToGetUserHierarchyStructureHierarchyStructureLevelTwoOutput() GetUserHierarchyStructureHierarchyStructureLevelTwoOutput
	ToGetUserHierarchyStructureHierarchyStructureLevelTwoOutputWithContext(context.Context) GetUserHierarchyStructureHierarchyStructureLevelTwoOutput
}

type GetUserHierarchyStructureHierarchyStructureLevelTwoArgs struct {
	// ARN of the hierarchy level.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The identifier of the hierarchy level.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the user hierarchy level. Must not be more than 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetUserHierarchyStructureHierarchyStructureLevelTwoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelTwo)(nil)).Elem()
}

func (i GetUserHierarchyStructureHierarchyStructureLevelTwoArgs) ToGetUserHierarchyStructureHierarchyStructureLevelTwoOutput() GetUserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return i.ToGetUserHierarchyStructureHierarchyStructureLevelTwoOutputWithContext(context.Background())
}

func (i GetUserHierarchyStructureHierarchyStructureLevelTwoArgs) ToGetUserHierarchyStructureHierarchyStructureLevelTwoOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyStructureHierarchyStructureLevelTwoOutput)
}

func (i GetUserHierarchyStructureHierarchyStructureLevelTwoArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelTwo] {
	return pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelTwo]{
		OutputState: i.ToGetUserHierarchyStructureHierarchyStructureLevelTwoOutputWithContext(ctx).OutputState,
	}
}

// GetUserHierarchyStructureHierarchyStructureLevelTwoArrayInput is an input type that accepts GetUserHierarchyStructureHierarchyStructureLevelTwoArray and GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput values.
// You can construct a concrete instance of `GetUserHierarchyStructureHierarchyStructureLevelTwoArrayInput` via:
//
//	GetUserHierarchyStructureHierarchyStructureLevelTwoArray{ GetUserHierarchyStructureHierarchyStructureLevelTwoArgs{...} }
type GetUserHierarchyStructureHierarchyStructureLevelTwoArrayInput interface {
	pulumi.Input

	ToGetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput
	ToGetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutputWithContext(context.Context) GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput
}

type GetUserHierarchyStructureHierarchyStructureLevelTwoArray []GetUserHierarchyStructureHierarchyStructureLevelTwoInput

func (GetUserHierarchyStructureHierarchyStructureLevelTwoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyStructureHierarchyStructureLevelTwo)(nil)).Elem()
}

func (i GetUserHierarchyStructureHierarchyStructureLevelTwoArray) ToGetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput {
	return i.ToGetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutputWithContext(context.Background())
}

func (i GetUserHierarchyStructureHierarchyStructureLevelTwoArray) ToGetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput)
}

func (i GetUserHierarchyStructureHierarchyStructureLevelTwoArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelTwo] {
	return pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelTwo]{
		OutputState: i.ToGetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserHierarchyStructureHierarchyStructureLevelTwoOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyStructureHierarchyStructureLevelTwoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelTwo)(nil)).Elem()
}

func (o GetUserHierarchyStructureHierarchyStructureLevelTwoOutput) ToGetUserHierarchyStructureHierarchyStructureLevelTwoOutput() GetUserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelTwoOutput) ToGetUserHierarchyStructureHierarchyStructureLevelTwoOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelTwoOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelTwo] {
	return pulumix.Output[GetUserHierarchyStructureHierarchyStructureLevelTwo]{
		OutputState: o.OutputState,
	}
}

// ARN of the hierarchy level.
func (o GetUserHierarchyStructureHierarchyStructureLevelTwoOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelTwo) string { return v.Arn }).(pulumi.StringOutput)
}

// The identifier of the hierarchy level.
func (o GetUserHierarchyStructureHierarchyStructureLevelTwoOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelTwo) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the user hierarchy level. Must not be more than 50 characters.
func (o GetUserHierarchyStructureHierarchyStructureLevelTwoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserHierarchyStructureHierarchyStructureLevelTwo) string { return v.Name }).(pulumi.StringOutput)
}

type GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput struct{ *pulumi.OutputState }

func (GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserHierarchyStructureHierarchyStructureLevelTwo)(nil)).Elem()
}

func (o GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput) ToGetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput() GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput) ToGetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutputWithContext(ctx context.Context) GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput {
	return o
}

func (o GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelTwo] {
	return pulumix.Output[[]GetUserHierarchyStructureHierarchyStructureLevelTwo]{
		OutputState: o.OutputState,
	}
}

func (o GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput) Index(i pulumi.IntInput) GetUserHierarchyStructureHierarchyStructureLevelTwoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserHierarchyStructureHierarchyStructureLevelTwo {
		return vs[0].([]GetUserHierarchyStructureHierarchyStructureLevelTwo)[vs[1].(int)]
	}).(GetUserHierarchyStructureHierarchyStructureLevelTwoOutput)
}

type GetUserIdentityInfo struct {
	// The email address.
	Email string `pulumi:"email"`
	// The first name.
	FirstName string `pulumi:"firstName"`
	// The last name.
	LastName string `pulumi:"lastName"`
}

// GetUserIdentityInfoInput is an input type that accepts GetUserIdentityInfoArgs and GetUserIdentityInfoOutput values.
// You can construct a concrete instance of `GetUserIdentityInfoInput` via:
//
//	GetUserIdentityInfoArgs{...}
type GetUserIdentityInfoInput interface {
	pulumi.Input

	ToGetUserIdentityInfoOutput() GetUserIdentityInfoOutput
	ToGetUserIdentityInfoOutputWithContext(context.Context) GetUserIdentityInfoOutput
}

type GetUserIdentityInfoArgs struct {
	// The email address.
	Email pulumi.StringInput `pulumi:"email"`
	// The first name.
	FirstName pulumi.StringInput `pulumi:"firstName"`
	// The last name.
	LastName pulumi.StringInput `pulumi:"lastName"`
}

func (GetUserIdentityInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserIdentityInfo)(nil)).Elem()
}

func (i GetUserIdentityInfoArgs) ToGetUserIdentityInfoOutput() GetUserIdentityInfoOutput {
	return i.ToGetUserIdentityInfoOutputWithContext(context.Background())
}

func (i GetUserIdentityInfoArgs) ToGetUserIdentityInfoOutputWithContext(ctx context.Context) GetUserIdentityInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserIdentityInfoOutput)
}

func (i GetUserIdentityInfoArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserIdentityInfo] {
	return pulumix.Output[GetUserIdentityInfo]{
		OutputState: i.ToGetUserIdentityInfoOutputWithContext(ctx).OutputState,
	}
}

// GetUserIdentityInfoArrayInput is an input type that accepts GetUserIdentityInfoArray and GetUserIdentityInfoArrayOutput values.
// You can construct a concrete instance of `GetUserIdentityInfoArrayInput` via:
//
//	GetUserIdentityInfoArray{ GetUserIdentityInfoArgs{...} }
type GetUserIdentityInfoArrayInput interface {
	pulumi.Input

	ToGetUserIdentityInfoArrayOutput() GetUserIdentityInfoArrayOutput
	ToGetUserIdentityInfoArrayOutputWithContext(context.Context) GetUserIdentityInfoArrayOutput
}

type GetUserIdentityInfoArray []GetUserIdentityInfoInput

func (GetUserIdentityInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserIdentityInfo)(nil)).Elem()
}

func (i GetUserIdentityInfoArray) ToGetUserIdentityInfoArrayOutput() GetUserIdentityInfoArrayOutput {
	return i.ToGetUserIdentityInfoArrayOutputWithContext(context.Background())
}

func (i GetUserIdentityInfoArray) ToGetUserIdentityInfoArrayOutputWithContext(ctx context.Context) GetUserIdentityInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserIdentityInfoArrayOutput)
}

func (i GetUserIdentityInfoArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserIdentityInfo] {
	return pulumix.Output[[]GetUserIdentityInfo]{
		OutputState: i.ToGetUserIdentityInfoArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserIdentityInfoOutput struct{ *pulumi.OutputState }

func (GetUserIdentityInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserIdentityInfo)(nil)).Elem()
}

func (o GetUserIdentityInfoOutput) ToGetUserIdentityInfoOutput() GetUserIdentityInfoOutput {
	return o
}

func (o GetUserIdentityInfoOutput) ToGetUserIdentityInfoOutputWithContext(ctx context.Context) GetUserIdentityInfoOutput {
	return o
}

func (o GetUserIdentityInfoOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserIdentityInfo] {
	return pulumix.Output[GetUserIdentityInfo]{
		OutputState: o.OutputState,
	}
}

// The email address.
func (o GetUserIdentityInfoOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserIdentityInfo) string { return v.Email }).(pulumi.StringOutput)
}

// The first name.
func (o GetUserIdentityInfoOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserIdentityInfo) string { return v.FirstName }).(pulumi.StringOutput)
}

// The last name.
func (o GetUserIdentityInfoOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserIdentityInfo) string { return v.LastName }).(pulumi.StringOutput)
}

type GetUserIdentityInfoArrayOutput struct{ *pulumi.OutputState }

func (GetUserIdentityInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserIdentityInfo)(nil)).Elem()
}

func (o GetUserIdentityInfoArrayOutput) ToGetUserIdentityInfoArrayOutput() GetUserIdentityInfoArrayOutput {
	return o
}

func (o GetUserIdentityInfoArrayOutput) ToGetUserIdentityInfoArrayOutputWithContext(ctx context.Context) GetUserIdentityInfoArrayOutput {
	return o
}

func (o GetUserIdentityInfoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserIdentityInfo] {
	return pulumix.Output[[]GetUserIdentityInfo]{
		OutputState: o.OutputState,
	}
}

func (o GetUserIdentityInfoArrayOutput) Index(i pulumi.IntInput) GetUserIdentityInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserIdentityInfo {
		return vs[0].([]GetUserIdentityInfo)[vs[1].(int)]
	}).(GetUserIdentityInfoOutput)
}

type GetUserPhoneConfig struct {
	// The After Call Work (ACW) timeout setting, in seconds.
	AfterContactWorkTimeLimit int `pulumi:"afterContactWorkTimeLimit"`
	// When Auto-Accept Call is enabled for an available agent, the agent connects to contacts automatically.
	AutoAccept bool `pulumi:"autoAccept"`
	// The phone number for the user's desk phone.
	DeskPhoneNumber string `pulumi:"deskPhoneNumber"`
	// The phone type. Valid values are `DESK_PHONE` and `SOFT_PHONE`.
	PhoneType string `pulumi:"phoneType"`
}

// GetUserPhoneConfigInput is an input type that accepts GetUserPhoneConfigArgs and GetUserPhoneConfigOutput values.
// You can construct a concrete instance of `GetUserPhoneConfigInput` via:
//
//	GetUserPhoneConfigArgs{...}
type GetUserPhoneConfigInput interface {
	pulumi.Input

	ToGetUserPhoneConfigOutput() GetUserPhoneConfigOutput
	ToGetUserPhoneConfigOutputWithContext(context.Context) GetUserPhoneConfigOutput
}

type GetUserPhoneConfigArgs struct {
	// The After Call Work (ACW) timeout setting, in seconds.
	AfterContactWorkTimeLimit pulumi.IntInput `pulumi:"afterContactWorkTimeLimit"`
	// When Auto-Accept Call is enabled for an available agent, the agent connects to contacts automatically.
	AutoAccept pulumi.BoolInput `pulumi:"autoAccept"`
	// The phone number for the user's desk phone.
	DeskPhoneNumber pulumi.StringInput `pulumi:"deskPhoneNumber"`
	// The phone type. Valid values are `DESK_PHONE` and `SOFT_PHONE`.
	PhoneType pulumi.StringInput `pulumi:"phoneType"`
}

func (GetUserPhoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserPhoneConfig)(nil)).Elem()
}

func (i GetUserPhoneConfigArgs) ToGetUserPhoneConfigOutput() GetUserPhoneConfigOutput {
	return i.ToGetUserPhoneConfigOutputWithContext(context.Background())
}

func (i GetUserPhoneConfigArgs) ToGetUserPhoneConfigOutputWithContext(ctx context.Context) GetUserPhoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserPhoneConfigOutput)
}

func (i GetUserPhoneConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserPhoneConfig] {
	return pulumix.Output[GetUserPhoneConfig]{
		OutputState: i.ToGetUserPhoneConfigOutputWithContext(ctx).OutputState,
	}
}

// GetUserPhoneConfigArrayInput is an input type that accepts GetUserPhoneConfigArray and GetUserPhoneConfigArrayOutput values.
// You can construct a concrete instance of `GetUserPhoneConfigArrayInput` via:
//
//	GetUserPhoneConfigArray{ GetUserPhoneConfigArgs{...} }
type GetUserPhoneConfigArrayInput interface {
	pulumi.Input

	ToGetUserPhoneConfigArrayOutput() GetUserPhoneConfigArrayOutput
	ToGetUserPhoneConfigArrayOutputWithContext(context.Context) GetUserPhoneConfigArrayOutput
}

type GetUserPhoneConfigArray []GetUserPhoneConfigInput

func (GetUserPhoneConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserPhoneConfig)(nil)).Elem()
}

func (i GetUserPhoneConfigArray) ToGetUserPhoneConfigArrayOutput() GetUserPhoneConfigArrayOutput {
	return i.ToGetUserPhoneConfigArrayOutputWithContext(context.Background())
}

func (i GetUserPhoneConfigArray) ToGetUserPhoneConfigArrayOutputWithContext(ctx context.Context) GetUserPhoneConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserPhoneConfigArrayOutput)
}

func (i GetUserPhoneConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserPhoneConfig] {
	return pulumix.Output[[]GetUserPhoneConfig]{
		OutputState: i.ToGetUserPhoneConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserPhoneConfigOutput struct{ *pulumi.OutputState }

func (GetUserPhoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserPhoneConfig)(nil)).Elem()
}

func (o GetUserPhoneConfigOutput) ToGetUserPhoneConfigOutput() GetUserPhoneConfigOutput {
	return o
}

func (o GetUserPhoneConfigOutput) ToGetUserPhoneConfigOutputWithContext(ctx context.Context) GetUserPhoneConfigOutput {
	return o
}

func (o GetUserPhoneConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserPhoneConfig] {
	return pulumix.Output[GetUserPhoneConfig]{
		OutputState: o.OutputState,
	}
}

// The After Call Work (ACW) timeout setting, in seconds.
func (o GetUserPhoneConfigOutput) AfterContactWorkTimeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserPhoneConfig) int { return v.AfterContactWorkTimeLimit }).(pulumi.IntOutput)
}

// When Auto-Accept Call is enabled for an available agent, the agent connects to contacts automatically.
func (o GetUserPhoneConfigOutput) AutoAccept() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserPhoneConfig) bool { return v.AutoAccept }).(pulumi.BoolOutput)
}

// The phone number for the user's desk phone.
func (o GetUserPhoneConfigOutput) DeskPhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPhoneConfig) string { return v.DeskPhoneNumber }).(pulumi.StringOutput)
}

// The phone type. Valid values are `DESK_PHONE` and `SOFT_PHONE`.
func (o GetUserPhoneConfigOutput) PhoneType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPhoneConfig) string { return v.PhoneType }).(pulumi.StringOutput)
}

type GetUserPhoneConfigArrayOutput struct{ *pulumi.OutputState }

func (GetUserPhoneConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserPhoneConfig)(nil)).Elem()
}

func (o GetUserPhoneConfigArrayOutput) ToGetUserPhoneConfigArrayOutput() GetUserPhoneConfigArrayOutput {
	return o
}

func (o GetUserPhoneConfigArrayOutput) ToGetUserPhoneConfigArrayOutputWithContext(ctx context.Context) GetUserPhoneConfigArrayOutput {
	return o
}

func (o GetUserPhoneConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserPhoneConfig] {
	return pulumix.Output[[]GetUserPhoneConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetUserPhoneConfigArrayOutput) Index(i pulumi.IntInput) GetUserPhoneConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserPhoneConfig {
		return vs[0].([]GetUserPhoneConfig)[vs[1].(int)]
	}).(GetUserPhoneConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotAssociationLexBotInput)(nil)).Elem(), BotAssociationLexBotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotAssociationLexBotPtrInput)(nil)).Elem(), BotAssociationLexBotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigInput)(nil)).Elem(), HoursOfOperationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigArrayInput)(nil)).Elem(), HoursOfOperationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigEndTimeInput)(nil)).Elem(), HoursOfOperationConfigEndTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigStartTimeInput)(nil)).Elem(), HoursOfOperationConfigStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageConfigInput)(nil)).Elem(), InstanceStorageConfigStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageConfigPtrInput)(nil)).Elem(), InstanceStorageConfigStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisFirehoseConfigInput)(nil)).Elem(), InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrInput)(nil)).Elem(), InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisStreamConfigInput)(nil)).Elem(), InstanceStorageConfigStorageConfigKinesisStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisStreamConfigPtrInput)(nil)).Elem(), InstanceStorageConfigStorageConfigKinesisStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisVideoStreamConfigInput)(nil)).Elem(), InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrInput)(nil)).Elem(), InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigInput)(nil)).Elem(), InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrInput)(nil)).Elem(), InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageConfigS3ConfigInput)(nil)).Elem(), InstanceStorageConfigStorageConfigS3ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageConfigS3ConfigPtrInput)(nil)).Elem(), InstanceStorageConfigStorageConfigS3ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigInput)(nil)).Elem(), InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrInput)(nil)).Elem(), InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhoneNumberStatusInput)(nil)).Elem(), PhoneNumberStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhoneNumberStatusArrayInput)(nil)).Elem(), PhoneNumberStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueOutboundCallerConfigInput)(nil)).Elem(), QueueOutboundCallerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueOutboundCallerConfigPtrInput)(nil)).Elem(), QueueOutboundCallerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigInput)(nil)).Elem(), QuickConnectQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigPtrInput)(nil)).Elem(), QuickConnectQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigPhoneConfigInput)(nil)).Elem(), QuickConnectQuickConnectConfigPhoneConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigPhoneConfigArrayInput)(nil)).Elem(), QuickConnectQuickConnectConfigPhoneConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigQueueConfigInput)(nil)).Elem(), QuickConnectQuickConnectConfigQueueConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigQueueConfigArrayInput)(nil)).Elem(), QuickConnectQuickConnectConfigQueueConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigUserConfigInput)(nil)).Elem(), QuickConnectQuickConnectConfigUserConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQuickConnectConfigUserConfigArrayInput)(nil)).Elem(), QuickConnectQuickConnectConfigUserConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileMediaConcurrencyInput)(nil)).Elem(), RoutingProfileMediaConcurrencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileMediaConcurrencyArrayInput)(nil)).Elem(), RoutingProfileMediaConcurrencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileQueueConfigInput)(nil)).Elem(), RoutingProfileQueueConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileQueueConfigArrayInput)(nil)).Elem(), RoutingProfileQueueConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyGroupHierarchyPathInput)(nil)).Elem(), UserHierarchyGroupHierarchyPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyGroupHierarchyPathArrayInput)(nil)).Elem(), UserHierarchyGroupHierarchyPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelFifeInput)(nil)).Elem(), UserHierarchyGroupHierarchyPathLevelFifeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelFifeArrayInput)(nil)).Elem(), UserHierarchyGroupHierarchyPathLevelFifeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelFourInput)(nil)).Elem(), UserHierarchyGroupHierarchyPathLevelFourArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelFourArrayInput)(nil)).Elem(), UserHierarchyGroupHierarchyPathLevelFourArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelOneInput)(nil)).Elem(), UserHierarchyGroupHierarchyPathLevelOneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelOneArrayInput)(nil)).Elem(), UserHierarchyGroupHierarchyPathLevelOneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelThreeInput)(nil)).Elem(), UserHierarchyGroupHierarchyPathLevelThreeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelThreeArrayInput)(nil)).Elem(), UserHierarchyGroupHierarchyPathLevelThreeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelTwoInput)(nil)).Elem(), UserHierarchyGroupHierarchyPathLevelTwoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyGroupHierarchyPathLevelTwoArrayInput)(nil)).Elem(), UserHierarchyGroupHierarchyPathLevelTwoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructurePtrInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFiveInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelFiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFivePtrInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelFiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFourInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelFourArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelFourPtrInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelFourArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelOneInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelOneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelOnePtrInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelOneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelThreeInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelThreeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelThreePtrInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelThreeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelTwoInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelTwoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureHierarchyStructureLevelTwoPtrInput)(nil)).Elem(), UserHierarchyStructureHierarchyStructureLevelTwoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserIdentityInfoInput)(nil)).Elem(), UserIdentityInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserIdentityInfoPtrInput)(nil)).Elem(), UserIdentityInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPhoneConfigInput)(nil)).Elem(), UserPhoneConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPhoneConfigPtrInput)(nil)).Elem(), UserPhoneConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBotAssociationLexBotInput)(nil)).Elem(), GetBotAssociationLexBotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoursOfOperationConfigInput)(nil)).Elem(), GetHoursOfOperationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoursOfOperationConfigArrayInput)(nil)).Elem(), GetHoursOfOperationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoursOfOperationConfigEndTimeInput)(nil)).Elem(), GetHoursOfOperationConfigEndTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoursOfOperationConfigEndTimeArrayInput)(nil)).Elem(), GetHoursOfOperationConfigEndTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoursOfOperationConfigStartTimeInput)(nil)).Elem(), GetHoursOfOperationConfigStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHoursOfOperationConfigStartTimeArrayInput)(nil)).Elem(), GetHoursOfOperationConfigStartTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceStorageConfigStorageConfigInput)(nil)).Elem(), GetInstanceStorageConfigStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceStorageConfigStorageConfigArrayInput)(nil)).Elem(), GetInstanceStorageConfigStorageConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigInput)(nil)).Elem(), GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayInput)(nil)).Elem(), GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisStreamConfigInput)(nil)).Elem(), GetInstanceStorageConfigStorageConfigKinesisStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayInput)(nil)).Elem(), GetInstanceStorageConfigStorageConfigKinesisStreamConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigInput)(nil)).Elem(), GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayInput)(nil)).Elem(), GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigInput)(nil)).Elem(), GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayInput)(nil)).Elem(), GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceStorageConfigStorageConfigS3ConfigInput)(nil)).Elem(), GetInstanceStorageConfigStorageConfigS3ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceStorageConfigStorageConfigS3ConfigArrayInput)(nil)).Elem(), GetInstanceStorageConfigStorageConfigS3ConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigInput)(nil)).Elem(), GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayInput)(nil)).Elem(), GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueOutboundCallerConfigInput)(nil)).Elem(), GetQueueOutboundCallerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQueueOutboundCallerConfigArrayInput)(nil)).Elem(), GetQueueOutboundCallerConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigArrayInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigPhoneConfigInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigPhoneConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigPhoneConfigArrayInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigPhoneConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigQueueConfigInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigQueueConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigQueueConfigArrayInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigQueueConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigUserConfigInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigUserConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuickConnectQuickConnectConfigUserConfigArrayInput)(nil)).Elem(), GetQuickConnectQuickConnectConfigUserConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutingProfileMediaConcurrencyInput)(nil)).Elem(), GetRoutingProfileMediaConcurrencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutingProfileMediaConcurrencyArrayInput)(nil)).Elem(), GetRoutingProfileMediaConcurrencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutingProfileQueueConfigInput)(nil)).Elem(), GetRoutingProfileQueueConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutingProfileQueueConfigArrayInput)(nil)).Elem(), GetRoutingProfileQueueConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathInput)(nil)).Elem(), GetUserHierarchyGroupHierarchyPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathArrayInput)(nil)).Elem(), GetUserHierarchyGroupHierarchyPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelFifeInput)(nil)).Elem(), GetUserHierarchyGroupHierarchyPathLevelFifeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelFifeArrayInput)(nil)).Elem(), GetUserHierarchyGroupHierarchyPathLevelFifeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelFourInput)(nil)).Elem(), GetUserHierarchyGroupHierarchyPathLevelFourArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelFourArrayInput)(nil)).Elem(), GetUserHierarchyGroupHierarchyPathLevelFourArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelOneInput)(nil)).Elem(), GetUserHierarchyGroupHierarchyPathLevelOneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelOneArrayInput)(nil)).Elem(), GetUserHierarchyGroupHierarchyPathLevelOneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelThreeInput)(nil)).Elem(), GetUserHierarchyGroupHierarchyPathLevelThreeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelThreeArrayInput)(nil)).Elem(), GetUserHierarchyGroupHierarchyPathLevelThreeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelTwoInput)(nil)).Elem(), GetUserHierarchyGroupHierarchyPathLevelTwoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyGroupHierarchyPathLevelTwoArrayInput)(nil)).Elem(), GetUserHierarchyGroupHierarchyPathLevelTwoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureInput)(nil)).Elem(), GetUserHierarchyStructureHierarchyStructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureArrayInput)(nil)).Elem(), GetUserHierarchyStructureHierarchyStructureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelFifeInput)(nil)).Elem(), GetUserHierarchyStructureHierarchyStructureLevelFifeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelFifeArrayInput)(nil)).Elem(), GetUserHierarchyStructureHierarchyStructureLevelFifeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelFourInput)(nil)).Elem(), GetUserHierarchyStructureHierarchyStructureLevelFourArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelFourArrayInput)(nil)).Elem(), GetUserHierarchyStructureHierarchyStructureLevelFourArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelOneInput)(nil)).Elem(), GetUserHierarchyStructureHierarchyStructureLevelOneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelOneArrayInput)(nil)).Elem(), GetUserHierarchyStructureHierarchyStructureLevelOneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelThreeInput)(nil)).Elem(), GetUserHierarchyStructureHierarchyStructureLevelThreeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelThreeArrayInput)(nil)).Elem(), GetUserHierarchyStructureHierarchyStructureLevelThreeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelTwoInput)(nil)).Elem(), GetUserHierarchyStructureHierarchyStructureLevelTwoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserHierarchyStructureHierarchyStructureLevelTwoArrayInput)(nil)).Elem(), GetUserHierarchyStructureHierarchyStructureLevelTwoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserIdentityInfoInput)(nil)).Elem(), GetUserIdentityInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserIdentityInfoArrayInput)(nil)).Elem(), GetUserIdentityInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserPhoneConfigInput)(nil)).Elem(), GetUserPhoneConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserPhoneConfigArrayInput)(nil)).Elem(), GetUserPhoneConfigArray{})
	pulumi.RegisterOutputType(BotAssociationLexBotOutput{})
	pulumi.RegisterOutputType(BotAssociationLexBotPtrOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigArrayOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigEndTimeOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigStartTimeOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageConfigKinesisFirehoseConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageConfigKinesisStreamConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageConfigKinesisStreamConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageConfigS3ConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageConfigS3ConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(PhoneNumberStatusOutput{})
	pulumi.RegisterOutputType(PhoneNumberStatusArrayOutput{})
	pulumi.RegisterOutputType(QueueOutboundCallerConfigOutput{})
	pulumi.RegisterOutputType(QueueOutboundCallerConfigPtrOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigPhoneConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigPhoneConfigArrayOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigQueueConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigQueueConfigArrayOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigUserConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectConfigUserConfigArrayOutput{})
	pulumi.RegisterOutputType(RoutingProfileMediaConcurrencyOutput{})
	pulumi.RegisterOutputType(RoutingProfileMediaConcurrencyArrayOutput{})
	pulumi.RegisterOutputType(RoutingProfileQueueConfigOutput{})
	pulumi.RegisterOutputType(RoutingProfileQueueConfigArrayOutput{})
	pulumi.RegisterOutputType(UserHierarchyGroupHierarchyPathOutput{})
	pulumi.RegisterOutputType(UserHierarchyGroupHierarchyPathArrayOutput{})
	pulumi.RegisterOutputType(UserHierarchyGroupHierarchyPathLevelFifeOutput{})
	pulumi.RegisterOutputType(UserHierarchyGroupHierarchyPathLevelFifeArrayOutput{})
	pulumi.RegisterOutputType(UserHierarchyGroupHierarchyPathLevelFourOutput{})
	pulumi.RegisterOutputType(UserHierarchyGroupHierarchyPathLevelFourArrayOutput{})
	pulumi.RegisterOutputType(UserHierarchyGroupHierarchyPathLevelOneOutput{})
	pulumi.RegisterOutputType(UserHierarchyGroupHierarchyPathLevelOneArrayOutput{})
	pulumi.RegisterOutputType(UserHierarchyGroupHierarchyPathLevelThreeOutput{})
	pulumi.RegisterOutputType(UserHierarchyGroupHierarchyPathLevelThreeArrayOutput{})
	pulumi.RegisterOutputType(UserHierarchyGroupHierarchyPathLevelTwoOutput{})
	pulumi.RegisterOutputType(UserHierarchyGroupHierarchyPathLevelTwoArrayOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructurePtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelFiveOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelFivePtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelFourOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelFourPtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelOneOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelOnePtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelThreeOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelThreePtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelTwoOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureHierarchyStructureLevelTwoPtrOutput{})
	pulumi.RegisterOutputType(UserIdentityInfoOutput{})
	pulumi.RegisterOutputType(UserIdentityInfoPtrOutput{})
	pulumi.RegisterOutputType(UserPhoneConfigOutput{})
	pulumi.RegisterOutputType(UserPhoneConfigPtrOutput{})
	pulumi.RegisterOutputType(GetBotAssociationLexBotOutput{})
	pulumi.RegisterOutputType(GetHoursOfOperationConfigOutput{})
	pulumi.RegisterOutputType(GetHoursOfOperationConfigArrayOutput{})
	pulumi.RegisterOutputType(GetHoursOfOperationConfigEndTimeOutput{})
	pulumi.RegisterOutputType(GetHoursOfOperationConfigEndTimeArrayOutput{})
	pulumi.RegisterOutputType(GetHoursOfOperationConfigStartTimeOutput{})
	pulumi.RegisterOutputType(GetHoursOfOperationConfigStartTimeArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceStorageConfigStorageConfigOutput{})
	pulumi.RegisterOutputType(GetInstanceStorageConfigStorageConfigArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigOutput{})
	pulumi.RegisterOutputType(GetInstanceStorageConfigStorageConfigKinesisFirehoseConfigArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceStorageConfigStorageConfigKinesisStreamConfigOutput{})
	pulumi.RegisterOutputType(GetInstanceStorageConfigStorageConfigKinesisStreamConfigArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigOutput{})
	pulumi.RegisterOutputType(GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigOutput{})
	pulumi.RegisterOutputType(GetInstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceStorageConfigStorageConfigS3ConfigOutput{})
	pulumi.RegisterOutputType(GetInstanceStorageConfigStorageConfigS3ConfigArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigOutput{})
	pulumi.RegisterOutputType(GetInstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArrayOutput{})
	pulumi.RegisterOutputType(GetQueueOutboundCallerConfigOutput{})
	pulumi.RegisterOutputType(GetQueueOutboundCallerConfigArrayOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigArrayOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigPhoneConfigOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigPhoneConfigArrayOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigQueueConfigOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigQueueConfigArrayOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigUserConfigOutput{})
	pulumi.RegisterOutputType(GetQuickConnectQuickConnectConfigUserConfigArrayOutput{})
	pulumi.RegisterOutputType(GetRoutingProfileMediaConcurrencyOutput{})
	pulumi.RegisterOutputType(GetRoutingProfileMediaConcurrencyArrayOutput{})
	pulumi.RegisterOutputType(GetRoutingProfileQueueConfigOutput{})
	pulumi.RegisterOutputType(GetRoutingProfileQueueConfigArrayOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyGroupHierarchyPathOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyGroupHierarchyPathArrayOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyGroupHierarchyPathLevelFifeOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyGroupHierarchyPathLevelFifeArrayOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyGroupHierarchyPathLevelFourOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyGroupHierarchyPathLevelFourArrayOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyGroupHierarchyPathLevelOneOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyGroupHierarchyPathLevelOneArrayOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyGroupHierarchyPathLevelThreeOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyGroupHierarchyPathLevelThreeArrayOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyGroupHierarchyPathLevelTwoOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyGroupHierarchyPathLevelTwoArrayOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyStructureHierarchyStructureOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyStructureHierarchyStructureArrayOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyStructureHierarchyStructureLevelFifeOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyStructureHierarchyStructureLevelFifeArrayOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyStructureHierarchyStructureLevelFourOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyStructureHierarchyStructureLevelFourArrayOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyStructureHierarchyStructureLevelOneOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyStructureHierarchyStructureLevelOneArrayOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyStructureHierarchyStructureLevelThreeOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyStructureHierarchyStructureLevelThreeArrayOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyStructureHierarchyStructureLevelTwoOutput{})
	pulumi.RegisterOutputType(GetUserHierarchyStructureHierarchyStructureLevelTwoArrayOutput{})
	pulumi.RegisterOutputType(GetUserIdentityInfoOutput{})
	pulumi.RegisterOutputType(GetUserIdentityInfoArrayOutput{})
	pulumi.RegisterOutputType(GetUserPhoneConfigOutput{})
	pulumi.RegisterOutputType(GetUserPhoneConfigArrayOutput{})
}
