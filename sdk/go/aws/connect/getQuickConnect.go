// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupQuickConnect(ctx *pulumi.Context, args *LookupQuickConnectArgs, opts ...pulumi.InvokeOption) (*LookupQuickConnectResult, error) {
	var rv LookupQuickConnectResult
	err := ctx.Invoke("aws:connect/getQuickConnect:getQuickConnect", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQuickConnect.
type LookupQuickConnectArgs struct {
	InstanceId     string            `pulumi:"instanceId"`
	Name           *string           `pulumi:"name"`
	QuickConnectId *string           `pulumi:"quickConnectId"`
	Tags           map[string]string `pulumi:"tags"`
}

// A collection of values returned by getQuickConnect.
type LookupQuickConnectResult struct {
	Arn         string `pulumi:"arn"`
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string                              `pulumi:"id"`
	InstanceId          string                              `pulumi:"instanceId"`
	Name                string                              `pulumi:"name"`
	QuickConnectConfigs []GetQuickConnectQuickConnectConfig `pulumi:"quickConnectConfigs"`
	QuickConnectId      string                              `pulumi:"quickConnectId"`
	Tags                map[string]string                   `pulumi:"tags"`
}

func LookupQuickConnectOutput(ctx *pulumi.Context, args LookupQuickConnectOutputArgs, opts ...pulumi.InvokeOption) LookupQuickConnectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupQuickConnectResult, error) {
			args := v.(LookupQuickConnectArgs)
			r, err := LookupQuickConnect(ctx, &args, opts...)
			var s LookupQuickConnectResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupQuickConnectResultOutput)
}

// A collection of arguments for invoking getQuickConnect.
type LookupQuickConnectOutputArgs struct {
	InstanceId     pulumi.StringInput    `pulumi:"instanceId"`
	Name           pulumi.StringPtrInput `pulumi:"name"`
	QuickConnectId pulumi.StringPtrInput `pulumi:"quickConnectId"`
	Tags           pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupQuickConnectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQuickConnectArgs)(nil)).Elem()
}

// A collection of values returned by getQuickConnect.
type LookupQuickConnectResultOutput struct{ *pulumi.OutputState }

func (LookupQuickConnectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQuickConnectResult)(nil)).Elem()
}

func (o LookupQuickConnectResultOutput) ToLookupQuickConnectResultOutput() LookupQuickConnectResultOutput {
	return o
}

func (o LookupQuickConnectResultOutput) ToLookupQuickConnectResultOutputWithContext(ctx context.Context) LookupQuickConnectResultOutput {
	return o
}

func (o LookupQuickConnectResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupQuickConnectResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupQuickConnectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupQuickConnectResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o LookupQuickConnectResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupQuickConnectResultOutput) QuickConnectConfigs() GetQuickConnectQuickConnectConfigArrayOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) []GetQuickConnectQuickConnectConfig { return v.QuickConnectConfigs }).(GetQuickConnectQuickConnectConfigArrayOutput)
}

func (o LookupQuickConnectResultOutput) QuickConnectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) string { return v.QuickConnectId }).(pulumi.StringOutput)
}

func (o LookupQuickConnectResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQuickConnectResultOutput{})
}
