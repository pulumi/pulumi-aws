// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides details about a specific Amazon Connect Quick Connect.
//
// ## Example Usage
//
// By `name`
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/connect"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := connect.LookupQuickConnect(ctx, &connect.LookupQuickConnectArgs{
// 			InstanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
// 			Name:       pulumi.StringRef("Example"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// By `quickConnectId`
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/connect"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := connect.LookupQuickConnect(ctx, &connect.LookupQuickConnectArgs{
// 			InstanceId:     "aaaaaaaa-bbbb-cccc-dddd-111111111111",
// 			QuickConnectId: pulumi.StringRef("cccccccc-bbbb-cccc-dddd-111111111111"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupQuickConnect(ctx *pulumi.Context, args *LookupQuickConnectArgs, opts ...pulumi.InvokeOption) (*LookupQuickConnectResult, error) {
	var rv LookupQuickConnectResult
	err := ctx.Invoke("aws:connect/getQuickConnect:getQuickConnect", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQuickConnect.
type LookupQuickConnectArgs struct {
	// Reference to the hosting Amazon Connect Instance
	InstanceId string `pulumi:"instanceId"`
	// Returns information on a specific Quick Connect by name
	Name *string `pulumi:"name"`
	// Returns information on a specific Quick Connect by Quick Connect id
	QuickConnectId *string `pulumi:"quickConnectId"`
	// A map of tags to assign to the Quick Connect.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getQuickConnect.
type LookupQuickConnectResult struct {
	// The Amazon Resource Name (ARN) of the Quick Connect.
	Arn string `pulumi:"arn"`
	// Specifies the description of the Quick Connect.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	Name       string `pulumi:"name"`
	// A block that defines the configuration information for the Quick Connect: `quickConnectType` and one of `phoneConfig`, `queueConfig`, `userConfig` . The Quick Connect Config block is documented below.
	QuickConnectConfigs []GetQuickConnectQuickConnectConfig `pulumi:"quickConnectConfigs"`
	// The identifier for the Quick Connect.
	QuickConnectId string `pulumi:"quickConnectId"`
	// A map of tags to assign to the Quick Connect.
	Tags map[string]string `pulumi:"tags"`
}

func LookupQuickConnectOutput(ctx *pulumi.Context, args LookupQuickConnectOutputArgs, opts ...pulumi.InvokeOption) LookupQuickConnectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupQuickConnectResult, error) {
			args := v.(LookupQuickConnectArgs)
			r, err := LookupQuickConnect(ctx, &args, opts...)
			return *r, err
		}).(LookupQuickConnectResultOutput)
}

// A collection of arguments for invoking getQuickConnect.
type LookupQuickConnectOutputArgs struct {
	// Reference to the hosting Amazon Connect Instance
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Returns information on a specific Quick Connect by name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Returns information on a specific Quick Connect by Quick Connect id
	QuickConnectId pulumi.StringPtrInput `pulumi:"quickConnectId"`
	// A map of tags to assign to the Quick Connect.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupQuickConnectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQuickConnectArgs)(nil)).Elem()
}

// A collection of values returned by getQuickConnect.
type LookupQuickConnectResultOutput struct{ *pulumi.OutputState }

func (LookupQuickConnectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQuickConnectResult)(nil)).Elem()
}

func (o LookupQuickConnectResultOutput) ToLookupQuickConnectResultOutput() LookupQuickConnectResultOutput {
	return o
}

func (o LookupQuickConnectResultOutput) ToLookupQuickConnectResultOutputWithContext(ctx context.Context) LookupQuickConnectResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the Quick Connect.
func (o LookupQuickConnectResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Specifies the description of the Quick Connect.
func (o LookupQuickConnectResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupQuickConnectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupQuickConnectResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o LookupQuickConnectResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) string { return v.Name }).(pulumi.StringOutput)
}

// A block that defines the configuration information for the Quick Connect: `quickConnectType` and one of `phoneConfig`, `queueConfig`, `userConfig` . The Quick Connect Config block is documented below.
func (o LookupQuickConnectResultOutput) QuickConnectConfigs() GetQuickConnectQuickConnectConfigArrayOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) []GetQuickConnectQuickConnectConfig { return v.QuickConnectConfigs }).(GetQuickConnectQuickConnectConfigArrayOutput)
}

// The identifier for the Quick Connect.
func (o LookupQuickConnectResultOutput) QuickConnectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) string { return v.QuickConnectId }).(pulumi.StringOutput)
}

// A map of tags to assign to the Quick Connect.
func (o LookupQuickConnectResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupQuickConnectResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQuickConnectResultOutput{})
}
