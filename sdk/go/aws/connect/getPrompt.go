// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides details about a specific Amazon Connect Prompt.
//
// ## Example Usage
//
// By `name`
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/connect"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := connect.GetPrompt(ctx, &connect.GetPromptArgs{
//				InstanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
//				Name:       "Beep.wav",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPrompt(ctx *pulumi.Context, args *GetPromptArgs, opts ...pulumi.InvokeOption) (*GetPromptResult, error) {
	var rv GetPromptResult
	err := ctx.Invoke("aws:connect/getPrompt:getPrompt", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrompt.
type GetPromptArgs struct {
	// Reference to the hosting Amazon Connect Instance
	InstanceId string `pulumi:"instanceId"`
	// Returns information on a specific Prompt by name
	Name string `pulumi:"name"`
}

// A collection of values returned by getPrompt.
type GetPromptResult struct {
	// ARN of the Prompt.
	Arn string `pulumi:"arn"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	Name       string `pulumi:"name"`
	// Identifier for the prompt.
	PromptId string `pulumi:"promptId"`
}

func GetPromptOutput(ctx *pulumi.Context, args GetPromptOutputArgs, opts ...pulumi.InvokeOption) GetPromptResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPromptResult, error) {
			args := v.(GetPromptArgs)
			r, err := GetPrompt(ctx, &args, opts...)
			var s GetPromptResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPromptResultOutput)
}

// A collection of arguments for invoking getPrompt.
type GetPromptOutputArgs struct {
	// Reference to the hosting Amazon Connect Instance
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Returns information on a specific Prompt by name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPromptOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPromptArgs)(nil)).Elem()
}

// A collection of values returned by getPrompt.
type GetPromptResultOutput struct{ *pulumi.OutputState }

func (GetPromptResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPromptResult)(nil)).Elem()
}

func (o GetPromptResultOutput) ToGetPromptResultOutput() GetPromptResultOutput {
	return o
}

func (o GetPromptResultOutput) ToGetPromptResultOutputWithContext(ctx context.Context) GetPromptResultOutput {
	return o
}

// ARN of the Prompt.
func (o GetPromptResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetPromptResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPromptResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPromptResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPromptResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPromptResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetPromptResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPromptResult) string { return v.Name }).(pulumi.StringOutput)
}

// Identifier for the prompt.
func (o GetPromptResultOutput) PromptId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPromptResult) string { return v.PromptId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPromptResultOutput{})
}
