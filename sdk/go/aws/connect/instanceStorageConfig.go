// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InstanceStorageConfig struct {
	pulumi.CustomResourceState

	AssociationId pulumi.StringOutput                      `pulumi:"associationId"`
	InstanceId    pulumi.StringOutput                      `pulumi:"instanceId"`
	ResourceType  pulumi.StringOutput                      `pulumi:"resourceType"`
	StorageConfig InstanceStorageConfigStorageConfigOutput `pulumi:"storageConfig"`
}

// NewInstanceStorageConfig registers a new resource with the given unique name, arguments, and options.
func NewInstanceStorageConfig(ctx *pulumi.Context,
	name string, args *InstanceStorageConfigArgs, opts ...pulumi.ResourceOption) (*InstanceStorageConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.ResourceType == nil {
		return nil, errors.New("invalid value for required argument 'ResourceType'")
	}
	if args.StorageConfig == nil {
		return nil, errors.New("invalid value for required argument 'StorageConfig'")
	}
	var resource InstanceStorageConfig
	err := ctx.RegisterResource("aws:connect/instanceStorageConfig:InstanceStorageConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceStorageConfig gets an existing InstanceStorageConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceStorageConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceStorageConfigState, opts ...pulumi.ResourceOption) (*InstanceStorageConfig, error) {
	var resource InstanceStorageConfig
	err := ctx.ReadResource("aws:connect/instanceStorageConfig:InstanceStorageConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceStorageConfig resources.
type instanceStorageConfigState struct {
	AssociationId *string                             `pulumi:"associationId"`
	InstanceId    *string                             `pulumi:"instanceId"`
	ResourceType  *string                             `pulumi:"resourceType"`
	StorageConfig *InstanceStorageConfigStorageConfig `pulumi:"storageConfig"`
}

type InstanceStorageConfigState struct {
	AssociationId pulumi.StringPtrInput
	InstanceId    pulumi.StringPtrInput
	ResourceType  pulumi.StringPtrInput
	StorageConfig InstanceStorageConfigStorageConfigPtrInput
}

func (InstanceStorageConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceStorageConfigState)(nil)).Elem()
}

type instanceStorageConfigArgs struct {
	InstanceId    string                             `pulumi:"instanceId"`
	ResourceType  string                             `pulumi:"resourceType"`
	StorageConfig InstanceStorageConfigStorageConfig `pulumi:"storageConfig"`
}

// The set of arguments for constructing a InstanceStorageConfig resource.
type InstanceStorageConfigArgs struct {
	InstanceId    pulumi.StringInput
	ResourceType  pulumi.StringInput
	StorageConfig InstanceStorageConfigStorageConfigInput
}

func (InstanceStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceStorageConfigArgs)(nil)).Elem()
}

type InstanceStorageConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigOutput() InstanceStorageConfigOutput
	ToInstanceStorageConfigOutputWithContext(ctx context.Context) InstanceStorageConfigOutput
}

func (*InstanceStorageConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfig)(nil)).Elem()
}

func (i *InstanceStorageConfig) ToInstanceStorageConfigOutput() InstanceStorageConfigOutput {
	return i.ToInstanceStorageConfigOutputWithContext(context.Background())
}

func (i *InstanceStorageConfig) ToInstanceStorageConfigOutputWithContext(ctx context.Context) InstanceStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigOutput)
}

// InstanceStorageConfigArrayInput is an input type that accepts InstanceStorageConfigArray and InstanceStorageConfigArrayOutput values.
// You can construct a concrete instance of `InstanceStorageConfigArrayInput` via:
//
//	InstanceStorageConfigArray{ InstanceStorageConfigArgs{...} }
type InstanceStorageConfigArrayInput interface {
	pulumi.Input

	ToInstanceStorageConfigArrayOutput() InstanceStorageConfigArrayOutput
	ToInstanceStorageConfigArrayOutputWithContext(context.Context) InstanceStorageConfigArrayOutput
}

type InstanceStorageConfigArray []InstanceStorageConfigInput

func (InstanceStorageConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceStorageConfig)(nil)).Elem()
}

func (i InstanceStorageConfigArray) ToInstanceStorageConfigArrayOutput() InstanceStorageConfigArrayOutput {
	return i.ToInstanceStorageConfigArrayOutputWithContext(context.Background())
}

func (i InstanceStorageConfigArray) ToInstanceStorageConfigArrayOutputWithContext(ctx context.Context) InstanceStorageConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigArrayOutput)
}

// InstanceStorageConfigMapInput is an input type that accepts InstanceStorageConfigMap and InstanceStorageConfigMapOutput values.
// You can construct a concrete instance of `InstanceStorageConfigMapInput` via:
//
//	InstanceStorageConfigMap{ "key": InstanceStorageConfigArgs{...} }
type InstanceStorageConfigMapInput interface {
	pulumi.Input

	ToInstanceStorageConfigMapOutput() InstanceStorageConfigMapOutput
	ToInstanceStorageConfigMapOutputWithContext(context.Context) InstanceStorageConfigMapOutput
}

type InstanceStorageConfigMap map[string]InstanceStorageConfigInput

func (InstanceStorageConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceStorageConfig)(nil)).Elem()
}

func (i InstanceStorageConfigMap) ToInstanceStorageConfigMapOutput() InstanceStorageConfigMapOutput {
	return i.ToInstanceStorageConfigMapOutputWithContext(context.Background())
}

func (i InstanceStorageConfigMap) ToInstanceStorageConfigMapOutputWithContext(ctx context.Context) InstanceStorageConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigMapOutput)
}

type InstanceStorageConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfig)(nil)).Elem()
}

func (o InstanceStorageConfigOutput) ToInstanceStorageConfigOutput() InstanceStorageConfigOutput {
	return o
}

func (o InstanceStorageConfigOutput) ToInstanceStorageConfigOutputWithContext(ctx context.Context) InstanceStorageConfigOutput {
	return o
}

func (o InstanceStorageConfigOutput) AssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceStorageConfig) pulumi.StringOutput { return v.AssociationId }).(pulumi.StringOutput)
}

func (o InstanceStorageConfigOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceStorageConfig) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

func (o InstanceStorageConfigOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceStorageConfig) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

func (o InstanceStorageConfigOutput) StorageConfig() InstanceStorageConfigStorageConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfig) InstanceStorageConfigStorageConfigOutput { return v.StorageConfig }).(InstanceStorageConfigStorageConfigOutput)
}

type InstanceStorageConfigArrayOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceStorageConfig)(nil)).Elem()
}

func (o InstanceStorageConfigArrayOutput) ToInstanceStorageConfigArrayOutput() InstanceStorageConfigArrayOutput {
	return o
}

func (o InstanceStorageConfigArrayOutput) ToInstanceStorageConfigArrayOutputWithContext(ctx context.Context) InstanceStorageConfigArrayOutput {
	return o
}

func (o InstanceStorageConfigArrayOutput) Index(i pulumi.IntInput) InstanceStorageConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InstanceStorageConfig {
		return vs[0].([]*InstanceStorageConfig)[vs[1].(int)]
	}).(InstanceStorageConfigOutput)
}

type InstanceStorageConfigMapOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceStorageConfig)(nil)).Elem()
}

func (o InstanceStorageConfigMapOutput) ToInstanceStorageConfigMapOutput() InstanceStorageConfigMapOutput {
	return o
}

func (o InstanceStorageConfigMapOutput) ToInstanceStorageConfigMapOutputWithContext(ctx context.Context) InstanceStorageConfigMapOutput {
	return o
}

func (o InstanceStorageConfigMapOutput) MapIndex(k pulumi.StringInput) InstanceStorageConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InstanceStorageConfig {
		return vs[0].(map[string]*InstanceStorageConfig)[vs[1].(string)]
	}).(InstanceStorageConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigInput)(nil)).Elem(), &InstanceStorageConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigArrayInput)(nil)).Elem(), InstanceStorageConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigMapInput)(nil)).Elem(), InstanceStorageConfigMap{})
	pulumi.RegisterOutputType(InstanceStorageConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigArrayOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigMapOutput{})
}
