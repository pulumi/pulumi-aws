// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Connect Hours of Operation resource. For more information see
// [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/connect"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := connect.NewHoursOfOperation(ctx, "test", &connect.HoursOfOperationArgs{
//				Configs: connect.HoursOfOperationConfigArray{
//					&connect.HoursOfOperationConfigArgs{
//						Day: pulumi.String("MONDAY"),
//						EndTime: &connect.HoursOfOperationConfigEndTimeArgs{
//							Hours:   pulumi.Int(23),
//							Minutes: pulumi.Int(8),
//						},
//						StartTime: &connect.HoursOfOperationConfigStartTimeArgs{
//							Hours:   pulumi.Int(8),
//							Minutes: pulumi.Int(0),
//						},
//					},
//					&connect.HoursOfOperationConfigArgs{
//						Day: pulumi.String("TUESDAY"),
//						EndTime: &connect.HoursOfOperationConfigEndTimeArgs{
//							Hours:   pulumi.Int(21),
//							Minutes: pulumi.Int(0),
//						},
//						StartTime: &connect.HoursOfOperationConfigStartTimeArgs{
//							Hours:   pulumi.Int(9),
//							Minutes: pulumi.Int(0),
//						},
//					},
//				},
//				Description: pulumi.String("Monday office hours"),
//				InstanceId:  pulumi.String("aaaaaaaa-bbbb-cccc-dddd-111111111111"),
//				Tags: pulumi.StringMap{
//					"Name": pulumi.String("Example Hours of Operation"),
//				},
//				TimeZone: pulumi.String("EST"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Amazon Connect Hours of Operations using the `instance_id` and `hours_of_operation_id` separated by a colon (`:`). For example:
//
// ```sh
//
//	$ pulumi import aws:connect/hoursOfOperation:HoursOfOperation example f1288a1f-6193-445a-b47e-af739b2:c1d4e5f6-1b3c-1b3c-1b3c-c1d4e5f6c1d4e5
//
// ```
type HoursOfOperation struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the Hours of Operation.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// One or more config blocks which define the configuration information for the hours of operation: day, start time, and end time . Config blocks are documented below.
	Configs HoursOfOperationConfigArrayOutput `pulumi:"configs"`
	// Specifies the description of the Hours of Operation.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The identifier for the hours of operation.
	HoursOfOperationId pulumi.StringOutput `pulumi:"hoursOfOperationId"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Specifies the name of the Hours of Operation.
	Name pulumi.StringOutput `pulumi:"name"`
	// Tags to apply to the Hours of Operation. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// Specifies the time zone of the Hours of Operation.
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
}

// NewHoursOfOperation registers a new resource with the given unique name, arguments, and options.
func NewHoursOfOperation(ctx *pulumi.Context,
	name string, args *HoursOfOperationArgs, opts ...pulumi.ResourceOption) (*HoursOfOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configs == nil {
		return nil, errors.New("invalid value for required argument 'Configs'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.TimeZone == nil {
		return nil, errors.New("invalid value for required argument 'TimeZone'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HoursOfOperation
	err := ctx.RegisterResource("aws:connect/hoursOfOperation:HoursOfOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHoursOfOperation gets an existing HoursOfOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHoursOfOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HoursOfOperationState, opts ...pulumi.ResourceOption) (*HoursOfOperation, error) {
	var resource HoursOfOperation
	err := ctx.ReadResource("aws:connect/hoursOfOperation:HoursOfOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HoursOfOperation resources.
type hoursOfOperationState struct {
	// The Amazon Resource Name (ARN) of the Hours of Operation.
	Arn *string `pulumi:"arn"`
	// One or more config blocks which define the configuration information for the hours of operation: day, start time, and end time . Config blocks are documented below.
	Configs []HoursOfOperationConfig `pulumi:"configs"`
	// Specifies the description of the Hours of Operation.
	Description *string `pulumi:"description"`
	// The identifier for the hours of operation.
	HoursOfOperationId *string `pulumi:"hoursOfOperationId"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies the name of the Hours of Operation.
	Name *string `pulumi:"name"`
	// Tags to apply to the Hours of Operation. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Specifies the time zone of the Hours of Operation.
	TimeZone *string `pulumi:"timeZone"`
}

type HoursOfOperationState struct {
	// The Amazon Resource Name (ARN) of the Hours of Operation.
	Arn pulumi.StringPtrInput
	// One or more config blocks which define the configuration information for the hours of operation: day, start time, and end time . Config blocks are documented below.
	Configs HoursOfOperationConfigArrayInput
	// Specifies the description of the Hours of Operation.
	Description pulumi.StringPtrInput
	// The identifier for the hours of operation.
	HoursOfOperationId pulumi.StringPtrInput
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumi.StringPtrInput
	// Specifies the name of the Hours of Operation.
	Name pulumi.StringPtrInput
	// Tags to apply to the Hours of Operation. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapInput
	// Specifies the time zone of the Hours of Operation.
	TimeZone pulumi.StringPtrInput
}

func (HoursOfOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*hoursOfOperationState)(nil)).Elem()
}

type hoursOfOperationArgs struct {
	// One or more config blocks which define the configuration information for the hours of operation: day, start time, and end time . Config blocks are documented below.
	Configs []HoursOfOperationConfig `pulumi:"configs"`
	// Specifies the description of the Hours of Operation.
	Description *string `pulumi:"description"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the name of the Hours of Operation.
	Name *string `pulumi:"name"`
	// Tags to apply to the Hours of Operation. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the time zone of the Hours of Operation.
	TimeZone string `pulumi:"timeZone"`
}

// The set of arguments for constructing a HoursOfOperation resource.
type HoursOfOperationArgs struct {
	// One or more config blocks which define the configuration information for the hours of operation: day, start time, and end time . Config blocks are documented below.
	Configs HoursOfOperationConfigArrayInput
	// Specifies the description of the Hours of Operation.
	Description pulumi.StringPtrInput
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumi.StringInput
	// Specifies the name of the Hours of Operation.
	Name pulumi.StringPtrInput
	// Tags to apply to the Hours of Operation. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Specifies the time zone of the Hours of Operation.
	TimeZone pulumi.StringInput
}

func (HoursOfOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hoursOfOperationArgs)(nil)).Elem()
}

type HoursOfOperationInput interface {
	pulumi.Input

	ToHoursOfOperationOutput() HoursOfOperationOutput
	ToHoursOfOperationOutputWithContext(ctx context.Context) HoursOfOperationOutput
}

func (*HoursOfOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**HoursOfOperation)(nil)).Elem()
}

func (i *HoursOfOperation) ToHoursOfOperationOutput() HoursOfOperationOutput {
	return i.ToHoursOfOperationOutputWithContext(context.Background())
}

func (i *HoursOfOperation) ToHoursOfOperationOutputWithContext(ctx context.Context) HoursOfOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationOutput)
}

func (i *HoursOfOperation) ToOutput(ctx context.Context) pulumix.Output[*HoursOfOperation] {
	return pulumix.Output[*HoursOfOperation]{
		OutputState: i.ToHoursOfOperationOutputWithContext(ctx).OutputState,
	}
}

// HoursOfOperationArrayInput is an input type that accepts HoursOfOperationArray and HoursOfOperationArrayOutput values.
// You can construct a concrete instance of `HoursOfOperationArrayInput` via:
//
//	HoursOfOperationArray{ HoursOfOperationArgs{...} }
type HoursOfOperationArrayInput interface {
	pulumi.Input

	ToHoursOfOperationArrayOutput() HoursOfOperationArrayOutput
	ToHoursOfOperationArrayOutputWithContext(context.Context) HoursOfOperationArrayOutput
}

type HoursOfOperationArray []HoursOfOperationInput

func (HoursOfOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HoursOfOperation)(nil)).Elem()
}

func (i HoursOfOperationArray) ToHoursOfOperationArrayOutput() HoursOfOperationArrayOutput {
	return i.ToHoursOfOperationArrayOutputWithContext(context.Background())
}

func (i HoursOfOperationArray) ToHoursOfOperationArrayOutputWithContext(ctx context.Context) HoursOfOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationArrayOutput)
}

func (i HoursOfOperationArray) ToOutput(ctx context.Context) pulumix.Output[[]*HoursOfOperation] {
	return pulumix.Output[[]*HoursOfOperation]{
		OutputState: i.ToHoursOfOperationArrayOutputWithContext(ctx).OutputState,
	}
}

// HoursOfOperationMapInput is an input type that accepts HoursOfOperationMap and HoursOfOperationMapOutput values.
// You can construct a concrete instance of `HoursOfOperationMapInput` via:
//
//	HoursOfOperationMap{ "key": HoursOfOperationArgs{...} }
type HoursOfOperationMapInput interface {
	pulumi.Input

	ToHoursOfOperationMapOutput() HoursOfOperationMapOutput
	ToHoursOfOperationMapOutputWithContext(context.Context) HoursOfOperationMapOutput
}

type HoursOfOperationMap map[string]HoursOfOperationInput

func (HoursOfOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HoursOfOperation)(nil)).Elem()
}

func (i HoursOfOperationMap) ToHoursOfOperationMapOutput() HoursOfOperationMapOutput {
	return i.ToHoursOfOperationMapOutputWithContext(context.Background())
}

func (i HoursOfOperationMap) ToHoursOfOperationMapOutputWithContext(ctx context.Context) HoursOfOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationMapOutput)
}

func (i HoursOfOperationMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*HoursOfOperation] {
	return pulumix.Output[map[string]*HoursOfOperation]{
		OutputState: i.ToHoursOfOperationMapOutputWithContext(ctx).OutputState,
	}
}

type HoursOfOperationOutput struct{ *pulumi.OutputState }

func (HoursOfOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HoursOfOperation)(nil)).Elem()
}

func (o HoursOfOperationOutput) ToHoursOfOperationOutput() HoursOfOperationOutput {
	return o
}

func (o HoursOfOperationOutput) ToHoursOfOperationOutputWithContext(ctx context.Context) HoursOfOperationOutput {
	return o
}

func (o HoursOfOperationOutput) ToOutput(ctx context.Context) pulumix.Output[*HoursOfOperation] {
	return pulumix.Output[*HoursOfOperation]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the Hours of Operation.
func (o HoursOfOperationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *HoursOfOperation) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// One or more config blocks which define the configuration information for the hours of operation: day, start time, and end time . Config blocks are documented below.
func (o HoursOfOperationOutput) Configs() HoursOfOperationConfigArrayOutput {
	return o.ApplyT(func(v *HoursOfOperation) HoursOfOperationConfigArrayOutput { return v.Configs }).(HoursOfOperationConfigArrayOutput)
}

// Specifies the description of the Hours of Operation.
func (o HoursOfOperationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HoursOfOperation) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The identifier for the hours of operation.
func (o HoursOfOperationOutput) HoursOfOperationId() pulumi.StringOutput {
	return o.ApplyT(func(v *HoursOfOperation) pulumi.StringOutput { return v.HoursOfOperationId }).(pulumi.StringOutput)
}

// Specifies the identifier of the hosting Amazon Connect Instance.
func (o HoursOfOperationOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *HoursOfOperation) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies the name of the Hours of Operation.
func (o HoursOfOperationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HoursOfOperation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Tags to apply to the Hours of Operation. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o HoursOfOperationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HoursOfOperation) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o HoursOfOperationOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HoursOfOperation) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// Specifies the time zone of the Hours of Operation.
func (o HoursOfOperationOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *HoursOfOperation) pulumi.StringOutput { return v.TimeZone }).(pulumi.StringOutput)
}

type HoursOfOperationArrayOutput struct{ *pulumi.OutputState }

func (HoursOfOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HoursOfOperation)(nil)).Elem()
}

func (o HoursOfOperationArrayOutput) ToHoursOfOperationArrayOutput() HoursOfOperationArrayOutput {
	return o
}

func (o HoursOfOperationArrayOutput) ToHoursOfOperationArrayOutputWithContext(ctx context.Context) HoursOfOperationArrayOutput {
	return o
}

func (o HoursOfOperationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*HoursOfOperation] {
	return pulumix.Output[[]*HoursOfOperation]{
		OutputState: o.OutputState,
	}
}

func (o HoursOfOperationArrayOutput) Index(i pulumi.IntInput) HoursOfOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HoursOfOperation {
		return vs[0].([]*HoursOfOperation)[vs[1].(int)]
	}).(HoursOfOperationOutput)
}

type HoursOfOperationMapOutput struct{ *pulumi.OutputState }

func (HoursOfOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HoursOfOperation)(nil)).Elem()
}

func (o HoursOfOperationMapOutput) ToHoursOfOperationMapOutput() HoursOfOperationMapOutput {
	return o
}

func (o HoursOfOperationMapOutput) ToHoursOfOperationMapOutputWithContext(ctx context.Context) HoursOfOperationMapOutput {
	return o
}

func (o HoursOfOperationMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*HoursOfOperation] {
	return pulumix.Output[map[string]*HoursOfOperation]{
		OutputState: o.OutputState,
	}
}

func (o HoursOfOperationMapOutput) MapIndex(k pulumi.StringInput) HoursOfOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HoursOfOperation {
		return vs[0].(map[string]*HoursOfOperation)[vs[1].(string)]
	}).(HoursOfOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationInput)(nil)).Elem(), &HoursOfOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationArrayInput)(nil)).Elem(), HoursOfOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationMapInput)(nil)).Elem(), HoursOfOperationMap{})
	pulumi.RegisterOutputType(HoursOfOperationOutput{})
	pulumi.RegisterOutputType(HoursOfOperationArrayOutput{})
	pulumi.RegisterOutputType(HoursOfOperationMapOutput{})
}
