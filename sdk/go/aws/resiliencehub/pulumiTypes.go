// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resiliencehub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ResiliencyPolicyPolicy struct {
	// Specifies Availability Zone failure policy. See `policy.az`
	Az *ResiliencyPolicyPolicyAz `pulumi:"az"`
	// Specifies Infrastructure failure policy. See `policy.hardware`
	Hardware *ResiliencyPolicyPolicyHardware `pulumi:"hardware"`
	// Specifies Region failure policy. `policy.region`
	Region *ResiliencyPolicyPolicyRegion `pulumi:"region"`
	// Specifies Application failure policy. See `policy.software`
	//
	// The following arguments are optional:
	Software *ResiliencyPolicyPolicySoftware `pulumi:"software"`
}

// ResiliencyPolicyPolicyInput is an input type that accepts ResiliencyPolicyPolicyArgs and ResiliencyPolicyPolicyOutput values.
// You can construct a concrete instance of `ResiliencyPolicyPolicyInput` via:
//
//	ResiliencyPolicyPolicyArgs{...}
type ResiliencyPolicyPolicyInput interface {
	pulumi.Input

	ToResiliencyPolicyPolicyOutput() ResiliencyPolicyPolicyOutput
	ToResiliencyPolicyPolicyOutputWithContext(context.Context) ResiliencyPolicyPolicyOutput
}

type ResiliencyPolicyPolicyArgs struct {
	// Specifies Availability Zone failure policy. See `policy.az`
	Az ResiliencyPolicyPolicyAzPtrInput `pulumi:"az"`
	// Specifies Infrastructure failure policy. See `policy.hardware`
	Hardware ResiliencyPolicyPolicyHardwarePtrInput `pulumi:"hardware"`
	// Specifies Region failure policy. `policy.region`
	Region ResiliencyPolicyPolicyRegionPtrInput `pulumi:"region"`
	// Specifies Application failure policy. See `policy.software`
	//
	// The following arguments are optional:
	Software ResiliencyPolicyPolicySoftwarePtrInput `pulumi:"software"`
}

func (ResiliencyPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResiliencyPolicyPolicy)(nil)).Elem()
}

func (i ResiliencyPolicyPolicyArgs) ToResiliencyPolicyPolicyOutput() ResiliencyPolicyPolicyOutput {
	return i.ToResiliencyPolicyPolicyOutputWithContext(context.Background())
}

func (i ResiliencyPolicyPolicyArgs) ToResiliencyPolicyPolicyOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicyOutput)
}

func (i ResiliencyPolicyPolicyArgs) ToResiliencyPolicyPolicyPtrOutput() ResiliencyPolicyPolicyPtrOutput {
	return i.ToResiliencyPolicyPolicyPtrOutputWithContext(context.Background())
}

func (i ResiliencyPolicyPolicyArgs) ToResiliencyPolicyPolicyPtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicyOutput).ToResiliencyPolicyPolicyPtrOutputWithContext(ctx)
}

// ResiliencyPolicyPolicyPtrInput is an input type that accepts ResiliencyPolicyPolicyArgs, ResiliencyPolicyPolicyPtr and ResiliencyPolicyPolicyPtrOutput values.
// You can construct a concrete instance of `ResiliencyPolicyPolicyPtrInput` via:
//
//	        ResiliencyPolicyPolicyArgs{...}
//
//	or:
//
//	        nil
type ResiliencyPolicyPolicyPtrInput interface {
	pulumi.Input

	ToResiliencyPolicyPolicyPtrOutput() ResiliencyPolicyPolicyPtrOutput
	ToResiliencyPolicyPolicyPtrOutputWithContext(context.Context) ResiliencyPolicyPolicyPtrOutput
}

type resiliencyPolicyPolicyPtrType ResiliencyPolicyPolicyArgs

func ResiliencyPolicyPolicyPtr(v *ResiliencyPolicyPolicyArgs) ResiliencyPolicyPolicyPtrInput {
	return (*resiliencyPolicyPolicyPtrType)(v)
}

func (*resiliencyPolicyPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResiliencyPolicyPolicy)(nil)).Elem()
}

func (i *resiliencyPolicyPolicyPtrType) ToResiliencyPolicyPolicyPtrOutput() ResiliencyPolicyPolicyPtrOutput {
	return i.ToResiliencyPolicyPolicyPtrOutputWithContext(context.Background())
}

func (i *resiliencyPolicyPolicyPtrType) ToResiliencyPolicyPolicyPtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicyPtrOutput)
}

type ResiliencyPolicyPolicyOutput struct{ *pulumi.OutputState }

func (ResiliencyPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResiliencyPolicyPolicy)(nil)).Elem()
}

func (o ResiliencyPolicyPolicyOutput) ToResiliencyPolicyPolicyOutput() ResiliencyPolicyPolicyOutput {
	return o
}

func (o ResiliencyPolicyPolicyOutput) ToResiliencyPolicyPolicyOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyOutput {
	return o
}

func (o ResiliencyPolicyPolicyOutput) ToResiliencyPolicyPolicyPtrOutput() ResiliencyPolicyPolicyPtrOutput {
	return o.ToResiliencyPolicyPolicyPtrOutputWithContext(context.Background())
}

func (o ResiliencyPolicyPolicyOutput) ToResiliencyPolicyPolicyPtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResiliencyPolicyPolicy) *ResiliencyPolicyPolicy {
		return &v
	}).(ResiliencyPolicyPolicyPtrOutput)
}

// Specifies Availability Zone failure policy. See `policy.az`
func (o ResiliencyPolicyPolicyOutput) Az() ResiliencyPolicyPolicyAzPtrOutput {
	return o.ApplyT(func(v ResiliencyPolicyPolicy) *ResiliencyPolicyPolicyAz { return v.Az }).(ResiliencyPolicyPolicyAzPtrOutput)
}

// Specifies Infrastructure failure policy. See `policy.hardware`
func (o ResiliencyPolicyPolicyOutput) Hardware() ResiliencyPolicyPolicyHardwarePtrOutput {
	return o.ApplyT(func(v ResiliencyPolicyPolicy) *ResiliencyPolicyPolicyHardware { return v.Hardware }).(ResiliencyPolicyPolicyHardwarePtrOutput)
}

// Specifies Region failure policy. `policy.region`
func (o ResiliencyPolicyPolicyOutput) Region() ResiliencyPolicyPolicyRegionPtrOutput {
	return o.ApplyT(func(v ResiliencyPolicyPolicy) *ResiliencyPolicyPolicyRegion { return v.Region }).(ResiliencyPolicyPolicyRegionPtrOutput)
}

// Specifies Application failure policy. See `policy.software`
//
// The following arguments are optional:
func (o ResiliencyPolicyPolicyOutput) Software() ResiliencyPolicyPolicySoftwarePtrOutput {
	return o.ApplyT(func(v ResiliencyPolicyPolicy) *ResiliencyPolicyPolicySoftware { return v.Software }).(ResiliencyPolicyPolicySoftwarePtrOutput)
}

type ResiliencyPolicyPolicyPtrOutput struct{ *pulumi.OutputState }

func (ResiliencyPolicyPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResiliencyPolicyPolicy)(nil)).Elem()
}

func (o ResiliencyPolicyPolicyPtrOutput) ToResiliencyPolicyPolicyPtrOutput() ResiliencyPolicyPolicyPtrOutput {
	return o
}

func (o ResiliencyPolicyPolicyPtrOutput) ToResiliencyPolicyPolicyPtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyPtrOutput {
	return o
}

func (o ResiliencyPolicyPolicyPtrOutput) Elem() ResiliencyPolicyPolicyOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicy) ResiliencyPolicyPolicy {
		if v != nil {
			return *v
		}
		var ret ResiliencyPolicyPolicy
		return ret
	}).(ResiliencyPolicyPolicyOutput)
}

// Specifies Availability Zone failure policy. See `policy.az`
func (o ResiliencyPolicyPolicyPtrOutput) Az() ResiliencyPolicyPolicyAzPtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicy) *ResiliencyPolicyPolicyAz {
		if v == nil {
			return nil
		}
		return v.Az
	}).(ResiliencyPolicyPolicyAzPtrOutput)
}

// Specifies Infrastructure failure policy. See `policy.hardware`
func (o ResiliencyPolicyPolicyPtrOutput) Hardware() ResiliencyPolicyPolicyHardwarePtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicy) *ResiliencyPolicyPolicyHardware {
		if v == nil {
			return nil
		}
		return v.Hardware
	}).(ResiliencyPolicyPolicyHardwarePtrOutput)
}

// Specifies Region failure policy. `policy.region`
func (o ResiliencyPolicyPolicyPtrOutput) Region() ResiliencyPolicyPolicyRegionPtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicy) *ResiliencyPolicyPolicyRegion {
		if v == nil {
			return nil
		}
		return v.Region
	}).(ResiliencyPolicyPolicyRegionPtrOutput)
}

// Specifies Application failure policy. See `policy.software`
//
// The following arguments are optional:
func (o ResiliencyPolicyPolicyPtrOutput) Software() ResiliencyPolicyPolicySoftwarePtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicy) *ResiliencyPolicyPolicySoftware {
		if v == nil {
			return nil
		}
		return v.Software
	}).(ResiliencyPolicyPolicySoftwarePtrOutput)
}

type ResiliencyPolicyPolicyAz struct {
	// Recovery Point Objective (RPO) as a Go duration.
	Rpo string `pulumi:"rpo"`
	// Recovery Time Objective (RTO) as a Go duration.
	Rto string `pulumi:"rto"`
}

// ResiliencyPolicyPolicyAzInput is an input type that accepts ResiliencyPolicyPolicyAzArgs and ResiliencyPolicyPolicyAzOutput values.
// You can construct a concrete instance of `ResiliencyPolicyPolicyAzInput` via:
//
//	ResiliencyPolicyPolicyAzArgs{...}
type ResiliencyPolicyPolicyAzInput interface {
	pulumi.Input

	ToResiliencyPolicyPolicyAzOutput() ResiliencyPolicyPolicyAzOutput
	ToResiliencyPolicyPolicyAzOutputWithContext(context.Context) ResiliencyPolicyPolicyAzOutput
}

type ResiliencyPolicyPolicyAzArgs struct {
	// Recovery Point Objective (RPO) as a Go duration.
	Rpo pulumi.StringInput `pulumi:"rpo"`
	// Recovery Time Objective (RTO) as a Go duration.
	Rto pulumi.StringInput `pulumi:"rto"`
}

func (ResiliencyPolicyPolicyAzArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResiliencyPolicyPolicyAz)(nil)).Elem()
}

func (i ResiliencyPolicyPolicyAzArgs) ToResiliencyPolicyPolicyAzOutput() ResiliencyPolicyPolicyAzOutput {
	return i.ToResiliencyPolicyPolicyAzOutputWithContext(context.Background())
}

func (i ResiliencyPolicyPolicyAzArgs) ToResiliencyPolicyPolicyAzOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyAzOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicyAzOutput)
}

func (i ResiliencyPolicyPolicyAzArgs) ToResiliencyPolicyPolicyAzPtrOutput() ResiliencyPolicyPolicyAzPtrOutput {
	return i.ToResiliencyPolicyPolicyAzPtrOutputWithContext(context.Background())
}

func (i ResiliencyPolicyPolicyAzArgs) ToResiliencyPolicyPolicyAzPtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyAzPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicyAzOutput).ToResiliencyPolicyPolicyAzPtrOutputWithContext(ctx)
}

// ResiliencyPolicyPolicyAzPtrInput is an input type that accepts ResiliencyPolicyPolicyAzArgs, ResiliencyPolicyPolicyAzPtr and ResiliencyPolicyPolicyAzPtrOutput values.
// You can construct a concrete instance of `ResiliencyPolicyPolicyAzPtrInput` via:
//
//	        ResiliencyPolicyPolicyAzArgs{...}
//
//	or:
//
//	        nil
type ResiliencyPolicyPolicyAzPtrInput interface {
	pulumi.Input

	ToResiliencyPolicyPolicyAzPtrOutput() ResiliencyPolicyPolicyAzPtrOutput
	ToResiliencyPolicyPolicyAzPtrOutputWithContext(context.Context) ResiliencyPolicyPolicyAzPtrOutput
}

type resiliencyPolicyPolicyAzPtrType ResiliencyPolicyPolicyAzArgs

func ResiliencyPolicyPolicyAzPtr(v *ResiliencyPolicyPolicyAzArgs) ResiliencyPolicyPolicyAzPtrInput {
	return (*resiliencyPolicyPolicyAzPtrType)(v)
}

func (*resiliencyPolicyPolicyAzPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResiliencyPolicyPolicyAz)(nil)).Elem()
}

func (i *resiliencyPolicyPolicyAzPtrType) ToResiliencyPolicyPolicyAzPtrOutput() ResiliencyPolicyPolicyAzPtrOutput {
	return i.ToResiliencyPolicyPolicyAzPtrOutputWithContext(context.Background())
}

func (i *resiliencyPolicyPolicyAzPtrType) ToResiliencyPolicyPolicyAzPtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyAzPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicyAzPtrOutput)
}

type ResiliencyPolicyPolicyAzOutput struct{ *pulumi.OutputState }

func (ResiliencyPolicyPolicyAzOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResiliencyPolicyPolicyAz)(nil)).Elem()
}

func (o ResiliencyPolicyPolicyAzOutput) ToResiliencyPolicyPolicyAzOutput() ResiliencyPolicyPolicyAzOutput {
	return o
}

func (o ResiliencyPolicyPolicyAzOutput) ToResiliencyPolicyPolicyAzOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyAzOutput {
	return o
}

func (o ResiliencyPolicyPolicyAzOutput) ToResiliencyPolicyPolicyAzPtrOutput() ResiliencyPolicyPolicyAzPtrOutput {
	return o.ToResiliencyPolicyPolicyAzPtrOutputWithContext(context.Background())
}

func (o ResiliencyPolicyPolicyAzOutput) ToResiliencyPolicyPolicyAzPtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyAzPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResiliencyPolicyPolicyAz) *ResiliencyPolicyPolicyAz {
		return &v
	}).(ResiliencyPolicyPolicyAzPtrOutput)
}

// Recovery Point Objective (RPO) as a Go duration.
func (o ResiliencyPolicyPolicyAzOutput) Rpo() pulumi.StringOutput {
	return o.ApplyT(func(v ResiliencyPolicyPolicyAz) string { return v.Rpo }).(pulumi.StringOutput)
}

// Recovery Time Objective (RTO) as a Go duration.
func (o ResiliencyPolicyPolicyAzOutput) Rto() pulumi.StringOutput {
	return o.ApplyT(func(v ResiliencyPolicyPolicyAz) string { return v.Rto }).(pulumi.StringOutput)
}

type ResiliencyPolicyPolicyAzPtrOutput struct{ *pulumi.OutputState }

func (ResiliencyPolicyPolicyAzPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResiliencyPolicyPolicyAz)(nil)).Elem()
}

func (o ResiliencyPolicyPolicyAzPtrOutput) ToResiliencyPolicyPolicyAzPtrOutput() ResiliencyPolicyPolicyAzPtrOutput {
	return o
}

func (o ResiliencyPolicyPolicyAzPtrOutput) ToResiliencyPolicyPolicyAzPtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyAzPtrOutput {
	return o
}

func (o ResiliencyPolicyPolicyAzPtrOutput) Elem() ResiliencyPolicyPolicyAzOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicyAz) ResiliencyPolicyPolicyAz {
		if v != nil {
			return *v
		}
		var ret ResiliencyPolicyPolicyAz
		return ret
	}).(ResiliencyPolicyPolicyAzOutput)
}

// Recovery Point Objective (RPO) as a Go duration.
func (o ResiliencyPolicyPolicyAzPtrOutput) Rpo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicyAz) *string {
		if v == nil {
			return nil
		}
		return &v.Rpo
	}).(pulumi.StringPtrOutput)
}

// Recovery Time Objective (RTO) as a Go duration.
func (o ResiliencyPolicyPolicyAzPtrOutput) Rto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicyAz) *string {
		if v == nil {
			return nil
		}
		return &v.Rto
	}).(pulumi.StringPtrOutput)
}

type ResiliencyPolicyPolicyHardware struct {
	// Recovery Point Objective (RPO) as a Go duration.
	Rpo string `pulumi:"rpo"`
	// Recovery Time Objective (RTO) as a Go duration.
	Rto string `pulumi:"rto"`
}

// ResiliencyPolicyPolicyHardwareInput is an input type that accepts ResiliencyPolicyPolicyHardwareArgs and ResiliencyPolicyPolicyHardwareOutput values.
// You can construct a concrete instance of `ResiliencyPolicyPolicyHardwareInput` via:
//
//	ResiliencyPolicyPolicyHardwareArgs{...}
type ResiliencyPolicyPolicyHardwareInput interface {
	pulumi.Input

	ToResiliencyPolicyPolicyHardwareOutput() ResiliencyPolicyPolicyHardwareOutput
	ToResiliencyPolicyPolicyHardwareOutputWithContext(context.Context) ResiliencyPolicyPolicyHardwareOutput
}

type ResiliencyPolicyPolicyHardwareArgs struct {
	// Recovery Point Objective (RPO) as a Go duration.
	Rpo pulumi.StringInput `pulumi:"rpo"`
	// Recovery Time Objective (RTO) as a Go duration.
	Rto pulumi.StringInput `pulumi:"rto"`
}

func (ResiliencyPolicyPolicyHardwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResiliencyPolicyPolicyHardware)(nil)).Elem()
}

func (i ResiliencyPolicyPolicyHardwareArgs) ToResiliencyPolicyPolicyHardwareOutput() ResiliencyPolicyPolicyHardwareOutput {
	return i.ToResiliencyPolicyPolicyHardwareOutputWithContext(context.Background())
}

func (i ResiliencyPolicyPolicyHardwareArgs) ToResiliencyPolicyPolicyHardwareOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyHardwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicyHardwareOutput)
}

func (i ResiliencyPolicyPolicyHardwareArgs) ToResiliencyPolicyPolicyHardwarePtrOutput() ResiliencyPolicyPolicyHardwarePtrOutput {
	return i.ToResiliencyPolicyPolicyHardwarePtrOutputWithContext(context.Background())
}

func (i ResiliencyPolicyPolicyHardwareArgs) ToResiliencyPolicyPolicyHardwarePtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyHardwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicyHardwareOutput).ToResiliencyPolicyPolicyHardwarePtrOutputWithContext(ctx)
}

// ResiliencyPolicyPolicyHardwarePtrInput is an input type that accepts ResiliencyPolicyPolicyHardwareArgs, ResiliencyPolicyPolicyHardwarePtr and ResiliencyPolicyPolicyHardwarePtrOutput values.
// You can construct a concrete instance of `ResiliencyPolicyPolicyHardwarePtrInput` via:
//
//	        ResiliencyPolicyPolicyHardwareArgs{...}
//
//	or:
//
//	        nil
type ResiliencyPolicyPolicyHardwarePtrInput interface {
	pulumi.Input

	ToResiliencyPolicyPolicyHardwarePtrOutput() ResiliencyPolicyPolicyHardwarePtrOutput
	ToResiliencyPolicyPolicyHardwarePtrOutputWithContext(context.Context) ResiliencyPolicyPolicyHardwarePtrOutput
}

type resiliencyPolicyPolicyHardwarePtrType ResiliencyPolicyPolicyHardwareArgs

func ResiliencyPolicyPolicyHardwarePtr(v *ResiliencyPolicyPolicyHardwareArgs) ResiliencyPolicyPolicyHardwarePtrInput {
	return (*resiliencyPolicyPolicyHardwarePtrType)(v)
}

func (*resiliencyPolicyPolicyHardwarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResiliencyPolicyPolicyHardware)(nil)).Elem()
}

func (i *resiliencyPolicyPolicyHardwarePtrType) ToResiliencyPolicyPolicyHardwarePtrOutput() ResiliencyPolicyPolicyHardwarePtrOutput {
	return i.ToResiliencyPolicyPolicyHardwarePtrOutputWithContext(context.Background())
}

func (i *resiliencyPolicyPolicyHardwarePtrType) ToResiliencyPolicyPolicyHardwarePtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyHardwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicyHardwarePtrOutput)
}

type ResiliencyPolicyPolicyHardwareOutput struct{ *pulumi.OutputState }

func (ResiliencyPolicyPolicyHardwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResiliencyPolicyPolicyHardware)(nil)).Elem()
}

func (o ResiliencyPolicyPolicyHardwareOutput) ToResiliencyPolicyPolicyHardwareOutput() ResiliencyPolicyPolicyHardwareOutput {
	return o
}

func (o ResiliencyPolicyPolicyHardwareOutput) ToResiliencyPolicyPolicyHardwareOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyHardwareOutput {
	return o
}

func (o ResiliencyPolicyPolicyHardwareOutput) ToResiliencyPolicyPolicyHardwarePtrOutput() ResiliencyPolicyPolicyHardwarePtrOutput {
	return o.ToResiliencyPolicyPolicyHardwarePtrOutputWithContext(context.Background())
}

func (o ResiliencyPolicyPolicyHardwareOutput) ToResiliencyPolicyPolicyHardwarePtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyHardwarePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResiliencyPolicyPolicyHardware) *ResiliencyPolicyPolicyHardware {
		return &v
	}).(ResiliencyPolicyPolicyHardwarePtrOutput)
}

// Recovery Point Objective (RPO) as a Go duration.
func (o ResiliencyPolicyPolicyHardwareOutput) Rpo() pulumi.StringOutput {
	return o.ApplyT(func(v ResiliencyPolicyPolicyHardware) string { return v.Rpo }).(pulumi.StringOutput)
}

// Recovery Time Objective (RTO) as a Go duration.
func (o ResiliencyPolicyPolicyHardwareOutput) Rto() pulumi.StringOutput {
	return o.ApplyT(func(v ResiliencyPolicyPolicyHardware) string { return v.Rto }).(pulumi.StringOutput)
}

type ResiliencyPolicyPolicyHardwarePtrOutput struct{ *pulumi.OutputState }

func (ResiliencyPolicyPolicyHardwarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResiliencyPolicyPolicyHardware)(nil)).Elem()
}

func (o ResiliencyPolicyPolicyHardwarePtrOutput) ToResiliencyPolicyPolicyHardwarePtrOutput() ResiliencyPolicyPolicyHardwarePtrOutput {
	return o
}

func (o ResiliencyPolicyPolicyHardwarePtrOutput) ToResiliencyPolicyPolicyHardwarePtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyHardwarePtrOutput {
	return o
}

func (o ResiliencyPolicyPolicyHardwarePtrOutput) Elem() ResiliencyPolicyPolicyHardwareOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicyHardware) ResiliencyPolicyPolicyHardware {
		if v != nil {
			return *v
		}
		var ret ResiliencyPolicyPolicyHardware
		return ret
	}).(ResiliencyPolicyPolicyHardwareOutput)
}

// Recovery Point Objective (RPO) as a Go duration.
func (o ResiliencyPolicyPolicyHardwarePtrOutput) Rpo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicyHardware) *string {
		if v == nil {
			return nil
		}
		return &v.Rpo
	}).(pulumi.StringPtrOutput)
}

// Recovery Time Objective (RTO) as a Go duration.
func (o ResiliencyPolicyPolicyHardwarePtrOutput) Rto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicyHardware) *string {
		if v == nil {
			return nil
		}
		return &v.Rto
	}).(pulumi.StringPtrOutput)
}

type ResiliencyPolicyPolicyRegion struct {
	// Recovery Point Objective (RPO) as a Go duration.
	Rpo *string `pulumi:"rpo"`
	// Recovery Time Objective (RTO) as a Go duration.
	Rto *string `pulumi:"rto"`
}

// ResiliencyPolicyPolicyRegionInput is an input type that accepts ResiliencyPolicyPolicyRegionArgs and ResiliencyPolicyPolicyRegionOutput values.
// You can construct a concrete instance of `ResiliencyPolicyPolicyRegionInput` via:
//
//	ResiliencyPolicyPolicyRegionArgs{...}
type ResiliencyPolicyPolicyRegionInput interface {
	pulumi.Input

	ToResiliencyPolicyPolicyRegionOutput() ResiliencyPolicyPolicyRegionOutput
	ToResiliencyPolicyPolicyRegionOutputWithContext(context.Context) ResiliencyPolicyPolicyRegionOutput
}

type ResiliencyPolicyPolicyRegionArgs struct {
	// Recovery Point Objective (RPO) as a Go duration.
	Rpo pulumi.StringPtrInput `pulumi:"rpo"`
	// Recovery Time Objective (RTO) as a Go duration.
	Rto pulumi.StringPtrInput `pulumi:"rto"`
}

func (ResiliencyPolicyPolicyRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResiliencyPolicyPolicyRegion)(nil)).Elem()
}

func (i ResiliencyPolicyPolicyRegionArgs) ToResiliencyPolicyPolicyRegionOutput() ResiliencyPolicyPolicyRegionOutput {
	return i.ToResiliencyPolicyPolicyRegionOutputWithContext(context.Background())
}

func (i ResiliencyPolicyPolicyRegionArgs) ToResiliencyPolicyPolicyRegionOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicyRegionOutput)
}

func (i ResiliencyPolicyPolicyRegionArgs) ToResiliencyPolicyPolicyRegionPtrOutput() ResiliencyPolicyPolicyRegionPtrOutput {
	return i.ToResiliencyPolicyPolicyRegionPtrOutputWithContext(context.Background())
}

func (i ResiliencyPolicyPolicyRegionArgs) ToResiliencyPolicyPolicyRegionPtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicyRegionOutput).ToResiliencyPolicyPolicyRegionPtrOutputWithContext(ctx)
}

// ResiliencyPolicyPolicyRegionPtrInput is an input type that accepts ResiliencyPolicyPolicyRegionArgs, ResiliencyPolicyPolicyRegionPtr and ResiliencyPolicyPolicyRegionPtrOutput values.
// You can construct a concrete instance of `ResiliencyPolicyPolicyRegionPtrInput` via:
//
//	        ResiliencyPolicyPolicyRegionArgs{...}
//
//	or:
//
//	        nil
type ResiliencyPolicyPolicyRegionPtrInput interface {
	pulumi.Input

	ToResiliencyPolicyPolicyRegionPtrOutput() ResiliencyPolicyPolicyRegionPtrOutput
	ToResiliencyPolicyPolicyRegionPtrOutputWithContext(context.Context) ResiliencyPolicyPolicyRegionPtrOutput
}

type resiliencyPolicyPolicyRegionPtrType ResiliencyPolicyPolicyRegionArgs

func ResiliencyPolicyPolicyRegionPtr(v *ResiliencyPolicyPolicyRegionArgs) ResiliencyPolicyPolicyRegionPtrInput {
	return (*resiliencyPolicyPolicyRegionPtrType)(v)
}

func (*resiliencyPolicyPolicyRegionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResiliencyPolicyPolicyRegion)(nil)).Elem()
}

func (i *resiliencyPolicyPolicyRegionPtrType) ToResiliencyPolicyPolicyRegionPtrOutput() ResiliencyPolicyPolicyRegionPtrOutput {
	return i.ToResiliencyPolicyPolicyRegionPtrOutputWithContext(context.Background())
}

func (i *resiliencyPolicyPolicyRegionPtrType) ToResiliencyPolicyPolicyRegionPtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicyRegionPtrOutput)
}

type ResiliencyPolicyPolicyRegionOutput struct{ *pulumi.OutputState }

func (ResiliencyPolicyPolicyRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResiliencyPolicyPolicyRegion)(nil)).Elem()
}

func (o ResiliencyPolicyPolicyRegionOutput) ToResiliencyPolicyPolicyRegionOutput() ResiliencyPolicyPolicyRegionOutput {
	return o
}

func (o ResiliencyPolicyPolicyRegionOutput) ToResiliencyPolicyPolicyRegionOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyRegionOutput {
	return o
}

func (o ResiliencyPolicyPolicyRegionOutput) ToResiliencyPolicyPolicyRegionPtrOutput() ResiliencyPolicyPolicyRegionPtrOutput {
	return o.ToResiliencyPolicyPolicyRegionPtrOutputWithContext(context.Background())
}

func (o ResiliencyPolicyPolicyRegionOutput) ToResiliencyPolicyPolicyRegionPtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResiliencyPolicyPolicyRegion) *ResiliencyPolicyPolicyRegion {
		return &v
	}).(ResiliencyPolicyPolicyRegionPtrOutput)
}

// Recovery Point Objective (RPO) as a Go duration.
func (o ResiliencyPolicyPolicyRegionOutput) Rpo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResiliencyPolicyPolicyRegion) *string { return v.Rpo }).(pulumi.StringPtrOutput)
}

// Recovery Time Objective (RTO) as a Go duration.
func (o ResiliencyPolicyPolicyRegionOutput) Rto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResiliencyPolicyPolicyRegion) *string { return v.Rto }).(pulumi.StringPtrOutput)
}

type ResiliencyPolicyPolicyRegionPtrOutput struct{ *pulumi.OutputState }

func (ResiliencyPolicyPolicyRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResiliencyPolicyPolicyRegion)(nil)).Elem()
}

func (o ResiliencyPolicyPolicyRegionPtrOutput) ToResiliencyPolicyPolicyRegionPtrOutput() ResiliencyPolicyPolicyRegionPtrOutput {
	return o
}

func (o ResiliencyPolicyPolicyRegionPtrOutput) ToResiliencyPolicyPolicyRegionPtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicyRegionPtrOutput {
	return o
}

func (o ResiliencyPolicyPolicyRegionPtrOutput) Elem() ResiliencyPolicyPolicyRegionOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicyRegion) ResiliencyPolicyPolicyRegion {
		if v != nil {
			return *v
		}
		var ret ResiliencyPolicyPolicyRegion
		return ret
	}).(ResiliencyPolicyPolicyRegionOutput)
}

// Recovery Point Objective (RPO) as a Go duration.
func (o ResiliencyPolicyPolicyRegionPtrOutput) Rpo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicyRegion) *string {
		if v == nil {
			return nil
		}
		return v.Rpo
	}).(pulumi.StringPtrOutput)
}

// Recovery Time Objective (RTO) as a Go duration.
func (o ResiliencyPolicyPolicyRegionPtrOutput) Rto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicyRegion) *string {
		if v == nil {
			return nil
		}
		return v.Rto
	}).(pulumi.StringPtrOutput)
}

type ResiliencyPolicyPolicySoftware struct {
	// Recovery Point Objective (RPO) as a Go duration.
	Rpo string `pulumi:"rpo"`
	// Recovery Time Objective (RTO) as a Go duration.
	Rto string `pulumi:"rto"`
}

// ResiliencyPolicyPolicySoftwareInput is an input type that accepts ResiliencyPolicyPolicySoftwareArgs and ResiliencyPolicyPolicySoftwareOutput values.
// You can construct a concrete instance of `ResiliencyPolicyPolicySoftwareInput` via:
//
//	ResiliencyPolicyPolicySoftwareArgs{...}
type ResiliencyPolicyPolicySoftwareInput interface {
	pulumi.Input

	ToResiliencyPolicyPolicySoftwareOutput() ResiliencyPolicyPolicySoftwareOutput
	ToResiliencyPolicyPolicySoftwareOutputWithContext(context.Context) ResiliencyPolicyPolicySoftwareOutput
}

type ResiliencyPolicyPolicySoftwareArgs struct {
	// Recovery Point Objective (RPO) as a Go duration.
	Rpo pulumi.StringInput `pulumi:"rpo"`
	// Recovery Time Objective (RTO) as a Go duration.
	Rto pulumi.StringInput `pulumi:"rto"`
}

func (ResiliencyPolicyPolicySoftwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResiliencyPolicyPolicySoftware)(nil)).Elem()
}

func (i ResiliencyPolicyPolicySoftwareArgs) ToResiliencyPolicyPolicySoftwareOutput() ResiliencyPolicyPolicySoftwareOutput {
	return i.ToResiliencyPolicyPolicySoftwareOutputWithContext(context.Background())
}

func (i ResiliencyPolicyPolicySoftwareArgs) ToResiliencyPolicyPolicySoftwareOutputWithContext(ctx context.Context) ResiliencyPolicyPolicySoftwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicySoftwareOutput)
}

func (i ResiliencyPolicyPolicySoftwareArgs) ToResiliencyPolicyPolicySoftwarePtrOutput() ResiliencyPolicyPolicySoftwarePtrOutput {
	return i.ToResiliencyPolicyPolicySoftwarePtrOutputWithContext(context.Background())
}

func (i ResiliencyPolicyPolicySoftwareArgs) ToResiliencyPolicyPolicySoftwarePtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicySoftwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicySoftwareOutput).ToResiliencyPolicyPolicySoftwarePtrOutputWithContext(ctx)
}

// ResiliencyPolicyPolicySoftwarePtrInput is an input type that accepts ResiliencyPolicyPolicySoftwareArgs, ResiliencyPolicyPolicySoftwarePtr and ResiliencyPolicyPolicySoftwarePtrOutput values.
// You can construct a concrete instance of `ResiliencyPolicyPolicySoftwarePtrInput` via:
//
//	        ResiliencyPolicyPolicySoftwareArgs{...}
//
//	or:
//
//	        nil
type ResiliencyPolicyPolicySoftwarePtrInput interface {
	pulumi.Input

	ToResiliencyPolicyPolicySoftwarePtrOutput() ResiliencyPolicyPolicySoftwarePtrOutput
	ToResiliencyPolicyPolicySoftwarePtrOutputWithContext(context.Context) ResiliencyPolicyPolicySoftwarePtrOutput
}

type resiliencyPolicyPolicySoftwarePtrType ResiliencyPolicyPolicySoftwareArgs

func ResiliencyPolicyPolicySoftwarePtr(v *ResiliencyPolicyPolicySoftwareArgs) ResiliencyPolicyPolicySoftwarePtrInput {
	return (*resiliencyPolicyPolicySoftwarePtrType)(v)
}

func (*resiliencyPolicyPolicySoftwarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResiliencyPolicyPolicySoftware)(nil)).Elem()
}

func (i *resiliencyPolicyPolicySoftwarePtrType) ToResiliencyPolicyPolicySoftwarePtrOutput() ResiliencyPolicyPolicySoftwarePtrOutput {
	return i.ToResiliencyPolicyPolicySoftwarePtrOutputWithContext(context.Background())
}

func (i *resiliencyPolicyPolicySoftwarePtrType) ToResiliencyPolicyPolicySoftwarePtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicySoftwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyPolicySoftwarePtrOutput)
}

type ResiliencyPolicyPolicySoftwareOutput struct{ *pulumi.OutputState }

func (ResiliencyPolicyPolicySoftwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResiliencyPolicyPolicySoftware)(nil)).Elem()
}

func (o ResiliencyPolicyPolicySoftwareOutput) ToResiliencyPolicyPolicySoftwareOutput() ResiliencyPolicyPolicySoftwareOutput {
	return o
}

func (o ResiliencyPolicyPolicySoftwareOutput) ToResiliencyPolicyPolicySoftwareOutputWithContext(ctx context.Context) ResiliencyPolicyPolicySoftwareOutput {
	return o
}

func (o ResiliencyPolicyPolicySoftwareOutput) ToResiliencyPolicyPolicySoftwarePtrOutput() ResiliencyPolicyPolicySoftwarePtrOutput {
	return o.ToResiliencyPolicyPolicySoftwarePtrOutputWithContext(context.Background())
}

func (o ResiliencyPolicyPolicySoftwareOutput) ToResiliencyPolicyPolicySoftwarePtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicySoftwarePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResiliencyPolicyPolicySoftware) *ResiliencyPolicyPolicySoftware {
		return &v
	}).(ResiliencyPolicyPolicySoftwarePtrOutput)
}

// Recovery Point Objective (RPO) as a Go duration.
func (o ResiliencyPolicyPolicySoftwareOutput) Rpo() pulumi.StringOutput {
	return o.ApplyT(func(v ResiliencyPolicyPolicySoftware) string { return v.Rpo }).(pulumi.StringOutput)
}

// Recovery Time Objective (RTO) as a Go duration.
func (o ResiliencyPolicyPolicySoftwareOutput) Rto() pulumi.StringOutput {
	return o.ApplyT(func(v ResiliencyPolicyPolicySoftware) string { return v.Rto }).(pulumi.StringOutput)
}

type ResiliencyPolicyPolicySoftwarePtrOutput struct{ *pulumi.OutputState }

func (ResiliencyPolicyPolicySoftwarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResiliencyPolicyPolicySoftware)(nil)).Elem()
}

func (o ResiliencyPolicyPolicySoftwarePtrOutput) ToResiliencyPolicyPolicySoftwarePtrOutput() ResiliencyPolicyPolicySoftwarePtrOutput {
	return o
}

func (o ResiliencyPolicyPolicySoftwarePtrOutput) ToResiliencyPolicyPolicySoftwarePtrOutputWithContext(ctx context.Context) ResiliencyPolicyPolicySoftwarePtrOutput {
	return o
}

func (o ResiliencyPolicyPolicySoftwarePtrOutput) Elem() ResiliencyPolicyPolicySoftwareOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicySoftware) ResiliencyPolicyPolicySoftware {
		if v != nil {
			return *v
		}
		var ret ResiliencyPolicyPolicySoftware
		return ret
	}).(ResiliencyPolicyPolicySoftwareOutput)
}

// Recovery Point Objective (RPO) as a Go duration.
func (o ResiliencyPolicyPolicySoftwarePtrOutput) Rpo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicySoftware) *string {
		if v == nil {
			return nil
		}
		return &v.Rpo
	}).(pulumi.StringPtrOutput)
}

// Recovery Time Objective (RTO) as a Go duration.
func (o ResiliencyPolicyPolicySoftwarePtrOutput) Rto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyPolicySoftware) *string {
		if v == nil {
			return nil
		}
		return &v.Rto
	}).(pulumi.StringPtrOutput)
}

type ResiliencyPolicyTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// ResiliencyPolicyTimeoutsInput is an input type that accepts ResiliencyPolicyTimeoutsArgs and ResiliencyPolicyTimeoutsOutput values.
// You can construct a concrete instance of `ResiliencyPolicyTimeoutsInput` via:
//
//	ResiliencyPolicyTimeoutsArgs{...}
type ResiliencyPolicyTimeoutsInput interface {
	pulumi.Input

	ToResiliencyPolicyTimeoutsOutput() ResiliencyPolicyTimeoutsOutput
	ToResiliencyPolicyTimeoutsOutputWithContext(context.Context) ResiliencyPolicyTimeoutsOutput
}

type ResiliencyPolicyTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (ResiliencyPolicyTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResiliencyPolicyTimeouts)(nil)).Elem()
}

func (i ResiliencyPolicyTimeoutsArgs) ToResiliencyPolicyTimeoutsOutput() ResiliencyPolicyTimeoutsOutput {
	return i.ToResiliencyPolicyTimeoutsOutputWithContext(context.Background())
}

func (i ResiliencyPolicyTimeoutsArgs) ToResiliencyPolicyTimeoutsOutputWithContext(ctx context.Context) ResiliencyPolicyTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyTimeoutsOutput)
}

func (i ResiliencyPolicyTimeoutsArgs) ToResiliencyPolicyTimeoutsPtrOutput() ResiliencyPolicyTimeoutsPtrOutput {
	return i.ToResiliencyPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (i ResiliencyPolicyTimeoutsArgs) ToResiliencyPolicyTimeoutsPtrOutputWithContext(ctx context.Context) ResiliencyPolicyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyTimeoutsOutput).ToResiliencyPolicyTimeoutsPtrOutputWithContext(ctx)
}

// ResiliencyPolicyTimeoutsPtrInput is an input type that accepts ResiliencyPolicyTimeoutsArgs, ResiliencyPolicyTimeoutsPtr and ResiliencyPolicyTimeoutsPtrOutput values.
// You can construct a concrete instance of `ResiliencyPolicyTimeoutsPtrInput` via:
//
//	        ResiliencyPolicyTimeoutsArgs{...}
//
//	or:
//
//	        nil
type ResiliencyPolicyTimeoutsPtrInput interface {
	pulumi.Input

	ToResiliencyPolicyTimeoutsPtrOutput() ResiliencyPolicyTimeoutsPtrOutput
	ToResiliencyPolicyTimeoutsPtrOutputWithContext(context.Context) ResiliencyPolicyTimeoutsPtrOutput
}

type resiliencyPolicyTimeoutsPtrType ResiliencyPolicyTimeoutsArgs

func ResiliencyPolicyTimeoutsPtr(v *ResiliencyPolicyTimeoutsArgs) ResiliencyPolicyTimeoutsPtrInput {
	return (*resiliencyPolicyTimeoutsPtrType)(v)
}

func (*resiliencyPolicyTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResiliencyPolicyTimeouts)(nil)).Elem()
}

func (i *resiliencyPolicyTimeoutsPtrType) ToResiliencyPolicyTimeoutsPtrOutput() ResiliencyPolicyTimeoutsPtrOutput {
	return i.ToResiliencyPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (i *resiliencyPolicyTimeoutsPtrType) ToResiliencyPolicyTimeoutsPtrOutputWithContext(ctx context.Context) ResiliencyPolicyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResiliencyPolicyTimeoutsPtrOutput)
}

type ResiliencyPolicyTimeoutsOutput struct{ *pulumi.OutputState }

func (ResiliencyPolicyTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResiliencyPolicyTimeouts)(nil)).Elem()
}

func (o ResiliencyPolicyTimeoutsOutput) ToResiliencyPolicyTimeoutsOutput() ResiliencyPolicyTimeoutsOutput {
	return o
}

func (o ResiliencyPolicyTimeoutsOutput) ToResiliencyPolicyTimeoutsOutputWithContext(ctx context.Context) ResiliencyPolicyTimeoutsOutput {
	return o
}

func (o ResiliencyPolicyTimeoutsOutput) ToResiliencyPolicyTimeoutsPtrOutput() ResiliencyPolicyTimeoutsPtrOutput {
	return o.ToResiliencyPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (o ResiliencyPolicyTimeoutsOutput) ToResiliencyPolicyTimeoutsPtrOutputWithContext(ctx context.Context) ResiliencyPolicyTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResiliencyPolicyTimeouts) *ResiliencyPolicyTimeouts {
		return &v
	}).(ResiliencyPolicyTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ResiliencyPolicyTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResiliencyPolicyTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o ResiliencyPolicyTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResiliencyPolicyTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ResiliencyPolicyTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResiliencyPolicyTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type ResiliencyPolicyTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (ResiliencyPolicyTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResiliencyPolicyTimeouts)(nil)).Elem()
}

func (o ResiliencyPolicyTimeoutsPtrOutput) ToResiliencyPolicyTimeoutsPtrOutput() ResiliencyPolicyTimeoutsPtrOutput {
	return o
}

func (o ResiliencyPolicyTimeoutsPtrOutput) ToResiliencyPolicyTimeoutsPtrOutputWithContext(ctx context.Context) ResiliencyPolicyTimeoutsPtrOutput {
	return o
}

func (o ResiliencyPolicyTimeoutsPtrOutput) Elem() ResiliencyPolicyTimeoutsOutput {
	return o.ApplyT(func(v *ResiliencyPolicyTimeouts) ResiliencyPolicyTimeouts {
		if v != nil {
			return *v
		}
		var ret ResiliencyPolicyTimeouts
		return ret
	}).(ResiliencyPolicyTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ResiliencyPolicyTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o ResiliencyPolicyTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ResiliencyPolicyTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResiliencyPolicyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResiliencyPolicyPolicyInput)(nil)).Elem(), ResiliencyPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResiliencyPolicyPolicyPtrInput)(nil)).Elem(), ResiliencyPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResiliencyPolicyPolicyAzInput)(nil)).Elem(), ResiliencyPolicyPolicyAzArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResiliencyPolicyPolicyAzPtrInput)(nil)).Elem(), ResiliencyPolicyPolicyAzArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResiliencyPolicyPolicyHardwareInput)(nil)).Elem(), ResiliencyPolicyPolicyHardwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResiliencyPolicyPolicyHardwarePtrInput)(nil)).Elem(), ResiliencyPolicyPolicyHardwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResiliencyPolicyPolicyRegionInput)(nil)).Elem(), ResiliencyPolicyPolicyRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResiliencyPolicyPolicyRegionPtrInput)(nil)).Elem(), ResiliencyPolicyPolicyRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResiliencyPolicyPolicySoftwareInput)(nil)).Elem(), ResiliencyPolicyPolicySoftwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResiliencyPolicyPolicySoftwarePtrInput)(nil)).Elem(), ResiliencyPolicyPolicySoftwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResiliencyPolicyTimeoutsInput)(nil)).Elem(), ResiliencyPolicyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResiliencyPolicyTimeoutsPtrInput)(nil)).Elem(), ResiliencyPolicyTimeoutsArgs{})
	pulumi.RegisterOutputType(ResiliencyPolicyPolicyOutput{})
	pulumi.RegisterOutputType(ResiliencyPolicyPolicyPtrOutput{})
	pulumi.RegisterOutputType(ResiliencyPolicyPolicyAzOutput{})
	pulumi.RegisterOutputType(ResiliencyPolicyPolicyAzPtrOutput{})
	pulumi.RegisterOutputType(ResiliencyPolicyPolicyHardwareOutput{})
	pulumi.RegisterOutputType(ResiliencyPolicyPolicyHardwarePtrOutput{})
	pulumi.RegisterOutputType(ResiliencyPolicyPolicyRegionOutput{})
	pulumi.RegisterOutputType(ResiliencyPolicyPolicyRegionPtrOutput{})
	pulumi.RegisterOutputType(ResiliencyPolicyPolicySoftwareOutput{})
	pulumi.RegisterOutputType(ResiliencyPolicyPolicySoftwarePtrOutput{})
	pulumi.RegisterOutputType(ResiliencyPolicyTimeoutsOutput{})
	pulumi.RegisterOutputType(ResiliencyPolicyTimeoutsPtrOutput{})
}
