// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wafv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type RegexPatternSetRegularExpression struct {
	// The string representing the regular expression, see the AWS WAF [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-regex-pattern-set-creating.html) for more information.
	RegexString string `pulumi:"regexString"`
}

// RegexPatternSetRegularExpressionInput is an input type that accepts RegexPatternSetRegularExpressionArgs and RegexPatternSetRegularExpressionOutput values.
// You can construct a concrete instance of `RegexPatternSetRegularExpressionInput` via:
//
//          RegexPatternSetRegularExpressionArgs{...}
type RegexPatternSetRegularExpressionInput interface {
	pulumi.Input

	ToRegexPatternSetRegularExpressionOutput() RegexPatternSetRegularExpressionOutput
	ToRegexPatternSetRegularExpressionOutputWithContext(context.Context) RegexPatternSetRegularExpressionOutput
}

type RegexPatternSetRegularExpressionArgs struct {
	// The string representing the regular expression, see the AWS WAF [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-regex-pattern-set-creating.html) for more information.
	RegexString pulumi.StringInput `pulumi:"regexString"`
}

func (RegexPatternSetRegularExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexPatternSetRegularExpression)(nil)).Elem()
}

func (i RegexPatternSetRegularExpressionArgs) ToRegexPatternSetRegularExpressionOutput() RegexPatternSetRegularExpressionOutput {
	return i.ToRegexPatternSetRegularExpressionOutputWithContext(context.Background())
}

func (i RegexPatternSetRegularExpressionArgs) ToRegexPatternSetRegularExpressionOutputWithContext(ctx context.Context) RegexPatternSetRegularExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegexPatternSetRegularExpressionOutput)
}

// RegexPatternSetRegularExpressionArrayInput is an input type that accepts RegexPatternSetRegularExpressionArray and RegexPatternSetRegularExpressionArrayOutput values.
// You can construct a concrete instance of `RegexPatternSetRegularExpressionArrayInput` via:
//
//          RegexPatternSetRegularExpressionArray{ RegexPatternSetRegularExpressionArgs{...} }
type RegexPatternSetRegularExpressionArrayInput interface {
	pulumi.Input

	ToRegexPatternSetRegularExpressionArrayOutput() RegexPatternSetRegularExpressionArrayOutput
	ToRegexPatternSetRegularExpressionArrayOutputWithContext(context.Context) RegexPatternSetRegularExpressionArrayOutput
}

type RegexPatternSetRegularExpressionArray []RegexPatternSetRegularExpressionInput

func (RegexPatternSetRegularExpressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegexPatternSetRegularExpression)(nil)).Elem()
}

func (i RegexPatternSetRegularExpressionArray) ToRegexPatternSetRegularExpressionArrayOutput() RegexPatternSetRegularExpressionArrayOutput {
	return i.ToRegexPatternSetRegularExpressionArrayOutputWithContext(context.Background())
}

func (i RegexPatternSetRegularExpressionArray) ToRegexPatternSetRegularExpressionArrayOutputWithContext(ctx context.Context) RegexPatternSetRegularExpressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegexPatternSetRegularExpressionArrayOutput)
}

type RegexPatternSetRegularExpressionOutput struct{ *pulumi.OutputState }

func (RegexPatternSetRegularExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexPatternSetRegularExpression)(nil)).Elem()
}

func (o RegexPatternSetRegularExpressionOutput) ToRegexPatternSetRegularExpressionOutput() RegexPatternSetRegularExpressionOutput {
	return o
}

func (o RegexPatternSetRegularExpressionOutput) ToRegexPatternSetRegularExpressionOutputWithContext(ctx context.Context) RegexPatternSetRegularExpressionOutput {
	return o
}

// The string representing the regular expression, see the AWS WAF [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-regex-pattern-set-creating.html) for more information.
func (o RegexPatternSetRegularExpressionOutput) RegexString() pulumi.StringOutput {
	return o.ApplyT(func(v RegexPatternSetRegularExpression) string { return v.RegexString }).(pulumi.StringOutput)
}

type RegexPatternSetRegularExpressionArrayOutput struct{ *pulumi.OutputState }

func (RegexPatternSetRegularExpressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegexPatternSetRegularExpression)(nil)).Elem()
}

func (o RegexPatternSetRegularExpressionArrayOutput) ToRegexPatternSetRegularExpressionArrayOutput() RegexPatternSetRegularExpressionArrayOutput {
	return o
}

func (o RegexPatternSetRegularExpressionArrayOutput) ToRegexPatternSetRegularExpressionArrayOutputWithContext(ctx context.Context) RegexPatternSetRegularExpressionArrayOutput {
	return o
}

func (o RegexPatternSetRegularExpressionArrayOutput) Index(i pulumi.IntInput) RegexPatternSetRegularExpressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegexPatternSetRegularExpression {
		return vs[0].([]RegexPatternSetRegularExpression)[vs[1].(int)]
	}).(RegexPatternSetRegularExpressionOutput)
}

type GetRegexPatternSetRegularExpression struct {
	// (Required) The string representing the regular expression, see the AWS WAF [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-regex-pattern-set-creating.html) for more information.
	RegexString string `pulumi:"regexString"`
}

// GetRegexPatternSetRegularExpressionInput is an input type that accepts GetRegexPatternSetRegularExpressionArgs and GetRegexPatternSetRegularExpressionOutput values.
// You can construct a concrete instance of `GetRegexPatternSetRegularExpressionInput` via:
//
//          GetRegexPatternSetRegularExpressionArgs{...}
type GetRegexPatternSetRegularExpressionInput interface {
	pulumi.Input

	ToGetRegexPatternSetRegularExpressionOutput() GetRegexPatternSetRegularExpressionOutput
	ToGetRegexPatternSetRegularExpressionOutputWithContext(context.Context) GetRegexPatternSetRegularExpressionOutput
}

type GetRegexPatternSetRegularExpressionArgs struct {
	// (Required) The string representing the regular expression, see the AWS WAF [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-regex-pattern-set-creating.html) for more information.
	RegexString pulumi.StringInput `pulumi:"regexString"`
}

func (GetRegexPatternSetRegularExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegexPatternSetRegularExpression)(nil)).Elem()
}

func (i GetRegexPatternSetRegularExpressionArgs) ToGetRegexPatternSetRegularExpressionOutput() GetRegexPatternSetRegularExpressionOutput {
	return i.ToGetRegexPatternSetRegularExpressionOutputWithContext(context.Background())
}

func (i GetRegexPatternSetRegularExpressionArgs) ToGetRegexPatternSetRegularExpressionOutputWithContext(ctx context.Context) GetRegexPatternSetRegularExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegexPatternSetRegularExpressionOutput)
}

// GetRegexPatternSetRegularExpressionArrayInput is an input type that accepts GetRegexPatternSetRegularExpressionArray and GetRegexPatternSetRegularExpressionArrayOutput values.
// You can construct a concrete instance of `GetRegexPatternSetRegularExpressionArrayInput` via:
//
//          GetRegexPatternSetRegularExpressionArray{ GetRegexPatternSetRegularExpressionArgs{...} }
type GetRegexPatternSetRegularExpressionArrayInput interface {
	pulumi.Input

	ToGetRegexPatternSetRegularExpressionArrayOutput() GetRegexPatternSetRegularExpressionArrayOutput
	ToGetRegexPatternSetRegularExpressionArrayOutputWithContext(context.Context) GetRegexPatternSetRegularExpressionArrayOutput
}

type GetRegexPatternSetRegularExpressionArray []GetRegexPatternSetRegularExpressionInput

func (GetRegexPatternSetRegularExpressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegexPatternSetRegularExpression)(nil)).Elem()
}

func (i GetRegexPatternSetRegularExpressionArray) ToGetRegexPatternSetRegularExpressionArrayOutput() GetRegexPatternSetRegularExpressionArrayOutput {
	return i.ToGetRegexPatternSetRegularExpressionArrayOutputWithContext(context.Background())
}

func (i GetRegexPatternSetRegularExpressionArray) ToGetRegexPatternSetRegularExpressionArrayOutputWithContext(ctx context.Context) GetRegexPatternSetRegularExpressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegexPatternSetRegularExpressionArrayOutput)
}

type GetRegexPatternSetRegularExpressionOutput struct{ *pulumi.OutputState }

func (GetRegexPatternSetRegularExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegexPatternSetRegularExpression)(nil)).Elem()
}

func (o GetRegexPatternSetRegularExpressionOutput) ToGetRegexPatternSetRegularExpressionOutput() GetRegexPatternSetRegularExpressionOutput {
	return o
}

func (o GetRegexPatternSetRegularExpressionOutput) ToGetRegexPatternSetRegularExpressionOutputWithContext(ctx context.Context) GetRegexPatternSetRegularExpressionOutput {
	return o
}

// (Required) The string representing the regular expression, see the AWS WAF [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-regex-pattern-set-creating.html) for more information.
func (o GetRegexPatternSetRegularExpressionOutput) RegexString() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegexPatternSetRegularExpression) string { return v.RegexString }).(pulumi.StringOutput)
}

type GetRegexPatternSetRegularExpressionArrayOutput struct{ *pulumi.OutputState }

func (GetRegexPatternSetRegularExpressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegexPatternSetRegularExpression)(nil)).Elem()
}

func (o GetRegexPatternSetRegularExpressionArrayOutput) ToGetRegexPatternSetRegularExpressionArrayOutput() GetRegexPatternSetRegularExpressionArrayOutput {
	return o
}

func (o GetRegexPatternSetRegularExpressionArrayOutput) ToGetRegexPatternSetRegularExpressionArrayOutputWithContext(ctx context.Context) GetRegexPatternSetRegularExpressionArrayOutput {
	return o
}

func (o GetRegexPatternSetRegularExpressionArrayOutput) Index(i pulumi.IntInput) GetRegexPatternSetRegularExpressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegexPatternSetRegularExpression {
		return vs[0].([]GetRegexPatternSetRegularExpression)[vs[1].(int)]
	}).(GetRegexPatternSetRegularExpressionOutput)
}

func init() {
	pulumi.RegisterOutputType(RegexPatternSetRegularExpressionOutput{})
	pulumi.RegisterOutputType(RegexPatternSetRegularExpressionArrayOutput{})
	pulumi.RegisterOutputType(GetRegexPatternSetRegularExpressionOutput{})
	pulumi.RegisterOutputType(GetRegexPatternSetRegularExpressionArrayOutput{})
}
