// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafv2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Associates a WAFv2 Rule Group (custom or managed) with a Web ACL by adding a rule that references the Rule Group. Use this resource to apply the rules defined in a Rule Group to a Web ACL without duplicating rule definitions.
//
// This resource supports both:
//
// - **Custom Rule Groups**: User-created rule groups that you manage within your AWS account
// - **Managed Rule Groups**: Pre-configured rule groups provided by AWS or third-party vendors
//
// !> **Warning:** Verify the rule names in your `ruleActionOverride`s carefully. With managed rule groups, WAF silently ignores any override that uses an invalid rule name. With customer-owned rule groups, invalid rule names in your overrides will cause web ACL updates to fail. An invalid rule name is any name that doesn't exactly match the case-sensitive name of an existing rule in the rule group.
//
// !> **Warning:** Using this resource will cause the associated Web ACL resource to show configuration drift in the `rule` argument unless you add `lifecycle { ignoreChanges = [rule] }` to the Web ACL resource configuration. This is because this resource modifies the Web ACL's rules outside of the Web ACL resource's direct management.
//
// > **Note:** This resource creates a rule within the Web ACL that references the entire Rule Group. The rule group's individual rules are evaluated as a unit when requests are processed by the Web ACL.
//
// ## Example Usage
//
// ### Custom Rule Group - Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/wafv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := wafv2.NewRuleGroup(ctx, "example", &wafv2.RuleGroupArgs{
//				Name:     pulumi.String("example-rule-group"),
//				Scope:    pulumi.String("REGIONAL"),
//				Capacity: pulumi.Int(10),
//				Rules: wafv2.RuleGroupRuleArray{
//					&wafv2.RuleGroupRuleArgs{
//						Name:     pulumi.String("block-suspicious-requests"),
//						Priority: pulumi.Int(1),
//						Action: &wafv2.RuleGroupRuleActionArgs{
//							Block: &wafv2.RuleGroupRuleActionBlockArgs{},
//						},
//						Statement: &wafv2.RuleGroupRuleStatementArgs{
//							GeoMatchStatement: &wafv2.RuleGroupRuleStatementGeoMatchStatementArgs{
//								CountryCodes: pulumi.StringArray{
//									pulumi.String("CN"),
//									pulumi.String("RU"),
//								},
//							},
//						},
//						VisibilityConfig: &wafv2.RuleGroupRuleVisibilityConfigArgs{
//							CloudwatchMetricsEnabled: pulumi.Bool(true),
//							MetricName:               pulumi.String("block-suspicious-requests"),
//							SampledRequestsEnabled:   pulumi.Bool(true),
//						},
//					},
//				},
//				VisibilityConfig: &wafv2.RuleGroupVisibilityConfigArgs{
//					CloudwatchMetricsEnabled: pulumi.Bool(true),
//					MetricName:               pulumi.String("example-rule-group"),
//					SampledRequestsEnabled:   pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleWebAcl, err := wafv2.NewWebAcl(ctx, "example", &wafv2.WebAclArgs{
//				Name:  pulumi.String("example-web-acl"),
//				Scope: pulumi.String("REGIONAL"),
//				DefaultAction: &wafv2.WebAclDefaultActionArgs{
//					Allow: &wafv2.WebAclDefaultActionAllowArgs{},
//				},
//				VisibilityConfig: &wafv2.WebAclVisibilityConfigArgs{
//					CloudwatchMetricsEnabled: pulumi.Bool(true),
//					MetricName:               pulumi.String("example-web-acl"),
//					SampledRequestsEnabled:   pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = wafv2.NewWebAclRuleGroupAssociation(ctx, "example", &wafv2.WebAclRuleGroupAssociationArgs{
//				RuleName:  pulumi.String("example-rule-group-rule"),
//				Priority:  pulumi.Int(100),
//				WebAclArn: exampleWebAcl.Arn,
//				RuleGroupReference: &wafv2.WebAclRuleGroupAssociationRuleGroupReferenceArgs{
//					Arn: example.Arn,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Managed Rule Group - Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/wafv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := wafv2.NewWebAcl(ctx, "example", &wafv2.WebAclArgs{
//				Name:  pulumi.String("example-web-acl"),
//				Scope: pulumi.String("REGIONAL"),
//				DefaultAction: &wafv2.WebAclDefaultActionArgs{
//					Allow: &wafv2.WebAclDefaultActionAllowArgs{},
//				},
//				VisibilityConfig: &wafv2.WebAclVisibilityConfigArgs{
//					CloudwatchMetricsEnabled: pulumi.Bool(true),
//					MetricName:               pulumi.String("example-web-acl"),
//					SampledRequestsEnabled:   pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = wafv2.NewWebAclRuleGroupAssociation(ctx, "managed_example", &wafv2.WebAclRuleGroupAssociationArgs{
//				RuleName:  pulumi.String("aws-common-rule-set"),
//				Priority:  pulumi.Int(50),
//				WebAclArn: example.Arn,
//				ManagedRuleGroup: &wafv2.WebAclRuleGroupAssociationManagedRuleGroupArgs{
//					Name:       pulumi.String("AWSManagedRulesCommonRuleSet"),
//					VendorName: pulumi.String("AWS"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Managed Rule Group - With Version
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/wafv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := wafv2.NewWebAclRuleGroupAssociation(ctx, "managed_versioned", &wafv2.WebAclRuleGroupAssociationArgs{
//				RuleName:  pulumi.String("aws-common-rule-set-versioned"),
//				Priority:  pulumi.Int(60),
//				WebAclArn: pulumi.Any(example.Arn),
//				ManagedRuleGroup: &wafv2.WebAclRuleGroupAssociationManagedRuleGroupArgs{
//					Name:       pulumi.String("AWSManagedRulesCommonRuleSet"),
//					VendorName: pulumi.String("AWS"),
//					Version:    pulumi.String("Version_1.0"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Managed Rule Group - With Rule Action Overrides
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/wafv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := wafv2.NewWebAclRuleGroupAssociation(ctx, "managed_with_overrides", &wafv2.WebAclRuleGroupAssociationArgs{
//				RuleName:  pulumi.String("aws-common-rule-set-with-overrides"),
//				Priority:  pulumi.Int(70),
//				WebAclArn: pulumi.Any(example.Arn),
//				ManagedRuleGroup: &wafv2.WebAclRuleGroupAssociationManagedRuleGroupArgs{
//					Name:       pulumi.String("AWSManagedRulesCommonRuleSet"),
//					VendorName: pulumi.String("AWS"),
//					RuleActionOverrides: wafv2.WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideArray{
//						&wafv2.WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideArgs{
//							Name: pulumi.String("GenericRFI_BODY"),
//							ActionToUse: &wafv2.WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUseArgs{
//								Count: &wafv2.WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUseCountArgs{
//									CustomRequestHandling: &wafv2.WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUseCountCustomRequestHandlingArgs{
//										InsertHeaders: wafv2.WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderArray{
//											&wafv2.WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderArgs{
//												Name:  pulumi.String("X-RFI-Override"),
//												Value: pulumi.String("counted"),
//											},
//										},
//									},
//								},
//							},
//						},
//						&wafv2.WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideArgs{
//							Name: pulumi.String("SizeRestrictions_BODY"),
//							ActionToUse: &wafv2.WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUseArgs{
//								Captcha: &wafv2.WebAclRuleGroupAssociationManagedRuleGroupRuleActionOverrideActionToUseCaptchaArgs{},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Custom Rule Group - With Override Action
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/wafv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := wafv2.NewWebAclRuleGroupAssociation(ctx, "example", &wafv2.WebAclRuleGroupAssociationArgs{
//				RuleName:       pulumi.String("example-rule-group-rule"),
//				Priority:       pulumi.Int(100),
//				WebAclArn:      pulumi.Any(exampleAwsWafv2WebAcl.Arn),
//				OverrideAction: pulumi.String("count"),
//				RuleGroupReference: &wafv2.WebAclRuleGroupAssociationRuleGroupReferenceArgs{
//					Arn: pulumi.Any(exampleAwsWafv2RuleGroup.Arn),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Custom Rule Group - With Rule Action Overrides
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/wafv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := wafv2.NewRuleGroup(ctx, "example", &wafv2.RuleGroupArgs{
//				Name:     pulumi.String("example-rule-group"),
//				Scope:    pulumi.String("REGIONAL"),
//				Capacity: pulumi.Int(10),
//				Rules: wafv2.RuleGroupRuleArray{
//					&wafv2.RuleGroupRuleArgs{
//						Name:     pulumi.String("geo-block-rule"),
//						Priority: pulumi.Int(1),
//						Action: &wafv2.RuleGroupRuleActionArgs{
//							Block: &wafv2.RuleGroupRuleActionBlockArgs{},
//						},
//						Statement: &wafv2.RuleGroupRuleStatementArgs{
//							GeoMatchStatement: &wafv2.RuleGroupRuleStatementGeoMatchStatementArgs{
//								CountryCodes: pulumi.StringArray{
//									pulumi.String("CN"),
//									pulumi.String("RU"),
//								},
//							},
//						},
//						VisibilityConfig: &wafv2.RuleGroupRuleVisibilityConfigArgs{
//							CloudwatchMetricsEnabled: pulumi.Bool(true),
//							MetricName:               pulumi.String("geo-block-rule"),
//							SampledRequestsEnabled:   pulumi.Bool(true),
//						},
//					},
//					&wafv2.RuleGroupRuleArgs{
//						Name:     pulumi.String("rate-limit-rule"),
//						Priority: pulumi.Int(2),
//						Action: &wafv2.RuleGroupRuleActionArgs{
//							Block: &wafv2.RuleGroupRuleActionBlockArgs{},
//						},
//						Statement: &wafv2.RuleGroupRuleStatementArgs{
//							RateBasedStatement: &wafv2.RuleGroupRuleStatementRateBasedStatementArgs{
//								Limit:            pulumi.Int(1000),
//								AggregateKeyType: pulumi.String("IP"),
//							},
//						},
//						VisibilityConfig: &wafv2.RuleGroupRuleVisibilityConfigArgs{
//							CloudwatchMetricsEnabled: pulumi.Bool(true),
//							MetricName:               pulumi.String("rate-limit-rule"),
//							SampledRequestsEnabled:   pulumi.Bool(true),
//						},
//					},
//				},
//				VisibilityConfig: &wafv2.RuleGroupVisibilityConfigArgs{
//					CloudwatchMetricsEnabled: pulumi.Bool(true),
//					MetricName:               pulumi.String("example-rule-group"),
//					SampledRequestsEnabled:   pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleWebAcl, err := wafv2.NewWebAcl(ctx, "example", &wafv2.WebAclArgs{
//				Name:  pulumi.String("example-web-acl"),
//				Scope: pulumi.String("REGIONAL"),
//				DefaultAction: &wafv2.WebAclDefaultActionArgs{
//					Allow: &wafv2.WebAclDefaultActionAllowArgs{},
//				},
//				VisibilityConfig: &wafv2.WebAclVisibilityConfigArgs{
//					CloudwatchMetricsEnabled: pulumi.Bool(true),
//					MetricName:               pulumi.String("example-web-acl"),
//					SampledRequestsEnabled:   pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = wafv2.NewWebAclRuleGroupAssociation(ctx, "example", &wafv2.WebAclRuleGroupAssociationArgs{
//				RuleName:  pulumi.String("example-rule-group-rule"),
//				Priority:  pulumi.Int(100),
//				WebAclArn: exampleWebAcl.Arn,
//				RuleGroupReference: &wafv2.WebAclRuleGroupAssociationRuleGroupReferenceArgs{
//					Arn: example.Arn,
//					RuleActionOverrides: wafv2.WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArray{
//						&wafv2.WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs{
//							Name: pulumi.String("geo-block-rule"),
//							ActionToUse: &wafv2.WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseArgs{
//								Count: &wafv2.WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseCountArgs{
//									CustomRequestHandling: &wafv2.WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseCountCustomRequestHandlingArgs{
//										InsertHeaders: wafv2.WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderArray{
//											&wafv2.WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderArgs{
//												Name:  pulumi.String("X-Geo-Block-Override"),
//												Value: pulumi.String("counted"),
//											},
//										},
//									},
//								},
//							},
//						},
//						&wafv2.WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideArgs{
//							Name: pulumi.String("rate-limit-rule"),
//							ActionToUse: &wafv2.WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseArgs{
//								Captcha: &wafv2.WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseCaptchaArgs{
//									CustomRequestHandling: &wafv2.WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseCaptchaCustomRequestHandlingArgs{
//										InsertHeaders: wafv2.WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderArray{
//											&wafv2.WebAclRuleGroupAssociationRuleGroupReferenceRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderArgs{
//												Name:  pulumi.String("X-Rate-Limit-Override"),
//												Value: pulumi.String("captcha-required"),
//											},
//										},
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Custom Rule Group - CloudFront Web ACL
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/wafv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cloudfrontExample, err := wafv2.NewRuleGroup(ctx, "cloudfront_example", &wafv2.RuleGroupArgs{
//				Name:     pulumi.String("cloudfront-rule-group"),
//				Scope:    pulumi.String("CLOUDFRONT"),
//				Capacity: pulumi.Int(10),
//				Rules: wafv2.RuleGroupRuleArray{
//					&wafv2.RuleGroupRuleArgs{
//						Name:     pulumi.String("rate-limit"),
//						Priority: pulumi.Int(1),
//						Action: &wafv2.RuleGroupRuleActionArgs{
//							Block: &wafv2.RuleGroupRuleActionBlockArgs{},
//						},
//						Statement: &wafv2.RuleGroupRuleStatementArgs{
//							RateBasedStatement: &wafv2.RuleGroupRuleStatementRateBasedStatementArgs{
//								Limit:            pulumi.Int(2000),
//								AggregateKeyType: pulumi.String("IP"),
//							},
//						},
//						VisibilityConfig: &wafv2.RuleGroupRuleVisibilityConfigArgs{
//							CloudwatchMetricsEnabled: pulumi.Bool(true),
//							MetricName:               pulumi.String("rate-limit"),
//							SampledRequestsEnabled:   pulumi.Bool(true),
//						},
//					},
//				},
//				VisibilityConfig: &wafv2.RuleGroupVisibilityConfigArgs{
//					CloudwatchMetricsEnabled: pulumi.Bool(true),
//					MetricName:               pulumi.String("cloudfront-rule-group"),
//					SampledRequestsEnabled:   pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			cloudfrontExampleWebAcl, err := wafv2.NewWebAcl(ctx, "cloudfront_example", &wafv2.WebAclArgs{
//				Name:  pulumi.String("cloudfront-web-acl"),
//				Scope: pulumi.String("CLOUDFRONT"),
//				DefaultAction: &wafv2.WebAclDefaultActionArgs{
//					Allow: &wafv2.WebAclDefaultActionAllowArgs{},
//				},
//				VisibilityConfig: &wafv2.WebAclVisibilityConfigArgs{
//					CloudwatchMetricsEnabled: pulumi.Bool(true),
//					MetricName:               pulumi.String("cloudfront-web-acl"),
//					SampledRequestsEnabled:   pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = wafv2.NewWebAclRuleGroupAssociation(ctx, "cloudfront_example", &wafv2.WebAclRuleGroupAssociationArgs{
//				RuleName:  pulumi.String("cloudfront-rule-group-rule"),
//				Priority:  pulumi.Int(50),
//				WebAclArn: cloudfrontExampleWebAcl.Arn,
//				RuleGroupReference: &wafv2.WebAclRuleGroupAssociationRuleGroupReferenceArgs{
//					Arn: cloudfrontExample.Arn,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import WAFv2 web ACL custom rule group associations using `WebACLARN,RuleGroupARN,RuleName`. For example:
//
// ```sh
// $ pulumi import aws:wafv2/webAclRuleGroupAssociation:WebAclRuleGroupAssociation example "arn:aws:wafv2:us-east-1:123456789012:regional/webacl/example-web-acl/12345678-1234-1234-1234-123456789012,arn:aws:wafv2:us-east-1:123456789012:regional/rulegroup/example-rule-group/87654321-4321-4321-4321-210987654321,example-rule-group-rule"
// ```
// Using `pulumi import`, import WAFv2 web ACL managed rule group associations using `WebACLARN,VendorName:RuleGroupName[:Version],RuleName`. For example:
//
// ```sh
// $ pulumi import aws:wafv2/webAclRuleGroupAssociation:WebAclRuleGroupAssociation managed_example "arn:aws:wafv2:us-east-1:123456789012:regional/webacl/example-web-acl/12345678-1234-1234-1234-123456789012,AWS:AWSManagedRulesCommonRuleSet,aws-common-rule-set"
// ```
type WebAclRuleGroupAssociation struct {
	pulumi.CustomResourceState

	// Managed Rule Group configuration. One of `ruleGroupReference` or `managedRuleGroup` is required. Conflicts with `ruleGroupReference`. See below.
	ManagedRuleGroup WebAclRuleGroupAssociationManagedRuleGroupPtrOutput `pulumi:"managedRuleGroup"`
	// Override action for the rule group. Valid values are `none` and `count`. Defaults to `none`. When set to `count`, the actions defined in the rule group rules are overridden to count matches instead of blocking or allowing requests.
	OverrideAction pulumi.StringOutput `pulumi:"overrideAction"`
	// Priority of the rule within the Web ACL. Rules are evaluated in order of priority, with lower numbers evaluated first.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// Custom Rule Group reference configuration. One of `ruleGroupReference` or `managedRuleGroup` is required. Conflicts with `managedRuleGroup`. See below.
	RuleGroupReference WebAclRuleGroupAssociationRuleGroupReferencePtrOutput `pulumi:"ruleGroupReference"`
	// Name of the rule to create in the Web ACL that references the rule group. Must be between 1 and 128 characters.
	RuleName pulumi.StringOutput                         `pulumi:"ruleName"`
	Timeouts WebAclRuleGroupAssociationTimeoutsPtrOutput `pulumi:"timeouts"`
	// ARN of the Web ACL to associate the Rule Group with.
	//
	// The following arguments are optional:
	WebAclArn pulumi.StringOutput `pulumi:"webAclArn"`
}

// NewWebAclRuleGroupAssociation registers a new resource with the given unique name, arguments, and options.
func NewWebAclRuleGroupAssociation(ctx *pulumi.Context,
	name string, args *WebAclRuleGroupAssociationArgs, opts ...pulumi.ResourceOption) (*WebAclRuleGroupAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.RuleName == nil {
		return nil, errors.New("invalid value for required argument 'RuleName'")
	}
	if args.WebAclArn == nil {
		return nil, errors.New("invalid value for required argument 'WebAclArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebAclRuleGroupAssociation
	err := ctx.RegisterResource("aws:wafv2/webAclRuleGroupAssociation:WebAclRuleGroupAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAclRuleGroupAssociation gets an existing WebAclRuleGroupAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAclRuleGroupAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAclRuleGroupAssociationState, opts ...pulumi.ResourceOption) (*WebAclRuleGroupAssociation, error) {
	var resource WebAclRuleGroupAssociation
	err := ctx.ReadResource("aws:wafv2/webAclRuleGroupAssociation:WebAclRuleGroupAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAclRuleGroupAssociation resources.
type webAclRuleGroupAssociationState struct {
	// Managed Rule Group configuration. One of `ruleGroupReference` or `managedRuleGroup` is required. Conflicts with `ruleGroupReference`. See below.
	ManagedRuleGroup *WebAclRuleGroupAssociationManagedRuleGroup `pulumi:"managedRuleGroup"`
	// Override action for the rule group. Valid values are `none` and `count`. Defaults to `none`. When set to `count`, the actions defined in the rule group rules are overridden to count matches instead of blocking or allowing requests.
	OverrideAction *string `pulumi:"overrideAction"`
	// Priority of the rule within the Web ACL. Rules are evaluated in order of priority, with lower numbers evaluated first.
	Priority *int `pulumi:"priority"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Custom Rule Group reference configuration. One of `ruleGroupReference` or `managedRuleGroup` is required. Conflicts with `managedRuleGroup`. See below.
	RuleGroupReference *WebAclRuleGroupAssociationRuleGroupReference `pulumi:"ruleGroupReference"`
	// Name of the rule to create in the Web ACL that references the rule group. Must be between 1 and 128 characters.
	RuleName *string                             `pulumi:"ruleName"`
	Timeouts *WebAclRuleGroupAssociationTimeouts `pulumi:"timeouts"`
	// ARN of the Web ACL to associate the Rule Group with.
	//
	// The following arguments are optional:
	WebAclArn *string `pulumi:"webAclArn"`
}

type WebAclRuleGroupAssociationState struct {
	// Managed Rule Group configuration. One of `ruleGroupReference` or `managedRuleGroup` is required. Conflicts with `ruleGroupReference`. See below.
	ManagedRuleGroup WebAclRuleGroupAssociationManagedRuleGroupPtrInput
	// Override action for the rule group. Valid values are `none` and `count`. Defaults to `none`. When set to `count`, the actions defined in the rule group rules are overridden to count matches instead of blocking or allowing requests.
	OverrideAction pulumi.StringPtrInput
	// Priority of the rule within the Web ACL. Rules are evaluated in order of priority, with lower numbers evaluated first.
	Priority pulumi.IntPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Custom Rule Group reference configuration. One of `ruleGroupReference` or `managedRuleGroup` is required. Conflicts with `managedRuleGroup`. See below.
	RuleGroupReference WebAclRuleGroupAssociationRuleGroupReferencePtrInput
	// Name of the rule to create in the Web ACL that references the rule group. Must be between 1 and 128 characters.
	RuleName pulumi.StringPtrInput
	Timeouts WebAclRuleGroupAssociationTimeoutsPtrInput
	// ARN of the Web ACL to associate the Rule Group with.
	//
	// The following arguments are optional:
	WebAclArn pulumi.StringPtrInput
}

func (WebAclRuleGroupAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAclRuleGroupAssociationState)(nil)).Elem()
}

type webAclRuleGroupAssociationArgs struct {
	// Managed Rule Group configuration. One of `ruleGroupReference` or `managedRuleGroup` is required. Conflicts with `ruleGroupReference`. See below.
	ManagedRuleGroup *WebAclRuleGroupAssociationManagedRuleGroup `pulumi:"managedRuleGroup"`
	// Override action for the rule group. Valid values are `none` and `count`. Defaults to `none`. When set to `count`, the actions defined in the rule group rules are overridden to count matches instead of blocking or allowing requests.
	OverrideAction *string `pulumi:"overrideAction"`
	// Priority of the rule within the Web ACL. Rules are evaluated in order of priority, with lower numbers evaluated first.
	Priority int `pulumi:"priority"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Custom Rule Group reference configuration. One of `ruleGroupReference` or `managedRuleGroup` is required. Conflicts with `managedRuleGroup`. See below.
	RuleGroupReference *WebAclRuleGroupAssociationRuleGroupReference `pulumi:"ruleGroupReference"`
	// Name of the rule to create in the Web ACL that references the rule group. Must be between 1 and 128 characters.
	RuleName string                              `pulumi:"ruleName"`
	Timeouts *WebAclRuleGroupAssociationTimeouts `pulumi:"timeouts"`
	// ARN of the Web ACL to associate the Rule Group with.
	//
	// The following arguments are optional:
	WebAclArn string `pulumi:"webAclArn"`
}

// The set of arguments for constructing a WebAclRuleGroupAssociation resource.
type WebAclRuleGroupAssociationArgs struct {
	// Managed Rule Group configuration. One of `ruleGroupReference` or `managedRuleGroup` is required. Conflicts with `ruleGroupReference`. See below.
	ManagedRuleGroup WebAclRuleGroupAssociationManagedRuleGroupPtrInput
	// Override action for the rule group. Valid values are `none` and `count`. Defaults to `none`. When set to `count`, the actions defined in the rule group rules are overridden to count matches instead of blocking or allowing requests.
	OverrideAction pulumi.StringPtrInput
	// Priority of the rule within the Web ACL. Rules are evaluated in order of priority, with lower numbers evaluated first.
	Priority pulumi.IntInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Custom Rule Group reference configuration. One of `ruleGroupReference` or `managedRuleGroup` is required. Conflicts with `managedRuleGroup`. See below.
	RuleGroupReference WebAclRuleGroupAssociationRuleGroupReferencePtrInput
	// Name of the rule to create in the Web ACL that references the rule group. Must be between 1 and 128 characters.
	RuleName pulumi.StringInput
	Timeouts WebAclRuleGroupAssociationTimeoutsPtrInput
	// ARN of the Web ACL to associate the Rule Group with.
	//
	// The following arguments are optional:
	WebAclArn pulumi.StringInput
}

func (WebAclRuleGroupAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAclRuleGroupAssociationArgs)(nil)).Elem()
}

type WebAclRuleGroupAssociationInput interface {
	pulumi.Input

	ToWebAclRuleGroupAssociationOutput() WebAclRuleGroupAssociationOutput
	ToWebAclRuleGroupAssociationOutputWithContext(ctx context.Context) WebAclRuleGroupAssociationOutput
}

func (*WebAclRuleGroupAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclRuleGroupAssociation)(nil)).Elem()
}

func (i *WebAclRuleGroupAssociation) ToWebAclRuleGroupAssociationOutput() WebAclRuleGroupAssociationOutput {
	return i.ToWebAclRuleGroupAssociationOutputWithContext(context.Background())
}

func (i *WebAclRuleGroupAssociation) ToWebAclRuleGroupAssociationOutputWithContext(ctx context.Context) WebAclRuleGroupAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleGroupAssociationOutput)
}

// WebAclRuleGroupAssociationArrayInput is an input type that accepts WebAclRuleGroupAssociationArray and WebAclRuleGroupAssociationArrayOutput values.
// You can construct a concrete instance of `WebAclRuleGroupAssociationArrayInput` via:
//
//	WebAclRuleGroupAssociationArray{ WebAclRuleGroupAssociationArgs{...} }
type WebAclRuleGroupAssociationArrayInput interface {
	pulumi.Input

	ToWebAclRuleGroupAssociationArrayOutput() WebAclRuleGroupAssociationArrayOutput
	ToWebAclRuleGroupAssociationArrayOutputWithContext(context.Context) WebAclRuleGroupAssociationArrayOutput
}

type WebAclRuleGroupAssociationArray []WebAclRuleGroupAssociationInput

func (WebAclRuleGroupAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAclRuleGroupAssociation)(nil)).Elem()
}

func (i WebAclRuleGroupAssociationArray) ToWebAclRuleGroupAssociationArrayOutput() WebAclRuleGroupAssociationArrayOutput {
	return i.ToWebAclRuleGroupAssociationArrayOutputWithContext(context.Background())
}

func (i WebAclRuleGroupAssociationArray) ToWebAclRuleGroupAssociationArrayOutputWithContext(ctx context.Context) WebAclRuleGroupAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleGroupAssociationArrayOutput)
}

// WebAclRuleGroupAssociationMapInput is an input type that accepts WebAclRuleGroupAssociationMap and WebAclRuleGroupAssociationMapOutput values.
// You can construct a concrete instance of `WebAclRuleGroupAssociationMapInput` via:
//
//	WebAclRuleGroupAssociationMap{ "key": WebAclRuleGroupAssociationArgs{...} }
type WebAclRuleGroupAssociationMapInput interface {
	pulumi.Input

	ToWebAclRuleGroupAssociationMapOutput() WebAclRuleGroupAssociationMapOutput
	ToWebAclRuleGroupAssociationMapOutputWithContext(context.Context) WebAclRuleGroupAssociationMapOutput
}

type WebAclRuleGroupAssociationMap map[string]WebAclRuleGroupAssociationInput

func (WebAclRuleGroupAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAclRuleGroupAssociation)(nil)).Elem()
}

func (i WebAclRuleGroupAssociationMap) ToWebAclRuleGroupAssociationMapOutput() WebAclRuleGroupAssociationMapOutput {
	return i.ToWebAclRuleGroupAssociationMapOutputWithContext(context.Background())
}

func (i WebAclRuleGroupAssociationMap) ToWebAclRuleGroupAssociationMapOutputWithContext(ctx context.Context) WebAclRuleGroupAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleGroupAssociationMapOutput)
}

type WebAclRuleGroupAssociationOutput struct{ *pulumi.OutputState }

func (WebAclRuleGroupAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclRuleGroupAssociation)(nil)).Elem()
}

func (o WebAclRuleGroupAssociationOutput) ToWebAclRuleGroupAssociationOutput() WebAclRuleGroupAssociationOutput {
	return o
}

func (o WebAclRuleGroupAssociationOutput) ToWebAclRuleGroupAssociationOutputWithContext(ctx context.Context) WebAclRuleGroupAssociationOutput {
	return o
}

// Managed Rule Group configuration. One of `ruleGroupReference` or `managedRuleGroup` is required. Conflicts with `ruleGroupReference`. See below.
func (o WebAclRuleGroupAssociationOutput) ManagedRuleGroup() WebAclRuleGroupAssociationManagedRuleGroupPtrOutput {
	return o.ApplyT(func(v *WebAclRuleGroupAssociation) WebAclRuleGroupAssociationManagedRuleGroupPtrOutput {
		return v.ManagedRuleGroup
	}).(WebAclRuleGroupAssociationManagedRuleGroupPtrOutput)
}

// Override action for the rule group. Valid values are `none` and `count`. Defaults to `none`. When set to `count`, the actions defined in the rule group rules are overridden to count matches instead of blocking or allowing requests.
func (o WebAclRuleGroupAssociationOutput) OverrideAction() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAclRuleGroupAssociation) pulumi.StringOutput { return v.OverrideAction }).(pulumi.StringOutput)
}

// Priority of the rule within the Web ACL. Rules are evaluated in order of priority, with lower numbers evaluated first.
func (o WebAclRuleGroupAssociationOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *WebAclRuleGroupAssociation) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o WebAclRuleGroupAssociationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAclRuleGroupAssociation) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Custom Rule Group reference configuration. One of `ruleGroupReference` or `managedRuleGroup` is required. Conflicts with `managedRuleGroup`. See below.
func (o WebAclRuleGroupAssociationOutput) RuleGroupReference() WebAclRuleGroupAssociationRuleGroupReferencePtrOutput {
	return o.ApplyT(func(v *WebAclRuleGroupAssociation) WebAclRuleGroupAssociationRuleGroupReferencePtrOutput {
		return v.RuleGroupReference
	}).(WebAclRuleGroupAssociationRuleGroupReferencePtrOutput)
}

// Name of the rule to create in the Web ACL that references the rule group. Must be between 1 and 128 characters.
func (o WebAclRuleGroupAssociationOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAclRuleGroupAssociation) pulumi.StringOutput { return v.RuleName }).(pulumi.StringOutput)
}

func (o WebAclRuleGroupAssociationOutput) Timeouts() WebAclRuleGroupAssociationTimeoutsPtrOutput {
	return o.ApplyT(func(v *WebAclRuleGroupAssociation) WebAclRuleGroupAssociationTimeoutsPtrOutput { return v.Timeouts }).(WebAclRuleGroupAssociationTimeoutsPtrOutput)
}

// ARN of the Web ACL to associate the Rule Group with.
//
// The following arguments are optional:
func (o WebAclRuleGroupAssociationOutput) WebAclArn() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAclRuleGroupAssociation) pulumi.StringOutput { return v.WebAclArn }).(pulumi.StringOutput)
}

type WebAclRuleGroupAssociationArrayOutput struct{ *pulumi.OutputState }

func (WebAclRuleGroupAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAclRuleGroupAssociation)(nil)).Elem()
}

func (o WebAclRuleGroupAssociationArrayOutput) ToWebAclRuleGroupAssociationArrayOutput() WebAclRuleGroupAssociationArrayOutput {
	return o
}

func (o WebAclRuleGroupAssociationArrayOutput) ToWebAclRuleGroupAssociationArrayOutputWithContext(ctx context.Context) WebAclRuleGroupAssociationArrayOutput {
	return o
}

func (o WebAclRuleGroupAssociationArrayOutput) Index(i pulumi.IntInput) WebAclRuleGroupAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebAclRuleGroupAssociation {
		return vs[0].([]*WebAclRuleGroupAssociation)[vs[1].(int)]
	}).(WebAclRuleGroupAssociationOutput)
}

type WebAclRuleGroupAssociationMapOutput struct{ *pulumi.OutputState }

func (WebAclRuleGroupAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAclRuleGroupAssociation)(nil)).Elem()
}

func (o WebAclRuleGroupAssociationMapOutput) ToWebAclRuleGroupAssociationMapOutput() WebAclRuleGroupAssociationMapOutput {
	return o
}

func (o WebAclRuleGroupAssociationMapOutput) ToWebAclRuleGroupAssociationMapOutputWithContext(ctx context.Context) WebAclRuleGroupAssociationMapOutput {
	return o
}

func (o WebAclRuleGroupAssociationMapOutput) MapIndex(k pulumi.StringInput) WebAclRuleGroupAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebAclRuleGroupAssociation {
		return vs[0].(map[string]*WebAclRuleGroupAssociation)[vs[1].(string)]
	}).(WebAclRuleGroupAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRuleGroupAssociationInput)(nil)).Elem(), &WebAclRuleGroupAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRuleGroupAssociationArrayInput)(nil)).Elem(), WebAclRuleGroupAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRuleGroupAssociationMapInput)(nil)).Elem(), WebAclRuleGroupAssociationMap{})
	pulumi.RegisterOutputType(WebAclRuleGroupAssociationOutput{})
	pulumi.RegisterOutputType(WebAclRuleGroupAssociationArrayOutput{})
	pulumi.RegisterOutputType(WebAclRuleGroupAssociationMapOutput{})
}
