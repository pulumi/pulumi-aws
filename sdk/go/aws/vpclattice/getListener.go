// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS VPC Lattice Listener.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/vpclattice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpclattice.LookupListener(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupListener(ctx *pulumi.Context, args *LookupListenerArgs, opts ...pulumi.InvokeOption) (*LookupListenerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupListenerResult
	err := ctx.Invoke("aws:vpclattice/getListener:getListener", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getListener.
type LookupListenerArgs struct {
	// ID or Amazon Resource Name (ARN) of the listener
	ListenerIdentifier string `pulumi:"listenerIdentifier"`
	// ID or Amazon Resource Name (ARN) of the service network
	ServiceIdentifier string `pulumi:"serviceIdentifier"`
	// List of tags associated with the listener.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getListener.
type LookupListenerResult struct {
	// ARN of the listener.
	Arn string `pulumi:"arn"`
	// The date and time that the listener was created.
	CreatedAt string `pulumi:"createdAt"`
	// The actions for the default listener rule.
	DefaultActions []GetListenerDefaultAction `pulumi:"defaultActions"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The date and time the listener was last updated.
	LastUpdatedAt string `pulumi:"lastUpdatedAt"`
	// The ID of the listener.
	ListenerId         string `pulumi:"listenerId"`
	ListenerIdentifier string `pulumi:"listenerIdentifier"`
	// The name of the listener.
	Name string `pulumi:"name"`
	// The listener port.
	Port int `pulumi:"port"`
	// The listener protocol. Either `HTTPS` or `HTTP`.
	Protocol string `pulumi:"protocol"`
	// The ARN of the service.
	ServiceArn string `pulumi:"serviceArn"`
	// The ID of the service.
	ServiceId         string `pulumi:"serviceId"`
	ServiceIdentifier string `pulumi:"serviceIdentifier"`
	// List of tags associated with the listener.
	Tags map[string]string `pulumi:"tags"`
}

func LookupListenerOutput(ctx *pulumi.Context, args LookupListenerOutputArgs, opts ...pulumi.InvokeOption) LookupListenerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupListenerResult, error) {
			args := v.(LookupListenerArgs)
			r, err := LookupListener(ctx, &args, opts...)
			var s LookupListenerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupListenerResultOutput)
}

// A collection of arguments for invoking getListener.
type LookupListenerOutputArgs struct {
	// ID or Amazon Resource Name (ARN) of the listener
	ListenerIdentifier pulumi.StringInput `pulumi:"listenerIdentifier"`
	// ID or Amazon Resource Name (ARN) of the service network
	ServiceIdentifier pulumi.StringInput `pulumi:"serviceIdentifier"`
	// List of tags associated with the listener.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupListenerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListenerArgs)(nil)).Elem()
}

// A collection of values returned by getListener.
type LookupListenerResultOutput struct{ *pulumi.OutputState }

func (LookupListenerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListenerResult)(nil)).Elem()
}

func (o LookupListenerResultOutput) ToLookupListenerResultOutput() LookupListenerResultOutput {
	return o
}

func (o LookupListenerResultOutput) ToLookupListenerResultOutputWithContext(ctx context.Context) LookupListenerResultOutput {
	return o
}

// ARN of the listener.
func (o LookupListenerResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The date and time that the listener was created.
func (o LookupListenerResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The actions for the default listener rule.
func (o LookupListenerResultOutput) DefaultActions() GetListenerDefaultActionArrayOutput {
	return o.ApplyT(func(v LookupListenerResult) []GetListenerDefaultAction { return v.DefaultActions }).(GetListenerDefaultActionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupListenerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.Id }).(pulumi.StringOutput)
}

// The date and time the listener was last updated.
func (o LookupListenerResultOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

// The ID of the listener.
func (o LookupListenerResultOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.ListenerId }).(pulumi.StringOutput)
}

func (o LookupListenerResultOutput) ListenerIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.ListenerIdentifier }).(pulumi.StringOutput)
}

// The name of the listener.
func (o LookupListenerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.Name }).(pulumi.StringOutput)
}

// The listener port.
func (o LookupListenerResultOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LookupListenerResult) int { return v.Port }).(pulumi.IntOutput)
}

// The listener protocol. Either `HTTPS` or `HTTP`.
func (o LookupListenerResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// The ARN of the service.
func (o LookupListenerResultOutput) ServiceArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.ServiceArn }).(pulumi.StringOutput)
}

// The ID of the service.
func (o LookupListenerResultOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.ServiceId }).(pulumi.StringOutput)
}

func (o LookupListenerResultOutput) ServiceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerResult) string { return v.ServiceIdentifier }).(pulumi.StringOutput)
}

// List of tags associated with the listener.
func (o LookupListenerResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupListenerResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupListenerResultOutput{})
}
