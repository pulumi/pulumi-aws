// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS VPC Lattice Auth Policy.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/vpclattice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpclattice.LookupAuthPolicy(ctx, &vpclattice.LookupAuthPolicyArgs{
//				ResourceIdentifier: aws_vpclattice_auth_policy.Test.Resource_identifier,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAuthPolicy(ctx *pulumi.Context, args *LookupAuthPolicyArgs, opts ...pulumi.InvokeOption) (*LookupAuthPolicyResult, error) {
	var rv LookupAuthPolicyResult
	err := ctx.Invoke("aws:vpclattice/getAuthPolicy:getAuthPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuthPolicy.
type LookupAuthPolicyArgs struct {
	// The auth policy. The policy string in JSON must not contain newlines or blank lines.
	Policy *string `pulumi:"policy"`
	// The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
	ResourceIdentifier string `pulumi:"resourceIdentifier"`
	// The state of the auth policy. The auth policy is only active when the auth type is set to AWS_IAM. If you provide a policy, then authentication and authorization decisions are made based on this policy and the client's IAM policy. If the Auth type is NONE, then, any auth policy you provide will remain inactive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getAuthPolicy.
type LookupAuthPolicyResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The auth policy. The policy string in JSON must not contain newlines or blank lines.
	Policy             *string `pulumi:"policy"`
	ResourceIdentifier string  `pulumi:"resourceIdentifier"`
	// The state of the auth policy. The auth policy is only active when the auth type is set to AWS_IAM. If you provide a policy, then authentication and authorization decisions are made based on this policy and the client's IAM policy. If the Auth type is NONE, then, any auth policy you provide will remain inactive.
	State *string `pulumi:"state"`
}

func LookupAuthPolicyOutput(ctx *pulumi.Context, args LookupAuthPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupAuthPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAuthPolicyResult, error) {
			args := v.(LookupAuthPolicyArgs)
			r, err := LookupAuthPolicy(ctx, &args, opts...)
			var s LookupAuthPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAuthPolicyResultOutput)
}

// A collection of arguments for invoking getAuthPolicy.
type LookupAuthPolicyOutputArgs struct {
	// The auth policy. The policy string in JSON must not contain newlines or blank lines.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
	ResourceIdentifier pulumi.StringInput `pulumi:"resourceIdentifier"`
	// The state of the auth policy. The auth policy is only active when the auth type is set to AWS_IAM. If you provide a policy, then authentication and authorization decisions are made based on this policy and the client's IAM policy. If the Auth type is NONE, then, any auth policy you provide will remain inactive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (LookupAuthPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuthPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getAuthPolicy.
type LookupAuthPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupAuthPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuthPolicyResult)(nil)).Elem()
}

func (o LookupAuthPolicyResultOutput) ToLookupAuthPolicyResultOutput() LookupAuthPolicyResultOutput {
	return o
}

func (o LookupAuthPolicyResultOutput) ToLookupAuthPolicyResultOutputWithContext(ctx context.Context) LookupAuthPolicyResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAuthPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The auth policy. The policy string in JSON must not contain newlines or blank lines.
func (o LookupAuthPolicyResultOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAuthPolicyResult) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

func (o LookupAuthPolicyResultOutput) ResourceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthPolicyResult) string { return v.ResourceIdentifier }).(pulumi.StringOutput)
}

// The state of the auth policy. The auth policy is only active when the auth type is set to AWS_IAM. If you provide a policy, then authentication and authorization decisions are made based on this policy and the client's IAM policy. If the Auth type is NONE, then, any auth policy you provide will remain inactive.
func (o LookupAuthPolicyResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAuthPolicyResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAuthPolicyResultOutput{})
}
