// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS VPC Lattice Service Network VPC Association.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/vpclattice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpclattice.NewServiceNetworkVpcAssociation(ctx, "example", &vpclattice.ServiceNetworkVpcAssociationArgs{
//				VpcIdentifier:            pulumi.Any(aws_vpc.Example.Id),
//				ServiceNetworkIdentifier: pulumi.Any(aws_vpclattice_service_network.Example.Id),
//				SecurityGroupIds: pulumi.StringArray{
//					aws_security_group.Example.Id,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import VPC Lattice Service Network VPC Association using the `id`. For example:
//
// ```sh
//
//	$ pulumi import aws:vpclattice/serviceNetworkVpcAssociation:ServiceNetworkVpcAssociation example snsa-05e2474658a88f6ba
//
// ```
type ServiceNetworkVpcAssociation struct {
	pulumi.CustomResourceState

	// The ARN of the Association.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The account that created the association.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// The IDs of the security groups.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
	// The following arguments are optional:
	ServiceNetworkIdentifier pulumi.StringOutput `pulumi:"serviceNetworkIdentifier"`
	// The operations status. Valid Values are CREATE_IN_PROGRESS | ACTIVE | DELETE_IN_PROGRESS | CREATE_FAILED | DELETE_FAILED
	Status pulumi.StringOutput `pulumi:"status"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// The ID of the VPC.
	VpcIdentifier pulumi.StringOutput `pulumi:"vpcIdentifier"`
}

// NewServiceNetworkVpcAssociation registers a new resource with the given unique name, arguments, and options.
func NewServiceNetworkVpcAssociation(ctx *pulumi.Context,
	name string, args *ServiceNetworkVpcAssociationArgs, opts ...pulumi.ResourceOption) (*ServiceNetworkVpcAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceNetworkIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ServiceNetworkIdentifier'")
	}
	if args.VpcIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'VpcIdentifier'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"tagsAll",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceNetworkVpcAssociation
	err := ctx.RegisterResource("aws:vpclattice/serviceNetworkVpcAssociation:ServiceNetworkVpcAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceNetworkVpcAssociation gets an existing ServiceNetworkVpcAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceNetworkVpcAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceNetworkVpcAssociationState, opts ...pulumi.ResourceOption) (*ServiceNetworkVpcAssociation, error) {
	var resource ServiceNetworkVpcAssociation
	err := ctx.ReadResource("aws:vpclattice/serviceNetworkVpcAssociation:ServiceNetworkVpcAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceNetworkVpcAssociation resources.
type serviceNetworkVpcAssociationState struct {
	// The ARN of the Association.
	Arn *string `pulumi:"arn"`
	// The account that created the association.
	CreatedBy *string `pulumi:"createdBy"`
	// The IDs of the security groups.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
	// The following arguments are optional:
	ServiceNetworkIdentifier *string `pulumi:"serviceNetworkIdentifier"`
	// The operations status. Valid Values are CREATE_IN_PROGRESS | ACTIVE | DELETE_IN_PROGRESS | CREATE_FAILED | DELETE_FAILED
	Status *string `pulumi:"status"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The ID of the VPC.
	VpcIdentifier *string `pulumi:"vpcIdentifier"`
}

type ServiceNetworkVpcAssociationState struct {
	// The ARN of the Association.
	Arn pulumi.StringPtrInput
	// The account that created the association.
	CreatedBy pulumi.StringPtrInput
	// The IDs of the security groups.
	SecurityGroupIds pulumi.StringArrayInput
	// The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
	// The following arguments are optional:
	ServiceNetworkIdentifier pulumi.StringPtrInput
	// The operations status. Valid Values are CREATE_IN_PROGRESS | ACTIVE | DELETE_IN_PROGRESS | CREATE_FAILED | DELETE_FAILED
	Status pulumi.StringPtrInput
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	// The ID of the VPC.
	VpcIdentifier pulumi.StringPtrInput
}

func (ServiceNetworkVpcAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceNetworkVpcAssociationState)(nil)).Elem()
}

type serviceNetworkVpcAssociationArgs struct {
	// The IDs of the security groups.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
	// The following arguments are optional:
	ServiceNetworkIdentifier string `pulumi:"serviceNetworkIdentifier"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the VPC.
	VpcIdentifier string `pulumi:"vpcIdentifier"`
}

// The set of arguments for constructing a ServiceNetworkVpcAssociation resource.
type ServiceNetworkVpcAssociationArgs struct {
	// The IDs of the security groups.
	SecurityGroupIds pulumi.StringArrayInput
	// The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
	// The following arguments are optional:
	ServiceNetworkIdentifier pulumi.StringInput
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// The ID of the VPC.
	VpcIdentifier pulumi.StringInput
}

func (ServiceNetworkVpcAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceNetworkVpcAssociationArgs)(nil)).Elem()
}

type ServiceNetworkVpcAssociationInput interface {
	pulumi.Input

	ToServiceNetworkVpcAssociationOutput() ServiceNetworkVpcAssociationOutput
	ToServiceNetworkVpcAssociationOutputWithContext(ctx context.Context) ServiceNetworkVpcAssociationOutput
}

func (*ServiceNetworkVpcAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkVpcAssociation)(nil)).Elem()
}

func (i *ServiceNetworkVpcAssociation) ToServiceNetworkVpcAssociationOutput() ServiceNetworkVpcAssociationOutput {
	return i.ToServiceNetworkVpcAssociationOutputWithContext(context.Background())
}

func (i *ServiceNetworkVpcAssociation) ToServiceNetworkVpcAssociationOutputWithContext(ctx context.Context) ServiceNetworkVpcAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkVpcAssociationOutput)
}

func (i *ServiceNetworkVpcAssociation) ToOutput(ctx context.Context) pulumix.Output[*ServiceNetworkVpcAssociation] {
	return pulumix.Output[*ServiceNetworkVpcAssociation]{
		OutputState: i.ToServiceNetworkVpcAssociationOutputWithContext(ctx).OutputState,
	}
}

// ServiceNetworkVpcAssociationArrayInput is an input type that accepts ServiceNetworkVpcAssociationArray and ServiceNetworkVpcAssociationArrayOutput values.
// You can construct a concrete instance of `ServiceNetworkVpcAssociationArrayInput` via:
//
//	ServiceNetworkVpcAssociationArray{ ServiceNetworkVpcAssociationArgs{...} }
type ServiceNetworkVpcAssociationArrayInput interface {
	pulumi.Input

	ToServiceNetworkVpcAssociationArrayOutput() ServiceNetworkVpcAssociationArrayOutput
	ToServiceNetworkVpcAssociationArrayOutputWithContext(context.Context) ServiceNetworkVpcAssociationArrayOutput
}

type ServiceNetworkVpcAssociationArray []ServiceNetworkVpcAssociationInput

func (ServiceNetworkVpcAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceNetworkVpcAssociation)(nil)).Elem()
}

func (i ServiceNetworkVpcAssociationArray) ToServiceNetworkVpcAssociationArrayOutput() ServiceNetworkVpcAssociationArrayOutput {
	return i.ToServiceNetworkVpcAssociationArrayOutputWithContext(context.Background())
}

func (i ServiceNetworkVpcAssociationArray) ToServiceNetworkVpcAssociationArrayOutputWithContext(ctx context.Context) ServiceNetworkVpcAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkVpcAssociationArrayOutput)
}

func (i ServiceNetworkVpcAssociationArray) ToOutput(ctx context.Context) pulumix.Output[[]*ServiceNetworkVpcAssociation] {
	return pulumix.Output[[]*ServiceNetworkVpcAssociation]{
		OutputState: i.ToServiceNetworkVpcAssociationArrayOutputWithContext(ctx).OutputState,
	}
}

// ServiceNetworkVpcAssociationMapInput is an input type that accepts ServiceNetworkVpcAssociationMap and ServiceNetworkVpcAssociationMapOutput values.
// You can construct a concrete instance of `ServiceNetworkVpcAssociationMapInput` via:
//
//	ServiceNetworkVpcAssociationMap{ "key": ServiceNetworkVpcAssociationArgs{...} }
type ServiceNetworkVpcAssociationMapInput interface {
	pulumi.Input

	ToServiceNetworkVpcAssociationMapOutput() ServiceNetworkVpcAssociationMapOutput
	ToServiceNetworkVpcAssociationMapOutputWithContext(context.Context) ServiceNetworkVpcAssociationMapOutput
}

type ServiceNetworkVpcAssociationMap map[string]ServiceNetworkVpcAssociationInput

func (ServiceNetworkVpcAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceNetworkVpcAssociation)(nil)).Elem()
}

func (i ServiceNetworkVpcAssociationMap) ToServiceNetworkVpcAssociationMapOutput() ServiceNetworkVpcAssociationMapOutput {
	return i.ToServiceNetworkVpcAssociationMapOutputWithContext(context.Background())
}

func (i ServiceNetworkVpcAssociationMap) ToServiceNetworkVpcAssociationMapOutputWithContext(ctx context.Context) ServiceNetworkVpcAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkVpcAssociationMapOutput)
}

func (i ServiceNetworkVpcAssociationMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*ServiceNetworkVpcAssociation] {
	return pulumix.Output[map[string]*ServiceNetworkVpcAssociation]{
		OutputState: i.ToServiceNetworkVpcAssociationMapOutputWithContext(ctx).OutputState,
	}
}

type ServiceNetworkVpcAssociationOutput struct{ *pulumi.OutputState }

func (ServiceNetworkVpcAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkVpcAssociation)(nil)).Elem()
}

func (o ServiceNetworkVpcAssociationOutput) ToServiceNetworkVpcAssociationOutput() ServiceNetworkVpcAssociationOutput {
	return o
}

func (o ServiceNetworkVpcAssociationOutput) ToServiceNetworkVpcAssociationOutputWithContext(ctx context.Context) ServiceNetworkVpcAssociationOutput {
	return o
}

func (o ServiceNetworkVpcAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[*ServiceNetworkVpcAssociation] {
	return pulumix.Output[*ServiceNetworkVpcAssociation]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Association.
func (o ServiceNetworkVpcAssociationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkVpcAssociation) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The account that created the association.
func (o ServiceNetworkVpcAssociationOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkVpcAssociation) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// The IDs of the security groups.
func (o ServiceNetworkVpcAssociationOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceNetworkVpcAssociation) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
// The following arguments are optional:
func (o ServiceNetworkVpcAssociationOutput) ServiceNetworkIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkVpcAssociation) pulumi.StringOutput { return v.ServiceNetworkIdentifier }).(pulumi.StringOutput)
}

// The operations status. Valid Values are CREATE_IN_PROGRESS | ACTIVE | DELETE_IN_PROGRESS | CREATE_FAILED | DELETE_FAILED
func (o ServiceNetworkVpcAssociationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkVpcAssociation) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ServiceNetworkVpcAssociationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceNetworkVpcAssociation) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o ServiceNetworkVpcAssociationOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceNetworkVpcAssociation) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// The ID of the VPC.
func (o ServiceNetworkVpcAssociationOutput) VpcIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkVpcAssociation) pulumi.StringOutput { return v.VpcIdentifier }).(pulumi.StringOutput)
}

type ServiceNetworkVpcAssociationArrayOutput struct{ *pulumi.OutputState }

func (ServiceNetworkVpcAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceNetworkVpcAssociation)(nil)).Elem()
}

func (o ServiceNetworkVpcAssociationArrayOutput) ToServiceNetworkVpcAssociationArrayOutput() ServiceNetworkVpcAssociationArrayOutput {
	return o
}

func (o ServiceNetworkVpcAssociationArrayOutput) ToServiceNetworkVpcAssociationArrayOutputWithContext(ctx context.Context) ServiceNetworkVpcAssociationArrayOutput {
	return o
}

func (o ServiceNetworkVpcAssociationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*ServiceNetworkVpcAssociation] {
	return pulumix.Output[[]*ServiceNetworkVpcAssociation]{
		OutputState: o.OutputState,
	}
}

func (o ServiceNetworkVpcAssociationArrayOutput) Index(i pulumi.IntInput) ServiceNetworkVpcAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceNetworkVpcAssociation {
		return vs[0].([]*ServiceNetworkVpcAssociation)[vs[1].(int)]
	}).(ServiceNetworkVpcAssociationOutput)
}

type ServiceNetworkVpcAssociationMapOutput struct{ *pulumi.OutputState }

func (ServiceNetworkVpcAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceNetworkVpcAssociation)(nil)).Elem()
}

func (o ServiceNetworkVpcAssociationMapOutput) ToServiceNetworkVpcAssociationMapOutput() ServiceNetworkVpcAssociationMapOutput {
	return o
}

func (o ServiceNetworkVpcAssociationMapOutput) ToServiceNetworkVpcAssociationMapOutputWithContext(ctx context.Context) ServiceNetworkVpcAssociationMapOutput {
	return o
}

func (o ServiceNetworkVpcAssociationMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*ServiceNetworkVpcAssociation] {
	return pulumix.Output[map[string]*ServiceNetworkVpcAssociation]{
		OutputState: o.OutputState,
	}
}

func (o ServiceNetworkVpcAssociationMapOutput) MapIndex(k pulumi.StringInput) ServiceNetworkVpcAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceNetworkVpcAssociation {
		return vs[0].(map[string]*ServiceNetworkVpcAssociation)[vs[1].(string)]
	}).(ServiceNetworkVpcAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkVpcAssociationInput)(nil)).Elem(), &ServiceNetworkVpcAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkVpcAssociationArrayInput)(nil)).Elem(), ServiceNetworkVpcAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkVpcAssociationMapInput)(nil)).Elem(), ServiceNetworkVpcAssociationMap{})
	pulumi.RegisterOutputType(ServiceNetworkVpcAssociationOutput{})
	pulumi.RegisterOutputType(ServiceNetworkVpcAssociationArrayOutput{})
	pulumi.RegisterOutputType(ServiceNetworkVpcAssociationMapOutput{})
}
