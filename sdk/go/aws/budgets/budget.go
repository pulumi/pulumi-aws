// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package budgets

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Budget struct {
	pulumi.CustomResourceState

	AccountId      pulumi.StringOutput           `pulumi:"accountId"`
	Arn            pulumi.StringOutput           `pulumi:"arn"`
	AutoAdjustData BudgetAutoAdjustDataPtrOutput `pulumi:"autoAdjustData"`
	BudgetType     pulumi.StringOutput           `pulumi:"budgetType"`
	// Deprecated: Use the attribute "cost_filter" instead.
	CostFilterLegacy pulumi.StringMapOutput        `pulumi:"costFilterLegacy"`
	CostFilters      BudgetCostFilterArrayOutput   `pulumi:"costFilters"`
	CostTypes        BudgetCostTypesOutput         `pulumi:"costTypes"`
	LimitAmount      pulumi.StringOutput           `pulumi:"limitAmount"`
	LimitUnit        pulumi.StringOutput           `pulumi:"limitUnit"`
	Name             pulumi.StringOutput           `pulumi:"name"`
	NamePrefix       pulumi.StringOutput           `pulumi:"namePrefix"`
	Notifications    BudgetNotificationArrayOutput `pulumi:"notifications"`
	PlannedLimits    BudgetPlannedLimitArrayOutput `pulumi:"plannedLimits"`
	TimePeriodEnd    pulumi.StringPtrOutput        `pulumi:"timePeriodEnd"`
	TimePeriodStart  pulumi.StringOutput           `pulumi:"timePeriodStart"`
	TimeUnit         pulumi.StringOutput           `pulumi:"timeUnit"`
}

// NewBudget registers a new resource with the given unique name, arguments, and options.
func NewBudget(ctx *pulumi.Context,
	name string, args *BudgetArgs, opts ...pulumi.ResourceOption) (*Budget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BudgetType == nil {
		return nil, errors.New("invalid value for required argument 'BudgetType'")
	}
	if args.TimeUnit == nil {
		return nil, errors.New("invalid value for required argument 'TimeUnit'")
	}
	var resource Budget
	err := ctx.RegisterResource("aws:budgets/budget:Budget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBudget gets an existing Budget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBudget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BudgetState, opts ...pulumi.ResourceOption) (*Budget, error) {
	var resource Budget
	err := ctx.ReadResource("aws:budgets/budget:Budget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Budget resources.
type budgetState struct {
	AccountId      *string               `pulumi:"accountId"`
	Arn            *string               `pulumi:"arn"`
	AutoAdjustData *BudgetAutoAdjustData `pulumi:"autoAdjustData"`
	BudgetType     *string               `pulumi:"budgetType"`
	// Deprecated: Use the attribute "cost_filter" instead.
	CostFilterLegacy map[string]string    `pulumi:"costFilterLegacy"`
	CostFilters      []BudgetCostFilter   `pulumi:"costFilters"`
	CostTypes        *BudgetCostTypes     `pulumi:"costTypes"`
	LimitAmount      *string              `pulumi:"limitAmount"`
	LimitUnit        *string              `pulumi:"limitUnit"`
	Name             *string              `pulumi:"name"`
	NamePrefix       *string              `pulumi:"namePrefix"`
	Notifications    []BudgetNotification `pulumi:"notifications"`
	PlannedLimits    []BudgetPlannedLimit `pulumi:"plannedLimits"`
	TimePeriodEnd    *string              `pulumi:"timePeriodEnd"`
	TimePeriodStart  *string              `pulumi:"timePeriodStart"`
	TimeUnit         *string              `pulumi:"timeUnit"`
}

type BudgetState struct {
	AccountId      pulumi.StringPtrInput
	Arn            pulumi.StringPtrInput
	AutoAdjustData BudgetAutoAdjustDataPtrInput
	BudgetType     pulumi.StringPtrInput
	// Deprecated: Use the attribute "cost_filter" instead.
	CostFilterLegacy pulumi.StringMapInput
	CostFilters      BudgetCostFilterArrayInput
	CostTypes        BudgetCostTypesPtrInput
	LimitAmount      pulumi.StringPtrInput
	LimitUnit        pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
	NamePrefix       pulumi.StringPtrInput
	Notifications    BudgetNotificationArrayInput
	PlannedLimits    BudgetPlannedLimitArrayInput
	TimePeriodEnd    pulumi.StringPtrInput
	TimePeriodStart  pulumi.StringPtrInput
	TimeUnit         pulumi.StringPtrInput
}

func (BudgetState) ElementType() reflect.Type {
	return reflect.TypeOf((*budgetState)(nil)).Elem()
}

type budgetArgs struct {
	AccountId      *string               `pulumi:"accountId"`
	AutoAdjustData *BudgetAutoAdjustData `pulumi:"autoAdjustData"`
	BudgetType     string                `pulumi:"budgetType"`
	// Deprecated: Use the attribute "cost_filter" instead.
	CostFilterLegacy map[string]string    `pulumi:"costFilterLegacy"`
	CostFilters      []BudgetCostFilter   `pulumi:"costFilters"`
	CostTypes        *BudgetCostTypes     `pulumi:"costTypes"`
	LimitAmount      *string              `pulumi:"limitAmount"`
	LimitUnit        *string              `pulumi:"limitUnit"`
	Name             *string              `pulumi:"name"`
	NamePrefix       *string              `pulumi:"namePrefix"`
	Notifications    []BudgetNotification `pulumi:"notifications"`
	PlannedLimits    []BudgetPlannedLimit `pulumi:"plannedLimits"`
	TimePeriodEnd    *string              `pulumi:"timePeriodEnd"`
	TimePeriodStart  *string              `pulumi:"timePeriodStart"`
	TimeUnit         string               `pulumi:"timeUnit"`
}

// The set of arguments for constructing a Budget resource.
type BudgetArgs struct {
	AccountId      pulumi.StringPtrInput
	AutoAdjustData BudgetAutoAdjustDataPtrInput
	BudgetType     pulumi.StringInput
	// Deprecated: Use the attribute "cost_filter" instead.
	CostFilterLegacy pulumi.StringMapInput
	CostFilters      BudgetCostFilterArrayInput
	CostTypes        BudgetCostTypesPtrInput
	LimitAmount      pulumi.StringPtrInput
	LimitUnit        pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
	NamePrefix       pulumi.StringPtrInput
	Notifications    BudgetNotificationArrayInput
	PlannedLimits    BudgetPlannedLimitArrayInput
	TimePeriodEnd    pulumi.StringPtrInput
	TimePeriodStart  pulumi.StringPtrInput
	TimeUnit         pulumi.StringInput
}

func (BudgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*budgetArgs)(nil)).Elem()
}

type BudgetInput interface {
	pulumi.Input

	ToBudgetOutput() BudgetOutput
	ToBudgetOutputWithContext(ctx context.Context) BudgetOutput
}

func (*Budget) ElementType() reflect.Type {
	return reflect.TypeOf((**Budget)(nil)).Elem()
}

func (i *Budget) ToBudgetOutput() BudgetOutput {
	return i.ToBudgetOutputWithContext(context.Background())
}

func (i *Budget) ToBudgetOutputWithContext(ctx context.Context) BudgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetOutput)
}

// BudgetArrayInput is an input type that accepts BudgetArray and BudgetArrayOutput values.
// You can construct a concrete instance of `BudgetArrayInput` via:
//
//	BudgetArray{ BudgetArgs{...} }
type BudgetArrayInput interface {
	pulumi.Input

	ToBudgetArrayOutput() BudgetArrayOutput
	ToBudgetArrayOutputWithContext(context.Context) BudgetArrayOutput
}

type BudgetArray []BudgetInput

func (BudgetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Budget)(nil)).Elem()
}

func (i BudgetArray) ToBudgetArrayOutput() BudgetArrayOutput {
	return i.ToBudgetArrayOutputWithContext(context.Background())
}

func (i BudgetArray) ToBudgetArrayOutputWithContext(ctx context.Context) BudgetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetArrayOutput)
}

// BudgetMapInput is an input type that accepts BudgetMap and BudgetMapOutput values.
// You can construct a concrete instance of `BudgetMapInput` via:
//
//	BudgetMap{ "key": BudgetArgs{...} }
type BudgetMapInput interface {
	pulumi.Input

	ToBudgetMapOutput() BudgetMapOutput
	ToBudgetMapOutputWithContext(context.Context) BudgetMapOutput
}

type BudgetMap map[string]BudgetInput

func (BudgetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Budget)(nil)).Elem()
}

func (i BudgetMap) ToBudgetMapOutput() BudgetMapOutput {
	return i.ToBudgetMapOutputWithContext(context.Background())
}

func (i BudgetMap) ToBudgetMapOutputWithContext(ctx context.Context) BudgetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetMapOutput)
}

type BudgetOutput struct{ *pulumi.OutputState }

func (BudgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Budget)(nil)).Elem()
}

func (o BudgetOutput) ToBudgetOutput() BudgetOutput {
	return o
}

func (o BudgetOutput) ToBudgetOutputWithContext(ctx context.Context) BudgetOutput {
	return o
}

func (o BudgetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o BudgetOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o BudgetOutput) AutoAdjustData() BudgetAutoAdjustDataPtrOutput {
	return o.ApplyT(func(v *Budget) BudgetAutoAdjustDataPtrOutput { return v.AutoAdjustData }).(BudgetAutoAdjustDataPtrOutput)
}

func (o BudgetOutput) BudgetType() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.BudgetType }).(pulumi.StringOutput)
}

// Deprecated: Use the attribute "cost_filter" instead.
func (o BudgetOutput) CostFilterLegacy() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringMapOutput { return v.CostFilterLegacy }).(pulumi.StringMapOutput)
}

func (o BudgetOutput) CostFilters() BudgetCostFilterArrayOutput {
	return o.ApplyT(func(v *Budget) BudgetCostFilterArrayOutput { return v.CostFilters }).(BudgetCostFilterArrayOutput)
}

func (o BudgetOutput) CostTypes() BudgetCostTypesOutput {
	return o.ApplyT(func(v *Budget) BudgetCostTypesOutput { return v.CostTypes }).(BudgetCostTypesOutput)
}

func (o BudgetOutput) LimitAmount() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.LimitAmount }).(pulumi.StringOutput)
}

func (o BudgetOutput) LimitUnit() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.LimitUnit }).(pulumi.StringOutput)
}

func (o BudgetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o BudgetOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.NamePrefix }).(pulumi.StringOutput)
}

func (o BudgetOutput) Notifications() BudgetNotificationArrayOutput {
	return o.ApplyT(func(v *Budget) BudgetNotificationArrayOutput { return v.Notifications }).(BudgetNotificationArrayOutput)
}

func (o BudgetOutput) PlannedLimits() BudgetPlannedLimitArrayOutput {
	return o.ApplyT(func(v *Budget) BudgetPlannedLimitArrayOutput { return v.PlannedLimits }).(BudgetPlannedLimitArrayOutput)
}

func (o BudgetOutput) TimePeriodEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringPtrOutput { return v.TimePeriodEnd }).(pulumi.StringPtrOutput)
}

func (o BudgetOutput) TimePeriodStart() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.TimePeriodStart }).(pulumi.StringOutput)
}

func (o BudgetOutput) TimeUnit() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.TimeUnit }).(pulumi.StringOutput)
}

type BudgetArrayOutput struct{ *pulumi.OutputState }

func (BudgetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Budget)(nil)).Elem()
}

func (o BudgetArrayOutput) ToBudgetArrayOutput() BudgetArrayOutput {
	return o
}

func (o BudgetArrayOutput) ToBudgetArrayOutputWithContext(ctx context.Context) BudgetArrayOutput {
	return o
}

func (o BudgetArrayOutput) Index(i pulumi.IntInput) BudgetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Budget {
		return vs[0].([]*Budget)[vs[1].(int)]
	}).(BudgetOutput)
}

type BudgetMapOutput struct{ *pulumi.OutputState }

func (BudgetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Budget)(nil)).Elem()
}

func (o BudgetMapOutput) ToBudgetMapOutput() BudgetMapOutput {
	return o
}

func (o BudgetMapOutput) ToBudgetMapOutputWithContext(ctx context.Context) BudgetMapOutput {
	return o
}

func (o BudgetMapOutput) MapIndex(k pulumi.StringInput) BudgetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Budget {
		return vs[0].(map[string]*Budget)[vs[1].(string)]
	}).(BudgetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetInput)(nil)).Elem(), &Budget{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetArrayInput)(nil)).Elem(), BudgetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetMapInput)(nil)).Elem(), BudgetMap{})
	pulumi.RegisterOutputType(BudgetOutput{})
	pulumi.RegisterOutputType(BudgetArrayOutput{})
	pulumi.RegisterOutputType(BudgetMapOutput{})
}
