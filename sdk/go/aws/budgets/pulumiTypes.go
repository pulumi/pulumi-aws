// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package budgets

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BudgetActionActionThreshold struct {
	// The type of threshold for a notification. Valid values are `PERCENTAGE` or `ABSOLUTE_VALUE`.
	ActionThresholdType string `pulumi:"actionThresholdType"`
	// The threshold of a notification.
	ActionThresholdValue float64 `pulumi:"actionThresholdValue"`
}

// BudgetActionActionThresholdInput is an input type that accepts BudgetActionActionThresholdArgs and BudgetActionActionThresholdOutput values.
// You can construct a concrete instance of `BudgetActionActionThresholdInput` via:
//
//	BudgetActionActionThresholdArgs{...}
type BudgetActionActionThresholdInput interface {
	pulumi.Input

	ToBudgetActionActionThresholdOutput() BudgetActionActionThresholdOutput
	ToBudgetActionActionThresholdOutputWithContext(context.Context) BudgetActionActionThresholdOutput
}

type BudgetActionActionThresholdArgs struct {
	// The type of threshold for a notification. Valid values are `PERCENTAGE` or `ABSOLUTE_VALUE`.
	ActionThresholdType pulumi.StringInput `pulumi:"actionThresholdType"`
	// The threshold of a notification.
	ActionThresholdValue pulumi.Float64Input `pulumi:"actionThresholdValue"`
}

func (BudgetActionActionThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetActionActionThreshold)(nil)).Elem()
}

func (i BudgetActionActionThresholdArgs) ToBudgetActionActionThresholdOutput() BudgetActionActionThresholdOutput {
	return i.ToBudgetActionActionThresholdOutputWithContext(context.Background())
}

func (i BudgetActionActionThresholdArgs) ToBudgetActionActionThresholdOutputWithContext(ctx context.Context) BudgetActionActionThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionActionThresholdOutput)
}

func (i BudgetActionActionThresholdArgs) ToBudgetActionActionThresholdPtrOutput() BudgetActionActionThresholdPtrOutput {
	return i.ToBudgetActionActionThresholdPtrOutputWithContext(context.Background())
}

func (i BudgetActionActionThresholdArgs) ToBudgetActionActionThresholdPtrOutputWithContext(ctx context.Context) BudgetActionActionThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionActionThresholdOutput).ToBudgetActionActionThresholdPtrOutputWithContext(ctx)
}

// BudgetActionActionThresholdPtrInput is an input type that accepts BudgetActionActionThresholdArgs, BudgetActionActionThresholdPtr and BudgetActionActionThresholdPtrOutput values.
// You can construct a concrete instance of `BudgetActionActionThresholdPtrInput` via:
//
//	        BudgetActionActionThresholdArgs{...}
//
//	or:
//
//	        nil
type BudgetActionActionThresholdPtrInput interface {
	pulumi.Input

	ToBudgetActionActionThresholdPtrOutput() BudgetActionActionThresholdPtrOutput
	ToBudgetActionActionThresholdPtrOutputWithContext(context.Context) BudgetActionActionThresholdPtrOutput
}

type budgetActionActionThresholdPtrType BudgetActionActionThresholdArgs

func BudgetActionActionThresholdPtr(v *BudgetActionActionThresholdArgs) BudgetActionActionThresholdPtrInput {
	return (*budgetActionActionThresholdPtrType)(v)
}

func (*budgetActionActionThresholdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetActionActionThreshold)(nil)).Elem()
}

func (i *budgetActionActionThresholdPtrType) ToBudgetActionActionThresholdPtrOutput() BudgetActionActionThresholdPtrOutput {
	return i.ToBudgetActionActionThresholdPtrOutputWithContext(context.Background())
}

func (i *budgetActionActionThresholdPtrType) ToBudgetActionActionThresholdPtrOutputWithContext(ctx context.Context) BudgetActionActionThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionActionThresholdPtrOutput)
}

type BudgetActionActionThresholdOutput struct{ *pulumi.OutputState }

func (BudgetActionActionThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetActionActionThreshold)(nil)).Elem()
}

func (o BudgetActionActionThresholdOutput) ToBudgetActionActionThresholdOutput() BudgetActionActionThresholdOutput {
	return o
}

func (o BudgetActionActionThresholdOutput) ToBudgetActionActionThresholdOutputWithContext(ctx context.Context) BudgetActionActionThresholdOutput {
	return o
}

func (o BudgetActionActionThresholdOutput) ToBudgetActionActionThresholdPtrOutput() BudgetActionActionThresholdPtrOutput {
	return o.ToBudgetActionActionThresholdPtrOutputWithContext(context.Background())
}

func (o BudgetActionActionThresholdOutput) ToBudgetActionActionThresholdPtrOutputWithContext(ctx context.Context) BudgetActionActionThresholdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetActionActionThreshold) *BudgetActionActionThreshold {
		return &v
	}).(BudgetActionActionThresholdPtrOutput)
}

// The type of threshold for a notification. Valid values are `PERCENTAGE` or `ABSOLUTE_VALUE`.
func (o BudgetActionActionThresholdOutput) ActionThresholdType() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetActionActionThreshold) string { return v.ActionThresholdType }).(pulumi.StringOutput)
}

// The threshold of a notification.
func (o BudgetActionActionThresholdOutput) ActionThresholdValue() pulumi.Float64Output {
	return o.ApplyT(func(v BudgetActionActionThreshold) float64 { return v.ActionThresholdValue }).(pulumi.Float64Output)
}

type BudgetActionActionThresholdPtrOutput struct{ *pulumi.OutputState }

func (BudgetActionActionThresholdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetActionActionThreshold)(nil)).Elem()
}

func (o BudgetActionActionThresholdPtrOutput) ToBudgetActionActionThresholdPtrOutput() BudgetActionActionThresholdPtrOutput {
	return o
}

func (o BudgetActionActionThresholdPtrOutput) ToBudgetActionActionThresholdPtrOutputWithContext(ctx context.Context) BudgetActionActionThresholdPtrOutput {
	return o
}

func (o BudgetActionActionThresholdPtrOutput) Elem() BudgetActionActionThresholdOutput {
	return o.ApplyT(func(v *BudgetActionActionThreshold) BudgetActionActionThreshold {
		if v != nil {
			return *v
		}
		var ret BudgetActionActionThreshold
		return ret
	}).(BudgetActionActionThresholdOutput)
}

// The type of threshold for a notification. Valid values are `PERCENTAGE` or `ABSOLUTE_VALUE`.
func (o BudgetActionActionThresholdPtrOutput) ActionThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetActionActionThreshold) *string {
		if v == nil {
			return nil
		}
		return &v.ActionThresholdType
	}).(pulumi.StringPtrOutput)
}

// The threshold of a notification.
func (o BudgetActionActionThresholdPtrOutput) ActionThresholdValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BudgetActionActionThreshold) *float64 {
		if v == nil {
			return nil
		}
		return &v.ActionThresholdValue
	}).(pulumi.Float64PtrOutput)
}

type BudgetActionDefinition struct {
	// The AWS Identity and Access Management (IAM) action definition details. See IAM Action Definition.
	IamActionDefinition *BudgetActionDefinitionIamActionDefinition `pulumi:"iamActionDefinition"`
	// The service control policies (SCPs) action definition details. See SCP Action Definition.
	ScpActionDefinition *BudgetActionDefinitionScpActionDefinition `pulumi:"scpActionDefinition"`
	// The AWS Systems Manager (SSM) action definition details. See SSM Action Definition.
	SsmActionDefinition *BudgetActionDefinitionSsmActionDefinition `pulumi:"ssmActionDefinition"`
}

// BudgetActionDefinitionInput is an input type that accepts BudgetActionDefinitionArgs and BudgetActionDefinitionOutput values.
// You can construct a concrete instance of `BudgetActionDefinitionInput` via:
//
//	BudgetActionDefinitionArgs{...}
type BudgetActionDefinitionInput interface {
	pulumi.Input

	ToBudgetActionDefinitionOutput() BudgetActionDefinitionOutput
	ToBudgetActionDefinitionOutputWithContext(context.Context) BudgetActionDefinitionOutput
}

type BudgetActionDefinitionArgs struct {
	// The AWS Identity and Access Management (IAM) action definition details. See IAM Action Definition.
	IamActionDefinition BudgetActionDefinitionIamActionDefinitionPtrInput `pulumi:"iamActionDefinition"`
	// The service control policies (SCPs) action definition details. See SCP Action Definition.
	ScpActionDefinition BudgetActionDefinitionScpActionDefinitionPtrInput `pulumi:"scpActionDefinition"`
	// The AWS Systems Manager (SSM) action definition details. See SSM Action Definition.
	SsmActionDefinition BudgetActionDefinitionSsmActionDefinitionPtrInput `pulumi:"ssmActionDefinition"`
}

func (BudgetActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetActionDefinition)(nil)).Elem()
}

func (i BudgetActionDefinitionArgs) ToBudgetActionDefinitionOutput() BudgetActionDefinitionOutput {
	return i.ToBudgetActionDefinitionOutputWithContext(context.Background())
}

func (i BudgetActionDefinitionArgs) ToBudgetActionDefinitionOutputWithContext(ctx context.Context) BudgetActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionDefinitionOutput)
}

func (i BudgetActionDefinitionArgs) ToBudgetActionDefinitionPtrOutput() BudgetActionDefinitionPtrOutput {
	return i.ToBudgetActionDefinitionPtrOutputWithContext(context.Background())
}

func (i BudgetActionDefinitionArgs) ToBudgetActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionDefinitionOutput).ToBudgetActionDefinitionPtrOutputWithContext(ctx)
}

// BudgetActionDefinitionPtrInput is an input type that accepts BudgetActionDefinitionArgs, BudgetActionDefinitionPtr and BudgetActionDefinitionPtrOutput values.
// You can construct a concrete instance of `BudgetActionDefinitionPtrInput` via:
//
//	        BudgetActionDefinitionArgs{...}
//
//	or:
//
//	        nil
type BudgetActionDefinitionPtrInput interface {
	pulumi.Input

	ToBudgetActionDefinitionPtrOutput() BudgetActionDefinitionPtrOutput
	ToBudgetActionDefinitionPtrOutputWithContext(context.Context) BudgetActionDefinitionPtrOutput
}

type budgetActionDefinitionPtrType BudgetActionDefinitionArgs

func BudgetActionDefinitionPtr(v *BudgetActionDefinitionArgs) BudgetActionDefinitionPtrInput {
	return (*budgetActionDefinitionPtrType)(v)
}

func (*budgetActionDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetActionDefinition)(nil)).Elem()
}

func (i *budgetActionDefinitionPtrType) ToBudgetActionDefinitionPtrOutput() BudgetActionDefinitionPtrOutput {
	return i.ToBudgetActionDefinitionPtrOutputWithContext(context.Background())
}

func (i *budgetActionDefinitionPtrType) ToBudgetActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionDefinitionPtrOutput)
}

type BudgetActionDefinitionOutput struct{ *pulumi.OutputState }

func (BudgetActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetActionDefinition)(nil)).Elem()
}

func (o BudgetActionDefinitionOutput) ToBudgetActionDefinitionOutput() BudgetActionDefinitionOutput {
	return o
}

func (o BudgetActionDefinitionOutput) ToBudgetActionDefinitionOutputWithContext(ctx context.Context) BudgetActionDefinitionOutput {
	return o
}

func (o BudgetActionDefinitionOutput) ToBudgetActionDefinitionPtrOutput() BudgetActionDefinitionPtrOutput {
	return o.ToBudgetActionDefinitionPtrOutputWithContext(context.Background())
}

func (o BudgetActionDefinitionOutput) ToBudgetActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetActionDefinition) *BudgetActionDefinition {
		return &v
	}).(BudgetActionDefinitionPtrOutput)
}

// The AWS Identity and Access Management (IAM) action definition details. See IAM Action Definition.
func (o BudgetActionDefinitionOutput) IamActionDefinition() BudgetActionDefinitionIamActionDefinitionPtrOutput {
	return o.ApplyT(func(v BudgetActionDefinition) *BudgetActionDefinitionIamActionDefinition {
		return v.IamActionDefinition
	}).(BudgetActionDefinitionIamActionDefinitionPtrOutput)
}

// The service control policies (SCPs) action definition details. See SCP Action Definition.
func (o BudgetActionDefinitionOutput) ScpActionDefinition() BudgetActionDefinitionScpActionDefinitionPtrOutput {
	return o.ApplyT(func(v BudgetActionDefinition) *BudgetActionDefinitionScpActionDefinition {
		return v.ScpActionDefinition
	}).(BudgetActionDefinitionScpActionDefinitionPtrOutput)
}

// The AWS Systems Manager (SSM) action definition details. See SSM Action Definition.
func (o BudgetActionDefinitionOutput) SsmActionDefinition() BudgetActionDefinitionSsmActionDefinitionPtrOutput {
	return o.ApplyT(func(v BudgetActionDefinition) *BudgetActionDefinitionSsmActionDefinition {
		return v.SsmActionDefinition
	}).(BudgetActionDefinitionSsmActionDefinitionPtrOutput)
}

type BudgetActionDefinitionPtrOutput struct{ *pulumi.OutputState }

func (BudgetActionDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetActionDefinition)(nil)).Elem()
}

func (o BudgetActionDefinitionPtrOutput) ToBudgetActionDefinitionPtrOutput() BudgetActionDefinitionPtrOutput {
	return o
}

func (o BudgetActionDefinitionPtrOutput) ToBudgetActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionPtrOutput {
	return o
}

func (o BudgetActionDefinitionPtrOutput) Elem() BudgetActionDefinitionOutput {
	return o.ApplyT(func(v *BudgetActionDefinition) BudgetActionDefinition {
		if v != nil {
			return *v
		}
		var ret BudgetActionDefinition
		return ret
	}).(BudgetActionDefinitionOutput)
}

// The AWS Identity and Access Management (IAM) action definition details. See IAM Action Definition.
func (o BudgetActionDefinitionPtrOutput) IamActionDefinition() BudgetActionDefinitionIamActionDefinitionPtrOutput {
	return o.ApplyT(func(v *BudgetActionDefinition) *BudgetActionDefinitionIamActionDefinition {
		if v == nil {
			return nil
		}
		return v.IamActionDefinition
	}).(BudgetActionDefinitionIamActionDefinitionPtrOutput)
}

// The service control policies (SCPs) action definition details. See SCP Action Definition.
func (o BudgetActionDefinitionPtrOutput) ScpActionDefinition() BudgetActionDefinitionScpActionDefinitionPtrOutput {
	return o.ApplyT(func(v *BudgetActionDefinition) *BudgetActionDefinitionScpActionDefinition {
		if v == nil {
			return nil
		}
		return v.ScpActionDefinition
	}).(BudgetActionDefinitionScpActionDefinitionPtrOutput)
}

// The AWS Systems Manager (SSM) action definition details. See SSM Action Definition.
func (o BudgetActionDefinitionPtrOutput) SsmActionDefinition() BudgetActionDefinitionSsmActionDefinitionPtrOutput {
	return o.ApplyT(func(v *BudgetActionDefinition) *BudgetActionDefinitionSsmActionDefinition {
		if v == nil {
			return nil
		}
		return v.SsmActionDefinition
	}).(BudgetActionDefinitionSsmActionDefinitionPtrOutput)
}

type BudgetActionDefinitionIamActionDefinition struct {
	// A list of groups to be attached. There must be at least one group.
	Groups []string `pulumi:"groups"`
	// The Amazon Resource Name (ARN) of the policy to be attached.
	PolicyArn string `pulumi:"policyArn"`
	// A list of roles to be attached. There must be at least one role.
	Roles []string `pulumi:"roles"`
	// A list of users to be attached. There must be at least one user.
	Users []string `pulumi:"users"`
}

// BudgetActionDefinitionIamActionDefinitionInput is an input type that accepts BudgetActionDefinitionIamActionDefinitionArgs and BudgetActionDefinitionIamActionDefinitionOutput values.
// You can construct a concrete instance of `BudgetActionDefinitionIamActionDefinitionInput` via:
//
//	BudgetActionDefinitionIamActionDefinitionArgs{...}
type BudgetActionDefinitionIamActionDefinitionInput interface {
	pulumi.Input

	ToBudgetActionDefinitionIamActionDefinitionOutput() BudgetActionDefinitionIamActionDefinitionOutput
	ToBudgetActionDefinitionIamActionDefinitionOutputWithContext(context.Context) BudgetActionDefinitionIamActionDefinitionOutput
}

type BudgetActionDefinitionIamActionDefinitionArgs struct {
	// A list of groups to be attached. There must be at least one group.
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	// The Amazon Resource Name (ARN) of the policy to be attached.
	PolicyArn pulumi.StringInput `pulumi:"policyArn"`
	// A list of roles to be attached. There must be at least one role.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
	// A list of users to be attached. There must be at least one user.
	Users pulumi.StringArrayInput `pulumi:"users"`
}

func (BudgetActionDefinitionIamActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetActionDefinitionIamActionDefinition)(nil)).Elem()
}

func (i BudgetActionDefinitionIamActionDefinitionArgs) ToBudgetActionDefinitionIamActionDefinitionOutput() BudgetActionDefinitionIamActionDefinitionOutput {
	return i.ToBudgetActionDefinitionIamActionDefinitionOutputWithContext(context.Background())
}

func (i BudgetActionDefinitionIamActionDefinitionArgs) ToBudgetActionDefinitionIamActionDefinitionOutputWithContext(ctx context.Context) BudgetActionDefinitionIamActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionDefinitionIamActionDefinitionOutput)
}

func (i BudgetActionDefinitionIamActionDefinitionArgs) ToBudgetActionDefinitionIamActionDefinitionPtrOutput() BudgetActionDefinitionIamActionDefinitionPtrOutput {
	return i.ToBudgetActionDefinitionIamActionDefinitionPtrOutputWithContext(context.Background())
}

func (i BudgetActionDefinitionIamActionDefinitionArgs) ToBudgetActionDefinitionIamActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionIamActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionDefinitionIamActionDefinitionOutput).ToBudgetActionDefinitionIamActionDefinitionPtrOutputWithContext(ctx)
}

// BudgetActionDefinitionIamActionDefinitionPtrInput is an input type that accepts BudgetActionDefinitionIamActionDefinitionArgs, BudgetActionDefinitionIamActionDefinitionPtr and BudgetActionDefinitionIamActionDefinitionPtrOutput values.
// You can construct a concrete instance of `BudgetActionDefinitionIamActionDefinitionPtrInput` via:
//
//	        BudgetActionDefinitionIamActionDefinitionArgs{...}
//
//	or:
//
//	        nil
type BudgetActionDefinitionIamActionDefinitionPtrInput interface {
	pulumi.Input

	ToBudgetActionDefinitionIamActionDefinitionPtrOutput() BudgetActionDefinitionIamActionDefinitionPtrOutput
	ToBudgetActionDefinitionIamActionDefinitionPtrOutputWithContext(context.Context) BudgetActionDefinitionIamActionDefinitionPtrOutput
}

type budgetActionDefinitionIamActionDefinitionPtrType BudgetActionDefinitionIamActionDefinitionArgs

func BudgetActionDefinitionIamActionDefinitionPtr(v *BudgetActionDefinitionIamActionDefinitionArgs) BudgetActionDefinitionIamActionDefinitionPtrInput {
	return (*budgetActionDefinitionIamActionDefinitionPtrType)(v)
}

func (*budgetActionDefinitionIamActionDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetActionDefinitionIamActionDefinition)(nil)).Elem()
}

func (i *budgetActionDefinitionIamActionDefinitionPtrType) ToBudgetActionDefinitionIamActionDefinitionPtrOutput() BudgetActionDefinitionIamActionDefinitionPtrOutput {
	return i.ToBudgetActionDefinitionIamActionDefinitionPtrOutputWithContext(context.Background())
}

func (i *budgetActionDefinitionIamActionDefinitionPtrType) ToBudgetActionDefinitionIamActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionIamActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionDefinitionIamActionDefinitionPtrOutput)
}

type BudgetActionDefinitionIamActionDefinitionOutput struct{ *pulumi.OutputState }

func (BudgetActionDefinitionIamActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetActionDefinitionIamActionDefinition)(nil)).Elem()
}

func (o BudgetActionDefinitionIamActionDefinitionOutput) ToBudgetActionDefinitionIamActionDefinitionOutput() BudgetActionDefinitionIamActionDefinitionOutput {
	return o
}

func (o BudgetActionDefinitionIamActionDefinitionOutput) ToBudgetActionDefinitionIamActionDefinitionOutputWithContext(ctx context.Context) BudgetActionDefinitionIamActionDefinitionOutput {
	return o
}

func (o BudgetActionDefinitionIamActionDefinitionOutput) ToBudgetActionDefinitionIamActionDefinitionPtrOutput() BudgetActionDefinitionIamActionDefinitionPtrOutput {
	return o.ToBudgetActionDefinitionIamActionDefinitionPtrOutputWithContext(context.Background())
}

func (o BudgetActionDefinitionIamActionDefinitionOutput) ToBudgetActionDefinitionIamActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionIamActionDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetActionDefinitionIamActionDefinition) *BudgetActionDefinitionIamActionDefinition {
		return &v
	}).(BudgetActionDefinitionIamActionDefinitionPtrOutput)
}

// A list of groups to be attached. There must be at least one group.
func (o BudgetActionDefinitionIamActionDefinitionOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetActionDefinitionIamActionDefinition) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// The Amazon Resource Name (ARN) of the policy to be attached.
func (o BudgetActionDefinitionIamActionDefinitionOutput) PolicyArn() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetActionDefinitionIamActionDefinition) string { return v.PolicyArn }).(pulumi.StringOutput)
}

// A list of roles to be attached. There must be at least one role.
func (o BudgetActionDefinitionIamActionDefinitionOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetActionDefinitionIamActionDefinition) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// A list of users to be attached. There must be at least one user.
func (o BudgetActionDefinitionIamActionDefinitionOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetActionDefinitionIamActionDefinition) []string { return v.Users }).(pulumi.StringArrayOutput)
}

type BudgetActionDefinitionIamActionDefinitionPtrOutput struct{ *pulumi.OutputState }

func (BudgetActionDefinitionIamActionDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetActionDefinitionIamActionDefinition)(nil)).Elem()
}

func (o BudgetActionDefinitionIamActionDefinitionPtrOutput) ToBudgetActionDefinitionIamActionDefinitionPtrOutput() BudgetActionDefinitionIamActionDefinitionPtrOutput {
	return o
}

func (o BudgetActionDefinitionIamActionDefinitionPtrOutput) ToBudgetActionDefinitionIamActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionIamActionDefinitionPtrOutput {
	return o
}

func (o BudgetActionDefinitionIamActionDefinitionPtrOutput) Elem() BudgetActionDefinitionIamActionDefinitionOutput {
	return o.ApplyT(func(v *BudgetActionDefinitionIamActionDefinition) BudgetActionDefinitionIamActionDefinition {
		if v != nil {
			return *v
		}
		var ret BudgetActionDefinitionIamActionDefinition
		return ret
	}).(BudgetActionDefinitionIamActionDefinitionOutput)
}

// A list of groups to be attached. There must be at least one group.
func (o BudgetActionDefinitionIamActionDefinitionPtrOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BudgetActionDefinitionIamActionDefinition) []string {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(pulumi.StringArrayOutput)
}

// The Amazon Resource Name (ARN) of the policy to be attached.
func (o BudgetActionDefinitionIamActionDefinitionPtrOutput) PolicyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetActionDefinitionIamActionDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyArn
	}).(pulumi.StringPtrOutput)
}

// A list of roles to be attached. There must be at least one role.
func (o BudgetActionDefinitionIamActionDefinitionPtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BudgetActionDefinitionIamActionDefinition) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

// A list of users to be attached. There must be at least one user.
func (o BudgetActionDefinitionIamActionDefinitionPtrOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BudgetActionDefinitionIamActionDefinition) []string {
		if v == nil {
			return nil
		}
		return v.Users
	}).(pulumi.StringArrayOutput)
}

type BudgetActionDefinitionScpActionDefinition struct {
	// The policy ID attached.
	PolicyId string `pulumi:"policyId"`
	// A list of target IDs.
	TargetIds []string `pulumi:"targetIds"`
}

// BudgetActionDefinitionScpActionDefinitionInput is an input type that accepts BudgetActionDefinitionScpActionDefinitionArgs and BudgetActionDefinitionScpActionDefinitionOutput values.
// You can construct a concrete instance of `BudgetActionDefinitionScpActionDefinitionInput` via:
//
//	BudgetActionDefinitionScpActionDefinitionArgs{...}
type BudgetActionDefinitionScpActionDefinitionInput interface {
	pulumi.Input

	ToBudgetActionDefinitionScpActionDefinitionOutput() BudgetActionDefinitionScpActionDefinitionOutput
	ToBudgetActionDefinitionScpActionDefinitionOutputWithContext(context.Context) BudgetActionDefinitionScpActionDefinitionOutput
}

type BudgetActionDefinitionScpActionDefinitionArgs struct {
	// The policy ID attached.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// A list of target IDs.
	TargetIds pulumi.StringArrayInput `pulumi:"targetIds"`
}

func (BudgetActionDefinitionScpActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetActionDefinitionScpActionDefinition)(nil)).Elem()
}

func (i BudgetActionDefinitionScpActionDefinitionArgs) ToBudgetActionDefinitionScpActionDefinitionOutput() BudgetActionDefinitionScpActionDefinitionOutput {
	return i.ToBudgetActionDefinitionScpActionDefinitionOutputWithContext(context.Background())
}

func (i BudgetActionDefinitionScpActionDefinitionArgs) ToBudgetActionDefinitionScpActionDefinitionOutputWithContext(ctx context.Context) BudgetActionDefinitionScpActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionDefinitionScpActionDefinitionOutput)
}

func (i BudgetActionDefinitionScpActionDefinitionArgs) ToBudgetActionDefinitionScpActionDefinitionPtrOutput() BudgetActionDefinitionScpActionDefinitionPtrOutput {
	return i.ToBudgetActionDefinitionScpActionDefinitionPtrOutputWithContext(context.Background())
}

func (i BudgetActionDefinitionScpActionDefinitionArgs) ToBudgetActionDefinitionScpActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionScpActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionDefinitionScpActionDefinitionOutput).ToBudgetActionDefinitionScpActionDefinitionPtrOutputWithContext(ctx)
}

// BudgetActionDefinitionScpActionDefinitionPtrInput is an input type that accepts BudgetActionDefinitionScpActionDefinitionArgs, BudgetActionDefinitionScpActionDefinitionPtr and BudgetActionDefinitionScpActionDefinitionPtrOutput values.
// You can construct a concrete instance of `BudgetActionDefinitionScpActionDefinitionPtrInput` via:
//
//	        BudgetActionDefinitionScpActionDefinitionArgs{...}
//
//	or:
//
//	        nil
type BudgetActionDefinitionScpActionDefinitionPtrInput interface {
	pulumi.Input

	ToBudgetActionDefinitionScpActionDefinitionPtrOutput() BudgetActionDefinitionScpActionDefinitionPtrOutput
	ToBudgetActionDefinitionScpActionDefinitionPtrOutputWithContext(context.Context) BudgetActionDefinitionScpActionDefinitionPtrOutput
}

type budgetActionDefinitionScpActionDefinitionPtrType BudgetActionDefinitionScpActionDefinitionArgs

func BudgetActionDefinitionScpActionDefinitionPtr(v *BudgetActionDefinitionScpActionDefinitionArgs) BudgetActionDefinitionScpActionDefinitionPtrInput {
	return (*budgetActionDefinitionScpActionDefinitionPtrType)(v)
}

func (*budgetActionDefinitionScpActionDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetActionDefinitionScpActionDefinition)(nil)).Elem()
}

func (i *budgetActionDefinitionScpActionDefinitionPtrType) ToBudgetActionDefinitionScpActionDefinitionPtrOutput() BudgetActionDefinitionScpActionDefinitionPtrOutput {
	return i.ToBudgetActionDefinitionScpActionDefinitionPtrOutputWithContext(context.Background())
}

func (i *budgetActionDefinitionScpActionDefinitionPtrType) ToBudgetActionDefinitionScpActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionScpActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionDefinitionScpActionDefinitionPtrOutput)
}

type BudgetActionDefinitionScpActionDefinitionOutput struct{ *pulumi.OutputState }

func (BudgetActionDefinitionScpActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetActionDefinitionScpActionDefinition)(nil)).Elem()
}

func (o BudgetActionDefinitionScpActionDefinitionOutput) ToBudgetActionDefinitionScpActionDefinitionOutput() BudgetActionDefinitionScpActionDefinitionOutput {
	return o
}

func (o BudgetActionDefinitionScpActionDefinitionOutput) ToBudgetActionDefinitionScpActionDefinitionOutputWithContext(ctx context.Context) BudgetActionDefinitionScpActionDefinitionOutput {
	return o
}

func (o BudgetActionDefinitionScpActionDefinitionOutput) ToBudgetActionDefinitionScpActionDefinitionPtrOutput() BudgetActionDefinitionScpActionDefinitionPtrOutput {
	return o.ToBudgetActionDefinitionScpActionDefinitionPtrOutputWithContext(context.Background())
}

func (o BudgetActionDefinitionScpActionDefinitionOutput) ToBudgetActionDefinitionScpActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionScpActionDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetActionDefinitionScpActionDefinition) *BudgetActionDefinitionScpActionDefinition {
		return &v
	}).(BudgetActionDefinitionScpActionDefinitionPtrOutput)
}

// The policy ID attached.
func (o BudgetActionDefinitionScpActionDefinitionOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetActionDefinitionScpActionDefinition) string { return v.PolicyId }).(pulumi.StringOutput)
}

// A list of target IDs.
func (o BudgetActionDefinitionScpActionDefinitionOutput) TargetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetActionDefinitionScpActionDefinition) []string { return v.TargetIds }).(pulumi.StringArrayOutput)
}

type BudgetActionDefinitionScpActionDefinitionPtrOutput struct{ *pulumi.OutputState }

func (BudgetActionDefinitionScpActionDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetActionDefinitionScpActionDefinition)(nil)).Elem()
}

func (o BudgetActionDefinitionScpActionDefinitionPtrOutput) ToBudgetActionDefinitionScpActionDefinitionPtrOutput() BudgetActionDefinitionScpActionDefinitionPtrOutput {
	return o
}

func (o BudgetActionDefinitionScpActionDefinitionPtrOutput) ToBudgetActionDefinitionScpActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionScpActionDefinitionPtrOutput {
	return o
}

func (o BudgetActionDefinitionScpActionDefinitionPtrOutput) Elem() BudgetActionDefinitionScpActionDefinitionOutput {
	return o.ApplyT(func(v *BudgetActionDefinitionScpActionDefinition) BudgetActionDefinitionScpActionDefinition {
		if v != nil {
			return *v
		}
		var ret BudgetActionDefinitionScpActionDefinition
		return ret
	}).(BudgetActionDefinitionScpActionDefinitionOutput)
}

// The policy ID attached.
func (o BudgetActionDefinitionScpActionDefinitionPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetActionDefinitionScpActionDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// A list of target IDs.
func (o BudgetActionDefinitionScpActionDefinitionPtrOutput) TargetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BudgetActionDefinitionScpActionDefinition) []string {
		if v == nil {
			return nil
		}
		return v.TargetIds
	}).(pulumi.StringArrayOutput)
}

type BudgetActionDefinitionSsmActionDefinition struct {
	// The action subType. Valid values are `STOP_EC2_INSTANCES` or `STOP_RDS_INSTANCES`.
	ActionSubType string `pulumi:"actionSubType"`
	// The EC2 and RDS instance IDs.
	InstanceIds []string `pulumi:"instanceIds"`
	// The Region to run the SSM document.
	Region string `pulumi:"region"`
}

// BudgetActionDefinitionSsmActionDefinitionInput is an input type that accepts BudgetActionDefinitionSsmActionDefinitionArgs and BudgetActionDefinitionSsmActionDefinitionOutput values.
// You can construct a concrete instance of `BudgetActionDefinitionSsmActionDefinitionInput` via:
//
//	BudgetActionDefinitionSsmActionDefinitionArgs{...}
type BudgetActionDefinitionSsmActionDefinitionInput interface {
	pulumi.Input

	ToBudgetActionDefinitionSsmActionDefinitionOutput() BudgetActionDefinitionSsmActionDefinitionOutput
	ToBudgetActionDefinitionSsmActionDefinitionOutputWithContext(context.Context) BudgetActionDefinitionSsmActionDefinitionOutput
}

type BudgetActionDefinitionSsmActionDefinitionArgs struct {
	// The action subType. Valid values are `STOP_EC2_INSTANCES` or `STOP_RDS_INSTANCES`.
	ActionSubType pulumi.StringInput `pulumi:"actionSubType"`
	// The EC2 and RDS instance IDs.
	InstanceIds pulumi.StringArrayInput `pulumi:"instanceIds"`
	// The Region to run the SSM document.
	Region pulumi.StringInput `pulumi:"region"`
}

func (BudgetActionDefinitionSsmActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetActionDefinitionSsmActionDefinition)(nil)).Elem()
}

func (i BudgetActionDefinitionSsmActionDefinitionArgs) ToBudgetActionDefinitionSsmActionDefinitionOutput() BudgetActionDefinitionSsmActionDefinitionOutput {
	return i.ToBudgetActionDefinitionSsmActionDefinitionOutputWithContext(context.Background())
}

func (i BudgetActionDefinitionSsmActionDefinitionArgs) ToBudgetActionDefinitionSsmActionDefinitionOutputWithContext(ctx context.Context) BudgetActionDefinitionSsmActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionDefinitionSsmActionDefinitionOutput)
}

func (i BudgetActionDefinitionSsmActionDefinitionArgs) ToBudgetActionDefinitionSsmActionDefinitionPtrOutput() BudgetActionDefinitionSsmActionDefinitionPtrOutput {
	return i.ToBudgetActionDefinitionSsmActionDefinitionPtrOutputWithContext(context.Background())
}

func (i BudgetActionDefinitionSsmActionDefinitionArgs) ToBudgetActionDefinitionSsmActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionSsmActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionDefinitionSsmActionDefinitionOutput).ToBudgetActionDefinitionSsmActionDefinitionPtrOutputWithContext(ctx)
}

// BudgetActionDefinitionSsmActionDefinitionPtrInput is an input type that accepts BudgetActionDefinitionSsmActionDefinitionArgs, BudgetActionDefinitionSsmActionDefinitionPtr and BudgetActionDefinitionSsmActionDefinitionPtrOutput values.
// You can construct a concrete instance of `BudgetActionDefinitionSsmActionDefinitionPtrInput` via:
//
//	        BudgetActionDefinitionSsmActionDefinitionArgs{...}
//
//	or:
//
//	        nil
type BudgetActionDefinitionSsmActionDefinitionPtrInput interface {
	pulumi.Input

	ToBudgetActionDefinitionSsmActionDefinitionPtrOutput() BudgetActionDefinitionSsmActionDefinitionPtrOutput
	ToBudgetActionDefinitionSsmActionDefinitionPtrOutputWithContext(context.Context) BudgetActionDefinitionSsmActionDefinitionPtrOutput
}

type budgetActionDefinitionSsmActionDefinitionPtrType BudgetActionDefinitionSsmActionDefinitionArgs

func BudgetActionDefinitionSsmActionDefinitionPtr(v *BudgetActionDefinitionSsmActionDefinitionArgs) BudgetActionDefinitionSsmActionDefinitionPtrInput {
	return (*budgetActionDefinitionSsmActionDefinitionPtrType)(v)
}

func (*budgetActionDefinitionSsmActionDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetActionDefinitionSsmActionDefinition)(nil)).Elem()
}

func (i *budgetActionDefinitionSsmActionDefinitionPtrType) ToBudgetActionDefinitionSsmActionDefinitionPtrOutput() BudgetActionDefinitionSsmActionDefinitionPtrOutput {
	return i.ToBudgetActionDefinitionSsmActionDefinitionPtrOutputWithContext(context.Background())
}

func (i *budgetActionDefinitionSsmActionDefinitionPtrType) ToBudgetActionDefinitionSsmActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionSsmActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionDefinitionSsmActionDefinitionPtrOutput)
}

type BudgetActionDefinitionSsmActionDefinitionOutput struct{ *pulumi.OutputState }

func (BudgetActionDefinitionSsmActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetActionDefinitionSsmActionDefinition)(nil)).Elem()
}

func (o BudgetActionDefinitionSsmActionDefinitionOutput) ToBudgetActionDefinitionSsmActionDefinitionOutput() BudgetActionDefinitionSsmActionDefinitionOutput {
	return o
}

func (o BudgetActionDefinitionSsmActionDefinitionOutput) ToBudgetActionDefinitionSsmActionDefinitionOutputWithContext(ctx context.Context) BudgetActionDefinitionSsmActionDefinitionOutput {
	return o
}

func (o BudgetActionDefinitionSsmActionDefinitionOutput) ToBudgetActionDefinitionSsmActionDefinitionPtrOutput() BudgetActionDefinitionSsmActionDefinitionPtrOutput {
	return o.ToBudgetActionDefinitionSsmActionDefinitionPtrOutputWithContext(context.Background())
}

func (o BudgetActionDefinitionSsmActionDefinitionOutput) ToBudgetActionDefinitionSsmActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionSsmActionDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetActionDefinitionSsmActionDefinition) *BudgetActionDefinitionSsmActionDefinition {
		return &v
	}).(BudgetActionDefinitionSsmActionDefinitionPtrOutput)
}

// The action subType. Valid values are `STOP_EC2_INSTANCES` or `STOP_RDS_INSTANCES`.
func (o BudgetActionDefinitionSsmActionDefinitionOutput) ActionSubType() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetActionDefinitionSsmActionDefinition) string { return v.ActionSubType }).(pulumi.StringOutput)
}

// The EC2 and RDS instance IDs.
func (o BudgetActionDefinitionSsmActionDefinitionOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetActionDefinitionSsmActionDefinition) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

// The Region to run the SSM document.
func (o BudgetActionDefinitionSsmActionDefinitionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetActionDefinitionSsmActionDefinition) string { return v.Region }).(pulumi.StringOutput)
}

type BudgetActionDefinitionSsmActionDefinitionPtrOutput struct{ *pulumi.OutputState }

func (BudgetActionDefinitionSsmActionDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetActionDefinitionSsmActionDefinition)(nil)).Elem()
}

func (o BudgetActionDefinitionSsmActionDefinitionPtrOutput) ToBudgetActionDefinitionSsmActionDefinitionPtrOutput() BudgetActionDefinitionSsmActionDefinitionPtrOutput {
	return o
}

func (o BudgetActionDefinitionSsmActionDefinitionPtrOutput) ToBudgetActionDefinitionSsmActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetActionDefinitionSsmActionDefinitionPtrOutput {
	return o
}

func (o BudgetActionDefinitionSsmActionDefinitionPtrOutput) Elem() BudgetActionDefinitionSsmActionDefinitionOutput {
	return o.ApplyT(func(v *BudgetActionDefinitionSsmActionDefinition) BudgetActionDefinitionSsmActionDefinition {
		if v != nil {
			return *v
		}
		var ret BudgetActionDefinitionSsmActionDefinition
		return ret
	}).(BudgetActionDefinitionSsmActionDefinitionOutput)
}

// The action subType. Valid values are `STOP_EC2_INSTANCES` or `STOP_RDS_INSTANCES`.
func (o BudgetActionDefinitionSsmActionDefinitionPtrOutput) ActionSubType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetActionDefinitionSsmActionDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.ActionSubType
	}).(pulumi.StringPtrOutput)
}

// The EC2 and RDS instance IDs.
func (o BudgetActionDefinitionSsmActionDefinitionPtrOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BudgetActionDefinitionSsmActionDefinition) []string {
		if v == nil {
			return nil
		}
		return v.InstanceIds
	}).(pulumi.StringArrayOutput)
}

// The Region to run the SSM document.
func (o BudgetActionDefinitionSsmActionDefinitionPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetActionDefinitionSsmActionDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

type BudgetActionSubscriber struct {
	// The address that AWS sends budget notifications to, either an SNS topic or an email.
	Address string `pulumi:"address"`
	// The type of notification that AWS sends to a subscriber. Valid values are `SNS` or `EMAIL`.
	SubscriptionType string `pulumi:"subscriptionType"`
}

// BudgetActionSubscriberInput is an input type that accepts BudgetActionSubscriberArgs and BudgetActionSubscriberOutput values.
// You can construct a concrete instance of `BudgetActionSubscriberInput` via:
//
//	BudgetActionSubscriberArgs{...}
type BudgetActionSubscriberInput interface {
	pulumi.Input

	ToBudgetActionSubscriberOutput() BudgetActionSubscriberOutput
	ToBudgetActionSubscriberOutputWithContext(context.Context) BudgetActionSubscriberOutput
}

type BudgetActionSubscriberArgs struct {
	// The address that AWS sends budget notifications to, either an SNS topic or an email.
	Address pulumi.StringInput `pulumi:"address"`
	// The type of notification that AWS sends to a subscriber. Valid values are `SNS` or `EMAIL`.
	SubscriptionType pulumi.StringInput `pulumi:"subscriptionType"`
}

func (BudgetActionSubscriberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetActionSubscriber)(nil)).Elem()
}

func (i BudgetActionSubscriberArgs) ToBudgetActionSubscriberOutput() BudgetActionSubscriberOutput {
	return i.ToBudgetActionSubscriberOutputWithContext(context.Background())
}

func (i BudgetActionSubscriberArgs) ToBudgetActionSubscriberOutputWithContext(ctx context.Context) BudgetActionSubscriberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionSubscriberOutput)
}

// BudgetActionSubscriberArrayInput is an input type that accepts BudgetActionSubscriberArray and BudgetActionSubscriberArrayOutput values.
// You can construct a concrete instance of `BudgetActionSubscriberArrayInput` via:
//
//	BudgetActionSubscriberArray{ BudgetActionSubscriberArgs{...} }
type BudgetActionSubscriberArrayInput interface {
	pulumi.Input

	ToBudgetActionSubscriberArrayOutput() BudgetActionSubscriberArrayOutput
	ToBudgetActionSubscriberArrayOutputWithContext(context.Context) BudgetActionSubscriberArrayOutput
}

type BudgetActionSubscriberArray []BudgetActionSubscriberInput

func (BudgetActionSubscriberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetActionSubscriber)(nil)).Elem()
}

func (i BudgetActionSubscriberArray) ToBudgetActionSubscriberArrayOutput() BudgetActionSubscriberArrayOutput {
	return i.ToBudgetActionSubscriberArrayOutputWithContext(context.Background())
}

func (i BudgetActionSubscriberArray) ToBudgetActionSubscriberArrayOutputWithContext(ctx context.Context) BudgetActionSubscriberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetActionSubscriberArrayOutput)
}

type BudgetActionSubscriberOutput struct{ *pulumi.OutputState }

func (BudgetActionSubscriberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetActionSubscriber)(nil)).Elem()
}

func (o BudgetActionSubscriberOutput) ToBudgetActionSubscriberOutput() BudgetActionSubscriberOutput {
	return o
}

func (o BudgetActionSubscriberOutput) ToBudgetActionSubscriberOutputWithContext(ctx context.Context) BudgetActionSubscriberOutput {
	return o
}

// The address that AWS sends budget notifications to, either an SNS topic or an email.
func (o BudgetActionSubscriberOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetActionSubscriber) string { return v.Address }).(pulumi.StringOutput)
}

// The type of notification that AWS sends to a subscriber. Valid values are `SNS` or `EMAIL`.
func (o BudgetActionSubscriberOutput) SubscriptionType() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetActionSubscriber) string { return v.SubscriptionType }).(pulumi.StringOutput)
}

type BudgetActionSubscriberArrayOutput struct{ *pulumi.OutputState }

func (BudgetActionSubscriberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetActionSubscriber)(nil)).Elem()
}

func (o BudgetActionSubscriberArrayOutput) ToBudgetActionSubscriberArrayOutput() BudgetActionSubscriberArrayOutput {
	return o
}

func (o BudgetActionSubscriberArrayOutput) ToBudgetActionSubscriberArrayOutputWithContext(ctx context.Context) BudgetActionSubscriberArrayOutput {
	return o
}

func (o BudgetActionSubscriberArrayOutput) Index(i pulumi.IntInput) BudgetActionSubscriberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetActionSubscriber {
		return vs[0].([]BudgetActionSubscriber)[vs[1].(int)]
	}).(BudgetActionSubscriberOutput)
}

type BudgetAutoAdjustData struct {
	AutoAdjustType     string                                 `pulumi:"autoAdjustType"`
	HistoricalOptions  *BudgetAutoAdjustDataHistoricalOptions `pulumi:"historicalOptions"`
	LastAutoAdjustTime *string                                `pulumi:"lastAutoAdjustTime"`
}

// BudgetAutoAdjustDataInput is an input type that accepts BudgetAutoAdjustDataArgs and BudgetAutoAdjustDataOutput values.
// You can construct a concrete instance of `BudgetAutoAdjustDataInput` via:
//
//	BudgetAutoAdjustDataArgs{...}
type BudgetAutoAdjustDataInput interface {
	pulumi.Input

	ToBudgetAutoAdjustDataOutput() BudgetAutoAdjustDataOutput
	ToBudgetAutoAdjustDataOutputWithContext(context.Context) BudgetAutoAdjustDataOutput
}

type BudgetAutoAdjustDataArgs struct {
	AutoAdjustType     pulumi.StringInput                            `pulumi:"autoAdjustType"`
	HistoricalOptions  BudgetAutoAdjustDataHistoricalOptionsPtrInput `pulumi:"historicalOptions"`
	LastAutoAdjustTime pulumi.StringPtrInput                         `pulumi:"lastAutoAdjustTime"`
}

func (BudgetAutoAdjustDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetAutoAdjustData)(nil)).Elem()
}

func (i BudgetAutoAdjustDataArgs) ToBudgetAutoAdjustDataOutput() BudgetAutoAdjustDataOutput {
	return i.ToBudgetAutoAdjustDataOutputWithContext(context.Background())
}

func (i BudgetAutoAdjustDataArgs) ToBudgetAutoAdjustDataOutputWithContext(ctx context.Context) BudgetAutoAdjustDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetAutoAdjustDataOutput)
}

func (i BudgetAutoAdjustDataArgs) ToBudgetAutoAdjustDataPtrOutput() BudgetAutoAdjustDataPtrOutput {
	return i.ToBudgetAutoAdjustDataPtrOutputWithContext(context.Background())
}

func (i BudgetAutoAdjustDataArgs) ToBudgetAutoAdjustDataPtrOutputWithContext(ctx context.Context) BudgetAutoAdjustDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetAutoAdjustDataOutput).ToBudgetAutoAdjustDataPtrOutputWithContext(ctx)
}

// BudgetAutoAdjustDataPtrInput is an input type that accepts BudgetAutoAdjustDataArgs, BudgetAutoAdjustDataPtr and BudgetAutoAdjustDataPtrOutput values.
// You can construct a concrete instance of `BudgetAutoAdjustDataPtrInput` via:
//
//	        BudgetAutoAdjustDataArgs{...}
//
//	or:
//
//	        nil
type BudgetAutoAdjustDataPtrInput interface {
	pulumi.Input

	ToBudgetAutoAdjustDataPtrOutput() BudgetAutoAdjustDataPtrOutput
	ToBudgetAutoAdjustDataPtrOutputWithContext(context.Context) BudgetAutoAdjustDataPtrOutput
}

type budgetAutoAdjustDataPtrType BudgetAutoAdjustDataArgs

func BudgetAutoAdjustDataPtr(v *BudgetAutoAdjustDataArgs) BudgetAutoAdjustDataPtrInput {
	return (*budgetAutoAdjustDataPtrType)(v)
}

func (*budgetAutoAdjustDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetAutoAdjustData)(nil)).Elem()
}

func (i *budgetAutoAdjustDataPtrType) ToBudgetAutoAdjustDataPtrOutput() BudgetAutoAdjustDataPtrOutput {
	return i.ToBudgetAutoAdjustDataPtrOutputWithContext(context.Background())
}

func (i *budgetAutoAdjustDataPtrType) ToBudgetAutoAdjustDataPtrOutputWithContext(ctx context.Context) BudgetAutoAdjustDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetAutoAdjustDataPtrOutput)
}

type BudgetAutoAdjustDataOutput struct{ *pulumi.OutputState }

func (BudgetAutoAdjustDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetAutoAdjustData)(nil)).Elem()
}

func (o BudgetAutoAdjustDataOutput) ToBudgetAutoAdjustDataOutput() BudgetAutoAdjustDataOutput {
	return o
}

func (o BudgetAutoAdjustDataOutput) ToBudgetAutoAdjustDataOutputWithContext(ctx context.Context) BudgetAutoAdjustDataOutput {
	return o
}

func (o BudgetAutoAdjustDataOutput) ToBudgetAutoAdjustDataPtrOutput() BudgetAutoAdjustDataPtrOutput {
	return o.ToBudgetAutoAdjustDataPtrOutputWithContext(context.Background())
}

func (o BudgetAutoAdjustDataOutput) ToBudgetAutoAdjustDataPtrOutputWithContext(ctx context.Context) BudgetAutoAdjustDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetAutoAdjustData) *BudgetAutoAdjustData {
		return &v
	}).(BudgetAutoAdjustDataPtrOutput)
}

func (o BudgetAutoAdjustDataOutput) AutoAdjustType() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetAutoAdjustData) string { return v.AutoAdjustType }).(pulumi.StringOutput)
}

func (o BudgetAutoAdjustDataOutput) HistoricalOptions() BudgetAutoAdjustDataHistoricalOptionsPtrOutput {
	return o.ApplyT(func(v BudgetAutoAdjustData) *BudgetAutoAdjustDataHistoricalOptions { return v.HistoricalOptions }).(BudgetAutoAdjustDataHistoricalOptionsPtrOutput)
}

func (o BudgetAutoAdjustDataOutput) LastAutoAdjustTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetAutoAdjustData) *string { return v.LastAutoAdjustTime }).(pulumi.StringPtrOutput)
}

type BudgetAutoAdjustDataPtrOutput struct{ *pulumi.OutputState }

func (BudgetAutoAdjustDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetAutoAdjustData)(nil)).Elem()
}

func (o BudgetAutoAdjustDataPtrOutput) ToBudgetAutoAdjustDataPtrOutput() BudgetAutoAdjustDataPtrOutput {
	return o
}

func (o BudgetAutoAdjustDataPtrOutput) ToBudgetAutoAdjustDataPtrOutputWithContext(ctx context.Context) BudgetAutoAdjustDataPtrOutput {
	return o
}

func (o BudgetAutoAdjustDataPtrOutput) Elem() BudgetAutoAdjustDataOutput {
	return o.ApplyT(func(v *BudgetAutoAdjustData) BudgetAutoAdjustData {
		if v != nil {
			return *v
		}
		var ret BudgetAutoAdjustData
		return ret
	}).(BudgetAutoAdjustDataOutput)
}

func (o BudgetAutoAdjustDataPtrOutput) AutoAdjustType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetAutoAdjustData) *string {
		if v == nil {
			return nil
		}
		return &v.AutoAdjustType
	}).(pulumi.StringPtrOutput)
}

func (o BudgetAutoAdjustDataPtrOutput) HistoricalOptions() BudgetAutoAdjustDataHistoricalOptionsPtrOutput {
	return o.ApplyT(func(v *BudgetAutoAdjustData) *BudgetAutoAdjustDataHistoricalOptions {
		if v == nil {
			return nil
		}
		return v.HistoricalOptions
	}).(BudgetAutoAdjustDataHistoricalOptionsPtrOutput)
}

func (o BudgetAutoAdjustDataPtrOutput) LastAutoAdjustTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetAutoAdjustData) *string {
		if v == nil {
			return nil
		}
		return v.LastAutoAdjustTime
	}).(pulumi.StringPtrOutput)
}

type BudgetAutoAdjustDataHistoricalOptions struct {
	BudgetAdjustmentPeriod   int  `pulumi:"budgetAdjustmentPeriod"`
	LookbackAvailablePeriods *int `pulumi:"lookbackAvailablePeriods"`
}

// BudgetAutoAdjustDataHistoricalOptionsInput is an input type that accepts BudgetAutoAdjustDataHistoricalOptionsArgs and BudgetAutoAdjustDataHistoricalOptionsOutput values.
// You can construct a concrete instance of `BudgetAutoAdjustDataHistoricalOptionsInput` via:
//
//	BudgetAutoAdjustDataHistoricalOptionsArgs{...}
type BudgetAutoAdjustDataHistoricalOptionsInput interface {
	pulumi.Input

	ToBudgetAutoAdjustDataHistoricalOptionsOutput() BudgetAutoAdjustDataHistoricalOptionsOutput
	ToBudgetAutoAdjustDataHistoricalOptionsOutputWithContext(context.Context) BudgetAutoAdjustDataHistoricalOptionsOutput
}

type BudgetAutoAdjustDataHistoricalOptionsArgs struct {
	BudgetAdjustmentPeriod   pulumi.IntInput    `pulumi:"budgetAdjustmentPeriod"`
	LookbackAvailablePeriods pulumi.IntPtrInput `pulumi:"lookbackAvailablePeriods"`
}

func (BudgetAutoAdjustDataHistoricalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetAutoAdjustDataHistoricalOptions)(nil)).Elem()
}

func (i BudgetAutoAdjustDataHistoricalOptionsArgs) ToBudgetAutoAdjustDataHistoricalOptionsOutput() BudgetAutoAdjustDataHistoricalOptionsOutput {
	return i.ToBudgetAutoAdjustDataHistoricalOptionsOutputWithContext(context.Background())
}

func (i BudgetAutoAdjustDataHistoricalOptionsArgs) ToBudgetAutoAdjustDataHistoricalOptionsOutputWithContext(ctx context.Context) BudgetAutoAdjustDataHistoricalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetAutoAdjustDataHistoricalOptionsOutput)
}

func (i BudgetAutoAdjustDataHistoricalOptionsArgs) ToBudgetAutoAdjustDataHistoricalOptionsPtrOutput() BudgetAutoAdjustDataHistoricalOptionsPtrOutput {
	return i.ToBudgetAutoAdjustDataHistoricalOptionsPtrOutputWithContext(context.Background())
}

func (i BudgetAutoAdjustDataHistoricalOptionsArgs) ToBudgetAutoAdjustDataHistoricalOptionsPtrOutputWithContext(ctx context.Context) BudgetAutoAdjustDataHistoricalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetAutoAdjustDataHistoricalOptionsOutput).ToBudgetAutoAdjustDataHistoricalOptionsPtrOutputWithContext(ctx)
}

// BudgetAutoAdjustDataHistoricalOptionsPtrInput is an input type that accepts BudgetAutoAdjustDataHistoricalOptionsArgs, BudgetAutoAdjustDataHistoricalOptionsPtr and BudgetAutoAdjustDataHistoricalOptionsPtrOutput values.
// You can construct a concrete instance of `BudgetAutoAdjustDataHistoricalOptionsPtrInput` via:
//
//	        BudgetAutoAdjustDataHistoricalOptionsArgs{...}
//
//	or:
//
//	        nil
type BudgetAutoAdjustDataHistoricalOptionsPtrInput interface {
	pulumi.Input

	ToBudgetAutoAdjustDataHistoricalOptionsPtrOutput() BudgetAutoAdjustDataHistoricalOptionsPtrOutput
	ToBudgetAutoAdjustDataHistoricalOptionsPtrOutputWithContext(context.Context) BudgetAutoAdjustDataHistoricalOptionsPtrOutput
}

type budgetAutoAdjustDataHistoricalOptionsPtrType BudgetAutoAdjustDataHistoricalOptionsArgs

func BudgetAutoAdjustDataHistoricalOptionsPtr(v *BudgetAutoAdjustDataHistoricalOptionsArgs) BudgetAutoAdjustDataHistoricalOptionsPtrInput {
	return (*budgetAutoAdjustDataHistoricalOptionsPtrType)(v)
}

func (*budgetAutoAdjustDataHistoricalOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetAutoAdjustDataHistoricalOptions)(nil)).Elem()
}

func (i *budgetAutoAdjustDataHistoricalOptionsPtrType) ToBudgetAutoAdjustDataHistoricalOptionsPtrOutput() BudgetAutoAdjustDataHistoricalOptionsPtrOutput {
	return i.ToBudgetAutoAdjustDataHistoricalOptionsPtrOutputWithContext(context.Background())
}

func (i *budgetAutoAdjustDataHistoricalOptionsPtrType) ToBudgetAutoAdjustDataHistoricalOptionsPtrOutputWithContext(ctx context.Context) BudgetAutoAdjustDataHistoricalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetAutoAdjustDataHistoricalOptionsPtrOutput)
}

type BudgetAutoAdjustDataHistoricalOptionsOutput struct{ *pulumi.OutputState }

func (BudgetAutoAdjustDataHistoricalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetAutoAdjustDataHistoricalOptions)(nil)).Elem()
}

func (o BudgetAutoAdjustDataHistoricalOptionsOutput) ToBudgetAutoAdjustDataHistoricalOptionsOutput() BudgetAutoAdjustDataHistoricalOptionsOutput {
	return o
}

func (o BudgetAutoAdjustDataHistoricalOptionsOutput) ToBudgetAutoAdjustDataHistoricalOptionsOutputWithContext(ctx context.Context) BudgetAutoAdjustDataHistoricalOptionsOutput {
	return o
}

func (o BudgetAutoAdjustDataHistoricalOptionsOutput) ToBudgetAutoAdjustDataHistoricalOptionsPtrOutput() BudgetAutoAdjustDataHistoricalOptionsPtrOutput {
	return o.ToBudgetAutoAdjustDataHistoricalOptionsPtrOutputWithContext(context.Background())
}

func (o BudgetAutoAdjustDataHistoricalOptionsOutput) ToBudgetAutoAdjustDataHistoricalOptionsPtrOutputWithContext(ctx context.Context) BudgetAutoAdjustDataHistoricalOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetAutoAdjustDataHistoricalOptions) *BudgetAutoAdjustDataHistoricalOptions {
		return &v
	}).(BudgetAutoAdjustDataHistoricalOptionsPtrOutput)
}

func (o BudgetAutoAdjustDataHistoricalOptionsOutput) BudgetAdjustmentPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v BudgetAutoAdjustDataHistoricalOptions) int { return v.BudgetAdjustmentPeriod }).(pulumi.IntOutput)
}

func (o BudgetAutoAdjustDataHistoricalOptionsOutput) LookbackAvailablePeriods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BudgetAutoAdjustDataHistoricalOptions) *int { return v.LookbackAvailablePeriods }).(pulumi.IntPtrOutput)
}

type BudgetAutoAdjustDataHistoricalOptionsPtrOutput struct{ *pulumi.OutputState }

func (BudgetAutoAdjustDataHistoricalOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetAutoAdjustDataHistoricalOptions)(nil)).Elem()
}

func (o BudgetAutoAdjustDataHistoricalOptionsPtrOutput) ToBudgetAutoAdjustDataHistoricalOptionsPtrOutput() BudgetAutoAdjustDataHistoricalOptionsPtrOutput {
	return o
}

func (o BudgetAutoAdjustDataHistoricalOptionsPtrOutput) ToBudgetAutoAdjustDataHistoricalOptionsPtrOutputWithContext(ctx context.Context) BudgetAutoAdjustDataHistoricalOptionsPtrOutput {
	return o
}

func (o BudgetAutoAdjustDataHistoricalOptionsPtrOutput) Elem() BudgetAutoAdjustDataHistoricalOptionsOutput {
	return o.ApplyT(func(v *BudgetAutoAdjustDataHistoricalOptions) BudgetAutoAdjustDataHistoricalOptions {
		if v != nil {
			return *v
		}
		var ret BudgetAutoAdjustDataHistoricalOptions
		return ret
	}).(BudgetAutoAdjustDataHistoricalOptionsOutput)
}

func (o BudgetAutoAdjustDataHistoricalOptionsPtrOutput) BudgetAdjustmentPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BudgetAutoAdjustDataHistoricalOptions) *int {
		if v == nil {
			return nil
		}
		return &v.BudgetAdjustmentPeriod
	}).(pulumi.IntPtrOutput)
}

func (o BudgetAutoAdjustDataHistoricalOptionsPtrOutput) LookbackAvailablePeriods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BudgetAutoAdjustDataHistoricalOptions) *int {
		if v == nil {
			return nil
		}
		return v.LookbackAvailablePeriods
	}).(pulumi.IntPtrOutput)
}

type BudgetCostFilter struct {
	// The name of a budget. Unique within accounts.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// BudgetCostFilterInput is an input type that accepts BudgetCostFilterArgs and BudgetCostFilterOutput values.
// You can construct a concrete instance of `BudgetCostFilterInput` via:
//
//	BudgetCostFilterArgs{...}
type BudgetCostFilterInput interface {
	pulumi.Input

	ToBudgetCostFilterOutput() BudgetCostFilterOutput
	ToBudgetCostFilterOutputWithContext(context.Context) BudgetCostFilterOutput
}

type BudgetCostFilterArgs struct {
	// The name of a budget. Unique within accounts.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BudgetCostFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetCostFilter)(nil)).Elem()
}

func (i BudgetCostFilterArgs) ToBudgetCostFilterOutput() BudgetCostFilterOutput {
	return i.ToBudgetCostFilterOutputWithContext(context.Background())
}

func (i BudgetCostFilterArgs) ToBudgetCostFilterOutputWithContext(ctx context.Context) BudgetCostFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetCostFilterOutput)
}

// BudgetCostFilterArrayInput is an input type that accepts BudgetCostFilterArray and BudgetCostFilterArrayOutput values.
// You can construct a concrete instance of `BudgetCostFilterArrayInput` via:
//
//	BudgetCostFilterArray{ BudgetCostFilterArgs{...} }
type BudgetCostFilterArrayInput interface {
	pulumi.Input

	ToBudgetCostFilterArrayOutput() BudgetCostFilterArrayOutput
	ToBudgetCostFilterArrayOutputWithContext(context.Context) BudgetCostFilterArrayOutput
}

type BudgetCostFilterArray []BudgetCostFilterInput

func (BudgetCostFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetCostFilter)(nil)).Elem()
}

func (i BudgetCostFilterArray) ToBudgetCostFilterArrayOutput() BudgetCostFilterArrayOutput {
	return i.ToBudgetCostFilterArrayOutputWithContext(context.Background())
}

func (i BudgetCostFilterArray) ToBudgetCostFilterArrayOutputWithContext(ctx context.Context) BudgetCostFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetCostFilterArrayOutput)
}

type BudgetCostFilterOutput struct{ *pulumi.OutputState }

func (BudgetCostFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetCostFilter)(nil)).Elem()
}

func (o BudgetCostFilterOutput) ToBudgetCostFilterOutput() BudgetCostFilterOutput {
	return o
}

func (o BudgetCostFilterOutput) ToBudgetCostFilterOutputWithContext(ctx context.Context) BudgetCostFilterOutput {
	return o
}

// The name of a budget. Unique within accounts.
func (o BudgetCostFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetCostFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o BudgetCostFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetCostFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type BudgetCostFilterArrayOutput struct{ *pulumi.OutputState }

func (BudgetCostFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetCostFilter)(nil)).Elem()
}

func (o BudgetCostFilterArrayOutput) ToBudgetCostFilterArrayOutput() BudgetCostFilterArrayOutput {
	return o
}

func (o BudgetCostFilterArrayOutput) ToBudgetCostFilterArrayOutputWithContext(ctx context.Context) BudgetCostFilterArrayOutput {
	return o
}

func (o BudgetCostFilterArrayOutput) Index(i pulumi.IntInput) BudgetCostFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetCostFilter {
		return vs[0].([]BudgetCostFilter)[vs[1].(int)]
	}).(BudgetCostFilterOutput)
}

type BudgetCostTypes struct {
	// A boolean value whether to include credits in the cost budget. Defaults to `true`
	IncludeCredit *bool `pulumi:"includeCredit"`
	// Whether a budget includes discounts. Defaults to `true`
	IncludeDiscount *bool `pulumi:"includeDiscount"`
	// A boolean value whether to include other subscription costs in the cost budget. Defaults to `true`
	IncludeOtherSubscription *bool `pulumi:"includeOtherSubscription"`
	// A boolean value whether to include recurring costs in the cost budget. Defaults to `true`
	IncludeRecurring *bool `pulumi:"includeRecurring"`
	// A boolean value whether to include refunds in the cost budget. Defaults to `true`
	IncludeRefund *bool `pulumi:"includeRefund"`
	// A boolean value whether to include subscriptions in the cost budget. Defaults to `true`
	IncludeSubscription *bool `pulumi:"includeSubscription"`
	// A boolean value whether to include support costs in the cost budget. Defaults to `true`
	IncludeSupport *bool `pulumi:"includeSupport"`
	// A boolean value whether to include tax in the cost budget. Defaults to `true`
	IncludeTax *bool `pulumi:"includeTax"`
	// A boolean value whether to include upfront costs in the cost budget. Defaults to `true`
	IncludeUpfront *bool `pulumi:"includeUpfront"`
	// Whether a budget uses the amortized rate. Defaults to `false`
	UseAmortized *bool `pulumi:"useAmortized"`
	// A boolean value whether to use blended costs in the cost budget. Defaults to `false`
	UseBlended *bool `pulumi:"useBlended"`
}

// BudgetCostTypesInput is an input type that accepts BudgetCostTypesArgs and BudgetCostTypesOutput values.
// You can construct a concrete instance of `BudgetCostTypesInput` via:
//
//	BudgetCostTypesArgs{...}
type BudgetCostTypesInput interface {
	pulumi.Input

	ToBudgetCostTypesOutput() BudgetCostTypesOutput
	ToBudgetCostTypesOutputWithContext(context.Context) BudgetCostTypesOutput
}

type BudgetCostTypesArgs struct {
	// A boolean value whether to include credits in the cost budget. Defaults to `true`
	IncludeCredit pulumi.BoolPtrInput `pulumi:"includeCredit"`
	// Whether a budget includes discounts. Defaults to `true`
	IncludeDiscount pulumi.BoolPtrInput `pulumi:"includeDiscount"`
	// A boolean value whether to include other subscription costs in the cost budget. Defaults to `true`
	IncludeOtherSubscription pulumi.BoolPtrInput `pulumi:"includeOtherSubscription"`
	// A boolean value whether to include recurring costs in the cost budget. Defaults to `true`
	IncludeRecurring pulumi.BoolPtrInput `pulumi:"includeRecurring"`
	// A boolean value whether to include refunds in the cost budget. Defaults to `true`
	IncludeRefund pulumi.BoolPtrInput `pulumi:"includeRefund"`
	// A boolean value whether to include subscriptions in the cost budget. Defaults to `true`
	IncludeSubscription pulumi.BoolPtrInput `pulumi:"includeSubscription"`
	// A boolean value whether to include support costs in the cost budget. Defaults to `true`
	IncludeSupport pulumi.BoolPtrInput `pulumi:"includeSupport"`
	// A boolean value whether to include tax in the cost budget. Defaults to `true`
	IncludeTax pulumi.BoolPtrInput `pulumi:"includeTax"`
	// A boolean value whether to include upfront costs in the cost budget. Defaults to `true`
	IncludeUpfront pulumi.BoolPtrInput `pulumi:"includeUpfront"`
	// Whether a budget uses the amortized rate. Defaults to `false`
	UseAmortized pulumi.BoolPtrInput `pulumi:"useAmortized"`
	// A boolean value whether to use blended costs in the cost budget. Defaults to `false`
	UseBlended pulumi.BoolPtrInput `pulumi:"useBlended"`
}

func (BudgetCostTypesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetCostTypes)(nil)).Elem()
}

func (i BudgetCostTypesArgs) ToBudgetCostTypesOutput() BudgetCostTypesOutput {
	return i.ToBudgetCostTypesOutputWithContext(context.Background())
}

func (i BudgetCostTypesArgs) ToBudgetCostTypesOutputWithContext(ctx context.Context) BudgetCostTypesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetCostTypesOutput)
}

func (i BudgetCostTypesArgs) ToBudgetCostTypesPtrOutput() BudgetCostTypesPtrOutput {
	return i.ToBudgetCostTypesPtrOutputWithContext(context.Background())
}

func (i BudgetCostTypesArgs) ToBudgetCostTypesPtrOutputWithContext(ctx context.Context) BudgetCostTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetCostTypesOutput).ToBudgetCostTypesPtrOutputWithContext(ctx)
}

// BudgetCostTypesPtrInput is an input type that accepts BudgetCostTypesArgs, BudgetCostTypesPtr and BudgetCostTypesPtrOutput values.
// You can construct a concrete instance of `BudgetCostTypesPtrInput` via:
//
//	        BudgetCostTypesArgs{...}
//
//	or:
//
//	        nil
type BudgetCostTypesPtrInput interface {
	pulumi.Input

	ToBudgetCostTypesPtrOutput() BudgetCostTypesPtrOutput
	ToBudgetCostTypesPtrOutputWithContext(context.Context) BudgetCostTypesPtrOutput
}

type budgetCostTypesPtrType BudgetCostTypesArgs

func BudgetCostTypesPtr(v *BudgetCostTypesArgs) BudgetCostTypesPtrInput {
	return (*budgetCostTypesPtrType)(v)
}

func (*budgetCostTypesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetCostTypes)(nil)).Elem()
}

func (i *budgetCostTypesPtrType) ToBudgetCostTypesPtrOutput() BudgetCostTypesPtrOutput {
	return i.ToBudgetCostTypesPtrOutputWithContext(context.Background())
}

func (i *budgetCostTypesPtrType) ToBudgetCostTypesPtrOutputWithContext(ctx context.Context) BudgetCostTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetCostTypesPtrOutput)
}

type BudgetCostTypesOutput struct{ *pulumi.OutputState }

func (BudgetCostTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetCostTypes)(nil)).Elem()
}

func (o BudgetCostTypesOutput) ToBudgetCostTypesOutput() BudgetCostTypesOutput {
	return o
}

func (o BudgetCostTypesOutput) ToBudgetCostTypesOutputWithContext(ctx context.Context) BudgetCostTypesOutput {
	return o
}

func (o BudgetCostTypesOutput) ToBudgetCostTypesPtrOutput() BudgetCostTypesPtrOutput {
	return o.ToBudgetCostTypesPtrOutputWithContext(context.Background())
}

func (o BudgetCostTypesOutput) ToBudgetCostTypesPtrOutputWithContext(ctx context.Context) BudgetCostTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetCostTypes) *BudgetCostTypes {
		return &v
	}).(BudgetCostTypesPtrOutput)
}

// A boolean value whether to include credits in the cost budget. Defaults to `true`
func (o BudgetCostTypesOutput) IncludeCredit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeCredit }).(pulumi.BoolPtrOutput)
}

// Whether a budget includes discounts. Defaults to `true`
func (o BudgetCostTypesOutput) IncludeDiscount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeDiscount }).(pulumi.BoolPtrOutput)
}

// A boolean value whether to include other subscription costs in the cost budget. Defaults to `true`
func (o BudgetCostTypesOutput) IncludeOtherSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeOtherSubscription }).(pulumi.BoolPtrOutput)
}

// A boolean value whether to include recurring costs in the cost budget. Defaults to `true`
func (o BudgetCostTypesOutput) IncludeRecurring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeRecurring }).(pulumi.BoolPtrOutput)
}

// A boolean value whether to include refunds in the cost budget. Defaults to `true`
func (o BudgetCostTypesOutput) IncludeRefund() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeRefund }).(pulumi.BoolPtrOutput)
}

// A boolean value whether to include subscriptions in the cost budget. Defaults to `true`
func (o BudgetCostTypesOutput) IncludeSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeSubscription }).(pulumi.BoolPtrOutput)
}

// A boolean value whether to include support costs in the cost budget. Defaults to `true`
func (o BudgetCostTypesOutput) IncludeSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeSupport }).(pulumi.BoolPtrOutput)
}

// A boolean value whether to include tax in the cost budget. Defaults to `true`
func (o BudgetCostTypesOutput) IncludeTax() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeTax }).(pulumi.BoolPtrOutput)
}

// A boolean value whether to include upfront costs in the cost budget. Defaults to `true`
func (o BudgetCostTypesOutput) IncludeUpfront() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeUpfront }).(pulumi.BoolPtrOutput)
}

// Whether a budget uses the amortized rate. Defaults to `false`
func (o BudgetCostTypesOutput) UseAmortized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.UseAmortized }).(pulumi.BoolPtrOutput)
}

// A boolean value whether to use blended costs in the cost budget. Defaults to `false`
func (o BudgetCostTypesOutput) UseBlended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.UseBlended }).(pulumi.BoolPtrOutput)
}

type BudgetCostTypesPtrOutput struct{ *pulumi.OutputState }

func (BudgetCostTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetCostTypes)(nil)).Elem()
}

func (o BudgetCostTypesPtrOutput) ToBudgetCostTypesPtrOutput() BudgetCostTypesPtrOutput {
	return o
}

func (o BudgetCostTypesPtrOutput) ToBudgetCostTypesPtrOutputWithContext(ctx context.Context) BudgetCostTypesPtrOutput {
	return o
}

func (o BudgetCostTypesPtrOutput) Elem() BudgetCostTypesOutput {
	return o.ApplyT(func(v *BudgetCostTypes) BudgetCostTypes {
		if v != nil {
			return *v
		}
		var ret BudgetCostTypes
		return ret
	}).(BudgetCostTypesOutput)
}

// A boolean value whether to include credits in the cost budget. Defaults to `true`
func (o BudgetCostTypesPtrOutput) IncludeCredit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeCredit
	}).(pulumi.BoolPtrOutput)
}

// Whether a budget includes discounts. Defaults to `true`
func (o BudgetCostTypesPtrOutput) IncludeDiscount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeDiscount
	}).(pulumi.BoolPtrOutput)
}

// A boolean value whether to include other subscription costs in the cost budget. Defaults to `true`
func (o BudgetCostTypesPtrOutput) IncludeOtherSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeOtherSubscription
	}).(pulumi.BoolPtrOutput)
}

// A boolean value whether to include recurring costs in the cost budget. Defaults to `true`
func (o BudgetCostTypesPtrOutput) IncludeRecurring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeRecurring
	}).(pulumi.BoolPtrOutput)
}

// A boolean value whether to include refunds in the cost budget. Defaults to `true`
func (o BudgetCostTypesPtrOutput) IncludeRefund() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeRefund
	}).(pulumi.BoolPtrOutput)
}

// A boolean value whether to include subscriptions in the cost budget. Defaults to `true`
func (o BudgetCostTypesPtrOutput) IncludeSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeSubscription
	}).(pulumi.BoolPtrOutput)
}

// A boolean value whether to include support costs in the cost budget. Defaults to `true`
func (o BudgetCostTypesPtrOutput) IncludeSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeSupport
	}).(pulumi.BoolPtrOutput)
}

// A boolean value whether to include tax in the cost budget. Defaults to `true`
func (o BudgetCostTypesPtrOutput) IncludeTax() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeTax
	}).(pulumi.BoolPtrOutput)
}

// A boolean value whether to include upfront costs in the cost budget. Defaults to `true`
func (o BudgetCostTypesPtrOutput) IncludeUpfront() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeUpfront
	}).(pulumi.BoolPtrOutput)
}

// Whether a budget uses the amortized rate. Defaults to `false`
func (o BudgetCostTypesPtrOutput) UseAmortized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.UseAmortized
	}).(pulumi.BoolPtrOutput)
}

// A boolean value whether to use blended costs in the cost budget. Defaults to `false`
func (o BudgetCostTypesPtrOutput) UseBlended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.UseBlended
	}).(pulumi.BoolPtrOutput)
}

type BudgetNotification struct {
	// (Required) Comparison operator to use to evaluate the condition. Can be `LESS_THAN`, `EQUAL_TO` or `GREATER_THAN`.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// (Required) What kind of budget value to notify on. Can be `ACTUAL` or `FORECASTED`
	NotificationType string `pulumi:"notificationType"`
	// (Optional) E-Mail addresses to notify. Either this or `subscriberSnsTopicArns` is required.
	SubscriberEmailAddresses []string `pulumi:"subscriberEmailAddresses"`
	// (Optional) SNS topics to notify. Either this or `subscriberEmailAddresses` is required.
	SubscriberSnsTopicArns []string `pulumi:"subscriberSnsTopicArns"`
	// (Required) Threshold when the notification should be sent.
	Threshold float64 `pulumi:"threshold"`
	// (Required) What kind of threshold is defined. Can be `PERCENTAGE` OR `ABSOLUTE_VALUE`.
	ThresholdType string `pulumi:"thresholdType"`
}

// BudgetNotificationInput is an input type that accepts BudgetNotificationArgs and BudgetNotificationOutput values.
// You can construct a concrete instance of `BudgetNotificationInput` via:
//
//	BudgetNotificationArgs{...}
type BudgetNotificationInput interface {
	pulumi.Input

	ToBudgetNotificationOutput() BudgetNotificationOutput
	ToBudgetNotificationOutputWithContext(context.Context) BudgetNotificationOutput
}

type BudgetNotificationArgs struct {
	// (Required) Comparison operator to use to evaluate the condition. Can be `LESS_THAN`, `EQUAL_TO` or `GREATER_THAN`.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// (Required) What kind of budget value to notify on. Can be `ACTUAL` or `FORECASTED`
	NotificationType pulumi.StringInput `pulumi:"notificationType"`
	// (Optional) E-Mail addresses to notify. Either this or `subscriberSnsTopicArns` is required.
	SubscriberEmailAddresses pulumi.StringArrayInput `pulumi:"subscriberEmailAddresses"`
	// (Optional) SNS topics to notify. Either this or `subscriberEmailAddresses` is required.
	SubscriberSnsTopicArns pulumi.StringArrayInput `pulumi:"subscriberSnsTopicArns"`
	// (Required) Threshold when the notification should be sent.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// (Required) What kind of threshold is defined. Can be `PERCENTAGE` OR `ABSOLUTE_VALUE`.
	ThresholdType pulumi.StringInput `pulumi:"thresholdType"`
}

func (BudgetNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetNotification)(nil)).Elem()
}

func (i BudgetNotificationArgs) ToBudgetNotificationOutput() BudgetNotificationOutput {
	return i.ToBudgetNotificationOutputWithContext(context.Background())
}

func (i BudgetNotificationArgs) ToBudgetNotificationOutputWithContext(ctx context.Context) BudgetNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetNotificationOutput)
}

// BudgetNotificationArrayInput is an input type that accepts BudgetNotificationArray and BudgetNotificationArrayOutput values.
// You can construct a concrete instance of `BudgetNotificationArrayInput` via:
//
//	BudgetNotificationArray{ BudgetNotificationArgs{...} }
type BudgetNotificationArrayInput interface {
	pulumi.Input

	ToBudgetNotificationArrayOutput() BudgetNotificationArrayOutput
	ToBudgetNotificationArrayOutputWithContext(context.Context) BudgetNotificationArrayOutput
}

type BudgetNotificationArray []BudgetNotificationInput

func (BudgetNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetNotification)(nil)).Elem()
}

func (i BudgetNotificationArray) ToBudgetNotificationArrayOutput() BudgetNotificationArrayOutput {
	return i.ToBudgetNotificationArrayOutputWithContext(context.Background())
}

func (i BudgetNotificationArray) ToBudgetNotificationArrayOutputWithContext(ctx context.Context) BudgetNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetNotificationArrayOutput)
}

type BudgetNotificationOutput struct{ *pulumi.OutputState }

func (BudgetNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetNotification)(nil)).Elem()
}

func (o BudgetNotificationOutput) ToBudgetNotificationOutput() BudgetNotificationOutput {
	return o
}

func (o BudgetNotificationOutput) ToBudgetNotificationOutputWithContext(ctx context.Context) BudgetNotificationOutput {
	return o
}

// (Required) Comparison operator to use to evaluate the condition. Can be `LESS_THAN`, `EQUAL_TO` or `GREATER_THAN`.
func (o BudgetNotificationOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetNotification) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// (Required) What kind of budget value to notify on. Can be `ACTUAL` or `FORECASTED`
func (o BudgetNotificationOutput) NotificationType() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetNotification) string { return v.NotificationType }).(pulumi.StringOutput)
}

// (Optional) E-Mail addresses to notify. Either this or `subscriberSnsTopicArns` is required.
func (o BudgetNotificationOutput) SubscriberEmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetNotification) []string { return v.SubscriberEmailAddresses }).(pulumi.StringArrayOutput)
}

// (Optional) SNS topics to notify. Either this or `subscriberEmailAddresses` is required.
func (o BudgetNotificationOutput) SubscriberSnsTopicArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetNotification) []string { return v.SubscriberSnsTopicArns }).(pulumi.StringArrayOutput)
}

// (Required) Threshold when the notification should be sent.
func (o BudgetNotificationOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v BudgetNotification) float64 { return v.Threshold }).(pulumi.Float64Output)
}

// (Required) What kind of threshold is defined. Can be `PERCENTAGE` OR `ABSOLUTE_VALUE`.
func (o BudgetNotificationOutput) ThresholdType() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetNotification) string { return v.ThresholdType }).(pulumi.StringOutput)
}

type BudgetNotificationArrayOutput struct{ *pulumi.OutputState }

func (BudgetNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetNotification)(nil)).Elem()
}

func (o BudgetNotificationArrayOutput) ToBudgetNotificationArrayOutput() BudgetNotificationArrayOutput {
	return o
}

func (o BudgetNotificationArrayOutput) ToBudgetNotificationArrayOutputWithContext(ctx context.Context) BudgetNotificationArrayOutput {
	return o
}

func (o BudgetNotificationArrayOutput) Index(i pulumi.IntInput) BudgetNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetNotification {
		return vs[0].([]BudgetNotification)[vs[1].(int)]
	}).(BudgetNotificationOutput)
}

type BudgetPlannedLimit struct {
	// (Required) The amount of cost or usage being measured for a budget.
	Amount string `pulumi:"amount"`
	// (Required) The start time of the budget limit. Format: `2017-01-01_12:00`. See [PlannedBudgetLimits](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_Budget.html#awscostmanagement-Type-budgets_Budget-PlannedBudgetLimits) documentation.
	StartTime string `pulumi:"startTime"`
	// (Required) The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See [Spend](http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/data-type-spend.html) documentation.
	Unit string `pulumi:"unit"`
}

// BudgetPlannedLimitInput is an input type that accepts BudgetPlannedLimitArgs and BudgetPlannedLimitOutput values.
// You can construct a concrete instance of `BudgetPlannedLimitInput` via:
//
//	BudgetPlannedLimitArgs{...}
type BudgetPlannedLimitInput interface {
	pulumi.Input

	ToBudgetPlannedLimitOutput() BudgetPlannedLimitOutput
	ToBudgetPlannedLimitOutputWithContext(context.Context) BudgetPlannedLimitOutput
}

type BudgetPlannedLimitArgs struct {
	// (Required) The amount of cost or usage being measured for a budget.
	Amount pulumi.StringInput `pulumi:"amount"`
	// (Required) The start time of the budget limit. Format: `2017-01-01_12:00`. See [PlannedBudgetLimits](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_Budget.html#awscostmanagement-Type-budgets_Budget-PlannedBudgetLimits) documentation.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// (Required) The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See [Spend](http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/data-type-spend.html) documentation.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (BudgetPlannedLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetPlannedLimit)(nil)).Elem()
}

func (i BudgetPlannedLimitArgs) ToBudgetPlannedLimitOutput() BudgetPlannedLimitOutput {
	return i.ToBudgetPlannedLimitOutputWithContext(context.Background())
}

func (i BudgetPlannedLimitArgs) ToBudgetPlannedLimitOutputWithContext(ctx context.Context) BudgetPlannedLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetPlannedLimitOutput)
}

// BudgetPlannedLimitArrayInput is an input type that accepts BudgetPlannedLimitArray and BudgetPlannedLimitArrayOutput values.
// You can construct a concrete instance of `BudgetPlannedLimitArrayInput` via:
//
//	BudgetPlannedLimitArray{ BudgetPlannedLimitArgs{...} }
type BudgetPlannedLimitArrayInput interface {
	pulumi.Input

	ToBudgetPlannedLimitArrayOutput() BudgetPlannedLimitArrayOutput
	ToBudgetPlannedLimitArrayOutputWithContext(context.Context) BudgetPlannedLimitArrayOutput
}

type BudgetPlannedLimitArray []BudgetPlannedLimitInput

func (BudgetPlannedLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetPlannedLimit)(nil)).Elem()
}

func (i BudgetPlannedLimitArray) ToBudgetPlannedLimitArrayOutput() BudgetPlannedLimitArrayOutput {
	return i.ToBudgetPlannedLimitArrayOutputWithContext(context.Background())
}

func (i BudgetPlannedLimitArray) ToBudgetPlannedLimitArrayOutputWithContext(ctx context.Context) BudgetPlannedLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetPlannedLimitArrayOutput)
}

type BudgetPlannedLimitOutput struct{ *pulumi.OutputState }

func (BudgetPlannedLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetPlannedLimit)(nil)).Elem()
}

func (o BudgetPlannedLimitOutput) ToBudgetPlannedLimitOutput() BudgetPlannedLimitOutput {
	return o
}

func (o BudgetPlannedLimitOutput) ToBudgetPlannedLimitOutputWithContext(ctx context.Context) BudgetPlannedLimitOutput {
	return o
}

// (Required) The amount of cost or usage being measured for a budget.
func (o BudgetPlannedLimitOutput) Amount() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetPlannedLimit) string { return v.Amount }).(pulumi.StringOutput)
}

// (Required) The start time of the budget limit. Format: `2017-01-01_12:00`. See [PlannedBudgetLimits](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_Budget.html#awscostmanagement-Type-budgets_Budget-PlannedBudgetLimits) documentation.
func (o BudgetPlannedLimitOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetPlannedLimit) string { return v.StartTime }).(pulumi.StringOutput)
}

// (Required) The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See [Spend](http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/data-type-spend.html) documentation.
func (o BudgetPlannedLimitOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetPlannedLimit) string { return v.Unit }).(pulumi.StringOutput)
}

type BudgetPlannedLimitArrayOutput struct{ *pulumi.OutputState }

func (BudgetPlannedLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetPlannedLimit)(nil)).Elem()
}

func (o BudgetPlannedLimitArrayOutput) ToBudgetPlannedLimitArrayOutput() BudgetPlannedLimitArrayOutput {
	return o
}

func (o BudgetPlannedLimitArrayOutput) ToBudgetPlannedLimitArrayOutputWithContext(ctx context.Context) BudgetPlannedLimitArrayOutput {
	return o
}

func (o BudgetPlannedLimitArrayOutput) Index(i pulumi.IntInput) BudgetPlannedLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetPlannedLimit {
		return vs[0].([]BudgetPlannedLimit)[vs[1].(int)]
	}).(BudgetPlannedLimitOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetActionActionThresholdInput)(nil)).Elem(), BudgetActionActionThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetActionActionThresholdPtrInput)(nil)).Elem(), BudgetActionActionThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetActionDefinitionInput)(nil)).Elem(), BudgetActionDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetActionDefinitionPtrInput)(nil)).Elem(), BudgetActionDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetActionDefinitionIamActionDefinitionInput)(nil)).Elem(), BudgetActionDefinitionIamActionDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetActionDefinitionIamActionDefinitionPtrInput)(nil)).Elem(), BudgetActionDefinitionIamActionDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetActionDefinitionScpActionDefinitionInput)(nil)).Elem(), BudgetActionDefinitionScpActionDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetActionDefinitionScpActionDefinitionPtrInput)(nil)).Elem(), BudgetActionDefinitionScpActionDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetActionDefinitionSsmActionDefinitionInput)(nil)).Elem(), BudgetActionDefinitionSsmActionDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetActionDefinitionSsmActionDefinitionPtrInput)(nil)).Elem(), BudgetActionDefinitionSsmActionDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetActionSubscriberInput)(nil)).Elem(), BudgetActionSubscriberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetActionSubscriberArrayInput)(nil)).Elem(), BudgetActionSubscriberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetAutoAdjustDataInput)(nil)).Elem(), BudgetAutoAdjustDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetAutoAdjustDataPtrInput)(nil)).Elem(), BudgetAutoAdjustDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetAutoAdjustDataHistoricalOptionsInput)(nil)).Elem(), BudgetAutoAdjustDataHistoricalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetAutoAdjustDataHistoricalOptionsPtrInput)(nil)).Elem(), BudgetAutoAdjustDataHistoricalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetCostFilterInput)(nil)).Elem(), BudgetCostFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetCostFilterArrayInput)(nil)).Elem(), BudgetCostFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetCostTypesInput)(nil)).Elem(), BudgetCostTypesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetCostTypesPtrInput)(nil)).Elem(), BudgetCostTypesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetNotificationInput)(nil)).Elem(), BudgetNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetNotificationArrayInput)(nil)).Elem(), BudgetNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetPlannedLimitInput)(nil)).Elem(), BudgetPlannedLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetPlannedLimitArrayInput)(nil)).Elem(), BudgetPlannedLimitArray{})
	pulumi.RegisterOutputType(BudgetActionActionThresholdOutput{})
	pulumi.RegisterOutputType(BudgetActionActionThresholdPtrOutput{})
	pulumi.RegisterOutputType(BudgetActionDefinitionOutput{})
	pulumi.RegisterOutputType(BudgetActionDefinitionPtrOutput{})
	pulumi.RegisterOutputType(BudgetActionDefinitionIamActionDefinitionOutput{})
	pulumi.RegisterOutputType(BudgetActionDefinitionIamActionDefinitionPtrOutput{})
	pulumi.RegisterOutputType(BudgetActionDefinitionScpActionDefinitionOutput{})
	pulumi.RegisterOutputType(BudgetActionDefinitionScpActionDefinitionPtrOutput{})
	pulumi.RegisterOutputType(BudgetActionDefinitionSsmActionDefinitionOutput{})
	pulumi.RegisterOutputType(BudgetActionDefinitionSsmActionDefinitionPtrOutput{})
	pulumi.RegisterOutputType(BudgetActionSubscriberOutput{})
	pulumi.RegisterOutputType(BudgetActionSubscriberArrayOutput{})
	pulumi.RegisterOutputType(BudgetAutoAdjustDataOutput{})
	pulumi.RegisterOutputType(BudgetAutoAdjustDataPtrOutput{})
	pulumi.RegisterOutputType(BudgetAutoAdjustDataHistoricalOptionsOutput{})
	pulumi.RegisterOutputType(BudgetAutoAdjustDataHistoricalOptionsPtrOutput{})
	pulumi.RegisterOutputType(BudgetCostFilterOutput{})
	pulumi.RegisterOutputType(BudgetCostFilterArrayOutput{})
	pulumi.RegisterOutputType(BudgetCostTypesOutput{})
	pulumi.RegisterOutputType(BudgetCostTypesPtrOutput{})
	pulumi.RegisterOutputType(BudgetNotificationOutput{})
	pulumi.RegisterOutputType(BudgetNotificationArrayOutput{})
	pulumi.RegisterOutputType(BudgetPlannedLimitOutput{})
	pulumi.RegisterOutputType(BudgetPlannedLimitArrayOutput{})
}
