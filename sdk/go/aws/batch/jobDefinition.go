// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type JobDefinition struct {
	pulumi.CustomResourceState

	Arn                  pulumi.StringOutput                 `pulumi:"arn"`
	ContainerProperties  pulumi.StringPtrOutput              `pulumi:"containerProperties"`
	Name                 pulumi.StringOutput                 `pulumi:"name"`
	Parameters           pulumi.StringMapOutput              `pulumi:"parameters"`
	PlatformCapabilities pulumi.StringArrayOutput            `pulumi:"platformCapabilities"`
	PropagateTags        pulumi.BoolPtrOutput                `pulumi:"propagateTags"`
	RetryStrategy        JobDefinitionRetryStrategyPtrOutput `pulumi:"retryStrategy"`
	Revision             pulumi.IntOutput                    `pulumi:"revision"`
	Tags                 pulumi.StringMapOutput              `pulumi:"tags"`
	TagsAll              pulumi.StringMapOutput              `pulumi:"tagsAll"`
	Timeout              JobDefinitionTimeoutPtrOutput       `pulumi:"timeout"`
	Type                 pulumi.StringOutput                 `pulumi:"type"`
}

// NewJobDefinition registers a new resource with the given unique name, arguments, and options.
func NewJobDefinition(ctx *pulumi.Context,
	name string, args *JobDefinitionArgs, opts ...pulumi.ResourceOption) (*JobDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource JobDefinition
	err := ctx.RegisterResource("aws:batch/jobDefinition:JobDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJobDefinition gets an existing JobDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJobDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobDefinitionState, opts ...pulumi.ResourceOption) (*JobDefinition, error) {
	var resource JobDefinition
	err := ctx.ReadResource("aws:batch/jobDefinition:JobDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JobDefinition resources.
type jobDefinitionState struct {
	Arn                  *string                     `pulumi:"arn"`
	ContainerProperties  *string                     `pulumi:"containerProperties"`
	Name                 *string                     `pulumi:"name"`
	Parameters           map[string]string           `pulumi:"parameters"`
	PlatformCapabilities []string                    `pulumi:"platformCapabilities"`
	PropagateTags        *bool                       `pulumi:"propagateTags"`
	RetryStrategy        *JobDefinitionRetryStrategy `pulumi:"retryStrategy"`
	Revision             *int                        `pulumi:"revision"`
	Tags                 map[string]string           `pulumi:"tags"`
	TagsAll              map[string]string           `pulumi:"tagsAll"`
	Timeout              *JobDefinitionTimeout       `pulumi:"timeout"`
	Type                 *string                     `pulumi:"type"`
}

type JobDefinitionState struct {
	Arn                  pulumi.StringPtrInput
	ContainerProperties  pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	Parameters           pulumi.StringMapInput
	PlatformCapabilities pulumi.StringArrayInput
	PropagateTags        pulumi.BoolPtrInput
	RetryStrategy        JobDefinitionRetryStrategyPtrInput
	Revision             pulumi.IntPtrInput
	Tags                 pulumi.StringMapInput
	TagsAll              pulumi.StringMapInput
	Timeout              JobDefinitionTimeoutPtrInput
	Type                 pulumi.StringPtrInput
}

func (JobDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobDefinitionState)(nil)).Elem()
}

type jobDefinitionArgs struct {
	ContainerProperties  *string                     `pulumi:"containerProperties"`
	Name                 *string                     `pulumi:"name"`
	Parameters           map[string]string           `pulumi:"parameters"`
	PlatformCapabilities []string                    `pulumi:"platformCapabilities"`
	PropagateTags        *bool                       `pulumi:"propagateTags"`
	RetryStrategy        *JobDefinitionRetryStrategy `pulumi:"retryStrategy"`
	Tags                 map[string]string           `pulumi:"tags"`
	Timeout              *JobDefinitionTimeout       `pulumi:"timeout"`
	Type                 string                      `pulumi:"type"`
}

// The set of arguments for constructing a JobDefinition resource.
type JobDefinitionArgs struct {
	ContainerProperties  pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	Parameters           pulumi.StringMapInput
	PlatformCapabilities pulumi.StringArrayInput
	PropagateTags        pulumi.BoolPtrInput
	RetryStrategy        JobDefinitionRetryStrategyPtrInput
	Tags                 pulumi.StringMapInput
	Timeout              JobDefinitionTimeoutPtrInput
	Type                 pulumi.StringInput
}

func (JobDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobDefinitionArgs)(nil)).Elem()
}

type JobDefinitionInput interface {
	pulumi.Input

	ToJobDefinitionOutput() JobDefinitionOutput
	ToJobDefinitionOutputWithContext(ctx context.Context) JobDefinitionOutput
}

func (*JobDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinition)(nil)).Elem()
}

func (i *JobDefinition) ToJobDefinitionOutput() JobDefinitionOutput {
	return i.ToJobDefinitionOutputWithContext(context.Background())
}

func (i *JobDefinition) ToJobDefinitionOutputWithContext(ctx context.Context) JobDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionOutput)
}

// JobDefinitionArrayInput is an input type that accepts JobDefinitionArray and JobDefinitionArrayOutput values.
// You can construct a concrete instance of `JobDefinitionArrayInput` via:
//
//	JobDefinitionArray{ JobDefinitionArgs{...} }
type JobDefinitionArrayInput interface {
	pulumi.Input

	ToJobDefinitionArrayOutput() JobDefinitionArrayOutput
	ToJobDefinitionArrayOutputWithContext(context.Context) JobDefinitionArrayOutput
}

type JobDefinitionArray []JobDefinitionInput

func (JobDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JobDefinition)(nil)).Elem()
}

func (i JobDefinitionArray) ToJobDefinitionArrayOutput() JobDefinitionArrayOutput {
	return i.ToJobDefinitionArrayOutputWithContext(context.Background())
}

func (i JobDefinitionArray) ToJobDefinitionArrayOutputWithContext(ctx context.Context) JobDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionArrayOutput)
}

// JobDefinitionMapInput is an input type that accepts JobDefinitionMap and JobDefinitionMapOutput values.
// You can construct a concrete instance of `JobDefinitionMapInput` via:
//
//	JobDefinitionMap{ "key": JobDefinitionArgs{...} }
type JobDefinitionMapInput interface {
	pulumi.Input

	ToJobDefinitionMapOutput() JobDefinitionMapOutput
	ToJobDefinitionMapOutputWithContext(context.Context) JobDefinitionMapOutput
}

type JobDefinitionMap map[string]JobDefinitionInput

func (JobDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JobDefinition)(nil)).Elem()
}

func (i JobDefinitionMap) ToJobDefinitionMapOutput() JobDefinitionMapOutput {
	return i.ToJobDefinitionMapOutputWithContext(context.Background())
}

func (i JobDefinitionMap) ToJobDefinitionMapOutputWithContext(ctx context.Context) JobDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionMapOutput)
}

type JobDefinitionOutput struct{ *pulumi.OutputState }

func (JobDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinition)(nil)).Elem()
}

func (o JobDefinitionOutput) ToJobDefinitionOutput() JobDefinitionOutput {
	return o
}

func (o JobDefinitionOutput) ToJobDefinitionOutputWithContext(ctx context.Context) JobDefinitionOutput {
	return o
}

func (o JobDefinitionOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *JobDefinition) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o JobDefinitionOutput) ContainerProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDefinition) pulumi.StringPtrOutput { return v.ContainerProperties }).(pulumi.StringPtrOutput)
}

func (o JobDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *JobDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o JobDefinitionOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *JobDefinition) pulumi.StringMapOutput { return v.Parameters }).(pulumi.StringMapOutput)
}

func (o JobDefinitionOutput) PlatformCapabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JobDefinition) pulumi.StringArrayOutput { return v.PlatformCapabilities }).(pulumi.StringArrayOutput)
}

func (o JobDefinitionOutput) PropagateTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobDefinition) pulumi.BoolPtrOutput { return v.PropagateTags }).(pulumi.BoolPtrOutput)
}

func (o JobDefinitionOutput) RetryStrategy() JobDefinitionRetryStrategyPtrOutput {
	return o.ApplyT(func(v *JobDefinition) JobDefinitionRetryStrategyPtrOutput { return v.RetryStrategy }).(JobDefinitionRetryStrategyPtrOutput)
}

func (o JobDefinitionOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v *JobDefinition) pulumi.IntOutput { return v.Revision }).(pulumi.IntOutput)
}

func (o JobDefinitionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *JobDefinition) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o JobDefinitionOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *JobDefinition) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o JobDefinitionOutput) Timeout() JobDefinitionTimeoutPtrOutput {
	return o.ApplyT(func(v *JobDefinition) JobDefinitionTimeoutPtrOutput { return v.Timeout }).(JobDefinitionTimeoutPtrOutput)
}

func (o JobDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *JobDefinition) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type JobDefinitionArrayOutput struct{ *pulumi.OutputState }

func (JobDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JobDefinition)(nil)).Elem()
}

func (o JobDefinitionArrayOutput) ToJobDefinitionArrayOutput() JobDefinitionArrayOutput {
	return o
}

func (o JobDefinitionArrayOutput) ToJobDefinitionArrayOutputWithContext(ctx context.Context) JobDefinitionArrayOutput {
	return o
}

func (o JobDefinitionArrayOutput) Index(i pulumi.IntInput) JobDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *JobDefinition {
		return vs[0].([]*JobDefinition)[vs[1].(int)]
	}).(JobDefinitionOutput)
}

type JobDefinitionMapOutput struct{ *pulumi.OutputState }

func (JobDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JobDefinition)(nil)).Elem()
}

func (o JobDefinitionMapOutput) ToJobDefinitionMapOutput() JobDefinitionMapOutput {
	return o
}

func (o JobDefinitionMapOutput) ToJobDefinitionMapOutputWithContext(ctx context.Context) JobDefinitionMapOutput {
	return o
}

func (o JobDefinitionMapOutput) MapIndex(k pulumi.StringInput) JobDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *JobDefinition {
		return vs[0].(map[string]*JobDefinition)[vs[1].(string)]
	}).(JobDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionInput)(nil)).Elem(), &JobDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionArrayInput)(nil)).Elem(), JobDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionMapInput)(nil)).Elem(), JobDefinitionMap{})
	pulumi.RegisterOutputType(JobDefinitionOutput{})
	pulumi.RegisterOutputType(JobDefinitionArrayOutput{})
	pulumi.RegisterOutputType(JobDefinitionMapOutput{})
}
