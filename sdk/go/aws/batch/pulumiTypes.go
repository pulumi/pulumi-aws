// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ComputeEnvironmentComputeResources struct {
	// The allocation strategy to use for the compute resource in case not enough instances of the best fitting instance type can be allocated. For valid values, refer to the [AWS documentation](https://docs.aws.amazon.com/batch/latest/APIReference/API_ComputeResource.html#Batch-Type-ComputeResource-allocationStrategy). Defaults to `BEST_FIT`. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
	// Integer of maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20%!((MISSING)`20`), then the Spot price must be below 20%!o(MISSING)f the current On-Demand price for that EC2 instance. If you leave this field empty, the default value is 100%!o(MISSING)f the On-Demand price. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	BidPercentage *int `pulumi:"bidPercentage"`
	// The desired number of EC2 vCPUS in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	DesiredVcpus *int `pulumi:"desiredVcpus"`
	// Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If Ec2Configuration isn't specified, the default is ECS_AL2. This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.
	Ec2Configurations []ComputeEnvironmentComputeResourcesEc2Configuration `pulumi:"ec2Configurations"`
	// The EC2 key pair that is used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	Ec2KeyPair *string `pulumi:"ec2KeyPair"`
	// The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified. (Deprecated, use `ec2Configuration` `imageIdOverride` instead)
	ImageId *string `pulumi:"imageId"`
	// The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	InstanceRole *string `pulumi:"instanceRole"`
	// A list of instance types that may be launched. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	InstanceTypes []string `pulumi:"instanceTypes"`
	// The launch template to use for your compute resources. See details below. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	LaunchTemplate *ComputeEnvironmentComputeResourcesLaunchTemplate `pulumi:"launchTemplate"`
	// The maximum number of EC2 vCPUs that an environment can reach.
	MaxVcpus int `pulumi:"maxVcpus"`
	// The minimum number of EC2 vCPUs that an environment should maintain. For `EC2` or `SPOT` compute environments, if the parameter is not explicitly defined, a `0` default value will be set. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	MinVcpus *int `pulumi:"minVcpus"`
	// The Amazon EC2 placement group to associate with your compute resources.
	PlacementGroup *string `pulumi:"placementGroup"`
	// A list of EC2 security group that are associated with instances launched in the compute environment. This parameter is required for Fargate compute environments.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment. This parameter is required for SPOT compute environments. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	SpotIamFleetRole *string `pulumi:"spotIamFleetRole"`
	// A list of VPC subnets into which the compute resources are launched.
	Subnets []string `pulumi:"subnets"`
	// Key-value pair tags to be applied to resources that are launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	Tags map[string]string `pulumi:"tags"`
	// The type of compute environment. Valid items are `EC2`, `SPOT`, `FARGATE` or `FARGATE_SPOT`.
	Type string `pulumi:"type"`
}

// ComputeEnvironmentComputeResourcesInput is an input type that accepts ComputeEnvironmentComputeResourcesArgs and ComputeEnvironmentComputeResourcesOutput values.
// You can construct a concrete instance of `ComputeEnvironmentComputeResourcesInput` via:
//
//	ComputeEnvironmentComputeResourcesArgs{...}
type ComputeEnvironmentComputeResourcesInput interface {
	pulumi.Input

	ToComputeEnvironmentComputeResourcesOutput() ComputeEnvironmentComputeResourcesOutput
	ToComputeEnvironmentComputeResourcesOutputWithContext(context.Context) ComputeEnvironmentComputeResourcesOutput
}

type ComputeEnvironmentComputeResourcesArgs struct {
	// The allocation strategy to use for the compute resource in case not enough instances of the best fitting instance type can be allocated. For valid values, refer to the [AWS documentation](https://docs.aws.amazon.com/batch/latest/APIReference/API_ComputeResource.html#Batch-Type-ComputeResource-allocationStrategy). Defaults to `BEST_FIT`. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	AllocationStrategy pulumi.StringPtrInput `pulumi:"allocationStrategy"`
	// Integer of maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20%!((MISSING)`20`), then the Spot price must be below 20%!o(MISSING)f the current On-Demand price for that EC2 instance. If you leave this field empty, the default value is 100%!o(MISSING)f the On-Demand price. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	BidPercentage pulumi.IntPtrInput `pulumi:"bidPercentage"`
	// The desired number of EC2 vCPUS in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	DesiredVcpus pulumi.IntPtrInput `pulumi:"desiredVcpus"`
	// Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If Ec2Configuration isn't specified, the default is ECS_AL2. This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.
	Ec2Configurations ComputeEnvironmentComputeResourcesEc2ConfigurationArrayInput `pulumi:"ec2Configurations"`
	// The EC2 key pair that is used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	Ec2KeyPair pulumi.StringPtrInput `pulumi:"ec2KeyPair"`
	// The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified. (Deprecated, use `ec2Configuration` `imageIdOverride` instead)
	ImageId pulumi.StringPtrInput `pulumi:"imageId"`
	// The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	InstanceRole pulumi.StringPtrInput `pulumi:"instanceRole"`
	// A list of instance types that may be launched. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	InstanceTypes pulumi.StringArrayInput `pulumi:"instanceTypes"`
	// The launch template to use for your compute resources. See details below. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	LaunchTemplate ComputeEnvironmentComputeResourcesLaunchTemplatePtrInput `pulumi:"launchTemplate"`
	// The maximum number of EC2 vCPUs that an environment can reach.
	MaxVcpus pulumi.IntInput `pulumi:"maxVcpus"`
	// The minimum number of EC2 vCPUs that an environment should maintain. For `EC2` or `SPOT` compute environments, if the parameter is not explicitly defined, a `0` default value will be set. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	MinVcpus pulumi.IntPtrInput `pulumi:"minVcpus"`
	// The Amazon EC2 placement group to associate with your compute resources.
	PlacementGroup pulumi.StringPtrInput `pulumi:"placementGroup"`
	// A list of EC2 security group that are associated with instances launched in the compute environment. This parameter is required for Fargate compute environments.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment. This parameter is required for SPOT compute environments. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	SpotIamFleetRole pulumi.StringPtrInput `pulumi:"spotIamFleetRole"`
	// A list of VPC subnets into which the compute resources are launched.
	Subnets pulumi.StringArrayInput `pulumi:"subnets"`
	// Key-value pair tags to be applied to resources that are launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of compute environment. Valid items are `EC2`, `SPOT`, `FARGATE` or `FARGATE_SPOT`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ComputeEnvironmentComputeResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeEnvironmentComputeResources)(nil)).Elem()
}

func (i ComputeEnvironmentComputeResourcesArgs) ToComputeEnvironmentComputeResourcesOutput() ComputeEnvironmentComputeResourcesOutput {
	return i.ToComputeEnvironmentComputeResourcesOutputWithContext(context.Background())
}

func (i ComputeEnvironmentComputeResourcesArgs) ToComputeEnvironmentComputeResourcesOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeEnvironmentComputeResourcesOutput)
}

func (i ComputeEnvironmentComputeResourcesArgs) ToComputeEnvironmentComputeResourcesPtrOutput() ComputeEnvironmentComputeResourcesPtrOutput {
	return i.ToComputeEnvironmentComputeResourcesPtrOutputWithContext(context.Background())
}

func (i ComputeEnvironmentComputeResourcesArgs) ToComputeEnvironmentComputeResourcesPtrOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeEnvironmentComputeResourcesOutput).ToComputeEnvironmentComputeResourcesPtrOutputWithContext(ctx)
}

// ComputeEnvironmentComputeResourcesPtrInput is an input type that accepts ComputeEnvironmentComputeResourcesArgs, ComputeEnvironmentComputeResourcesPtr and ComputeEnvironmentComputeResourcesPtrOutput values.
// You can construct a concrete instance of `ComputeEnvironmentComputeResourcesPtrInput` via:
//
//	        ComputeEnvironmentComputeResourcesArgs{...}
//
//	or:
//
//	        nil
type ComputeEnvironmentComputeResourcesPtrInput interface {
	pulumi.Input

	ToComputeEnvironmentComputeResourcesPtrOutput() ComputeEnvironmentComputeResourcesPtrOutput
	ToComputeEnvironmentComputeResourcesPtrOutputWithContext(context.Context) ComputeEnvironmentComputeResourcesPtrOutput
}

type computeEnvironmentComputeResourcesPtrType ComputeEnvironmentComputeResourcesArgs

func ComputeEnvironmentComputeResourcesPtr(v *ComputeEnvironmentComputeResourcesArgs) ComputeEnvironmentComputeResourcesPtrInput {
	return (*computeEnvironmentComputeResourcesPtrType)(v)
}

func (*computeEnvironmentComputeResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeEnvironmentComputeResources)(nil)).Elem()
}

func (i *computeEnvironmentComputeResourcesPtrType) ToComputeEnvironmentComputeResourcesPtrOutput() ComputeEnvironmentComputeResourcesPtrOutput {
	return i.ToComputeEnvironmentComputeResourcesPtrOutputWithContext(context.Background())
}

func (i *computeEnvironmentComputeResourcesPtrType) ToComputeEnvironmentComputeResourcesPtrOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeEnvironmentComputeResourcesPtrOutput)
}

type ComputeEnvironmentComputeResourcesOutput struct{ *pulumi.OutputState }

func (ComputeEnvironmentComputeResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeEnvironmentComputeResources)(nil)).Elem()
}

func (o ComputeEnvironmentComputeResourcesOutput) ToComputeEnvironmentComputeResourcesOutput() ComputeEnvironmentComputeResourcesOutput {
	return o
}

func (o ComputeEnvironmentComputeResourcesOutput) ToComputeEnvironmentComputeResourcesOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesOutput {
	return o
}

func (o ComputeEnvironmentComputeResourcesOutput) ToComputeEnvironmentComputeResourcesPtrOutput() ComputeEnvironmentComputeResourcesPtrOutput {
	return o.ToComputeEnvironmentComputeResourcesPtrOutputWithContext(context.Background())
}

func (o ComputeEnvironmentComputeResourcesOutput) ToComputeEnvironmentComputeResourcesPtrOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeEnvironmentComputeResources) *ComputeEnvironmentComputeResources {
		return &v
	}).(ComputeEnvironmentComputeResourcesPtrOutput)
}

// The allocation strategy to use for the compute resource in case not enough instances of the best fitting instance type can be allocated. For valid values, refer to the [AWS documentation](https://docs.aws.amazon.com/batch/latest/APIReference/API_ComputeResource.html#Batch-Type-ComputeResource-allocationStrategy). Defaults to `BEST_FIT`. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Integer of maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20%!((MISSING)`20`), then the Spot price must be below 20%!o(MISSING)f the current On-Demand price for that EC2 instance. If you leave this field empty, the default value is 100%!o(MISSING)f the On-Demand price. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesOutput) BidPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) *int { return v.BidPercentage }).(pulumi.IntPtrOutput)
}

// The desired number of EC2 vCPUS in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesOutput) DesiredVcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) *int { return v.DesiredVcpus }).(pulumi.IntPtrOutput)
}

// Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If Ec2Configuration isn't specified, the default is ECS_AL2. This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesOutput) Ec2Configurations() ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) []ComputeEnvironmentComputeResourcesEc2Configuration {
		return v.Ec2Configurations
	}).(ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput)
}

// The EC2 key pair that is used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesOutput) Ec2KeyPair() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) *string { return v.Ec2KeyPair }).(pulumi.StringPtrOutput)
}

// The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified. (Deprecated, use `ec2Configuration` `imageIdOverride` instead)
func (o ComputeEnvironmentComputeResourcesOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) *string { return v.ImageId }).(pulumi.StringPtrOutput)
}

// The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesOutput) InstanceRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) *string { return v.InstanceRole }).(pulumi.StringPtrOutput)
}

// A list of instance types that may be launched. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesOutput) InstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) []string { return v.InstanceTypes }).(pulumi.StringArrayOutput)
}

// The launch template to use for your compute resources. See details below. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesOutput) LaunchTemplate() ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) *ComputeEnvironmentComputeResourcesLaunchTemplate {
		return v.LaunchTemplate
	}).(ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput)
}

// The maximum number of EC2 vCPUs that an environment can reach.
func (o ComputeEnvironmentComputeResourcesOutput) MaxVcpus() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) int { return v.MaxVcpus }).(pulumi.IntOutput)
}

// The minimum number of EC2 vCPUs that an environment should maintain. For `EC2` or `SPOT` compute environments, if the parameter is not explicitly defined, a `0` default value will be set. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesOutput) MinVcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) *int { return v.MinVcpus }).(pulumi.IntPtrOutput)
}

// The Amazon EC2 placement group to associate with your compute resources.
func (o ComputeEnvironmentComputeResourcesOutput) PlacementGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) *string { return v.PlacementGroup }).(pulumi.StringPtrOutput)
}

// A list of EC2 security group that are associated with instances launched in the compute environment. This parameter is required for Fargate compute environments.
func (o ComputeEnvironmentComputeResourcesOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment. This parameter is required for SPOT compute environments. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesOutput) SpotIamFleetRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) *string { return v.SpotIamFleetRole }).(pulumi.StringPtrOutput)
}

// A list of VPC subnets into which the compute resources are launched.
func (o ComputeEnvironmentComputeResourcesOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

// Key-value pair tags to be applied to resources that are launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of compute environment. Valid items are `EC2`, `SPOT`, `FARGATE` or `FARGATE_SPOT`.
func (o ComputeEnvironmentComputeResourcesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResources) string { return v.Type }).(pulumi.StringOutput)
}

type ComputeEnvironmentComputeResourcesPtrOutput struct{ *pulumi.OutputState }

func (ComputeEnvironmentComputeResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeEnvironmentComputeResources)(nil)).Elem()
}

func (o ComputeEnvironmentComputeResourcesPtrOutput) ToComputeEnvironmentComputeResourcesPtrOutput() ComputeEnvironmentComputeResourcesPtrOutput {
	return o
}

func (o ComputeEnvironmentComputeResourcesPtrOutput) ToComputeEnvironmentComputeResourcesPtrOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesPtrOutput {
	return o
}

func (o ComputeEnvironmentComputeResourcesPtrOutput) Elem() ComputeEnvironmentComputeResourcesOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) ComputeEnvironmentComputeResources {
		if v != nil {
			return *v
		}
		var ret ComputeEnvironmentComputeResources
		return ret
	}).(ComputeEnvironmentComputeResourcesOutput)
}

// The allocation strategy to use for the compute resource in case not enough instances of the best fitting instance type can be allocated. For valid values, refer to the [AWS documentation](https://docs.aws.amazon.com/batch/latest/APIReference/API_ComputeResource.html#Batch-Type-ComputeResource-allocationStrategy). Defaults to `BEST_FIT`. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesPtrOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) *string {
		if v == nil {
			return nil
		}
		return v.AllocationStrategy
	}).(pulumi.StringPtrOutput)
}

// Integer of maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20%!((MISSING)`20`), then the Spot price must be below 20%!o(MISSING)f the current On-Demand price for that EC2 instance. If you leave this field empty, the default value is 100%!o(MISSING)f the On-Demand price. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesPtrOutput) BidPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) *int {
		if v == nil {
			return nil
		}
		return v.BidPercentage
	}).(pulumi.IntPtrOutput)
}

// The desired number of EC2 vCPUS in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesPtrOutput) DesiredVcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) *int {
		if v == nil {
			return nil
		}
		return v.DesiredVcpus
	}).(pulumi.IntPtrOutput)
}

// Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If Ec2Configuration isn't specified, the default is ECS_AL2. This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesPtrOutput) Ec2Configurations() ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) []ComputeEnvironmentComputeResourcesEc2Configuration {
		if v == nil {
			return nil
		}
		return v.Ec2Configurations
	}).(ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput)
}

// The EC2 key pair that is used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesPtrOutput) Ec2KeyPair() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) *string {
		if v == nil {
			return nil
		}
		return v.Ec2KeyPair
	}).(pulumi.StringPtrOutput)
}

// The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified. (Deprecated, use `ec2Configuration` `imageIdOverride` instead)
func (o ComputeEnvironmentComputeResourcesPtrOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) *string {
		if v == nil {
			return nil
		}
		return v.ImageId
	}).(pulumi.StringPtrOutput)
}

// The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesPtrOutput) InstanceRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) *string {
		if v == nil {
			return nil
		}
		return v.InstanceRole
	}).(pulumi.StringPtrOutput)
}

// A list of instance types that may be launched. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesPtrOutput) InstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) []string {
		if v == nil {
			return nil
		}
		return v.InstanceTypes
	}).(pulumi.StringArrayOutput)
}

// The launch template to use for your compute resources. See details below. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesPtrOutput) LaunchTemplate() ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) *ComputeEnvironmentComputeResourcesLaunchTemplate {
		if v == nil {
			return nil
		}
		return v.LaunchTemplate
	}).(ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput)
}

// The maximum number of EC2 vCPUs that an environment can reach.
func (o ComputeEnvironmentComputeResourcesPtrOutput) MaxVcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) *int {
		if v == nil {
			return nil
		}
		return &v.MaxVcpus
	}).(pulumi.IntPtrOutput)
}

// The minimum number of EC2 vCPUs that an environment should maintain. For `EC2` or `SPOT` compute environments, if the parameter is not explicitly defined, a `0` default value will be set. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesPtrOutput) MinVcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) *int {
		if v == nil {
			return nil
		}
		return v.MinVcpus
	}).(pulumi.IntPtrOutput)
}

// The Amazon EC2 placement group to associate with your compute resources.
func (o ComputeEnvironmentComputeResourcesPtrOutput) PlacementGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) *string {
		if v == nil {
			return nil
		}
		return v.PlacementGroup
	}).(pulumi.StringPtrOutput)
}

// A list of EC2 security group that are associated with instances launched in the compute environment. This parameter is required for Fargate compute environments.
func (o ComputeEnvironmentComputeResourcesPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment. This parameter is required for SPOT compute environments. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesPtrOutput) SpotIamFleetRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) *string {
		if v == nil {
			return nil
		}
		return v.SpotIamFleetRole
	}).(pulumi.StringPtrOutput)
}

// A list of VPC subnets into which the compute resources are launched.
func (o ComputeEnvironmentComputeResourcesPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

// Key-value pair tags to be applied to resources that are launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
func (o ComputeEnvironmentComputeResourcesPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The type of compute environment. Valid items are `EC2`, `SPOT`, `FARGATE` or `FARGATE_SPOT`.
func (o ComputeEnvironmentComputeResourcesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResources) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ComputeEnvironmentComputeResourcesEc2Configuration struct {
	// The AMI ID used for instances launched in the compute environment that match the image type. This setting overrides the `imageId` argument in the `computeResources` block.
	ImageIdOverride *string `pulumi:"imageIdOverride"`
	// The image type to match with the instance type to select an AMI. If the `imageIdOverride` parameter isn't specified, then a recent [Amazon ECS-optimized Amazon Linux 2 AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#al2ami) (`ECS_AL2`) is used.
	ImageType *string `pulumi:"imageType"`
}

// ComputeEnvironmentComputeResourcesEc2ConfigurationInput is an input type that accepts ComputeEnvironmentComputeResourcesEc2ConfigurationArgs and ComputeEnvironmentComputeResourcesEc2ConfigurationOutput values.
// You can construct a concrete instance of `ComputeEnvironmentComputeResourcesEc2ConfigurationInput` via:
//
//	ComputeEnvironmentComputeResourcesEc2ConfigurationArgs{...}
type ComputeEnvironmentComputeResourcesEc2ConfigurationInput interface {
	pulumi.Input

	ToComputeEnvironmentComputeResourcesEc2ConfigurationOutput() ComputeEnvironmentComputeResourcesEc2ConfigurationOutput
	ToComputeEnvironmentComputeResourcesEc2ConfigurationOutputWithContext(context.Context) ComputeEnvironmentComputeResourcesEc2ConfigurationOutput
}

type ComputeEnvironmentComputeResourcesEc2ConfigurationArgs struct {
	// The AMI ID used for instances launched in the compute environment that match the image type. This setting overrides the `imageId` argument in the `computeResources` block.
	ImageIdOverride pulumi.StringPtrInput `pulumi:"imageIdOverride"`
	// The image type to match with the instance type to select an AMI. If the `imageIdOverride` parameter isn't specified, then a recent [Amazon ECS-optimized Amazon Linux 2 AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#al2ami) (`ECS_AL2`) is used.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
}

func (ComputeEnvironmentComputeResourcesEc2ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeEnvironmentComputeResourcesEc2Configuration)(nil)).Elem()
}

func (i ComputeEnvironmentComputeResourcesEc2ConfigurationArgs) ToComputeEnvironmentComputeResourcesEc2ConfigurationOutput() ComputeEnvironmentComputeResourcesEc2ConfigurationOutput {
	return i.ToComputeEnvironmentComputeResourcesEc2ConfigurationOutputWithContext(context.Background())
}

func (i ComputeEnvironmentComputeResourcesEc2ConfigurationArgs) ToComputeEnvironmentComputeResourcesEc2ConfigurationOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesEc2ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeEnvironmentComputeResourcesEc2ConfigurationOutput)
}

// ComputeEnvironmentComputeResourcesEc2ConfigurationArrayInput is an input type that accepts ComputeEnvironmentComputeResourcesEc2ConfigurationArray and ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput values.
// You can construct a concrete instance of `ComputeEnvironmentComputeResourcesEc2ConfigurationArrayInput` via:
//
//	ComputeEnvironmentComputeResourcesEc2ConfigurationArray{ ComputeEnvironmentComputeResourcesEc2ConfigurationArgs{...} }
type ComputeEnvironmentComputeResourcesEc2ConfigurationArrayInput interface {
	pulumi.Input

	ToComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput() ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput
	ToComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutputWithContext(context.Context) ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput
}

type ComputeEnvironmentComputeResourcesEc2ConfigurationArray []ComputeEnvironmentComputeResourcesEc2ConfigurationInput

func (ComputeEnvironmentComputeResourcesEc2ConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeEnvironmentComputeResourcesEc2Configuration)(nil)).Elem()
}

func (i ComputeEnvironmentComputeResourcesEc2ConfigurationArray) ToComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput() ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput {
	return i.ToComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutputWithContext(context.Background())
}

func (i ComputeEnvironmentComputeResourcesEc2ConfigurationArray) ToComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput)
}

type ComputeEnvironmentComputeResourcesEc2ConfigurationOutput struct{ *pulumi.OutputState }

func (ComputeEnvironmentComputeResourcesEc2ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeEnvironmentComputeResourcesEc2Configuration)(nil)).Elem()
}

func (o ComputeEnvironmentComputeResourcesEc2ConfigurationOutput) ToComputeEnvironmentComputeResourcesEc2ConfigurationOutput() ComputeEnvironmentComputeResourcesEc2ConfigurationOutput {
	return o
}

func (o ComputeEnvironmentComputeResourcesEc2ConfigurationOutput) ToComputeEnvironmentComputeResourcesEc2ConfigurationOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesEc2ConfigurationOutput {
	return o
}

// The AMI ID used for instances launched in the compute environment that match the image type. This setting overrides the `imageId` argument in the `computeResources` block.
func (o ComputeEnvironmentComputeResourcesEc2ConfigurationOutput) ImageIdOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResourcesEc2Configuration) *string { return v.ImageIdOverride }).(pulumi.StringPtrOutput)
}

// The image type to match with the instance type to select an AMI. If the `imageIdOverride` parameter isn't specified, then a recent [Amazon ECS-optimized Amazon Linux 2 AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#al2ami) (`ECS_AL2`) is used.
func (o ComputeEnvironmentComputeResourcesEc2ConfigurationOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResourcesEc2Configuration) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

type ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeEnvironmentComputeResourcesEc2Configuration)(nil)).Elem()
}

func (o ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput) ToComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput() ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput {
	return o
}

func (o ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput) ToComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput {
	return o
}

func (o ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput) Index(i pulumi.IntInput) ComputeEnvironmentComputeResourcesEc2ConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeEnvironmentComputeResourcesEc2Configuration {
		return vs[0].([]ComputeEnvironmentComputeResourcesEc2Configuration)[vs[1].(int)]
	}).(ComputeEnvironmentComputeResourcesEc2ConfigurationOutput)
}

type ComputeEnvironmentComputeResourcesLaunchTemplate struct {
	// ID of the launch template. You must specify either the launch template ID or launch template name in the request, but not both.
	LaunchTemplateId *string `pulumi:"launchTemplateId"`
	// Name of the launch template.
	LaunchTemplateName *string `pulumi:"launchTemplateName"`
	// The version number of the launch template. Default: The default version of the launch template.
	Version *string `pulumi:"version"`
}

// ComputeEnvironmentComputeResourcesLaunchTemplateInput is an input type that accepts ComputeEnvironmentComputeResourcesLaunchTemplateArgs and ComputeEnvironmentComputeResourcesLaunchTemplateOutput values.
// You can construct a concrete instance of `ComputeEnvironmentComputeResourcesLaunchTemplateInput` via:
//
//	ComputeEnvironmentComputeResourcesLaunchTemplateArgs{...}
type ComputeEnvironmentComputeResourcesLaunchTemplateInput interface {
	pulumi.Input

	ToComputeEnvironmentComputeResourcesLaunchTemplateOutput() ComputeEnvironmentComputeResourcesLaunchTemplateOutput
	ToComputeEnvironmentComputeResourcesLaunchTemplateOutputWithContext(context.Context) ComputeEnvironmentComputeResourcesLaunchTemplateOutput
}

type ComputeEnvironmentComputeResourcesLaunchTemplateArgs struct {
	// ID of the launch template. You must specify either the launch template ID or launch template name in the request, but not both.
	LaunchTemplateId pulumi.StringPtrInput `pulumi:"launchTemplateId"`
	// Name of the launch template.
	LaunchTemplateName pulumi.StringPtrInput `pulumi:"launchTemplateName"`
	// The version number of the launch template. Default: The default version of the launch template.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ComputeEnvironmentComputeResourcesLaunchTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeEnvironmentComputeResourcesLaunchTemplate)(nil)).Elem()
}

func (i ComputeEnvironmentComputeResourcesLaunchTemplateArgs) ToComputeEnvironmentComputeResourcesLaunchTemplateOutput() ComputeEnvironmentComputeResourcesLaunchTemplateOutput {
	return i.ToComputeEnvironmentComputeResourcesLaunchTemplateOutputWithContext(context.Background())
}

func (i ComputeEnvironmentComputeResourcesLaunchTemplateArgs) ToComputeEnvironmentComputeResourcesLaunchTemplateOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesLaunchTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeEnvironmentComputeResourcesLaunchTemplateOutput)
}

func (i ComputeEnvironmentComputeResourcesLaunchTemplateArgs) ToComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput() ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput {
	return i.ToComputeEnvironmentComputeResourcesLaunchTemplatePtrOutputWithContext(context.Background())
}

func (i ComputeEnvironmentComputeResourcesLaunchTemplateArgs) ToComputeEnvironmentComputeResourcesLaunchTemplatePtrOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeEnvironmentComputeResourcesLaunchTemplateOutput).ToComputeEnvironmentComputeResourcesLaunchTemplatePtrOutputWithContext(ctx)
}

// ComputeEnvironmentComputeResourcesLaunchTemplatePtrInput is an input type that accepts ComputeEnvironmentComputeResourcesLaunchTemplateArgs, ComputeEnvironmentComputeResourcesLaunchTemplatePtr and ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput values.
// You can construct a concrete instance of `ComputeEnvironmentComputeResourcesLaunchTemplatePtrInput` via:
//
//	        ComputeEnvironmentComputeResourcesLaunchTemplateArgs{...}
//
//	or:
//
//	        nil
type ComputeEnvironmentComputeResourcesLaunchTemplatePtrInput interface {
	pulumi.Input

	ToComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput() ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput
	ToComputeEnvironmentComputeResourcesLaunchTemplatePtrOutputWithContext(context.Context) ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput
}

type computeEnvironmentComputeResourcesLaunchTemplatePtrType ComputeEnvironmentComputeResourcesLaunchTemplateArgs

func ComputeEnvironmentComputeResourcesLaunchTemplatePtr(v *ComputeEnvironmentComputeResourcesLaunchTemplateArgs) ComputeEnvironmentComputeResourcesLaunchTemplatePtrInput {
	return (*computeEnvironmentComputeResourcesLaunchTemplatePtrType)(v)
}

func (*computeEnvironmentComputeResourcesLaunchTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeEnvironmentComputeResourcesLaunchTemplate)(nil)).Elem()
}

func (i *computeEnvironmentComputeResourcesLaunchTemplatePtrType) ToComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput() ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput {
	return i.ToComputeEnvironmentComputeResourcesLaunchTemplatePtrOutputWithContext(context.Background())
}

func (i *computeEnvironmentComputeResourcesLaunchTemplatePtrType) ToComputeEnvironmentComputeResourcesLaunchTemplatePtrOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput)
}

type ComputeEnvironmentComputeResourcesLaunchTemplateOutput struct{ *pulumi.OutputState }

func (ComputeEnvironmentComputeResourcesLaunchTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeEnvironmentComputeResourcesLaunchTemplate)(nil)).Elem()
}

func (o ComputeEnvironmentComputeResourcesLaunchTemplateOutput) ToComputeEnvironmentComputeResourcesLaunchTemplateOutput() ComputeEnvironmentComputeResourcesLaunchTemplateOutput {
	return o
}

func (o ComputeEnvironmentComputeResourcesLaunchTemplateOutput) ToComputeEnvironmentComputeResourcesLaunchTemplateOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesLaunchTemplateOutput {
	return o
}

func (o ComputeEnvironmentComputeResourcesLaunchTemplateOutput) ToComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput() ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput {
	return o.ToComputeEnvironmentComputeResourcesLaunchTemplatePtrOutputWithContext(context.Background())
}

func (o ComputeEnvironmentComputeResourcesLaunchTemplateOutput) ToComputeEnvironmentComputeResourcesLaunchTemplatePtrOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeEnvironmentComputeResourcesLaunchTemplate) *ComputeEnvironmentComputeResourcesLaunchTemplate {
		return &v
	}).(ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput)
}

// ID of the launch template. You must specify either the launch template ID or launch template name in the request, but not both.
func (o ComputeEnvironmentComputeResourcesLaunchTemplateOutput) LaunchTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResourcesLaunchTemplate) *string { return v.LaunchTemplateId }).(pulumi.StringPtrOutput)
}

// Name of the launch template.
func (o ComputeEnvironmentComputeResourcesLaunchTemplateOutput) LaunchTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResourcesLaunchTemplate) *string { return v.LaunchTemplateName }).(pulumi.StringPtrOutput)
}

// The version number of the launch template. Default: The default version of the launch template.
func (o ComputeEnvironmentComputeResourcesLaunchTemplateOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeEnvironmentComputeResourcesLaunchTemplate) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput struct{ *pulumi.OutputState }

func (ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeEnvironmentComputeResourcesLaunchTemplate)(nil)).Elem()
}

func (o ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput) ToComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput() ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput {
	return o
}

func (o ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput) ToComputeEnvironmentComputeResourcesLaunchTemplatePtrOutputWithContext(ctx context.Context) ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput {
	return o
}

func (o ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput) Elem() ComputeEnvironmentComputeResourcesLaunchTemplateOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResourcesLaunchTemplate) ComputeEnvironmentComputeResourcesLaunchTemplate {
		if v != nil {
			return *v
		}
		var ret ComputeEnvironmentComputeResourcesLaunchTemplate
		return ret
	}).(ComputeEnvironmentComputeResourcesLaunchTemplateOutput)
}

// ID of the launch template. You must specify either the launch template ID or launch template name in the request, but not both.
func (o ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput) LaunchTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResourcesLaunchTemplate) *string {
		if v == nil {
			return nil
		}
		return v.LaunchTemplateId
	}).(pulumi.StringPtrOutput)
}

// Name of the launch template.
func (o ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput) LaunchTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResourcesLaunchTemplate) *string {
		if v == nil {
			return nil
		}
		return v.LaunchTemplateName
	}).(pulumi.StringPtrOutput)
}

// The version number of the launch template. Default: The default version of the launch template.
func (o ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentComputeResourcesLaunchTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type ComputeEnvironmentEksConfiguration struct {
	// The Amazon Resource Name (ARN) of the Amazon EKS cluster.
	EksClusterArn string `pulumi:"eksClusterArn"`
	// The namespace of the Amazon EKS cluster. AWS Batch manages pods in this namespace.
	KubernetesNamespace string `pulumi:"kubernetesNamespace"`
}

// ComputeEnvironmentEksConfigurationInput is an input type that accepts ComputeEnvironmentEksConfigurationArgs and ComputeEnvironmentEksConfigurationOutput values.
// You can construct a concrete instance of `ComputeEnvironmentEksConfigurationInput` via:
//
//	ComputeEnvironmentEksConfigurationArgs{...}
type ComputeEnvironmentEksConfigurationInput interface {
	pulumi.Input

	ToComputeEnvironmentEksConfigurationOutput() ComputeEnvironmentEksConfigurationOutput
	ToComputeEnvironmentEksConfigurationOutputWithContext(context.Context) ComputeEnvironmentEksConfigurationOutput
}

type ComputeEnvironmentEksConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the Amazon EKS cluster.
	EksClusterArn pulumi.StringInput `pulumi:"eksClusterArn"`
	// The namespace of the Amazon EKS cluster. AWS Batch manages pods in this namespace.
	KubernetesNamespace pulumi.StringInput `pulumi:"kubernetesNamespace"`
}

func (ComputeEnvironmentEksConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeEnvironmentEksConfiguration)(nil)).Elem()
}

func (i ComputeEnvironmentEksConfigurationArgs) ToComputeEnvironmentEksConfigurationOutput() ComputeEnvironmentEksConfigurationOutput {
	return i.ToComputeEnvironmentEksConfigurationOutputWithContext(context.Background())
}

func (i ComputeEnvironmentEksConfigurationArgs) ToComputeEnvironmentEksConfigurationOutputWithContext(ctx context.Context) ComputeEnvironmentEksConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeEnvironmentEksConfigurationOutput)
}

func (i ComputeEnvironmentEksConfigurationArgs) ToComputeEnvironmentEksConfigurationPtrOutput() ComputeEnvironmentEksConfigurationPtrOutput {
	return i.ToComputeEnvironmentEksConfigurationPtrOutputWithContext(context.Background())
}

func (i ComputeEnvironmentEksConfigurationArgs) ToComputeEnvironmentEksConfigurationPtrOutputWithContext(ctx context.Context) ComputeEnvironmentEksConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeEnvironmentEksConfigurationOutput).ToComputeEnvironmentEksConfigurationPtrOutputWithContext(ctx)
}

// ComputeEnvironmentEksConfigurationPtrInput is an input type that accepts ComputeEnvironmentEksConfigurationArgs, ComputeEnvironmentEksConfigurationPtr and ComputeEnvironmentEksConfigurationPtrOutput values.
// You can construct a concrete instance of `ComputeEnvironmentEksConfigurationPtrInput` via:
//
//	        ComputeEnvironmentEksConfigurationArgs{...}
//
//	or:
//
//	        nil
type ComputeEnvironmentEksConfigurationPtrInput interface {
	pulumi.Input

	ToComputeEnvironmentEksConfigurationPtrOutput() ComputeEnvironmentEksConfigurationPtrOutput
	ToComputeEnvironmentEksConfigurationPtrOutputWithContext(context.Context) ComputeEnvironmentEksConfigurationPtrOutput
}

type computeEnvironmentEksConfigurationPtrType ComputeEnvironmentEksConfigurationArgs

func ComputeEnvironmentEksConfigurationPtr(v *ComputeEnvironmentEksConfigurationArgs) ComputeEnvironmentEksConfigurationPtrInput {
	return (*computeEnvironmentEksConfigurationPtrType)(v)
}

func (*computeEnvironmentEksConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeEnvironmentEksConfiguration)(nil)).Elem()
}

func (i *computeEnvironmentEksConfigurationPtrType) ToComputeEnvironmentEksConfigurationPtrOutput() ComputeEnvironmentEksConfigurationPtrOutput {
	return i.ToComputeEnvironmentEksConfigurationPtrOutputWithContext(context.Background())
}

func (i *computeEnvironmentEksConfigurationPtrType) ToComputeEnvironmentEksConfigurationPtrOutputWithContext(ctx context.Context) ComputeEnvironmentEksConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeEnvironmentEksConfigurationPtrOutput)
}

type ComputeEnvironmentEksConfigurationOutput struct{ *pulumi.OutputState }

func (ComputeEnvironmentEksConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeEnvironmentEksConfiguration)(nil)).Elem()
}

func (o ComputeEnvironmentEksConfigurationOutput) ToComputeEnvironmentEksConfigurationOutput() ComputeEnvironmentEksConfigurationOutput {
	return o
}

func (o ComputeEnvironmentEksConfigurationOutput) ToComputeEnvironmentEksConfigurationOutputWithContext(ctx context.Context) ComputeEnvironmentEksConfigurationOutput {
	return o
}

func (o ComputeEnvironmentEksConfigurationOutput) ToComputeEnvironmentEksConfigurationPtrOutput() ComputeEnvironmentEksConfigurationPtrOutput {
	return o.ToComputeEnvironmentEksConfigurationPtrOutputWithContext(context.Background())
}

func (o ComputeEnvironmentEksConfigurationOutput) ToComputeEnvironmentEksConfigurationPtrOutputWithContext(ctx context.Context) ComputeEnvironmentEksConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeEnvironmentEksConfiguration) *ComputeEnvironmentEksConfiguration {
		return &v
	}).(ComputeEnvironmentEksConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon EKS cluster.
func (o ComputeEnvironmentEksConfigurationOutput) EksClusterArn() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeEnvironmentEksConfiguration) string { return v.EksClusterArn }).(pulumi.StringOutput)
}

// The namespace of the Amazon EKS cluster. AWS Batch manages pods in this namespace.
func (o ComputeEnvironmentEksConfigurationOutput) KubernetesNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeEnvironmentEksConfiguration) string { return v.KubernetesNamespace }).(pulumi.StringOutput)
}

type ComputeEnvironmentEksConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ComputeEnvironmentEksConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeEnvironmentEksConfiguration)(nil)).Elem()
}

func (o ComputeEnvironmentEksConfigurationPtrOutput) ToComputeEnvironmentEksConfigurationPtrOutput() ComputeEnvironmentEksConfigurationPtrOutput {
	return o
}

func (o ComputeEnvironmentEksConfigurationPtrOutput) ToComputeEnvironmentEksConfigurationPtrOutputWithContext(ctx context.Context) ComputeEnvironmentEksConfigurationPtrOutput {
	return o
}

func (o ComputeEnvironmentEksConfigurationPtrOutput) Elem() ComputeEnvironmentEksConfigurationOutput {
	return o.ApplyT(func(v *ComputeEnvironmentEksConfiguration) ComputeEnvironmentEksConfiguration {
		if v != nil {
			return *v
		}
		var ret ComputeEnvironmentEksConfiguration
		return ret
	}).(ComputeEnvironmentEksConfigurationOutput)
}

// The Amazon Resource Name (ARN) of the Amazon EKS cluster.
func (o ComputeEnvironmentEksConfigurationPtrOutput) EksClusterArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentEksConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.EksClusterArn
	}).(pulumi.StringPtrOutput)
}

// The namespace of the Amazon EKS cluster. AWS Batch manages pods in this namespace.
func (o ComputeEnvironmentEksConfigurationPtrOutput) KubernetesNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentEksConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.KubernetesNamespace
	}).(pulumi.StringPtrOutput)
}

type ComputeEnvironmentUpdatePolicy struct {
	// Specifies the job timeout (in minutes) when the compute environment infrastructure is updated.
	JobExecutionTimeoutMinutes int `pulumi:"jobExecutionTimeoutMinutes"`
	// Specifies whether jobs are automatically terminated when the computer environment infrastructure is updated.
	TerminateJobsOnUpdate bool `pulumi:"terminateJobsOnUpdate"`
}

// ComputeEnvironmentUpdatePolicyInput is an input type that accepts ComputeEnvironmentUpdatePolicyArgs and ComputeEnvironmentUpdatePolicyOutput values.
// You can construct a concrete instance of `ComputeEnvironmentUpdatePolicyInput` via:
//
//	ComputeEnvironmentUpdatePolicyArgs{...}
type ComputeEnvironmentUpdatePolicyInput interface {
	pulumi.Input

	ToComputeEnvironmentUpdatePolicyOutput() ComputeEnvironmentUpdatePolicyOutput
	ToComputeEnvironmentUpdatePolicyOutputWithContext(context.Context) ComputeEnvironmentUpdatePolicyOutput
}

type ComputeEnvironmentUpdatePolicyArgs struct {
	// Specifies the job timeout (in minutes) when the compute environment infrastructure is updated.
	JobExecutionTimeoutMinutes pulumi.IntInput `pulumi:"jobExecutionTimeoutMinutes"`
	// Specifies whether jobs are automatically terminated when the computer environment infrastructure is updated.
	TerminateJobsOnUpdate pulumi.BoolInput `pulumi:"terminateJobsOnUpdate"`
}

func (ComputeEnvironmentUpdatePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeEnvironmentUpdatePolicy)(nil)).Elem()
}

func (i ComputeEnvironmentUpdatePolicyArgs) ToComputeEnvironmentUpdatePolicyOutput() ComputeEnvironmentUpdatePolicyOutput {
	return i.ToComputeEnvironmentUpdatePolicyOutputWithContext(context.Background())
}

func (i ComputeEnvironmentUpdatePolicyArgs) ToComputeEnvironmentUpdatePolicyOutputWithContext(ctx context.Context) ComputeEnvironmentUpdatePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeEnvironmentUpdatePolicyOutput)
}

func (i ComputeEnvironmentUpdatePolicyArgs) ToComputeEnvironmentUpdatePolicyPtrOutput() ComputeEnvironmentUpdatePolicyPtrOutput {
	return i.ToComputeEnvironmentUpdatePolicyPtrOutputWithContext(context.Background())
}

func (i ComputeEnvironmentUpdatePolicyArgs) ToComputeEnvironmentUpdatePolicyPtrOutputWithContext(ctx context.Context) ComputeEnvironmentUpdatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeEnvironmentUpdatePolicyOutput).ToComputeEnvironmentUpdatePolicyPtrOutputWithContext(ctx)
}

// ComputeEnvironmentUpdatePolicyPtrInput is an input type that accepts ComputeEnvironmentUpdatePolicyArgs, ComputeEnvironmentUpdatePolicyPtr and ComputeEnvironmentUpdatePolicyPtrOutput values.
// You can construct a concrete instance of `ComputeEnvironmentUpdatePolicyPtrInput` via:
//
//	        ComputeEnvironmentUpdatePolicyArgs{...}
//
//	or:
//
//	        nil
type ComputeEnvironmentUpdatePolicyPtrInput interface {
	pulumi.Input

	ToComputeEnvironmentUpdatePolicyPtrOutput() ComputeEnvironmentUpdatePolicyPtrOutput
	ToComputeEnvironmentUpdatePolicyPtrOutputWithContext(context.Context) ComputeEnvironmentUpdatePolicyPtrOutput
}

type computeEnvironmentUpdatePolicyPtrType ComputeEnvironmentUpdatePolicyArgs

func ComputeEnvironmentUpdatePolicyPtr(v *ComputeEnvironmentUpdatePolicyArgs) ComputeEnvironmentUpdatePolicyPtrInput {
	return (*computeEnvironmentUpdatePolicyPtrType)(v)
}

func (*computeEnvironmentUpdatePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeEnvironmentUpdatePolicy)(nil)).Elem()
}

func (i *computeEnvironmentUpdatePolicyPtrType) ToComputeEnvironmentUpdatePolicyPtrOutput() ComputeEnvironmentUpdatePolicyPtrOutput {
	return i.ToComputeEnvironmentUpdatePolicyPtrOutputWithContext(context.Background())
}

func (i *computeEnvironmentUpdatePolicyPtrType) ToComputeEnvironmentUpdatePolicyPtrOutputWithContext(ctx context.Context) ComputeEnvironmentUpdatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeEnvironmentUpdatePolicyPtrOutput)
}

type ComputeEnvironmentUpdatePolicyOutput struct{ *pulumi.OutputState }

func (ComputeEnvironmentUpdatePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeEnvironmentUpdatePolicy)(nil)).Elem()
}

func (o ComputeEnvironmentUpdatePolicyOutput) ToComputeEnvironmentUpdatePolicyOutput() ComputeEnvironmentUpdatePolicyOutput {
	return o
}

func (o ComputeEnvironmentUpdatePolicyOutput) ToComputeEnvironmentUpdatePolicyOutputWithContext(ctx context.Context) ComputeEnvironmentUpdatePolicyOutput {
	return o
}

func (o ComputeEnvironmentUpdatePolicyOutput) ToComputeEnvironmentUpdatePolicyPtrOutput() ComputeEnvironmentUpdatePolicyPtrOutput {
	return o.ToComputeEnvironmentUpdatePolicyPtrOutputWithContext(context.Background())
}

func (o ComputeEnvironmentUpdatePolicyOutput) ToComputeEnvironmentUpdatePolicyPtrOutputWithContext(ctx context.Context) ComputeEnvironmentUpdatePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeEnvironmentUpdatePolicy) *ComputeEnvironmentUpdatePolicy {
		return &v
	}).(ComputeEnvironmentUpdatePolicyPtrOutput)
}

// Specifies the job timeout (in minutes) when the compute environment infrastructure is updated.
func (o ComputeEnvironmentUpdatePolicyOutput) JobExecutionTimeoutMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeEnvironmentUpdatePolicy) int { return v.JobExecutionTimeoutMinutes }).(pulumi.IntOutput)
}

// Specifies whether jobs are automatically terminated when the computer environment infrastructure is updated.
func (o ComputeEnvironmentUpdatePolicyOutput) TerminateJobsOnUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v ComputeEnvironmentUpdatePolicy) bool { return v.TerminateJobsOnUpdate }).(pulumi.BoolOutput)
}

type ComputeEnvironmentUpdatePolicyPtrOutput struct{ *pulumi.OutputState }

func (ComputeEnvironmentUpdatePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeEnvironmentUpdatePolicy)(nil)).Elem()
}

func (o ComputeEnvironmentUpdatePolicyPtrOutput) ToComputeEnvironmentUpdatePolicyPtrOutput() ComputeEnvironmentUpdatePolicyPtrOutput {
	return o
}

func (o ComputeEnvironmentUpdatePolicyPtrOutput) ToComputeEnvironmentUpdatePolicyPtrOutputWithContext(ctx context.Context) ComputeEnvironmentUpdatePolicyPtrOutput {
	return o
}

func (o ComputeEnvironmentUpdatePolicyPtrOutput) Elem() ComputeEnvironmentUpdatePolicyOutput {
	return o.ApplyT(func(v *ComputeEnvironmentUpdatePolicy) ComputeEnvironmentUpdatePolicy {
		if v != nil {
			return *v
		}
		var ret ComputeEnvironmentUpdatePolicy
		return ret
	}).(ComputeEnvironmentUpdatePolicyOutput)
}

// Specifies the job timeout (in minutes) when the compute environment infrastructure is updated.
func (o ComputeEnvironmentUpdatePolicyPtrOutput) JobExecutionTimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentUpdatePolicy) *int {
		if v == nil {
			return nil
		}
		return &v.JobExecutionTimeoutMinutes
	}).(pulumi.IntPtrOutput)
}

// Specifies whether jobs are automatically terminated when the computer environment infrastructure is updated.
func (o ComputeEnvironmentUpdatePolicyPtrOutput) TerminateJobsOnUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeEnvironmentUpdatePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.TerminateJobsOnUpdate
	}).(pulumi.BoolPtrOutput)
}

type JobDefinitionEksProperties struct {
	// The properties for the Kubernetes pod resources of a job. See `podProperties` below.
	PodProperties JobDefinitionEksPropertiesPodProperties `pulumi:"podProperties"`
}

// JobDefinitionEksPropertiesInput is an input type that accepts JobDefinitionEksPropertiesArgs and JobDefinitionEksPropertiesOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesInput` via:
//
//	JobDefinitionEksPropertiesArgs{...}
type JobDefinitionEksPropertiesInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesOutput() JobDefinitionEksPropertiesOutput
	ToJobDefinitionEksPropertiesOutputWithContext(context.Context) JobDefinitionEksPropertiesOutput
}

type JobDefinitionEksPropertiesArgs struct {
	// The properties for the Kubernetes pod resources of a job. See `podProperties` below.
	PodProperties JobDefinitionEksPropertiesPodPropertiesInput `pulumi:"podProperties"`
}

func (JobDefinitionEksPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksProperties)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesArgs) ToJobDefinitionEksPropertiesOutput() JobDefinitionEksPropertiesOutput {
	return i.ToJobDefinitionEksPropertiesOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesArgs) ToJobDefinitionEksPropertiesOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesOutput)
}

func (i JobDefinitionEksPropertiesArgs) ToJobDefinitionEksPropertiesPtrOutput() JobDefinitionEksPropertiesPtrOutput {
	return i.ToJobDefinitionEksPropertiesPtrOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesArgs) ToJobDefinitionEksPropertiesPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesOutput).ToJobDefinitionEksPropertiesPtrOutputWithContext(ctx)
}

// JobDefinitionEksPropertiesPtrInput is an input type that accepts JobDefinitionEksPropertiesArgs, JobDefinitionEksPropertiesPtr and JobDefinitionEksPropertiesPtrOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPtrInput` via:
//
//	        JobDefinitionEksPropertiesArgs{...}
//
//	or:
//
//	        nil
type JobDefinitionEksPropertiesPtrInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPtrOutput() JobDefinitionEksPropertiesPtrOutput
	ToJobDefinitionEksPropertiesPtrOutputWithContext(context.Context) JobDefinitionEksPropertiesPtrOutput
}

type jobDefinitionEksPropertiesPtrType JobDefinitionEksPropertiesArgs

func JobDefinitionEksPropertiesPtr(v *JobDefinitionEksPropertiesArgs) JobDefinitionEksPropertiesPtrInput {
	return (*jobDefinitionEksPropertiesPtrType)(v)
}

func (*jobDefinitionEksPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksProperties)(nil)).Elem()
}

func (i *jobDefinitionEksPropertiesPtrType) ToJobDefinitionEksPropertiesPtrOutput() JobDefinitionEksPropertiesPtrOutput {
	return i.ToJobDefinitionEksPropertiesPtrOutputWithContext(context.Background())
}

func (i *jobDefinitionEksPropertiesPtrType) ToJobDefinitionEksPropertiesPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPtrOutput)
}

type JobDefinitionEksPropertiesOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksProperties)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesOutput) ToJobDefinitionEksPropertiesOutput() JobDefinitionEksPropertiesOutput {
	return o
}

func (o JobDefinitionEksPropertiesOutput) ToJobDefinitionEksPropertiesOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesOutput {
	return o
}

func (o JobDefinitionEksPropertiesOutput) ToJobDefinitionEksPropertiesPtrOutput() JobDefinitionEksPropertiesPtrOutput {
	return o.ToJobDefinitionEksPropertiesPtrOutputWithContext(context.Background())
}

func (o JobDefinitionEksPropertiesOutput) ToJobDefinitionEksPropertiesPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDefinitionEksProperties) *JobDefinitionEksProperties {
		return &v
	}).(JobDefinitionEksPropertiesPtrOutput)
}

// The properties for the Kubernetes pod resources of a job. See `podProperties` below.
func (o JobDefinitionEksPropertiesOutput) PodProperties() JobDefinitionEksPropertiesPodPropertiesOutput {
	return o.ApplyT(func(v JobDefinitionEksProperties) JobDefinitionEksPropertiesPodProperties { return v.PodProperties }).(JobDefinitionEksPropertiesPodPropertiesOutput)
}

type JobDefinitionEksPropertiesPtrOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksProperties)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPtrOutput) ToJobDefinitionEksPropertiesPtrOutput() JobDefinitionEksPropertiesPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPtrOutput) ToJobDefinitionEksPropertiesPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPtrOutput) Elem() JobDefinitionEksPropertiesOutput {
	return o.ApplyT(func(v *JobDefinitionEksProperties) JobDefinitionEksProperties {
		if v != nil {
			return *v
		}
		var ret JobDefinitionEksProperties
		return ret
	}).(JobDefinitionEksPropertiesOutput)
}

// The properties for the Kubernetes pod resources of a job. See `podProperties` below.
func (o JobDefinitionEksPropertiesPtrOutput) PodProperties() JobDefinitionEksPropertiesPodPropertiesPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksProperties) *JobDefinitionEksPropertiesPodProperties {
		if v == nil {
			return nil
		}
		return &v.PodProperties
	}).(JobDefinitionEksPropertiesPodPropertiesPtrOutput)
}

type JobDefinitionEksPropertiesPodProperties struct {
	// The properties of the container that's used on the Amazon EKS pod. See containers below.
	Containers JobDefinitionEksPropertiesPodPropertiesContainers `pulumi:"containers"`
	// The DNS policy for the pod. The default value is `ClusterFirst`. If the `hostNetwork` argument is not specified, the default is `ClusterFirstWithHostNet`. `ClusterFirst` indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod's DNS policy in the Kubernetes documentation.
	DnsPolicy *string `pulumi:"dnsPolicy"`
	// Indicates if the pod uses the hosts' network IP address. The default value is `true`. Setting this to `false` enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don't require the overhead of IP allocation for each pod for incoming connections.
	HostNetwork *bool `pulumi:"hostNetwork"`
	// Metadata about the Kubernetes pod.
	Metadata *JobDefinitionEksPropertiesPodPropertiesMetadata `pulumi:"metadata"`
	// The name of the service account that's used to run the pod.
	ServiceAccountName *string `pulumi:"serviceAccountName"`
	// Specifies the volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.
	Volumes []JobDefinitionEksPropertiesPodPropertiesVolume `pulumi:"volumes"`
}

// JobDefinitionEksPropertiesPodPropertiesInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesArgs and JobDefinitionEksPropertiesPodPropertiesOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesInput` via:
//
//	JobDefinitionEksPropertiesPodPropertiesArgs{...}
type JobDefinitionEksPropertiesPodPropertiesInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesOutput() JobDefinitionEksPropertiesPodPropertiesOutput
	ToJobDefinitionEksPropertiesPodPropertiesOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesOutput
}

type JobDefinitionEksPropertiesPodPropertiesArgs struct {
	// The properties of the container that's used on the Amazon EKS pod. See containers below.
	Containers JobDefinitionEksPropertiesPodPropertiesContainersInput `pulumi:"containers"`
	// The DNS policy for the pod. The default value is `ClusterFirst`. If the `hostNetwork` argument is not specified, the default is `ClusterFirstWithHostNet`. `ClusterFirst` indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod's DNS policy in the Kubernetes documentation.
	DnsPolicy pulumi.StringPtrInput `pulumi:"dnsPolicy"`
	// Indicates if the pod uses the hosts' network IP address. The default value is `true`. Setting this to `false` enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don't require the overhead of IP allocation for each pod for incoming connections.
	HostNetwork pulumi.BoolPtrInput `pulumi:"hostNetwork"`
	// Metadata about the Kubernetes pod.
	Metadata JobDefinitionEksPropertiesPodPropertiesMetadataPtrInput `pulumi:"metadata"`
	// The name of the service account that's used to run the pod.
	ServiceAccountName pulumi.StringPtrInput `pulumi:"serviceAccountName"`
	// Specifies the volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.
	Volumes JobDefinitionEksPropertiesPodPropertiesVolumeArrayInput `pulumi:"volumes"`
}

func (JobDefinitionEksPropertiesPodPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodProperties)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesPodPropertiesArgs) ToJobDefinitionEksPropertiesPodPropertiesOutput() JobDefinitionEksPropertiesPodPropertiesOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesArgs) ToJobDefinitionEksPropertiesPodPropertiesOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesOutput)
}

func (i JobDefinitionEksPropertiesPodPropertiesArgs) ToJobDefinitionEksPropertiesPodPropertiesPtrOutput() JobDefinitionEksPropertiesPodPropertiesPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesPtrOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesArgs) ToJobDefinitionEksPropertiesPodPropertiesPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesOutput).ToJobDefinitionEksPropertiesPodPropertiesPtrOutputWithContext(ctx)
}

// JobDefinitionEksPropertiesPodPropertiesPtrInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesArgs, JobDefinitionEksPropertiesPodPropertiesPtr and JobDefinitionEksPropertiesPodPropertiesPtrOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesPtrInput` via:
//
//	        JobDefinitionEksPropertiesPodPropertiesArgs{...}
//
//	or:
//
//	        nil
type JobDefinitionEksPropertiesPodPropertiesPtrInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesPtrOutput() JobDefinitionEksPropertiesPodPropertiesPtrOutput
	ToJobDefinitionEksPropertiesPodPropertiesPtrOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesPtrOutput
}

type jobDefinitionEksPropertiesPodPropertiesPtrType JobDefinitionEksPropertiesPodPropertiesArgs

func JobDefinitionEksPropertiesPodPropertiesPtr(v *JobDefinitionEksPropertiesPodPropertiesArgs) JobDefinitionEksPropertiesPodPropertiesPtrInput {
	return (*jobDefinitionEksPropertiesPodPropertiesPtrType)(v)
}

func (*jobDefinitionEksPropertiesPodPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodProperties)(nil)).Elem()
}

func (i *jobDefinitionEksPropertiesPodPropertiesPtrType) ToJobDefinitionEksPropertiesPodPropertiesPtrOutput() JobDefinitionEksPropertiesPodPropertiesPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesPtrOutputWithContext(context.Background())
}

func (i *jobDefinitionEksPropertiesPodPropertiesPtrType) ToJobDefinitionEksPropertiesPodPropertiesPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesPtrOutput)
}

type JobDefinitionEksPropertiesPodPropertiesOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodProperties)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesOutput) ToJobDefinitionEksPropertiesPodPropertiesOutput() JobDefinitionEksPropertiesPodPropertiesOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesOutput) ToJobDefinitionEksPropertiesPodPropertiesOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesOutput) ToJobDefinitionEksPropertiesPodPropertiesPtrOutput() JobDefinitionEksPropertiesPodPropertiesPtrOutput {
	return o.ToJobDefinitionEksPropertiesPodPropertiesPtrOutputWithContext(context.Background())
}

func (o JobDefinitionEksPropertiesPodPropertiesOutput) ToJobDefinitionEksPropertiesPodPropertiesPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDefinitionEksPropertiesPodProperties) *JobDefinitionEksPropertiesPodProperties {
		return &v
	}).(JobDefinitionEksPropertiesPodPropertiesPtrOutput)
}

// The properties of the container that's used on the Amazon EKS pod. See containers below.
func (o JobDefinitionEksPropertiesPodPropertiesOutput) Containers() JobDefinitionEksPropertiesPodPropertiesContainersOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodProperties) JobDefinitionEksPropertiesPodPropertiesContainers {
		return v.Containers
	}).(JobDefinitionEksPropertiesPodPropertiesContainersOutput)
}

// The DNS policy for the pod. The default value is `ClusterFirst`. If the `hostNetwork` argument is not specified, the default is `ClusterFirstWithHostNet`. `ClusterFirst` indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod's DNS policy in the Kubernetes documentation.
func (o JobDefinitionEksPropertiesPodPropertiesOutput) DnsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodProperties) *string { return v.DnsPolicy }).(pulumi.StringPtrOutput)
}

// Indicates if the pod uses the hosts' network IP address. The default value is `true`. Setting this to `false` enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don't require the overhead of IP allocation for each pod for incoming connections.
func (o JobDefinitionEksPropertiesPodPropertiesOutput) HostNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodProperties) *bool { return v.HostNetwork }).(pulumi.BoolPtrOutput)
}

// Metadata about the Kubernetes pod.
func (o JobDefinitionEksPropertiesPodPropertiesOutput) Metadata() JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodProperties) *JobDefinitionEksPropertiesPodPropertiesMetadata {
		return v.Metadata
	}).(JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput)
}

// The name of the service account that's used to run the pod.
func (o JobDefinitionEksPropertiesPodPropertiesOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodProperties) *string { return v.ServiceAccountName }).(pulumi.StringPtrOutput)
}

// Specifies the volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.
func (o JobDefinitionEksPropertiesPodPropertiesOutput) Volumes() JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodProperties) []JobDefinitionEksPropertiesPodPropertiesVolume {
		return v.Volumes
	}).(JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput)
}

type JobDefinitionEksPropertiesPodPropertiesPtrOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodProperties)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesPtrOutput() JobDefinitionEksPropertiesPodPropertiesPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesPtrOutput) Elem() JobDefinitionEksPropertiesPodPropertiesOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodProperties) JobDefinitionEksPropertiesPodProperties {
		if v != nil {
			return *v
		}
		var ret JobDefinitionEksPropertiesPodProperties
		return ret
	}).(JobDefinitionEksPropertiesPodPropertiesOutput)
}

// The properties of the container that's used on the Amazon EKS pod. See containers below.
func (o JobDefinitionEksPropertiesPodPropertiesPtrOutput) Containers() JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodProperties) *JobDefinitionEksPropertiesPodPropertiesContainers {
		if v == nil {
			return nil
		}
		return &v.Containers
	}).(JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput)
}

// The DNS policy for the pod. The default value is `ClusterFirst`. If the `hostNetwork` argument is not specified, the default is `ClusterFirstWithHostNet`. `ClusterFirst` indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod's DNS policy in the Kubernetes documentation.
func (o JobDefinitionEksPropertiesPodPropertiesPtrOutput) DnsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodProperties) *string {
		if v == nil {
			return nil
		}
		return v.DnsPolicy
	}).(pulumi.StringPtrOutput)
}

// Indicates if the pod uses the hosts' network IP address. The default value is `true`. Setting this to `false` enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don't require the overhead of IP allocation for each pod for incoming connections.
func (o JobDefinitionEksPropertiesPodPropertiesPtrOutput) HostNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodProperties) *bool {
		if v == nil {
			return nil
		}
		return v.HostNetwork
	}).(pulumi.BoolPtrOutput)
}

// Metadata about the Kubernetes pod.
func (o JobDefinitionEksPropertiesPodPropertiesPtrOutput) Metadata() JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodProperties) *JobDefinitionEksPropertiesPodPropertiesMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput)
}

// The name of the service account that's used to run the pod.
func (o JobDefinitionEksPropertiesPodPropertiesPtrOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountName
	}).(pulumi.StringPtrOutput)
}

// Specifies the volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.
func (o JobDefinitionEksPropertiesPodPropertiesPtrOutput) Volumes() JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodProperties) []JobDefinitionEksPropertiesPodPropertiesVolume {
		if v == nil {
			return nil
		}
		return v.Volumes
	}).(JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainers struct {
	// An array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.
	Args []string `pulumi:"args"`
	// The entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.
	Commands []string `pulumi:"commands"`
	// The environment variables to pass to a container. See EKS Environment below.
	Envs []JobDefinitionEksPropertiesPodPropertiesContainersEnv `pulumi:"envs"`
	// The Docker image used to start the container.
	Image string `pulumi:"image"`
	// The image pull policy for the container. Supported values are `Always`, `IfNotPresent`, and `Never`.
	ImagePullPolicy *string `pulumi:"imagePullPolicy"`
	// The name of the container. If the name isn't specified, the default name "Default" is used. Each container in a pod must have a unique name.
	Name *string `pulumi:"name"`
	// The type and amount of resources to assign to a container. The supported resources include `memory`, `cpu`, and `nvidia.com/gpu`.
	Resources *JobDefinitionEksPropertiesPodPropertiesContainersResources `pulumi:"resources"`
	// The security context for a job.
	SecurityContext *JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext `pulumi:"securityContext"`
	// The volume mounts for the container.
	VolumeMounts []JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount `pulumi:"volumeMounts"`
}

// JobDefinitionEksPropertiesPodPropertiesContainersInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesContainersArgs and JobDefinitionEksPropertiesPodPropertiesContainersOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesContainersInput` via:
//
//	JobDefinitionEksPropertiesPodPropertiesContainersArgs{...}
type JobDefinitionEksPropertiesPodPropertiesContainersInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesContainersOutput() JobDefinitionEksPropertiesPodPropertiesContainersOutput
	ToJobDefinitionEksPropertiesPodPropertiesContainersOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesContainersOutput
}

type JobDefinitionEksPropertiesPodPropertiesContainersArgs struct {
	// An array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// The entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.
	Commands pulumi.StringArrayInput `pulumi:"commands"`
	// The environment variables to pass to a container. See EKS Environment below.
	Envs JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayInput `pulumi:"envs"`
	// The Docker image used to start the container.
	Image pulumi.StringInput `pulumi:"image"`
	// The image pull policy for the container. Supported values are `Always`, `IfNotPresent`, and `Never`.
	ImagePullPolicy pulumi.StringPtrInput `pulumi:"imagePullPolicy"`
	// The name of the container. If the name isn't specified, the default name "Default" is used. Each container in a pod must have a unique name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type and amount of resources to assign to a container. The supported resources include `memory`, `cpu`, and `nvidia.com/gpu`.
	Resources JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrInput `pulumi:"resources"`
	// The security context for a job.
	SecurityContext JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrInput `pulumi:"securityContext"`
	// The volume mounts for the container.
	VolumeMounts JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayInput `pulumi:"volumeMounts"`
}

func (JobDefinitionEksPropertiesPodPropertiesContainersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainers)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersOutput() JobDefinitionEksPropertiesPodPropertiesContainersOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesContainersOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesContainersOutput)
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesContainersPtrOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesContainersOutput).ToJobDefinitionEksPropertiesPodPropertiesContainersPtrOutputWithContext(ctx)
}

// JobDefinitionEksPropertiesPodPropertiesContainersPtrInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesContainersArgs, JobDefinitionEksPropertiesPodPropertiesContainersPtr and JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesContainersPtrInput` via:
//
//	        JobDefinitionEksPropertiesPodPropertiesContainersArgs{...}
//
//	or:
//
//	        nil
type JobDefinitionEksPropertiesPodPropertiesContainersPtrInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesContainersPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput
	ToJobDefinitionEksPropertiesPodPropertiesContainersPtrOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput
}

type jobDefinitionEksPropertiesPodPropertiesContainersPtrType JobDefinitionEksPropertiesPodPropertiesContainersArgs

func JobDefinitionEksPropertiesPodPropertiesContainersPtr(v *JobDefinitionEksPropertiesPodPropertiesContainersArgs) JobDefinitionEksPropertiesPodPropertiesContainersPtrInput {
	return (*jobDefinitionEksPropertiesPodPropertiesContainersPtrType)(v)
}

func (*jobDefinitionEksPropertiesPodPropertiesContainersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodPropertiesContainers)(nil)).Elem()
}

func (i *jobDefinitionEksPropertiesPodPropertiesContainersPtrType) ToJobDefinitionEksPropertiesPodPropertiesContainersPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesContainersPtrOutputWithContext(context.Background())
}

func (i *jobDefinitionEksPropertiesPodPropertiesContainersPtrType) ToJobDefinitionEksPropertiesPodPropertiesContainersPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainersOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesContainersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainers)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersOutput() JobDefinitionEksPropertiesPodPropertiesContainersOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput {
	return o.ToJobDefinitionEksPropertiesPodPropertiesContainersPtrOutputWithContext(context.Background())
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDefinitionEksPropertiesPodPropertiesContainers) *JobDefinitionEksPropertiesPodPropertiesContainers {
		return &v
	}).(JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput)
}

// An array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.
func (o JobDefinitionEksPropertiesPodPropertiesContainersOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainers) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// The entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.
func (o JobDefinitionEksPropertiesPodPropertiesContainersOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainers) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

// The environment variables to pass to a container. See EKS Environment below.
func (o JobDefinitionEksPropertiesPodPropertiesContainersOutput) Envs() JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainers) []JobDefinitionEksPropertiesPodPropertiesContainersEnv {
		return v.Envs
	}).(JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput)
}

// The Docker image used to start the container.
func (o JobDefinitionEksPropertiesPodPropertiesContainersOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainers) string { return v.Image }).(pulumi.StringOutput)
}

// The image pull policy for the container. Supported values are `Always`, `IfNotPresent`, and `Never`.
func (o JobDefinitionEksPropertiesPodPropertiesContainersOutput) ImagePullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainers) *string { return v.ImagePullPolicy }).(pulumi.StringPtrOutput)
}

// The name of the container. If the name isn't specified, the default name "Default" is used. Each container in a pod must have a unique name.
func (o JobDefinitionEksPropertiesPodPropertiesContainersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainers) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type and amount of resources to assign to a container. The supported resources include `memory`, `cpu`, and `nvidia.com/gpu`.
func (o JobDefinitionEksPropertiesPodPropertiesContainersOutput) Resources() JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainers) *JobDefinitionEksPropertiesPodPropertiesContainersResources {
		return v.Resources
	}).(JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput)
}

// The security context for a job.
func (o JobDefinitionEksPropertiesPodPropertiesContainersOutput) SecurityContext() JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainers) *JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext {
		return v.SecurityContext
	}).(JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput)
}

// The volume mounts for the container.
func (o JobDefinitionEksPropertiesPodPropertiesContainersOutput) VolumeMounts() JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainers) []JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount {
		return v.VolumeMounts
	}).(JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodPropertiesContainers)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput) Elem() JobDefinitionEksPropertiesPodPropertiesContainersOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainers) JobDefinitionEksPropertiesPodPropertiesContainers {
		if v != nil {
			return *v
		}
		var ret JobDefinitionEksPropertiesPodPropertiesContainers
		return ret
	}).(JobDefinitionEksPropertiesPodPropertiesContainersOutput)
}

// An array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.
func (o JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainers) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// The entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.
func (o JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainers) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

// The environment variables to pass to a container. See EKS Environment below.
func (o JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput) Envs() JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainers) []JobDefinitionEksPropertiesPodPropertiesContainersEnv {
		if v == nil {
			return nil
		}
		return v.Envs
	}).(JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput)
}

// The Docker image used to start the container.
func (o JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainers) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

// The image pull policy for the container. Supported values are `Always`, `IfNotPresent`, and `Never`.
func (o JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput) ImagePullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainers) *string {
		if v == nil {
			return nil
		}
		return v.ImagePullPolicy
	}).(pulumi.StringPtrOutput)
}

// The name of the container. If the name isn't specified, the default name "Default" is used. Each container in a pod must have a unique name.
func (o JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainers) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type and amount of resources to assign to a container. The supported resources include `memory`, `cpu`, and `nvidia.com/gpu`.
func (o JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput) Resources() JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainers) *JobDefinitionEksPropertiesPodPropertiesContainersResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput)
}

// The security context for a job.
func (o JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput) SecurityContext() JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainers) *JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext {
		if v == nil {
			return nil
		}
		return v.SecurityContext
	}).(JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput)
}

// The volume mounts for the container.
func (o JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput) VolumeMounts() JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainers) []JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount {
		if v == nil {
			return nil
		}
		return v.VolumeMounts
	}).(JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainersEnv struct {
	// Specifies the name of the job definition.
	Name string `pulumi:"name"`
	// The value of the environment variable.
	Value string `pulumi:"value"`
}

// JobDefinitionEksPropertiesPodPropertiesContainersEnvInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesContainersEnvArgs and JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesContainersEnvInput` via:
//
//	JobDefinitionEksPropertiesPodPropertiesContainersEnvArgs{...}
type JobDefinitionEksPropertiesPodPropertiesContainersEnvInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesContainersEnvOutput() JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput
	ToJobDefinitionEksPropertiesPodPropertiesContainersEnvOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput
}

type JobDefinitionEksPropertiesPodPropertiesContainersEnvArgs struct {
	// Specifies the name of the job definition.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (JobDefinitionEksPropertiesPodPropertiesContainersEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersEnv)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersEnvArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersEnvOutput() JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesContainersEnvOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersEnvArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersEnvOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput)
}

// JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesContainersEnvArray and JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayInput` via:
//
//	JobDefinitionEksPropertiesPodPropertiesContainersEnvArray{ JobDefinitionEksPropertiesPodPropertiesContainersEnvArgs{...} }
type JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput() JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput
	ToJobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput
}

type JobDefinitionEksPropertiesPodPropertiesContainersEnvArray []JobDefinitionEksPropertiesPodPropertiesContainersEnvInput

func (JobDefinitionEksPropertiesPodPropertiesContainersEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDefinitionEksPropertiesPodPropertiesContainersEnv)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersEnvArray) ToJobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput() JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersEnvArray) ToJobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersEnv)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersEnvOutput() JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersEnvOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput {
	return o
}

// Specifies the name of the job definition.
func (o JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainersEnv) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the environment variable.
func (o JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainersEnv) string { return v.Value }).(pulumi.StringOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDefinitionEksPropertiesPodPropertiesContainersEnv)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput() JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput) Index(i pulumi.IntInput) JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobDefinitionEksPropertiesPodPropertiesContainersEnv {
		return vs[0].([]JobDefinitionEksPropertiesPodPropertiesContainersEnv)[vs[1].(int)]
	}).(JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainersResources struct {
	Limits   map[string]string `pulumi:"limits"`
	Requests map[string]string `pulumi:"requests"`
}

// JobDefinitionEksPropertiesPodPropertiesContainersResourcesInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesContainersResourcesArgs and JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesContainersResourcesInput` via:
//
//	JobDefinitionEksPropertiesPodPropertiesContainersResourcesArgs{...}
type JobDefinitionEksPropertiesPodPropertiesContainersResourcesInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput() JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput
	ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput
}

type JobDefinitionEksPropertiesPodPropertiesContainersResourcesArgs struct {
	Limits   pulumi.StringMapInput `pulumi:"limits"`
	Requests pulumi.StringMapInput `pulumi:"requests"`
}

func (JobDefinitionEksPropertiesPodPropertiesContainersResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersResources)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersResourcesArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput() JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersResourcesArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput)
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersResourcesArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersResourcesArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput).ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutputWithContext(ctx)
}

// JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesContainersResourcesArgs, JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtr and JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrInput` via:
//
//	        JobDefinitionEksPropertiesPodPropertiesContainersResourcesArgs{...}
//
//	or:
//
//	        nil
type JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput
	ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput
}

type jobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrType JobDefinitionEksPropertiesPodPropertiesContainersResourcesArgs

func JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtr(v *JobDefinitionEksPropertiesPodPropertiesContainersResourcesArgs) JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrInput {
	return (*jobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrType)(v)
}

func (*jobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodPropertiesContainersResources)(nil)).Elem()
}

func (i *jobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrType) ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutputWithContext(context.Background())
}

func (i *jobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrType) ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersResources)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput() JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput {
	return o.ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutputWithContext(context.Background())
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDefinitionEksPropertiesPodPropertiesContainersResources) *JobDefinitionEksPropertiesPodPropertiesContainersResources {
		return &v
	}).(JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainersResources) map[string]string { return v.Limits }).(pulumi.StringMapOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainersResources) map[string]string {
		return v.Requests
	}).(pulumi.StringMapOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodPropertiesContainersResources)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput) Elem() JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainersResources) JobDefinitionEksPropertiesPodPropertiesContainersResources {
		if v != nil {
			return *v
		}
		var ret JobDefinitionEksPropertiesPodPropertiesContainersResources
		return ret
	}).(JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainersResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.StringMapOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainersResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.StringMapOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext struct {
	Privileged             *bool `pulumi:"privileged"`
	ReadOnlyRootFileSystem *bool `pulumi:"readOnlyRootFileSystem"`
	RunAsGroup             *int  `pulumi:"runAsGroup"`
	RunAsNonRoot           *bool `pulumi:"runAsNonRoot"`
	RunAsUser              *int  `pulumi:"runAsUser"`
}

// JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextArgs and JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextInput` via:
//
//	JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextArgs{...}
type JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput() JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput
	ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput
}

type JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextArgs struct {
	Privileged             pulumi.BoolPtrInput `pulumi:"privileged"`
	ReadOnlyRootFileSystem pulumi.BoolPtrInput `pulumi:"readOnlyRootFileSystem"`
	RunAsGroup             pulumi.IntPtrInput  `pulumi:"runAsGroup"`
	RunAsNonRoot           pulumi.BoolPtrInput `pulumi:"runAsNonRoot"`
	RunAsUser              pulumi.IntPtrInput  `pulumi:"runAsUser"`
}

func (JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput() JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput)
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput).ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutputWithContext(ctx)
}

// JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextArgs, JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtr and JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrInput` via:
//
//	        JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextArgs{...}
//
//	or:
//
//	        nil
type JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput
	ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput
}

type jobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrType JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextArgs

func JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtr(v *JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextArgs) JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrInput {
	return (*jobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrType)(v)
}

func (*jobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext)(nil)).Elem()
}

func (i *jobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrType) ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutputWithContext(context.Background())
}

func (i *jobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrType) ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput() JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput {
	return o.ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutputWithContext(context.Background())
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext) *JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext {
		return &v
	}).(JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext) *bool { return v.Privileged }).(pulumi.BoolPtrOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput) ReadOnlyRootFileSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext) *bool {
		return v.ReadOnlyRootFileSystem
	}).(pulumi.BoolPtrOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext) *int { return v.RunAsGroup }).(pulumi.IntPtrOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext) *bool { return v.RunAsNonRoot }).(pulumi.BoolPtrOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext) *int { return v.RunAsUser }).(pulumi.IntPtrOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput() JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput) Elem() JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext) JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext {
		if v != nil {
			return *v
		}
		var ret JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext
		return ret
	}).(JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.Privileged
	}).(pulumi.BoolPtrOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput) ReadOnlyRootFileSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnlyRootFileSystem
	}).(pulumi.BoolPtrOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsGroup
	}).(pulumi.IntPtrOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.RunAsNonRoot
	}).(pulumi.BoolPtrOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsUser
	}).(pulumi.IntPtrOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount struct {
	MountPath string `pulumi:"mountPath"`
	// Specifies the name of the job definition.
	Name     string `pulumi:"name"`
	ReadOnly *bool  `pulumi:"readOnly"`
}

// JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArgs and JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountInput` via:
//
//	JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArgs{...}
type JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput() JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput
	ToJobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput
}

type JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArgs struct {
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// Specifies the name of the job definition.
	Name     pulumi.StringInput  `pulumi:"name"`
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput() JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArgs) ToJobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput)
}

// JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArray and JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayInput` via:
//
//	JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArray{ JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArgs{...} }
type JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput() JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput
	ToJobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput
}

type JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArray []JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountInput

func (JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArray) ToJobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput() JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArray) ToJobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput() JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount) string { return v.MountPath }).(pulumi.StringOutput)
}

// Specifies the name of the job definition.
func (o JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount) string { return v.Name }).(pulumi.StringOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput() JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput) ToJobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput) Index(i pulumi.IntInput) JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount {
		return vs[0].([]JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount)[vs[1].(int)]
	}).(JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput)
}

type JobDefinitionEksPropertiesPodPropertiesMetadata struct {
	Labels map[string]string `pulumi:"labels"`
}

// JobDefinitionEksPropertiesPodPropertiesMetadataInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesMetadataArgs and JobDefinitionEksPropertiesPodPropertiesMetadataOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesMetadataInput` via:
//
//	JobDefinitionEksPropertiesPodPropertiesMetadataArgs{...}
type JobDefinitionEksPropertiesPodPropertiesMetadataInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesMetadataOutput() JobDefinitionEksPropertiesPodPropertiesMetadataOutput
	ToJobDefinitionEksPropertiesPodPropertiesMetadataOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesMetadataOutput
}

type JobDefinitionEksPropertiesPodPropertiesMetadataArgs struct {
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (JobDefinitionEksPropertiesPodPropertiesMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesMetadata)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesPodPropertiesMetadataArgs) ToJobDefinitionEksPropertiesPodPropertiesMetadataOutput() JobDefinitionEksPropertiesPodPropertiesMetadataOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesMetadataOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesMetadataArgs) ToJobDefinitionEksPropertiesPodPropertiesMetadataOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesMetadataOutput)
}

func (i JobDefinitionEksPropertiesPodPropertiesMetadataArgs) ToJobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput() JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesMetadataPtrOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesMetadataArgs) ToJobDefinitionEksPropertiesPodPropertiesMetadataPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesMetadataOutput).ToJobDefinitionEksPropertiesPodPropertiesMetadataPtrOutputWithContext(ctx)
}

// JobDefinitionEksPropertiesPodPropertiesMetadataPtrInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesMetadataArgs, JobDefinitionEksPropertiesPodPropertiesMetadataPtr and JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesMetadataPtrInput` via:
//
//	        JobDefinitionEksPropertiesPodPropertiesMetadataArgs{...}
//
//	or:
//
//	        nil
type JobDefinitionEksPropertiesPodPropertiesMetadataPtrInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput() JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput
	ToJobDefinitionEksPropertiesPodPropertiesMetadataPtrOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput
}

type jobDefinitionEksPropertiesPodPropertiesMetadataPtrType JobDefinitionEksPropertiesPodPropertiesMetadataArgs

func JobDefinitionEksPropertiesPodPropertiesMetadataPtr(v *JobDefinitionEksPropertiesPodPropertiesMetadataArgs) JobDefinitionEksPropertiesPodPropertiesMetadataPtrInput {
	return (*jobDefinitionEksPropertiesPodPropertiesMetadataPtrType)(v)
}

func (*jobDefinitionEksPropertiesPodPropertiesMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodPropertiesMetadata)(nil)).Elem()
}

func (i *jobDefinitionEksPropertiesPodPropertiesMetadataPtrType) ToJobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput() JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesMetadataPtrOutputWithContext(context.Background())
}

func (i *jobDefinitionEksPropertiesPodPropertiesMetadataPtrType) ToJobDefinitionEksPropertiesPodPropertiesMetadataPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput)
}

type JobDefinitionEksPropertiesPodPropertiesMetadataOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesMetadata)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesMetadataOutput) ToJobDefinitionEksPropertiesPodPropertiesMetadataOutput() JobDefinitionEksPropertiesPodPropertiesMetadataOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesMetadataOutput) ToJobDefinitionEksPropertiesPodPropertiesMetadataOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesMetadataOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesMetadataOutput) ToJobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput() JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput {
	return o.ToJobDefinitionEksPropertiesPodPropertiesMetadataPtrOutputWithContext(context.Background())
}

func (o JobDefinitionEksPropertiesPodPropertiesMetadataOutput) ToJobDefinitionEksPropertiesPodPropertiesMetadataPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDefinitionEksPropertiesPodPropertiesMetadata) *JobDefinitionEksPropertiesPodPropertiesMetadata {
		return &v
	}).(JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodPropertiesMetadata)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput() JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesMetadataPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput) Elem() JobDefinitionEksPropertiesPodPropertiesMetadataOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesMetadata) JobDefinitionEksPropertiesPodPropertiesMetadata {
		if v != nil {
			return *v
		}
		var ret JobDefinitionEksPropertiesPodPropertiesMetadata
		return ret
	}).(JobDefinitionEksPropertiesPodPropertiesMetadataOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

type JobDefinitionEksPropertiesPodPropertiesVolume struct {
	EmptyDir *JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir `pulumi:"emptyDir"`
	HostPath *JobDefinitionEksPropertiesPodPropertiesVolumeHostPath `pulumi:"hostPath"`
	// Specifies the name of the job definition.
	Name   *string                                              `pulumi:"name"`
	Secret *JobDefinitionEksPropertiesPodPropertiesVolumeSecret `pulumi:"secret"`
}

// JobDefinitionEksPropertiesPodPropertiesVolumeInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesVolumeArgs and JobDefinitionEksPropertiesPodPropertiesVolumeOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesVolumeInput` via:
//
//	JobDefinitionEksPropertiesPodPropertiesVolumeArgs{...}
type JobDefinitionEksPropertiesPodPropertiesVolumeInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesVolumeOutput() JobDefinitionEksPropertiesPodPropertiesVolumeOutput
	ToJobDefinitionEksPropertiesPodPropertiesVolumeOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeOutput
}

type JobDefinitionEksPropertiesPodPropertiesVolumeArgs struct {
	EmptyDir JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrInput `pulumi:"emptyDir"`
	HostPath JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrInput `pulumi:"hostPath"`
	// Specifies the name of the job definition.
	Name   pulumi.StringPtrInput                                       `pulumi:"name"`
	Secret JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrInput `pulumi:"secret"`
}

func (JobDefinitionEksPropertiesPodPropertiesVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolume)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeArgs) ToJobDefinitionEksPropertiesPodPropertiesVolumeOutput() JobDefinitionEksPropertiesPodPropertiesVolumeOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesVolumeOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeArgs) ToJobDefinitionEksPropertiesPodPropertiesVolumeOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesVolumeOutput)
}

// JobDefinitionEksPropertiesPodPropertiesVolumeArrayInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesVolumeArray and JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesVolumeArrayInput` via:
//
//	JobDefinitionEksPropertiesPodPropertiesVolumeArray{ JobDefinitionEksPropertiesPodPropertiesVolumeArgs{...} }
type JobDefinitionEksPropertiesPodPropertiesVolumeArrayInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput() JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput
	ToJobDefinitionEksPropertiesPodPropertiesVolumeArrayOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput
}

type JobDefinitionEksPropertiesPodPropertiesVolumeArray []JobDefinitionEksPropertiesPodPropertiesVolumeInput

func (JobDefinitionEksPropertiesPodPropertiesVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDefinitionEksPropertiesPodPropertiesVolume)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeArray) ToJobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput() JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesVolumeArrayOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeArray) ToJobDefinitionEksPropertiesPodPropertiesVolumeArrayOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput)
}

type JobDefinitionEksPropertiesPodPropertiesVolumeOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolume)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeOutput() JobDefinitionEksPropertiesPodPropertiesVolumeOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeOutput) EmptyDir() JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesVolume) *JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir {
		return v.EmptyDir
	}).(JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeOutput) HostPath() JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesVolume) *JobDefinitionEksPropertiesPodPropertiesVolumeHostPath {
		return v.HostPath
	}).(JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput)
}

// Specifies the name of the job definition.
func (o JobDefinitionEksPropertiesPodPropertiesVolumeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesVolume) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeOutput) Secret() JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesVolume) *JobDefinitionEksPropertiesPodPropertiesVolumeSecret {
		return v.Secret
	}).(JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput)
}

type JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDefinitionEksPropertiesPodPropertiesVolume)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput() JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeArrayOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput) Index(i pulumi.IntInput) JobDefinitionEksPropertiesPodPropertiesVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobDefinitionEksPropertiesPodPropertiesVolume {
		return vs[0].([]JobDefinitionEksPropertiesPodPropertiesVolume)[vs[1].(int)]
	}).(JobDefinitionEksPropertiesPodPropertiesVolumeOutput)
}

type JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir struct {
	// The medium to store the volume. The default value is an empty string, which uses the storage of the node.
	Medium *string `pulumi:"medium"`
	// The maximum size of the volume. By default, there's no maximum size defined.
	SizeLimit string `pulumi:"sizeLimit"`
}

// JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirArgs and JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirInput` via:
//
//	JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirArgs{...}
type JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput() JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput
	ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput
}

type JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirArgs struct {
	// The medium to store the volume. The default value is an empty string, which uses the storage of the node.
	Medium pulumi.StringPtrInput `pulumi:"medium"`
	// The maximum size of the volume. By default, there's no maximum size defined.
	SizeLimit pulumi.StringInput `pulumi:"sizeLimit"`
}

func (JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirArgs) ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput() JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirArgs) ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput)
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirArgs) ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirArgs) ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput).ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutputWithContext(ctx)
}

// JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirArgs, JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtr and JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrInput` via:
//
//	        JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirArgs{...}
//
//	or:
//
//	        nil
type JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput
	ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput
}

type jobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrType JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirArgs

func JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtr(v *JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirArgs) JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrInput {
	return (*jobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrType)(v)
}

func (*jobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir)(nil)).Elem()
}

func (i *jobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrType) ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutputWithContext(context.Background())
}

func (i *jobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrType) ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput)
}

type JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput() JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput {
	return o.ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutputWithContext(context.Background())
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir) *JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir {
		return &v
	}).(JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput)
}

// The medium to store the volume. The default value is an empty string, which uses the storage of the node.
func (o JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir) *string { return v.Medium }).(pulumi.StringPtrOutput)
}

// The maximum size of the volume. By default, there's no maximum size defined.
func (o JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput) SizeLimit() pulumi.StringOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir) string { return v.SizeLimit }).(pulumi.StringOutput)
}

type JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput) Elem() JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir) JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir {
		if v != nil {
			return *v
		}
		var ret JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir
		return ret
	}).(JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput)
}

// The medium to store the volume. The default value is an empty string, which uses the storage of the node.
func (o JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir) *string {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(pulumi.StringPtrOutput)
}

// The maximum size of the volume. By default, there's no maximum size defined.
func (o JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput) SizeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDir) *string {
		if v == nil {
			return nil
		}
		return &v.SizeLimit
	}).(pulumi.StringPtrOutput)
}

type JobDefinitionEksPropertiesPodPropertiesVolumeHostPath struct {
	// The path of the file or directory on the host to mount into containers on the pod.
	Path string `pulumi:"path"`
}

// JobDefinitionEksPropertiesPodPropertiesVolumeHostPathInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesVolumeHostPathArgs and JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesVolumeHostPathInput` via:
//
//	JobDefinitionEksPropertiesPodPropertiesVolumeHostPathArgs{...}
type JobDefinitionEksPropertiesPodPropertiesVolumeHostPathInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput() JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput
	ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput
}

type JobDefinitionEksPropertiesPodPropertiesVolumeHostPathArgs struct {
	// The path of the file or directory on the host to mount into containers on the pod.
	Path pulumi.StringInput `pulumi:"path"`
}

func (JobDefinitionEksPropertiesPodPropertiesVolumeHostPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolumeHostPath)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeHostPathArgs) ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput() JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeHostPathArgs) ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput)
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeHostPathArgs) ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeHostPathArgs) ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput).ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutputWithContext(ctx)
}

// JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesVolumeHostPathArgs, JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtr and JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrInput` via:
//
//	        JobDefinitionEksPropertiesPodPropertiesVolumeHostPathArgs{...}
//
//	or:
//
//	        nil
type JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput
	ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput
}

type jobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrType JobDefinitionEksPropertiesPodPropertiesVolumeHostPathArgs

func JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtr(v *JobDefinitionEksPropertiesPodPropertiesVolumeHostPathArgs) JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrInput {
	return (*jobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrType)(v)
}

func (*jobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodPropertiesVolumeHostPath)(nil)).Elem()
}

func (i *jobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrType) ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutputWithContext(context.Background())
}

func (i *jobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrType) ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput)
}

type JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolumeHostPath)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput() JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput {
	return o.ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutputWithContext(context.Background())
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDefinitionEksPropertiesPodPropertiesVolumeHostPath) *JobDefinitionEksPropertiesPodPropertiesVolumeHostPath {
		return &v
	}).(JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput)
}

// The path of the file or directory on the host to mount into containers on the pod.
func (o JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesVolumeHostPath) string { return v.Path }).(pulumi.StringOutput)
}

type JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodPropertiesVolumeHostPath)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput) Elem() JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesVolumeHostPath) JobDefinitionEksPropertiesPodPropertiesVolumeHostPath {
		if v != nil {
			return *v
		}
		var ret JobDefinitionEksPropertiesPodPropertiesVolumeHostPath
		return ret
	}).(JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput)
}

// The path of the file or directory on the host to mount into containers on the pod.
func (o JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesVolumeHostPath) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

type JobDefinitionEksPropertiesPodPropertiesVolumeSecret struct {
	// Specifies whether the secret or the secret's keys must be defined.
	Optional *bool `pulumi:"optional"`
	// The name of the secret. The name must be allowed as a DNS subdomain name.
	SecretName string `pulumi:"secretName"`
}

// JobDefinitionEksPropertiesPodPropertiesVolumeSecretInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesVolumeSecretArgs and JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesVolumeSecretInput` via:
//
//	JobDefinitionEksPropertiesPodPropertiesVolumeSecretArgs{...}
type JobDefinitionEksPropertiesPodPropertiesVolumeSecretInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput() JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput
	ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput
}

type JobDefinitionEksPropertiesPodPropertiesVolumeSecretArgs struct {
	// Specifies whether the secret or the secret's keys must be defined.
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
	// The name of the secret. The name must be allowed as a DNS subdomain name.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (JobDefinitionEksPropertiesPodPropertiesVolumeSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolumeSecret)(nil)).Elem()
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeSecretArgs) ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput() JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeSecretArgs) ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput)
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeSecretArgs) ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutputWithContext(context.Background())
}

func (i JobDefinitionEksPropertiesPodPropertiesVolumeSecretArgs) ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput).ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutputWithContext(ctx)
}

// JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrInput is an input type that accepts JobDefinitionEksPropertiesPodPropertiesVolumeSecretArgs, JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtr and JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput values.
// You can construct a concrete instance of `JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrInput` via:
//
//	        JobDefinitionEksPropertiesPodPropertiesVolumeSecretArgs{...}
//
//	or:
//
//	        nil
type JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrInput interface {
	pulumi.Input

	ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput
	ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutputWithContext(context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput
}

type jobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrType JobDefinitionEksPropertiesPodPropertiesVolumeSecretArgs

func JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtr(v *JobDefinitionEksPropertiesPodPropertiesVolumeSecretArgs) JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrInput {
	return (*jobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrType)(v)
}

func (*jobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodPropertiesVolumeSecret)(nil)).Elem()
}

func (i *jobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrType) ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput {
	return i.ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutputWithContext(context.Background())
}

func (i *jobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrType) ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput)
}

type JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolumeSecret)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput() JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput {
	return o.ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutputWithContext(context.Background())
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDefinitionEksPropertiesPodPropertiesVolumeSecret) *JobDefinitionEksPropertiesPodPropertiesVolumeSecret {
		return &v
	}).(JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput)
}

// Specifies whether the secret or the secret's keys must be defined.
func (o JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesVolumeSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

// The name of the secret. The name must be allowed as a DNS subdomain name.
func (o JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v JobDefinitionEksPropertiesPodPropertiesVolumeSecret) string { return v.SecretName }).(pulumi.StringOutput)
}

type JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput struct{ *pulumi.OutputState }

func (JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionEksPropertiesPodPropertiesVolumeSecret)(nil)).Elem()
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput() JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput) ToJobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutputWithContext(ctx context.Context) JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput {
	return o
}

func (o JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput) Elem() JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesVolumeSecret) JobDefinitionEksPropertiesPodPropertiesVolumeSecret {
		if v != nil {
			return *v
		}
		var ret JobDefinitionEksPropertiesPodPropertiesVolumeSecret
		return ret
	}).(JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput)
}

// Specifies whether the secret or the secret's keys must be defined.
func (o JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesVolumeSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// The name of the secret. The name must be allowed as a DNS subdomain name.
func (o JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDefinitionEksPropertiesPodPropertiesVolumeSecret) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type JobDefinitionRetryStrategy struct {
	// The number of times to move a job to the `RUNNABLE` status. You may specify between `1` and `10` attempts.
	Attempts *int `pulumi:"attempts"`
	// The evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the `attempts` parameter must also be specified. You may specify up to 5 configuration blocks.
	EvaluateOnExits []JobDefinitionRetryStrategyEvaluateOnExit `pulumi:"evaluateOnExits"`
}

// JobDefinitionRetryStrategyInput is an input type that accepts JobDefinitionRetryStrategyArgs and JobDefinitionRetryStrategyOutput values.
// You can construct a concrete instance of `JobDefinitionRetryStrategyInput` via:
//
//	JobDefinitionRetryStrategyArgs{...}
type JobDefinitionRetryStrategyInput interface {
	pulumi.Input

	ToJobDefinitionRetryStrategyOutput() JobDefinitionRetryStrategyOutput
	ToJobDefinitionRetryStrategyOutputWithContext(context.Context) JobDefinitionRetryStrategyOutput
}

type JobDefinitionRetryStrategyArgs struct {
	// The number of times to move a job to the `RUNNABLE` status. You may specify between `1` and `10` attempts.
	Attempts pulumi.IntPtrInput `pulumi:"attempts"`
	// The evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the `attempts` parameter must also be specified. You may specify up to 5 configuration blocks.
	EvaluateOnExits JobDefinitionRetryStrategyEvaluateOnExitArrayInput `pulumi:"evaluateOnExits"`
}

func (JobDefinitionRetryStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionRetryStrategy)(nil)).Elem()
}

func (i JobDefinitionRetryStrategyArgs) ToJobDefinitionRetryStrategyOutput() JobDefinitionRetryStrategyOutput {
	return i.ToJobDefinitionRetryStrategyOutputWithContext(context.Background())
}

func (i JobDefinitionRetryStrategyArgs) ToJobDefinitionRetryStrategyOutputWithContext(ctx context.Context) JobDefinitionRetryStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionRetryStrategyOutput)
}

func (i JobDefinitionRetryStrategyArgs) ToJobDefinitionRetryStrategyPtrOutput() JobDefinitionRetryStrategyPtrOutput {
	return i.ToJobDefinitionRetryStrategyPtrOutputWithContext(context.Background())
}

func (i JobDefinitionRetryStrategyArgs) ToJobDefinitionRetryStrategyPtrOutputWithContext(ctx context.Context) JobDefinitionRetryStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionRetryStrategyOutput).ToJobDefinitionRetryStrategyPtrOutputWithContext(ctx)
}

// JobDefinitionRetryStrategyPtrInput is an input type that accepts JobDefinitionRetryStrategyArgs, JobDefinitionRetryStrategyPtr and JobDefinitionRetryStrategyPtrOutput values.
// You can construct a concrete instance of `JobDefinitionRetryStrategyPtrInput` via:
//
//	        JobDefinitionRetryStrategyArgs{...}
//
//	or:
//
//	        nil
type JobDefinitionRetryStrategyPtrInput interface {
	pulumi.Input

	ToJobDefinitionRetryStrategyPtrOutput() JobDefinitionRetryStrategyPtrOutput
	ToJobDefinitionRetryStrategyPtrOutputWithContext(context.Context) JobDefinitionRetryStrategyPtrOutput
}

type jobDefinitionRetryStrategyPtrType JobDefinitionRetryStrategyArgs

func JobDefinitionRetryStrategyPtr(v *JobDefinitionRetryStrategyArgs) JobDefinitionRetryStrategyPtrInput {
	return (*jobDefinitionRetryStrategyPtrType)(v)
}

func (*jobDefinitionRetryStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionRetryStrategy)(nil)).Elem()
}

func (i *jobDefinitionRetryStrategyPtrType) ToJobDefinitionRetryStrategyPtrOutput() JobDefinitionRetryStrategyPtrOutput {
	return i.ToJobDefinitionRetryStrategyPtrOutputWithContext(context.Background())
}

func (i *jobDefinitionRetryStrategyPtrType) ToJobDefinitionRetryStrategyPtrOutputWithContext(ctx context.Context) JobDefinitionRetryStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionRetryStrategyPtrOutput)
}

type JobDefinitionRetryStrategyOutput struct{ *pulumi.OutputState }

func (JobDefinitionRetryStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionRetryStrategy)(nil)).Elem()
}

func (o JobDefinitionRetryStrategyOutput) ToJobDefinitionRetryStrategyOutput() JobDefinitionRetryStrategyOutput {
	return o
}

func (o JobDefinitionRetryStrategyOutput) ToJobDefinitionRetryStrategyOutputWithContext(ctx context.Context) JobDefinitionRetryStrategyOutput {
	return o
}

func (o JobDefinitionRetryStrategyOutput) ToJobDefinitionRetryStrategyPtrOutput() JobDefinitionRetryStrategyPtrOutput {
	return o.ToJobDefinitionRetryStrategyPtrOutputWithContext(context.Background())
}

func (o JobDefinitionRetryStrategyOutput) ToJobDefinitionRetryStrategyPtrOutputWithContext(ctx context.Context) JobDefinitionRetryStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDefinitionRetryStrategy) *JobDefinitionRetryStrategy {
		return &v
	}).(JobDefinitionRetryStrategyPtrOutput)
}

// The number of times to move a job to the `RUNNABLE` status. You may specify between `1` and `10` attempts.
func (o JobDefinitionRetryStrategyOutput) Attempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobDefinitionRetryStrategy) *int { return v.Attempts }).(pulumi.IntPtrOutput)
}

// The evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the `attempts` parameter must also be specified. You may specify up to 5 configuration blocks.
func (o JobDefinitionRetryStrategyOutput) EvaluateOnExits() JobDefinitionRetryStrategyEvaluateOnExitArrayOutput {
	return o.ApplyT(func(v JobDefinitionRetryStrategy) []JobDefinitionRetryStrategyEvaluateOnExit {
		return v.EvaluateOnExits
	}).(JobDefinitionRetryStrategyEvaluateOnExitArrayOutput)
}

type JobDefinitionRetryStrategyPtrOutput struct{ *pulumi.OutputState }

func (JobDefinitionRetryStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionRetryStrategy)(nil)).Elem()
}

func (o JobDefinitionRetryStrategyPtrOutput) ToJobDefinitionRetryStrategyPtrOutput() JobDefinitionRetryStrategyPtrOutput {
	return o
}

func (o JobDefinitionRetryStrategyPtrOutput) ToJobDefinitionRetryStrategyPtrOutputWithContext(ctx context.Context) JobDefinitionRetryStrategyPtrOutput {
	return o
}

func (o JobDefinitionRetryStrategyPtrOutput) Elem() JobDefinitionRetryStrategyOutput {
	return o.ApplyT(func(v *JobDefinitionRetryStrategy) JobDefinitionRetryStrategy {
		if v != nil {
			return *v
		}
		var ret JobDefinitionRetryStrategy
		return ret
	}).(JobDefinitionRetryStrategyOutput)
}

// The number of times to move a job to the `RUNNABLE` status. You may specify between `1` and `10` attempts.
func (o JobDefinitionRetryStrategyPtrOutput) Attempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobDefinitionRetryStrategy) *int {
		if v == nil {
			return nil
		}
		return v.Attempts
	}).(pulumi.IntPtrOutput)
}

// The evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the `attempts` parameter must also be specified. You may specify up to 5 configuration blocks.
func (o JobDefinitionRetryStrategyPtrOutput) EvaluateOnExits() JobDefinitionRetryStrategyEvaluateOnExitArrayOutput {
	return o.ApplyT(func(v *JobDefinitionRetryStrategy) []JobDefinitionRetryStrategyEvaluateOnExit {
		if v == nil {
			return nil
		}
		return v.EvaluateOnExits
	}).(JobDefinitionRetryStrategyEvaluateOnExitArrayOutput)
}

type JobDefinitionRetryStrategyEvaluateOnExit struct {
	// Specifies the action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: `RETRY`, `EXIT`.
	Action string `pulumi:"action"`
	// A glob pattern to match against the decimal representation of the exit code returned for a job.
	OnExitCode *string `pulumi:"onExitCode"`
	// A glob pattern to match against the reason returned for a job.
	OnReason *string `pulumi:"onReason"`
	// A glob pattern to match against the status reason returned for a job.
	OnStatusReason *string `pulumi:"onStatusReason"`
}

// JobDefinitionRetryStrategyEvaluateOnExitInput is an input type that accepts JobDefinitionRetryStrategyEvaluateOnExitArgs and JobDefinitionRetryStrategyEvaluateOnExitOutput values.
// You can construct a concrete instance of `JobDefinitionRetryStrategyEvaluateOnExitInput` via:
//
//	JobDefinitionRetryStrategyEvaluateOnExitArgs{...}
type JobDefinitionRetryStrategyEvaluateOnExitInput interface {
	pulumi.Input

	ToJobDefinitionRetryStrategyEvaluateOnExitOutput() JobDefinitionRetryStrategyEvaluateOnExitOutput
	ToJobDefinitionRetryStrategyEvaluateOnExitOutputWithContext(context.Context) JobDefinitionRetryStrategyEvaluateOnExitOutput
}

type JobDefinitionRetryStrategyEvaluateOnExitArgs struct {
	// Specifies the action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: `RETRY`, `EXIT`.
	Action pulumi.StringInput `pulumi:"action"`
	// A glob pattern to match against the decimal representation of the exit code returned for a job.
	OnExitCode pulumi.StringPtrInput `pulumi:"onExitCode"`
	// A glob pattern to match against the reason returned for a job.
	OnReason pulumi.StringPtrInput `pulumi:"onReason"`
	// A glob pattern to match against the status reason returned for a job.
	OnStatusReason pulumi.StringPtrInput `pulumi:"onStatusReason"`
}

func (JobDefinitionRetryStrategyEvaluateOnExitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionRetryStrategyEvaluateOnExit)(nil)).Elem()
}

func (i JobDefinitionRetryStrategyEvaluateOnExitArgs) ToJobDefinitionRetryStrategyEvaluateOnExitOutput() JobDefinitionRetryStrategyEvaluateOnExitOutput {
	return i.ToJobDefinitionRetryStrategyEvaluateOnExitOutputWithContext(context.Background())
}

func (i JobDefinitionRetryStrategyEvaluateOnExitArgs) ToJobDefinitionRetryStrategyEvaluateOnExitOutputWithContext(ctx context.Context) JobDefinitionRetryStrategyEvaluateOnExitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionRetryStrategyEvaluateOnExitOutput)
}

// JobDefinitionRetryStrategyEvaluateOnExitArrayInput is an input type that accepts JobDefinitionRetryStrategyEvaluateOnExitArray and JobDefinitionRetryStrategyEvaluateOnExitArrayOutput values.
// You can construct a concrete instance of `JobDefinitionRetryStrategyEvaluateOnExitArrayInput` via:
//
//	JobDefinitionRetryStrategyEvaluateOnExitArray{ JobDefinitionRetryStrategyEvaluateOnExitArgs{...} }
type JobDefinitionRetryStrategyEvaluateOnExitArrayInput interface {
	pulumi.Input

	ToJobDefinitionRetryStrategyEvaluateOnExitArrayOutput() JobDefinitionRetryStrategyEvaluateOnExitArrayOutput
	ToJobDefinitionRetryStrategyEvaluateOnExitArrayOutputWithContext(context.Context) JobDefinitionRetryStrategyEvaluateOnExitArrayOutput
}

type JobDefinitionRetryStrategyEvaluateOnExitArray []JobDefinitionRetryStrategyEvaluateOnExitInput

func (JobDefinitionRetryStrategyEvaluateOnExitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDefinitionRetryStrategyEvaluateOnExit)(nil)).Elem()
}

func (i JobDefinitionRetryStrategyEvaluateOnExitArray) ToJobDefinitionRetryStrategyEvaluateOnExitArrayOutput() JobDefinitionRetryStrategyEvaluateOnExitArrayOutput {
	return i.ToJobDefinitionRetryStrategyEvaluateOnExitArrayOutputWithContext(context.Background())
}

func (i JobDefinitionRetryStrategyEvaluateOnExitArray) ToJobDefinitionRetryStrategyEvaluateOnExitArrayOutputWithContext(ctx context.Context) JobDefinitionRetryStrategyEvaluateOnExitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionRetryStrategyEvaluateOnExitArrayOutput)
}

type JobDefinitionRetryStrategyEvaluateOnExitOutput struct{ *pulumi.OutputState }

func (JobDefinitionRetryStrategyEvaluateOnExitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionRetryStrategyEvaluateOnExit)(nil)).Elem()
}

func (o JobDefinitionRetryStrategyEvaluateOnExitOutput) ToJobDefinitionRetryStrategyEvaluateOnExitOutput() JobDefinitionRetryStrategyEvaluateOnExitOutput {
	return o
}

func (o JobDefinitionRetryStrategyEvaluateOnExitOutput) ToJobDefinitionRetryStrategyEvaluateOnExitOutputWithContext(ctx context.Context) JobDefinitionRetryStrategyEvaluateOnExitOutput {
	return o
}

// Specifies the action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: `RETRY`, `EXIT`.
func (o JobDefinitionRetryStrategyEvaluateOnExitOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v JobDefinitionRetryStrategyEvaluateOnExit) string { return v.Action }).(pulumi.StringOutput)
}

// A glob pattern to match against the decimal representation of the exit code returned for a job.
func (o JobDefinitionRetryStrategyEvaluateOnExitOutput) OnExitCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDefinitionRetryStrategyEvaluateOnExit) *string { return v.OnExitCode }).(pulumi.StringPtrOutput)
}

// A glob pattern to match against the reason returned for a job.
func (o JobDefinitionRetryStrategyEvaluateOnExitOutput) OnReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDefinitionRetryStrategyEvaluateOnExit) *string { return v.OnReason }).(pulumi.StringPtrOutput)
}

// A glob pattern to match against the status reason returned for a job.
func (o JobDefinitionRetryStrategyEvaluateOnExitOutput) OnStatusReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDefinitionRetryStrategyEvaluateOnExit) *string { return v.OnStatusReason }).(pulumi.StringPtrOutput)
}

type JobDefinitionRetryStrategyEvaluateOnExitArrayOutput struct{ *pulumi.OutputState }

func (JobDefinitionRetryStrategyEvaluateOnExitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDefinitionRetryStrategyEvaluateOnExit)(nil)).Elem()
}

func (o JobDefinitionRetryStrategyEvaluateOnExitArrayOutput) ToJobDefinitionRetryStrategyEvaluateOnExitArrayOutput() JobDefinitionRetryStrategyEvaluateOnExitArrayOutput {
	return o
}

func (o JobDefinitionRetryStrategyEvaluateOnExitArrayOutput) ToJobDefinitionRetryStrategyEvaluateOnExitArrayOutputWithContext(ctx context.Context) JobDefinitionRetryStrategyEvaluateOnExitArrayOutput {
	return o
}

func (o JobDefinitionRetryStrategyEvaluateOnExitArrayOutput) Index(i pulumi.IntInput) JobDefinitionRetryStrategyEvaluateOnExitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobDefinitionRetryStrategyEvaluateOnExit {
		return vs[0].([]JobDefinitionRetryStrategyEvaluateOnExit)[vs[1].(int)]
	}).(JobDefinitionRetryStrategyEvaluateOnExitOutput)
}

type JobDefinitionTimeout struct {
	// The time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is `60` seconds.
	AttemptDurationSeconds *int `pulumi:"attemptDurationSeconds"`
}

// JobDefinitionTimeoutInput is an input type that accepts JobDefinitionTimeoutArgs and JobDefinitionTimeoutOutput values.
// You can construct a concrete instance of `JobDefinitionTimeoutInput` via:
//
//	JobDefinitionTimeoutArgs{...}
type JobDefinitionTimeoutInput interface {
	pulumi.Input

	ToJobDefinitionTimeoutOutput() JobDefinitionTimeoutOutput
	ToJobDefinitionTimeoutOutputWithContext(context.Context) JobDefinitionTimeoutOutput
}

type JobDefinitionTimeoutArgs struct {
	// The time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is `60` seconds.
	AttemptDurationSeconds pulumi.IntPtrInput `pulumi:"attemptDurationSeconds"`
}

func (JobDefinitionTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionTimeout)(nil)).Elem()
}

func (i JobDefinitionTimeoutArgs) ToJobDefinitionTimeoutOutput() JobDefinitionTimeoutOutput {
	return i.ToJobDefinitionTimeoutOutputWithContext(context.Background())
}

func (i JobDefinitionTimeoutArgs) ToJobDefinitionTimeoutOutputWithContext(ctx context.Context) JobDefinitionTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionTimeoutOutput)
}

func (i JobDefinitionTimeoutArgs) ToJobDefinitionTimeoutPtrOutput() JobDefinitionTimeoutPtrOutput {
	return i.ToJobDefinitionTimeoutPtrOutputWithContext(context.Background())
}

func (i JobDefinitionTimeoutArgs) ToJobDefinitionTimeoutPtrOutputWithContext(ctx context.Context) JobDefinitionTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionTimeoutOutput).ToJobDefinitionTimeoutPtrOutputWithContext(ctx)
}

// JobDefinitionTimeoutPtrInput is an input type that accepts JobDefinitionTimeoutArgs, JobDefinitionTimeoutPtr and JobDefinitionTimeoutPtrOutput values.
// You can construct a concrete instance of `JobDefinitionTimeoutPtrInput` via:
//
//	        JobDefinitionTimeoutArgs{...}
//
//	or:
//
//	        nil
type JobDefinitionTimeoutPtrInput interface {
	pulumi.Input

	ToJobDefinitionTimeoutPtrOutput() JobDefinitionTimeoutPtrOutput
	ToJobDefinitionTimeoutPtrOutputWithContext(context.Context) JobDefinitionTimeoutPtrOutput
}

type jobDefinitionTimeoutPtrType JobDefinitionTimeoutArgs

func JobDefinitionTimeoutPtr(v *JobDefinitionTimeoutArgs) JobDefinitionTimeoutPtrInput {
	return (*jobDefinitionTimeoutPtrType)(v)
}

func (*jobDefinitionTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionTimeout)(nil)).Elem()
}

func (i *jobDefinitionTimeoutPtrType) ToJobDefinitionTimeoutPtrOutput() JobDefinitionTimeoutPtrOutput {
	return i.ToJobDefinitionTimeoutPtrOutputWithContext(context.Background())
}

func (i *jobDefinitionTimeoutPtrType) ToJobDefinitionTimeoutPtrOutputWithContext(ctx context.Context) JobDefinitionTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionTimeoutPtrOutput)
}

type JobDefinitionTimeoutOutput struct{ *pulumi.OutputState }

func (JobDefinitionTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionTimeout)(nil)).Elem()
}

func (o JobDefinitionTimeoutOutput) ToJobDefinitionTimeoutOutput() JobDefinitionTimeoutOutput {
	return o
}

func (o JobDefinitionTimeoutOutput) ToJobDefinitionTimeoutOutputWithContext(ctx context.Context) JobDefinitionTimeoutOutput {
	return o
}

func (o JobDefinitionTimeoutOutput) ToJobDefinitionTimeoutPtrOutput() JobDefinitionTimeoutPtrOutput {
	return o.ToJobDefinitionTimeoutPtrOutputWithContext(context.Background())
}

func (o JobDefinitionTimeoutOutput) ToJobDefinitionTimeoutPtrOutputWithContext(ctx context.Context) JobDefinitionTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDefinitionTimeout) *JobDefinitionTimeout {
		return &v
	}).(JobDefinitionTimeoutPtrOutput)
}

// The time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is `60` seconds.
func (o JobDefinitionTimeoutOutput) AttemptDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobDefinitionTimeout) *int { return v.AttemptDurationSeconds }).(pulumi.IntPtrOutput)
}

type JobDefinitionTimeoutPtrOutput struct{ *pulumi.OutputState }

func (JobDefinitionTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionTimeout)(nil)).Elem()
}

func (o JobDefinitionTimeoutPtrOutput) ToJobDefinitionTimeoutPtrOutput() JobDefinitionTimeoutPtrOutput {
	return o
}

func (o JobDefinitionTimeoutPtrOutput) ToJobDefinitionTimeoutPtrOutputWithContext(ctx context.Context) JobDefinitionTimeoutPtrOutput {
	return o
}

func (o JobDefinitionTimeoutPtrOutput) Elem() JobDefinitionTimeoutOutput {
	return o.ApplyT(func(v *JobDefinitionTimeout) JobDefinitionTimeout {
		if v != nil {
			return *v
		}
		var ret JobDefinitionTimeout
		return ret
	}).(JobDefinitionTimeoutOutput)
}

// The time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is `60` seconds.
func (o JobDefinitionTimeoutPtrOutput) AttemptDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobDefinitionTimeout) *int {
		if v == nil {
			return nil
		}
		return v.AttemptDurationSeconds
	}).(pulumi.IntPtrOutput)
}

type JobQueueComputeEnvironmentOrder struct {
	// The Amazon Resource Name (ARN) of the compute environment.
	ComputeEnvironment string `pulumi:"computeEnvironment"`
	// The order of the compute environment. Compute environments are tried in ascending order. For example, if two compute environments are associated with a job queue, the compute environment with a lower order integer value is tried for job placement first.
	Order int `pulumi:"order"`
}

// JobQueueComputeEnvironmentOrderInput is an input type that accepts JobQueueComputeEnvironmentOrderArgs and JobQueueComputeEnvironmentOrderOutput values.
// You can construct a concrete instance of `JobQueueComputeEnvironmentOrderInput` via:
//
//	JobQueueComputeEnvironmentOrderArgs{...}
type JobQueueComputeEnvironmentOrderInput interface {
	pulumi.Input

	ToJobQueueComputeEnvironmentOrderOutput() JobQueueComputeEnvironmentOrderOutput
	ToJobQueueComputeEnvironmentOrderOutputWithContext(context.Context) JobQueueComputeEnvironmentOrderOutput
}

type JobQueueComputeEnvironmentOrderArgs struct {
	// The Amazon Resource Name (ARN) of the compute environment.
	ComputeEnvironment pulumi.StringInput `pulumi:"computeEnvironment"`
	// The order of the compute environment. Compute environments are tried in ascending order. For example, if two compute environments are associated with a job queue, the compute environment with a lower order integer value is tried for job placement first.
	Order pulumi.IntInput `pulumi:"order"`
}

func (JobQueueComputeEnvironmentOrderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobQueueComputeEnvironmentOrder)(nil)).Elem()
}

func (i JobQueueComputeEnvironmentOrderArgs) ToJobQueueComputeEnvironmentOrderOutput() JobQueueComputeEnvironmentOrderOutput {
	return i.ToJobQueueComputeEnvironmentOrderOutputWithContext(context.Background())
}

func (i JobQueueComputeEnvironmentOrderArgs) ToJobQueueComputeEnvironmentOrderOutputWithContext(ctx context.Context) JobQueueComputeEnvironmentOrderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobQueueComputeEnvironmentOrderOutput)
}

// JobQueueComputeEnvironmentOrderArrayInput is an input type that accepts JobQueueComputeEnvironmentOrderArray and JobQueueComputeEnvironmentOrderArrayOutput values.
// You can construct a concrete instance of `JobQueueComputeEnvironmentOrderArrayInput` via:
//
//	JobQueueComputeEnvironmentOrderArray{ JobQueueComputeEnvironmentOrderArgs{...} }
type JobQueueComputeEnvironmentOrderArrayInput interface {
	pulumi.Input

	ToJobQueueComputeEnvironmentOrderArrayOutput() JobQueueComputeEnvironmentOrderArrayOutput
	ToJobQueueComputeEnvironmentOrderArrayOutputWithContext(context.Context) JobQueueComputeEnvironmentOrderArrayOutput
}

type JobQueueComputeEnvironmentOrderArray []JobQueueComputeEnvironmentOrderInput

func (JobQueueComputeEnvironmentOrderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobQueueComputeEnvironmentOrder)(nil)).Elem()
}

func (i JobQueueComputeEnvironmentOrderArray) ToJobQueueComputeEnvironmentOrderArrayOutput() JobQueueComputeEnvironmentOrderArrayOutput {
	return i.ToJobQueueComputeEnvironmentOrderArrayOutputWithContext(context.Background())
}

func (i JobQueueComputeEnvironmentOrderArray) ToJobQueueComputeEnvironmentOrderArrayOutputWithContext(ctx context.Context) JobQueueComputeEnvironmentOrderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobQueueComputeEnvironmentOrderArrayOutput)
}

type JobQueueComputeEnvironmentOrderOutput struct{ *pulumi.OutputState }

func (JobQueueComputeEnvironmentOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobQueueComputeEnvironmentOrder)(nil)).Elem()
}

func (o JobQueueComputeEnvironmentOrderOutput) ToJobQueueComputeEnvironmentOrderOutput() JobQueueComputeEnvironmentOrderOutput {
	return o
}

func (o JobQueueComputeEnvironmentOrderOutput) ToJobQueueComputeEnvironmentOrderOutputWithContext(ctx context.Context) JobQueueComputeEnvironmentOrderOutput {
	return o
}

// The Amazon Resource Name (ARN) of the compute environment.
func (o JobQueueComputeEnvironmentOrderOutput) ComputeEnvironment() pulumi.StringOutput {
	return o.ApplyT(func(v JobQueueComputeEnvironmentOrder) string { return v.ComputeEnvironment }).(pulumi.StringOutput)
}

// The order of the compute environment. Compute environments are tried in ascending order. For example, if two compute environments are associated with a job queue, the compute environment with a lower order integer value is tried for job placement first.
func (o JobQueueComputeEnvironmentOrderOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v JobQueueComputeEnvironmentOrder) int { return v.Order }).(pulumi.IntOutput)
}

type JobQueueComputeEnvironmentOrderArrayOutput struct{ *pulumi.OutputState }

func (JobQueueComputeEnvironmentOrderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobQueueComputeEnvironmentOrder)(nil)).Elem()
}

func (o JobQueueComputeEnvironmentOrderArrayOutput) ToJobQueueComputeEnvironmentOrderArrayOutput() JobQueueComputeEnvironmentOrderArrayOutput {
	return o
}

func (o JobQueueComputeEnvironmentOrderArrayOutput) ToJobQueueComputeEnvironmentOrderArrayOutputWithContext(ctx context.Context) JobQueueComputeEnvironmentOrderArrayOutput {
	return o
}

func (o JobQueueComputeEnvironmentOrderArrayOutput) Index(i pulumi.IntInput) JobQueueComputeEnvironmentOrderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobQueueComputeEnvironmentOrder {
		return vs[0].([]JobQueueComputeEnvironmentOrder)[vs[1].(int)]
	}).(JobQueueComputeEnvironmentOrderOutput)
}

type JobQueueTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// JobQueueTimeoutsInput is an input type that accepts JobQueueTimeoutsArgs and JobQueueTimeoutsOutput values.
// You can construct a concrete instance of `JobQueueTimeoutsInput` via:
//
//	JobQueueTimeoutsArgs{...}
type JobQueueTimeoutsInput interface {
	pulumi.Input

	ToJobQueueTimeoutsOutput() JobQueueTimeoutsOutput
	ToJobQueueTimeoutsOutputWithContext(context.Context) JobQueueTimeoutsOutput
}

type JobQueueTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (JobQueueTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobQueueTimeouts)(nil)).Elem()
}

func (i JobQueueTimeoutsArgs) ToJobQueueTimeoutsOutput() JobQueueTimeoutsOutput {
	return i.ToJobQueueTimeoutsOutputWithContext(context.Background())
}

func (i JobQueueTimeoutsArgs) ToJobQueueTimeoutsOutputWithContext(ctx context.Context) JobQueueTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobQueueTimeoutsOutput)
}

func (i JobQueueTimeoutsArgs) ToJobQueueTimeoutsPtrOutput() JobQueueTimeoutsPtrOutput {
	return i.ToJobQueueTimeoutsPtrOutputWithContext(context.Background())
}

func (i JobQueueTimeoutsArgs) ToJobQueueTimeoutsPtrOutputWithContext(ctx context.Context) JobQueueTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobQueueTimeoutsOutput).ToJobQueueTimeoutsPtrOutputWithContext(ctx)
}

// JobQueueTimeoutsPtrInput is an input type that accepts JobQueueTimeoutsArgs, JobQueueTimeoutsPtr and JobQueueTimeoutsPtrOutput values.
// You can construct a concrete instance of `JobQueueTimeoutsPtrInput` via:
//
//	        JobQueueTimeoutsArgs{...}
//
//	or:
//
//	        nil
type JobQueueTimeoutsPtrInput interface {
	pulumi.Input

	ToJobQueueTimeoutsPtrOutput() JobQueueTimeoutsPtrOutput
	ToJobQueueTimeoutsPtrOutputWithContext(context.Context) JobQueueTimeoutsPtrOutput
}

type jobQueueTimeoutsPtrType JobQueueTimeoutsArgs

func JobQueueTimeoutsPtr(v *JobQueueTimeoutsArgs) JobQueueTimeoutsPtrInput {
	return (*jobQueueTimeoutsPtrType)(v)
}

func (*jobQueueTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobQueueTimeouts)(nil)).Elem()
}

func (i *jobQueueTimeoutsPtrType) ToJobQueueTimeoutsPtrOutput() JobQueueTimeoutsPtrOutput {
	return i.ToJobQueueTimeoutsPtrOutputWithContext(context.Background())
}

func (i *jobQueueTimeoutsPtrType) ToJobQueueTimeoutsPtrOutputWithContext(ctx context.Context) JobQueueTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobQueueTimeoutsPtrOutput)
}

type JobQueueTimeoutsOutput struct{ *pulumi.OutputState }

func (JobQueueTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobQueueTimeouts)(nil)).Elem()
}

func (o JobQueueTimeoutsOutput) ToJobQueueTimeoutsOutput() JobQueueTimeoutsOutput {
	return o
}

func (o JobQueueTimeoutsOutput) ToJobQueueTimeoutsOutputWithContext(ctx context.Context) JobQueueTimeoutsOutput {
	return o
}

func (o JobQueueTimeoutsOutput) ToJobQueueTimeoutsPtrOutput() JobQueueTimeoutsPtrOutput {
	return o.ToJobQueueTimeoutsPtrOutputWithContext(context.Background())
}

func (o JobQueueTimeoutsOutput) ToJobQueueTimeoutsPtrOutputWithContext(ctx context.Context) JobQueueTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobQueueTimeouts) *JobQueueTimeouts {
		return &v
	}).(JobQueueTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o JobQueueTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobQueueTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o JobQueueTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobQueueTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o JobQueueTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobQueueTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type JobQueueTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (JobQueueTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobQueueTimeouts)(nil)).Elem()
}

func (o JobQueueTimeoutsPtrOutput) ToJobQueueTimeoutsPtrOutput() JobQueueTimeoutsPtrOutput {
	return o
}

func (o JobQueueTimeoutsPtrOutput) ToJobQueueTimeoutsPtrOutputWithContext(ctx context.Context) JobQueueTimeoutsPtrOutput {
	return o
}

func (o JobQueueTimeoutsPtrOutput) Elem() JobQueueTimeoutsOutput {
	return o.ApplyT(func(v *JobQueueTimeouts) JobQueueTimeouts {
		if v != nil {
			return *v
		}
		var ret JobQueueTimeouts
		return ret
	}).(JobQueueTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o JobQueueTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobQueueTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o JobQueueTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobQueueTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o JobQueueTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobQueueTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type SchedulingPolicyFairSharePolicy struct {
	// A value used to reserve some of the available maximum vCPU for fair share identifiers that have not yet been used. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html).
	ComputeReservation *int `pulumi:"computeReservation"`
	ShareDecaySeconds  *int `pulumi:"shareDecaySeconds"`
	// One or more share distribution blocks which define the weights for the fair share identifiers for the fair share policy. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html). The `shareDistribution` block is documented below.
	ShareDistributions []SchedulingPolicyFairSharePolicyShareDistribution `pulumi:"shareDistributions"`
}

// SchedulingPolicyFairSharePolicyInput is an input type that accepts SchedulingPolicyFairSharePolicyArgs and SchedulingPolicyFairSharePolicyOutput values.
// You can construct a concrete instance of `SchedulingPolicyFairSharePolicyInput` via:
//
//	SchedulingPolicyFairSharePolicyArgs{...}
type SchedulingPolicyFairSharePolicyInput interface {
	pulumi.Input

	ToSchedulingPolicyFairSharePolicyOutput() SchedulingPolicyFairSharePolicyOutput
	ToSchedulingPolicyFairSharePolicyOutputWithContext(context.Context) SchedulingPolicyFairSharePolicyOutput
}

type SchedulingPolicyFairSharePolicyArgs struct {
	// A value used to reserve some of the available maximum vCPU for fair share identifiers that have not yet been used. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html).
	ComputeReservation pulumi.IntPtrInput `pulumi:"computeReservation"`
	ShareDecaySeconds  pulumi.IntPtrInput `pulumi:"shareDecaySeconds"`
	// One or more share distribution blocks which define the weights for the fair share identifiers for the fair share policy. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html). The `shareDistribution` block is documented below.
	ShareDistributions SchedulingPolicyFairSharePolicyShareDistributionArrayInput `pulumi:"shareDistributions"`
}

func (SchedulingPolicyFairSharePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulingPolicyFairSharePolicy)(nil)).Elem()
}

func (i SchedulingPolicyFairSharePolicyArgs) ToSchedulingPolicyFairSharePolicyOutput() SchedulingPolicyFairSharePolicyOutput {
	return i.ToSchedulingPolicyFairSharePolicyOutputWithContext(context.Background())
}

func (i SchedulingPolicyFairSharePolicyArgs) ToSchedulingPolicyFairSharePolicyOutputWithContext(ctx context.Context) SchedulingPolicyFairSharePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulingPolicyFairSharePolicyOutput)
}

func (i SchedulingPolicyFairSharePolicyArgs) ToSchedulingPolicyFairSharePolicyPtrOutput() SchedulingPolicyFairSharePolicyPtrOutput {
	return i.ToSchedulingPolicyFairSharePolicyPtrOutputWithContext(context.Background())
}

func (i SchedulingPolicyFairSharePolicyArgs) ToSchedulingPolicyFairSharePolicyPtrOutputWithContext(ctx context.Context) SchedulingPolicyFairSharePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulingPolicyFairSharePolicyOutput).ToSchedulingPolicyFairSharePolicyPtrOutputWithContext(ctx)
}

// SchedulingPolicyFairSharePolicyPtrInput is an input type that accepts SchedulingPolicyFairSharePolicyArgs, SchedulingPolicyFairSharePolicyPtr and SchedulingPolicyFairSharePolicyPtrOutput values.
// You can construct a concrete instance of `SchedulingPolicyFairSharePolicyPtrInput` via:
//
//	        SchedulingPolicyFairSharePolicyArgs{...}
//
//	or:
//
//	        nil
type SchedulingPolicyFairSharePolicyPtrInput interface {
	pulumi.Input

	ToSchedulingPolicyFairSharePolicyPtrOutput() SchedulingPolicyFairSharePolicyPtrOutput
	ToSchedulingPolicyFairSharePolicyPtrOutputWithContext(context.Context) SchedulingPolicyFairSharePolicyPtrOutput
}

type schedulingPolicyFairSharePolicyPtrType SchedulingPolicyFairSharePolicyArgs

func SchedulingPolicyFairSharePolicyPtr(v *SchedulingPolicyFairSharePolicyArgs) SchedulingPolicyFairSharePolicyPtrInput {
	return (*schedulingPolicyFairSharePolicyPtrType)(v)
}

func (*schedulingPolicyFairSharePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchedulingPolicyFairSharePolicy)(nil)).Elem()
}

func (i *schedulingPolicyFairSharePolicyPtrType) ToSchedulingPolicyFairSharePolicyPtrOutput() SchedulingPolicyFairSharePolicyPtrOutput {
	return i.ToSchedulingPolicyFairSharePolicyPtrOutputWithContext(context.Background())
}

func (i *schedulingPolicyFairSharePolicyPtrType) ToSchedulingPolicyFairSharePolicyPtrOutputWithContext(ctx context.Context) SchedulingPolicyFairSharePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulingPolicyFairSharePolicyPtrOutput)
}

type SchedulingPolicyFairSharePolicyOutput struct{ *pulumi.OutputState }

func (SchedulingPolicyFairSharePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulingPolicyFairSharePolicy)(nil)).Elem()
}

func (o SchedulingPolicyFairSharePolicyOutput) ToSchedulingPolicyFairSharePolicyOutput() SchedulingPolicyFairSharePolicyOutput {
	return o
}

func (o SchedulingPolicyFairSharePolicyOutput) ToSchedulingPolicyFairSharePolicyOutputWithContext(ctx context.Context) SchedulingPolicyFairSharePolicyOutput {
	return o
}

func (o SchedulingPolicyFairSharePolicyOutput) ToSchedulingPolicyFairSharePolicyPtrOutput() SchedulingPolicyFairSharePolicyPtrOutput {
	return o.ToSchedulingPolicyFairSharePolicyPtrOutputWithContext(context.Background())
}

func (o SchedulingPolicyFairSharePolicyOutput) ToSchedulingPolicyFairSharePolicyPtrOutputWithContext(ctx context.Context) SchedulingPolicyFairSharePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchedulingPolicyFairSharePolicy) *SchedulingPolicyFairSharePolicy {
		return &v
	}).(SchedulingPolicyFairSharePolicyPtrOutput)
}

// A value used to reserve some of the available maximum vCPU for fair share identifiers that have not yet been used. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html).
func (o SchedulingPolicyFairSharePolicyOutput) ComputeReservation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SchedulingPolicyFairSharePolicy) *int { return v.ComputeReservation }).(pulumi.IntPtrOutput)
}

func (o SchedulingPolicyFairSharePolicyOutput) ShareDecaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SchedulingPolicyFairSharePolicy) *int { return v.ShareDecaySeconds }).(pulumi.IntPtrOutput)
}

// One or more share distribution blocks which define the weights for the fair share identifiers for the fair share policy. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html). The `shareDistribution` block is documented below.
func (o SchedulingPolicyFairSharePolicyOutput) ShareDistributions() SchedulingPolicyFairSharePolicyShareDistributionArrayOutput {
	return o.ApplyT(func(v SchedulingPolicyFairSharePolicy) []SchedulingPolicyFairSharePolicyShareDistribution {
		return v.ShareDistributions
	}).(SchedulingPolicyFairSharePolicyShareDistributionArrayOutput)
}

type SchedulingPolicyFairSharePolicyPtrOutput struct{ *pulumi.OutputState }

func (SchedulingPolicyFairSharePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchedulingPolicyFairSharePolicy)(nil)).Elem()
}

func (o SchedulingPolicyFairSharePolicyPtrOutput) ToSchedulingPolicyFairSharePolicyPtrOutput() SchedulingPolicyFairSharePolicyPtrOutput {
	return o
}

func (o SchedulingPolicyFairSharePolicyPtrOutput) ToSchedulingPolicyFairSharePolicyPtrOutputWithContext(ctx context.Context) SchedulingPolicyFairSharePolicyPtrOutput {
	return o
}

func (o SchedulingPolicyFairSharePolicyPtrOutput) Elem() SchedulingPolicyFairSharePolicyOutput {
	return o.ApplyT(func(v *SchedulingPolicyFairSharePolicy) SchedulingPolicyFairSharePolicy {
		if v != nil {
			return *v
		}
		var ret SchedulingPolicyFairSharePolicy
		return ret
	}).(SchedulingPolicyFairSharePolicyOutput)
}

// A value used to reserve some of the available maximum vCPU for fair share identifiers that have not yet been used. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html).
func (o SchedulingPolicyFairSharePolicyPtrOutput) ComputeReservation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SchedulingPolicyFairSharePolicy) *int {
		if v == nil {
			return nil
		}
		return v.ComputeReservation
	}).(pulumi.IntPtrOutput)
}

func (o SchedulingPolicyFairSharePolicyPtrOutput) ShareDecaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SchedulingPolicyFairSharePolicy) *int {
		if v == nil {
			return nil
		}
		return v.ShareDecaySeconds
	}).(pulumi.IntPtrOutput)
}

// One or more share distribution blocks which define the weights for the fair share identifiers for the fair share policy. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html). The `shareDistribution` block is documented below.
func (o SchedulingPolicyFairSharePolicyPtrOutput) ShareDistributions() SchedulingPolicyFairSharePolicyShareDistributionArrayOutput {
	return o.ApplyT(func(v *SchedulingPolicyFairSharePolicy) []SchedulingPolicyFairSharePolicyShareDistribution {
		if v == nil {
			return nil
		}
		return v.ShareDistributions
	}).(SchedulingPolicyFairSharePolicyShareDistributionArrayOutput)
}

type SchedulingPolicyFairSharePolicyShareDistribution struct {
	// A fair share identifier or fair share identifier prefix. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html).
	ShareIdentifier string `pulumi:"shareIdentifier"`
	// The weight factor for the fair share identifier. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html).
	WeightFactor *float64 `pulumi:"weightFactor"`
}

// SchedulingPolicyFairSharePolicyShareDistributionInput is an input type that accepts SchedulingPolicyFairSharePolicyShareDistributionArgs and SchedulingPolicyFairSharePolicyShareDistributionOutput values.
// You can construct a concrete instance of `SchedulingPolicyFairSharePolicyShareDistributionInput` via:
//
//	SchedulingPolicyFairSharePolicyShareDistributionArgs{...}
type SchedulingPolicyFairSharePolicyShareDistributionInput interface {
	pulumi.Input

	ToSchedulingPolicyFairSharePolicyShareDistributionOutput() SchedulingPolicyFairSharePolicyShareDistributionOutput
	ToSchedulingPolicyFairSharePolicyShareDistributionOutputWithContext(context.Context) SchedulingPolicyFairSharePolicyShareDistributionOutput
}

type SchedulingPolicyFairSharePolicyShareDistributionArgs struct {
	// A fair share identifier or fair share identifier prefix. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html).
	ShareIdentifier pulumi.StringInput `pulumi:"shareIdentifier"`
	// The weight factor for the fair share identifier. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html).
	WeightFactor pulumi.Float64PtrInput `pulumi:"weightFactor"`
}

func (SchedulingPolicyFairSharePolicyShareDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulingPolicyFairSharePolicyShareDistribution)(nil)).Elem()
}

func (i SchedulingPolicyFairSharePolicyShareDistributionArgs) ToSchedulingPolicyFairSharePolicyShareDistributionOutput() SchedulingPolicyFairSharePolicyShareDistributionOutput {
	return i.ToSchedulingPolicyFairSharePolicyShareDistributionOutputWithContext(context.Background())
}

func (i SchedulingPolicyFairSharePolicyShareDistributionArgs) ToSchedulingPolicyFairSharePolicyShareDistributionOutputWithContext(ctx context.Context) SchedulingPolicyFairSharePolicyShareDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulingPolicyFairSharePolicyShareDistributionOutput)
}

// SchedulingPolicyFairSharePolicyShareDistributionArrayInput is an input type that accepts SchedulingPolicyFairSharePolicyShareDistributionArray and SchedulingPolicyFairSharePolicyShareDistributionArrayOutput values.
// You can construct a concrete instance of `SchedulingPolicyFairSharePolicyShareDistributionArrayInput` via:
//
//	SchedulingPolicyFairSharePolicyShareDistributionArray{ SchedulingPolicyFairSharePolicyShareDistributionArgs{...} }
type SchedulingPolicyFairSharePolicyShareDistributionArrayInput interface {
	pulumi.Input

	ToSchedulingPolicyFairSharePolicyShareDistributionArrayOutput() SchedulingPolicyFairSharePolicyShareDistributionArrayOutput
	ToSchedulingPolicyFairSharePolicyShareDistributionArrayOutputWithContext(context.Context) SchedulingPolicyFairSharePolicyShareDistributionArrayOutput
}

type SchedulingPolicyFairSharePolicyShareDistributionArray []SchedulingPolicyFairSharePolicyShareDistributionInput

func (SchedulingPolicyFairSharePolicyShareDistributionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchedulingPolicyFairSharePolicyShareDistribution)(nil)).Elem()
}

func (i SchedulingPolicyFairSharePolicyShareDistributionArray) ToSchedulingPolicyFairSharePolicyShareDistributionArrayOutput() SchedulingPolicyFairSharePolicyShareDistributionArrayOutput {
	return i.ToSchedulingPolicyFairSharePolicyShareDistributionArrayOutputWithContext(context.Background())
}

func (i SchedulingPolicyFairSharePolicyShareDistributionArray) ToSchedulingPolicyFairSharePolicyShareDistributionArrayOutputWithContext(ctx context.Context) SchedulingPolicyFairSharePolicyShareDistributionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulingPolicyFairSharePolicyShareDistributionArrayOutput)
}

type SchedulingPolicyFairSharePolicyShareDistributionOutput struct{ *pulumi.OutputState }

func (SchedulingPolicyFairSharePolicyShareDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulingPolicyFairSharePolicyShareDistribution)(nil)).Elem()
}

func (o SchedulingPolicyFairSharePolicyShareDistributionOutput) ToSchedulingPolicyFairSharePolicyShareDistributionOutput() SchedulingPolicyFairSharePolicyShareDistributionOutput {
	return o
}

func (o SchedulingPolicyFairSharePolicyShareDistributionOutput) ToSchedulingPolicyFairSharePolicyShareDistributionOutputWithContext(ctx context.Context) SchedulingPolicyFairSharePolicyShareDistributionOutput {
	return o
}

// A fair share identifier or fair share identifier prefix. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html).
func (o SchedulingPolicyFairSharePolicyShareDistributionOutput) ShareIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v SchedulingPolicyFairSharePolicyShareDistribution) string { return v.ShareIdentifier }).(pulumi.StringOutput)
}

// The weight factor for the fair share identifier. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html).
func (o SchedulingPolicyFairSharePolicyShareDistributionOutput) WeightFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SchedulingPolicyFairSharePolicyShareDistribution) *float64 { return v.WeightFactor }).(pulumi.Float64PtrOutput)
}

type SchedulingPolicyFairSharePolicyShareDistributionArrayOutput struct{ *pulumi.OutputState }

func (SchedulingPolicyFairSharePolicyShareDistributionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchedulingPolicyFairSharePolicyShareDistribution)(nil)).Elem()
}

func (o SchedulingPolicyFairSharePolicyShareDistributionArrayOutput) ToSchedulingPolicyFairSharePolicyShareDistributionArrayOutput() SchedulingPolicyFairSharePolicyShareDistributionArrayOutput {
	return o
}

func (o SchedulingPolicyFairSharePolicyShareDistributionArrayOutput) ToSchedulingPolicyFairSharePolicyShareDistributionArrayOutputWithContext(ctx context.Context) SchedulingPolicyFairSharePolicyShareDistributionArrayOutput {
	return o
}

func (o SchedulingPolicyFairSharePolicyShareDistributionArrayOutput) Index(i pulumi.IntInput) SchedulingPolicyFairSharePolicyShareDistributionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SchedulingPolicyFairSharePolicyShareDistribution {
		return vs[0].([]SchedulingPolicyFairSharePolicyShareDistribution)[vs[1].(int)]
	}).(SchedulingPolicyFairSharePolicyShareDistributionOutput)
}

type GetComputeEnvironmentUpdatePolicy struct {
	JobExecutionTimeoutMinutes int  `pulumi:"jobExecutionTimeoutMinutes"`
	TerminateJobsOnUpdate      bool `pulumi:"terminateJobsOnUpdate"`
}

// GetComputeEnvironmentUpdatePolicyInput is an input type that accepts GetComputeEnvironmentUpdatePolicyArgs and GetComputeEnvironmentUpdatePolicyOutput values.
// You can construct a concrete instance of `GetComputeEnvironmentUpdatePolicyInput` via:
//
//	GetComputeEnvironmentUpdatePolicyArgs{...}
type GetComputeEnvironmentUpdatePolicyInput interface {
	pulumi.Input

	ToGetComputeEnvironmentUpdatePolicyOutput() GetComputeEnvironmentUpdatePolicyOutput
	ToGetComputeEnvironmentUpdatePolicyOutputWithContext(context.Context) GetComputeEnvironmentUpdatePolicyOutput
}

type GetComputeEnvironmentUpdatePolicyArgs struct {
	JobExecutionTimeoutMinutes pulumi.IntInput  `pulumi:"jobExecutionTimeoutMinutes"`
	TerminateJobsOnUpdate      pulumi.BoolInput `pulumi:"terminateJobsOnUpdate"`
}

func (GetComputeEnvironmentUpdatePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeEnvironmentUpdatePolicy)(nil)).Elem()
}

func (i GetComputeEnvironmentUpdatePolicyArgs) ToGetComputeEnvironmentUpdatePolicyOutput() GetComputeEnvironmentUpdatePolicyOutput {
	return i.ToGetComputeEnvironmentUpdatePolicyOutputWithContext(context.Background())
}

func (i GetComputeEnvironmentUpdatePolicyArgs) ToGetComputeEnvironmentUpdatePolicyOutputWithContext(ctx context.Context) GetComputeEnvironmentUpdatePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeEnvironmentUpdatePolicyOutput)
}

// GetComputeEnvironmentUpdatePolicyArrayInput is an input type that accepts GetComputeEnvironmentUpdatePolicyArray and GetComputeEnvironmentUpdatePolicyArrayOutput values.
// You can construct a concrete instance of `GetComputeEnvironmentUpdatePolicyArrayInput` via:
//
//	GetComputeEnvironmentUpdatePolicyArray{ GetComputeEnvironmentUpdatePolicyArgs{...} }
type GetComputeEnvironmentUpdatePolicyArrayInput interface {
	pulumi.Input

	ToGetComputeEnvironmentUpdatePolicyArrayOutput() GetComputeEnvironmentUpdatePolicyArrayOutput
	ToGetComputeEnvironmentUpdatePolicyArrayOutputWithContext(context.Context) GetComputeEnvironmentUpdatePolicyArrayOutput
}

type GetComputeEnvironmentUpdatePolicyArray []GetComputeEnvironmentUpdatePolicyInput

func (GetComputeEnvironmentUpdatePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeEnvironmentUpdatePolicy)(nil)).Elem()
}

func (i GetComputeEnvironmentUpdatePolicyArray) ToGetComputeEnvironmentUpdatePolicyArrayOutput() GetComputeEnvironmentUpdatePolicyArrayOutput {
	return i.ToGetComputeEnvironmentUpdatePolicyArrayOutputWithContext(context.Background())
}

func (i GetComputeEnvironmentUpdatePolicyArray) ToGetComputeEnvironmentUpdatePolicyArrayOutputWithContext(ctx context.Context) GetComputeEnvironmentUpdatePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComputeEnvironmentUpdatePolicyArrayOutput)
}

type GetComputeEnvironmentUpdatePolicyOutput struct{ *pulumi.OutputState }

func (GetComputeEnvironmentUpdatePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeEnvironmentUpdatePolicy)(nil)).Elem()
}

func (o GetComputeEnvironmentUpdatePolicyOutput) ToGetComputeEnvironmentUpdatePolicyOutput() GetComputeEnvironmentUpdatePolicyOutput {
	return o
}

func (o GetComputeEnvironmentUpdatePolicyOutput) ToGetComputeEnvironmentUpdatePolicyOutputWithContext(ctx context.Context) GetComputeEnvironmentUpdatePolicyOutput {
	return o
}

func (o GetComputeEnvironmentUpdatePolicyOutput) JobExecutionTimeoutMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetComputeEnvironmentUpdatePolicy) int { return v.JobExecutionTimeoutMinutes }).(pulumi.IntOutput)
}

func (o GetComputeEnvironmentUpdatePolicyOutput) TerminateJobsOnUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetComputeEnvironmentUpdatePolicy) bool { return v.TerminateJobsOnUpdate }).(pulumi.BoolOutput)
}

type GetComputeEnvironmentUpdatePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetComputeEnvironmentUpdatePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComputeEnvironmentUpdatePolicy)(nil)).Elem()
}

func (o GetComputeEnvironmentUpdatePolicyArrayOutput) ToGetComputeEnvironmentUpdatePolicyArrayOutput() GetComputeEnvironmentUpdatePolicyArrayOutput {
	return o
}

func (o GetComputeEnvironmentUpdatePolicyArrayOutput) ToGetComputeEnvironmentUpdatePolicyArrayOutputWithContext(ctx context.Context) GetComputeEnvironmentUpdatePolicyArrayOutput {
	return o
}

func (o GetComputeEnvironmentUpdatePolicyArrayOutput) Index(i pulumi.IntInput) GetComputeEnvironmentUpdatePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComputeEnvironmentUpdatePolicy {
		return vs[0].([]GetComputeEnvironmentUpdatePolicy)[vs[1].(int)]
	}).(GetComputeEnvironmentUpdatePolicyOutput)
}

type GetJobDefinitionEksProperty struct {
	// The properties for the Kubernetes pod resources of a job.
	PodProperties []interface{} `pulumi:"podProperties"`
}

// GetJobDefinitionEksPropertyInput is an input type that accepts GetJobDefinitionEksPropertyArgs and GetJobDefinitionEksPropertyOutput values.
// You can construct a concrete instance of `GetJobDefinitionEksPropertyInput` via:
//
//	GetJobDefinitionEksPropertyArgs{...}
type GetJobDefinitionEksPropertyInput interface {
	pulumi.Input

	ToGetJobDefinitionEksPropertyOutput() GetJobDefinitionEksPropertyOutput
	ToGetJobDefinitionEksPropertyOutputWithContext(context.Context) GetJobDefinitionEksPropertyOutput
}

type GetJobDefinitionEksPropertyArgs struct {
	// The properties for the Kubernetes pod resources of a job.
	PodProperties pulumi.ArrayInput `pulumi:"podProperties"`
}

func (GetJobDefinitionEksPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobDefinitionEksProperty)(nil)).Elem()
}

func (i GetJobDefinitionEksPropertyArgs) ToGetJobDefinitionEksPropertyOutput() GetJobDefinitionEksPropertyOutput {
	return i.ToGetJobDefinitionEksPropertyOutputWithContext(context.Background())
}

func (i GetJobDefinitionEksPropertyArgs) ToGetJobDefinitionEksPropertyOutputWithContext(ctx context.Context) GetJobDefinitionEksPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobDefinitionEksPropertyOutput)
}

// GetJobDefinitionEksPropertyArrayInput is an input type that accepts GetJobDefinitionEksPropertyArray and GetJobDefinitionEksPropertyArrayOutput values.
// You can construct a concrete instance of `GetJobDefinitionEksPropertyArrayInput` via:
//
//	GetJobDefinitionEksPropertyArray{ GetJobDefinitionEksPropertyArgs{...} }
type GetJobDefinitionEksPropertyArrayInput interface {
	pulumi.Input

	ToGetJobDefinitionEksPropertyArrayOutput() GetJobDefinitionEksPropertyArrayOutput
	ToGetJobDefinitionEksPropertyArrayOutputWithContext(context.Context) GetJobDefinitionEksPropertyArrayOutput
}

type GetJobDefinitionEksPropertyArray []GetJobDefinitionEksPropertyInput

func (GetJobDefinitionEksPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobDefinitionEksProperty)(nil)).Elem()
}

func (i GetJobDefinitionEksPropertyArray) ToGetJobDefinitionEksPropertyArrayOutput() GetJobDefinitionEksPropertyArrayOutput {
	return i.ToGetJobDefinitionEksPropertyArrayOutputWithContext(context.Background())
}

func (i GetJobDefinitionEksPropertyArray) ToGetJobDefinitionEksPropertyArrayOutputWithContext(ctx context.Context) GetJobDefinitionEksPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobDefinitionEksPropertyArrayOutput)
}

type GetJobDefinitionEksPropertyOutput struct{ *pulumi.OutputState }

func (GetJobDefinitionEksPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobDefinitionEksProperty)(nil)).Elem()
}

func (o GetJobDefinitionEksPropertyOutput) ToGetJobDefinitionEksPropertyOutput() GetJobDefinitionEksPropertyOutput {
	return o
}

func (o GetJobDefinitionEksPropertyOutput) ToGetJobDefinitionEksPropertyOutputWithContext(ctx context.Context) GetJobDefinitionEksPropertyOutput {
	return o
}

// The properties for the Kubernetes pod resources of a job.
func (o GetJobDefinitionEksPropertyOutput) PodProperties() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetJobDefinitionEksProperty) []interface{} { return v.PodProperties }).(pulumi.ArrayOutput)
}

type GetJobDefinitionEksPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetJobDefinitionEksPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobDefinitionEksProperty)(nil)).Elem()
}

func (o GetJobDefinitionEksPropertyArrayOutput) ToGetJobDefinitionEksPropertyArrayOutput() GetJobDefinitionEksPropertyArrayOutput {
	return o
}

func (o GetJobDefinitionEksPropertyArrayOutput) ToGetJobDefinitionEksPropertyArrayOutputWithContext(ctx context.Context) GetJobDefinitionEksPropertyArrayOutput {
	return o
}

func (o GetJobDefinitionEksPropertyArrayOutput) Index(i pulumi.IntInput) GetJobDefinitionEksPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobDefinitionEksProperty {
		return vs[0].([]GetJobDefinitionEksProperty)[vs[1].(int)]
	}).(GetJobDefinitionEksPropertyOutput)
}

type GetJobDefinitionNodeProperty struct {
	// Specifies the node index for the main node of a multi-node parallel job. This node index value must be fewer than the number of nodes.
	MainNode int `pulumi:"mainNode"`
	// A list of node ranges and their properties that are associated with a multi-node parallel job.
	NodeRangeProperties []interface{} `pulumi:"nodeRangeProperties"`
	// The number of nodes that are associated with a multi-node parallel job.
	NumNodes int `pulumi:"numNodes"`
}

// GetJobDefinitionNodePropertyInput is an input type that accepts GetJobDefinitionNodePropertyArgs and GetJobDefinitionNodePropertyOutput values.
// You can construct a concrete instance of `GetJobDefinitionNodePropertyInput` via:
//
//	GetJobDefinitionNodePropertyArgs{...}
type GetJobDefinitionNodePropertyInput interface {
	pulumi.Input

	ToGetJobDefinitionNodePropertyOutput() GetJobDefinitionNodePropertyOutput
	ToGetJobDefinitionNodePropertyOutputWithContext(context.Context) GetJobDefinitionNodePropertyOutput
}

type GetJobDefinitionNodePropertyArgs struct {
	// Specifies the node index for the main node of a multi-node parallel job. This node index value must be fewer than the number of nodes.
	MainNode pulumi.IntInput `pulumi:"mainNode"`
	// A list of node ranges and their properties that are associated with a multi-node parallel job.
	NodeRangeProperties pulumi.ArrayInput `pulumi:"nodeRangeProperties"`
	// The number of nodes that are associated with a multi-node parallel job.
	NumNodes pulumi.IntInput `pulumi:"numNodes"`
}

func (GetJobDefinitionNodePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobDefinitionNodeProperty)(nil)).Elem()
}

func (i GetJobDefinitionNodePropertyArgs) ToGetJobDefinitionNodePropertyOutput() GetJobDefinitionNodePropertyOutput {
	return i.ToGetJobDefinitionNodePropertyOutputWithContext(context.Background())
}

func (i GetJobDefinitionNodePropertyArgs) ToGetJobDefinitionNodePropertyOutputWithContext(ctx context.Context) GetJobDefinitionNodePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobDefinitionNodePropertyOutput)
}

// GetJobDefinitionNodePropertyArrayInput is an input type that accepts GetJobDefinitionNodePropertyArray and GetJobDefinitionNodePropertyArrayOutput values.
// You can construct a concrete instance of `GetJobDefinitionNodePropertyArrayInput` via:
//
//	GetJobDefinitionNodePropertyArray{ GetJobDefinitionNodePropertyArgs{...} }
type GetJobDefinitionNodePropertyArrayInput interface {
	pulumi.Input

	ToGetJobDefinitionNodePropertyArrayOutput() GetJobDefinitionNodePropertyArrayOutput
	ToGetJobDefinitionNodePropertyArrayOutputWithContext(context.Context) GetJobDefinitionNodePropertyArrayOutput
}

type GetJobDefinitionNodePropertyArray []GetJobDefinitionNodePropertyInput

func (GetJobDefinitionNodePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobDefinitionNodeProperty)(nil)).Elem()
}

func (i GetJobDefinitionNodePropertyArray) ToGetJobDefinitionNodePropertyArrayOutput() GetJobDefinitionNodePropertyArrayOutput {
	return i.ToGetJobDefinitionNodePropertyArrayOutputWithContext(context.Background())
}

func (i GetJobDefinitionNodePropertyArray) ToGetJobDefinitionNodePropertyArrayOutputWithContext(ctx context.Context) GetJobDefinitionNodePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobDefinitionNodePropertyArrayOutput)
}

type GetJobDefinitionNodePropertyOutput struct{ *pulumi.OutputState }

func (GetJobDefinitionNodePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobDefinitionNodeProperty)(nil)).Elem()
}

func (o GetJobDefinitionNodePropertyOutput) ToGetJobDefinitionNodePropertyOutput() GetJobDefinitionNodePropertyOutput {
	return o
}

func (o GetJobDefinitionNodePropertyOutput) ToGetJobDefinitionNodePropertyOutputWithContext(ctx context.Context) GetJobDefinitionNodePropertyOutput {
	return o
}

// Specifies the node index for the main node of a multi-node parallel job. This node index value must be fewer than the number of nodes.
func (o GetJobDefinitionNodePropertyOutput) MainNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobDefinitionNodeProperty) int { return v.MainNode }).(pulumi.IntOutput)
}

// A list of node ranges and their properties that are associated with a multi-node parallel job.
func (o GetJobDefinitionNodePropertyOutput) NodeRangeProperties() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetJobDefinitionNodeProperty) []interface{} { return v.NodeRangeProperties }).(pulumi.ArrayOutput)
}

// The number of nodes that are associated with a multi-node parallel job.
func (o GetJobDefinitionNodePropertyOutput) NumNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobDefinitionNodeProperty) int { return v.NumNodes }).(pulumi.IntOutput)
}

type GetJobDefinitionNodePropertyArrayOutput struct{ *pulumi.OutputState }

func (GetJobDefinitionNodePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobDefinitionNodeProperty)(nil)).Elem()
}

func (o GetJobDefinitionNodePropertyArrayOutput) ToGetJobDefinitionNodePropertyArrayOutput() GetJobDefinitionNodePropertyArrayOutput {
	return o
}

func (o GetJobDefinitionNodePropertyArrayOutput) ToGetJobDefinitionNodePropertyArrayOutputWithContext(ctx context.Context) GetJobDefinitionNodePropertyArrayOutput {
	return o
}

func (o GetJobDefinitionNodePropertyArrayOutput) Index(i pulumi.IntInput) GetJobDefinitionNodePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobDefinitionNodeProperty {
		return vs[0].([]GetJobDefinitionNodeProperty)[vs[1].(int)]
	}).(GetJobDefinitionNodePropertyOutput)
}

type GetJobDefinitionRetryStrategy struct {
	// The number of times to move a job to the RUNNABLE status.
	Attempts int `pulumi:"attempts"`
	// Array of up to 5 objects that specify the conditions where jobs are retried or failed.
	EvaluateOnExits []interface{} `pulumi:"evaluateOnExits"`
}

// GetJobDefinitionRetryStrategyInput is an input type that accepts GetJobDefinitionRetryStrategyArgs and GetJobDefinitionRetryStrategyOutput values.
// You can construct a concrete instance of `GetJobDefinitionRetryStrategyInput` via:
//
//	GetJobDefinitionRetryStrategyArgs{...}
type GetJobDefinitionRetryStrategyInput interface {
	pulumi.Input

	ToGetJobDefinitionRetryStrategyOutput() GetJobDefinitionRetryStrategyOutput
	ToGetJobDefinitionRetryStrategyOutputWithContext(context.Context) GetJobDefinitionRetryStrategyOutput
}

type GetJobDefinitionRetryStrategyArgs struct {
	// The number of times to move a job to the RUNNABLE status.
	Attempts pulumi.IntInput `pulumi:"attempts"`
	// Array of up to 5 objects that specify the conditions where jobs are retried or failed.
	EvaluateOnExits pulumi.ArrayInput `pulumi:"evaluateOnExits"`
}

func (GetJobDefinitionRetryStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobDefinitionRetryStrategy)(nil)).Elem()
}

func (i GetJobDefinitionRetryStrategyArgs) ToGetJobDefinitionRetryStrategyOutput() GetJobDefinitionRetryStrategyOutput {
	return i.ToGetJobDefinitionRetryStrategyOutputWithContext(context.Background())
}

func (i GetJobDefinitionRetryStrategyArgs) ToGetJobDefinitionRetryStrategyOutputWithContext(ctx context.Context) GetJobDefinitionRetryStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobDefinitionRetryStrategyOutput)
}

// GetJobDefinitionRetryStrategyArrayInput is an input type that accepts GetJobDefinitionRetryStrategyArray and GetJobDefinitionRetryStrategyArrayOutput values.
// You can construct a concrete instance of `GetJobDefinitionRetryStrategyArrayInput` via:
//
//	GetJobDefinitionRetryStrategyArray{ GetJobDefinitionRetryStrategyArgs{...} }
type GetJobDefinitionRetryStrategyArrayInput interface {
	pulumi.Input

	ToGetJobDefinitionRetryStrategyArrayOutput() GetJobDefinitionRetryStrategyArrayOutput
	ToGetJobDefinitionRetryStrategyArrayOutputWithContext(context.Context) GetJobDefinitionRetryStrategyArrayOutput
}

type GetJobDefinitionRetryStrategyArray []GetJobDefinitionRetryStrategyInput

func (GetJobDefinitionRetryStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobDefinitionRetryStrategy)(nil)).Elem()
}

func (i GetJobDefinitionRetryStrategyArray) ToGetJobDefinitionRetryStrategyArrayOutput() GetJobDefinitionRetryStrategyArrayOutput {
	return i.ToGetJobDefinitionRetryStrategyArrayOutputWithContext(context.Background())
}

func (i GetJobDefinitionRetryStrategyArray) ToGetJobDefinitionRetryStrategyArrayOutputWithContext(ctx context.Context) GetJobDefinitionRetryStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobDefinitionRetryStrategyArrayOutput)
}

type GetJobDefinitionRetryStrategyOutput struct{ *pulumi.OutputState }

func (GetJobDefinitionRetryStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobDefinitionRetryStrategy)(nil)).Elem()
}

func (o GetJobDefinitionRetryStrategyOutput) ToGetJobDefinitionRetryStrategyOutput() GetJobDefinitionRetryStrategyOutput {
	return o
}

func (o GetJobDefinitionRetryStrategyOutput) ToGetJobDefinitionRetryStrategyOutputWithContext(ctx context.Context) GetJobDefinitionRetryStrategyOutput {
	return o
}

// The number of times to move a job to the RUNNABLE status.
func (o GetJobDefinitionRetryStrategyOutput) Attempts() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobDefinitionRetryStrategy) int { return v.Attempts }).(pulumi.IntOutput)
}

// Array of up to 5 objects that specify the conditions where jobs are retried or failed.
func (o GetJobDefinitionRetryStrategyOutput) EvaluateOnExits() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetJobDefinitionRetryStrategy) []interface{} { return v.EvaluateOnExits }).(pulumi.ArrayOutput)
}

type GetJobDefinitionRetryStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetJobDefinitionRetryStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobDefinitionRetryStrategy)(nil)).Elem()
}

func (o GetJobDefinitionRetryStrategyArrayOutput) ToGetJobDefinitionRetryStrategyArrayOutput() GetJobDefinitionRetryStrategyArrayOutput {
	return o
}

func (o GetJobDefinitionRetryStrategyArrayOutput) ToGetJobDefinitionRetryStrategyArrayOutputWithContext(ctx context.Context) GetJobDefinitionRetryStrategyArrayOutput {
	return o
}

func (o GetJobDefinitionRetryStrategyArrayOutput) Index(i pulumi.IntInput) GetJobDefinitionRetryStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobDefinitionRetryStrategy {
		return vs[0].([]GetJobDefinitionRetryStrategy)[vs[1].(int)]
	}).(GetJobDefinitionRetryStrategyOutput)
}

type GetJobDefinitionTimeout struct {
	// The job timeout time (in seconds) that's measured from the job attempt's startedAt timestamp.
	AttemptDurationSeconds int `pulumi:"attemptDurationSeconds"`
}

// GetJobDefinitionTimeoutInput is an input type that accepts GetJobDefinitionTimeoutArgs and GetJobDefinitionTimeoutOutput values.
// You can construct a concrete instance of `GetJobDefinitionTimeoutInput` via:
//
//	GetJobDefinitionTimeoutArgs{...}
type GetJobDefinitionTimeoutInput interface {
	pulumi.Input

	ToGetJobDefinitionTimeoutOutput() GetJobDefinitionTimeoutOutput
	ToGetJobDefinitionTimeoutOutputWithContext(context.Context) GetJobDefinitionTimeoutOutput
}

type GetJobDefinitionTimeoutArgs struct {
	// The job timeout time (in seconds) that's measured from the job attempt's startedAt timestamp.
	AttemptDurationSeconds pulumi.IntInput `pulumi:"attemptDurationSeconds"`
}

func (GetJobDefinitionTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobDefinitionTimeout)(nil)).Elem()
}

func (i GetJobDefinitionTimeoutArgs) ToGetJobDefinitionTimeoutOutput() GetJobDefinitionTimeoutOutput {
	return i.ToGetJobDefinitionTimeoutOutputWithContext(context.Background())
}

func (i GetJobDefinitionTimeoutArgs) ToGetJobDefinitionTimeoutOutputWithContext(ctx context.Context) GetJobDefinitionTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobDefinitionTimeoutOutput)
}

// GetJobDefinitionTimeoutArrayInput is an input type that accepts GetJobDefinitionTimeoutArray and GetJobDefinitionTimeoutArrayOutput values.
// You can construct a concrete instance of `GetJobDefinitionTimeoutArrayInput` via:
//
//	GetJobDefinitionTimeoutArray{ GetJobDefinitionTimeoutArgs{...} }
type GetJobDefinitionTimeoutArrayInput interface {
	pulumi.Input

	ToGetJobDefinitionTimeoutArrayOutput() GetJobDefinitionTimeoutArrayOutput
	ToGetJobDefinitionTimeoutArrayOutputWithContext(context.Context) GetJobDefinitionTimeoutArrayOutput
}

type GetJobDefinitionTimeoutArray []GetJobDefinitionTimeoutInput

func (GetJobDefinitionTimeoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobDefinitionTimeout)(nil)).Elem()
}

func (i GetJobDefinitionTimeoutArray) ToGetJobDefinitionTimeoutArrayOutput() GetJobDefinitionTimeoutArrayOutput {
	return i.ToGetJobDefinitionTimeoutArrayOutputWithContext(context.Background())
}

func (i GetJobDefinitionTimeoutArray) ToGetJobDefinitionTimeoutArrayOutputWithContext(ctx context.Context) GetJobDefinitionTimeoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobDefinitionTimeoutArrayOutput)
}

type GetJobDefinitionTimeoutOutput struct{ *pulumi.OutputState }

func (GetJobDefinitionTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobDefinitionTimeout)(nil)).Elem()
}

func (o GetJobDefinitionTimeoutOutput) ToGetJobDefinitionTimeoutOutput() GetJobDefinitionTimeoutOutput {
	return o
}

func (o GetJobDefinitionTimeoutOutput) ToGetJobDefinitionTimeoutOutputWithContext(ctx context.Context) GetJobDefinitionTimeoutOutput {
	return o
}

// The job timeout time (in seconds) that's measured from the job attempt's startedAt timestamp.
func (o GetJobDefinitionTimeoutOutput) AttemptDurationSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobDefinitionTimeout) int { return v.AttemptDurationSeconds }).(pulumi.IntOutput)
}

type GetJobDefinitionTimeoutArrayOutput struct{ *pulumi.OutputState }

func (GetJobDefinitionTimeoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobDefinitionTimeout)(nil)).Elem()
}

func (o GetJobDefinitionTimeoutArrayOutput) ToGetJobDefinitionTimeoutArrayOutput() GetJobDefinitionTimeoutArrayOutput {
	return o
}

func (o GetJobDefinitionTimeoutArrayOutput) ToGetJobDefinitionTimeoutArrayOutputWithContext(ctx context.Context) GetJobDefinitionTimeoutArrayOutput {
	return o
}

func (o GetJobDefinitionTimeoutArrayOutput) Index(i pulumi.IntInput) GetJobDefinitionTimeoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobDefinitionTimeout {
		return vs[0].([]GetJobDefinitionTimeout)[vs[1].(int)]
	}).(GetJobDefinitionTimeoutOutput)
}

type GetJobQueueComputeEnvironmentOrder struct {
	ComputeEnvironment string `pulumi:"computeEnvironment"`
	Order              int    `pulumi:"order"`
}

// GetJobQueueComputeEnvironmentOrderInput is an input type that accepts GetJobQueueComputeEnvironmentOrderArgs and GetJobQueueComputeEnvironmentOrderOutput values.
// You can construct a concrete instance of `GetJobQueueComputeEnvironmentOrderInput` via:
//
//	GetJobQueueComputeEnvironmentOrderArgs{...}
type GetJobQueueComputeEnvironmentOrderInput interface {
	pulumi.Input

	ToGetJobQueueComputeEnvironmentOrderOutput() GetJobQueueComputeEnvironmentOrderOutput
	ToGetJobQueueComputeEnvironmentOrderOutputWithContext(context.Context) GetJobQueueComputeEnvironmentOrderOutput
}

type GetJobQueueComputeEnvironmentOrderArgs struct {
	ComputeEnvironment pulumi.StringInput `pulumi:"computeEnvironment"`
	Order              pulumi.IntInput    `pulumi:"order"`
}

func (GetJobQueueComputeEnvironmentOrderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobQueueComputeEnvironmentOrder)(nil)).Elem()
}

func (i GetJobQueueComputeEnvironmentOrderArgs) ToGetJobQueueComputeEnvironmentOrderOutput() GetJobQueueComputeEnvironmentOrderOutput {
	return i.ToGetJobQueueComputeEnvironmentOrderOutputWithContext(context.Background())
}

func (i GetJobQueueComputeEnvironmentOrderArgs) ToGetJobQueueComputeEnvironmentOrderOutputWithContext(ctx context.Context) GetJobQueueComputeEnvironmentOrderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobQueueComputeEnvironmentOrderOutput)
}

// GetJobQueueComputeEnvironmentOrderArrayInput is an input type that accepts GetJobQueueComputeEnvironmentOrderArray and GetJobQueueComputeEnvironmentOrderArrayOutput values.
// You can construct a concrete instance of `GetJobQueueComputeEnvironmentOrderArrayInput` via:
//
//	GetJobQueueComputeEnvironmentOrderArray{ GetJobQueueComputeEnvironmentOrderArgs{...} }
type GetJobQueueComputeEnvironmentOrderArrayInput interface {
	pulumi.Input

	ToGetJobQueueComputeEnvironmentOrderArrayOutput() GetJobQueueComputeEnvironmentOrderArrayOutput
	ToGetJobQueueComputeEnvironmentOrderArrayOutputWithContext(context.Context) GetJobQueueComputeEnvironmentOrderArrayOutput
}

type GetJobQueueComputeEnvironmentOrderArray []GetJobQueueComputeEnvironmentOrderInput

func (GetJobQueueComputeEnvironmentOrderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobQueueComputeEnvironmentOrder)(nil)).Elem()
}

func (i GetJobQueueComputeEnvironmentOrderArray) ToGetJobQueueComputeEnvironmentOrderArrayOutput() GetJobQueueComputeEnvironmentOrderArrayOutput {
	return i.ToGetJobQueueComputeEnvironmentOrderArrayOutputWithContext(context.Background())
}

func (i GetJobQueueComputeEnvironmentOrderArray) ToGetJobQueueComputeEnvironmentOrderArrayOutputWithContext(ctx context.Context) GetJobQueueComputeEnvironmentOrderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobQueueComputeEnvironmentOrderArrayOutput)
}

type GetJobQueueComputeEnvironmentOrderOutput struct{ *pulumi.OutputState }

func (GetJobQueueComputeEnvironmentOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobQueueComputeEnvironmentOrder)(nil)).Elem()
}

func (o GetJobQueueComputeEnvironmentOrderOutput) ToGetJobQueueComputeEnvironmentOrderOutput() GetJobQueueComputeEnvironmentOrderOutput {
	return o
}

func (o GetJobQueueComputeEnvironmentOrderOutput) ToGetJobQueueComputeEnvironmentOrderOutputWithContext(ctx context.Context) GetJobQueueComputeEnvironmentOrderOutput {
	return o
}

func (o GetJobQueueComputeEnvironmentOrderOutput) ComputeEnvironment() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobQueueComputeEnvironmentOrder) string { return v.ComputeEnvironment }).(pulumi.StringOutput)
}

func (o GetJobQueueComputeEnvironmentOrderOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobQueueComputeEnvironmentOrder) int { return v.Order }).(pulumi.IntOutput)
}

type GetJobQueueComputeEnvironmentOrderArrayOutput struct{ *pulumi.OutputState }

func (GetJobQueueComputeEnvironmentOrderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobQueueComputeEnvironmentOrder)(nil)).Elem()
}

func (o GetJobQueueComputeEnvironmentOrderArrayOutput) ToGetJobQueueComputeEnvironmentOrderArrayOutput() GetJobQueueComputeEnvironmentOrderArrayOutput {
	return o
}

func (o GetJobQueueComputeEnvironmentOrderArrayOutput) ToGetJobQueueComputeEnvironmentOrderArrayOutputWithContext(ctx context.Context) GetJobQueueComputeEnvironmentOrderArrayOutput {
	return o
}

func (o GetJobQueueComputeEnvironmentOrderArrayOutput) Index(i pulumi.IntInput) GetJobQueueComputeEnvironmentOrderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobQueueComputeEnvironmentOrder {
		return vs[0].([]GetJobQueueComputeEnvironmentOrder)[vs[1].(int)]
	}).(GetJobQueueComputeEnvironmentOrderOutput)
}

type GetSchedulingPolicyFairSharePolicy struct {
	// Value used to reserve some of the available maximum vCPU for fair share identifiers that have not yet been used. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html).
	ComputeReservation int `pulumi:"computeReservation"`
	ShareDecaySeconds  int `pulumi:"shareDecaySeconds"`
	// One or more share distribution blocks which define the weights for the fair share identifiers for the fair share policy. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html). The `shareDistribution` block is documented below.
	ShareDistributions []GetSchedulingPolicyFairSharePolicyShareDistribution `pulumi:"shareDistributions"`
}

// GetSchedulingPolicyFairSharePolicyInput is an input type that accepts GetSchedulingPolicyFairSharePolicyArgs and GetSchedulingPolicyFairSharePolicyOutput values.
// You can construct a concrete instance of `GetSchedulingPolicyFairSharePolicyInput` via:
//
//	GetSchedulingPolicyFairSharePolicyArgs{...}
type GetSchedulingPolicyFairSharePolicyInput interface {
	pulumi.Input

	ToGetSchedulingPolicyFairSharePolicyOutput() GetSchedulingPolicyFairSharePolicyOutput
	ToGetSchedulingPolicyFairSharePolicyOutputWithContext(context.Context) GetSchedulingPolicyFairSharePolicyOutput
}

type GetSchedulingPolicyFairSharePolicyArgs struct {
	// Value used to reserve some of the available maximum vCPU for fair share identifiers that have not yet been used. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html).
	ComputeReservation pulumi.IntInput `pulumi:"computeReservation"`
	ShareDecaySeconds  pulumi.IntInput `pulumi:"shareDecaySeconds"`
	// One or more share distribution blocks which define the weights for the fair share identifiers for the fair share policy. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html). The `shareDistribution` block is documented below.
	ShareDistributions GetSchedulingPolicyFairSharePolicyShareDistributionArrayInput `pulumi:"shareDistributions"`
}

func (GetSchedulingPolicyFairSharePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchedulingPolicyFairSharePolicy)(nil)).Elem()
}

func (i GetSchedulingPolicyFairSharePolicyArgs) ToGetSchedulingPolicyFairSharePolicyOutput() GetSchedulingPolicyFairSharePolicyOutput {
	return i.ToGetSchedulingPolicyFairSharePolicyOutputWithContext(context.Background())
}

func (i GetSchedulingPolicyFairSharePolicyArgs) ToGetSchedulingPolicyFairSharePolicyOutputWithContext(ctx context.Context) GetSchedulingPolicyFairSharePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchedulingPolicyFairSharePolicyOutput)
}

// GetSchedulingPolicyFairSharePolicyArrayInput is an input type that accepts GetSchedulingPolicyFairSharePolicyArray and GetSchedulingPolicyFairSharePolicyArrayOutput values.
// You can construct a concrete instance of `GetSchedulingPolicyFairSharePolicyArrayInput` via:
//
//	GetSchedulingPolicyFairSharePolicyArray{ GetSchedulingPolicyFairSharePolicyArgs{...} }
type GetSchedulingPolicyFairSharePolicyArrayInput interface {
	pulumi.Input

	ToGetSchedulingPolicyFairSharePolicyArrayOutput() GetSchedulingPolicyFairSharePolicyArrayOutput
	ToGetSchedulingPolicyFairSharePolicyArrayOutputWithContext(context.Context) GetSchedulingPolicyFairSharePolicyArrayOutput
}

type GetSchedulingPolicyFairSharePolicyArray []GetSchedulingPolicyFairSharePolicyInput

func (GetSchedulingPolicyFairSharePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchedulingPolicyFairSharePolicy)(nil)).Elem()
}

func (i GetSchedulingPolicyFairSharePolicyArray) ToGetSchedulingPolicyFairSharePolicyArrayOutput() GetSchedulingPolicyFairSharePolicyArrayOutput {
	return i.ToGetSchedulingPolicyFairSharePolicyArrayOutputWithContext(context.Background())
}

func (i GetSchedulingPolicyFairSharePolicyArray) ToGetSchedulingPolicyFairSharePolicyArrayOutputWithContext(ctx context.Context) GetSchedulingPolicyFairSharePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchedulingPolicyFairSharePolicyArrayOutput)
}

type GetSchedulingPolicyFairSharePolicyOutput struct{ *pulumi.OutputState }

func (GetSchedulingPolicyFairSharePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchedulingPolicyFairSharePolicy)(nil)).Elem()
}

func (o GetSchedulingPolicyFairSharePolicyOutput) ToGetSchedulingPolicyFairSharePolicyOutput() GetSchedulingPolicyFairSharePolicyOutput {
	return o
}

func (o GetSchedulingPolicyFairSharePolicyOutput) ToGetSchedulingPolicyFairSharePolicyOutputWithContext(ctx context.Context) GetSchedulingPolicyFairSharePolicyOutput {
	return o
}

// Value used to reserve some of the available maximum vCPU for fair share identifiers that have not yet been used. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html).
func (o GetSchedulingPolicyFairSharePolicyOutput) ComputeReservation() pulumi.IntOutput {
	return o.ApplyT(func(v GetSchedulingPolicyFairSharePolicy) int { return v.ComputeReservation }).(pulumi.IntOutput)
}

func (o GetSchedulingPolicyFairSharePolicyOutput) ShareDecaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetSchedulingPolicyFairSharePolicy) int { return v.ShareDecaySeconds }).(pulumi.IntOutput)
}

// One or more share distribution blocks which define the weights for the fair share identifiers for the fair share policy. For more information, see [FairsharePolicy](https://docs.aws.amazon.com/batch/latest/APIReference/API_FairsharePolicy.html). The `shareDistribution` block is documented below.
func (o GetSchedulingPolicyFairSharePolicyOutput) ShareDistributions() GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput {
	return o.ApplyT(func(v GetSchedulingPolicyFairSharePolicy) []GetSchedulingPolicyFairSharePolicyShareDistribution {
		return v.ShareDistributions
	}).(GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput)
}

type GetSchedulingPolicyFairSharePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetSchedulingPolicyFairSharePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchedulingPolicyFairSharePolicy)(nil)).Elem()
}

func (o GetSchedulingPolicyFairSharePolicyArrayOutput) ToGetSchedulingPolicyFairSharePolicyArrayOutput() GetSchedulingPolicyFairSharePolicyArrayOutput {
	return o
}

func (o GetSchedulingPolicyFairSharePolicyArrayOutput) ToGetSchedulingPolicyFairSharePolicyArrayOutputWithContext(ctx context.Context) GetSchedulingPolicyFairSharePolicyArrayOutput {
	return o
}

func (o GetSchedulingPolicyFairSharePolicyArrayOutput) Index(i pulumi.IntInput) GetSchedulingPolicyFairSharePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSchedulingPolicyFairSharePolicy {
		return vs[0].([]GetSchedulingPolicyFairSharePolicy)[vs[1].(int)]
	}).(GetSchedulingPolicyFairSharePolicyOutput)
}

type GetSchedulingPolicyFairSharePolicyShareDistribution struct {
	// Fair share identifier or fair share identifier prefix. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html).
	ShareIdentifier string `pulumi:"shareIdentifier"`
	// Weight factor for the fair share identifier. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html).
	WeightFactor float64 `pulumi:"weightFactor"`
}

// GetSchedulingPolicyFairSharePolicyShareDistributionInput is an input type that accepts GetSchedulingPolicyFairSharePolicyShareDistributionArgs and GetSchedulingPolicyFairSharePolicyShareDistributionOutput values.
// You can construct a concrete instance of `GetSchedulingPolicyFairSharePolicyShareDistributionInput` via:
//
//	GetSchedulingPolicyFairSharePolicyShareDistributionArgs{...}
type GetSchedulingPolicyFairSharePolicyShareDistributionInput interface {
	pulumi.Input

	ToGetSchedulingPolicyFairSharePolicyShareDistributionOutput() GetSchedulingPolicyFairSharePolicyShareDistributionOutput
	ToGetSchedulingPolicyFairSharePolicyShareDistributionOutputWithContext(context.Context) GetSchedulingPolicyFairSharePolicyShareDistributionOutput
}

type GetSchedulingPolicyFairSharePolicyShareDistributionArgs struct {
	// Fair share identifier or fair share identifier prefix. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html).
	ShareIdentifier pulumi.StringInput `pulumi:"shareIdentifier"`
	// Weight factor for the fair share identifier. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html).
	WeightFactor pulumi.Float64Input `pulumi:"weightFactor"`
}

func (GetSchedulingPolicyFairSharePolicyShareDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchedulingPolicyFairSharePolicyShareDistribution)(nil)).Elem()
}

func (i GetSchedulingPolicyFairSharePolicyShareDistributionArgs) ToGetSchedulingPolicyFairSharePolicyShareDistributionOutput() GetSchedulingPolicyFairSharePolicyShareDistributionOutput {
	return i.ToGetSchedulingPolicyFairSharePolicyShareDistributionOutputWithContext(context.Background())
}

func (i GetSchedulingPolicyFairSharePolicyShareDistributionArgs) ToGetSchedulingPolicyFairSharePolicyShareDistributionOutputWithContext(ctx context.Context) GetSchedulingPolicyFairSharePolicyShareDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchedulingPolicyFairSharePolicyShareDistributionOutput)
}

// GetSchedulingPolicyFairSharePolicyShareDistributionArrayInput is an input type that accepts GetSchedulingPolicyFairSharePolicyShareDistributionArray and GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput values.
// You can construct a concrete instance of `GetSchedulingPolicyFairSharePolicyShareDistributionArrayInput` via:
//
//	GetSchedulingPolicyFairSharePolicyShareDistributionArray{ GetSchedulingPolicyFairSharePolicyShareDistributionArgs{...} }
type GetSchedulingPolicyFairSharePolicyShareDistributionArrayInput interface {
	pulumi.Input

	ToGetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput() GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput
	ToGetSchedulingPolicyFairSharePolicyShareDistributionArrayOutputWithContext(context.Context) GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput
}

type GetSchedulingPolicyFairSharePolicyShareDistributionArray []GetSchedulingPolicyFairSharePolicyShareDistributionInput

func (GetSchedulingPolicyFairSharePolicyShareDistributionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchedulingPolicyFairSharePolicyShareDistribution)(nil)).Elem()
}

func (i GetSchedulingPolicyFairSharePolicyShareDistributionArray) ToGetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput() GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput {
	return i.ToGetSchedulingPolicyFairSharePolicyShareDistributionArrayOutputWithContext(context.Background())
}

func (i GetSchedulingPolicyFairSharePolicyShareDistributionArray) ToGetSchedulingPolicyFairSharePolicyShareDistributionArrayOutputWithContext(ctx context.Context) GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput)
}

type GetSchedulingPolicyFairSharePolicyShareDistributionOutput struct{ *pulumi.OutputState }

func (GetSchedulingPolicyFairSharePolicyShareDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchedulingPolicyFairSharePolicyShareDistribution)(nil)).Elem()
}

func (o GetSchedulingPolicyFairSharePolicyShareDistributionOutput) ToGetSchedulingPolicyFairSharePolicyShareDistributionOutput() GetSchedulingPolicyFairSharePolicyShareDistributionOutput {
	return o
}

func (o GetSchedulingPolicyFairSharePolicyShareDistributionOutput) ToGetSchedulingPolicyFairSharePolicyShareDistributionOutputWithContext(ctx context.Context) GetSchedulingPolicyFairSharePolicyShareDistributionOutput {
	return o
}

// Fair share identifier or fair share identifier prefix. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html).
func (o GetSchedulingPolicyFairSharePolicyShareDistributionOutput) ShareIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchedulingPolicyFairSharePolicyShareDistribution) string { return v.ShareIdentifier }).(pulumi.StringOutput)
}

// Weight factor for the fair share identifier. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html).
func (o GetSchedulingPolicyFairSharePolicyShareDistributionOutput) WeightFactor() pulumi.Float64Output {
	return o.ApplyT(func(v GetSchedulingPolicyFairSharePolicyShareDistribution) float64 { return v.WeightFactor }).(pulumi.Float64Output)
}

type GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput struct{ *pulumi.OutputState }

func (GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchedulingPolicyFairSharePolicyShareDistribution)(nil)).Elem()
}

func (o GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput) ToGetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput() GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput {
	return o
}

func (o GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput) ToGetSchedulingPolicyFairSharePolicyShareDistributionArrayOutputWithContext(ctx context.Context) GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput {
	return o
}

func (o GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput) Index(i pulumi.IntInput) GetSchedulingPolicyFairSharePolicyShareDistributionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSchedulingPolicyFairSharePolicyShareDistribution {
		return vs[0].([]GetSchedulingPolicyFairSharePolicyShareDistribution)[vs[1].(int)]
	}).(GetSchedulingPolicyFairSharePolicyShareDistributionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeEnvironmentComputeResourcesInput)(nil)).Elem(), ComputeEnvironmentComputeResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeEnvironmentComputeResourcesPtrInput)(nil)).Elem(), ComputeEnvironmentComputeResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeEnvironmentComputeResourcesEc2ConfigurationInput)(nil)).Elem(), ComputeEnvironmentComputeResourcesEc2ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeEnvironmentComputeResourcesEc2ConfigurationArrayInput)(nil)).Elem(), ComputeEnvironmentComputeResourcesEc2ConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeEnvironmentComputeResourcesLaunchTemplateInput)(nil)).Elem(), ComputeEnvironmentComputeResourcesLaunchTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeEnvironmentComputeResourcesLaunchTemplatePtrInput)(nil)).Elem(), ComputeEnvironmentComputeResourcesLaunchTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeEnvironmentEksConfigurationInput)(nil)).Elem(), ComputeEnvironmentEksConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeEnvironmentEksConfigurationPtrInput)(nil)).Elem(), ComputeEnvironmentEksConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeEnvironmentUpdatePolicyInput)(nil)).Elem(), ComputeEnvironmentUpdatePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeEnvironmentUpdatePolicyPtrInput)(nil)).Elem(), ComputeEnvironmentUpdatePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesInput)(nil)).Elem(), JobDefinitionEksPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPtrInput)(nil)).Elem(), JobDefinitionEksPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesPtrInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesContainersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersPtrInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesContainersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersEnvInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesContainersEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesContainersEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersResourcesInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesContainersResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesContainersResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesMetadataInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesMetadataPtrInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolumeInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolumeArrayInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolumeHostPathInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesVolumeHostPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesVolumeHostPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolumeSecretInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesVolumeSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrInput)(nil)).Elem(), JobDefinitionEksPropertiesPodPropertiesVolumeSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionRetryStrategyInput)(nil)).Elem(), JobDefinitionRetryStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionRetryStrategyPtrInput)(nil)).Elem(), JobDefinitionRetryStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionRetryStrategyEvaluateOnExitInput)(nil)).Elem(), JobDefinitionRetryStrategyEvaluateOnExitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionRetryStrategyEvaluateOnExitArrayInput)(nil)).Elem(), JobDefinitionRetryStrategyEvaluateOnExitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionTimeoutInput)(nil)).Elem(), JobDefinitionTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionTimeoutPtrInput)(nil)).Elem(), JobDefinitionTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobQueueComputeEnvironmentOrderInput)(nil)).Elem(), JobQueueComputeEnvironmentOrderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobQueueComputeEnvironmentOrderArrayInput)(nil)).Elem(), JobQueueComputeEnvironmentOrderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobQueueTimeoutsInput)(nil)).Elem(), JobQueueTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobQueueTimeoutsPtrInput)(nil)).Elem(), JobQueueTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulingPolicyFairSharePolicyInput)(nil)).Elem(), SchedulingPolicyFairSharePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulingPolicyFairSharePolicyPtrInput)(nil)).Elem(), SchedulingPolicyFairSharePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulingPolicyFairSharePolicyShareDistributionInput)(nil)).Elem(), SchedulingPolicyFairSharePolicyShareDistributionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulingPolicyFairSharePolicyShareDistributionArrayInput)(nil)).Elem(), SchedulingPolicyFairSharePolicyShareDistributionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeEnvironmentUpdatePolicyInput)(nil)).Elem(), GetComputeEnvironmentUpdatePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComputeEnvironmentUpdatePolicyArrayInput)(nil)).Elem(), GetComputeEnvironmentUpdatePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobDefinitionEksPropertyInput)(nil)).Elem(), GetJobDefinitionEksPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobDefinitionEksPropertyArrayInput)(nil)).Elem(), GetJobDefinitionEksPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobDefinitionNodePropertyInput)(nil)).Elem(), GetJobDefinitionNodePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobDefinitionNodePropertyArrayInput)(nil)).Elem(), GetJobDefinitionNodePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobDefinitionRetryStrategyInput)(nil)).Elem(), GetJobDefinitionRetryStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobDefinitionRetryStrategyArrayInput)(nil)).Elem(), GetJobDefinitionRetryStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobDefinitionTimeoutInput)(nil)).Elem(), GetJobDefinitionTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobDefinitionTimeoutArrayInput)(nil)).Elem(), GetJobDefinitionTimeoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobQueueComputeEnvironmentOrderInput)(nil)).Elem(), GetJobQueueComputeEnvironmentOrderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobQueueComputeEnvironmentOrderArrayInput)(nil)).Elem(), GetJobQueueComputeEnvironmentOrderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchedulingPolicyFairSharePolicyInput)(nil)).Elem(), GetSchedulingPolicyFairSharePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchedulingPolicyFairSharePolicyArrayInput)(nil)).Elem(), GetSchedulingPolicyFairSharePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchedulingPolicyFairSharePolicyShareDistributionInput)(nil)).Elem(), GetSchedulingPolicyFairSharePolicyShareDistributionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchedulingPolicyFairSharePolicyShareDistributionArrayInput)(nil)).Elem(), GetSchedulingPolicyFairSharePolicyShareDistributionArray{})
	pulumi.RegisterOutputType(ComputeEnvironmentComputeResourcesOutput{})
	pulumi.RegisterOutputType(ComputeEnvironmentComputeResourcesPtrOutput{})
	pulumi.RegisterOutputType(ComputeEnvironmentComputeResourcesEc2ConfigurationOutput{})
	pulumi.RegisterOutputType(ComputeEnvironmentComputeResourcesEc2ConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ComputeEnvironmentComputeResourcesLaunchTemplateOutput{})
	pulumi.RegisterOutputType(ComputeEnvironmentComputeResourcesLaunchTemplatePtrOutput{})
	pulumi.RegisterOutputType(ComputeEnvironmentEksConfigurationOutput{})
	pulumi.RegisterOutputType(ComputeEnvironmentEksConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ComputeEnvironmentUpdatePolicyOutput{})
	pulumi.RegisterOutputType(ComputeEnvironmentUpdatePolicyPtrOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPtrOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesPtrOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesContainersOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesContainersPtrOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesContainersEnvOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesContainersEnvArrayOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesContainersResourcesOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesContainersResourcesPtrOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesContainersSecurityContextPtrOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesContainersVolumeMountArrayOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesMetadataOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesMetadataPtrOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesVolumeOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesVolumeArrayOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesVolumeEmptyDirPtrOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesVolumeHostPathOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesVolumeHostPathPtrOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesVolumeSecretOutput{})
	pulumi.RegisterOutputType(JobDefinitionEksPropertiesPodPropertiesVolumeSecretPtrOutput{})
	pulumi.RegisterOutputType(JobDefinitionRetryStrategyOutput{})
	pulumi.RegisterOutputType(JobDefinitionRetryStrategyPtrOutput{})
	pulumi.RegisterOutputType(JobDefinitionRetryStrategyEvaluateOnExitOutput{})
	pulumi.RegisterOutputType(JobDefinitionRetryStrategyEvaluateOnExitArrayOutput{})
	pulumi.RegisterOutputType(JobDefinitionTimeoutOutput{})
	pulumi.RegisterOutputType(JobDefinitionTimeoutPtrOutput{})
	pulumi.RegisterOutputType(JobQueueComputeEnvironmentOrderOutput{})
	pulumi.RegisterOutputType(JobQueueComputeEnvironmentOrderArrayOutput{})
	pulumi.RegisterOutputType(JobQueueTimeoutsOutput{})
	pulumi.RegisterOutputType(JobQueueTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(SchedulingPolicyFairSharePolicyOutput{})
	pulumi.RegisterOutputType(SchedulingPolicyFairSharePolicyPtrOutput{})
	pulumi.RegisterOutputType(SchedulingPolicyFairSharePolicyShareDistributionOutput{})
	pulumi.RegisterOutputType(SchedulingPolicyFairSharePolicyShareDistributionArrayOutput{})
	pulumi.RegisterOutputType(GetComputeEnvironmentUpdatePolicyOutput{})
	pulumi.RegisterOutputType(GetComputeEnvironmentUpdatePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetJobDefinitionEksPropertyOutput{})
	pulumi.RegisterOutputType(GetJobDefinitionEksPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetJobDefinitionNodePropertyOutput{})
	pulumi.RegisterOutputType(GetJobDefinitionNodePropertyArrayOutput{})
	pulumi.RegisterOutputType(GetJobDefinitionRetryStrategyOutput{})
	pulumi.RegisterOutputType(GetJobDefinitionRetryStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetJobDefinitionTimeoutOutput{})
	pulumi.RegisterOutputType(GetJobDefinitionTimeoutArrayOutput{})
	pulumi.RegisterOutputType(GetJobQueueComputeEnvironmentOrderOutput{})
	pulumi.RegisterOutputType(GetJobQueueComputeEnvironmentOrderArrayOutput{})
	pulumi.RegisterOutputType(GetSchedulingPolicyFairSharePolicyOutput{})
	pulumi.RegisterOutputType(GetSchedulingPolicyFairSharePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetSchedulingPolicyFairSharePolicyShareDistributionOutput{})
	pulumi.RegisterOutputType(GetSchedulingPolicyFairSharePolicyShareDistributionArrayOutput{})
}
