// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The Batch Job Queue data source allows access to details of a specific
// job queue within AWS Batch.
func LookupobQueue(ctx *pulumi.Context, args *GetJobQueueArgs) (*GetJobQueueResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["name"] = args.Name
	}
	outputs, err := ctx.Invoke("aws:batch/getJobQueue:getJobQueue", inputs)
	if err != nil {
		return nil, err
	}
	ret := GetJobQueueResult{}
	if v, ok := outputs["arn"]; ok {
		ret.Arn = v
	}
	if v, ok := outputs["computeEnvironmentOrders"]; ok {
		ret.ComputeEnvironmentOrders = v
	}
	if v, ok := outputs["priority"]; ok {
		ret.Priority = v
	}
	if v, ok := outputs["state"]; ok {
		ret.State = v
	}
	if v, ok := outputs["status"]; ok {
		ret.Status = v
	}
	if v, ok := outputs["statusReason"]; ok {
		ret.StatusReason = v
	}
	return &ret, nil
}

// A collection of arguments for invoking getJobQueue.
type GetJobQueueArgs struct {
	// The name of the job queue.
	Name interface{}
}

// A collection of values returned by getJobQueue.
type GetJobQueueResult struct {
	// The ARN of the job queue.
	Arn interface{}
	// The compute environments that are attached to the job queue and the order in
	// which job placement is preferred. Compute environments are selected for job placement in ascending order.
	// * `compute_environment_order.#.order` - The order of the compute environment.
	// * `compute_environment_order.#.compute_environment` - The ARN of the compute environment.
	ComputeEnvironmentOrders interface{}
	// The priority of the job queue. Job queues with a higher priority are evaluated first when
	// associated with the same compute environment.
	Priority interface{}
	// Describes the ability of the queue to accept new jobs (for example, `ENABLED` or `DISABLED`).
	State interface{}
	// The current status of the job queue (for example, `CREATING` or `VALID`).
	Status interface{}
	// A short, human-readable string to provide additional details about the current status
	// of the job queue.
	StatusReason interface{}
}
