// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupComputeEnvironment(ctx *pulumi.Context, args *LookupComputeEnvironmentArgs, opts ...pulumi.InvokeOption) (*LookupComputeEnvironmentResult, error) {
	var rv LookupComputeEnvironmentResult
	err := ctx.Invoke("aws:batch/getComputeEnvironment:getComputeEnvironment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComputeEnvironment.
type LookupComputeEnvironmentArgs struct {
	ComputeEnvironmentName string            `pulumi:"computeEnvironmentName"`
	Tags                   map[string]string `pulumi:"tags"`
}

// A collection of values returned by getComputeEnvironment.
type LookupComputeEnvironmentResult struct {
	Arn                    string `pulumi:"arn"`
	ComputeEnvironmentName string `pulumi:"computeEnvironmentName"`
	EcsClusterArn          string `pulumi:"ecsClusterArn"`
	// The provider-assigned unique ID for this managed resource.
	Id           string            `pulumi:"id"`
	ServiceRole  string            `pulumi:"serviceRole"`
	State        string            `pulumi:"state"`
	Status       string            `pulumi:"status"`
	StatusReason string            `pulumi:"statusReason"`
	Tags         map[string]string `pulumi:"tags"`
	Type         string            `pulumi:"type"`
}

func LookupComputeEnvironmentOutput(ctx *pulumi.Context, args LookupComputeEnvironmentOutputArgs, opts ...pulumi.InvokeOption) LookupComputeEnvironmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupComputeEnvironmentResult, error) {
			args := v.(LookupComputeEnvironmentArgs)
			r, err := LookupComputeEnvironment(ctx, &args, opts...)
			var s LookupComputeEnvironmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupComputeEnvironmentResultOutput)
}

// A collection of arguments for invoking getComputeEnvironment.
type LookupComputeEnvironmentOutputArgs struct {
	ComputeEnvironmentName pulumi.StringInput    `pulumi:"computeEnvironmentName"`
	Tags                   pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupComputeEnvironmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComputeEnvironmentArgs)(nil)).Elem()
}

// A collection of values returned by getComputeEnvironment.
type LookupComputeEnvironmentResultOutput struct{ *pulumi.OutputState }

func (LookupComputeEnvironmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComputeEnvironmentResult)(nil)).Elem()
}

func (o LookupComputeEnvironmentResultOutput) ToLookupComputeEnvironmentResultOutput() LookupComputeEnvironmentResultOutput {
	return o
}

func (o LookupComputeEnvironmentResultOutput) ToLookupComputeEnvironmentResultOutputWithContext(ctx context.Context) LookupComputeEnvironmentResultOutput {
	return o
}

func (o LookupComputeEnvironmentResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeEnvironmentResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupComputeEnvironmentResultOutput) ComputeEnvironmentName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeEnvironmentResult) string { return v.ComputeEnvironmentName }).(pulumi.StringOutput)
}

func (o LookupComputeEnvironmentResultOutput) EcsClusterArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeEnvironmentResult) string { return v.EcsClusterArn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupComputeEnvironmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeEnvironmentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupComputeEnvironmentResultOutput) ServiceRole() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeEnvironmentResult) string { return v.ServiceRole }).(pulumi.StringOutput)
}

func (o LookupComputeEnvironmentResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeEnvironmentResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupComputeEnvironmentResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeEnvironmentResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupComputeEnvironmentResultOutput) StatusReason() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeEnvironmentResult) string { return v.StatusReason }).(pulumi.StringOutput)
}

func (o LookupComputeEnvironmentResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupComputeEnvironmentResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupComputeEnvironmentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeEnvironmentResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupComputeEnvironmentResultOutput{})
}
