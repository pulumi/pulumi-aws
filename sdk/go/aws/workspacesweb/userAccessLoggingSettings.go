// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspacesweb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS WorkSpaces Web User Access Logging Settings resource. Once associated with a web portal, user access logging settings control how user access events are logged to Amazon Kinesis.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/kinesis"
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/workspacesweb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := kinesis.NewStream(ctx, "example", &kinesis.StreamArgs{
//				Name:       pulumi.String("amazon-workspaces-web-example-stream"),
//				ShardCount: pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = workspacesweb.NewUserAccessLoggingSettings(ctx, "example", &workspacesweb.UserAccessLoggingSettingsArgs{
//				KinesisStreamArn: example.Arn,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### With Tags
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/kinesis"
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/workspacesweb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := kinesis.NewStream(ctx, "example", &kinesis.StreamArgs{
//				Name:       pulumi.String("example-stream"),
//				ShardCount: pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = workspacesweb.NewUserAccessLoggingSettings(ctx, "example", &workspacesweb.UserAccessLoggingSettingsArgs{
//				KinesisStreamArn: example.Arn,
//				Tags: pulumi.StringMap{
//					"Name":        pulumi.String("example-user-access-logging-settings"),
//					"Environment": pulumi.String("Production"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import WorkSpaces Web User Access Logging Settings using the `user_access_logging_settings_arn`. For example:
//
// ```sh
// $ pulumi import aws:workspacesweb/userAccessLoggingSettings:UserAccessLoggingSettings example arn:aws:workspaces-web:us-west-2:123456789012:userAccessLoggingSettings/abcdef12345
// ```
type UserAccessLoggingSettings struct {
	pulumi.CustomResourceState

	// List of web portal ARNs that this user access logging settings resource is associated with.
	AssociatedPortalArns pulumi.StringArrayOutput `pulumi:"associatedPortalArns"`
	// ARN of the Kinesis stream.
	//
	// The following arguments are optional:
	KinesisStreamArn pulumi.StringOutput `pulumi:"kinesisStreamArn"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// ARN of the user access logging settings resource.
	UserAccessLoggingSettingsArn pulumi.StringOutput `pulumi:"userAccessLoggingSettingsArn"`
}

// NewUserAccessLoggingSettings registers a new resource with the given unique name, arguments, and options.
func NewUserAccessLoggingSettings(ctx *pulumi.Context,
	name string, args *UserAccessLoggingSettingsArgs, opts ...pulumi.ResourceOption) (*UserAccessLoggingSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KinesisStreamArn == nil {
		return nil, errors.New("invalid value for required argument 'KinesisStreamArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserAccessLoggingSettings
	err := ctx.RegisterResource("aws:workspacesweb/userAccessLoggingSettings:UserAccessLoggingSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserAccessLoggingSettings gets an existing UserAccessLoggingSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserAccessLoggingSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserAccessLoggingSettingsState, opts ...pulumi.ResourceOption) (*UserAccessLoggingSettings, error) {
	var resource UserAccessLoggingSettings
	err := ctx.ReadResource("aws:workspacesweb/userAccessLoggingSettings:UserAccessLoggingSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserAccessLoggingSettings resources.
type userAccessLoggingSettingsState struct {
	// List of web portal ARNs that this user access logging settings resource is associated with.
	AssociatedPortalArns []string `pulumi:"associatedPortalArns"`
	// ARN of the Kinesis stream.
	//
	// The following arguments are optional:
	KinesisStreamArn *string `pulumi:"kinesisStreamArn"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// ARN of the user access logging settings resource.
	UserAccessLoggingSettingsArn *string `pulumi:"userAccessLoggingSettingsArn"`
}

type UserAccessLoggingSettingsState struct {
	// List of web portal ARNs that this user access logging settings resource is associated with.
	AssociatedPortalArns pulumi.StringArrayInput
	// ARN of the Kinesis stream.
	//
	// The following arguments are optional:
	KinesisStreamArn pulumi.StringPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapInput
	// ARN of the user access logging settings resource.
	UserAccessLoggingSettingsArn pulumi.StringPtrInput
}

func (UserAccessLoggingSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*userAccessLoggingSettingsState)(nil)).Elem()
}

type userAccessLoggingSettingsArgs struct {
	// ARN of the Kinesis stream.
	//
	// The following arguments are optional:
	KinesisStreamArn string `pulumi:"kinesisStreamArn"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a UserAccessLoggingSettings resource.
type UserAccessLoggingSettingsArgs struct {
	// ARN of the Kinesis stream.
	//
	// The following arguments are optional:
	KinesisStreamArn pulumi.StringInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (UserAccessLoggingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userAccessLoggingSettingsArgs)(nil)).Elem()
}

type UserAccessLoggingSettingsInput interface {
	pulumi.Input

	ToUserAccessLoggingSettingsOutput() UserAccessLoggingSettingsOutput
	ToUserAccessLoggingSettingsOutputWithContext(ctx context.Context) UserAccessLoggingSettingsOutput
}

func (*UserAccessLoggingSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccessLoggingSettings)(nil)).Elem()
}

func (i *UserAccessLoggingSettings) ToUserAccessLoggingSettingsOutput() UserAccessLoggingSettingsOutput {
	return i.ToUserAccessLoggingSettingsOutputWithContext(context.Background())
}

func (i *UserAccessLoggingSettings) ToUserAccessLoggingSettingsOutputWithContext(ctx context.Context) UserAccessLoggingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessLoggingSettingsOutput)
}

// UserAccessLoggingSettingsArrayInput is an input type that accepts UserAccessLoggingSettingsArray and UserAccessLoggingSettingsArrayOutput values.
// You can construct a concrete instance of `UserAccessLoggingSettingsArrayInput` via:
//
//	UserAccessLoggingSettingsArray{ UserAccessLoggingSettingsArgs{...} }
type UserAccessLoggingSettingsArrayInput interface {
	pulumi.Input

	ToUserAccessLoggingSettingsArrayOutput() UserAccessLoggingSettingsArrayOutput
	ToUserAccessLoggingSettingsArrayOutputWithContext(context.Context) UserAccessLoggingSettingsArrayOutput
}

type UserAccessLoggingSettingsArray []UserAccessLoggingSettingsInput

func (UserAccessLoggingSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserAccessLoggingSettings)(nil)).Elem()
}

func (i UserAccessLoggingSettingsArray) ToUserAccessLoggingSettingsArrayOutput() UserAccessLoggingSettingsArrayOutput {
	return i.ToUserAccessLoggingSettingsArrayOutputWithContext(context.Background())
}

func (i UserAccessLoggingSettingsArray) ToUserAccessLoggingSettingsArrayOutputWithContext(ctx context.Context) UserAccessLoggingSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessLoggingSettingsArrayOutput)
}

// UserAccessLoggingSettingsMapInput is an input type that accepts UserAccessLoggingSettingsMap and UserAccessLoggingSettingsMapOutput values.
// You can construct a concrete instance of `UserAccessLoggingSettingsMapInput` via:
//
//	UserAccessLoggingSettingsMap{ "key": UserAccessLoggingSettingsArgs{...} }
type UserAccessLoggingSettingsMapInput interface {
	pulumi.Input

	ToUserAccessLoggingSettingsMapOutput() UserAccessLoggingSettingsMapOutput
	ToUserAccessLoggingSettingsMapOutputWithContext(context.Context) UserAccessLoggingSettingsMapOutput
}

type UserAccessLoggingSettingsMap map[string]UserAccessLoggingSettingsInput

func (UserAccessLoggingSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserAccessLoggingSettings)(nil)).Elem()
}

func (i UserAccessLoggingSettingsMap) ToUserAccessLoggingSettingsMapOutput() UserAccessLoggingSettingsMapOutput {
	return i.ToUserAccessLoggingSettingsMapOutputWithContext(context.Background())
}

func (i UserAccessLoggingSettingsMap) ToUserAccessLoggingSettingsMapOutputWithContext(ctx context.Context) UserAccessLoggingSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessLoggingSettingsMapOutput)
}

type UserAccessLoggingSettingsOutput struct{ *pulumi.OutputState }

func (UserAccessLoggingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccessLoggingSettings)(nil)).Elem()
}

func (o UserAccessLoggingSettingsOutput) ToUserAccessLoggingSettingsOutput() UserAccessLoggingSettingsOutput {
	return o
}

func (o UserAccessLoggingSettingsOutput) ToUserAccessLoggingSettingsOutputWithContext(ctx context.Context) UserAccessLoggingSettingsOutput {
	return o
}

// List of web portal ARNs that this user access logging settings resource is associated with.
func (o UserAccessLoggingSettingsOutput) AssociatedPortalArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserAccessLoggingSettings) pulumi.StringArrayOutput { return v.AssociatedPortalArns }).(pulumi.StringArrayOutput)
}

// ARN of the Kinesis stream.
//
// The following arguments are optional:
func (o UserAccessLoggingSettingsOutput) KinesisStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v *UserAccessLoggingSettings) pulumi.StringOutput { return v.KinesisStreamArn }).(pulumi.StringOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o UserAccessLoggingSettingsOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *UserAccessLoggingSettings) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o UserAccessLoggingSettingsOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *UserAccessLoggingSettings) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o UserAccessLoggingSettingsOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *UserAccessLoggingSettings) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// ARN of the user access logging settings resource.
func (o UserAccessLoggingSettingsOutput) UserAccessLoggingSettingsArn() pulumi.StringOutput {
	return o.ApplyT(func(v *UserAccessLoggingSettings) pulumi.StringOutput { return v.UserAccessLoggingSettingsArn }).(pulumi.StringOutput)
}

type UserAccessLoggingSettingsArrayOutput struct{ *pulumi.OutputState }

func (UserAccessLoggingSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserAccessLoggingSettings)(nil)).Elem()
}

func (o UserAccessLoggingSettingsArrayOutput) ToUserAccessLoggingSettingsArrayOutput() UserAccessLoggingSettingsArrayOutput {
	return o
}

func (o UserAccessLoggingSettingsArrayOutput) ToUserAccessLoggingSettingsArrayOutputWithContext(ctx context.Context) UserAccessLoggingSettingsArrayOutput {
	return o
}

func (o UserAccessLoggingSettingsArrayOutput) Index(i pulumi.IntInput) UserAccessLoggingSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserAccessLoggingSettings {
		return vs[0].([]*UserAccessLoggingSettings)[vs[1].(int)]
	}).(UserAccessLoggingSettingsOutput)
}

type UserAccessLoggingSettingsMapOutput struct{ *pulumi.OutputState }

func (UserAccessLoggingSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserAccessLoggingSettings)(nil)).Elem()
}

func (o UserAccessLoggingSettingsMapOutput) ToUserAccessLoggingSettingsMapOutput() UserAccessLoggingSettingsMapOutput {
	return o
}

func (o UserAccessLoggingSettingsMapOutput) ToUserAccessLoggingSettingsMapOutputWithContext(ctx context.Context) UserAccessLoggingSettingsMapOutput {
	return o
}

func (o UserAccessLoggingSettingsMapOutput) MapIndex(k pulumi.StringInput) UserAccessLoggingSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserAccessLoggingSettings {
		return vs[0].(map[string]*UserAccessLoggingSettings)[vs[1].(string)]
	}).(UserAccessLoggingSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserAccessLoggingSettingsInput)(nil)).Elem(), &UserAccessLoggingSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserAccessLoggingSettingsArrayInput)(nil)).Elem(), UserAccessLoggingSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserAccessLoggingSettingsMapInput)(nil)).Elem(), UserAccessLoggingSettingsMap{})
	pulumi.RegisterOutputType(UserAccessLoggingSettingsOutput{})
	pulumi.RegisterOutputType(UserAccessLoggingSettingsArrayOutput{})
	pulumi.RegisterOutputType(UserAccessLoggingSettingsMapOutput{})
}
