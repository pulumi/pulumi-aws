// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspacesweb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS WorkSpaces Web User Access Logging Settings Association.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/kinesis"
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/workspacesweb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := workspacesweb.NewPortal(ctx, "example", &workspacesweb.PortalArgs{
//				DisplayName: pulumi.String("example"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleStream, err := kinesis.NewStream(ctx, "example", &kinesis.StreamArgs{
//				Name:       pulumi.String("amazon-workspaces-web-example"),
//				ShardCount: pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			exampleUserAccessLoggingSettings, err := workspacesweb.NewUserAccessLoggingSettings(ctx, "example", &workspacesweb.UserAccessLoggingSettingsArgs{
//				KinesisStreamArn: exampleStream.Arn,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = workspacesweb.NewUserAccessLoggingSettingsAssociation(ctx, "example", &workspacesweb.UserAccessLoggingSettingsAssociationArgs{
//				UserAccessLoggingSettingsArn: exampleUserAccessLoggingSettings.UserAccessLoggingSettingsArn,
//				PortalArn:                    example.PortalArn,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type UserAccessLoggingSettingsAssociation struct {
	pulumi.CustomResourceState

	// ARN of the portal to associate with the user access logging settings. Forces replacement if changed.
	//
	// The following arguments are optional:
	PortalArn pulumi.StringOutput `pulumi:"portalArn"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// ARN of the user access logging settings to associate with the portal. Forces replacement if changed.
	UserAccessLoggingSettingsArn pulumi.StringOutput `pulumi:"userAccessLoggingSettingsArn"`
}

// NewUserAccessLoggingSettingsAssociation registers a new resource with the given unique name, arguments, and options.
func NewUserAccessLoggingSettingsAssociation(ctx *pulumi.Context,
	name string, args *UserAccessLoggingSettingsAssociationArgs, opts ...pulumi.ResourceOption) (*UserAccessLoggingSettingsAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PortalArn == nil {
		return nil, errors.New("invalid value for required argument 'PortalArn'")
	}
	if args.UserAccessLoggingSettingsArn == nil {
		return nil, errors.New("invalid value for required argument 'UserAccessLoggingSettingsArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserAccessLoggingSettingsAssociation
	err := ctx.RegisterResource("aws:workspacesweb/userAccessLoggingSettingsAssociation:UserAccessLoggingSettingsAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserAccessLoggingSettingsAssociation gets an existing UserAccessLoggingSettingsAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserAccessLoggingSettingsAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserAccessLoggingSettingsAssociationState, opts ...pulumi.ResourceOption) (*UserAccessLoggingSettingsAssociation, error) {
	var resource UserAccessLoggingSettingsAssociation
	err := ctx.ReadResource("aws:workspacesweb/userAccessLoggingSettingsAssociation:UserAccessLoggingSettingsAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserAccessLoggingSettingsAssociation resources.
type userAccessLoggingSettingsAssociationState struct {
	// ARN of the portal to associate with the user access logging settings. Forces replacement if changed.
	//
	// The following arguments are optional:
	PortalArn *string `pulumi:"portalArn"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// ARN of the user access logging settings to associate with the portal. Forces replacement if changed.
	UserAccessLoggingSettingsArn *string `pulumi:"userAccessLoggingSettingsArn"`
}

type UserAccessLoggingSettingsAssociationState struct {
	// ARN of the portal to associate with the user access logging settings. Forces replacement if changed.
	//
	// The following arguments are optional:
	PortalArn pulumi.StringPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// ARN of the user access logging settings to associate with the portal. Forces replacement if changed.
	UserAccessLoggingSettingsArn pulumi.StringPtrInput
}

func (UserAccessLoggingSettingsAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*userAccessLoggingSettingsAssociationState)(nil)).Elem()
}

type userAccessLoggingSettingsAssociationArgs struct {
	// ARN of the portal to associate with the user access logging settings. Forces replacement if changed.
	//
	// The following arguments are optional:
	PortalArn string `pulumi:"portalArn"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// ARN of the user access logging settings to associate with the portal. Forces replacement if changed.
	UserAccessLoggingSettingsArn string `pulumi:"userAccessLoggingSettingsArn"`
}

// The set of arguments for constructing a UserAccessLoggingSettingsAssociation resource.
type UserAccessLoggingSettingsAssociationArgs struct {
	// ARN of the portal to associate with the user access logging settings. Forces replacement if changed.
	//
	// The following arguments are optional:
	PortalArn pulumi.StringInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// ARN of the user access logging settings to associate with the portal. Forces replacement if changed.
	UserAccessLoggingSettingsArn pulumi.StringInput
}

func (UserAccessLoggingSettingsAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userAccessLoggingSettingsAssociationArgs)(nil)).Elem()
}

type UserAccessLoggingSettingsAssociationInput interface {
	pulumi.Input

	ToUserAccessLoggingSettingsAssociationOutput() UserAccessLoggingSettingsAssociationOutput
	ToUserAccessLoggingSettingsAssociationOutputWithContext(ctx context.Context) UserAccessLoggingSettingsAssociationOutput
}

func (*UserAccessLoggingSettingsAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccessLoggingSettingsAssociation)(nil)).Elem()
}

func (i *UserAccessLoggingSettingsAssociation) ToUserAccessLoggingSettingsAssociationOutput() UserAccessLoggingSettingsAssociationOutput {
	return i.ToUserAccessLoggingSettingsAssociationOutputWithContext(context.Background())
}

func (i *UserAccessLoggingSettingsAssociation) ToUserAccessLoggingSettingsAssociationOutputWithContext(ctx context.Context) UserAccessLoggingSettingsAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessLoggingSettingsAssociationOutput)
}

// UserAccessLoggingSettingsAssociationArrayInput is an input type that accepts UserAccessLoggingSettingsAssociationArray and UserAccessLoggingSettingsAssociationArrayOutput values.
// You can construct a concrete instance of `UserAccessLoggingSettingsAssociationArrayInput` via:
//
//	UserAccessLoggingSettingsAssociationArray{ UserAccessLoggingSettingsAssociationArgs{...} }
type UserAccessLoggingSettingsAssociationArrayInput interface {
	pulumi.Input

	ToUserAccessLoggingSettingsAssociationArrayOutput() UserAccessLoggingSettingsAssociationArrayOutput
	ToUserAccessLoggingSettingsAssociationArrayOutputWithContext(context.Context) UserAccessLoggingSettingsAssociationArrayOutput
}

type UserAccessLoggingSettingsAssociationArray []UserAccessLoggingSettingsAssociationInput

func (UserAccessLoggingSettingsAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserAccessLoggingSettingsAssociation)(nil)).Elem()
}

func (i UserAccessLoggingSettingsAssociationArray) ToUserAccessLoggingSettingsAssociationArrayOutput() UserAccessLoggingSettingsAssociationArrayOutput {
	return i.ToUserAccessLoggingSettingsAssociationArrayOutputWithContext(context.Background())
}

func (i UserAccessLoggingSettingsAssociationArray) ToUserAccessLoggingSettingsAssociationArrayOutputWithContext(ctx context.Context) UserAccessLoggingSettingsAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessLoggingSettingsAssociationArrayOutput)
}

// UserAccessLoggingSettingsAssociationMapInput is an input type that accepts UserAccessLoggingSettingsAssociationMap and UserAccessLoggingSettingsAssociationMapOutput values.
// You can construct a concrete instance of `UserAccessLoggingSettingsAssociationMapInput` via:
//
//	UserAccessLoggingSettingsAssociationMap{ "key": UserAccessLoggingSettingsAssociationArgs{...} }
type UserAccessLoggingSettingsAssociationMapInput interface {
	pulumi.Input

	ToUserAccessLoggingSettingsAssociationMapOutput() UserAccessLoggingSettingsAssociationMapOutput
	ToUserAccessLoggingSettingsAssociationMapOutputWithContext(context.Context) UserAccessLoggingSettingsAssociationMapOutput
}

type UserAccessLoggingSettingsAssociationMap map[string]UserAccessLoggingSettingsAssociationInput

func (UserAccessLoggingSettingsAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserAccessLoggingSettingsAssociation)(nil)).Elem()
}

func (i UserAccessLoggingSettingsAssociationMap) ToUserAccessLoggingSettingsAssociationMapOutput() UserAccessLoggingSettingsAssociationMapOutput {
	return i.ToUserAccessLoggingSettingsAssociationMapOutputWithContext(context.Background())
}

func (i UserAccessLoggingSettingsAssociationMap) ToUserAccessLoggingSettingsAssociationMapOutputWithContext(ctx context.Context) UserAccessLoggingSettingsAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessLoggingSettingsAssociationMapOutput)
}

type UserAccessLoggingSettingsAssociationOutput struct{ *pulumi.OutputState }

func (UserAccessLoggingSettingsAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccessLoggingSettingsAssociation)(nil)).Elem()
}

func (o UserAccessLoggingSettingsAssociationOutput) ToUserAccessLoggingSettingsAssociationOutput() UserAccessLoggingSettingsAssociationOutput {
	return o
}

func (o UserAccessLoggingSettingsAssociationOutput) ToUserAccessLoggingSettingsAssociationOutputWithContext(ctx context.Context) UserAccessLoggingSettingsAssociationOutput {
	return o
}

// ARN of the portal to associate with the user access logging settings. Forces replacement if changed.
//
// The following arguments are optional:
func (o UserAccessLoggingSettingsAssociationOutput) PortalArn() pulumi.StringOutput {
	return o.ApplyT(func(v *UserAccessLoggingSettingsAssociation) pulumi.StringOutput { return v.PortalArn }).(pulumi.StringOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o UserAccessLoggingSettingsAssociationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *UserAccessLoggingSettingsAssociation) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// ARN of the user access logging settings to associate with the portal. Forces replacement if changed.
func (o UserAccessLoggingSettingsAssociationOutput) UserAccessLoggingSettingsArn() pulumi.StringOutput {
	return o.ApplyT(func(v *UserAccessLoggingSettingsAssociation) pulumi.StringOutput {
		return v.UserAccessLoggingSettingsArn
	}).(pulumi.StringOutput)
}

type UserAccessLoggingSettingsAssociationArrayOutput struct{ *pulumi.OutputState }

func (UserAccessLoggingSettingsAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserAccessLoggingSettingsAssociation)(nil)).Elem()
}

func (o UserAccessLoggingSettingsAssociationArrayOutput) ToUserAccessLoggingSettingsAssociationArrayOutput() UserAccessLoggingSettingsAssociationArrayOutput {
	return o
}

func (o UserAccessLoggingSettingsAssociationArrayOutput) ToUserAccessLoggingSettingsAssociationArrayOutputWithContext(ctx context.Context) UserAccessLoggingSettingsAssociationArrayOutput {
	return o
}

func (o UserAccessLoggingSettingsAssociationArrayOutput) Index(i pulumi.IntInput) UserAccessLoggingSettingsAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserAccessLoggingSettingsAssociation {
		return vs[0].([]*UserAccessLoggingSettingsAssociation)[vs[1].(int)]
	}).(UserAccessLoggingSettingsAssociationOutput)
}

type UserAccessLoggingSettingsAssociationMapOutput struct{ *pulumi.OutputState }

func (UserAccessLoggingSettingsAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserAccessLoggingSettingsAssociation)(nil)).Elem()
}

func (o UserAccessLoggingSettingsAssociationMapOutput) ToUserAccessLoggingSettingsAssociationMapOutput() UserAccessLoggingSettingsAssociationMapOutput {
	return o
}

func (o UserAccessLoggingSettingsAssociationMapOutput) ToUserAccessLoggingSettingsAssociationMapOutputWithContext(ctx context.Context) UserAccessLoggingSettingsAssociationMapOutput {
	return o
}

func (o UserAccessLoggingSettingsAssociationMapOutput) MapIndex(k pulumi.StringInput) UserAccessLoggingSettingsAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserAccessLoggingSettingsAssociation {
		return vs[0].(map[string]*UserAccessLoggingSettingsAssociation)[vs[1].(string)]
	}).(UserAccessLoggingSettingsAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserAccessLoggingSettingsAssociationInput)(nil)).Elem(), &UserAccessLoggingSettingsAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserAccessLoggingSettingsAssociationArrayInput)(nil)).Elem(), UserAccessLoggingSettingsAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserAccessLoggingSettingsAssociationMapInput)(nil)).Elem(), UserAccessLoggingSettingsAssociationMap{})
	pulumi.RegisterOutputType(UserAccessLoggingSettingsAssociationOutput{})
	pulumi.RegisterOutputType(UserAccessLoggingSettingsAssociationArrayOutput{})
	pulumi.RegisterOutputType(UserAccessLoggingSettingsAssociationMapOutput{})
}
