// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codecatalyst

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DevEnvironmentIdes struct {
	// The name of the IDE. Valid values include Cloud9, IntelliJ, PyCharm, GoLand, and VSCode.
	Name *string `pulumi:"name"`
	// A link to the IDE runtime image. This parameter is not required if the name is VSCode. Values of the runtime can be for example public.ecr.aws/jetbrains/py,public.ecr.aws/jetbrains/go
	Runtime *string `pulumi:"runtime"`
}

// DevEnvironmentIdesInput is an input type that accepts DevEnvironmentIdesArgs and DevEnvironmentIdesOutput values.
// You can construct a concrete instance of `DevEnvironmentIdesInput` via:
//
//	DevEnvironmentIdesArgs{...}
type DevEnvironmentIdesInput interface {
	pulumi.Input

	ToDevEnvironmentIdesOutput() DevEnvironmentIdesOutput
	ToDevEnvironmentIdesOutputWithContext(context.Context) DevEnvironmentIdesOutput
}

type DevEnvironmentIdesArgs struct {
	// The name of the IDE. Valid values include Cloud9, IntelliJ, PyCharm, GoLand, and VSCode.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A link to the IDE runtime image. This parameter is not required if the name is VSCode. Values of the runtime can be for example public.ecr.aws/jetbrains/py,public.ecr.aws/jetbrains/go
	Runtime pulumi.StringPtrInput `pulumi:"runtime"`
}

func (DevEnvironmentIdesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevEnvironmentIdes)(nil)).Elem()
}

func (i DevEnvironmentIdesArgs) ToDevEnvironmentIdesOutput() DevEnvironmentIdesOutput {
	return i.ToDevEnvironmentIdesOutputWithContext(context.Background())
}

func (i DevEnvironmentIdesArgs) ToDevEnvironmentIdesOutputWithContext(ctx context.Context) DevEnvironmentIdesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevEnvironmentIdesOutput)
}

func (i DevEnvironmentIdesArgs) ToDevEnvironmentIdesPtrOutput() DevEnvironmentIdesPtrOutput {
	return i.ToDevEnvironmentIdesPtrOutputWithContext(context.Background())
}

func (i DevEnvironmentIdesArgs) ToDevEnvironmentIdesPtrOutputWithContext(ctx context.Context) DevEnvironmentIdesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevEnvironmentIdesOutput).ToDevEnvironmentIdesPtrOutputWithContext(ctx)
}

// DevEnvironmentIdesPtrInput is an input type that accepts DevEnvironmentIdesArgs, DevEnvironmentIdesPtr and DevEnvironmentIdesPtrOutput values.
// You can construct a concrete instance of `DevEnvironmentIdesPtrInput` via:
//
//	        DevEnvironmentIdesArgs{...}
//
//	or:
//
//	        nil
type DevEnvironmentIdesPtrInput interface {
	pulumi.Input

	ToDevEnvironmentIdesPtrOutput() DevEnvironmentIdesPtrOutput
	ToDevEnvironmentIdesPtrOutputWithContext(context.Context) DevEnvironmentIdesPtrOutput
}

type devEnvironmentIdesPtrType DevEnvironmentIdesArgs

func DevEnvironmentIdesPtr(v *DevEnvironmentIdesArgs) DevEnvironmentIdesPtrInput {
	return (*devEnvironmentIdesPtrType)(v)
}

func (*devEnvironmentIdesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevEnvironmentIdes)(nil)).Elem()
}

func (i *devEnvironmentIdesPtrType) ToDevEnvironmentIdesPtrOutput() DevEnvironmentIdesPtrOutput {
	return i.ToDevEnvironmentIdesPtrOutputWithContext(context.Background())
}

func (i *devEnvironmentIdesPtrType) ToDevEnvironmentIdesPtrOutputWithContext(ctx context.Context) DevEnvironmentIdesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevEnvironmentIdesPtrOutput)
}

type DevEnvironmentIdesOutput struct{ *pulumi.OutputState }

func (DevEnvironmentIdesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevEnvironmentIdes)(nil)).Elem()
}

func (o DevEnvironmentIdesOutput) ToDevEnvironmentIdesOutput() DevEnvironmentIdesOutput {
	return o
}

func (o DevEnvironmentIdesOutput) ToDevEnvironmentIdesOutputWithContext(ctx context.Context) DevEnvironmentIdesOutput {
	return o
}

func (o DevEnvironmentIdesOutput) ToDevEnvironmentIdesPtrOutput() DevEnvironmentIdesPtrOutput {
	return o.ToDevEnvironmentIdesPtrOutputWithContext(context.Background())
}

func (o DevEnvironmentIdesOutput) ToDevEnvironmentIdesPtrOutputWithContext(ctx context.Context) DevEnvironmentIdesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevEnvironmentIdes) *DevEnvironmentIdes {
		return &v
	}).(DevEnvironmentIdesPtrOutput)
}

// The name of the IDE. Valid values include Cloud9, IntelliJ, PyCharm, GoLand, and VSCode.
func (o DevEnvironmentIdesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevEnvironmentIdes) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A link to the IDE runtime image. This parameter is not required if the name is VSCode. Values of the runtime can be for example public.ecr.aws/jetbrains/py,public.ecr.aws/jetbrains/go
func (o DevEnvironmentIdesOutput) Runtime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevEnvironmentIdes) *string { return v.Runtime }).(pulumi.StringPtrOutput)
}

type DevEnvironmentIdesPtrOutput struct{ *pulumi.OutputState }

func (DevEnvironmentIdesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevEnvironmentIdes)(nil)).Elem()
}

func (o DevEnvironmentIdesPtrOutput) ToDevEnvironmentIdesPtrOutput() DevEnvironmentIdesPtrOutput {
	return o
}

func (o DevEnvironmentIdesPtrOutput) ToDevEnvironmentIdesPtrOutputWithContext(ctx context.Context) DevEnvironmentIdesPtrOutput {
	return o
}

func (o DevEnvironmentIdesPtrOutput) Elem() DevEnvironmentIdesOutput {
	return o.ApplyT(func(v *DevEnvironmentIdes) DevEnvironmentIdes {
		if v != nil {
			return *v
		}
		var ret DevEnvironmentIdes
		return ret
	}).(DevEnvironmentIdesOutput)
}

// The name of the IDE. Valid values include Cloud9, IntelliJ, PyCharm, GoLand, and VSCode.
func (o DevEnvironmentIdesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevEnvironmentIdes) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A link to the IDE runtime image. This parameter is not required if the name is VSCode. Values of the runtime can be for example public.ecr.aws/jetbrains/py,public.ecr.aws/jetbrains/go
func (o DevEnvironmentIdesPtrOutput) Runtime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevEnvironmentIdes) *string {
		if v == nil {
			return nil
		}
		return v.Runtime
	}).(pulumi.StringPtrOutput)
}

type DevEnvironmentPersistentStorage struct {
	// The size of the persistent storage in gigabytes (specifically GiB). Valid values for storage are based on memory sizes in 16GB increments. Valid values are 16, 32, and 64.
	Size int `pulumi:"size"`
}

// DevEnvironmentPersistentStorageInput is an input type that accepts DevEnvironmentPersistentStorageArgs and DevEnvironmentPersistentStorageOutput values.
// You can construct a concrete instance of `DevEnvironmentPersistentStorageInput` via:
//
//	DevEnvironmentPersistentStorageArgs{...}
type DevEnvironmentPersistentStorageInput interface {
	pulumi.Input

	ToDevEnvironmentPersistentStorageOutput() DevEnvironmentPersistentStorageOutput
	ToDevEnvironmentPersistentStorageOutputWithContext(context.Context) DevEnvironmentPersistentStorageOutput
}

type DevEnvironmentPersistentStorageArgs struct {
	// The size of the persistent storage in gigabytes (specifically GiB). Valid values for storage are based on memory sizes in 16GB increments. Valid values are 16, 32, and 64.
	Size pulumi.IntInput `pulumi:"size"`
}

func (DevEnvironmentPersistentStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevEnvironmentPersistentStorage)(nil)).Elem()
}

func (i DevEnvironmentPersistentStorageArgs) ToDevEnvironmentPersistentStorageOutput() DevEnvironmentPersistentStorageOutput {
	return i.ToDevEnvironmentPersistentStorageOutputWithContext(context.Background())
}

func (i DevEnvironmentPersistentStorageArgs) ToDevEnvironmentPersistentStorageOutputWithContext(ctx context.Context) DevEnvironmentPersistentStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevEnvironmentPersistentStorageOutput)
}

func (i DevEnvironmentPersistentStorageArgs) ToDevEnvironmentPersistentStoragePtrOutput() DevEnvironmentPersistentStoragePtrOutput {
	return i.ToDevEnvironmentPersistentStoragePtrOutputWithContext(context.Background())
}

func (i DevEnvironmentPersistentStorageArgs) ToDevEnvironmentPersistentStoragePtrOutputWithContext(ctx context.Context) DevEnvironmentPersistentStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevEnvironmentPersistentStorageOutput).ToDevEnvironmentPersistentStoragePtrOutputWithContext(ctx)
}

// DevEnvironmentPersistentStoragePtrInput is an input type that accepts DevEnvironmentPersistentStorageArgs, DevEnvironmentPersistentStoragePtr and DevEnvironmentPersistentStoragePtrOutput values.
// You can construct a concrete instance of `DevEnvironmentPersistentStoragePtrInput` via:
//
//	        DevEnvironmentPersistentStorageArgs{...}
//
//	or:
//
//	        nil
type DevEnvironmentPersistentStoragePtrInput interface {
	pulumi.Input

	ToDevEnvironmentPersistentStoragePtrOutput() DevEnvironmentPersistentStoragePtrOutput
	ToDevEnvironmentPersistentStoragePtrOutputWithContext(context.Context) DevEnvironmentPersistentStoragePtrOutput
}

type devEnvironmentPersistentStoragePtrType DevEnvironmentPersistentStorageArgs

func DevEnvironmentPersistentStoragePtr(v *DevEnvironmentPersistentStorageArgs) DevEnvironmentPersistentStoragePtrInput {
	return (*devEnvironmentPersistentStoragePtrType)(v)
}

func (*devEnvironmentPersistentStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevEnvironmentPersistentStorage)(nil)).Elem()
}

func (i *devEnvironmentPersistentStoragePtrType) ToDevEnvironmentPersistentStoragePtrOutput() DevEnvironmentPersistentStoragePtrOutput {
	return i.ToDevEnvironmentPersistentStoragePtrOutputWithContext(context.Background())
}

func (i *devEnvironmentPersistentStoragePtrType) ToDevEnvironmentPersistentStoragePtrOutputWithContext(ctx context.Context) DevEnvironmentPersistentStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevEnvironmentPersistentStoragePtrOutput)
}

type DevEnvironmentPersistentStorageOutput struct{ *pulumi.OutputState }

func (DevEnvironmentPersistentStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevEnvironmentPersistentStorage)(nil)).Elem()
}

func (o DevEnvironmentPersistentStorageOutput) ToDevEnvironmentPersistentStorageOutput() DevEnvironmentPersistentStorageOutput {
	return o
}

func (o DevEnvironmentPersistentStorageOutput) ToDevEnvironmentPersistentStorageOutputWithContext(ctx context.Context) DevEnvironmentPersistentStorageOutput {
	return o
}

func (o DevEnvironmentPersistentStorageOutput) ToDevEnvironmentPersistentStoragePtrOutput() DevEnvironmentPersistentStoragePtrOutput {
	return o.ToDevEnvironmentPersistentStoragePtrOutputWithContext(context.Background())
}

func (o DevEnvironmentPersistentStorageOutput) ToDevEnvironmentPersistentStoragePtrOutputWithContext(ctx context.Context) DevEnvironmentPersistentStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevEnvironmentPersistentStorage) *DevEnvironmentPersistentStorage {
		return &v
	}).(DevEnvironmentPersistentStoragePtrOutput)
}

// The size of the persistent storage in gigabytes (specifically GiB). Valid values for storage are based on memory sizes in 16GB increments. Valid values are 16, 32, and 64.
func (o DevEnvironmentPersistentStorageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v DevEnvironmentPersistentStorage) int { return v.Size }).(pulumi.IntOutput)
}

type DevEnvironmentPersistentStoragePtrOutput struct{ *pulumi.OutputState }

func (DevEnvironmentPersistentStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevEnvironmentPersistentStorage)(nil)).Elem()
}

func (o DevEnvironmentPersistentStoragePtrOutput) ToDevEnvironmentPersistentStoragePtrOutput() DevEnvironmentPersistentStoragePtrOutput {
	return o
}

func (o DevEnvironmentPersistentStoragePtrOutput) ToDevEnvironmentPersistentStoragePtrOutputWithContext(ctx context.Context) DevEnvironmentPersistentStoragePtrOutput {
	return o
}

func (o DevEnvironmentPersistentStoragePtrOutput) Elem() DevEnvironmentPersistentStorageOutput {
	return o.ApplyT(func(v *DevEnvironmentPersistentStorage) DevEnvironmentPersistentStorage {
		if v != nil {
			return *v
		}
		var ret DevEnvironmentPersistentStorage
		return ret
	}).(DevEnvironmentPersistentStorageOutput)
}

// The size of the persistent storage in gigabytes (specifically GiB). Valid values for storage are based on memory sizes in 16GB increments. Valid values are 16, 32, and 64.
func (o DevEnvironmentPersistentStoragePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DevEnvironmentPersistentStorage) *int {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.IntPtrOutput)
}

type DevEnvironmentRepository struct {
	// The name of the branch in a source repository.
	//
	// persistent storage (`  persistentStorage `) supports the following:
	BranchName *string `pulumi:"branchName"`
	// The name of the source repository.
	RepositoryName string `pulumi:"repositoryName"`
}

// DevEnvironmentRepositoryInput is an input type that accepts DevEnvironmentRepositoryArgs and DevEnvironmentRepositoryOutput values.
// You can construct a concrete instance of `DevEnvironmentRepositoryInput` via:
//
//	DevEnvironmentRepositoryArgs{...}
type DevEnvironmentRepositoryInput interface {
	pulumi.Input

	ToDevEnvironmentRepositoryOutput() DevEnvironmentRepositoryOutput
	ToDevEnvironmentRepositoryOutputWithContext(context.Context) DevEnvironmentRepositoryOutput
}

type DevEnvironmentRepositoryArgs struct {
	// The name of the branch in a source repository.
	//
	// persistent storage (`  persistentStorage `) supports the following:
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// The name of the source repository.
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
}

func (DevEnvironmentRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevEnvironmentRepository)(nil)).Elem()
}

func (i DevEnvironmentRepositoryArgs) ToDevEnvironmentRepositoryOutput() DevEnvironmentRepositoryOutput {
	return i.ToDevEnvironmentRepositoryOutputWithContext(context.Background())
}

func (i DevEnvironmentRepositoryArgs) ToDevEnvironmentRepositoryOutputWithContext(ctx context.Context) DevEnvironmentRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevEnvironmentRepositoryOutput)
}

// DevEnvironmentRepositoryArrayInput is an input type that accepts DevEnvironmentRepositoryArray and DevEnvironmentRepositoryArrayOutput values.
// You can construct a concrete instance of `DevEnvironmentRepositoryArrayInput` via:
//
//	DevEnvironmentRepositoryArray{ DevEnvironmentRepositoryArgs{...} }
type DevEnvironmentRepositoryArrayInput interface {
	pulumi.Input

	ToDevEnvironmentRepositoryArrayOutput() DevEnvironmentRepositoryArrayOutput
	ToDevEnvironmentRepositoryArrayOutputWithContext(context.Context) DevEnvironmentRepositoryArrayOutput
}

type DevEnvironmentRepositoryArray []DevEnvironmentRepositoryInput

func (DevEnvironmentRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevEnvironmentRepository)(nil)).Elem()
}

func (i DevEnvironmentRepositoryArray) ToDevEnvironmentRepositoryArrayOutput() DevEnvironmentRepositoryArrayOutput {
	return i.ToDevEnvironmentRepositoryArrayOutputWithContext(context.Background())
}

func (i DevEnvironmentRepositoryArray) ToDevEnvironmentRepositoryArrayOutputWithContext(ctx context.Context) DevEnvironmentRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevEnvironmentRepositoryArrayOutput)
}

type DevEnvironmentRepositoryOutput struct{ *pulumi.OutputState }

func (DevEnvironmentRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevEnvironmentRepository)(nil)).Elem()
}

func (o DevEnvironmentRepositoryOutput) ToDevEnvironmentRepositoryOutput() DevEnvironmentRepositoryOutput {
	return o
}

func (o DevEnvironmentRepositoryOutput) ToDevEnvironmentRepositoryOutputWithContext(ctx context.Context) DevEnvironmentRepositoryOutput {
	return o
}

// The name of the branch in a source repository.
//
// persistent storage (`  persistentStorage `) supports the following:
func (o DevEnvironmentRepositoryOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevEnvironmentRepository) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// The name of the source repository.
func (o DevEnvironmentRepositoryOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v DevEnvironmentRepository) string { return v.RepositoryName }).(pulumi.StringOutput)
}

type DevEnvironmentRepositoryArrayOutput struct{ *pulumi.OutputState }

func (DevEnvironmentRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevEnvironmentRepository)(nil)).Elem()
}

func (o DevEnvironmentRepositoryArrayOutput) ToDevEnvironmentRepositoryArrayOutput() DevEnvironmentRepositoryArrayOutput {
	return o
}

func (o DevEnvironmentRepositoryArrayOutput) ToDevEnvironmentRepositoryArrayOutputWithContext(ctx context.Context) DevEnvironmentRepositoryArrayOutput {
	return o
}

func (o DevEnvironmentRepositoryArrayOutput) Index(i pulumi.IntInput) DevEnvironmentRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DevEnvironmentRepository {
		return vs[0].([]DevEnvironmentRepository)[vs[1].(int)]
	}).(DevEnvironmentRepositoryOutput)
}

type GetDevEnvironmentIde struct {
	Name    string `pulumi:"name"`
	Runtime string `pulumi:"runtime"`
}

// GetDevEnvironmentIdeInput is an input type that accepts GetDevEnvironmentIdeArgs and GetDevEnvironmentIdeOutput values.
// You can construct a concrete instance of `GetDevEnvironmentIdeInput` via:
//
//	GetDevEnvironmentIdeArgs{...}
type GetDevEnvironmentIdeInput interface {
	pulumi.Input

	ToGetDevEnvironmentIdeOutput() GetDevEnvironmentIdeOutput
	ToGetDevEnvironmentIdeOutputWithContext(context.Context) GetDevEnvironmentIdeOutput
}

type GetDevEnvironmentIdeArgs struct {
	Name    pulumi.StringInput `pulumi:"name"`
	Runtime pulumi.StringInput `pulumi:"runtime"`
}

func (GetDevEnvironmentIdeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevEnvironmentIde)(nil)).Elem()
}

func (i GetDevEnvironmentIdeArgs) ToGetDevEnvironmentIdeOutput() GetDevEnvironmentIdeOutput {
	return i.ToGetDevEnvironmentIdeOutputWithContext(context.Background())
}

func (i GetDevEnvironmentIdeArgs) ToGetDevEnvironmentIdeOutputWithContext(ctx context.Context) GetDevEnvironmentIdeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevEnvironmentIdeOutput)
}

// GetDevEnvironmentIdeArrayInput is an input type that accepts GetDevEnvironmentIdeArray and GetDevEnvironmentIdeArrayOutput values.
// You can construct a concrete instance of `GetDevEnvironmentIdeArrayInput` via:
//
//	GetDevEnvironmentIdeArray{ GetDevEnvironmentIdeArgs{...} }
type GetDevEnvironmentIdeArrayInput interface {
	pulumi.Input

	ToGetDevEnvironmentIdeArrayOutput() GetDevEnvironmentIdeArrayOutput
	ToGetDevEnvironmentIdeArrayOutputWithContext(context.Context) GetDevEnvironmentIdeArrayOutput
}

type GetDevEnvironmentIdeArray []GetDevEnvironmentIdeInput

func (GetDevEnvironmentIdeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevEnvironmentIde)(nil)).Elem()
}

func (i GetDevEnvironmentIdeArray) ToGetDevEnvironmentIdeArrayOutput() GetDevEnvironmentIdeArrayOutput {
	return i.ToGetDevEnvironmentIdeArrayOutputWithContext(context.Background())
}

func (i GetDevEnvironmentIdeArray) ToGetDevEnvironmentIdeArrayOutputWithContext(ctx context.Context) GetDevEnvironmentIdeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevEnvironmentIdeArrayOutput)
}

type GetDevEnvironmentIdeOutput struct{ *pulumi.OutputState }

func (GetDevEnvironmentIdeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevEnvironmentIde)(nil)).Elem()
}

func (o GetDevEnvironmentIdeOutput) ToGetDevEnvironmentIdeOutput() GetDevEnvironmentIdeOutput {
	return o
}

func (o GetDevEnvironmentIdeOutput) ToGetDevEnvironmentIdeOutputWithContext(ctx context.Context) GetDevEnvironmentIdeOutput {
	return o
}

func (o GetDevEnvironmentIdeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevEnvironmentIde) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDevEnvironmentIdeOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevEnvironmentIde) string { return v.Runtime }).(pulumi.StringOutput)
}

type GetDevEnvironmentIdeArrayOutput struct{ *pulumi.OutputState }

func (GetDevEnvironmentIdeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevEnvironmentIde)(nil)).Elem()
}

func (o GetDevEnvironmentIdeArrayOutput) ToGetDevEnvironmentIdeArrayOutput() GetDevEnvironmentIdeArrayOutput {
	return o
}

func (o GetDevEnvironmentIdeArrayOutput) ToGetDevEnvironmentIdeArrayOutputWithContext(ctx context.Context) GetDevEnvironmentIdeArrayOutput {
	return o
}

func (o GetDevEnvironmentIdeArrayOutput) Index(i pulumi.IntInput) GetDevEnvironmentIdeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevEnvironmentIde {
		return vs[0].([]GetDevEnvironmentIde)[vs[1].(int)]
	}).(GetDevEnvironmentIdeOutput)
}

type GetDevEnvironmentPersistentStorage struct {
	Size int `pulumi:"size"`
}

// GetDevEnvironmentPersistentStorageInput is an input type that accepts GetDevEnvironmentPersistentStorageArgs and GetDevEnvironmentPersistentStorageOutput values.
// You can construct a concrete instance of `GetDevEnvironmentPersistentStorageInput` via:
//
//	GetDevEnvironmentPersistentStorageArgs{...}
type GetDevEnvironmentPersistentStorageInput interface {
	pulumi.Input

	ToGetDevEnvironmentPersistentStorageOutput() GetDevEnvironmentPersistentStorageOutput
	ToGetDevEnvironmentPersistentStorageOutputWithContext(context.Context) GetDevEnvironmentPersistentStorageOutput
}

type GetDevEnvironmentPersistentStorageArgs struct {
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetDevEnvironmentPersistentStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevEnvironmentPersistentStorage)(nil)).Elem()
}

func (i GetDevEnvironmentPersistentStorageArgs) ToGetDevEnvironmentPersistentStorageOutput() GetDevEnvironmentPersistentStorageOutput {
	return i.ToGetDevEnvironmentPersistentStorageOutputWithContext(context.Background())
}

func (i GetDevEnvironmentPersistentStorageArgs) ToGetDevEnvironmentPersistentStorageOutputWithContext(ctx context.Context) GetDevEnvironmentPersistentStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevEnvironmentPersistentStorageOutput)
}

// GetDevEnvironmentPersistentStorageArrayInput is an input type that accepts GetDevEnvironmentPersistentStorageArray and GetDevEnvironmentPersistentStorageArrayOutput values.
// You can construct a concrete instance of `GetDevEnvironmentPersistentStorageArrayInput` via:
//
//	GetDevEnvironmentPersistentStorageArray{ GetDevEnvironmentPersistentStorageArgs{...} }
type GetDevEnvironmentPersistentStorageArrayInput interface {
	pulumi.Input

	ToGetDevEnvironmentPersistentStorageArrayOutput() GetDevEnvironmentPersistentStorageArrayOutput
	ToGetDevEnvironmentPersistentStorageArrayOutputWithContext(context.Context) GetDevEnvironmentPersistentStorageArrayOutput
}

type GetDevEnvironmentPersistentStorageArray []GetDevEnvironmentPersistentStorageInput

func (GetDevEnvironmentPersistentStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevEnvironmentPersistentStorage)(nil)).Elem()
}

func (i GetDevEnvironmentPersistentStorageArray) ToGetDevEnvironmentPersistentStorageArrayOutput() GetDevEnvironmentPersistentStorageArrayOutput {
	return i.ToGetDevEnvironmentPersistentStorageArrayOutputWithContext(context.Background())
}

func (i GetDevEnvironmentPersistentStorageArray) ToGetDevEnvironmentPersistentStorageArrayOutputWithContext(ctx context.Context) GetDevEnvironmentPersistentStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevEnvironmentPersistentStorageArrayOutput)
}

type GetDevEnvironmentPersistentStorageOutput struct{ *pulumi.OutputState }

func (GetDevEnvironmentPersistentStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevEnvironmentPersistentStorage)(nil)).Elem()
}

func (o GetDevEnvironmentPersistentStorageOutput) ToGetDevEnvironmentPersistentStorageOutput() GetDevEnvironmentPersistentStorageOutput {
	return o
}

func (o GetDevEnvironmentPersistentStorageOutput) ToGetDevEnvironmentPersistentStorageOutputWithContext(ctx context.Context) GetDevEnvironmentPersistentStorageOutput {
	return o
}

func (o GetDevEnvironmentPersistentStorageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevEnvironmentPersistentStorage) int { return v.Size }).(pulumi.IntOutput)
}

type GetDevEnvironmentPersistentStorageArrayOutput struct{ *pulumi.OutputState }

func (GetDevEnvironmentPersistentStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevEnvironmentPersistentStorage)(nil)).Elem()
}

func (o GetDevEnvironmentPersistentStorageArrayOutput) ToGetDevEnvironmentPersistentStorageArrayOutput() GetDevEnvironmentPersistentStorageArrayOutput {
	return o
}

func (o GetDevEnvironmentPersistentStorageArrayOutput) ToGetDevEnvironmentPersistentStorageArrayOutputWithContext(ctx context.Context) GetDevEnvironmentPersistentStorageArrayOutput {
	return o
}

func (o GetDevEnvironmentPersistentStorageArrayOutput) Index(i pulumi.IntInput) GetDevEnvironmentPersistentStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevEnvironmentPersistentStorage {
		return vs[0].([]GetDevEnvironmentPersistentStorage)[vs[1].(int)]
	}).(GetDevEnvironmentPersistentStorageOutput)
}

type GetDevEnvironmentRepository struct {
	BranchName     string `pulumi:"branchName"`
	RepositoryName string `pulumi:"repositoryName"`
}

// GetDevEnvironmentRepositoryInput is an input type that accepts GetDevEnvironmentRepositoryArgs and GetDevEnvironmentRepositoryOutput values.
// You can construct a concrete instance of `GetDevEnvironmentRepositoryInput` via:
//
//	GetDevEnvironmentRepositoryArgs{...}
type GetDevEnvironmentRepositoryInput interface {
	pulumi.Input

	ToGetDevEnvironmentRepositoryOutput() GetDevEnvironmentRepositoryOutput
	ToGetDevEnvironmentRepositoryOutputWithContext(context.Context) GetDevEnvironmentRepositoryOutput
}

type GetDevEnvironmentRepositoryArgs struct {
	BranchName     pulumi.StringInput `pulumi:"branchName"`
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
}

func (GetDevEnvironmentRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevEnvironmentRepository)(nil)).Elem()
}

func (i GetDevEnvironmentRepositoryArgs) ToGetDevEnvironmentRepositoryOutput() GetDevEnvironmentRepositoryOutput {
	return i.ToGetDevEnvironmentRepositoryOutputWithContext(context.Background())
}

func (i GetDevEnvironmentRepositoryArgs) ToGetDevEnvironmentRepositoryOutputWithContext(ctx context.Context) GetDevEnvironmentRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevEnvironmentRepositoryOutput)
}

// GetDevEnvironmentRepositoryArrayInput is an input type that accepts GetDevEnvironmentRepositoryArray and GetDevEnvironmentRepositoryArrayOutput values.
// You can construct a concrete instance of `GetDevEnvironmentRepositoryArrayInput` via:
//
//	GetDevEnvironmentRepositoryArray{ GetDevEnvironmentRepositoryArgs{...} }
type GetDevEnvironmentRepositoryArrayInput interface {
	pulumi.Input

	ToGetDevEnvironmentRepositoryArrayOutput() GetDevEnvironmentRepositoryArrayOutput
	ToGetDevEnvironmentRepositoryArrayOutputWithContext(context.Context) GetDevEnvironmentRepositoryArrayOutput
}

type GetDevEnvironmentRepositoryArray []GetDevEnvironmentRepositoryInput

func (GetDevEnvironmentRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevEnvironmentRepository)(nil)).Elem()
}

func (i GetDevEnvironmentRepositoryArray) ToGetDevEnvironmentRepositoryArrayOutput() GetDevEnvironmentRepositoryArrayOutput {
	return i.ToGetDevEnvironmentRepositoryArrayOutputWithContext(context.Background())
}

func (i GetDevEnvironmentRepositoryArray) ToGetDevEnvironmentRepositoryArrayOutputWithContext(ctx context.Context) GetDevEnvironmentRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevEnvironmentRepositoryArrayOutput)
}

type GetDevEnvironmentRepositoryOutput struct{ *pulumi.OutputState }

func (GetDevEnvironmentRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevEnvironmentRepository)(nil)).Elem()
}

func (o GetDevEnvironmentRepositoryOutput) ToGetDevEnvironmentRepositoryOutput() GetDevEnvironmentRepositoryOutput {
	return o
}

func (o GetDevEnvironmentRepositoryOutput) ToGetDevEnvironmentRepositoryOutputWithContext(ctx context.Context) GetDevEnvironmentRepositoryOutput {
	return o
}

func (o GetDevEnvironmentRepositoryOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevEnvironmentRepository) string { return v.BranchName }).(pulumi.StringOutput)
}

func (o GetDevEnvironmentRepositoryOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevEnvironmentRepository) string { return v.RepositoryName }).(pulumi.StringOutput)
}

type GetDevEnvironmentRepositoryArrayOutput struct{ *pulumi.OutputState }

func (GetDevEnvironmentRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevEnvironmentRepository)(nil)).Elem()
}

func (o GetDevEnvironmentRepositoryArrayOutput) ToGetDevEnvironmentRepositoryArrayOutput() GetDevEnvironmentRepositoryArrayOutput {
	return o
}

func (o GetDevEnvironmentRepositoryArrayOutput) ToGetDevEnvironmentRepositoryArrayOutputWithContext(ctx context.Context) GetDevEnvironmentRepositoryArrayOutput {
	return o
}

func (o GetDevEnvironmentRepositoryArrayOutput) Index(i pulumi.IntInput) GetDevEnvironmentRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevEnvironmentRepository {
		return vs[0].([]GetDevEnvironmentRepository)[vs[1].(int)]
	}).(GetDevEnvironmentRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DevEnvironmentIdesInput)(nil)).Elem(), DevEnvironmentIdesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevEnvironmentIdesPtrInput)(nil)).Elem(), DevEnvironmentIdesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevEnvironmentPersistentStorageInput)(nil)).Elem(), DevEnvironmentPersistentStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevEnvironmentPersistentStoragePtrInput)(nil)).Elem(), DevEnvironmentPersistentStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevEnvironmentRepositoryInput)(nil)).Elem(), DevEnvironmentRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevEnvironmentRepositoryArrayInput)(nil)).Elem(), DevEnvironmentRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevEnvironmentIdeInput)(nil)).Elem(), GetDevEnvironmentIdeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevEnvironmentIdeArrayInput)(nil)).Elem(), GetDevEnvironmentIdeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevEnvironmentPersistentStorageInput)(nil)).Elem(), GetDevEnvironmentPersistentStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevEnvironmentPersistentStorageArrayInput)(nil)).Elem(), GetDevEnvironmentPersistentStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevEnvironmentRepositoryInput)(nil)).Elem(), GetDevEnvironmentRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevEnvironmentRepositoryArrayInput)(nil)).Elem(), GetDevEnvironmentRepositoryArray{})
	pulumi.RegisterOutputType(DevEnvironmentIdesOutput{})
	pulumi.RegisterOutputType(DevEnvironmentIdesPtrOutput{})
	pulumi.RegisterOutputType(DevEnvironmentPersistentStorageOutput{})
	pulumi.RegisterOutputType(DevEnvironmentPersistentStoragePtrOutput{})
	pulumi.RegisterOutputType(DevEnvironmentRepositoryOutput{})
	pulumi.RegisterOutputType(DevEnvironmentRepositoryArrayOutput{})
	pulumi.RegisterOutputType(GetDevEnvironmentIdeOutput{})
	pulumi.RegisterOutputType(GetDevEnvironmentIdeArrayOutput{})
	pulumi.RegisterOutputType(GetDevEnvironmentPersistentStorageOutput{})
	pulumi.RegisterOutputType(GetDevEnvironmentPersistentStorageArrayOutput{})
	pulumi.RegisterOutputType(GetDevEnvironmentRepositoryOutput{})
	pulumi.RegisterOutputType(GetDevEnvironmentRepositoryArrayOutput{})
}
