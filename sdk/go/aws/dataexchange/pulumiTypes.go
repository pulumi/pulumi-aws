// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataexchange

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type EventActionAction struct {
	// Configuration for an Export Revision to S3 action.
	// Described in `exportRevisionToS3` Configuration Block
	ExportRevisionToS3 *EventActionActionExportRevisionToS3 `pulumi:"exportRevisionToS3"`
}

// EventActionActionInput is an input type that accepts EventActionActionArgs and EventActionActionOutput values.
// You can construct a concrete instance of `EventActionActionInput` via:
//
//	EventActionActionArgs{...}
type EventActionActionInput interface {
	pulumi.Input

	ToEventActionActionOutput() EventActionActionOutput
	ToEventActionActionOutputWithContext(context.Context) EventActionActionOutput
}

type EventActionActionArgs struct {
	// Configuration for an Export Revision to S3 action.
	// Described in `exportRevisionToS3` Configuration Block
	ExportRevisionToS3 EventActionActionExportRevisionToS3PtrInput `pulumi:"exportRevisionToS3"`
}

func (EventActionActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventActionAction)(nil)).Elem()
}

func (i EventActionActionArgs) ToEventActionActionOutput() EventActionActionOutput {
	return i.ToEventActionActionOutputWithContext(context.Background())
}

func (i EventActionActionArgs) ToEventActionActionOutputWithContext(ctx context.Context) EventActionActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionActionOutput)
}

func (i EventActionActionArgs) ToEventActionActionPtrOutput() EventActionActionPtrOutput {
	return i.ToEventActionActionPtrOutputWithContext(context.Background())
}

func (i EventActionActionArgs) ToEventActionActionPtrOutputWithContext(ctx context.Context) EventActionActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionActionOutput).ToEventActionActionPtrOutputWithContext(ctx)
}

// EventActionActionPtrInput is an input type that accepts EventActionActionArgs, EventActionActionPtr and EventActionActionPtrOutput values.
// You can construct a concrete instance of `EventActionActionPtrInput` via:
//
//	        EventActionActionArgs{...}
//
//	or:
//
//	        nil
type EventActionActionPtrInput interface {
	pulumi.Input

	ToEventActionActionPtrOutput() EventActionActionPtrOutput
	ToEventActionActionPtrOutputWithContext(context.Context) EventActionActionPtrOutput
}

type eventActionActionPtrType EventActionActionArgs

func EventActionActionPtr(v *EventActionActionArgs) EventActionActionPtrInput {
	return (*eventActionActionPtrType)(v)
}

func (*eventActionActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventActionAction)(nil)).Elem()
}

func (i *eventActionActionPtrType) ToEventActionActionPtrOutput() EventActionActionPtrOutput {
	return i.ToEventActionActionPtrOutputWithContext(context.Background())
}

func (i *eventActionActionPtrType) ToEventActionActionPtrOutputWithContext(ctx context.Context) EventActionActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionActionPtrOutput)
}

type EventActionActionOutput struct{ *pulumi.OutputState }

func (EventActionActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventActionAction)(nil)).Elem()
}

func (o EventActionActionOutput) ToEventActionActionOutput() EventActionActionOutput {
	return o
}

func (o EventActionActionOutput) ToEventActionActionOutputWithContext(ctx context.Context) EventActionActionOutput {
	return o
}

func (o EventActionActionOutput) ToEventActionActionPtrOutput() EventActionActionPtrOutput {
	return o.ToEventActionActionPtrOutputWithContext(context.Background())
}

func (o EventActionActionOutput) ToEventActionActionPtrOutputWithContext(ctx context.Context) EventActionActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventActionAction) *EventActionAction {
		return &v
	}).(EventActionActionPtrOutput)
}

// Configuration for an Export Revision to S3 action.
// Described in `exportRevisionToS3` Configuration Block
func (o EventActionActionOutput) ExportRevisionToS3() EventActionActionExportRevisionToS3PtrOutput {
	return o.ApplyT(func(v EventActionAction) *EventActionActionExportRevisionToS3 { return v.ExportRevisionToS3 }).(EventActionActionExportRevisionToS3PtrOutput)
}

type EventActionActionPtrOutput struct{ *pulumi.OutputState }

func (EventActionActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventActionAction)(nil)).Elem()
}

func (o EventActionActionPtrOutput) ToEventActionActionPtrOutput() EventActionActionPtrOutput {
	return o
}

func (o EventActionActionPtrOutput) ToEventActionActionPtrOutputWithContext(ctx context.Context) EventActionActionPtrOutput {
	return o
}

func (o EventActionActionPtrOutput) Elem() EventActionActionOutput {
	return o.ApplyT(func(v *EventActionAction) EventActionAction {
		if v != nil {
			return *v
		}
		var ret EventActionAction
		return ret
	}).(EventActionActionOutput)
}

// Configuration for an Export Revision to S3 action.
// Described in `exportRevisionToS3` Configuration Block
func (o EventActionActionPtrOutput) ExportRevisionToS3() EventActionActionExportRevisionToS3PtrOutput {
	return o.ApplyT(func(v *EventActionAction) *EventActionActionExportRevisionToS3 {
		if v == nil {
			return nil
		}
		return v.ExportRevisionToS3
	}).(EventActionActionExportRevisionToS3PtrOutput)
}

type EventActionActionExportRevisionToS3 struct {
	// Configures server-side encryption of the exported revision.
	// Described in `encryption` Configuration Block below.
	Encryption *EventActionActionExportRevisionToS3Encryption `pulumi:"encryption"`
	// Configures the S3 destination of the exported revision.
	// Described in `revisionDestination` Configuration Block below.
	RevisionDestination *EventActionActionExportRevisionToS3RevisionDestination `pulumi:"revisionDestination"`
}

// EventActionActionExportRevisionToS3Input is an input type that accepts EventActionActionExportRevisionToS3Args and EventActionActionExportRevisionToS3Output values.
// You can construct a concrete instance of `EventActionActionExportRevisionToS3Input` via:
//
//	EventActionActionExportRevisionToS3Args{...}
type EventActionActionExportRevisionToS3Input interface {
	pulumi.Input

	ToEventActionActionExportRevisionToS3Output() EventActionActionExportRevisionToS3Output
	ToEventActionActionExportRevisionToS3OutputWithContext(context.Context) EventActionActionExportRevisionToS3Output
}

type EventActionActionExportRevisionToS3Args struct {
	// Configures server-side encryption of the exported revision.
	// Described in `encryption` Configuration Block below.
	Encryption EventActionActionExportRevisionToS3EncryptionPtrInput `pulumi:"encryption"`
	// Configures the S3 destination of the exported revision.
	// Described in `revisionDestination` Configuration Block below.
	RevisionDestination EventActionActionExportRevisionToS3RevisionDestinationPtrInput `pulumi:"revisionDestination"`
}

func (EventActionActionExportRevisionToS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*EventActionActionExportRevisionToS3)(nil)).Elem()
}

func (i EventActionActionExportRevisionToS3Args) ToEventActionActionExportRevisionToS3Output() EventActionActionExportRevisionToS3Output {
	return i.ToEventActionActionExportRevisionToS3OutputWithContext(context.Background())
}

func (i EventActionActionExportRevisionToS3Args) ToEventActionActionExportRevisionToS3OutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionActionExportRevisionToS3Output)
}

func (i EventActionActionExportRevisionToS3Args) ToEventActionActionExportRevisionToS3PtrOutput() EventActionActionExportRevisionToS3PtrOutput {
	return i.ToEventActionActionExportRevisionToS3PtrOutputWithContext(context.Background())
}

func (i EventActionActionExportRevisionToS3Args) ToEventActionActionExportRevisionToS3PtrOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionActionExportRevisionToS3Output).ToEventActionActionExportRevisionToS3PtrOutputWithContext(ctx)
}

// EventActionActionExportRevisionToS3PtrInput is an input type that accepts EventActionActionExportRevisionToS3Args, EventActionActionExportRevisionToS3Ptr and EventActionActionExportRevisionToS3PtrOutput values.
// You can construct a concrete instance of `EventActionActionExportRevisionToS3PtrInput` via:
//
//	        EventActionActionExportRevisionToS3Args{...}
//
//	or:
//
//	        nil
type EventActionActionExportRevisionToS3PtrInput interface {
	pulumi.Input

	ToEventActionActionExportRevisionToS3PtrOutput() EventActionActionExportRevisionToS3PtrOutput
	ToEventActionActionExportRevisionToS3PtrOutputWithContext(context.Context) EventActionActionExportRevisionToS3PtrOutput
}

type eventActionActionExportRevisionToS3PtrType EventActionActionExportRevisionToS3Args

func EventActionActionExportRevisionToS3Ptr(v *EventActionActionExportRevisionToS3Args) EventActionActionExportRevisionToS3PtrInput {
	return (*eventActionActionExportRevisionToS3PtrType)(v)
}

func (*eventActionActionExportRevisionToS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventActionActionExportRevisionToS3)(nil)).Elem()
}

func (i *eventActionActionExportRevisionToS3PtrType) ToEventActionActionExportRevisionToS3PtrOutput() EventActionActionExportRevisionToS3PtrOutput {
	return i.ToEventActionActionExportRevisionToS3PtrOutputWithContext(context.Background())
}

func (i *eventActionActionExportRevisionToS3PtrType) ToEventActionActionExportRevisionToS3PtrOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionActionExportRevisionToS3PtrOutput)
}

type EventActionActionExportRevisionToS3Output struct{ *pulumi.OutputState }

func (EventActionActionExportRevisionToS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*EventActionActionExportRevisionToS3)(nil)).Elem()
}

func (o EventActionActionExportRevisionToS3Output) ToEventActionActionExportRevisionToS3Output() EventActionActionExportRevisionToS3Output {
	return o
}

func (o EventActionActionExportRevisionToS3Output) ToEventActionActionExportRevisionToS3OutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3Output {
	return o
}

func (o EventActionActionExportRevisionToS3Output) ToEventActionActionExportRevisionToS3PtrOutput() EventActionActionExportRevisionToS3PtrOutput {
	return o.ToEventActionActionExportRevisionToS3PtrOutputWithContext(context.Background())
}

func (o EventActionActionExportRevisionToS3Output) ToEventActionActionExportRevisionToS3PtrOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventActionActionExportRevisionToS3) *EventActionActionExportRevisionToS3 {
		return &v
	}).(EventActionActionExportRevisionToS3PtrOutput)
}

// Configures server-side encryption of the exported revision.
// Described in `encryption` Configuration Block below.
func (o EventActionActionExportRevisionToS3Output) Encryption() EventActionActionExportRevisionToS3EncryptionPtrOutput {
	return o.ApplyT(func(v EventActionActionExportRevisionToS3) *EventActionActionExportRevisionToS3Encryption {
		return v.Encryption
	}).(EventActionActionExportRevisionToS3EncryptionPtrOutput)
}

// Configures the S3 destination of the exported revision.
// Described in `revisionDestination` Configuration Block below.
func (o EventActionActionExportRevisionToS3Output) RevisionDestination() EventActionActionExportRevisionToS3RevisionDestinationPtrOutput {
	return o.ApplyT(func(v EventActionActionExportRevisionToS3) *EventActionActionExportRevisionToS3RevisionDestination {
		return v.RevisionDestination
	}).(EventActionActionExportRevisionToS3RevisionDestinationPtrOutput)
}

type EventActionActionExportRevisionToS3PtrOutput struct{ *pulumi.OutputState }

func (EventActionActionExportRevisionToS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventActionActionExportRevisionToS3)(nil)).Elem()
}

func (o EventActionActionExportRevisionToS3PtrOutput) ToEventActionActionExportRevisionToS3PtrOutput() EventActionActionExportRevisionToS3PtrOutput {
	return o
}

func (o EventActionActionExportRevisionToS3PtrOutput) ToEventActionActionExportRevisionToS3PtrOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3PtrOutput {
	return o
}

func (o EventActionActionExportRevisionToS3PtrOutput) Elem() EventActionActionExportRevisionToS3Output {
	return o.ApplyT(func(v *EventActionActionExportRevisionToS3) EventActionActionExportRevisionToS3 {
		if v != nil {
			return *v
		}
		var ret EventActionActionExportRevisionToS3
		return ret
	}).(EventActionActionExportRevisionToS3Output)
}

// Configures server-side encryption of the exported revision.
// Described in `encryption` Configuration Block below.
func (o EventActionActionExportRevisionToS3PtrOutput) Encryption() EventActionActionExportRevisionToS3EncryptionPtrOutput {
	return o.ApplyT(func(v *EventActionActionExportRevisionToS3) *EventActionActionExportRevisionToS3Encryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(EventActionActionExportRevisionToS3EncryptionPtrOutput)
}

// Configures the S3 destination of the exported revision.
// Described in `revisionDestination` Configuration Block below.
func (o EventActionActionExportRevisionToS3PtrOutput) RevisionDestination() EventActionActionExportRevisionToS3RevisionDestinationPtrOutput {
	return o.ApplyT(func(v *EventActionActionExportRevisionToS3) *EventActionActionExportRevisionToS3RevisionDestination {
		if v == nil {
			return nil
		}
		return v.RevisionDestination
	}).(EventActionActionExportRevisionToS3RevisionDestinationPtrOutput)
}

type EventActionActionExportRevisionToS3Encryption struct {
	// ARN of the KMS key used for encryption.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// Type of server-side encryption.
	// Valid values are `aws:kms` or `aws:s3`.
	Type *string `pulumi:"type"`
}

// EventActionActionExportRevisionToS3EncryptionInput is an input type that accepts EventActionActionExportRevisionToS3EncryptionArgs and EventActionActionExportRevisionToS3EncryptionOutput values.
// You can construct a concrete instance of `EventActionActionExportRevisionToS3EncryptionInput` via:
//
//	EventActionActionExportRevisionToS3EncryptionArgs{...}
type EventActionActionExportRevisionToS3EncryptionInput interface {
	pulumi.Input

	ToEventActionActionExportRevisionToS3EncryptionOutput() EventActionActionExportRevisionToS3EncryptionOutput
	ToEventActionActionExportRevisionToS3EncryptionOutputWithContext(context.Context) EventActionActionExportRevisionToS3EncryptionOutput
}

type EventActionActionExportRevisionToS3EncryptionArgs struct {
	// ARN of the KMS key used for encryption.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// Type of server-side encryption.
	// Valid values are `aws:kms` or `aws:s3`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (EventActionActionExportRevisionToS3EncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventActionActionExportRevisionToS3Encryption)(nil)).Elem()
}

func (i EventActionActionExportRevisionToS3EncryptionArgs) ToEventActionActionExportRevisionToS3EncryptionOutput() EventActionActionExportRevisionToS3EncryptionOutput {
	return i.ToEventActionActionExportRevisionToS3EncryptionOutputWithContext(context.Background())
}

func (i EventActionActionExportRevisionToS3EncryptionArgs) ToEventActionActionExportRevisionToS3EncryptionOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3EncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionActionExportRevisionToS3EncryptionOutput)
}

func (i EventActionActionExportRevisionToS3EncryptionArgs) ToEventActionActionExportRevisionToS3EncryptionPtrOutput() EventActionActionExportRevisionToS3EncryptionPtrOutput {
	return i.ToEventActionActionExportRevisionToS3EncryptionPtrOutputWithContext(context.Background())
}

func (i EventActionActionExportRevisionToS3EncryptionArgs) ToEventActionActionExportRevisionToS3EncryptionPtrOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionActionExportRevisionToS3EncryptionOutput).ToEventActionActionExportRevisionToS3EncryptionPtrOutputWithContext(ctx)
}

// EventActionActionExportRevisionToS3EncryptionPtrInput is an input type that accepts EventActionActionExportRevisionToS3EncryptionArgs, EventActionActionExportRevisionToS3EncryptionPtr and EventActionActionExportRevisionToS3EncryptionPtrOutput values.
// You can construct a concrete instance of `EventActionActionExportRevisionToS3EncryptionPtrInput` via:
//
//	        EventActionActionExportRevisionToS3EncryptionArgs{...}
//
//	or:
//
//	        nil
type EventActionActionExportRevisionToS3EncryptionPtrInput interface {
	pulumi.Input

	ToEventActionActionExportRevisionToS3EncryptionPtrOutput() EventActionActionExportRevisionToS3EncryptionPtrOutput
	ToEventActionActionExportRevisionToS3EncryptionPtrOutputWithContext(context.Context) EventActionActionExportRevisionToS3EncryptionPtrOutput
}

type eventActionActionExportRevisionToS3EncryptionPtrType EventActionActionExportRevisionToS3EncryptionArgs

func EventActionActionExportRevisionToS3EncryptionPtr(v *EventActionActionExportRevisionToS3EncryptionArgs) EventActionActionExportRevisionToS3EncryptionPtrInput {
	return (*eventActionActionExportRevisionToS3EncryptionPtrType)(v)
}

func (*eventActionActionExportRevisionToS3EncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventActionActionExportRevisionToS3Encryption)(nil)).Elem()
}

func (i *eventActionActionExportRevisionToS3EncryptionPtrType) ToEventActionActionExportRevisionToS3EncryptionPtrOutput() EventActionActionExportRevisionToS3EncryptionPtrOutput {
	return i.ToEventActionActionExportRevisionToS3EncryptionPtrOutputWithContext(context.Background())
}

func (i *eventActionActionExportRevisionToS3EncryptionPtrType) ToEventActionActionExportRevisionToS3EncryptionPtrOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionActionExportRevisionToS3EncryptionPtrOutput)
}

type EventActionActionExportRevisionToS3EncryptionOutput struct{ *pulumi.OutputState }

func (EventActionActionExportRevisionToS3EncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventActionActionExportRevisionToS3Encryption)(nil)).Elem()
}

func (o EventActionActionExportRevisionToS3EncryptionOutput) ToEventActionActionExportRevisionToS3EncryptionOutput() EventActionActionExportRevisionToS3EncryptionOutput {
	return o
}

func (o EventActionActionExportRevisionToS3EncryptionOutput) ToEventActionActionExportRevisionToS3EncryptionOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3EncryptionOutput {
	return o
}

func (o EventActionActionExportRevisionToS3EncryptionOutput) ToEventActionActionExportRevisionToS3EncryptionPtrOutput() EventActionActionExportRevisionToS3EncryptionPtrOutput {
	return o.ToEventActionActionExportRevisionToS3EncryptionPtrOutputWithContext(context.Background())
}

func (o EventActionActionExportRevisionToS3EncryptionOutput) ToEventActionActionExportRevisionToS3EncryptionPtrOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3EncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventActionActionExportRevisionToS3Encryption) *EventActionActionExportRevisionToS3Encryption {
		return &v
	}).(EventActionActionExportRevisionToS3EncryptionPtrOutput)
}

// ARN of the KMS key used for encryption.
func (o EventActionActionExportRevisionToS3EncryptionOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventActionActionExportRevisionToS3Encryption) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// Type of server-side encryption.
// Valid values are `aws:kms` or `aws:s3`.
func (o EventActionActionExportRevisionToS3EncryptionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventActionActionExportRevisionToS3Encryption) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type EventActionActionExportRevisionToS3EncryptionPtrOutput struct{ *pulumi.OutputState }

func (EventActionActionExportRevisionToS3EncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventActionActionExportRevisionToS3Encryption)(nil)).Elem()
}

func (o EventActionActionExportRevisionToS3EncryptionPtrOutput) ToEventActionActionExportRevisionToS3EncryptionPtrOutput() EventActionActionExportRevisionToS3EncryptionPtrOutput {
	return o
}

func (o EventActionActionExportRevisionToS3EncryptionPtrOutput) ToEventActionActionExportRevisionToS3EncryptionPtrOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3EncryptionPtrOutput {
	return o
}

func (o EventActionActionExportRevisionToS3EncryptionPtrOutput) Elem() EventActionActionExportRevisionToS3EncryptionOutput {
	return o.ApplyT(func(v *EventActionActionExportRevisionToS3Encryption) EventActionActionExportRevisionToS3Encryption {
		if v != nil {
			return *v
		}
		var ret EventActionActionExportRevisionToS3Encryption
		return ret
	}).(EventActionActionExportRevisionToS3EncryptionOutput)
}

// ARN of the KMS key used for encryption.
func (o EventActionActionExportRevisionToS3EncryptionPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventActionActionExportRevisionToS3Encryption) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// Type of server-side encryption.
// Valid values are `aws:kms` or `aws:s3`.
func (o EventActionActionExportRevisionToS3EncryptionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventActionActionExportRevisionToS3Encryption) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type EventActionActionExportRevisionToS3RevisionDestination struct {
	// The S3 bucket where the revision will be exported.
	Bucket string `pulumi:"bucket"`
	// Pattern for naming revisions in the S3 bucket.
	// Defaults to `${Revision.CreatedAt}/${Asset.Name}`.
	KeyPattern *string `pulumi:"keyPattern"`
}

// EventActionActionExportRevisionToS3RevisionDestinationInput is an input type that accepts EventActionActionExportRevisionToS3RevisionDestinationArgs and EventActionActionExportRevisionToS3RevisionDestinationOutput values.
// You can construct a concrete instance of `EventActionActionExportRevisionToS3RevisionDestinationInput` via:
//
//	EventActionActionExportRevisionToS3RevisionDestinationArgs{...}
type EventActionActionExportRevisionToS3RevisionDestinationInput interface {
	pulumi.Input

	ToEventActionActionExportRevisionToS3RevisionDestinationOutput() EventActionActionExportRevisionToS3RevisionDestinationOutput
	ToEventActionActionExportRevisionToS3RevisionDestinationOutputWithContext(context.Context) EventActionActionExportRevisionToS3RevisionDestinationOutput
}

type EventActionActionExportRevisionToS3RevisionDestinationArgs struct {
	// The S3 bucket where the revision will be exported.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Pattern for naming revisions in the S3 bucket.
	// Defaults to `${Revision.CreatedAt}/${Asset.Name}`.
	KeyPattern pulumi.StringPtrInput `pulumi:"keyPattern"`
}

func (EventActionActionExportRevisionToS3RevisionDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventActionActionExportRevisionToS3RevisionDestination)(nil)).Elem()
}

func (i EventActionActionExportRevisionToS3RevisionDestinationArgs) ToEventActionActionExportRevisionToS3RevisionDestinationOutput() EventActionActionExportRevisionToS3RevisionDestinationOutput {
	return i.ToEventActionActionExportRevisionToS3RevisionDestinationOutputWithContext(context.Background())
}

func (i EventActionActionExportRevisionToS3RevisionDestinationArgs) ToEventActionActionExportRevisionToS3RevisionDestinationOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3RevisionDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionActionExportRevisionToS3RevisionDestinationOutput)
}

func (i EventActionActionExportRevisionToS3RevisionDestinationArgs) ToEventActionActionExportRevisionToS3RevisionDestinationPtrOutput() EventActionActionExportRevisionToS3RevisionDestinationPtrOutput {
	return i.ToEventActionActionExportRevisionToS3RevisionDestinationPtrOutputWithContext(context.Background())
}

func (i EventActionActionExportRevisionToS3RevisionDestinationArgs) ToEventActionActionExportRevisionToS3RevisionDestinationPtrOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3RevisionDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionActionExportRevisionToS3RevisionDestinationOutput).ToEventActionActionExportRevisionToS3RevisionDestinationPtrOutputWithContext(ctx)
}

// EventActionActionExportRevisionToS3RevisionDestinationPtrInput is an input type that accepts EventActionActionExportRevisionToS3RevisionDestinationArgs, EventActionActionExportRevisionToS3RevisionDestinationPtr and EventActionActionExportRevisionToS3RevisionDestinationPtrOutput values.
// You can construct a concrete instance of `EventActionActionExportRevisionToS3RevisionDestinationPtrInput` via:
//
//	        EventActionActionExportRevisionToS3RevisionDestinationArgs{...}
//
//	or:
//
//	        nil
type EventActionActionExportRevisionToS3RevisionDestinationPtrInput interface {
	pulumi.Input

	ToEventActionActionExportRevisionToS3RevisionDestinationPtrOutput() EventActionActionExportRevisionToS3RevisionDestinationPtrOutput
	ToEventActionActionExportRevisionToS3RevisionDestinationPtrOutputWithContext(context.Context) EventActionActionExportRevisionToS3RevisionDestinationPtrOutput
}

type eventActionActionExportRevisionToS3RevisionDestinationPtrType EventActionActionExportRevisionToS3RevisionDestinationArgs

func EventActionActionExportRevisionToS3RevisionDestinationPtr(v *EventActionActionExportRevisionToS3RevisionDestinationArgs) EventActionActionExportRevisionToS3RevisionDestinationPtrInput {
	return (*eventActionActionExportRevisionToS3RevisionDestinationPtrType)(v)
}

func (*eventActionActionExportRevisionToS3RevisionDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventActionActionExportRevisionToS3RevisionDestination)(nil)).Elem()
}

func (i *eventActionActionExportRevisionToS3RevisionDestinationPtrType) ToEventActionActionExportRevisionToS3RevisionDestinationPtrOutput() EventActionActionExportRevisionToS3RevisionDestinationPtrOutput {
	return i.ToEventActionActionExportRevisionToS3RevisionDestinationPtrOutputWithContext(context.Background())
}

func (i *eventActionActionExportRevisionToS3RevisionDestinationPtrType) ToEventActionActionExportRevisionToS3RevisionDestinationPtrOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3RevisionDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionActionExportRevisionToS3RevisionDestinationPtrOutput)
}

type EventActionActionExportRevisionToS3RevisionDestinationOutput struct{ *pulumi.OutputState }

func (EventActionActionExportRevisionToS3RevisionDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventActionActionExportRevisionToS3RevisionDestination)(nil)).Elem()
}

func (o EventActionActionExportRevisionToS3RevisionDestinationOutput) ToEventActionActionExportRevisionToS3RevisionDestinationOutput() EventActionActionExportRevisionToS3RevisionDestinationOutput {
	return o
}

func (o EventActionActionExportRevisionToS3RevisionDestinationOutput) ToEventActionActionExportRevisionToS3RevisionDestinationOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3RevisionDestinationOutput {
	return o
}

func (o EventActionActionExportRevisionToS3RevisionDestinationOutput) ToEventActionActionExportRevisionToS3RevisionDestinationPtrOutput() EventActionActionExportRevisionToS3RevisionDestinationPtrOutput {
	return o.ToEventActionActionExportRevisionToS3RevisionDestinationPtrOutputWithContext(context.Background())
}

func (o EventActionActionExportRevisionToS3RevisionDestinationOutput) ToEventActionActionExportRevisionToS3RevisionDestinationPtrOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3RevisionDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventActionActionExportRevisionToS3RevisionDestination) *EventActionActionExportRevisionToS3RevisionDestination {
		return &v
	}).(EventActionActionExportRevisionToS3RevisionDestinationPtrOutput)
}

// The S3 bucket where the revision will be exported.
func (o EventActionActionExportRevisionToS3RevisionDestinationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v EventActionActionExportRevisionToS3RevisionDestination) string { return v.Bucket }).(pulumi.StringOutput)
}

// Pattern for naming revisions in the S3 bucket.
// Defaults to `${Revision.CreatedAt}/${Asset.Name}`.
func (o EventActionActionExportRevisionToS3RevisionDestinationOutput) KeyPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventActionActionExportRevisionToS3RevisionDestination) *string { return v.KeyPattern }).(pulumi.StringPtrOutput)
}

type EventActionActionExportRevisionToS3RevisionDestinationPtrOutput struct{ *pulumi.OutputState }

func (EventActionActionExportRevisionToS3RevisionDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventActionActionExportRevisionToS3RevisionDestination)(nil)).Elem()
}

func (o EventActionActionExportRevisionToS3RevisionDestinationPtrOutput) ToEventActionActionExportRevisionToS3RevisionDestinationPtrOutput() EventActionActionExportRevisionToS3RevisionDestinationPtrOutput {
	return o
}

func (o EventActionActionExportRevisionToS3RevisionDestinationPtrOutput) ToEventActionActionExportRevisionToS3RevisionDestinationPtrOutputWithContext(ctx context.Context) EventActionActionExportRevisionToS3RevisionDestinationPtrOutput {
	return o
}

func (o EventActionActionExportRevisionToS3RevisionDestinationPtrOutput) Elem() EventActionActionExportRevisionToS3RevisionDestinationOutput {
	return o.ApplyT(func(v *EventActionActionExportRevisionToS3RevisionDestination) EventActionActionExportRevisionToS3RevisionDestination {
		if v != nil {
			return *v
		}
		var ret EventActionActionExportRevisionToS3RevisionDestination
		return ret
	}).(EventActionActionExportRevisionToS3RevisionDestinationOutput)
}

// The S3 bucket where the revision will be exported.
func (o EventActionActionExportRevisionToS3RevisionDestinationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventActionActionExportRevisionToS3RevisionDestination) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Pattern for naming revisions in the S3 bucket.
// Defaults to `${Revision.CreatedAt}/${Asset.Name}`.
func (o EventActionActionExportRevisionToS3RevisionDestinationPtrOutput) KeyPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventActionActionExportRevisionToS3RevisionDestination) *string {
		if v == nil {
			return nil
		}
		return v.KeyPattern
	}).(pulumi.StringPtrOutput)
}

type EventActionEvent struct {
	// Configuration for a Revision Published event.
	// Described in `revisionPublished` Configuration Block below.
	RevisionPublished *EventActionEventRevisionPublished `pulumi:"revisionPublished"`
}

// EventActionEventInput is an input type that accepts EventActionEventArgs and EventActionEventOutput values.
// You can construct a concrete instance of `EventActionEventInput` via:
//
//	EventActionEventArgs{...}
type EventActionEventInput interface {
	pulumi.Input

	ToEventActionEventOutput() EventActionEventOutput
	ToEventActionEventOutputWithContext(context.Context) EventActionEventOutput
}

type EventActionEventArgs struct {
	// Configuration for a Revision Published event.
	// Described in `revisionPublished` Configuration Block below.
	RevisionPublished EventActionEventRevisionPublishedPtrInput `pulumi:"revisionPublished"`
}

func (EventActionEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventActionEvent)(nil)).Elem()
}

func (i EventActionEventArgs) ToEventActionEventOutput() EventActionEventOutput {
	return i.ToEventActionEventOutputWithContext(context.Background())
}

func (i EventActionEventArgs) ToEventActionEventOutputWithContext(ctx context.Context) EventActionEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionEventOutput)
}

func (i EventActionEventArgs) ToEventActionEventPtrOutput() EventActionEventPtrOutput {
	return i.ToEventActionEventPtrOutputWithContext(context.Background())
}

func (i EventActionEventArgs) ToEventActionEventPtrOutputWithContext(ctx context.Context) EventActionEventPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionEventOutput).ToEventActionEventPtrOutputWithContext(ctx)
}

// EventActionEventPtrInput is an input type that accepts EventActionEventArgs, EventActionEventPtr and EventActionEventPtrOutput values.
// You can construct a concrete instance of `EventActionEventPtrInput` via:
//
//	        EventActionEventArgs{...}
//
//	or:
//
//	        nil
type EventActionEventPtrInput interface {
	pulumi.Input

	ToEventActionEventPtrOutput() EventActionEventPtrOutput
	ToEventActionEventPtrOutputWithContext(context.Context) EventActionEventPtrOutput
}

type eventActionEventPtrType EventActionEventArgs

func EventActionEventPtr(v *EventActionEventArgs) EventActionEventPtrInput {
	return (*eventActionEventPtrType)(v)
}

func (*eventActionEventPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventActionEvent)(nil)).Elem()
}

func (i *eventActionEventPtrType) ToEventActionEventPtrOutput() EventActionEventPtrOutput {
	return i.ToEventActionEventPtrOutputWithContext(context.Background())
}

func (i *eventActionEventPtrType) ToEventActionEventPtrOutputWithContext(ctx context.Context) EventActionEventPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionEventPtrOutput)
}

type EventActionEventOutput struct{ *pulumi.OutputState }

func (EventActionEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventActionEvent)(nil)).Elem()
}

func (o EventActionEventOutput) ToEventActionEventOutput() EventActionEventOutput {
	return o
}

func (o EventActionEventOutput) ToEventActionEventOutputWithContext(ctx context.Context) EventActionEventOutput {
	return o
}

func (o EventActionEventOutput) ToEventActionEventPtrOutput() EventActionEventPtrOutput {
	return o.ToEventActionEventPtrOutputWithContext(context.Background())
}

func (o EventActionEventOutput) ToEventActionEventPtrOutputWithContext(ctx context.Context) EventActionEventPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventActionEvent) *EventActionEvent {
		return &v
	}).(EventActionEventPtrOutput)
}

// Configuration for a Revision Published event.
// Described in `revisionPublished` Configuration Block below.
func (o EventActionEventOutput) RevisionPublished() EventActionEventRevisionPublishedPtrOutput {
	return o.ApplyT(func(v EventActionEvent) *EventActionEventRevisionPublished { return v.RevisionPublished }).(EventActionEventRevisionPublishedPtrOutput)
}

type EventActionEventPtrOutput struct{ *pulumi.OutputState }

func (EventActionEventPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventActionEvent)(nil)).Elem()
}

func (o EventActionEventPtrOutput) ToEventActionEventPtrOutput() EventActionEventPtrOutput {
	return o
}

func (o EventActionEventPtrOutput) ToEventActionEventPtrOutputWithContext(ctx context.Context) EventActionEventPtrOutput {
	return o
}

func (o EventActionEventPtrOutput) Elem() EventActionEventOutput {
	return o.ApplyT(func(v *EventActionEvent) EventActionEvent {
		if v != nil {
			return *v
		}
		var ret EventActionEvent
		return ret
	}).(EventActionEventOutput)
}

// Configuration for a Revision Published event.
// Described in `revisionPublished` Configuration Block below.
func (o EventActionEventPtrOutput) RevisionPublished() EventActionEventRevisionPublishedPtrOutput {
	return o.ApplyT(func(v *EventActionEvent) *EventActionEventRevisionPublished {
		if v == nil {
			return nil
		}
		return v.RevisionPublished
	}).(EventActionEventRevisionPublishedPtrOutput)
}

type EventActionEventRevisionPublished struct {
	// The ID of the data set to monitor for revision publications.
	// Changing this value will recreate the resource.
	DataSetId string `pulumi:"dataSetId"`
}

// EventActionEventRevisionPublishedInput is an input type that accepts EventActionEventRevisionPublishedArgs and EventActionEventRevisionPublishedOutput values.
// You can construct a concrete instance of `EventActionEventRevisionPublishedInput` via:
//
//	EventActionEventRevisionPublishedArgs{...}
type EventActionEventRevisionPublishedInput interface {
	pulumi.Input

	ToEventActionEventRevisionPublishedOutput() EventActionEventRevisionPublishedOutput
	ToEventActionEventRevisionPublishedOutputWithContext(context.Context) EventActionEventRevisionPublishedOutput
}

type EventActionEventRevisionPublishedArgs struct {
	// The ID of the data set to monitor for revision publications.
	// Changing this value will recreate the resource.
	DataSetId pulumi.StringInput `pulumi:"dataSetId"`
}

func (EventActionEventRevisionPublishedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventActionEventRevisionPublished)(nil)).Elem()
}

func (i EventActionEventRevisionPublishedArgs) ToEventActionEventRevisionPublishedOutput() EventActionEventRevisionPublishedOutput {
	return i.ToEventActionEventRevisionPublishedOutputWithContext(context.Background())
}

func (i EventActionEventRevisionPublishedArgs) ToEventActionEventRevisionPublishedOutputWithContext(ctx context.Context) EventActionEventRevisionPublishedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionEventRevisionPublishedOutput)
}

func (i EventActionEventRevisionPublishedArgs) ToEventActionEventRevisionPublishedPtrOutput() EventActionEventRevisionPublishedPtrOutput {
	return i.ToEventActionEventRevisionPublishedPtrOutputWithContext(context.Background())
}

func (i EventActionEventRevisionPublishedArgs) ToEventActionEventRevisionPublishedPtrOutputWithContext(ctx context.Context) EventActionEventRevisionPublishedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionEventRevisionPublishedOutput).ToEventActionEventRevisionPublishedPtrOutputWithContext(ctx)
}

// EventActionEventRevisionPublishedPtrInput is an input type that accepts EventActionEventRevisionPublishedArgs, EventActionEventRevisionPublishedPtr and EventActionEventRevisionPublishedPtrOutput values.
// You can construct a concrete instance of `EventActionEventRevisionPublishedPtrInput` via:
//
//	        EventActionEventRevisionPublishedArgs{...}
//
//	or:
//
//	        nil
type EventActionEventRevisionPublishedPtrInput interface {
	pulumi.Input

	ToEventActionEventRevisionPublishedPtrOutput() EventActionEventRevisionPublishedPtrOutput
	ToEventActionEventRevisionPublishedPtrOutputWithContext(context.Context) EventActionEventRevisionPublishedPtrOutput
}

type eventActionEventRevisionPublishedPtrType EventActionEventRevisionPublishedArgs

func EventActionEventRevisionPublishedPtr(v *EventActionEventRevisionPublishedArgs) EventActionEventRevisionPublishedPtrInput {
	return (*eventActionEventRevisionPublishedPtrType)(v)
}

func (*eventActionEventRevisionPublishedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventActionEventRevisionPublished)(nil)).Elem()
}

func (i *eventActionEventRevisionPublishedPtrType) ToEventActionEventRevisionPublishedPtrOutput() EventActionEventRevisionPublishedPtrOutput {
	return i.ToEventActionEventRevisionPublishedPtrOutputWithContext(context.Background())
}

func (i *eventActionEventRevisionPublishedPtrType) ToEventActionEventRevisionPublishedPtrOutputWithContext(ctx context.Context) EventActionEventRevisionPublishedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventActionEventRevisionPublishedPtrOutput)
}

type EventActionEventRevisionPublishedOutput struct{ *pulumi.OutputState }

func (EventActionEventRevisionPublishedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventActionEventRevisionPublished)(nil)).Elem()
}

func (o EventActionEventRevisionPublishedOutput) ToEventActionEventRevisionPublishedOutput() EventActionEventRevisionPublishedOutput {
	return o
}

func (o EventActionEventRevisionPublishedOutput) ToEventActionEventRevisionPublishedOutputWithContext(ctx context.Context) EventActionEventRevisionPublishedOutput {
	return o
}

func (o EventActionEventRevisionPublishedOutput) ToEventActionEventRevisionPublishedPtrOutput() EventActionEventRevisionPublishedPtrOutput {
	return o.ToEventActionEventRevisionPublishedPtrOutputWithContext(context.Background())
}

func (o EventActionEventRevisionPublishedOutput) ToEventActionEventRevisionPublishedPtrOutputWithContext(ctx context.Context) EventActionEventRevisionPublishedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventActionEventRevisionPublished) *EventActionEventRevisionPublished {
		return &v
	}).(EventActionEventRevisionPublishedPtrOutput)
}

// The ID of the data set to monitor for revision publications.
// Changing this value will recreate the resource.
func (o EventActionEventRevisionPublishedOutput) DataSetId() pulumi.StringOutput {
	return o.ApplyT(func(v EventActionEventRevisionPublished) string { return v.DataSetId }).(pulumi.StringOutput)
}

type EventActionEventRevisionPublishedPtrOutput struct{ *pulumi.OutputState }

func (EventActionEventRevisionPublishedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventActionEventRevisionPublished)(nil)).Elem()
}

func (o EventActionEventRevisionPublishedPtrOutput) ToEventActionEventRevisionPublishedPtrOutput() EventActionEventRevisionPublishedPtrOutput {
	return o
}

func (o EventActionEventRevisionPublishedPtrOutput) ToEventActionEventRevisionPublishedPtrOutputWithContext(ctx context.Context) EventActionEventRevisionPublishedPtrOutput {
	return o
}

func (o EventActionEventRevisionPublishedPtrOutput) Elem() EventActionEventRevisionPublishedOutput {
	return o.ApplyT(func(v *EventActionEventRevisionPublished) EventActionEventRevisionPublished {
		if v != nil {
			return *v
		}
		var ret EventActionEventRevisionPublished
		return ret
	}).(EventActionEventRevisionPublishedOutput)
}

// The ID of the data set to monitor for revision publications.
// Changing this value will recreate the resource.
func (o EventActionEventRevisionPublishedPtrOutput) DataSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventActionEventRevisionPublished) *string {
		if v == nil {
			return nil
		}
		return &v.DataSetId
	}).(pulumi.StringPtrOutput)
}

type RevisionAssetsAsset struct {
	// The ARN of the Data Exchange Revision Assets.
	Arn *string `pulumi:"arn"`
	// A block to create S3 data access from an S3 bucket. See Create S3 Data Access from S3 Bucket for more details.
	CreateS3DataAccessFromS3Bucket *RevisionAssetsAssetCreateS3DataAccessFromS3Bucket `pulumi:"createS3DataAccessFromS3Bucket"`
	// The timestamp when the revision was created, in RFC3339 format.
	CreatedAt *string `pulumi:"createdAt"`
	// The unique identifier for the revision.
	Id *string `pulumi:"id"`
	// A block to import assets from S3. See Import Assets from S3 for more details.
	ImportAssetsFromS3 *RevisionAssetsAssetImportAssetsFromS3 `pulumi:"importAssetsFromS3"`
	// A block to import assets from a signed URL. See Import Assets from Signed URL for more details.
	ImportAssetsFromSignedUrl *RevisionAssetsAssetImportAssetsFromSignedUrl `pulumi:"importAssetsFromSignedUrl"`
	Name                      *string                                       `pulumi:"name"`
	// The timestamp when the revision was last updated, in RFC3339 format.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// RevisionAssetsAssetInput is an input type that accepts RevisionAssetsAssetArgs and RevisionAssetsAssetOutput values.
// You can construct a concrete instance of `RevisionAssetsAssetInput` via:
//
//	RevisionAssetsAssetArgs{...}
type RevisionAssetsAssetInput interface {
	pulumi.Input

	ToRevisionAssetsAssetOutput() RevisionAssetsAssetOutput
	ToRevisionAssetsAssetOutputWithContext(context.Context) RevisionAssetsAssetOutput
}

type RevisionAssetsAssetArgs struct {
	// The ARN of the Data Exchange Revision Assets.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// A block to create S3 data access from an S3 bucket. See Create S3 Data Access from S3 Bucket for more details.
	CreateS3DataAccessFromS3Bucket RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrInput `pulumi:"createS3DataAccessFromS3Bucket"`
	// The timestamp when the revision was created, in RFC3339 format.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The unique identifier for the revision.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A block to import assets from S3. See Import Assets from S3 for more details.
	ImportAssetsFromS3 RevisionAssetsAssetImportAssetsFromS3PtrInput `pulumi:"importAssetsFromS3"`
	// A block to import assets from a signed URL. See Import Assets from Signed URL for more details.
	ImportAssetsFromSignedUrl RevisionAssetsAssetImportAssetsFromSignedUrlPtrInput `pulumi:"importAssetsFromSignedUrl"`
	Name                      pulumi.StringPtrInput                                `pulumi:"name"`
	// The timestamp when the revision was last updated, in RFC3339 format.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (RevisionAssetsAssetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsAsset)(nil)).Elem()
}

func (i RevisionAssetsAssetArgs) ToRevisionAssetsAssetOutput() RevisionAssetsAssetOutput {
	return i.ToRevisionAssetsAssetOutputWithContext(context.Background())
}

func (i RevisionAssetsAssetArgs) ToRevisionAssetsAssetOutputWithContext(ctx context.Context) RevisionAssetsAssetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetOutput)
}

// RevisionAssetsAssetArrayInput is an input type that accepts RevisionAssetsAssetArray and RevisionAssetsAssetArrayOutput values.
// You can construct a concrete instance of `RevisionAssetsAssetArrayInput` via:
//
//	RevisionAssetsAssetArray{ RevisionAssetsAssetArgs{...} }
type RevisionAssetsAssetArrayInput interface {
	pulumi.Input

	ToRevisionAssetsAssetArrayOutput() RevisionAssetsAssetArrayOutput
	ToRevisionAssetsAssetArrayOutputWithContext(context.Context) RevisionAssetsAssetArrayOutput
}

type RevisionAssetsAssetArray []RevisionAssetsAssetInput

func (RevisionAssetsAssetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RevisionAssetsAsset)(nil)).Elem()
}

func (i RevisionAssetsAssetArray) ToRevisionAssetsAssetArrayOutput() RevisionAssetsAssetArrayOutput {
	return i.ToRevisionAssetsAssetArrayOutputWithContext(context.Background())
}

func (i RevisionAssetsAssetArray) ToRevisionAssetsAssetArrayOutputWithContext(ctx context.Context) RevisionAssetsAssetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetArrayOutput)
}

type RevisionAssetsAssetOutput struct{ *pulumi.OutputState }

func (RevisionAssetsAssetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsAsset)(nil)).Elem()
}

func (o RevisionAssetsAssetOutput) ToRevisionAssetsAssetOutput() RevisionAssetsAssetOutput {
	return o
}

func (o RevisionAssetsAssetOutput) ToRevisionAssetsAssetOutputWithContext(ctx context.Context) RevisionAssetsAssetOutput {
	return o
}

// The ARN of the Data Exchange Revision Assets.
func (o RevisionAssetsAssetOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RevisionAssetsAsset) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// A block to create S3 data access from an S3 bucket. See Create S3 Data Access from S3 Bucket for more details.
func (o RevisionAssetsAssetOutput) CreateS3DataAccessFromS3Bucket() RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput {
	return o.ApplyT(func(v RevisionAssetsAsset) *RevisionAssetsAssetCreateS3DataAccessFromS3Bucket {
		return v.CreateS3DataAccessFromS3Bucket
	}).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput)
}

// The timestamp when the revision was created, in RFC3339 format.
func (o RevisionAssetsAssetOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RevisionAssetsAsset) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The unique identifier for the revision.
func (o RevisionAssetsAssetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RevisionAssetsAsset) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A block to import assets from S3. See Import Assets from S3 for more details.
func (o RevisionAssetsAssetOutput) ImportAssetsFromS3() RevisionAssetsAssetImportAssetsFromS3PtrOutput {
	return o.ApplyT(func(v RevisionAssetsAsset) *RevisionAssetsAssetImportAssetsFromS3 { return v.ImportAssetsFromS3 }).(RevisionAssetsAssetImportAssetsFromS3PtrOutput)
}

// A block to import assets from a signed URL. See Import Assets from Signed URL for more details.
func (o RevisionAssetsAssetOutput) ImportAssetsFromSignedUrl() RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput {
	return o.ApplyT(func(v RevisionAssetsAsset) *RevisionAssetsAssetImportAssetsFromSignedUrl {
		return v.ImportAssetsFromSignedUrl
	}).(RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput)
}

func (o RevisionAssetsAssetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RevisionAssetsAsset) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The timestamp when the revision was last updated, in RFC3339 format.
func (o RevisionAssetsAssetOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RevisionAssetsAsset) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type RevisionAssetsAssetArrayOutput struct{ *pulumi.OutputState }

func (RevisionAssetsAssetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RevisionAssetsAsset)(nil)).Elem()
}

func (o RevisionAssetsAssetArrayOutput) ToRevisionAssetsAssetArrayOutput() RevisionAssetsAssetArrayOutput {
	return o
}

func (o RevisionAssetsAssetArrayOutput) ToRevisionAssetsAssetArrayOutputWithContext(ctx context.Context) RevisionAssetsAssetArrayOutput {
	return o
}

func (o RevisionAssetsAssetArrayOutput) Index(i pulumi.IntInput) RevisionAssetsAssetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RevisionAssetsAsset {
		return vs[0].([]RevisionAssetsAsset)[vs[1].(int)]
	}).(RevisionAssetsAssetOutput)
}

type RevisionAssetsAssetCreateS3DataAccessFromS3Bucket struct {
	AccessPointAlias *string `pulumi:"accessPointAlias"`
	AccessPointArn   *string `pulumi:"accessPointArn"`
	// A block specifying the source bucket for the asset. This block supports the following:
	AssetSource *RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource `pulumi:"assetSource"`
}

// RevisionAssetsAssetCreateS3DataAccessFromS3BucketInput is an input type that accepts RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs and RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput values.
// You can construct a concrete instance of `RevisionAssetsAssetCreateS3DataAccessFromS3BucketInput` via:
//
//	RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs{...}
type RevisionAssetsAssetCreateS3DataAccessFromS3BucketInput interface {
	pulumi.Input

	ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput
	ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketOutputWithContext(context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput
}

type RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs struct {
	AccessPointAlias pulumi.StringPtrInput `pulumi:"accessPointAlias"`
	AccessPointArn   pulumi.StringPtrInput `pulumi:"accessPointArn"`
	// A block specifying the source bucket for the asset. This block supports the following:
	AssetSource RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrInput `pulumi:"assetSource"`
}

func (RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsAssetCreateS3DataAccessFromS3Bucket)(nil)).Elem()
}

func (i RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput {
	return i.ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketOutputWithContext(context.Background())
}

func (i RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput)
}

func (i RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput {
	return i.ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutputWithContext(context.Background())
}

func (i RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput).ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutputWithContext(ctx)
}

// RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrInput is an input type that accepts RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs, RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtr and RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput values.
// You can construct a concrete instance of `RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrInput` via:
//
//	        RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs{...}
//
//	or:
//
//	        nil
type RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrInput interface {
	pulumi.Input

	ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput
	ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutputWithContext(context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput
}

type revisionAssetsAssetCreateS3DataAccessFromS3BucketPtrType RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs

func RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtr(v *RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs) RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrInput {
	return (*revisionAssetsAssetCreateS3DataAccessFromS3BucketPtrType)(v)
}

func (*revisionAssetsAssetCreateS3DataAccessFromS3BucketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RevisionAssetsAssetCreateS3DataAccessFromS3Bucket)(nil)).Elem()
}

func (i *revisionAssetsAssetCreateS3DataAccessFromS3BucketPtrType) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput {
	return i.ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutputWithContext(context.Background())
}

func (i *revisionAssetsAssetCreateS3DataAccessFromS3BucketPtrType) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput)
}

type RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput struct{ *pulumi.OutputState }

func (RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsAssetCreateS3DataAccessFromS3Bucket)(nil)).Elem()
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput {
	return o
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput {
	return o
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput {
	return o.ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutputWithContext(context.Background())
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RevisionAssetsAssetCreateS3DataAccessFromS3Bucket) *RevisionAssetsAssetCreateS3DataAccessFromS3Bucket {
		return &v
	}).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput)
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput) AccessPointAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RevisionAssetsAssetCreateS3DataAccessFromS3Bucket) *string { return v.AccessPointAlias }).(pulumi.StringPtrOutput)
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput) AccessPointArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RevisionAssetsAssetCreateS3DataAccessFromS3Bucket) *string { return v.AccessPointArn }).(pulumi.StringPtrOutput)
}

// A block specifying the source bucket for the asset. This block supports the following:
func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput) AssetSource() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput {
	return o.ApplyT(func(v RevisionAssetsAssetCreateS3DataAccessFromS3Bucket) *RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource {
		return v.AssetSource
	}).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput)
}

type RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput struct{ *pulumi.OutputState }

func (RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RevisionAssetsAssetCreateS3DataAccessFromS3Bucket)(nil)).Elem()
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput {
	return o
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput {
	return o
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput) Elem() RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetCreateS3DataAccessFromS3Bucket) RevisionAssetsAssetCreateS3DataAccessFromS3Bucket {
		if v != nil {
			return *v
		}
		var ret RevisionAssetsAssetCreateS3DataAccessFromS3Bucket
		return ret
	}).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput)
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput) AccessPointAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetCreateS3DataAccessFromS3Bucket) *string {
		if v == nil {
			return nil
		}
		return v.AccessPointAlias
	}).(pulumi.StringPtrOutput)
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput) AccessPointArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetCreateS3DataAccessFromS3Bucket) *string {
		if v == nil {
			return nil
		}
		return v.AccessPointArn
	}).(pulumi.StringPtrOutput)
}

// A block specifying the source bucket for the asset. This block supports the following:
func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput) AssetSource() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetCreateS3DataAccessFromS3Bucket) *RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource {
		if v == nil {
			return nil
		}
		return v.AssetSource
	}).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput)
}

type RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource struct {
	// The name of the S3 bucket.
	Bucket string `pulumi:"bucket"`
	// List of key prefixes in the S3 bucket.
	KeyPrefixes []string `pulumi:"keyPrefixes"`
	// List of object keys in the S3 bucket.
	Keys            []string                                                                     `pulumi:"keys"`
	KmsKeysToGrants []RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant `pulumi:"kmsKeysToGrants"`
}

// RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceInput is an input type that accepts RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs and RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput values.
// You can construct a concrete instance of `RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceInput` via:
//
//	RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs{...}
type RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceInput interface {
	pulumi.Input

	ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput
	ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutputWithContext(context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput
}

type RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs struct {
	// The name of the S3 bucket.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// List of key prefixes in the S3 bucket.
	KeyPrefixes pulumi.StringArrayInput `pulumi:"keyPrefixes"`
	// List of object keys in the S3 bucket.
	Keys            pulumi.StringArrayInput                                                              `pulumi:"keys"`
	KmsKeysToGrants RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayInput `pulumi:"kmsKeysToGrants"`
}

func (RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource)(nil)).Elem()
}

func (i RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput {
	return i.ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutputWithContext(context.Background())
}

func (i RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput)
}

func (i RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput {
	return i.ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutputWithContext(context.Background())
}

func (i RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput).ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutputWithContext(ctx)
}

// RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrInput is an input type that accepts RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs, RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtr and RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput values.
// You can construct a concrete instance of `RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrInput` via:
//
//	        RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs{...}
//
//	or:
//
//	        nil
type RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrInput interface {
	pulumi.Input

	ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput
	ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutputWithContext(context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput
}

type revisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrType RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs

func RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtr(v *RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrInput {
	return (*revisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrType)(v)
}

func (*revisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource)(nil)).Elem()
}

func (i *revisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrType) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput {
	return i.ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutputWithContext(context.Background())
}

func (i *revisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrType) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput)
}

type RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput struct{ *pulumi.OutputState }

func (RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource)(nil)).Elem()
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput {
	return o
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput {
	return o
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput {
	return o.ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutputWithContext(context.Background())
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource) *RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource {
		return &v
	}).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput)
}

// The name of the S3 bucket.
func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource) string { return v.Bucket }).(pulumi.StringOutput)
}

// List of key prefixes in the S3 bucket.
func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput) KeyPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource) []string { return v.KeyPrefixes }).(pulumi.StringArrayOutput)
}

// List of object keys in the S3 bucket.
func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput) KmsKeysToGrants() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput {
	return o.ApplyT(func(v RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource) []RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant {
		return v.KmsKeysToGrants
	}).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput)
}

type RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput struct{ *pulumi.OutputState }

func (RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource)(nil)).Elem()
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput {
	return o
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput {
	return o
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput) Elem() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource {
		if v != nil {
			return *v
		}
		var ret RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource
		return ret
	}).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput)
}

// The name of the S3 bucket.
func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// List of key prefixes in the S3 bucket.
func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput) KeyPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource) []string {
		if v == nil {
			return nil
		}
		return v.KeyPrefixes
	}).(pulumi.StringArrayOutput)
}

// List of object keys in the S3 bucket.
func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput) KmsKeysToGrants() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSource) []RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant {
		if v == nil {
			return nil
		}
		return v.KmsKeysToGrants
	}).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput)
}

type RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant struct {
	// The ARN of the KMS key.
	KmsKeyArn string `pulumi:"kmsKeyArn"`
}

// RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantInput is an input type that accepts RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArgs and RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput values.
// You can construct a concrete instance of `RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantInput` via:
//
//	RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArgs{...}
type RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantInput interface {
	pulumi.Input

	ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput
	ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutputWithContext(context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput
}

type RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArgs struct {
	// The ARN of the KMS key.
	KmsKeyArn pulumi.StringInput `pulumi:"kmsKeyArn"`
}

func (RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant)(nil)).Elem()
}

func (i RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArgs) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput {
	return i.ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutputWithContext(context.Background())
}

func (i RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArgs) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput)
}

// RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayInput is an input type that accepts RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArray and RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput values.
// You can construct a concrete instance of `RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayInput` via:
//
//	RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArray{ RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArgs{...} }
type RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayInput interface {
	pulumi.Input

	ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput
	ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutputWithContext(context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput
}

type RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArray []RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantInput

func (RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant)(nil)).Elem()
}

func (i RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArray) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput {
	return i.ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutputWithContext(context.Background())
}

func (i RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArray) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput)
}

type RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput struct{ *pulumi.OutputState }

func (RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant)(nil)).Elem()
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput {
	return o
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput {
	return o
}

// The ARN of the KMS key.
func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput) KmsKeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant) string {
		return v.KmsKeyArn
	}).(pulumi.StringOutput)
}

type RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput struct{ *pulumi.OutputState }

func (RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant)(nil)).Elem()
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput() RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput {
	return o
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput) ToRevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutputWithContext(ctx context.Context) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput {
	return o
}

func (o RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput) Index(i pulumi.IntInput) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant {
		return vs[0].([]RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrant)[vs[1].(int)]
	}).(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput)
}

type RevisionAssetsAssetImportAssetsFromS3 struct {
	// A block specifying the source bucket and key for the asset. This block supports the following:
	AssetSource *RevisionAssetsAssetImportAssetsFromS3AssetSource `pulumi:"assetSource"`
}

// RevisionAssetsAssetImportAssetsFromS3Input is an input type that accepts RevisionAssetsAssetImportAssetsFromS3Args and RevisionAssetsAssetImportAssetsFromS3Output values.
// You can construct a concrete instance of `RevisionAssetsAssetImportAssetsFromS3Input` via:
//
//	RevisionAssetsAssetImportAssetsFromS3Args{...}
type RevisionAssetsAssetImportAssetsFromS3Input interface {
	pulumi.Input

	ToRevisionAssetsAssetImportAssetsFromS3Output() RevisionAssetsAssetImportAssetsFromS3Output
	ToRevisionAssetsAssetImportAssetsFromS3OutputWithContext(context.Context) RevisionAssetsAssetImportAssetsFromS3Output
}

type RevisionAssetsAssetImportAssetsFromS3Args struct {
	// A block specifying the source bucket and key for the asset. This block supports the following:
	AssetSource RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrInput `pulumi:"assetSource"`
}

func (RevisionAssetsAssetImportAssetsFromS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsAssetImportAssetsFromS3)(nil)).Elem()
}

func (i RevisionAssetsAssetImportAssetsFromS3Args) ToRevisionAssetsAssetImportAssetsFromS3Output() RevisionAssetsAssetImportAssetsFromS3Output {
	return i.ToRevisionAssetsAssetImportAssetsFromS3OutputWithContext(context.Background())
}

func (i RevisionAssetsAssetImportAssetsFromS3Args) ToRevisionAssetsAssetImportAssetsFromS3OutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetImportAssetsFromS3Output)
}

func (i RevisionAssetsAssetImportAssetsFromS3Args) ToRevisionAssetsAssetImportAssetsFromS3PtrOutput() RevisionAssetsAssetImportAssetsFromS3PtrOutput {
	return i.ToRevisionAssetsAssetImportAssetsFromS3PtrOutputWithContext(context.Background())
}

func (i RevisionAssetsAssetImportAssetsFromS3Args) ToRevisionAssetsAssetImportAssetsFromS3PtrOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetImportAssetsFromS3Output).ToRevisionAssetsAssetImportAssetsFromS3PtrOutputWithContext(ctx)
}

// RevisionAssetsAssetImportAssetsFromS3PtrInput is an input type that accepts RevisionAssetsAssetImportAssetsFromS3Args, RevisionAssetsAssetImportAssetsFromS3Ptr and RevisionAssetsAssetImportAssetsFromS3PtrOutput values.
// You can construct a concrete instance of `RevisionAssetsAssetImportAssetsFromS3PtrInput` via:
//
//	        RevisionAssetsAssetImportAssetsFromS3Args{...}
//
//	or:
//
//	        nil
type RevisionAssetsAssetImportAssetsFromS3PtrInput interface {
	pulumi.Input

	ToRevisionAssetsAssetImportAssetsFromS3PtrOutput() RevisionAssetsAssetImportAssetsFromS3PtrOutput
	ToRevisionAssetsAssetImportAssetsFromS3PtrOutputWithContext(context.Context) RevisionAssetsAssetImportAssetsFromS3PtrOutput
}

type revisionAssetsAssetImportAssetsFromS3PtrType RevisionAssetsAssetImportAssetsFromS3Args

func RevisionAssetsAssetImportAssetsFromS3Ptr(v *RevisionAssetsAssetImportAssetsFromS3Args) RevisionAssetsAssetImportAssetsFromS3PtrInput {
	return (*revisionAssetsAssetImportAssetsFromS3PtrType)(v)
}

func (*revisionAssetsAssetImportAssetsFromS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RevisionAssetsAssetImportAssetsFromS3)(nil)).Elem()
}

func (i *revisionAssetsAssetImportAssetsFromS3PtrType) ToRevisionAssetsAssetImportAssetsFromS3PtrOutput() RevisionAssetsAssetImportAssetsFromS3PtrOutput {
	return i.ToRevisionAssetsAssetImportAssetsFromS3PtrOutputWithContext(context.Background())
}

func (i *revisionAssetsAssetImportAssetsFromS3PtrType) ToRevisionAssetsAssetImportAssetsFromS3PtrOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetImportAssetsFromS3PtrOutput)
}

type RevisionAssetsAssetImportAssetsFromS3Output struct{ *pulumi.OutputState }

func (RevisionAssetsAssetImportAssetsFromS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsAssetImportAssetsFromS3)(nil)).Elem()
}

func (o RevisionAssetsAssetImportAssetsFromS3Output) ToRevisionAssetsAssetImportAssetsFromS3Output() RevisionAssetsAssetImportAssetsFromS3Output {
	return o
}

func (o RevisionAssetsAssetImportAssetsFromS3Output) ToRevisionAssetsAssetImportAssetsFromS3OutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromS3Output {
	return o
}

func (o RevisionAssetsAssetImportAssetsFromS3Output) ToRevisionAssetsAssetImportAssetsFromS3PtrOutput() RevisionAssetsAssetImportAssetsFromS3PtrOutput {
	return o.ToRevisionAssetsAssetImportAssetsFromS3PtrOutputWithContext(context.Background())
}

func (o RevisionAssetsAssetImportAssetsFromS3Output) ToRevisionAssetsAssetImportAssetsFromS3PtrOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RevisionAssetsAssetImportAssetsFromS3) *RevisionAssetsAssetImportAssetsFromS3 {
		return &v
	}).(RevisionAssetsAssetImportAssetsFromS3PtrOutput)
}

// A block specifying the source bucket and key for the asset. This block supports the following:
func (o RevisionAssetsAssetImportAssetsFromS3Output) AssetSource() RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput {
	return o.ApplyT(func(v RevisionAssetsAssetImportAssetsFromS3) *RevisionAssetsAssetImportAssetsFromS3AssetSource {
		return v.AssetSource
	}).(RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput)
}

type RevisionAssetsAssetImportAssetsFromS3PtrOutput struct{ *pulumi.OutputState }

func (RevisionAssetsAssetImportAssetsFromS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RevisionAssetsAssetImportAssetsFromS3)(nil)).Elem()
}

func (o RevisionAssetsAssetImportAssetsFromS3PtrOutput) ToRevisionAssetsAssetImportAssetsFromS3PtrOutput() RevisionAssetsAssetImportAssetsFromS3PtrOutput {
	return o
}

func (o RevisionAssetsAssetImportAssetsFromS3PtrOutput) ToRevisionAssetsAssetImportAssetsFromS3PtrOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromS3PtrOutput {
	return o
}

func (o RevisionAssetsAssetImportAssetsFromS3PtrOutput) Elem() RevisionAssetsAssetImportAssetsFromS3Output {
	return o.ApplyT(func(v *RevisionAssetsAssetImportAssetsFromS3) RevisionAssetsAssetImportAssetsFromS3 {
		if v != nil {
			return *v
		}
		var ret RevisionAssetsAssetImportAssetsFromS3
		return ret
	}).(RevisionAssetsAssetImportAssetsFromS3Output)
}

// A block specifying the source bucket and key for the asset. This block supports the following:
func (o RevisionAssetsAssetImportAssetsFromS3PtrOutput) AssetSource() RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetImportAssetsFromS3) *RevisionAssetsAssetImportAssetsFromS3AssetSource {
		if v == nil {
			return nil
		}
		return v.AssetSource
	}).(RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput)
}

type RevisionAssetsAssetImportAssetsFromS3AssetSource struct {
	// The name of the S3 bucket.
	Bucket string `pulumi:"bucket"`
	// The key of the object in the S3 bucket.
	Key string `pulumi:"key"`
}

// RevisionAssetsAssetImportAssetsFromS3AssetSourceInput is an input type that accepts RevisionAssetsAssetImportAssetsFromS3AssetSourceArgs and RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput values.
// You can construct a concrete instance of `RevisionAssetsAssetImportAssetsFromS3AssetSourceInput` via:
//
//	RevisionAssetsAssetImportAssetsFromS3AssetSourceArgs{...}
type RevisionAssetsAssetImportAssetsFromS3AssetSourceInput interface {
	pulumi.Input

	ToRevisionAssetsAssetImportAssetsFromS3AssetSourceOutput() RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput
	ToRevisionAssetsAssetImportAssetsFromS3AssetSourceOutputWithContext(context.Context) RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput
}

type RevisionAssetsAssetImportAssetsFromS3AssetSourceArgs struct {
	// The name of the S3 bucket.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The key of the object in the S3 bucket.
	Key pulumi.StringInput `pulumi:"key"`
}

func (RevisionAssetsAssetImportAssetsFromS3AssetSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsAssetImportAssetsFromS3AssetSource)(nil)).Elem()
}

func (i RevisionAssetsAssetImportAssetsFromS3AssetSourceArgs) ToRevisionAssetsAssetImportAssetsFromS3AssetSourceOutput() RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput {
	return i.ToRevisionAssetsAssetImportAssetsFromS3AssetSourceOutputWithContext(context.Background())
}

func (i RevisionAssetsAssetImportAssetsFromS3AssetSourceArgs) ToRevisionAssetsAssetImportAssetsFromS3AssetSourceOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput)
}

func (i RevisionAssetsAssetImportAssetsFromS3AssetSourceArgs) ToRevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput() RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput {
	return i.ToRevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutputWithContext(context.Background())
}

func (i RevisionAssetsAssetImportAssetsFromS3AssetSourceArgs) ToRevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput).ToRevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutputWithContext(ctx)
}

// RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrInput is an input type that accepts RevisionAssetsAssetImportAssetsFromS3AssetSourceArgs, RevisionAssetsAssetImportAssetsFromS3AssetSourcePtr and RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput values.
// You can construct a concrete instance of `RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrInput` via:
//
//	        RevisionAssetsAssetImportAssetsFromS3AssetSourceArgs{...}
//
//	or:
//
//	        nil
type RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrInput interface {
	pulumi.Input

	ToRevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput() RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput
	ToRevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutputWithContext(context.Context) RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput
}

type revisionAssetsAssetImportAssetsFromS3AssetSourcePtrType RevisionAssetsAssetImportAssetsFromS3AssetSourceArgs

func RevisionAssetsAssetImportAssetsFromS3AssetSourcePtr(v *RevisionAssetsAssetImportAssetsFromS3AssetSourceArgs) RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrInput {
	return (*revisionAssetsAssetImportAssetsFromS3AssetSourcePtrType)(v)
}

func (*revisionAssetsAssetImportAssetsFromS3AssetSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RevisionAssetsAssetImportAssetsFromS3AssetSource)(nil)).Elem()
}

func (i *revisionAssetsAssetImportAssetsFromS3AssetSourcePtrType) ToRevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput() RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput {
	return i.ToRevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutputWithContext(context.Background())
}

func (i *revisionAssetsAssetImportAssetsFromS3AssetSourcePtrType) ToRevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput)
}

type RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput struct{ *pulumi.OutputState }

func (RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsAssetImportAssetsFromS3AssetSource)(nil)).Elem()
}

func (o RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput) ToRevisionAssetsAssetImportAssetsFromS3AssetSourceOutput() RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput {
	return o
}

func (o RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput) ToRevisionAssetsAssetImportAssetsFromS3AssetSourceOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput {
	return o
}

func (o RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput) ToRevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput() RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput {
	return o.ToRevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutputWithContext(context.Background())
}

func (o RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput) ToRevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RevisionAssetsAssetImportAssetsFromS3AssetSource) *RevisionAssetsAssetImportAssetsFromS3AssetSource {
		return &v
	}).(RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput)
}

// The name of the S3 bucket.
func (o RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v RevisionAssetsAssetImportAssetsFromS3AssetSource) string { return v.Bucket }).(pulumi.StringOutput)
}

// The key of the object in the S3 bucket.
func (o RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RevisionAssetsAssetImportAssetsFromS3AssetSource) string { return v.Key }).(pulumi.StringOutput)
}

type RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput struct{ *pulumi.OutputState }

func (RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RevisionAssetsAssetImportAssetsFromS3AssetSource)(nil)).Elem()
}

func (o RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput) ToRevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput() RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput {
	return o
}

func (o RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput) ToRevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput {
	return o
}

func (o RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput) Elem() RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetImportAssetsFromS3AssetSource) RevisionAssetsAssetImportAssetsFromS3AssetSource {
		if v != nil {
			return *v
		}
		var ret RevisionAssetsAssetImportAssetsFromS3AssetSource
		return ret
	}).(RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput)
}

// The name of the S3 bucket.
func (o RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetImportAssetsFromS3AssetSource) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// The key of the object in the S3 bucket.
func (o RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetImportAssetsFromS3AssetSource) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

type RevisionAssetsAssetImportAssetsFromSignedUrl struct {
	// The name of the file to import.
	Filename string `pulumi:"filename"`
}

// RevisionAssetsAssetImportAssetsFromSignedUrlInput is an input type that accepts RevisionAssetsAssetImportAssetsFromSignedUrlArgs and RevisionAssetsAssetImportAssetsFromSignedUrlOutput values.
// You can construct a concrete instance of `RevisionAssetsAssetImportAssetsFromSignedUrlInput` via:
//
//	RevisionAssetsAssetImportAssetsFromSignedUrlArgs{...}
type RevisionAssetsAssetImportAssetsFromSignedUrlInput interface {
	pulumi.Input

	ToRevisionAssetsAssetImportAssetsFromSignedUrlOutput() RevisionAssetsAssetImportAssetsFromSignedUrlOutput
	ToRevisionAssetsAssetImportAssetsFromSignedUrlOutputWithContext(context.Context) RevisionAssetsAssetImportAssetsFromSignedUrlOutput
}

type RevisionAssetsAssetImportAssetsFromSignedUrlArgs struct {
	// The name of the file to import.
	Filename pulumi.StringInput `pulumi:"filename"`
}

func (RevisionAssetsAssetImportAssetsFromSignedUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsAssetImportAssetsFromSignedUrl)(nil)).Elem()
}

func (i RevisionAssetsAssetImportAssetsFromSignedUrlArgs) ToRevisionAssetsAssetImportAssetsFromSignedUrlOutput() RevisionAssetsAssetImportAssetsFromSignedUrlOutput {
	return i.ToRevisionAssetsAssetImportAssetsFromSignedUrlOutputWithContext(context.Background())
}

func (i RevisionAssetsAssetImportAssetsFromSignedUrlArgs) ToRevisionAssetsAssetImportAssetsFromSignedUrlOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromSignedUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetImportAssetsFromSignedUrlOutput)
}

func (i RevisionAssetsAssetImportAssetsFromSignedUrlArgs) ToRevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput() RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput {
	return i.ToRevisionAssetsAssetImportAssetsFromSignedUrlPtrOutputWithContext(context.Background())
}

func (i RevisionAssetsAssetImportAssetsFromSignedUrlArgs) ToRevisionAssetsAssetImportAssetsFromSignedUrlPtrOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetImportAssetsFromSignedUrlOutput).ToRevisionAssetsAssetImportAssetsFromSignedUrlPtrOutputWithContext(ctx)
}

// RevisionAssetsAssetImportAssetsFromSignedUrlPtrInput is an input type that accepts RevisionAssetsAssetImportAssetsFromSignedUrlArgs, RevisionAssetsAssetImportAssetsFromSignedUrlPtr and RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput values.
// You can construct a concrete instance of `RevisionAssetsAssetImportAssetsFromSignedUrlPtrInput` via:
//
//	        RevisionAssetsAssetImportAssetsFromSignedUrlArgs{...}
//
//	or:
//
//	        nil
type RevisionAssetsAssetImportAssetsFromSignedUrlPtrInput interface {
	pulumi.Input

	ToRevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput() RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput
	ToRevisionAssetsAssetImportAssetsFromSignedUrlPtrOutputWithContext(context.Context) RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput
}

type revisionAssetsAssetImportAssetsFromSignedUrlPtrType RevisionAssetsAssetImportAssetsFromSignedUrlArgs

func RevisionAssetsAssetImportAssetsFromSignedUrlPtr(v *RevisionAssetsAssetImportAssetsFromSignedUrlArgs) RevisionAssetsAssetImportAssetsFromSignedUrlPtrInput {
	return (*revisionAssetsAssetImportAssetsFromSignedUrlPtrType)(v)
}

func (*revisionAssetsAssetImportAssetsFromSignedUrlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RevisionAssetsAssetImportAssetsFromSignedUrl)(nil)).Elem()
}

func (i *revisionAssetsAssetImportAssetsFromSignedUrlPtrType) ToRevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput() RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput {
	return i.ToRevisionAssetsAssetImportAssetsFromSignedUrlPtrOutputWithContext(context.Background())
}

func (i *revisionAssetsAssetImportAssetsFromSignedUrlPtrType) ToRevisionAssetsAssetImportAssetsFromSignedUrlPtrOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput)
}

type RevisionAssetsAssetImportAssetsFromSignedUrlOutput struct{ *pulumi.OutputState }

func (RevisionAssetsAssetImportAssetsFromSignedUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsAssetImportAssetsFromSignedUrl)(nil)).Elem()
}

func (o RevisionAssetsAssetImportAssetsFromSignedUrlOutput) ToRevisionAssetsAssetImportAssetsFromSignedUrlOutput() RevisionAssetsAssetImportAssetsFromSignedUrlOutput {
	return o
}

func (o RevisionAssetsAssetImportAssetsFromSignedUrlOutput) ToRevisionAssetsAssetImportAssetsFromSignedUrlOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromSignedUrlOutput {
	return o
}

func (o RevisionAssetsAssetImportAssetsFromSignedUrlOutput) ToRevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput() RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput {
	return o.ToRevisionAssetsAssetImportAssetsFromSignedUrlPtrOutputWithContext(context.Background())
}

func (o RevisionAssetsAssetImportAssetsFromSignedUrlOutput) ToRevisionAssetsAssetImportAssetsFromSignedUrlPtrOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RevisionAssetsAssetImportAssetsFromSignedUrl) *RevisionAssetsAssetImportAssetsFromSignedUrl {
		return &v
	}).(RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput)
}

// The name of the file to import.
func (o RevisionAssetsAssetImportAssetsFromSignedUrlOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v RevisionAssetsAssetImportAssetsFromSignedUrl) string { return v.Filename }).(pulumi.StringOutput)
}

type RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput struct{ *pulumi.OutputState }

func (RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RevisionAssetsAssetImportAssetsFromSignedUrl)(nil)).Elem()
}

func (o RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput) ToRevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput() RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput {
	return o
}

func (o RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput) ToRevisionAssetsAssetImportAssetsFromSignedUrlPtrOutputWithContext(ctx context.Context) RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput {
	return o
}

func (o RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput) Elem() RevisionAssetsAssetImportAssetsFromSignedUrlOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetImportAssetsFromSignedUrl) RevisionAssetsAssetImportAssetsFromSignedUrl {
		if v != nil {
			return *v
		}
		var ret RevisionAssetsAssetImportAssetsFromSignedUrl
		return ret
	}).(RevisionAssetsAssetImportAssetsFromSignedUrlOutput)
}

// The name of the file to import.
func (o RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RevisionAssetsAssetImportAssetsFromSignedUrl) *string {
		if v == nil {
			return nil
		}
		return &v.Filename
	}).(pulumi.StringPtrOutput)
}

type RevisionAssetsTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
}

// RevisionAssetsTimeoutsInput is an input type that accepts RevisionAssetsTimeoutsArgs and RevisionAssetsTimeoutsOutput values.
// You can construct a concrete instance of `RevisionAssetsTimeoutsInput` via:
//
//	RevisionAssetsTimeoutsArgs{...}
type RevisionAssetsTimeoutsInput interface {
	pulumi.Input

	ToRevisionAssetsTimeoutsOutput() RevisionAssetsTimeoutsOutput
	ToRevisionAssetsTimeoutsOutputWithContext(context.Context) RevisionAssetsTimeoutsOutput
}

type RevisionAssetsTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
}

func (RevisionAssetsTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsTimeouts)(nil)).Elem()
}

func (i RevisionAssetsTimeoutsArgs) ToRevisionAssetsTimeoutsOutput() RevisionAssetsTimeoutsOutput {
	return i.ToRevisionAssetsTimeoutsOutputWithContext(context.Background())
}

func (i RevisionAssetsTimeoutsArgs) ToRevisionAssetsTimeoutsOutputWithContext(ctx context.Context) RevisionAssetsTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsTimeoutsOutput)
}

func (i RevisionAssetsTimeoutsArgs) ToRevisionAssetsTimeoutsPtrOutput() RevisionAssetsTimeoutsPtrOutput {
	return i.ToRevisionAssetsTimeoutsPtrOutputWithContext(context.Background())
}

func (i RevisionAssetsTimeoutsArgs) ToRevisionAssetsTimeoutsPtrOutputWithContext(ctx context.Context) RevisionAssetsTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsTimeoutsOutput).ToRevisionAssetsTimeoutsPtrOutputWithContext(ctx)
}

// RevisionAssetsTimeoutsPtrInput is an input type that accepts RevisionAssetsTimeoutsArgs, RevisionAssetsTimeoutsPtr and RevisionAssetsTimeoutsPtrOutput values.
// You can construct a concrete instance of `RevisionAssetsTimeoutsPtrInput` via:
//
//	        RevisionAssetsTimeoutsArgs{...}
//
//	or:
//
//	        nil
type RevisionAssetsTimeoutsPtrInput interface {
	pulumi.Input

	ToRevisionAssetsTimeoutsPtrOutput() RevisionAssetsTimeoutsPtrOutput
	ToRevisionAssetsTimeoutsPtrOutputWithContext(context.Context) RevisionAssetsTimeoutsPtrOutput
}

type revisionAssetsTimeoutsPtrType RevisionAssetsTimeoutsArgs

func RevisionAssetsTimeoutsPtr(v *RevisionAssetsTimeoutsArgs) RevisionAssetsTimeoutsPtrInput {
	return (*revisionAssetsTimeoutsPtrType)(v)
}

func (*revisionAssetsTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RevisionAssetsTimeouts)(nil)).Elem()
}

func (i *revisionAssetsTimeoutsPtrType) ToRevisionAssetsTimeoutsPtrOutput() RevisionAssetsTimeoutsPtrOutput {
	return i.ToRevisionAssetsTimeoutsPtrOutputWithContext(context.Background())
}

func (i *revisionAssetsTimeoutsPtrType) ToRevisionAssetsTimeoutsPtrOutputWithContext(ctx context.Context) RevisionAssetsTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RevisionAssetsTimeoutsPtrOutput)
}

type RevisionAssetsTimeoutsOutput struct{ *pulumi.OutputState }

func (RevisionAssetsTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RevisionAssetsTimeouts)(nil)).Elem()
}

func (o RevisionAssetsTimeoutsOutput) ToRevisionAssetsTimeoutsOutput() RevisionAssetsTimeoutsOutput {
	return o
}

func (o RevisionAssetsTimeoutsOutput) ToRevisionAssetsTimeoutsOutputWithContext(ctx context.Context) RevisionAssetsTimeoutsOutput {
	return o
}

func (o RevisionAssetsTimeoutsOutput) ToRevisionAssetsTimeoutsPtrOutput() RevisionAssetsTimeoutsPtrOutput {
	return o.ToRevisionAssetsTimeoutsPtrOutputWithContext(context.Background())
}

func (o RevisionAssetsTimeoutsOutput) ToRevisionAssetsTimeoutsPtrOutputWithContext(ctx context.Context) RevisionAssetsTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RevisionAssetsTimeouts) *RevisionAssetsTimeouts {
		return &v
	}).(RevisionAssetsTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o RevisionAssetsTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RevisionAssetsTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

type RevisionAssetsTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (RevisionAssetsTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RevisionAssetsTimeouts)(nil)).Elem()
}

func (o RevisionAssetsTimeoutsPtrOutput) ToRevisionAssetsTimeoutsPtrOutput() RevisionAssetsTimeoutsPtrOutput {
	return o
}

func (o RevisionAssetsTimeoutsPtrOutput) ToRevisionAssetsTimeoutsPtrOutputWithContext(ctx context.Context) RevisionAssetsTimeoutsPtrOutput {
	return o
}

func (o RevisionAssetsTimeoutsPtrOutput) Elem() RevisionAssetsTimeoutsOutput {
	return o.ApplyT(func(v *RevisionAssetsTimeouts) RevisionAssetsTimeouts {
		if v != nil {
			return *v
		}
		var ret RevisionAssetsTimeouts
		return ret
	}).(RevisionAssetsTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o RevisionAssetsTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RevisionAssetsTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EventActionActionInput)(nil)).Elem(), EventActionActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventActionActionPtrInput)(nil)).Elem(), EventActionActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventActionActionExportRevisionToS3Input)(nil)).Elem(), EventActionActionExportRevisionToS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventActionActionExportRevisionToS3PtrInput)(nil)).Elem(), EventActionActionExportRevisionToS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventActionActionExportRevisionToS3EncryptionInput)(nil)).Elem(), EventActionActionExportRevisionToS3EncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventActionActionExportRevisionToS3EncryptionPtrInput)(nil)).Elem(), EventActionActionExportRevisionToS3EncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventActionActionExportRevisionToS3RevisionDestinationInput)(nil)).Elem(), EventActionActionExportRevisionToS3RevisionDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventActionActionExportRevisionToS3RevisionDestinationPtrInput)(nil)).Elem(), EventActionActionExportRevisionToS3RevisionDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventActionEventInput)(nil)).Elem(), EventActionEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventActionEventPtrInput)(nil)).Elem(), EventActionEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventActionEventRevisionPublishedInput)(nil)).Elem(), EventActionEventRevisionPublishedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventActionEventRevisionPublishedPtrInput)(nil)).Elem(), EventActionEventRevisionPublishedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsAssetInput)(nil)).Elem(), RevisionAssetsAssetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsAssetArrayInput)(nil)).Elem(), RevisionAssetsAssetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsAssetCreateS3DataAccessFromS3BucketInput)(nil)).Elem(), RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrInput)(nil)).Elem(), RevisionAssetsAssetCreateS3DataAccessFromS3BucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceInput)(nil)).Elem(), RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrInput)(nil)).Elem(), RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantInput)(nil)).Elem(), RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayInput)(nil)).Elem(), RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsAssetImportAssetsFromS3Input)(nil)).Elem(), RevisionAssetsAssetImportAssetsFromS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsAssetImportAssetsFromS3PtrInput)(nil)).Elem(), RevisionAssetsAssetImportAssetsFromS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsAssetImportAssetsFromS3AssetSourceInput)(nil)).Elem(), RevisionAssetsAssetImportAssetsFromS3AssetSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrInput)(nil)).Elem(), RevisionAssetsAssetImportAssetsFromS3AssetSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsAssetImportAssetsFromSignedUrlInput)(nil)).Elem(), RevisionAssetsAssetImportAssetsFromSignedUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsAssetImportAssetsFromSignedUrlPtrInput)(nil)).Elem(), RevisionAssetsAssetImportAssetsFromSignedUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsTimeoutsInput)(nil)).Elem(), RevisionAssetsTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RevisionAssetsTimeoutsPtrInput)(nil)).Elem(), RevisionAssetsTimeoutsArgs{})
	pulumi.RegisterOutputType(EventActionActionOutput{})
	pulumi.RegisterOutputType(EventActionActionPtrOutput{})
	pulumi.RegisterOutputType(EventActionActionExportRevisionToS3Output{})
	pulumi.RegisterOutputType(EventActionActionExportRevisionToS3PtrOutput{})
	pulumi.RegisterOutputType(EventActionActionExportRevisionToS3EncryptionOutput{})
	pulumi.RegisterOutputType(EventActionActionExportRevisionToS3EncryptionPtrOutput{})
	pulumi.RegisterOutputType(EventActionActionExportRevisionToS3RevisionDestinationOutput{})
	pulumi.RegisterOutputType(EventActionActionExportRevisionToS3RevisionDestinationPtrOutput{})
	pulumi.RegisterOutputType(EventActionEventOutput{})
	pulumi.RegisterOutputType(EventActionEventPtrOutput{})
	pulumi.RegisterOutputType(EventActionEventRevisionPublishedOutput{})
	pulumi.RegisterOutputType(EventActionEventRevisionPublishedPtrOutput{})
	pulumi.RegisterOutputType(RevisionAssetsAssetOutput{})
	pulumi.RegisterOutputType(RevisionAssetsAssetArrayOutput{})
	pulumi.RegisterOutputType(RevisionAssetsAssetCreateS3DataAccessFromS3BucketOutput{})
	pulumi.RegisterOutputType(RevisionAssetsAssetCreateS3DataAccessFromS3BucketPtrOutput{})
	pulumi.RegisterOutputType(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceOutput{})
	pulumi.RegisterOutputType(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourcePtrOutput{})
	pulumi.RegisterOutputType(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantOutput{})
	pulumi.RegisterOutputType(RevisionAssetsAssetCreateS3DataAccessFromS3BucketAssetSourceKmsKeysToGrantArrayOutput{})
	pulumi.RegisterOutputType(RevisionAssetsAssetImportAssetsFromS3Output{})
	pulumi.RegisterOutputType(RevisionAssetsAssetImportAssetsFromS3PtrOutput{})
	pulumi.RegisterOutputType(RevisionAssetsAssetImportAssetsFromS3AssetSourceOutput{})
	pulumi.RegisterOutputType(RevisionAssetsAssetImportAssetsFromS3AssetSourcePtrOutput{})
	pulumi.RegisterOutputType(RevisionAssetsAssetImportAssetsFromSignedUrlOutput{})
	pulumi.RegisterOutputType(RevisionAssetsAssetImportAssetsFromSignedUrlPtrOutput{})
	pulumi.RegisterOutputType(RevisionAssetsTimeoutsOutput{})
	pulumi.RegisterOutputType(RevisionAssetsTimeoutsPtrOutput{})
}
