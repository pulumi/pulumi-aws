// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCatalogTable(ctx *pulumi.Context, args *LookupCatalogTableArgs, opts ...pulumi.InvokeOption) (*LookupCatalogTableResult, error) {
	var rv LookupCatalogTableResult
	err := ctx.Invoke("aws:glue/getCatalogTable:getCatalogTable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCatalogTable.
type LookupCatalogTableArgs struct {
	CatalogId     *string `pulumi:"catalogId"`
	DatabaseName  string  `pulumi:"databaseName"`
	Name          string  `pulumi:"name"`
	QueryAsOfTime *string `pulumi:"queryAsOfTime"`
	TransactionId *int    `pulumi:"transactionId"`
}

// A collection of values returned by getCatalogTable.
type LookupCatalogTableResult struct {
	Arn          string `pulumi:"arn"`
	CatalogId    string `pulumi:"catalogId"`
	DatabaseName string `pulumi:"databaseName"`
	Description  string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string                             `pulumi:"id"`
	Name               string                             `pulumi:"name"`
	Owner              string                             `pulumi:"owner"`
	Parameters         map[string]string                  `pulumi:"parameters"`
	PartitionIndices   []GetCatalogTablePartitionIndex    `pulumi:"partitionIndices"`
	PartitionKeys      []GetCatalogTablePartitionKey      `pulumi:"partitionKeys"`
	QueryAsOfTime      *string                            `pulumi:"queryAsOfTime"`
	Retention          int                                `pulumi:"retention"`
	StorageDescriptors []GetCatalogTableStorageDescriptor `pulumi:"storageDescriptors"`
	TableType          string                             `pulumi:"tableType"`
	TargetTables       []GetCatalogTableTargetTable       `pulumi:"targetTables"`
	TransactionId      *int                               `pulumi:"transactionId"`
	ViewExpandedText   string                             `pulumi:"viewExpandedText"`
	ViewOriginalText   string                             `pulumi:"viewOriginalText"`
}

func LookupCatalogTableOutput(ctx *pulumi.Context, args LookupCatalogTableOutputArgs, opts ...pulumi.InvokeOption) LookupCatalogTableResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCatalogTableResult, error) {
			args := v.(LookupCatalogTableArgs)
			r, err := LookupCatalogTable(ctx, &args, opts...)
			var s LookupCatalogTableResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCatalogTableResultOutput)
}

// A collection of arguments for invoking getCatalogTable.
type LookupCatalogTableOutputArgs struct {
	CatalogId     pulumi.StringPtrInput `pulumi:"catalogId"`
	DatabaseName  pulumi.StringInput    `pulumi:"databaseName"`
	Name          pulumi.StringInput    `pulumi:"name"`
	QueryAsOfTime pulumi.StringPtrInput `pulumi:"queryAsOfTime"`
	TransactionId pulumi.IntPtrInput    `pulumi:"transactionId"`
}

func (LookupCatalogTableOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogTableArgs)(nil)).Elem()
}

// A collection of values returned by getCatalogTable.
type LookupCatalogTableResultOutput struct{ *pulumi.OutputState }

func (LookupCatalogTableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogTableResult)(nil)).Elem()
}

func (o LookupCatalogTableResultOutput) ToLookupCatalogTableResultOutput() LookupCatalogTableResultOutput {
	return o
}

func (o LookupCatalogTableResultOutput) ToLookupCatalogTableResultOutputWithContext(ctx context.Context) LookupCatalogTableResultOutput {
	return o
}

func (o LookupCatalogTableResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupCatalogTableResultOutput) CatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) string { return v.CatalogId }).(pulumi.StringOutput)
}

func (o LookupCatalogTableResultOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o LookupCatalogTableResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCatalogTableResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCatalogTableResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupCatalogTableResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) string { return v.Owner }).(pulumi.StringOutput)
}

func (o LookupCatalogTableResultOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

func (o LookupCatalogTableResultOutput) PartitionIndices() GetCatalogTablePartitionIndexArrayOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) []GetCatalogTablePartitionIndex { return v.PartitionIndices }).(GetCatalogTablePartitionIndexArrayOutput)
}

func (o LookupCatalogTableResultOutput) PartitionKeys() GetCatalogTablePartitionKeyArrayOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) []GetCatalogTablePartitionKey { return v.PartitionKeys }).(GetCatalogTablePartitionKeyArrayOutput)
}

func (o LookupCatalogTableResultOutput) QueryAsOfTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) *string { return v.QueryAsOfTime }).(pulumi.StringPtrOutput)
}

func (o LookupCatalogTableResultOutput) Retention() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) int { return v.Retention }).(pulumi.IntOutput)
}

func (o LookupCatalogTableResultOutput) StorageDescriptors() GetCatalogTableStorageDescriptorArrayOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) []GetCatalogTableStorageDescriptor { return v.StorageDescriptors }).(GetCatalogTableStorageDescriptorArrayOutput)
}

func (o LookupCatalogTableResultOutput) TableType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) string { return v.TableType }).(pulumi.StringOutput)
}

func (o LookupCatalogTableResultOutput) TargetTables() GetCatalogTableTargetTableArrayOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) []GetCatalogTableTargetTable { return v.TargetTables }).(GetCatalogTableTargetTableArrayOutput)
}

func (o LookupCatalogTableResultOutput) TransactionId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) *int { return v.TransactionId }).(pulumi.IntPtrOutput)
}

func (o LookupCatalogTableResultOutput) ViewExpandedText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) string { return v.ViewExpandedText }).(pulumi.StringOutput)
}

func (o LookupCatalogTableResultOutput) ViewOriginalText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogTableResult) string { return v.ViewOriginalText }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCatalogTableResultOutput{})
}
