// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Glue Catalog Table Resource. You can refer to the [Glue Developer Guide](http://docs.aws.amazon.com/glue/latest/dg/populate-data-catalog.html) for a full explanation of the Glue Data Catalog functionality.
type CatalogTable struct {
	s *pulumi.ResourceState
}

// NewCatalogTable registers a new resource with the given unique name, arguments, and options.
func NewCatalogTable(ctx *pulumi.Context,
	name string, args *CatalogTableArgs, opts ...pulumi.ResourceOpt) (*CatalogTable, error) {
	if args == nil || args.DatabaseName == nil {
		return nil, errors.New("missing required argument 'DatabaseName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["catalogId"] = nil
		inputs["databaseName"] = nil
		inputs["description"] = nil
		inputs["name"] = nil
		inputs["owner"] = nil
		inputs["parameters"] = nil
		inputs["partitionKeys"] = nil
		inputs["retention"] = nil
		inputs["storageDescriptor"] = nil
		inputs["tableType"] = nil
		inputs["viewExpandedText"] = nil
		inputs["viewOriginalText"] = nil
	} else {
		inputs["catalogId"] = args.CatalogId
		inputs["databaseName"] = args.DatabaseName
		inputs["description"] = args.Description
		inputs["name"] = args.Name
		inputs["owner"] = args.Owner
		inputs["parameters"] = args.Parameters
		inputs["partitionKeys"] = args.PartitionKeys
		inputs["retention"] = args.Retention
		inputs["storageDescriptor"] = args.StorageDescriptor
		inputs["tableType"] = args.TableType
		inputs["viewExpandedText"] = args.ViewExpandedText
		inputs["viewOriginalText"] = args.ViewOriginalText
	}
	s, err := ctx.RegisterResource("aws:glue/catalogTable:CatalogTable", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &CatalogTable{s: s}, nil
}

// GetCatalogTable gets an existing CatalogTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCatalogTable(ctx *pulumi.Context,
	name string, id pulumi.ID, state *CatalogTableState, opts ...pulumi.ResourceOpt) (*CatalogTable, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["catalogId"] = state.CatalogId
		inputs["databaseName"] = state.DatabaseName
		inputs["description"] = state.Description
		inputs["name"] = state.Name
		inputs["owner"] = state.Owner
		inputs["parameters"] = state.Parameters
		inputs["partitionKeys"] = state.PartitionKeys
		inputs["retention"] = state.Retention
		inputs["storageDescriptor"] = state.StorageDescriptor
		inputs["tableType"] = state.TableType
		inputs["viewExpandedText"] = state.ViewExpandedText
		inputs["viewOriginalText"] = state.ViewOriginalText
	}
	s, err := ctx.ReadResource("aws:glue/catalogTable:CatalogTable", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &CatalogTable{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *CatalogTable) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *CatalogTable) ID() *pulumi.IDOutput {
	return r.s.ID
}

// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
func (r *CatalogTable) CatalogId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["catalogId"])
}

// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
func (r *CatalogTable) DatabaseName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["databaseName"])
}

// Description of the table.
func (r *CatalogTable) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// Name of the SerDe.
func (r *CatalogTable) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Owner of the table.
func (r *CatalogTable) Owner() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["owner"])
}

// Usually the class that implements the SerDe. An example is: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe.
func (r *CatalogTable) Parameters() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["parameters"])
}

// A list of columns by which the table is partitioned. Only primitive types are supported as partition keys.
func (r *CatalogTable) PartitionKeys() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["partitionKeys"])
}

// Retention time for this table.
func (r *CatalogTable) Retention() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["retention"])
}

// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
func (r *CatalogTable) StorageDescriptor() *pulumi.Output {
	return r.s.State["storageDescriptor"]
}

// The type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.).
func (r *CatalogTable) TableType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["tableType"])
}

// If the table is a view, the expanded text of the view; otherwise null.
func (r *CatalogTable) ViewExpandedText() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["viewExpandedText"])
}

// If the table is a view, the original text of the view; otherwise null.
func (r *CatalogTable) ViewOriginalText() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["viewOriginalText"])
}

// Input properties used for looking up and filtering CatalogTable resources.
type CatalogTableState struct {
	// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
	CatalogId interface{}
	// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
	DatabaseName interface{}
	// Description of the table.
	Description interface{}
	// Name of the SerDe.
	Name interface{}
	// Owner of the table.
	Owner interface{}
	// Usually the class that implements the SerDe. An example is: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe.
	Parameters interface{}
	// A list of columns by which the table is partitioned. Only primitive types are supported as partition keys.
	PartitionKeys interface{}
	// Retention time for this table.
	Retention interface{}
	// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
	StorageDescriptor interface{}
	// The type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.).
	TableType interface{}
	// If the table is a view, the expanded text of the view; otherwise null.
	ViewExpandedText interface{}
	// If the table is a view, the original text of the view; otherwise null.
	ViewOriginalText interface{}
}

// The set of arguments for constructing a CatalogTable resource.
type CatalogTableArgs struct {
	// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
	CatalogId interface{}
	// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
	DatabaseName interface{}
	// Description of the table.
	Description interface{}
	// Name of the SerDe.
	Name interface{}
	// Owner of the table.
	Owner interface{}
	// Usually the class that implements the SerDe. An example is: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe.
	Parameters interface{}
	// A list of columns by which the table is partitioned. Only primitive types are supported as partition keys.
	PartitionKeys interface{}
	// Retention time for this table.
	Retention interface{}
	// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
	StorageDescriptor interface{}
	// The type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.).
	TableType interface{}
	// If the table is a view, the expanded text of the view; otherwise null.
	ViewExpandedText interface{}
	// If the table is a view, the original text of the view; otherwise null.
	ViewOriginalText interface{}
}
