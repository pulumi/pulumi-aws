// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DevEndpoint struct {
	pulumi.CustomResourceState

	Arguments                          pulumi.MapOutput         `pulumi:"arguments"`
	Arn                                pulumi.StringOutput      `pulumi:"arn"`
	AvailabilityZone                   pulumi.StringOutput      `pulumi:"availabilityZone"`
	ExtraJarsS3Path                    pulumi.StringPtrOutput   `pulumi:"extraJarsS3Path"`
	ExtraPythonLibsS3Path              pulumi.StringPtrOutput   `pulumi:"extraPythonLibsS3Path"`
	FailureReason                      pulumi.StringOutput      `pulumi:"failureReason"`
	GlueVersion                        pulumi.StringPtrOutput   `pulumi:"glueVersion"`
	Name                               pulumi.StringOutput      `pulumi:"name"`
	NumberOfNodes                      pulumi.IntPtrOutput      `pulumi:"numberOfNodes"`
	NumberOfWorkers                    pulumi.IntPtrOutput      `pulumi:"numberOfWorkers"`
	PrivateAddress                     pulumi.StringOutput      `pulumi:"privateAddress"`
	PublicAddress                      pulumi.StringOutput      `pulumi:"publicAddress"`
	PublicKey                          pulumi.StringPtrOutput   `pulumi:"publicKey"`
	PublicKeys                         pulumi.StringArrayOutput `pulumi:"publicKeys"`
	RoleArn                            pulumi.StringOutput      `pulumi:"roleArn"`
	SecurityConfiguration              pulumi.StringPtrOutput   `pulumi:"securityConfiguration"`
	SecurityGroupIds                   pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	Status                             pulumi.StringOutput      `pulumi:"status"`
	SubnetId                           pulumi.StringPtrOutput   `pulumi:"subnetId"`
	Tags                               pulumi.StringMapOutput   `pulumi:"tags"`
	TagsAll                            pulumi.StringMapOutput   `pulumi:"tagsAll"`
	VpcId                              pulumi.StringOutput      `pulumi:"vpcId"`
	WorkerType                         pulumi.StringPtrOutput   `pulumi:"workerType"`
	YarnEndpointAddress                pulumi.StringOutput      `pulumi:"yarnEndpointAddress"`
	ZeppelinRemoteSparkInterpreterPort pulumi.IntOutput         `pulumi:"zeppelinRemoteSparkInterpreterPort"`
}

// NewDevEndpoint registers a new resource with the given unique name, arguments, and options.
func NewDevEndpoint(ctx *pulumi.Context,
	name string, args *DevEndpointArgs, opts ...pulumi.ResourceOption) (*DevEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	var resource DevEndpoint
	err := ctx.RegisterResource("aws:glue/devEndpoint:DevEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDevEndpoint gets an existing DevEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDevEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DevEndpointState, opts ...pulumi.ResourceOption) (*DevEndpoint, error) {
	var resource DevEndpoint
	err := ctx.ReadResource("aws:glue/devEndpoint:DevEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DevEndpoint resources.
type devEndpointState struct {
	Arguments                          map[string]interface{} `pulumi:"arguments"`
	Arn                                *string                `pulumi:"arn"`
	AvailabilityZone                   *string                `pulumi:"availabilityZone"`
	ExtraJarsS3Path                    *string                `pulumi:"extraJarsS3Path"`
	ExtraPythonLibsS3Path              *string                `pulumi:"extraPythonLibsS3Path"`
	FailureReason                      *string                `pulumi:"failureReason"`
	GlueVersion                        *string                `pulumi:"glueVersion"`
	Name                               *string                `pulumi:"name"`
	NumberOfNodes                      *int                   `pulumi:"numberOfNodes"`
	NumberOfWorkers                    *int                   `pulumi:"numberOfWorkers"`
	PrivateAddress                     *string                `pulumi:"privateAddress"`
	PublicAddress                      *string                `pulumi:"publicAddress"`
	PublicKey                          *string                `pulumi:"publicKey"`
	PublicKeys                         []string               `pulumi:"publicKeys"`
	RoleArn                            *string                `pulumi:"roleArn"`
	SecurityConfiguration              *string                `pulumi:"securityConfiguration"`
	SecurityGroupIds                   []string               `pulumi:"securityGroupIds"`
	Status                             *string                `pulumi:"status"`
	SubnetId                           *string                `pulumi:"subnetId"`
	Tags                               map[string]string      `pulumi:"tags"`
	TagsAll                            map[string]string      `pulumi:"tagsAll"`
	VpcId                              *string                `pulumi:"vpcId"`
	WorkerType                         *string                `pulumi:"workerType"`
	YarnEndpointAddress                *string                `pulumi:"yarnEndpointAddress"`
	ZeppelinRemoteSparkInterpreterPort *int                   `pulumi:"zeppelinRemoteSparkInterpreterPort"`
}

type DevEndpointState struct {
	Arguments                          pulumi.MapInput
	Arn                                pulumi.StringPtrInput
	AvailabilityZone                   pulumi.StringPtrInput
	ExtraJarsS3Path                    pulumi.StringPtrInput
	ExtraPythonLibsS3Path              pulumi.StringPtrInput
	FailureReason                      pulumi.StringPtrInput
	GlueVersion                        pulumi.StringPtrInput
	Name                               pulumi.StringPtrInput
	NumberOfNodes                      pulumi.IntPtrInput
	NumberOfWorkers                    pulumi.IntPtrInput
	PrivateAddress                     pulumi.StringPtrInput
	PublicAddress                      pulumi.StringPtrInput
	PublicKey                          pulumi.StringPtrInput
	PublicKeys                         pulumi.StringArrayInput
	RoleArn                            pulumi.StringPtrInput
	SecurityConfiguration              pulumi.StringPtrInput
	SecurityGroupIds                   pulumi.StringArrayInput
	Status                             pulumi.StringPtrInput
	SubnetId                           pulumi.StringPtrInput
	Tags                               pulumi.StringMapInput
	TagsAll                            pulumi.StringMapInput
	VpcId                              pulumi.StringPtrInput
	WorkerType                         pulumi.StringPtrInput
	YarnEndpointAddress                pulumi.StringPtrInput
	ZeppelinRemoteSparkInterpreterPort pulumi.IntPtrInput
}

func (DevEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*devEndpointState)(nil)).Elem()
}

type devEndpointArgs struct {
	Arguments             map[string]interface{} `pulumi:"arguments"`
	ExtraJarsS3Path       *string                `pulumi:"extraJarsS3Path"`
	ExtraPythonLibsS3Path *string                `pulumi:"extraPythonLibsS3Path"`
	GlueVersion           *string                `pulumi:"glueVersion"`
	Name                  *string                `pulumi:"name"`
	NumberOfNodes         *int                   `pulumi:"numberOfNodes"`
	NumberOfWorkers       *int                   `pulumi:"numberOfWorkers"`
	PublicKey             *string                `pulumi:"publicKey"`
	PublicKeys            []string               `pulumi:"publicKeys"`
	RoleArn               string                 `pulumi:"roleArn"`
	SecurityConfiguration *string                `pulumi:"securityConfiguration"`
	SecurityGroupIds      []string               `pulumi:"securityGroupIds"`
	SubnetId              *string                `pulumi:"subnetId"`
	Tags                  map[string]string      `pulumi:"tags"`
	WorkerType            *string                `pulumi:"workerType"`
}

// The set of arguments for constructing a DevEndpoint resource.
type DevEndpointArgs struct {
	Arguments             pulumi.MapInput
	ExtraJarsS3Path       pulumi.StringPtrInput
	ExtraPythonLibsS3Path pulumi.StringPtrInput
	GlueVersion           pulumi.StringPtrInput
	Name                  pulumi.StringPtrInput
	NumberOfNodes         pulumi.IntPtrInput
	NumberOfWorkers       pulumi.IntPtrInput
	PublicKey             pulumi.StringPtrInput
	PublicKeys            pulumi.StringArrayInput
	RoleArn               pulumi.StringInput
	SecurityConfiguration pulumi.StringPtrInput
	SecurityGroupIds      pulumi.StringArrayInput
	SubnetId              pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	WorkerType            pulumi.StringPtrInput
}

func (DevEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*devEndpointArgs)(nil)).Elem()
}

type DevEndpointInput interface {
	pulumi.Input

	ToDevEndpointOutput() DevEndpointOutput
	ToDevEndpointOutputWithContext(ctx context.Context) DevEndpointOutput
}

func (*DevEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**DevEndpoint)(nil)).Elem()
}

func (i *DevEndpoint) ToDevEndpointOutput() DevEndpointOutput {
	return i.ToDevEndpointOutputWithContext(context.Background())
}

func (i *DevEndpoint) ToDevEndpointOutputWithContext(ctx context.Context) DevEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevEndpointOutput)
}

// DevEndpointArrayInput is an input type that accepts DevEndpointArray and DevEndpointArrayOutput values.
// You can construct a concrete instance of `DevEndpointArrayInput` via:
//
//	DevEndpointArray{ DevEndpointArgs{...} }
type DevEndpointArrayInput interface {
	pulumi.Input

	ToDevEndpointArrayOutput() DevEndpointArrayOutput
	ToDevEndpointArrayOutputWithContext(context.Context) DevEndpointArrayOutput
}

type DevEndpointArray []DevEndpointInput

func (DevEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DevEndpoint)(nil)).Elem()
}

func (i DevEndpointArray) ToDevEndpointArrayOutput() DevEndpointArrayOutput {
	return i.ToDevEndpointArrayOutputWithContext(context.Background())
}

func (i DevEndpointArray) ToDevEndpointArrayOutputWithContext(ctx context.Context) DevEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevEndpointArrayOutput)
}

// DevEndpointMapInput is an input type that accepts DevEndpointMap and DevEndpointMapOutput values.
// You can construct a concrete instance of `DevEndpointMapInput` via:
//
//	DevEndpointMap{ "key": DevEndpointArgs{...} }
type DevEndpointMapInput interface {
	pulumi.Input

	ToDevEndpointMapOutput() DevEndpointMapOutput
	ToDevEndpointMapOutputWithContext(context.Context) DevEndpointMapOutput
}

type DevEndpointMap map[string]DevEndpointInput

func (DevEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DevEndpoint)(nil)).Elem()
}

func (i DevEndpointMap) ToDevEndpointMapOutput() DevEndpointMapOutput {
	return i.ToDevEndpointMapOutputWithContext(context.Background())
}

func (i DevEndpointMap) ToDevEndpointMapOutputWithContext(ctx context.Context) DevEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevEndpointMapOutput)
}

type DevEndpointOutput struct{ *pulumi.OutputState }

func (DevEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevEndpoint)(nil)).Elem()
}

func (o DevEndpointOutput) ToDevEndpointOutput() DevEndpointOutput {
	return o
}

func (o DevEndpointOutput) ToDevEndpointOutputWithContext(ctx context.Context) DevEndpointOutput {
	return o
}

func (o DevEndpointOutput) Arguments() pulumi.MapOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.MapOutput { return v.Arguments }).(pulumi.MapOutput)
}

func (o DevEndpointOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o DevEndpointOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o DevEndpointOutput) ExtraJarsS3Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringPtrOutput { return v.ExtraJarsS3Path }).(pulumi.StringPtrOutput)
}

func (o DevEndpointOutput) ExtraPythonLibsS3Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringPtrOutput { return v.ExtraPythonLibsS3Path }).(pulumi.StringPtrOutput)
}

func (o DevEndpointOutput) FailureReason() pulumi.StringOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringOutput { return v.FailureReason }).(pulumi.StringOutput)
}

func (o DevEndpointOutput) GlueVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringPtrOutput { return v.GlueVersion }).(pulumi.StringPtrOutput)
}

func (o DevEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DevEndpointOutput) NumberOfNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.IntPtrOutput { return v.NumberOfNodes }).(pulumi.IntPtrOutput)
}

func (o DevEndpointOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.IntPtrOutput { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

func (o DevEndpointOutput) PrivateAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringOutput { return v.PrivateAddress }).(pulumi.StringOutput)
}

func (o DevEndpointOutput) PublicAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringOutput { return v.PublicAddress }).(pulumi.StringOutput)
}

func (o DevEndpointOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringPtrOutput { return v.PublicKey }).(pulumi.StringPtrOutput)
}

func (o DevEndpointOutput) PublicKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringArrayOutput { return v.PublicKeys }).(pulumi.StringArrayOutput)
}

func (o DevEndpointOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

func (o DevEndpointOutput) SecurityConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringPtrOutput { return v.SecurityConfiguration }).(pulumi.StringPtrOutput)
}

func (o DevEndpointOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o DevEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o DevEndpointOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringPtrOutput { return v.SubnetId }).(pulumi.StringPtrOutput)
}

func (o DevEndpointOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o DevEndpointOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o DevEndpointOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

func (o DevEndpointOutput) WorkerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringPtrOutput { return v.WorkerType }).(pulumi.StringPtrOutput)
}

func (o DevEndpointOutput) YarnEndpointAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.StringOutput { return v.YarnEndpointAddress }).(pulumi.StringOutput)
}

func (o DevEndpointOutput) ZeppelinRemoteSparkInterpreterPort() pulumi.IntOutput {
	return o.ApplyT(func(v *DevEndpoint) pulumi.IntOutput { return v.ZeppelinRemoteSparkInterpreterPort }).(pulumi.IntOutput)
}

type DevEndpointArrayOutput struct{ *pulumi.OutputState }

func (DevEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DevEndpoint)(nil)).Elem()
}

func (o DevEndpointArrayOutput) ToDevEndpointArrayOutput() DevEndpointArrayOutput {
	return o
}

func (o DevEndpointArrayOutput) ToDevEndpointArrayOutputWithContext(ctx context.Context) DevEndpointArrayOutput {
	return o
}

func (o DevEndpointArrayOutput) Index(i pulumi.IntInput) DevEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DevEndpoint {
		return vs[0].([]*DevEndpoint)[vs[1].(int)]
	}).(DevEndpointOutput)
}

type DevEndpointMapOutput struct{ *pulumi.OutputState }

func (DevEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DevEndpoint)(nil)).Elem()
}

func (o DevEndpointMapOutput) ToDevEndpointMapOutput() DevEndpointMapOutput {
	return o
}

func (o DevEndpointMapOutput) ToDevEndpointMapOutputWithContext(ctx context.Context) DevEndpointMapOutput {
	return o
}

func (o DevEndpointMapOutput) MapIndex(k pulumi.StringInput) DevEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DevEndpoint {
		return vs[0].(map[string]*DevEndpoint)[vs[1].(string)]
	}).(DevEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DevEndpointInput)(nil)).Elem(), &DevEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevEndpointArrayInput)(nil)).Elem(), DevEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevEndpointMapInput)(nil)).Elem(), DevEndpointMap{})
	pulumi.RegisterOutputType(DevEndpointOutput{})
	pulumi.RegisterOutputType(DevEndpointArrayOutput{})
	pulumi.RegisterOutputType(DevEndpointMapOutput{})
}
