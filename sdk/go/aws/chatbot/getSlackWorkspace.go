// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chatbot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS Chatbot Slack Workspace.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/chatbot"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := chatbot.GetSlackWorkspace(ctx, &chatbot.GetSlackWorkspaceArgs{
//				SlackTeamName: "abc",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSlackWorkspace(ctx *pulumi.Context, args *GetSlackWorkspaceArgs, opts ...pulumi.InvokeOption) (*GetSlackWorkspaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSlackWorkspaceResult
	err := ctx.Invoke("aws:chatbot/getSlackWorkspace:getSlackWorkspace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSlackWorkspace.
type GetSlackWorkspaceArgs struct {
	// Slack workspace name configured with AWS Chatbot.
	SlackTeamName string `pulumi:"slackTeamName"`
}

// A collection of values returned by getSlackWorkspace.
type GetSlackWorkspaceResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// ID of the Slack Workspace assigned by AWS Chatbot.
	SlackTeamId   string `pulumi:"slackTeamId"`
	SlackTeamName string `pulumi:"slackTeamName"`
}

func GetSlackWorkspaceOutput(ctx *pulumi.Context, args GetSlackWorkspaceOutputArgs, opts ...pulumi.InvokeOption) GetSlackWorkspaceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSlackWorkspaceResultOutput, error) {
			args := v.(GetSlackWorkspaceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws:chatbot/getSlackWorkspace:getSlackWorkspace", args, GetSlackWorkspaceResultOutput{}, options).(GetSlackWorkspaceResultOutput), nil
		}).(GetSlackWorkspaceResultOutput)
}

// A collection of arguments for invoking getSlackWorkspace.
type GetSlackWorkspaceOutputArgs struct {
	// Slack workspace name configured with AWS Chatbot.
	SlackTeamName pulumi.StringInput `pulumi:"slackTeamName"`
}

func (GetSlackWorkspaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlackWorkspaceArgs)(nil)).Elem()
}

// A collection of values returned by getSlackWorkspace.
type GetSlackWorkspaceResultOutput struct{ *pulumi.OutputState }

func (GetSlackWorkspaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlackWorkspaceResult)(nil)).Elem()
}

func (o GetSlackWorkspaceResultOutput) ToGetSlackWorkspaceResultOutput() GetSlackWorkspaceResultOutput {
	return o
}

func (o GetSlackWorkspaceResultOutput) ToGetSlackWorkspaceResultOutputWithContext(ctx context.Context) GetSlackWorkspaceResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSlackWorkspaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlackWorkspaceResult) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the Slack Workspace assigned by AWS Chatbot.
func (o GetSlackWorkspaceResultOutput) SlackTeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlackWorkspaceResult) string { return v.SlackTeamId }).(pulumi.StringOutput)
}

func (o GetSlackWorkspaceResultOutput) SlackTeamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlackWorkspaceResult) string { return v.SlackTeamName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSlackWorkspaceResultOutput{})
}
