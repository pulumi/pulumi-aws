// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chatbot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type SlackChannelConfigurationTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// SlackChannelConfigurationTimeoutsInput is an input type that accepts SlackChannelConfigurationTimeoutsArgs and SlackChannelConfigurationTimeoutsOutput values.
// You can construct a concrete instance of `SlackChannelConfigurationTimeoutsInput` via:
//
//	SlackChannelConfigurationTimeoutsArgs{...}
type SlackChannelConfigurationTimeoutsInput interface {
	pulumi.Input

	ToSlackChannelConfigurationTimeoutsOutput() SlackChannelConfigurationTimeoutsOutput
	ToSlackChannelConfigurationTimeoutsOutputWithContext(context.Context) SlackChannelConfigurationTimeoutsOutput
}

type SlackChannelConfigurationTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (SlackChannelConfigurationTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackChannelConfigurationTimeouts)(nil)).Elem()
}

func (i SlackChannelConfigurationTimeoutsArgs) ToSlackChannelConfigurationTimeoutsOutput() SlackChannelConfigurationTimeoutsOutput {
	return i.ToSlackChannelConfigurationTimeoutsOutputWithContext(context.Background())
}

func (i SlackChannelConfigurationTimeoutsArgs) ToSlackChannelConfigurationTimeoutsOutputWithContext(ctx context.Context) SlackChannelConfigurationTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackChannelConfigurationTimeoutsOutput)
}

func (i SlackChannelConfigurationTimeoutsArgs) ToSlackChannelConfigurationTimeoutsPtrOutput() SlackChannelConfigurationTimeoutsPtrOutput {
	return i.ToSlackChannelConfigurationTimeoutsPtrOutputWithContext(context.Background())
}

func (i SlackChannelConfigurationTimeoutsArgs) ToSlackChannelConfigurationTimeoutsPtrOutputWithContext(ctx context.Context) SlackChannelConfigurationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackChannelConfigurationTimeoutsOutput).ToSlackChannelConfigurationTimeoutsPtrOutputWithContext(ctx)
}

// SlackChannelConfigurationTimeoutsPtrInput is an input type that accepts SlackChannelConfigurationTimeoutsArgs, SlackChannelConfigurationTimeoutsPtr and SlackChannelConfigurationTimeoutsPtrOutput values.
// You can construct a concrete instance of `SlackChannelConfigurationTimeoutsPtrInput` via:
//
//	        SlackChannelConfigurationTimeoutsArgs{...}
//
//	or:
//
//	        nil
type SlackChannelConfigurationTimeoutsPtrInput interface {
	pulumi.Input

	ToSlackChannelConfigurationTimeoutsPtrOutput() SlackChannelConfigurationTimeoutsPtrOutput
	ToSlackChannelConfigurationTimeoutsPtrOutputWithContext(context.Context) SlackChannelConfigurationTimeoutsPtrOutput
}

type slackChannelConfigurationTimeoutsPtrType SlackChannelConfigurationTimeoutsArgs

func SlackChannelConfigurationTimeoutsPtr(v *SlackChannelConfigurationTimeoutsArgs) SlackChannelConfigurationTimeoutsPtrInput {
	return (*slackChannelConfigurationTimeoutsPtrType)(v)
}

func (*slackChannelConfigurationTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlackChannelConfigurationTimeouts)(nil)).Elem()
}

func (i *slackChannelConfigurationTimeoutsPtrType) ToSlackChannelConfigurationTimeoutsPtrOutput() SlackChannelConfigurationTimeoutsPtrOutput {
	return i.ToSlackChannelConfigurationTimeoutsPtrOutputWithContext(context.Background())
}

func (i *slackChannelConfigurationTimeoutsPtrType) ToSlackChannelConfigurationTimeoutsPtrOutputWithContext(ctx context.Context) SlackChannelConfigurationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackChannelConfigurationTimeoutsPtrOutput)
}

type SlackChannelConfigurationTimeoutsOutput struct{ *pulumi.OutputState }

func (SlackChannelConfigurationTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackChannelConfigurationTimeouts)(nil)).Elem()
}

func (o SlackChannelConfigurationTimeoutsOutput) ToSlackChannelConfigurationTimeoutsOutput() SlackChannelConfigurationTimeoutsOutput {
	return o
}

func (o SlackChannelConfigurationTimeoutsOutput) ToSlackChannelConfigurationTimeoutsOutputWithContext(ctx context.Context) SlackChannelConfigurationTimeoutsOutput {
	return o
}

func (o SlackChannelConfigurationTimeoutsOutput) ToSlackChannelConfigurationTimeoutsPtrOutput() SlackChannelConfigurationTimeoutsPtrOutput {
	return o.ToSlackChannelConfigurationTimeoutsPtrOutputWithContext(context.Background())
}

func (o SlackChannelConfigurationTimeoutsOutput) ToSlackChannelConfigurationTimeoutsPtrOutputWithContext(ctx context.Context) SlackChannelConfigurationTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SlackChannelConfigurationTimeouts) *SlackChannelConfigurationTimeouts {
		return &v
	}).(SlackChannelConfigurationTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SlackChannelConfigurationTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelConfigurationTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o SlackChannelConfigurationTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelConfigurationTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SlackChannelConfigurationTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackChannelConfigurationTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type SlackChannelConfigurationTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (SlackChannelConfigurationTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlackChannelConfigurationTimeouts)(nil)).Elem()
}

func (o SlackChannelConfigurationTimeoutsPtrOutput) ToSlackChannelConfigurationTimeoutsPtrOutput() SlackChannelConfigurationTimeoutsPtrOutput {
	return o
}

func (o SlackChannelConfigurationTimeoutsPtrOutput) ToSlackChannelConfigurationTimeoutsPtrOutputWithContext(ctx context.Context) SlackChannelConfigurationTimeoutsPtrOutput {
	return o
}

func (o SlackChannelConfigurationTimeoutsPtrOutput) Elem() SlackChannelConfigurationTimeoutsOutput {
	return o.ApplyT(func(v *SlackChannelConfigurationTimeouts) SlackChannelConfigurationTimeouts {
		if v != nil {
			return *v
		}
		var ret SlackChannelConfigurationTimeouts
		return ret
	}).(SlackChannelConfigurationTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SlackChannelConfigurationTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelConfigurationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o SlackChannelConfigurationTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelConfigurationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SlackChannelConfigurationTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackChannelConfigurationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type TeamsChannelConfigurationTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// TeamsChannelConfigurationTimeoutsInput is an input type that accepts TeamsChannelConfigurationTimeoutsArgs and TeamsChannelConfigurationTimeoutsOutput values.
// You can construct a concrete instance of `TeamsChannelConfigurationTimeoutsInput` via:
//
//	TeamsChannelConfigurationTimeoutsArgs{...}
type TeamsChannelConfigurationTimeoutsInput interface {
	pulumi.Input

	ToTeamsChannelConfigurationTimeoutsOutput() TeamsChannelConfigurationTimeoutsOutput
	ToTeamsChannelConfigurationTimeoutsOutputWithContext(context.Context) TeamsChannelConfigurationTimeoutsOutput
}

type TeamsChannelConfigurationTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (TeamsChannelConfigurationTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsChannelConfigurationTimeouts)(nil)).Elem()
}

func (i TeamsChannelConfigurationTimeoutsArgs) ToTeamsChannelConfigurationTimeoutsOutput() TeamsChannelConfigurationTimeoutsOutput {
	return i.ToTeamsChannelConfigurationTimeoutsOutputWithContext(context.Background())
}

func (i TeamsChannelConfigurationTimeoutsArgs) ToTeamsChannelConfigurationTimeoutsOutputWithContext(ctx context.Context) TeamsChannelConfigurationTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsChannelConfigurationTimeoutsOutput)
}

func (i TeamsChannelConfigurationTimeoutsArgs) ToTeamsChannelConfigurationTimeoutsPtrOutput() TeamsChannelConfigurationTimeoutsPtrOutput {
	return i.ToTeamsChannelConfigurationTimeoutsPtrOutputWithContext(context.Background())
}

func (i TeamsChannelConfigurationTimeoutsArgs) ToTeamsChannelConfigurationTimeoutsPtrOutputWithContext(ctx context.Context) TeamsChannelConfigurationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsChannelConfigurationTimeoutsOutput).ToTeamsChannelConfigurationTimeoutsPtrOutputWithContext(ctx)
}

// TeamsChannelConfigurationTimeoutsPtrInput is an input type that accepts TeamsChannelConfigurationTimeoutsArgs, TeamsChannelConfigurationTimeoutsPtr and TeamsChannelConfigurationTimeoutsPtrOutput values.
// You can construct a concrete instance of `TeamsChannelConfigurationTimeoutsPtrInput` via:
//
//	        TeamsChannelConfigurationTimeoutsArgs{...}
//
//	or:
//
//	        nil
type TeamsChannelConfigurationTimeoutsPtrInput interface {
	pulumi.Input

	ToTeamsChannelConfigurationTimeoutsPtrOutput() TeamsChannelConfigurationTimeoutsPtrOutput
	ToTeamsChannelConfigurationTimeoutsPtrOutputWithContext(context.Context) TeamsChannelConfigurationTimeoutsPtrOutput
}

type teamsChannelConfigurationTimeoutsPtrType TeamsChannelConfigurationTimeoutsArgs

func TeamsChannelConfigurationTimeoutsPtr(v *TeamsChannelConfigurationTimeoutsArgs) TeamsChannelConfigurationTimeoutsPtrInput {
	return (*teamsChannelConfigurationTimeoutsPtrType)(v)
}

func (*teamsChannelConfigurationTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsChannelConfigurationTimeouts)(nil)).Elem()
}

func (i *teamsChannelConfigurationTimeoutsPtrType) ToTeamsChannelConfigurationTimeoutsPtrOutput() TeamsChannelConfigurationTimeoutsPtrOutput {
	return i.ToTeamsChannelConfigurationTimeoutsPtrOutputWithContext(context.Background())
}

func (i *teamsChannelConfigurationTimeoutsPtrType) ToTeamsChannelConfigurationTimeoutsPtrOutputWithContext(ctx context.Context) TeamsChannelConfigurationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamsChannelConfigurationTimeoutsPtrOutput)
}

type TeamsChannelConfigurationTimeoutsOutput struct{ *pulumi.OutputState }

func (TeamsChannelConfigurationTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamsChannelConfigurationTimeouts)(nil)).Elem()
}

func (o TeamsChannelConfigurationTimeoutsOutput) ToTeamsChannelConfigurationTimeoutsOutput() TeamsChannelConfigurationTimeoutsOutput {
	return o
}

func (o TeamsChannelConfigurationTimeoutsOutput) ToTeamsChannelConfigurationTimeoutsOutputWithContext(ctx context.Context) TeamsChannelConfigurationTimeoutsOutput {
	return o
}

func (o TeamsChannelConfigurationTimeoutsOutput) ToTeamsChannelConfigurationTimeoutsPtrOutput() TeamsChannelConfigurationTimeoutsPtrOutput {
	return o.ToTeamsChannelConfigurationTimeoutsPtrOutputWithContext(context.Background())
}

func (o TeamsChannelConfigurationTimeoutsOutput) ToTeamsChannelConfigurationTimeoutsPtrOutputWithContext(ctx context.Context) TeamsChannelConfigurationTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TeamsChannelConfigurationTimeouts) *TeamsChannelConfigurationTimeouts {
		return &v
	}).(TeamsChannelConfigurationTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o TeamsChannelConfigurationTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeamsChannelConfigurationTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o TeamsChannelConfigurationTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeamsChannelConfigurationTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o TeamsChannelConfigurationTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TeamsChannelConfigurationTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type TeamsChannelConfigurationTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (TeamsChannelConfigurationTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamsChannelConfigurationTimeouts)(nil)).Elem()
}

func (o TeamsChannelConfigurationTimeoutsPtrOutput) ToTeamsChannelConfigurationTimeoutsPtrOutput() TeamsChannelConfigurationTimeoutsPtrOutput {
	return o
}

func (o TeamsChannelConfigurationTimeoutsPtrOutput) ToTeamsChannelConfigurationTimeoutsPtrOutputWithContext(ctx context.Context) TeamsChannelConfigurationTimeoutsPtrOutput {
	return o
}

func (o TeamsChannelConfigurationTimeoutsPtrOutput) Elem() TeamsChannelConfigurationTimeoutsOutput {
	return o.ApplyT(func(v *TeamsChannelConfigurationTimeouts) TeamsChannelConfigurationTimeouts {
		if v != nil {
			return *v
		}
		var ret TeamsChannelConfigurationTimeouts
		return ret
	}).(TeamsChannelConfigurationTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o TeamsChannelConfigurationTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamsChannelConfigurationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o TeamsChannelConfigurationTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamsChannelConfigurationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o TeamsChannelConfigurationTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamsChannelConfigurationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SlackChannelConfigurationTimeoutsInput)(nil)).Elem(), SlackChannelConfigurationTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SlackChannelConfigurationTimeoutsPtrInput)(nil)).Elem(), SlackChannelConfigurationTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsChannelConfigurationTimeoutsInput)(nil)).Elem(), TeamsChannelConfigurationTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeamsChannelConfigurationTimeoutsPtrInput)(nil)).Elem(), TeamsChannelConfigurationTimeoutsArgs{})
	pulumi.RegisterOutputType(SlackChannelConfigurationTimeoutsOutput{})
	pulumi.RegisterOutputType(SlackChannelConfigurationTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(TeamsChannelConfigurationTimeoutsOutput{})
	pulumi.RegisterOutputType(TeamsChannelConfigurationTimeoutsPtrOutput{})
}
