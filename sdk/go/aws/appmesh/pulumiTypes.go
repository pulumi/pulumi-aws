// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appmesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GatewayRouteSpec struct {
	// The specification of a gRPC gateway route.
	GrpcRoute *GatewayRouteSpecGrpcRoute `pulumi:"grpcRoute"`
	// The specification of an HTTP/2 gateway route.
	Http2Route *GatewayRouteSpecHttp2Route `pulumi:"http2Route"`
	// The specification of an HTTP gateway route.
	HttpRoute *GatewayRouteSpecHttpRoute `pulumi:"httpRoute"`
}

// GatewayRouteSpecInput is an input type that accepts GatewayRouteSpecArgs and GatewayRouteSpecOutput values.
// You can construct a concrete instance of `GatewayRouteSpecInput` via:
//
//          GatewayRouteSpecArgs{...}
type GatewayRouteSpecInput interface {
	pulumi.Input

	ToGatewayRouteSpecOutput() GatewayRouteSpecOutput
	ToGatewayRouteSpecOutputWithContext(context.Context) GatewayRouteSpecOutput
}

type GatewayRouteSpecArgs struct {
	// The specification of a gRPC gateway route.
	GrpcRoute GatewayRouteSpecGrpcRoutePtrInput `pulumi:"grpcRoute"`
	// The specification of an HTTP/2 gateway route.
	Http2Route GatewayRouteSpecHttp2RoutePtrInput `pulumi:"http2Route"`
	// The specification of an HTTP gateway route.
	HttpRoute GatewayRouteSpecHttpRoutePtrInput `pulumi:"httpRoute"`
}

func (GatewayRouteSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpec)(nil)).Elem()
}

func (i GatewayRouteSpecArgs) ToGatewayRouteSpecOutput() GatewayRouteSpecOutput {
	return i.ToGatewayRouteSpecOutputWithContext(context.Background())
}

func (i GatewayRouteSpecArgs) ToGatewayRouteSpecOutputWithContext(ctx context.Context) GatewayRouteSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecOutput)
}

func (i GatewayRouteSpecArgs) ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput {
	return i.ToGatewayRouteSpecPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecArgs) ToGatewayRouteSpecPtrOutputWithContext(ctx context.Context) GatewayRouteSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecOutput).ToGatewayRouteSpecPtrOutputWithContext(ctx)
}

// GatewayRouteSpecPtrInput is an input type that accepts GatewayRouteSpecArgs, GatewayRouteSpecPtr and GatewayRouteSpecPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecPtrInput` via:
//
//          GatewayRouteSpecArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput
	ToGatewayRouteSpecPtrOutputWithContext(context.Context) GatewayRouteSpecPtrOutput
}

type gatewayRouteSpecPtrType GatewayRouteSpecArgs

func GatewayRouteSpecPtr(v *GatewayRouteSpecArgs) GatewayRouteSpecPtrInput {
	return (*gatewayRouteSpecPtrType)(v)
}

func (*gatewayRouteSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpec)(nil)).Elem()
}

func (i *gatewayRouteSpecPtrType) ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput {
	return i.ToGatewayRouteSpecPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecPtrType) ToGatewayRouteSpecPtrOutputWithContext(ctx context.Context) GatewayRouteSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecPtrOutput)
}

type GatewayRouteSpecOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpec)(nil)).Elem()
}

func (o GatewayRouteSpecOutput) ToGatewayRouteSpecOutput() GatewayRouteSpecOutput {
	return o
}

func (o GatewayRouteSpecOutput) ToGatewayRouteSpecOutputWithContext(ctx context.Context) GatewayRouteSpecOutput {
	return o
}

func (o GatewayRouteSpecOutput) ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput {
	return o.ToGatewayRouteSpecPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecOutput) ToGatewayRouteSpecPtrOutputWithContext(ctx context.Context) GatewayRouteSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpec) *GatewayRouteSpec {
		return &v
	}).(GatewayRouteSpecPtrOutput)
}

// The specification of a gRPC gateway route.
func (o GatewayRouteSpecOutput) GrpcRoute() GatewayRouteSpecGrpcRoutePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpec) *GatewayRouteSpecGrpcRoute { return v.GrpcRoute }).(GatewayRouteSpecGrpcRoutePtrOutput)
}

// The specification of an HTTP/2 gateway route.
func (o GatewayRouteSpecOutput) Http2Route() GatewayRouteSpecHttp2RoutePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpec) *GatewayRouteSpecHttp2Route { return v.Http2Route }).(GatewayRouteSpecHttp2RoutePtrOutput)
}

// The specification of an HTTP gateway route.
func (o GatewayRouteSpecOutput) HttpRoute() GatewayRouteSpecHttpRoutePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpec) *GatewayRouteSpecHttpRoute { return v.HttpRoute }).(GatewayRouteSpecHttpRoutePtrOutput)
}

type GatewayRouteSpecPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpec)(nil)).Elem()
}

func (o GatewayRouteSpecPtrOutput) ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput {
	return o
}

func (o GatewayRouteSpecPtrOutput) ToGatewayRouteSpecPtrOutputWithContext(ctx context.Context) GatewayRouteSpecPtrOutput {
	return o
}

func (o GatewayRouteSpecPtrOutput) Elem() GatewayRouteSpecOutput {
	return o.ApplyT(func(v *GatewayRouteSpec) GatewayRouteSpec {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpec
		return ret
	}).(GatewayRouteSpecOutput)
}

// The specification of a gRPC gateway route.
func (o GatewayRouteSpecPtrOutput) GrpcRoute() GatewayRouteSpecGrpcRoutePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpec) *GatewayRouteSpecGrpcRoute {
		if v == nil {
			return nil
		}
		return v.GrpcRoute
	}).(GatewayRouteSpecGrpcRoutePtrOutput)
}

// The specification of an HTTP/2 gateway route.
func (o GatewayRouteSpecPtrOutput) Http2Route() GatewayRouteSpecHttp2RoutePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpec) *GatewayRouteSpecHttp2Route {
		if v == nil {
			return nil
		}
		return v.Http2Route
	}).(GatewayRouteSpecHttp2RoutePtrOutput)
}

// The specification of an HTTP gateway route.
func (o GatewayRouteSpecPtrOutput) HttpRoute() GatewayRouteSpecHttpRoutePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpec) *GatewayRouteSpecHttpRoute {
		if v == nil {
			return nil
		}
		return v.HttpRoute
	}).(GatewayRouteSpecHttpRoutePtrOutput)
}

type GatewayRouteSpecGrpcRoute struct {
	// The action to take if a match is determined.
	Action GatewayRouteSpecGrpcRouteAction `pulumi:"action"`
	// The criteria for determining a request match.
	Match GatewayRouteSpecGrpcRouteMatch `pulumi:"match"`
}

// GatewayRouteSpecGrpcRouteInput is an input type that accepts GatewayRouteSpecGrpcRouteArgs and GatewayRouteSpecGrpcRouteOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteInput` via:
//
//          GatewayRouteSpecGrpcRouteArgs{...}
type GatewayRouteSpecGrpcRouteInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteOutput() GatewayRouteSpecGrpcRouteOutput
	ToGatewayRouteSpecGrpcRouteOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteOutput
}

type GatewayRouteSpecGrpcRouteArgs struct {
	// The action to take if a match is determined.
	Action GatewayRouteSpecGrpcRouteActionInput `pulumi:"action"`
	// The criteria for determining a request match.
	Match GatewayRouteSpecGrpcRouteMatchInput `pulumi:"match"`
}

func (GatewayRouteSpecGrpcRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRoute)(nil)).Elem()
}

func (i GatewayRouteSpecGrpcRouteArgs) ToGatewayRouteSpecGrpcRouteOutput() GatewayRouteSpecGrpcRouteOutput {
	return i.ToGatewayRouteSpecGrpcRouteOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteArgs) ToGatewayRouteSpecGrpcRouteOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteOutput)
}

func (i GatewayRouteSpecGrpcRouteArgs) ToGatewayRouteSpecGrpcRoutePtrOutput() GatewayRouteSpecGrpcRoutePtrOutput {
	return i.ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteArgs) ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteOutput).ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(ctx)
}

// GatewayRouteSpecGrpcRoutePtrInput is an input type that accepts GatewayRouteSpecGrpcRouteArgs, GatewayRouteSpecGrpcRoutePtr and GatewayRouteSpecGrpcRoutePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRoutePtrInput` via:
//
//          GatewayRouteSpecGrpcRouteArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecGrpcRoutePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRoutePtrOutput() GatewayRouteSpecGrpcRoutePtrOutput
	ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(context.Context) GatewayRouteSpecGrpcRoutePtrOutput
}

type gatewayRouteSpecGrpcRoutePtrType GatewayRouteSpecGrpcRouteArgs

func GatewayRouteSpecGrpcRoutePtr(v *GatewayRouteSpecGrpcRouteArgs) GatewayRouteSpecGrpcRoutePtrInput {
	return (*gatewayRouteSpecGrpcRoutePtrType)(v)
}

func (*gatewayRouteSpecGrpcRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRoute)(nil)).Elem()
}

func (i *gatewayRouteSpecGrpcRoutePtrType) ToGatewayRouteSpecGrpcRoutePtrOutput() GatewayRouteSpecGrpcRoutePtrOutput {
	return i.ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecGrpcRoutePtrType) ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRoutePtrOutput)
}

type GatewayRouteSpecGrpcRouteOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRoute)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteOutput) ToGatewayRouteSpecGrpcRouteOutput() GatewayRouteSpecGrpcRouteOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteOutput) ToGatewayRouteSpecGrpcRouteOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteOutput) ToGatewayRouteSpecGrpcRoutePtrOutput() GatewayRouteSpecGrpcRoutePtrOutput {
	return o.ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecGrpcRouteOutput) ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecGrpcRoute) *GatewayRouteSpecGrpcRoute {
		return &v
	}).(GatewayRouteSpecGrpcRoutePtrOutput)
}

// The action to take if a match is determined.
func (o GatewayRouteSpecGrpcRouteOutput) Action() GatewayRouteSpecGrpcRouteActionOutput {
	return o.ApplyT(func(v GatewayRouteSpecGrpcRoute) GatewayRouteSpecGrpcRouteAction { return v.Action }).(GatewayRouteSpecGrpcRouteActionOutput)
}

// The criteria for determining a request match.
func (o GatewayRouteSpecGrpcRouteOutput) Match() GatewayRouteSpecGrpcRouteMatchOutput {
	return o.ApplyT(func(v GatewayRouteSpecGrpcRoute) GatewayRouteSpecGrpcRouteMatch { return v.Match }).(GatewayRouteSpecGrpcRouteMatchOutput)
}

type GatewayRouteSpecGrpcRoutePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRoute)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRoutePtrOutput) ToGatewayRouteSpecGrpcRoutePtrOutput() GatewayRouteSpecGrpcRoutePtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRoutePtrOutput) ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRoutePtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRoutePtrOutput) Elem() GatewayRouteSpecGrpcRouteOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRoute) GatewayRouteSpecGrpcRoute {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecGrpcRoute
		return ret
	}).(GatewayRouteSpecGrpcRouteOutput)
}

// The action to take if a match is determined.
func (o GatewayRouteSpecGrpcRoutePtrOutput) Action() GatewayRouteSpecGrpcRouteActionPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRoute) *GatewayRouteSpecGrpcRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(GatewayRouteSpecGrpcRouteActionPtrOutput)
}

// The criteria for determining a request match.
func (o GatewayRouteSpecGrpcRoutePtrOutput) Match() GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRoute) *GatewayRouteSpecGrpcRouteMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(GatewayRouteSpecGrpcRouteMatchPtrOutput)
}

type GatewayRouteSpecGrpcRouteAction struct {
	// The target that traffic is routed to when a request matches the gateway route.
	Target GatewayRouteSpecGrpcRouteActionTarget `pulumi:"target"`
}

// GatewayRouteSpecGrpcRouteActionInput is an input type that accepts GatewayRouteSpecGrpcRouteActionArgs and GatewayRouteSpecGrpcRouteActionOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteActionInput` via:
//
//          GatewayRouteSpecGrpcRouteActionArgs{...}
type GatewayRouteSpecGrpcRouteActionInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteActionOutput() GatewayRouteSpecGrpcRouteActionOutput
	ToGatewayRouteSpecGrpcRouteActionOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteActionOutput
}

type GatewayRouteSpecGrpcRouteActionArgs struct {
	// The target that traffic is routed to when a request matches the gateway route.
	Target GatewayRouteSpecGrpcRouteActionTargetInput `pulumi:"target"`
}

func (GatewayRouteSpecGrpcRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (i GatewayRouteSpecGrpcRouteActionArgs) ToGatewayRouteSpecGrpcRouteActionOutput() GatewayRouteSpecGrpcRouteActionOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteActionArgs) ToGatewayRouteSpecGrpcRouteActionOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionOutput)
}

func (i GatewayRouteSpecGrpcRouteActionArgs) ToGatewayRouteSpecGrpcRouteActionPtrOutput() GatewayRouteSpecGrpcRouteActionPtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteActionArgs) ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionOutput).ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(ctx)
}

// GatewayRouteSpecGrpcRouteActionPtrInput is an input type that accepts GatewayRouteSpecGrpcRouteActionArgs, GatewayRouteSpecGrpcRouteActionPtr and GatewayRouteSpecGrpcRouteActionPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteActionPtrInput` via:
//
//          GatewayRouteSpecGrpcRouteActionArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecGrpcRouteActionPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteActionPtrOutput() GatewayRouteSpecGrpcRouteActionPtrOutput
	ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteActionPtrOutput
}

type gatewayRouteSpecGrpcRouteActionPtrType GatewayRouteSpecGrpcRouteActionArgs

func GatewayRouteSpecGrpcRouteActionPtr(v *GatewayRouteSpecGrpcRouteActionArgs) GatewayRouteSpecGrpcRouteActionPtrInput {
	return (*gatewayRouteSpecGrpcRouteActionPtrType)(v)
}

func (*gatewayRouteSpecGrpcRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (i *gatewayRouteSpecGrpcRouteActionPtrType) ToGatewayRouteSpecGrpcRouteActionPtrOutput() GatewayRouteSpecGrpcRouteActionPtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecGrpcRouteActionPtrType) ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionPtrOutput)
}

type GatewayRouteSpecGrpcRouteActionOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteActionOutput) ToGatewayRouteSpecGrpcRouteActionOutput() GatewayRouteSpecGrpcRouteActionOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionOutput) ToGatewayRouteSpecGrpcRouteActionOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionOutput) ToGatewayRouteSpecGrpcRouteActionPtrOutput() GatewayRouteSpecGrpcRouteActionPtrOutput {
	return o.ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecGrpcRouteActionOutput) ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecGrpcRouteAction) *GatewayRouteSpecGrpcRouteAction {
		return &v
	}).(GatewayRouteSpecGrpcRouteActionPtrOutput)
}

// The target that traffic is routed to when a request matches the gateway route.
func (o GatewayRouteSpecGrpcRouteActionOutput) Target() GatewayRouteSpecGrpcRouteActionTargetOutput {
	return o.ApplyT(func(v GatewayRouteSpecGrpcRouteAction) GatewayRouteSpecGrpcRouteActionTarget { return v.Target }).(GatewayRouteSpecGrpcRouteActionTargetOutput)
}

type GatewayRouteSpecGrpcRouteActionPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteActionPtrOutput) ToGatewayRouteSpecGrpcRouteActionPtrOutput() GatewayRouteSpecGrpcRouteActionPtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionPtrOutput) ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionPtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionPtrOutput) Elem() GatewayRouteSpecGrpcRouteActionOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteAction) GatewayRouteSpecGrpcRouteAction {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecGrpcRouteAction
		return ret
	}).(GatewayRouteSpecGrpcRouteActionOutput)
}

// The target that traffic is routed to when a request matches the gateway route.
func (o GatewayRouteSpecGrpcRouteActionPtrOutput) Target() GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteAction) *GatewayRouteSpecGrpcRouteActionTarget {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(GatewayRouteSpecGrpcRouteActionTargetPtrOutput)
}

type GatewayRouteSpecGrpcRouteActionTarget struct {
	// The virtual service gateway route target.
	VirtualService GatewayRouteSpecGrpcRouteActionTargetVirtualService `pulumi:"virtualService"`
}

// GatewayRouteSpecGrpcRouteActionTargetInput is an input type that accepts GatewayRouteSpecGrpcRouteActionTargetArgs and GatewayRouteSpecGrpcRouteActionTargetOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteActionTargetInput` via:
//
//          GatewayRouteSpecGrpcRouteActionTargetArgs{...}
type GatewayRouteSpecGrpcRouteActionTargetInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteActionTargetOutput() GatewayRouteSpecGrpcRouteActionTargetOutput
	ToGatewayRouteSpecGrpcRouteActionTargetOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteActionTargetOutput
}

type GatewayRouteSpecGrpcRouteActionTargetArgs struct {
	// The virtual service gateway route target.
	VirtualService GatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput `pulumi:"virtualService"`
}

func (GatewayRouteSpecGrpcRouteActionTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTarget)(nil)).Elem()
}

func (i GatewayRouteSpecGrpcRouteActionTargetArgs) ToGatewayRouteSpecGrpcRouteActionTargetOutput() GatewayRouteSpecGrpcRouteActionTargetOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionTargetOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteActionTargetArgs) ToGatewayRouteSpecGrpcRouteActionTargetOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionTargetOutput)
}

func (i GatewayRouteSpecGrpcRouteActionTargetArgs) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutput() GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteActionTargetArgs) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionTargetOutput).ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(ctx)
}

// GatewayRouteSpecGrpcRouteActionTargetPtrInput is an input type that accepts GatewayRouteSpecGrpcRouteActionTargetArgs, GatewayRouteSpecGrpcRouteActionTargetPtr and GatewayRouteSpecGrpcRouteActionTargetPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteActionTargetPtrInput` via:
//
//          GatewayRouteSpecGrpcRouteActionTargetArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecGrpcRouteActionTargetPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteActionTargetPtrOutput() GatewayRouteSpecGrpcRouteActionTargetPtrOutput
	ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteActionTargetPtrOutput
}

type gatewayRouteSpecGrpcRouteActionTargetPtrType GatewayRouteSpecGrpcRouteActionTargetArgs

func GatewayRouteSpecGrpcRouteActionTargetPtr(v *GatewayRouteSpecGrpcRouteActionTargetArgs) GatewayRouteSpecGrpcRouteActionTargetPtrInput {
	return (*gatewayRouteSpecGrpcRouteActionTargetPtrType)(v)
}

func (*gatewayRouteSpecGrpcRouteActionTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteActionTarget)(nil)).Elem()
}

func (i *gatewayRouteSpecGrpcRouteActionTargetPtrType) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutput() GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecGrpcRouteActionTargetPtrType) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionTargetPtrOutput)
}

type GatewayRouteSpecGrpcRouteActionTargetOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteActionTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTarget)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteActionTargetOutput) ToGatewayRouteSpecGrpcRouteActionTargetOutput() GatewayRouteSpecGrpcRouteActionTargetOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetOutput) ToGatewayRouteSpecGrpcRouteActionTargetOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetOutput) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutput() GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return o.ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecGrpcRouteActionTargetOutput) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecGrpcRouteActionTarget) *GatewayRouteSpecGrpcRouteActionTarget {
		return &v
	}).(GatewayRouteSpecGrpcRouteActionTargetPtrOutput)
}

// The virtual service gateway route target.
func (o GatewayRouteSpecGrpcRouteActionTargetOutput) VirtualService() GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return o.ApplyT(func(v GatewayRouteSpecGrpcRouteActionTarget) GatewayRouteSpecGrpcRouteActionTargetVirtualService {
		return v.VirtualService
	}).(GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput)
}

type GatewayRouteSpecGrpcRouteActionTargetPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteActionTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteActionTarget)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteActionTargetPtrOutput) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutput() GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetPtrOutput) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetPtrOutput) Elem() GatewayRouteSpecGrpcRouteActionTargetOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteActionTarget) GatewayRouteSpecGrpcRouteActionTarget {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecGrpcRouteActionTarget
		return ret
	}).(GatewayRouteSpecGrpcRouteActionTargetOutput)
}

// The virtual service gateway route target.
func (o GatewayRouteSpecGrpcRouteActionTargetPtrOutput) VirtualService() GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteActionTarget) *GatewayRouteSpecGrpcRouteActionTargetVirtualService {
		if v == nil {
			return nil
		}
		return &v.VirtualService
	}).(GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput)
}

type GatewayRouteSpecGrpcRouteActionTargetVirtualService struct {
	// The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
	VirtualServiceName string `pulumi:"virtualServiceName"`
}

// GatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput is an input type that accepts GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs and GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput` via:
//
//          GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs{...}
type GatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput
	ToGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput
}

type GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs struct {
	// The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
	VirtualServiceName pulumi.StringInput `pulumi:"virtualServiceName"`
}

func (GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTargetVirtualService)(nil)).Elem()
}

func (i GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput)
}

func (i GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput).ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(ctx)
}

// GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrInput is an input type that accepts GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs, GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtr and GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrInput` via:
//
//          GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput
	ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput
}

type gatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrType GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs

func GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtr(v *GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrInput {
	return (*gatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrType)(v)
}

func (*gatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteActionTargetVirtualService)(nil)).Elem()
}

func (i *gatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrType) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrType) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput)
}

type GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTargetVirtualService)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return o.ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecGrpcRouteActionTargetVirtualService) *GatewayRouteSpecGrpcRouteActionTargetVirtualService {
		return &v
	}).(GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput)
}

// The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) VirtualServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecGrpcRouteActionTargetVirtualService) string { return v.VirtualServiceName }).(pulumi.StringOutput)
}

type GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteActionTargetVirtualService)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput) Elem() GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteActionTargetVirtualService) GatewayRouteSpecGrpcRouteActionTargetVirtualService {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecGrpcRouteActionTargetVirtualService
		return ret
	}).(GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput)
}

// The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput) VirtualServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteActionTargetVirtualService) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualServiceName
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecGrpcRouteMatch struct {
	// The fully qualified domain name for the service to match from the request.
	ServiceName string `pulumi:"serviceName"`
}

// GatewayRouteSpecGrpcRouteMatchInput is an input type that accepts GatewayRouteSpecGrpcRouteMatchArgs and GatewayRouteSpecGrpcRouteMatchOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteMatchInput` via:
//
//          GatewayRouteSpecGrpcRouteMatchArgs{...}
type GatewayRouteSpecGrpcRouteMatchInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteMatchOutput() GatewayRouteSpecGrpcRouteMatchOutput
	ToGatewayRouteSpecGrpcRouteMatchOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteMatchOutput
}

type GatewayRouteSpecGrpcRouteMatchArgs struct {
	// The fully qualified domain name for the service to match from the request.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GatewayRouteSpecGrpcRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (i GatewayRouteSpecGrpcRouteMatchArgs) ToGatewayRouteSpecGrpcRouteMatchOutput() GatewayRouteSpecGrpcRouteMatchOutput {
	return i.ToGatewayRouteSpecGrpcRouteMatchOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteMatchArgs) ToGatewayRouteSpecGrpcRouteMatchOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteMatchOutput)
}

func (i GatewayRouteSpecGrpcRouteMatchArgs) ToGatewayRouteSpecGrpcRouteMatchPtrOutput() GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteMatchArgs) ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteMatchOutput).ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx)
}

// GatewayRouteSpecGrpcRouteMatchPtrInput is an input type that accepts GatewayRouteSpecGrpcRouteMatchArgs, GatewayRouteSpecGrpcRouteMatchPtr and GatewayRouteSpecGrpcRouteMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteMatchPtrInput` via:
//
//          GatewayRouteSpecGrpcRouteMatchArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecGrpcRouteMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteMatchPtrOutput() GatewayRouteSpecGrpcRouteMatchPtrOutput
	ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteMatchPtrOutput
}

type gatewayRouteSpecGrpcRouteMatchPtrType GatewayRouteSpecGrpcRouteMatchArgs

func GatewayRouteSpecGrpcRouteMatchPtr(v *GatewayRouteSpecGrpcRouteMatchArgs) GatewayRouteSpecGrpcRouteMatchPtrInput {
	return (*gatewayRouteSpecGrpcRouteMatchPtrType)(v)
}

func (*gatewayRouteSpecGrpcRouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (i *gatewayRouteSpecGrpcRouteMatchPtrType) ToGatewayRouteSpecGrpcRouteMatchPtrOutput() GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecGrpcRouteMatchPtrType) ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteMatchPtrOutput)
}

type GatewayRouteSpecGrpcRouteMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteMatchOutput) ToGatewayRouteSpecGrpcRouteMatchOutput() GatewayRouteSpecGrpcRouteMatchOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteMatchOutput) ToGatewayRouteSpecGrpcRouteMatchOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteMatchOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteMatchOutput) ToGatewayRouteSpecGrpcRouteMatchPtrOutput() GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return o.ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecGrpcRouteMatchOutput) ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecGrpcRouteMatch) *GatewayRouteSpecGrpcRouteMatch {
		return &v
	}).(GatewayRouteSpecGrpcRouteMatchPtrOutput)
}

// The fully qualified domain name for the service to match from the request.
func (o GatewayRouteSpecGrpcRouteMatchOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecGrpcRouteMatch) string { return v.ServiceName }).(pulumi.StringOutput)
}

type GatewayRouteSpecGrpcRouteMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteMatchPtrOutput) ToGatewayRouteSpecGrpcRouteMatchPtrOutput() GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteMatchPtrOutput) ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteMatchPtrOutput) Elem() GatewayRouteSpecGrpcRouteMatchOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteMatch) GatewayRouteSpecGrpcRouteMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecGrpcRouteMatch
		return ret
	}).(GatewayRouteSpecGrpcRouteMatchOutput)
}

// The fully qualified domain name for the service to match from the request.
func (o GatewayRouteSpecGrpcRouteMatchPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteMatch) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2Route struct {
	// The action to take if a match is determined.
	Action GatewayRouteSpecHttp2RouteAction `pulumi:"action"`
	// The criteria for determining a request match.
	Match GatewayRouteSpecHttp2RouteMatch `pulumi:"match"`
}

// GatewayRouteSpecHttp2RouteInput is an input type that accepts GatewayRouteSpecHttp2RouteArgs and GatewayRouteSpecHttp2RouteOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteInput` via:
//
//          GatewayRouteSpecHttp2RouteArgs{...}
type GatewayRouteSpecHttp2RouteInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteOutput() GatewayRouteSpecHttp2RouteOutput
	ToGatewayRouteSpecHttp2RouteOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteOutput
}

type GatewayRouteSpecHttp2RouteArgs struct {
	// The action to take if a match is determined.
	Action GatewayRouteSpecHttp2RouteActionInput `pulumi:"action"`
	// The criteria for determining a request match.
	Match GatewayRouteSpecHttp2RouteMatchInput `pulumi:"match"`
}

func (GatewayRouteSpecHttp2RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2Route)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteArgs) ToGatewayRouteSpecHttp2RouteOutput() GatewayRouteSpecHttp2RouteOutput {
	return i.ToGatewayRouteSpecHttp2RouteOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteArgs) ToGatewayRouteSpecHttp2RouteOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteOutput)
}

func (i GatewayRouteSpecHttp2RouteArgs) ToGatewayRouteSpecHttp2RoutePtrOutput() GatewayRouteSpecHttp2RoutePtrOutput {
	return i.ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteArgs) ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteOutput).ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RoutePtrInput is an input type that accepts GatewayRouteSpecHttp2RouteArgs, GatewayRouteSpecHttp2RoutePtr and GatewayRouteSpecHttp2RoutePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RoutePtrInput` via:
//
//          GatewayRouteSpecHttp2RouteArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecHttp2RoutePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RoutePtrOutput() GatewayRouteSpecHttp2RoutePtrOutput
	ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RoutePtrOutput
}

type gatewayRouteSpecHttp2RoutePtrType GatewayRouteSpecHttp2RouteArgs

func GatewayRouteSpecHttp2RoutePtr(v *GatewayRouteSpecHttp2RouteArgs) GatewayRouteSpecHttp2RoutePtrInput {
	return (*gatewayRouteSpecHttp2RoutePtrType)(v)
}

func (*gatewayRouteSpecHttp2RoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2Route)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RoutePtrType) ToGatewayRouteSpecHttp2RoutePtrOutput() GatewayRouteSpecHttp2RoutePtrOutput {
	return i.ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RoutePtrType) ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RoutePtrOutput)
}

type GatewayRouteSpecHttp2RouteOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2Route)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteOutput) ToGatewayRouteSpecHttp2RouteOutput() GatewayRouteSpecHttp2RouteOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteOutput) ToGatewayRouteSpecHttp2RouteOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteOutput) ToGatewayRouteSpecHttp2RoutePtrOutput() GatewayRouteSpecHttp2RoutePtrOutput {
	return o.ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteOutput) ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2Route) *GatewayRouteSpecHttp2Route {
		return &v
	}).(GatewayRouteSpecHttp2RoutePtrOutput)
}

// The action to take if a match is determined.
func (o GatewayRouteSpecHttp2RouteOutput) Action() GatewayRouteSpecHttp2RouteActionOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2Route) GatewayRouteSpecHttp2RouteAction { return v.Action }).(GatewayRouteSpecHttp2RouteActionOutput)
}

// The criteria for determining a request match.
func (o GatewayRouteSpecHttp2RouteOutput) Match() GatewayRouteSpecHttp2RouteMatchOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2Route) GatewayRouteSpecHttp2RouteMatch { return v.Match }).(GatewayRouteSpecHttp2RouteMatchOutput)
}

type GatewayRouteSpecHttp2RoutePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2Route)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RoutePtrOutput) ToGatewayRouteSpecHttp2RoutePtrOutput() GatewayRouteSpecHttp2RoutePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RoutePtrOutput) ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RoutePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RoutePtrOutput) Elem() GatewayRouteSpecHttp2RouteOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2Route) GatewayRouteSpecHttp2Route {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2Route
		return ret
	}).(GatewayRouteSpecHttp2RouteOutput)
}

// The action to take if a match is determined.
func (o GatewayRouteSpecHttp2RoutePtrOutput) Action() GatewayRouteSpecHttp2RouteActionPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2Route) *GatewayRouteSpecHttp2RouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(GatewayRouteSpecHttp2RouteActionPtrOutput)
}

// The criteria for determining a request match.
func (o GatewayRouteSpecHttp2RoutePtrOutput) Match() GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2Route) *GatewayRouteSpecHttp2RouteMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(GatewayRouteSpecHttp2RouteMatchPtrOutput)
}

type GatewayRouteSpecHttp2RouteAction struct {
	// The target that traffic is routed to when a request matches the gateway route.
	Target GatewayRouteSpecHttp2RouteActionTarget `pulumi:"target"`
}

// GatewayRouteSpecHttp2RouteActionInput is an input type that accepts GatewayRouteSpecHttp2RouteActionArgs and GatewayRouteSpecHttp2RouteActionOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionInput` via:
//
//          GatewayRouteSpecHttp2RouteActionArgs{...}
type GatewayRouteSpecHttp2RouteActionInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionOutput() GatewayRouteSpecHttp2RouteActionOutput
	ToGatewayRouteSpecHttp2RouteActionOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionOutput
}

type GatewayRouteSpecHttp2RouteActionArgs struct {
	// The target that traffic is routed to when a request matches the gateway route.
	Target GatewayRouteSpecHttp2RouteActionTargetInput `pulumi:"target"`
}

func (GatewayRouteSpecHttp2RouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteActionArgs) ToGatewayRouteSpecHttp2RouteActionOutput() GatewayRouteSpecHttp2RouteActionOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionArgs) ToGatewayRouteSpecHttp2RouteActionOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionOutput)
}

func (i GatewayRouteSpecHttp2RouteActionArgs) ToGatewayRouteSpecHttp2RouteActionPtrOutput() GatewayRouteSpecHttp2RouteActionPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionArgs) ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionOutput).ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteActionPtrInput is an input type that accepts GatewayRouteSpecHttp2RouteActionArgs, GatewayRouteSpecHttp2RouteActionPtr and GatewayRouteSpecHttp2RouteActionPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionPtrInput` via:
//
//          GatewayRouteSpecHttp2RouteActionArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecHttp2RouteActionPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionPtrOutput() GatewayRouteSpecHttp2RouteActionPtrOutput
	ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionPtrOutput
}

type gatewayRouteSpecHttp2RouteActionPtrType GatewayRouteSpecHttp2RouteActionArgs

func GatewayRouteSpecHttp2RouteActionPtr(v *GatewayRouteSpecHttp2RouteActionArgs) GatewayRouteSpecHttp2RouteActionPtrInput {
	return (*gatewayRouteSpecHttp2RouteActionPtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteActionPtrType) ToGatewayRouteSpecHttp2RouteActionPtrOutput() GatewayRouteSpecHttp2RouteActionPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteActionPtrType) ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionPtrOutput)
}

type GatewayRouteSpecHttp2RouteActionOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionOutput) ToGatewayRouteSpecHttp2RouteActionOutput() GatewayRouteSpecHttp2RouteActionOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionOutput) ToGatewayRouteSpecHttp2RouteActionOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionOutput) ToGatewayRouteSpecHttp2RouteActionPtrOutput() GatewayRouteSpecHttp2RouteActionPtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteActionOutput) ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteAction) *GatewayRouteSpecHttp2RouteAction {
		return &v
	}).(GatewayRouteSpecHttp2RouteActionPtrOutput)
}

// The target that traffic is routed to when a request matches the gateway route.
func (o GatewayRouteSpecHttp2RouteActionOutput) Target() GatewayRouteSpecHttp2RouteActionTargetOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteAction) GatewayRouteSpecHttp2RouteActionTarget { return v.Target }).(GatewayRouteSpecHttp2RouteActionTargetOutput)
}

type GatewayRouteSpecHttp2RouteActionPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionPtrOutput) ToGatewayRouteSpecHttp2RouteActionPtrOutput() GatewayRouteSpecHttp2RouteActionPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionPtrOutput) ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionPtrOutput) Elem() GatewayRouteSpecHttp2RouteActionOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteAction) GatewayRouteSpecHttp2RouteAction {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteAction
		return ret
	}).(GatewayRouteSpecHttp2RouteActionOutput)
}

// The target that traffic is routed to when a request matches the gateway route.
func (o GatewayRouteSpecHttp2RouteActionPtrOutput) Target() GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteAction) *GatewayRouteSpecHttp2RouteActionTarget {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(GatewayRouteSpecHttp2RouteActionTargetPtrOutput)
}

type GatewayRouteSpecHttp2RouteActionTarget struct {
	// The virtual service gateway route target.
	VirtualService GatewayRouteSpecHttp2RouteActionTargetVirtualService `pulumi:"virtualService"`
}

// GatewayRouteSpecHttp2RouteActionTargetInput is an input type that accepts GatewayRouteSpecHttp2RouteActionTargetArgs and GatewayRouteSpecHttp2RouteActionTargetOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionTargetInput` via:
//
//          GatewayRouteSpecHttp2RouteActionTargetArgs{...}
type GatewayRouteSpecHttp2RouteActionTargetInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionTargetOutput() GatewayRouteSpecHttp2RouteActionTargetOutput
	ToGatewayRouteSpecHttp2RouteActionTargetOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionTargetOutput
}

type GatewayRouteSpecHttp2RouteActionTargetArgs struct {
	// The virtual service gateway route target.
	VirtualService GatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput `pulumi:"virtualService"`
}

func (GatewayRouteSpecHttp2RouteActionTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTarget)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteActionTargetArgs) ToGatewayRouteSpecHttp2RouteActionTargetOutput() GatewayRouteSpecHttp2RouteActionTargetOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionTargetOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionTargetArgs) ToGatewayRouteSpecHttp2RouteActionTargetOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionTargetOutput)
}

func (i GatewayRouteSpecHttp2RouteActionTargetArgs) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutput() GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionTargetArgs) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionTargetOutput).ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteActionTargetPtrInput is an input type that accepts GatewayRouteSpecHttp2RouteActionTargetArgs, GatewayRouteSpecHttp2RouteActionTargetPtr and GatewayRouteSpecHttp2RouteActionTargetPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionTargetPtrInput` via:
//
//          GatewayRouteSpecHttp2RouteActionTargetArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecHttp2RouteActionTargetPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionTargetPtrOutput() GatewayRouteSpecHttp2RouteActionTargetPtrOutput
	ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionTargetPtrOutput
}

type gatewayRouteSpecHttp2RouteActionTargetPtrType GatewayRouteSpecHttp2RouteActionTargetArgs

func GatewayRouteSpecHttp2RouteActionTargetPtr(v *GatewayRouteSpecHttp2RouteActionTargetArgs) GatewayRouteSpecHttp2RouteActionTargetPtrInput {
	return (*gatewayRouteSpecHttp2RouteActionTargetPtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteActionTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionTarget)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteActionTargetPtrType) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutput() GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteActionTargetPtrType) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionTargetPtrOutput)
}

type GatewayRouteSpecHttp2RouteActionTargetOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTarget)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionTargetOutput) ToGatewayRouteSpecHttp2RouteActionTargetOutput() GatewayRouteSpecHttp2RouteActionTargetOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetOutput) ToGatewayRouteSpecHttp2RouteActionTargetOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetOutput) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutput() GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteActionTargetOutput) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteActionTarget) *GatewayRouteSpecHttp2RouteActionTarget {
		return &v
	}).(GatewayRouteSpecHttp2RouteActionTargetPtrOutput)
}

// The virtual service gateway route target.
func (o GatewayRouteSpecHttp2RouteActionTargetOutput) VirtualService() GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteActionTarget) GatewayRouteSpecHttp2RouteActionTargetVirtualService {
		return v.VirtualService
	}).(GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput)
}

type GatewayRouteSpecHttp2RouteActionTargetPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionTarget)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionTargetPtrOutput) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutput() GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetPtrOutput) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetPtrOutput) Elem() GatewayRouteSpecHttp2RouteActionTargetOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionTarget) GatewayRouteSpecHttp2RouteActionTarget {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteActionTarget
		return ret
	}).(GatewayRouteSpecHttp2RouteActionTargetOutput)
}

// The virtual service gateway route target.
func (o GatewayRouteSpecHttp2RouteActionTargetPtrOutput) VirtualService() GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionTarget) *GatewayRouteSpecHttp2RouteActionTargetVirtualService {
		if v == nil {
			return nil
		}
		return &v.VirtualService
	}).(GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput)
}

type GatewayRouteSpecHttp2RouteActionTargetVirtualService struct {
	// The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
	VirtualServiceName string `pulumi:"virtualServiceName"`
}

// GatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput is an input type that accepts GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs and GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput` via:
//
//          GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs{...}
type GatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput
	ToGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput
}

type GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs struct {
	// The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
	VirtualServiceName pulumi.StringInput `pulumi:"virtualServiceName"`
}

func (GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTargetVirtualService)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput)
}

func (i GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput).ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrInput is an input type that accepts GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs, GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtr and GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrInput` via:
//
//          GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput
	ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput
}

type gatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrType GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs

func GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtr(v *GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrInput {
	return (*gatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionTargetVirtualService)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrType) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrType) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput)
}

type GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTargetVirtualService)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteActionTargetVirtualService) *GatewayRouteSpecHttp2RouteActionTargetVirtualService {
		return &v
	}).(GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput)
}

// The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) VirtualServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteActionTargetVirtualService) string { return v.VirtualServiceName }).(pulumi.StringOutput)
}

type GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionTargetVirtualService)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput) Elem() GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionTargetVirtualService) GatewayRouteSpecHttp2RouteActionTargetVirtualService {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteActionTargetVirtualService
		return ret
	}).(GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput)
}

// The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput) VirtualServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionTargetVirtualService) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualServiceName
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatch struct {
	// Specifies the path to match requests with. This parameter must always start with `/`, which by itself matches all requests to the virtual service name.
	Prefix string `pulumi:"prefix"`
}

// GatewayRouteSpecHttp2RouteMatchInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchArgs and GatewayRouteSpecHttp2RouteMatchOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchInput` via:
//
//          GatewayRouteSpecHttp2RouteMatchArgs{...}
type GatewayRouteSpecHttp2RouteMatchInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchOutput() GatewayRouteSpecHttp2RouteMatchOutput
	ToGatewayRouteSpecHttp2RouteMatchOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchOutput
}

type GatewayRouteSpecHttp2RouteMatchArgs struct {
	// Specifies the path to match requests with. This parameter must always start with `/`, which by itself matches all requests to the virtual service name.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GatewayRouteSpecHttp2RouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteMatchArgs) ToGatewayRouteSpecHttp2RouteMatchOutput() GatewayRouteSpecHttp2RouteMatchOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchArgs) ToGatewayRouteSpecHttp2RouteMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchOutput)
}

func (i GatewayRouteSpecHttp2RouteMatchArgs) ToGatewayRouteSpecHttp2RouteMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchArgs) ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchOutput).ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteMatchPtrInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchArgs, GatewayRouteSpecHttp2RouteMatchPtr and GatewayRouteSpecHttp2RouteMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchPtrInput` via:
//
//          GatewayRouteSpecHttp2RouteMatchArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecHttp2RouteMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchPtrOutput
	ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchPtrOutput
}

type gatewayRouteSpecHttp2RouteMatchPtrType GatewayRouteSpecHttp2RouteMatchArgs

func GatewayRouteSpecHttp2RouteMatchPtr(v *GatewayRouteSpecHttp2RouteMatchArgs) GatewayRouteSpecHttp2RouteMatchPtrInput {
	return (*gatewayRouteSpecHttp2RouteMatchPtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteMatchPtrType) ToGatewayRouteSpecHttp2RouteMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteMatchPtrType) ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchOutput) ToGatewayRouteSpecHttp2RouteMatchOutput() GatewayRouteSpecHttp2RouteMatchOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchOutput) ToGatewayRouteSpecHttp2RouteMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchOutput) ToGatewayRouteSpecHttp2RouteMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteMatchOutput) ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteMatch) *GatewayRouteSpecHttp2RouteMatch {
		return &v
	}).(GatewayRouteSpecHttp2RouteMatchPtrOutput)
}

// Specifies the path to match requests with. This parameter must always start with `/`, which by itself matches all requests to the virtual service name.
func (o GatewayRouteSpecHttp2RouteMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

type GatewayRouteSpecHttp2RouteMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchPtrOutput) ToGatewayRouteSpecHttp2RouteMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchPtrOutput) ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchPtrOutput) Elem() GatewayRouteSpecHttp2RouteMatchOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatch) GatewayRouteSpecHttp2RouteMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteMatch
		return ret
	}).(GatewayRouteSpecHttp2RouteMatchOutput)
}

// Specifies the path to match requests with. This parameter must always start with `/`, which by itself matches all requests to the virtual service name.
func (o GatewayRouteSpecHttp2RouteMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatch) *string {
		if v == nil {
			return nil
		}
		return &v.Prefix
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRoute struct {
	// The action to take if a match is determined.
	Action GatewayRouteSpecHttpRouteAction `pulumi:"action"`
	// The criteria for determining a request match.
	Match GatewayRouteSpecHttpRouteMatch `pulumi:"match"`
}

// GatewayRouteSpecHttpRouteInput is an input type that accepts GatewayRouteSpecHttpRouteArgs and GatewayRouteSpecHttpRouteOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteInput` via:
//
//          GatewayRouteSpecHttpRouteArgs{...}
type GatewayRouteSpecHttpRouteInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteOutput() GatewayRouteSpecHttpRouteOutput
	ToGatewayRouteSpecHttpRouteOutputWithContext(context.Context) GatewayRouteSpecHttpRouteOutput
}

type GatewayRouteSpecHttpRouteArgs struct {
	// The action to take if a match is determined.
	Action GatewayRouteSpecHttpRouteActionInput `pulumi:"action"`
	// The criteria for determining a request match.
	Match GatewayRouteSpecHttpRouteMatchInput `pulumi:"match"`
}

func (GatewayRouteSpecHttpRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRoute)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteArgs) ToGatewayRouteSpecHttpRouteOutput() GatewayRouteSpecHttpRouteOutput {
	return i.ToGatewayRouteSpecHttpRouteOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteArgs) ToGatewayRouteSpecHttpRouteOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteOutput)
}

func (i GatewayRouteSpecHttpRouteArgs) ToGatewayRouteSpecHttpRoutePtrOutput() GatewayRouteSpecHttpRoutePtrOutput {
	return i.ToGatewayRouteSpecHttpRoutePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteArgs) ToGatewayRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteOutput).ToGatewayRouteSpecHttpRoutePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRoutePtrInput is an input type that accepts GatewayRouteSpecHttpRouteArgs, GatewayRouteSpecHttpRoutePtr and GatewayRouteSpecHttpRoutePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRoutePtrInput` via:
//
//          GatewayRouteSpecHttpRouteArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecHttpRoutePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRoutePtrOutput() GatewayRouteSpecHttpRoutePtrOutput
	ToGatewayRouteSpecHttpRoutePtrOutputWithContext(context.Context) GatewayRouteSpecHttpRoutePtrOutput
}

type gatewayRouteSpecHttpRoutePtrType GatewayRouteSpecHttpRouteArgs

func GatewayRouteSpecHttpRoutePtr(v *GatewayRouteSpecHttpRouteArgs) GatewayRouteSpecHttpRoutePtrInput {
	return (*gatewayRouteSpecHttpRoutePtrType)(v)
}

func (*gatewayRouteSpecHttpRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRoute)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRoutePtrType) ToGatewayRouteSpecHttpRoutePtrOutput() GatewayRouteSpecHttpRoutePtrOutput {
	return i.ToGatewayRouteSpecHttpRoutePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRoutePtrType) ToGatewayRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRoutePtrOutput)
}

type GatewayRouteSpecHttpRouteOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRoute)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteOutput) ToGatewayRouteSpecHttpRouteOutput() GatewayRouteSpecHttpRouteOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteOutput) ToGatewayRouteSpecHttpRouteOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteOutput) ToGatewayRouteSpecHttpRoutePtrOutput() GatewayRouteSpecHttpRoutePtrOutput {
	return o.ToGatewayRouteSpecHttpRoutePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteOutput) ToGatewayRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRoute) *GatewayRouteSpecHttpRoute {
		return &v
	}).(GatewayRouteSpecHttpRoutePtrOutput)
}

// The action to take if a match is determined.
func (o GatewayRouteSpecHttpRouteOutput) Action() GatewayRouteSpecHttpRouteActionOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRoute) GatewayRouteSpecHttpRouteAction { return v.Action }).(GatewayRouteSpecHttpRouteActionOutput)
}

// The criteria for determining a request match.
func (o GatewayRouteSpecHttpRouteOutput) Match() GatewayRouteSpecHttpRouteMatchOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRoute) GatewayRouteSpecHttpRouteMatch { return v.Match }).(GatewayRouteSpecHttpRouteMatchOutput)
}

type GatewayRouteSpecHttpRoutePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRoute)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRoutePtrOutput) ToGatewayRouteSpecHttpRoutePtrOutput() GatewayRouteSpecHttpRoutePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRoutePtrOutput) ToGatewayRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRoutePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRoutePtrOutput) Elem() GatewayRouteSpecHttpRouteOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRoute) GatewayRouteSpecHttpRoute {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRoute
		return ret
	}).(GatewayRouteSpecHttpRouteOutput)
}

// The action to take if a match is determined.
func (o GatewayRouteSpecHttpRoutePtrOutput) Action() GatewayRouteSpecHttpRouteActionPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRoute) *GatewayRouteSpecHttpRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(GatewayRouteSpecHttpRouteActionPtrOutput)
}

// The criteria for determining a request match.
func (o GatewayRouteSpecHttpRoutePtrOutput) Match() GatewayRouteSpecHttpRouteMatchPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRoute) *GatewayRouteSpecHttpRouteMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(GatewayRouteSpecHttpRouteMatchPtrOutput)
}

type GatewayRouteSpecHttpRouteAction struct {
	// The target that traffic is routed to when a request matches the gateway route.
	Target GatewayRouteSpecHttpRouteActionTarget `pulumi:"target"`
}

// GatewayRouteSpecHttpRouteActionInput is an input type that accepts GatewayRouteSpecHttpRouteActionArgs and GatewayRouteSpecHttpRouteActionOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionInput` via:
//
//          GatewayRouteSpecHttpRouteActionArgs{...}
type GatewayRouteSpecHttpRouteActionInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionOutput() GatewayRouteSpecHttpRouteActionOutput
	ToGatewayRouteSpecHttpRouteActionOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionOutput
}

type GatewayRouteSpecHttpRouteActionArgs struct {
	// The target that traffic is routed to when a request matches the gateway route.
	Target GatewayRouteSpecHttpRouteActionTargetInput `pulumi:"target"`
}

func (GatewayRouteSpecHttpRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteAction)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteActionArgs) ToGatewayRouteSpecHttpRouteActionOutput() GatewayRouteSpecHttpRouteActionOutput {
	return i.ToGatewayRouteSpecHttpRouteActionOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionArgs) ToGatewayRouteSpecHttpRouteActionOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionOutput)
}

func (i GatewayRouteSpecHttpRouteActionArgs) ToGatewayRouteSpecHttpRouteActionPtrOutput() GatewayRouteSpecHttpRouteActionPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionArgs) ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionOutput).ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteActionPtrInput is an input type that accepts GatewayRouteSpecHttpRouteActionArgs, GatewayRouteSpecHttpRouteActionPtr and GatewayRouteSpecHttpRouteActionPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionPtrInput` via:
//
//          GatewayRouteSpecHttpRouteActionArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecHttpRouteActionPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionPtrOutput() GatewayRouteSpecHttpRouteActionPtrOutput
	ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionPtrOutput
}

type gatewayRouteSpecHttpRouteActionPtrType GatewayRouteSpecHttpRouteActionArgs

func GatewayRouteSpecHttpRouteActionPtr(v *GatewayRouteSpecHttpRouteActionArgs) GatewayRouteSpecHttpRouteActionPtrInput {
	return (*gatewayRouteSpecHttpRouteActionPtrType)(v)
}

func (*gatewayRouteSpecHttpRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteAction)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteActionPtrType) ToGatewayRouteSpecHttpRouteActionPtrOutput() GatewayRouteSpecHttpRouteActionPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteActionPtrType) ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionPtrOutput)
}

type GatewayRouteSpecHttpRouteActionOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteAction)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionOutput) ToGatewayRouteSpecHttpRouteActionOutput() GatewayRouteSpecHttpRouteActionOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionOutput) ToGatewayRouteSpecHttpRouteActionOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionOutput) ToGatewayRouteSpecHttpRouteActionPtrOutput() GatewayRouteSpecHttpRouteActionPtrOutput {
	return o.ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteActionOutput) ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteAction) *GatewayRouteSpecHttpRouteAction {
		return &v
	}).(GatewayRouteSpecHttpRouteActionPtrOutput)
}

// The target that traffic is routed to when a request matches the gateway route.
func (o GatewayRouteSpecHttpRouteActionOutput) Target() GatewayRouteSpecHttpRouteActionTargetOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteAction) GatewayRouteSpecHttpRouteActionTarget { return v.Target }).(GatewayRouteSpecHttpRouteActionTargetOutput)
}

type GatewayRouteSpecHttpRouteActionPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteAction)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionPtrOutput) ToGatewayRouteSpecHttpRouteActionPtrOutput() GatewayRouteSpecHttpRouteActionPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionPtrOutput) ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionPtrOutput) Elem() GatewayRouteSpecHttpRouteActionOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteAction) GatewayRouteSpecHttpRouteAction {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteAction
		return ret
	}).(GatewayRouteSpecHttpRouteActionOutput)
}

// The target that traffic is routed to when a request matches the gateway route.
func (o GatewayRouteSpecHttpRouteActionPtrOutput) Target() GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteAction) *GatewayRouteSpecHttpRouteActionTarget {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(GatewayRouteSpecHttpRouteActionTargetPtrOutput)
}

type GatewayRouteSpecHttpRouteActionTarget struct {
	// The virtual service gateway route target.
	VirtualService GatewayRouteSpecHttpRouteActionTargetVirtualService `pulumi:"virtualService"`
}

// GatewayRouteSpecHttpRouteActionTargetInput is an input type that accepts GatewayRouteSpecHttpRouteActionTargetArgs and GatewayRouteSpecHttpRouteActionTargetOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionTargetInput` via:
//
//          GatewayRouteSpecHttpRouteActionTargetArgs{...}
type GatewayRouteSpecHttpRouteActionTargetInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionTargetOutput() GatewayRouteSpecHttpRouteActionTargetOutput
	ToGatewayRouteSpecHttpRouteActionTargetOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionTargetOutput
}

type GatewayRouteSpecHttpRouteActionTargetArgs struct {
	// The virtual service gateway route target.
	VirtualService GatewayRouteSpecHttpRouteActionTargetVirtualServiceInput `pulumi:"virtualService"`
}

func (GatewayRouteSpecHttpRouteActionTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTarget)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteActionTargetArgs) ToGatewayRouteSpecHttpRouteActionTargetOutput() GatewayRouteSpecHttpRouteActionTargetOutput {
	return i.ToGatewayRouteSpecHttpRouteActionTargetOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionTargetArgs) ToGatewayRouteSpecHttpRouteActionTargetOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionTargetOutput)
}

func (i GatewayRouteSpecHttpRouteActionTargetArgs) ToGatewayRouteSpecHttpRouteActionTargetPtrOutput() GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionTargetArgs) ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionTargetOutput).ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteActionTargetPtrInput is an input type that accepts GatewayRouteSpecHttpRouteActionTargetArgs, GatewayRouteSpecHttpRouteActionTargetPtr and GatewayRouteSpecHttpRouteActionTargetPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionTargetPtrInput` via:
//
//          GatewayRouteSpecHttpRouteActionTargetArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecHttpRouteActionTargetPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionTargetPtrOutput() GatewayRouteSpecHttpRouteActionTargetPtrOutput
	ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionTargetPtrOutput
}

type gatewayRouteSpecHttpRouteActionTargetPtrType GatewayRouteSpecHttpRouteActionTargetArgs

func GatewayRouteSpecHttpRouteActionTargetPtr(v *GatewayRouteSpecHttpRouteActionTargetArgs) GatewayRouteSpecHttpRouteActionTargetPtrInput {
	return (*gatewayRouteSpecHttpRouteActionTargetPtrType)(v)
}

func (*gatewayRouteSpecHttpRouteActionTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionTarget)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteActionTargetPtrType) ToGatewayRouteSpecHttpRouteActionTargetPtrOutput() GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteActionTargetPtrType) ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionTargetPtrOutput)
}

type GatewayRouteSpecHttpRouteActionTargetOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTarget)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionTargetOutput) ToGatewayRouteSpecHttpRouteActionTargetOutput() GatewayRouteSpecHttpRouteActionTargetOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetOutput) ToGatewayRouteSpecHttpRouteActionTargetOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetOutput) ToGatewayRouteSpecHttpRouteActionTargetPtrOutput() GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return o.ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteActionTargetOutput) ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteActionTarget) *GatewayRouteSpecHttpRouteActionTarget {
		return &v
	}).(GatewayRouteSpecHttpRouteActionTargetPtrOutput)
}

// The virtual service gateway route target.
func (o GatewayRouteSpecHttpRouteActionTargetOutput) VirtualService() GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteActionTarget) GatewayRouteSpecHttpRouteActionTargetVirtualService {
		return v.VirtualService
	}).(GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput)
}

type GatewayRouteSpecHttpRouteActionTargetPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionTarget)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionTargetPtrOutput) ToGatewayRouteSpecHttpRouteActionTargetPtrOutput() GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetPtrOutput) ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetPtrOutput) Elem() GatewayRouteSpecHttpRouteActionTargetOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionTarget) GatewayRouteSpecHttpRouteActionTarget {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteActionTarget
		return ret
	}).(GatewayRouteSpecHttpRouteActionTargetOutput)
}

// The virtual service gateway route target.
func (o GatewayRouteSpecHttpRouteActionTargetPtrOutput) VirtualService() GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionTarget) *GatewayRouteSpecHttpRouteActionTargetVirtualService {
		if v == nil {
			return nil
		}
		return &v.VirtualService
	}).(GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput)
}

type GatewayRouteSpecHttpRouteActionTargetVirtualService struct {
	// The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
	VirtualServiceName string `pulumi:"virtualServiceName"`
}

// GatewayRouteSpecHttpRouteActionTargetVirtualServiceInput is an input type that accepts GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs and GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionTargetVirtualServiceInput` via:
//
//          GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs{...}
type GatewayRouteSpecHttpRouteActionTargetVirtualServiceInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput
	ToGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput
}

type GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs struct {
	// The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
	VirtualServiceName pulumi.StringInput `pulumi:"virtualServiceName"`
}

func (GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTargetVirtualService)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return i.ToGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput)
}

func (i GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput).ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrInput is an input type that accepts GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs, GatewayRouteSpecHttpRouteActionTargetVirtualServicePtr and GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrInput` via:
//
//          GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput
	ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput
}

type gatewayRouteSpecHttpRouteActionTargetVirtualServicePtrType GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs

func GatewayRouteSpecHttpRouteActionTargetVirtualServicePtr(v *GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrInput {
	return (*gatewayRouteSpecHttpRouteActionTargetVirtualServicePtrType)(v)
}

func (*gatewayRouteSpecHttpRouteActionTargetVirtualServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionTargetVirtualService)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteActionTargetVirtualServicePtrType) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteActionTargetVirtualServicePtrType) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput)
}

type GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTargetVirtualService)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return o.ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteActionTargetVirtualService) *GatewayRouteSpecHttpRouteActionTargetVirtualService {
		return &v
	}).(GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput)
}

// The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
func (o GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) VirtualServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteActionTargetVirtualService) string { return v.VirtualServiceName }).(pulumi.StringOutput)
}

type GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionTargetVirtualService)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput) Elem() GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionTargetVirtualService) GatewayRouteSpecHttpRouteActionTargetVirtualService {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteActionTargetVirtualService
		return ret
	}).(GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput)
}

// The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
func (o GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput) VirtualServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionTargetVirtualService) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualServiceName
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRouteMatch struct {
	// Specifies the path to match requests with. This parameter must always start with `/`, which by itself matches all requests to the virtual service name.
	Prefix string `pulumi:"prefix"`
}

// GatewayRouteSpecHttpRouteMatchInput is an input type that accepts GatewayRouteSpecHttpRouteMatchArgs and GatewayRouteSpecHttpRouteMatchOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchInput` via:
//
//          GatewayRouteSpecHttpRouteMatchArgs{...}
type GatewayRouteSpecHttpRouteMatchInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchOutput() GatewayRouteSpecHttpRouteMatchOutput
	ToGatewayRouteSpecHttpRouteMatchOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchOutput
}

type GatewayRouteSpecHttpRouteMatchArgs struct {
	// Specifies the path to match requests with. This parameter must always start with `/`, which by itself matches all requests to the virtual service name.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GatewayRouteSpecHttpRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteMatchArgs) ToGatewayRouteSpecHttpRouteMatchOutput() GatewayRouteSpecHttpRouteMatchOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchArgs) ToGatewayRouteSpecHttpRouteMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchOutput)
}

func (i GatewayRouteSpecHttpRouteMatchArgs) ToGatewayRouteSpecHttpRouteMatchPtrOutput() GatewayRouteSpecHttpRouteMatchPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchArgs) ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchOutput).ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteMatchPtrInput is an input type that accepts GatewayRouteSpecHttpRouteMatchArgs, GatewayRouteSpecHttpRouteMatchPtr and GatewayRouteSpecHttpRouteMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchPtrInput` via:
//
//          GatewayRouteSpecHttpRouteMatchArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecHttpRouteMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchPtrOutput() GatewayRouteSpecHttpRouteMatchPtrOutput
	ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchPtrOutput
}

type gatewayRouteSpecHttpRouteMatchPtrType GatewayRouteSpecHttpRouteMatchArgs

func GatewayRouteSpecHttpRouteMatchPtr(v *GatewayRouteSpecHttpRouteMatchArgs) GatewayRouteSpecHttpRouteMatchPtrInput {
	return (*gatewayRouteSpecHttpRouteMatchPtrType)(v)
}

func (*gatewayRouteSpecHttpRouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteMatchPtrType) ToGatewayRouteSpecHttpRouteMatchPtrOutput() GatewayRouteSpecHttpRouteMatchPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteMatchPtrType) ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchPtrOutput)
}

type GatewayRouteSpecHttpRouteMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchOutput) ToGatewayRouteSpecHttpRouteMatchOutput() GatewayRouteSpecHttpRouteMatchOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchOutput) ToGatewayRouteSpecHttpRouteMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchOutput) ToGatewayRouteSpecHttpRouteMatchPtrOutput() GatewayRouteSpecHttpRouteMatchPtrOutput {
	return o.ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteMatchOutput) ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteMatch) *GatewayRouteSpecHttpRouteMatch {
		return &v
	}).(GatewayRouteSpecHttpRouteMatchPtrOutput)
}

// Specifies the path to match requests with. This parameter must always start with `/`, which by itself matches all requests to the virtual service name.
func (o GatewayRouteSpecHttpRouteMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

type GatewayRouteSpecHttpRouteMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchPtrOutput) ToGatewayRouteSpecHttpRouteMatchPtrOutput() GatewayRouteSpecHttpRouteMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchPtrOutput) ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchPtrOutput) Elem() GatewayRouteSpecHttpRouteMatchOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatch) GatewayRouteSpecHttpRouteMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteMatch
		return ret
	}).(GatewayRouteSpecHttpRouteMatchOutput)
}

// Specifies the path to match requests with. This parameter must always start with `/`, which by itself matches all requests to the virtual service name.
func (o GatewayRouteSpecHttpRouteMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatch) *string {
		if v == nil {
			return nil
		}
		return &v.Prefix
	}).(pulumi.StringPtrOutput)
}

type MeshSpec struct {
	// The egress filter rules for the service mesh.
	EgressFilter *MeshSpecEgressFilter `pulumi:"egressFilter"`
}

// MeshSpecInput is an input type that accepts MeshSpecArgs and MeshSpecOutput values.
// You can construct a concrete instance of `MeshSpecInput` via:
//
//          MeshSpecArgs{...}
type MeshSpecInput interface {
	pulumi.Input

	ToMeshSpecOutput() MeshSpecOutput
	ToMeshSpecOutputWithContext(context.Context) MeshSpecOutput
}

type MeshSpecArgs struct {
	// The egress filter rules for the service mesh.
	EgressFilter MeshSpecEgressFilterPtrInput `pulumi:"egressFilter"`
}

func (MeshSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MeshSpec)(nil)).Elem()
}

func (i MeshSpecArgs) ToMeshSpecOutput() MeshSpecOutput {
	return i.ToMeshSpecOutputWithContext(context.Background())
}

func (i MeshSpecArgs) ToMeshSpecOutputWithContext(ctx context.Context) MeshSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecOutput)
}

func (i MeshSpecArgs) ToMeshSpecPtrOutput() MeshSpecPtrOutput {
	return i.ToMeshSpecPtrOutputWithContext(context.Background())
}

func (i MeshSpecArgs) ToMeshSpecPtrOutputWithContext(ctx context.Context) MeshSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecOutput).ToMeshSpecPtrOutputWithContext(ctx)
}

// MeshSpecPtrInput is an input type that accepts MeshSpecArgs, MeshSpecPtr and MeshSpecPtrOutput values.
// You can construct a concrete instance of `MeshSpecPtrInput` via:
//
//          MeshSpecArgs{...}
//
//  or:
//
//          nil
type MeshSpecPtrInput interface {
	pulumi.Input

	ToMeshSpecPtrOutput() MeshSpecPtrOutput
	ToMeshSpecPtrOutputWithContext(context.Context) MeshSpecPtrOutput
}

type meshSpecPtrType MeshSpecArgs

func MeshSpecPtr(v *MeshSpecArgs) MeshSpecPtrInput {
	return (*meshSpecPtrType)(v)
}

func (*meshSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MeshSpec)(nil)).Elem()
}

func (i *meshSpecPtrType) ToMeshSpecPtrOutput() MeshSpecPtrOutput {
	return i.ToMeshSpecPtrOutputWithContext(context.Background())
}

func (i *meshSpecPtrType) ToMeshSpecPtrOutputWithContext(ctx context.Context) MeshSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecPtrOutput)
}

type MeshSpecOutput struct{ *pulumi.OutputState }

func (MeshSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MeshSpec)(nil)).Elem()
}

func (o MeshSpecOutput) ToMeshSpecOutput() MeshSpecOutput {
	return o
}

func (o MeshSpecOutput) ToMeshSpecOutputWithContext(ctx context.Context) MeshSpecOutput {
	return o
}

func (o MeshSpecOutput) ToMeshSpecPtrOutput() MeshSpecPtrOutput {
	return o.ToMeshSpecPtrOutputWithContext(context.Background())
}

func (o MeshSpecOutput) ToMeshSpecPtrOutputWithContext(ctx context.Context) MeshSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MeshSpec) *MeshSpec {
		return &v
	}).(MeshSpecPtrOutput)
}

// The egress filter rules for the service mesh.
func (o MeshSpecOutput) EgressFilter() MeshSpecEgressFilterPtrOutput {
	return o.ApplyT(func(v MeshSpec) *MeshSpecEgressFilter { return v.EgressFilter }).(MeshSpecEgressFilterPtrOutput)
}

type MeshSpecPtrOutput struct{ *pulumi.OutputState }

func (MeshSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MeshSpec)(nil)).Elem()
}

func (o MeshSpecPtrOutput) ToMeshSpecPtrOutput() MeshSpecPtrOutput {
	return o
}

func (o MeshSpecPtrOutput) ToMeshSpecPtrOutputWithContext(ctx context.Context) MeshSpecPtrOutput {
	return o
}

func (o MeshSpecPtrOutput) Elem() MeshSpecOutput {
	return o.ApplyT(func(v *MeshSpec) MeshSpec {
		if v != nil {
			return *v
		}
		var ret MeshSpec
		return ret
	}).(MeshSpecOutput)
}

// The egress filter rules for the service mesh.
func (o MeshSpecPtrOutput) EgressFilter() MeshSpecEgressFilterPtrOutput {
	return o.ApplyT(func(v *MeshSpec) *MeshSpecEgressFilter {
		if v == nil {
			return nil
		}
		return v.EgressFilter
	}).(MeshSpecEgressFilterPtrOutput)
}

type MeshSpecEgressFilter struct {
	// The egress filter type. By default, the type is `DROP_ALL`.
	// Valid values are `ALLOW_ALL` and `DROP_ALL`.
	Type *string `pulumi:"type"`
}

// MeshSpecEgressFilterInput is an input type that accepts MeshSpecEgressFilterArgs and MeshSpecEgressFilterOutput values.
// You can construct a concrete instance of `MeshSpecEgressFilterInput` via:
//
//          MeshSpecEgressFilterArgs{...}
type MeshSpecEgressFilterInput interface {
	pulumi.Input

	ToMeshSpecEgressFilterOutput() MeshSpecEgressFilterOutput
	ToMeshSpecEgressFilterOutputWithContext(context.Context) MeshSpecEgressFilterOutput
}

type MeshSpecEgressFilterArgs struct {
	// The egress filter type. By default, the type is `DROP_ALL`.
	// Valid values are `ALLOW_ALL` and `DROP_ALL`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (MeshSpecEgressFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MeshSpecEgressFilter)(nil)).Elem()
}

func (i MeshSpecEgressFilterArgs) ToMeshSpecEgressFilterOutput() MeshSpecEgressFilterOutput {
	return i.ToMeshSpecEgressFilterOutputWithContext(context.Background())
}

func (i MeshSpecEgressFilterArgs) ToMeshSpecEgressFilterOutputWithContext(ctx context.Context) MeshSpecEgressFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecEgressFilterOutput)
}

func (i MeshSpecEgressFilterArgs) ToMeshSpecEgressFilterPtrOutput() MeshSpecEgressFilterPtrOutput {
	return i.ToMeshSpecEgressFilterPtrOutputWithContext(context.Background())
}

func (i MeshSpecEgressFilterArgs) ToMeshSpecEgressFilterPtrOutputWithContext(ctx context.Context) MeshSpecEgressFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecEgressFilterOutput).ToMeshSpecEgressFilterPtrOutputWithContext(ctx)
}

// MeshSpecEgressFilterPtrInput is an input type that accepts MeshSpecEgressFilterArgs, MeshSpecEgressFilterPtr and MeshSpecEgressFilterPtrOutput values.
// You can construct a concrete instance of `MeshSpecEgressFilterPtrInput` via:
//
//          MeshSpecEgressFilterArgs{...}
//
//  or:
//
//          nil
type MeshSpecEgressFilterPtrInput interface {
	pulumi.Input

	ToMeshSpecEgressFilterPtrOutput() MeshSpecEgressFilterPtrOutput
	ToMeshSpecEgressFilterPtrOutputWithContext(context.Context) MeshSpecEgressFilterPtrOutput
}

type meshSpecEgressFilterPtrType MeshSpecEgressFilterArgs

func MeshSpecEgressFilterPtr(v *MeshSpecEgressFilterArgs) MeshSpecEgressFilterPtrInput {
	return (*meshSpecEgressFilterPtrType)(v)
}

func (*meshSpecEgressFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MeshSpecEgressFilter)(nil)).Elem()
}

func (i *meshSpecEgressFilterPtrType) ToMeshSpecEgressFilterPtrOutput() MeshSpecEgressFilterPtrOutput {
	return i.ToMeshSpecEgressFilterPtrOutputWithContext(context.Background())
}

func (i *meshSpecEgressFilterPtrType) ToMeshSpecEgressFilterPtrOutputWithContext(ctx context.Context) MeshSpecEgressFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecEgressFilterPtrOutput)
}

type MeshSpecEgressFilterOutput struct{ *pulumi.OutputState }

func (MeshSpecEgressFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MeshSpecEgressFilter)(nil)).Elem()
}

func (o MeshSpecEgressFilterOutput) ToMeshSpecEgressFilterOutput() MeshSpecEgressFilterOutput {
	return o
}

func (o MeshSpecEgressFilterOutput) ToMeshSpecEgressFilterOutputWithContext(ctx context.Context) MeshSpecEgressFilterOutput {
	return o
}

func (o MeshSpecEgressFilterOutput) ToMeshSpecEgressFilterPtrOutput() MeshSpecEgressFilterPtrOutput {
	return o.ToMeshSpecEgressFilterPtrOutputWithContext(context.Background())
}

func (o MeshSpecEgressFilterOutput) ToMeshSpecEgressFilterPtrOutputWithContext(ctx context.Context) MeshSpecEgressFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MeshSpecEgressFilter) *MeshSpecEgressFilter {
		return &v
	}).(MeshSpecEgressFilterPtrOutput)
}

// The egress filter type. By default, the type is `DROP_ALL`.
// Valid values are `ALLOW_ALL` and `DROP_ALL`.
func (o MeshSpecEgressFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MeshSpecEgressFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type MeshSpecEgressFilterPtrOutput struct{ *pulumi.OutputState }

func (MeshSpecEgressFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MeshSpecEgressFilter)(nil)).Elem()
}

func (o MeshSpecEgressFilterPtrOutput) ToMeshSpecEgressFilterPtrOutput() MeshSpecEgressFilterPtrOutput {
	return o
}

func (o MeshSpecEgressFilterPtrOutput) ToMeshSpecEgressFilterPtrOutputWithContext(ctx context.Context) MeshSpecEgressFilterPtrOutput {
	return o
}

func (o MeshSpecEgressFilterPtrOutput) Elem() MeshSpecEgressFilterOutput {
	return o.ApplyT(func(v *MeshSpecEgressFilter) MeshSpecEgressFilter {
		if v != nil {
			return *v
		}
		var ret MeshSpecEgressFilter
		return ret
	}).(MeshSpecEgressFilterOutput)
}

// The egress filter type. By default, the type is `DROP_ALL`.
// Valid values are `ALLOW_ALL` and `DROP_ALL`.
func (o MeshSpecEgressFilterPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MeshSpecEgressFilter) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type RouteSpec struct {
	// The gRPC routing information for the route.
	GrpcRoute *RouteSpecGrpcRoute `pulumi:"grpcRoute"`
	// The HTTP/2 routing information for the route.
	Http2Route *RouteSpecHttp2Route `pulumi:"http2Route"`
	// The HTTP routing information for the route.
	HttpRoute *RouteSpecHttpRoute `pulumi:"httpRoute"`
	// The priority for the route, between `0` and `1000`.
	// Routes are matched based on the specified value, where `0` is the highest priority.
	Priority *int `pulumi:"priority"`
	// The TCP routing information for the route.
	TcpRoute *RouteSpecTcpRoute `pulumi:"tcpRoute"`
}

// RouteSpecInput is an input type that accepts RouteSpecArgs and RouteSpecOutput values.
// You can construct a concrete instance of `RouteSpecInput` via:
//
//          RouteSpecArgs{...}
type RouteSpecInput interface {
	pulumi.Input

	ToRouteSpecOutput() RouteSpecOutput
	ToRouteSpecOutputWithContext(context.Context) RouteSpecOutput
}

type RouteSpecArgs struct {
	// The gRPC routing information for the route.
	GrpcRoute RouteSpecGrpcRoutePtrInput `pulumi:"grpcRoute"`
	// The HTTP/2 routing information for the route.
	Http2Route RouteSpecHttp2RoutePtrInput `pulumi:"http2Route"`
	// The HTTP routing information for the route.
	HttpRoute RouteSpecHttpRoutePtrInput `pulumi:"httpRoute"`
	// The priority for the route, between `0` and `1000`.
	// Routes are matched based on the specified value, where `0` is the highest priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The TCP routing information for the route.
	TcpRoute RouteSpecTcpRoutePtrInput `pulumi:"tcpRoute"`
}

func (RouteSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpec)(nil)).Elem()
}

func (i RouteSpecArgs) ToRouteSpecOutput() RouteSpecOutput {
	return i.ToRouteSpecOutputWithContext(context.Background())
}

func (i RouteSpecArgs) ToRouteSpecOutputWithContext(ctx context.Context) RouteSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecOutput)
}

func (i RouteSpecArgs) ToRouteSpecPtrOutput() RouteSpecPtrOutput {
	return i.ToRouteSpecPtrOutputWithContext(context.Background())
}

func (i RouteSpecArgs) ToRouteSpecPtrOutputWithContext(ctx context.Context) RouteSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecOutput).ToRouteSpecPtrOutputWithContext(ctx)
}

// RouteSpecPtrInput is an input type that accepts RouteSpecArgs, RouteSpecPtr and RouteSpecPtrOutput values.
// You can construct a concrete instance of `RouteSpecPtrInput` via:
//
//          RouteSpecArgs{...}
//
//  or:
//
//          nil
type RouteSpecPtrInput interface {
	pulumi.Input

	ToRouteSpecPtrOutput() RouteSpecPtrOutput
	ToRouteSpecPtrOutputWithContext(context.Context) RouteSpecPtrOutput
}

type routeSpecPtrType RouteSpecArgs

func RouteSpecPtr(v *RouteSpecArgs) RouteSpecPtrInput {
	return (*routeSpecPtrType)(v)
}

func (*routeSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpec)(nil)).Elem()
}

func (i *routeSpecPtrType) ToRouteSpecPtrOutput() RouteSpecPtrOutput {
	return i.ToRouteSpecPtrOutputWithContext(context.Background())
}

func (i *routeSpecPtrType) ToRouteSpecPtrOutputWithContext(ctx context.Context) RouteSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecPtrOutput)
}

type RouteSpecOutput struct{ *pulumi.OutputState }

func (RouteSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpec)(nil)).Elem()
}

func (o RouteSpecOutput) ToRouteSpecOutput() RouteSpecOutput {
	return o
}

func (o RouteSpecOutput) ToRouteSpecOutputWithContext(ctx context.Context) RouteSpecOutput {
	return o
}

func (o RouteSpecOutput) ToRouteSpecPtrOutput() RouteSpecPtrOutput {
	return o.ToRouteSpecPtrOutputWithContext(context.Background())
}

func (o RouteSpecOutput) ToRouteSpecPtrOutputWithContext(ctx context.Context) RouteSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpec) *RouteSpec {
		return &v
	}).(RouteSpecPtrOutput)
}

// The gRPC routing information for the route.
func (o RouteSpecOutput) GrpcRoute() RouteSpecGrpcRoutePtrOutput {
	return o.ApplyT(func(v RouteSpec) *RouteSpecGrpcRoute { return v.GrpcRoute }).(RouteSpecGrpcRoutePtrOutput)
}

// The HTTP/2 routing information for the route.
func (o RouteSpecOutput) Http2Route() RouteSpecHttp2RoutePtrOutput {
	return o.ApplyT(func(v RouteSpec) *RouteSpecHttp2Route { return v.Http2Route }).(RouteSpecHttp2RoutePtrOutput)
}

// The HTTP routing information for the route.
func (o RouteSpecOutput) HttpRoute() RouteSpecHttpRoutePtrOutput {
	return o.ApplyT(func(v RouteSpec) *RouteSpecHttpRoute { return v.HttpRoute }).(RouteSpecHttpRoutePtrOutput)
}

// The priority for the route, between `0` and `1000`.
// Routes are matched based on the specified value, where `0` is the highest priority.
func (o RouteSpecOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouteSpec) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The TCP routing information for the route.
func (o RouteSpecOutput) TcpRoute() RouteSpecTcpRoutePtrOutput {
	return o.ApplyT(func(v RouteSpec) *RouteSpecTcpRoute { return v.TcpRoute }).(RouteSpecTcpRoutePtrOutput)
}

type RouteSpecPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpec)(nil)).Elem()
}

func (o RouteSpecPtrOutput) ToRouteSpecPtrOutput() RouteSpecPtrOutput {
	return o
}

func (o RouteSpecPtrOutput) ToRouteSpecPtrOutputWithContext(ctx context.Context) RouteSpecPtrOutput {
	return o
}

func (o RouteSpecPtrOutput) Elem() RouteSpecOutput {
	return o.ApplyT(func(v *RouteSpec) RouteSpec {
		if v != nil {
			return *v
		}
		var ret RouteSpec
		return ret
	}).(RouteSpecOutput)
}

// The gRPC routing information for the route.
func (o RouteSpecPtrOutput) GrpcRoute() RouteSpecGrpcRoutePtrOutput {
	return o.ApplyT(func(v *RouteSpec) *RouteSpecGrpcRoute {
		if v == nil {
			return nil
		}
		return v.GrpcRoute
	}).(RouteSpecGrpcRoutePtrOutput)
}

// The HTTP/2 routing information for the route.
func (o RouteSpecPtrOutput) Http2Route() RouteSpecHttp2RoutePtrOutput {
	return o.ApplyT(func(v *RouteSpec) *RouteSpecHttp2Route {
		if v == nil {
			return nil
		}
		return v.Http2Route
	}).(RouteSpecHttp2RoutePtrOutput)
}

// The HTTP routing information for the route.
func (o RouteSpecPtrOutput) HttpRoute() RouteSpecHttpRoutePtrOutput {
	return o.ApplyT(func(v *RouteSpec) *RouteSpecHttpRoute {
		if v == nil {
			return nil
		}
		return v.HttpRoute
	}).(RouteSpecHttpRoutePtrOutput)
}

// The priority for the route, between `0` and `1000`.
// Routes are matched based on the specified value, where `0` is the highest priority.
func (o RouteSpecPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpec) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// The TCP routing information for the route.
func (o RouteSpecPtrOutput) TcpRoute() RouteSpecTcpRoutePtrOutput {
	return o.ApplyT(func(v *RouteSpec) *RouteSpecTcpRoute {
		if v == nil {
			return nil
		}
		return v.TcpRoute
	}).(RouteSpecTcpRoutePtrOutput)
}

type RouteSpecGrpcRoute struct {
	// The action to take if a match is determined.
	Action RouteSpecGrpcRouteAction `pulumi:"action"`
	// The criteria for determining an gRPC request match.
	Match *RouteSpecGrpcRouteMatch `pulumi:"match"`
	// The retry policy.
	RetryPolicy *RouteSpecGrpcRouteRetryPolicy `pulumi:"retryPolicy"`
	// The types of timeouts.
	Timeout *RouteSpecGrpcRouteTimeout `pulumi:"timeout"`
}

// RouteSpecGrpcRouteInput is an input type that accepts RouteSpecGrpcRouteArgs and RouteSpecGrpcRouteOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteInput` via:
//
//          RouteSpecGrpcRouteArgs{...}
type RouteSpecGrpcRouteInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteOutput() RouteSpecGrpcRouteOutput
	ToRouteSpecGrpcRouteOutputWithContext(context.Context) RouteSpecGrpcRouteOutput
}

type RouteSpecGrpcRouteArgs struct {
	// The action to take if a match is determined.
	Action RouteSpecGrpcRouteActionInput `pulumi:"action"`
	// The criteria for determining an gRPC request match.
	Match RouteSpecGrpcRouteMatchPtrInput `pulumi:"match"`
	// The retry policy.
	RetryPolicy RouteSpecGrpcRouteRetryPolicyPtrInput `pulumi:"retryPolicy"`
	// The types of timeouts.
	Timeout RouteSpecGrpcRouteTimeoutPtrInput `pulumi:"timeout"`
}

func (RouteSpecGrpcRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRoute)(nil)).Elem()
}

func (i RouteSpecGrpcRouteArgs) ToRouteSpecGrpcRouteOutput() RouteSpecGrpcRouteOutput {
	return i.ToRouteSpecGrpcRouteOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteArgs) ToRouteSpecGrpcRouteOutputWithContext(ctx context.Context) RouteSpecGrpcRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteOutput)
}

func (i RouteSpecGrpcRouteArgs) ToRouteSpecGrpcRoutePtrOutput() RouteSpecGrpcRoutePtrOutput {
	return i.ToRouteSpecGrpcRoutePtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteArgs) ToRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteOutput).ToRouteSpecGrpcRoutePtrOutputWithContext(ctx)
}

// RouteSpecGrpcRoutePtrInput is an input type that accepts RouteSpecGrpcRouteArgs, RouteSpecGrpcRoutePtr and RouteSpecGrpcRoutePtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRoutePtrInput` via:
//
//          RouteSpecGrpcRouteArgs{...}
//
//  or:
//
//          nil
type RouteSpecGrpcRoutePtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRoutePtrOutput() RouteSpecGrpcRoutePtrOutput
	ToRouteSpecGrpcRoutePtrOutputWithContext(context.Context) RouteSpecGrpcRoutePtrOutput
}

type routeSpecGrpcRoutePtrType RouteSpecGrpcRouteArgs

func RouteSpecGrpcRoutePtr(v *RouteSpecGrpcRouteArgs) RouteSpecGrpcRoutePtrInput {
	return (*routeSpecGrpcRoutePtrType)(v)
}

func (*routeSpecGrpcRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRoute)(nil)).Elem()
}

func (i *routeSpecGrpcRoutePtrType) ToRouteSpecGrpcRoutePtrOutput() RouteSpecGrpcRoutePtrOutput {
	return i.ToRouteSpecGrpcRoutePtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRoutePtrType) ToRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRoutePtrOutput)
}

type RouteSpecGrpcRouteOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRoute)(nil)).Elem()
}

func (o RouteSpecGrpcRouteOutput) ToRouteSpecGrpcRouteOutput() RouteSpecGrpcRouteOutput {
	return o
}

func (o RouteSpecGrpcRouteOutput) ToRouteSpecGrpcRouteOutputWithContext(ctx context.Context) RouteSpecGrpcRouteOutput {
	return o
}

func (o RouteSpecGrpcRouteOutput) ToRouteSpecGrpcRoutePtrOutput() RouteSpecGrpcRoutePtrOutput {
	return o.ToRouteSpecGrpcRoutePtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteOutput) ToRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRoute) *RouteSpecGrpcRoute {
		return &v
	}).(RouteSpecGrpcRoutePtrOutput)
}

// The action to take if a match is determined.
func (o RouteSpecGrpcRouteOutput) Action() RouteSpecGrpcRouteActionOutput {
	return o.ApplyT(func(v RouteSpecGrpcRoute) RouteSpecGrpcRouteAction { return v.Action }).(RouteSpecGrpcRouteActionOutput)
}

// The criteria for determining an gRPC request match.
func (o RouteSpecGrpcRouteOutput) Match() RouteSpecGrpcRouteMatchPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRoute) *RouteSpecGrpcRouteMatch { return v.Match }).(RouteSpecGrpcRouteMatchPtrOutput)
}

// The retry policy.
func (o RouteSpecGrpcRouteOutput) RetryPolicy() RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRoute) *RouteSpecGrpcRouteRetryPolicy { return v.RetryPolicy }).(RouteSpecGrpcRouteRetryPolicyPtrOutput)
}

// The types of timeouts.
func (o RouteSpecGrpcRouteOutput) Timeout() RouteSpecGrpcRouteTimeoutPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRoute) *RouteSpecGrpcRouteTimeout { return v.Timeout }).(RouteSpecGrpcRouteTimeoutPtrOutput)
}

type RouteSpecGrpcRoutePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRoute)(nil)).Elem()
}

func (o RouteSpecGrpcRoutePtrOutput) ToRouteSpecGrpcRoutePtrOutput() RouteSpecGrpcRoutePtrOutput {
	return o
}

func (o RouteSpecGrpcRoutePtrOutput) ToRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRoutePtrOutput {
	return o
}

func (o RouteSpecGrpcRoutePtrOutput) Elem() RouteSpecGrpcRouteOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRoute) RouteSpecGrpcRoute {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRoute
		return ret
	}).(RouteSpecGrpcRouteOutput)
}

// The action to take if a match is determined.
func (o RouteSpecGrpcRoutePtrOutput) Action() RouteSpecGrpcRouteActionPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRoute) *RouteSpecGrpcRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(RouteSpecGrpcRouteActionPtrOutput)
}

// The criteria for determining an gRPC request match.
func (o RouteSpecGrpcRoutePtrOutput) Match() RouteSpecGrpcRouteMatchPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRoute) *RouteSpecGrpcRouteMatch {
		if v == nil {
			return nil
		}
		return v.Match
	}).(RouteSpecGrpcRouteMatchPtrOutput)
}

// The retry policy.
func (o RouteSpecGrpcRoutePtrOutput) RetryPolicy() RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRoute) *RouteSpecGrpcRouteRetryPolicy {
		if v == nil {
			return nil
		}
		return v.RetryPolicy
	}).(RouteSpecGrpcRouteRetryPolicyPtrOutput)
}

// The types of timeouts.
func (o RouteSpecGrpcRoutePtrOutput) Timeout() RouteSpecGrpcRouteTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRoute) *RouteSpecGrpcRouteTimeout {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(RouteSpecGrpcRouteTimeoutPtrOutput)
}

type RouteSpecGrpcRouteAction struct {
	// The targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets []RouteSpecGrpcRouteActionWeightedTarget `pulumi:"weightedTargets"`
}

// RouteSpecGrpcRouteActionInput is an input type that accepts RouteSpecGrpcRouteActionArgs and RouteSpecGrpcRouteActionOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteActionInput` via:
//
//          RouteSpecGrpcRouteActionArgs{...}
type RouteSpecGrpcRouteActionInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteActionOutput() RouteSpecGrpcRouteActionOutput
	ToRouteSpecGrpcRouteActionOutputWithContext(context.Context) RouteSpecGrpcRouteActionOutput
}

type RouteSpecGrpcRouteActionArgs struct {
	// The targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets RouteSpecGrpcRouteActionWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (RouteSpecGrpcRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteAction)(nil)).Elem()
}

func (i RouteSpecGrpcRouteActionArgs) ToRouteSpecGrpcRouteActionOutput() RouteSpecGrpcRouteActionOutput {
	return i.ToRouteSpecGrpcRouteActionOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteActionArgs) ToRouteSpecGrpcRouteActionOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteActionOutput)
}

func (i RouteSpecGrpcRouteActionArgs) ToRouteSpecGrpcRouteActionPtrOutput() RouteSpecGrpcRouteActionPtrOutput {
	return i.ToRouteSpecGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteActionArgs) ToRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteActionOutput).ToRouteSpecGrpcRouteActionPtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteActionPtrInput is an input type that accepts RouteSpecGrpcRouteActionArgs, RouteSpecGrpcRouteActionPtr and RouteSpecGrpcRouteActionPtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteActionPtrInput` via:
//
//          RouteSpecGrpcRouteActionArgs{...}
//
//  or:
//
//          nil
type RouteSpecGrpcRouteActionPtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteActionPtrOutput() RouteSpecGrpcRouteActionPtrOutput
	ToRouteSpecGrpcRouteActionPtrOutputWithContext(context.Context) RouteSpecGrpcRouteActionPtrOutput
}

type routeSpecGrpcRouteActionPtrType RouteSpecGrpcRouteActionArgs

func RouteSpecGrpcRouteActionPtr(v *RouteSpecGrpcRouteActionArgs) RouteSpecGrpcRouteActionPtrInput {
	return (*routeSpecGrpcRouteActionPtrType)(v)
}

func (*routeSpecGrpcRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteAction)(nil)).Elem()
}

func (i *routeSpecGrpcRouteActionPtrType) ToRouteSpecGrpcRouteActionPtrOutput() RouteSpecGrpcRouteActionPtrOutput {
	return i.ToRouteSpecGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteActionPtrType) ToRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteActionPtrOutput)
}

type RouteSpecGrpcRouteActionOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteAction)(nil)).Elem()
}

func (o RouteSpecGrpcRouteActionOutput) ToRouteSpecGrpcRouteActionOutput() RouteSpecGrpcRouteActionOutput {
	return o
}

func (o RouteSpecGrpcRouteActionOutput) ToRouteSpecGrpcRouteActionOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionOutput {
	return o
}

func (o RouteSpecGrpcRouteActionOutput) ToRouteSpecGrpcRouteActionPtrOutput() RouteSpecGrpcRouteActionPtrOutput {
	return o.ToRouteSpecGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteActionOutput) ToRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteAction) *RouteSpecGrpcRouteAction {
		return &v
	}).(RouteSpecGrpcRouteActionPtrOutput)
}

// The targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecGrpcRouteActionOutput) WeightedTargets() RouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteAction) []RouteSpecGrpcRouteActionWeightedTarget { return v.WeightedTargets }).(RouteSpecGrpcRouteActionWeightedTargetArrayOutput)
}

type RouteSpecGrpcRouteActionPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteAction)(nil)).Elem()
}

func (o RouteSpecGrpcRouteActionPtrOutput) ToRouteSpecGrpcRouteActionPtrOutput() RouteSpecGrpcRouteActionPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteActionPtrOutput) ToRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteActionPtrOutput) Elem() RouteSpecGrpcRouteActionOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteAction) RouteSpecGrpcRouteAction {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteAction
		return ret
	}).(RouteSpecGrpcRouteActionOutput)
}

// The targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecGrpcRouteActionPtrOutput) WeightedTargets() RouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteAction) []RouteSpecGrpcRouteActionWeightedTarget {
		if v == nil {
			return nil
		}
		return v.WeightedTargets
	}).(RouteSpecGrpcRouteActionWeightedTargetArrayOutput)
}

type RouteSpecGrpcRouteActionWeightedTarget struct {
	// The virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode string `pulumi:"virtualNode"`
	// The relative weight of the weighted target. An integer between 0 and 100.
	Weight int `pulumi:"weight"`
}

// RouteSpecGrpcRouteActionWeightedTargetInput is an input type that accepts RouteSpecGrpcRouteActionWeightedTargetArgs and RouteSpecGrpcRouteActionWeightedTargetOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteActionWeightedTargetInput` via:
//
//          RouteSpecGrpcRouteActionWeightedTargetArgs{...}
type RouteSpecGrpcRouteActionWeightedTargetInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteActionWeightedTargetOutput() RouteSpecGrpcRouteActionWeightedTargetOutput
	ToRouteSpecGrpcRouteActionWeightedTargetOutputWithContext(context.Context) RouteSpecGrpcRouteActionWeightedTargetOutput
}

type RouteSpecGrpcRouteActionWeightedTargetArgs struct {
	// The virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode pulumi.StringInput `pulumi:"virtualNode"`
	// The relative weight of the weighted target. An integer between 0 and 100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (RouteSpecGrpcRouteActionWeightedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecGrpcRouteActionWeightedTargetArgs) ToRouteSpecGrpcRouteActionWeightedTargetOutput() RouteSpecGrpcRouteActionWeightedTargetOutput {
	return i.ToRouteSpecGrpcRouteActionWeightedTargetOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteActionWeightedTargetArgs) ToRouteSpecGrpcRouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionWeightedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteActionWeightedTargetOutput)
}

// RouteSpecGrpcRouteActionWeightedTargetArrayInput is an input type that accepts RouteSpecGrpcRouteActionWeightedTargetArray and RouteSpecGrpcRouteActionWeightedTargetArrayOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteActionWeightedTargetArrayInput` via:
//
//          RouteSpecGrpcRouteActionWeightedTargetArray{ RouteSpecGrpcRouteActionWeightedTargetArgs{...} }
type RouteSpecGrpcRouteActionWeightedTargetArrayInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteActionWeightedTargetArrayOutput() RouteSpecGrpcRouteActionWeightedTargetArrayOutput
	ToRouteSpecGrpcRouteActionWeightedTargetArrayOutputWithContext(context.Context) RouteSpecGrpcRouteActionWeightedTargetArrayOutput
}

type RouteSpecGrpcRouteActionWeightedTargetArray []RouteSpecGrpcRouteActionWeightedTargetInput

func (RouteSpecGrpcRouteActionWeightedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecGrpcRouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecGrpcRouteActionWeightedTargetArray) ToRouteSpecGrpcRouteActionWeightedTargetArrayOutput() RouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return i.ToRouteSpecGrpcRouteActionWeightedTargetArrayOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteActionWeightedTargetArray) ToRouteSpecGrpcRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteActionWeightedTargetArrayOutput)
}

type RouteSpecGrpcRouteActionWeightedTargetOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteActionWeightedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecGrpcRouteActionWeightedTargetOutput) ToRouteSpecGrpcRouteActionWeightedTargetOutput() RouteSpecGrpcRouteActionWeightedTargetOutput {
	return o
}

func (o RouteSpecGrpcRouteActionWeightedTargetOutput) ToRouteSpecGrpcRouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionWeightedTargetOutput {
	return o
}

// The virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
func (o RouteSpecGrpcRouteActionWeightedTargetOutput) VirtualNode() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteActionWeightedTarget) string { return v.VirtualNode }).(pulumi.StringOutput)
}

// The relative weight of the weighted target. An integer between 0 and 100.
func (o RouteSpecGrpcRouteActionWeightedTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteActionWeightedTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type RouteSpecGrpcRouteActionWeightedTargetArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteActionWeightedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecGrpcRouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecGrpcRouteActionWeightedTargetArrayOutput) ToRouteSpecGrpcRouteActionWeightedTargetArrayOutput() RouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecGrpcRouteActionWeightedTargetArrayOutput) ToRouteSpecGrpcRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecGrpcRouteActionWeightedTargetArrayOutput) Index(i pulumi.IntInput) RouteSpecGrpcRouteActionWeightedTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecGrpcRouteActionWeightedTarget {
		return vs[0].([]RouteSpecGrpcRouteActionWeightedTarget)[vs[1].(int)]
	}).(RouteSpecGrpcRouteActionWeightedTargetOutput)
}

type RouteSpecGrpcRouteMatch struct {
	// The data to match from the gRPC request.
	Metadatas []RouteSpecGrpcRouteMatchMetadata `pulumi:"metadatas"`
	// The method name to match from the request. If you specify a name, you must also specify a `serviceName`.
	MethodName *string `pulumi:"methodName"`
	// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix *string `pulumi:"prefix"`
	// The fully qualified domain name for the service to match from the request.
	ServiceName *string `pulumi:"serviceName"`
}

// RouteSpecGrpcRouteMatchInput is an input type that accepts RouteSpecGrpcRouteMatchArgs and RouteSpecGrpcRouteMatchOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchInput` via:
//
//          RouteSpecGrpcRouteMatchArgs{...}
type RouteSpecGrpcRouteMatchInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchOutput() RouteSpecGrpcRouteMatchOutput
	ToRouteSpecGrpcRouteMatchOutputWithContext(context.Context) RouteSpecGrpcRouteMatchOutput
}

type RouteSpecGrpcRouteMatchArgs struct {
	// The data to match from the gRPC request.
	Metadatas RouteSpecGrpcRouteMatchMetadataArrayInput `pulumi:"metadatas"`
	// The method name to match from the request. If you specify a name, you must also specify a `serviceName`.
	MethodName pulumi.StringPtrInput `pulumi:"methodName"`
	// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The fully qualified domain name for the service to match from the request.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (RouteSpecGrpcRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (i RouteSpecGrpcRouteMatchArgs) ToRouteSpecGrpcRouteMatchOutput() RouteSpecGrpcRouteMatchOutput {
	return i.ToRouteSpecGrpcRouteMatchOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchArgs) ToRouteSpecGrpcRouteMatchOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchOutput)
}

func (i RouteSpecGrpcRouteMatchArgs) ToRouteSpecGrpcRouteMatchPtrOutput() RouteSpecGrpcRouteMatchPtrOutput {
	return i.ToRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchArgs) ToRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchOutput).ToRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteMatchPtrInput is an input type that accepts RouteSpecGrpcRouteMatchArgs, RouteSpecGrpcRouteMatchPtr and RouteSpecGrpcRouteMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchPtrInput` via:
//
//          RouteSpecGrpcRouteMatchArgs{...}
//
//  or:
//
//          nil
type RouteSpecGrpcRouteMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchPtrOutput() RouteSpecGrpcRouteMatchPtrOutput
	ToRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Context) RouteSpecGrpcRouteMatchPtrOutput
}

type routeSpecGrpcRouteMatchPtrType RouteSpecGrpcRouteMatchArgs

func RouteSpecGrpcRouteMatchPtr(v *RouteSpecGrpcRouteMatchArgs) RouteSpecGrpcRouteMatchPtrInput {
	return (*routeSpecGrpcRouteMatchPtrType)(v)
}

func (*routeSpecGrpcRouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (i *routeSpecGrpcRouteMatchPtrType) ToRouteSpecGrpcRouteMatchPtrOutput() RouteSpecGrpcRouteMatchPtrOutput {
	return i.ToRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteMatchPtrType) ToRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchPtrOutput)
}

type RouteSpecGrpcRouteMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchOutput) ToRouteSpecGrpcRouteMatchOutput() RouteSpecGrpcRouteMatchOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchOutput) ToRouteSpecGrpcRouteMatchOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchOutput) ToRouteSpecGrpcRouteMatchPtrOutput() RouteSpecGrpcRouteMatchPtrOutput {
	return o.ToRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteMatchOutput) ToRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteMatch) *RouteSpecGrpcRouteMatch {
		return &v
	}).(RouteSpecGrpcRouteMatchPtrOutput)
}

// The data to match from the gRPC request.
func (o RouteSpecGrpcRouteMatchOutput) Metadatas() RouteSpecGrpcRouteMatchMetadataArrayOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatch) []RouteSpecGrpcRouteMatchMetadata { return v.Metadatas }).(RouteSpecGrpcRouteMatchMetadataArrayOutput)
}

// The method name to match from the request. If you specify a name, you must also specify a `serviceName`.
func (o RouteSpecGrpcRouteMatchOutput) MethodName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatch) *string { return v.MethodName }).(pulumi.StringPtrOutput)
}

// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecGrpcRouteMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The fully qualified domain name for the service to match from the request.
func (o RouteSpecGrpcRouteMatchOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatch) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type RouteSpecGrpcRouteMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchPtrOutput) ToRouteSpecGrpcRouteMatchPtrOutput() RouteSpecGrpcRouteMatchPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchPtrOutput) ToRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchPtrOutput) Elem() RouteSpecGrpcRouteMatchOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatch) RouteSpecGrpcRouteMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteMatch
		return ret
	}).(RouteSpecGrpcRouteMatchOutput)
}

// The data to match from the gRPC request.
func (o RouteSpecGrpcRouteMatchPtrOutput) Metadatas() RouteSpecGrpcRouteMatchMetadataArrayOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatch) []RouteSpecGrpcRouteMatchMetadata {
		if v == nil {
			return nil
		}
		return v.Metadatas
	}).(RouteSpecGrpcRouteMatchMetadataArrayOutput)
}

// The method name to match from the request. If you specify a name, you must also specify a `serviceName`.
func (o RouteSpecGrpcRouteMatchPtrOutput) MethodName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.MethodName
	}).(pulumi.StringPtrOutput)
}

// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecGrpcRouteMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The fully qualified domain name for the service to match from the request.
func (o RouteSpecGrpcRouteMatchPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type RouteSpecGrpcRouteMatchMetadata struct {
	// If `true`, the match is on the opposite of the `match` criteria. Default is `false`.
	Invert *bool `pulumi:"invert"`
	// The data to match from the request.
	Match *RouteSpecGrpcRouteMatchMetadataMatch `pulumi:"match"`
	// The name of the route. Must be between 1 and 50 characters in length.
	Name string `pulumi:"name"`
}

// RouteSpecGrpcRouteMatchMetadataInput is an input type that accepts RouteSpecGrpcRouteMatchMetadataArgs and RouteSpecGrpcRouteMatchMetadataOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchMetadataInput` via:
//
//          RouteSpecGrpcRouteMatchMetadataArgs{...}
type RouteSpecGrpcRouteMatchMetadataInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchMetadataOutput() RouteSpecGrpcRouteMatchMetadataOutput
	ToRouteSpecGrpcRouteMatchMetadataOutputWithContext(context.Context) RouteSpecGrpcRouteMatchMetadataOutput
}

type RouteSpecGrpcRouteMatchMetadataArgs struct {
	// If `true`, the match is on the opposite of the `match` criteria. Default is `false`.
	Invert pulumi.BoolPtrInput `pulumi:"invert"`
	// The data to match from the request.
	Match RouteSpecGrpcRouteMatchMetadataMatchPtrInput `pulumi:"match"`
	// The name of the route. Must be between 1 and 50 characters in length.
	Name pulumi.StringInput `pulumi:"name"`
}

func (RouteSpecGrpcRouteMatchMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadata)(nil)).Elem()
}

func (i RouteSpecGrpcRouteMatchMetadataArgs) ToRouteSpecGrpcRouteMatchMetadataOutput() RouteSpecGrpcRouteMatchMetadataOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchMetadataArgs) ToRouteSpecGrpcRouteMatchMetadataOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataOutput)
}

// RouteSpecGrpcRouteMatchMetadataArrayInput is an input type that accepts RouteSpecGrpcRouteMatchMetadataArray and RouteSpecGrpcRouteMatchMetadataArrayOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchMetadataArrayInput` via:
//
//          RouteSpecGrpcRouteMatchMetadataArray{ RouteSpecGrpcRouteMatchMetadataArgs{...} }
type RouteSpecGrpcRouteMatchMetadataArrayInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchMetadataArrayOutput() RouteSpecGrpcRouteMatchMetadataArrayOutput
	ToRouteSpecGrpcRouteMatchMetadataArrayOutputWithContext(context.Context) RouteSpecGrpcRouteMatchMetadataArrayOutput
}

type RouteSpecGrpcRouteMatchMetadataArray []RouteSpecGrpcRouteMatchMetadataInput

func (RouteSpecGrpcRouteMatchMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecGrpcRouteMatchMetadata)(nil)).Elem()
}

func (i RouteSpecGrpcRouteMatchMetadataArray) ToRouteSpecGrpcRouteMatchMetadataArrayOutput() RouteSpecGrpcRouteMatchMetadataArrayOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataArrayOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchMetadataArray) ToRouteSpecGrpcRouteMatchMetadataArrayOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataArrayOutput)
}

type RouteSpecGrpcRouteMatchMetadataOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadata)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchMetadataOutput) ToRouteSpecGrpcRouteMatchMetadataOutput() RouteSpecGrpcRouteMatchMetadataOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataOutput) ToRouteSpecGrpcRouteMatchMetadataOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataOutput {
	return o
}

// If `true`, the match is on the opposite of the `match` criteria. Default is `false`.
func (o RouteSpecGrpcRouteMatchMetadataOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadata) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

// The data to match from the request.
func (o RouteSpecGrpcRouteMatchMetadataOutput) Match() RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadata) *RouteSpecGrpcRouteMatchMetadataMatch { return v.Match }).(RouteSpecGrpcRouteMatchMetadataMatchPtrOutput)
}

// The name of the route. Must be between 1 and 50 characters in length.
func (o RouteSpecGrpcRouteMatchMetadataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadata) string { return v.Name }).(pulumi.StringOutput)
}

type RouteSpecGrpcRouteMatchMetadataArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecGrpcRouteMatchMetadata)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchMetadataArrayOutput) ToRouteSpecGrpcRouteMatchMetadataArrayOutput() RouteSpecGrpcRouteMatchMetadataArrayOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataArrayOutput) ToRouteSpecGrpcRouteMatchMetadataArrayOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataArrayOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataArrayOutput) Index(i pulumi.IntInput) RouteSpecGrpcRouteMatchMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecGrpcRouteMatchMetadata {
		return vs[0].([]RouteSpecGrpcRouteMatchMetadata)[vs[1].(int)]
	}).(RouteSpecGrpcRouteMatchMetadataOutput)
}

type RouteSpecGrpcRouteMatchMetadataMatch struct {
	// The value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
	Exact *string `pulumi:"exact"`
	// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix *string `pulumi:"prefix"`
	// The object that specifies the range of numbers that the value sent by the client must be included in.
	Range *RouteSpecGrpcRouteMatchMetadataMatchRange `pulumi:"range"`
	// The value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
	Regex *string `pulumi:"regex"`
	// The value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
	Suffix *string `pulumi:"suffix"`
}

// RouteSpecGrpcRouteMatchMetadataMatchInput is an input type that accepts RouteSpecGrpcRouteMatchMetadataMatchArgs and RouteSpecGrpcRouteMatchMetadataMatchOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchMetadataMatchInput` via:
//
//          RouteSpecGrpcRouteMatchMetadataMatchArgs{...}
type RouteSpecGrpcRouteMatchMetadataMatchInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchMetadataMatchOutput() RouteSpecGrpcRouteMatchMetadataMatchOutput
	ToRouteSpecGrpcRouteMatchMetadataMatchOutputWithContext(context.Context) RouteSpecGrpcRouteMatchMetadataMatchOutput
}

type RouteSpecGrpcRouteMatchMetadataMatchArgs struct {
	// The value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The object that specifies the range of numbers that the value sent by the client must be included in.
	Range RouteSpecGrpcRouteMatchMetadataMatchRangePtrInput `pulumi:"range"`
	// The value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// The value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (RouteSpecGrpcRouteMatchMetadataMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatch)(nil)).Elem()
}

func (i RouteSpecGrpcRouteMatchMetadataMatchArgs) ToRouteSpecGrpcRouteMatchMetadataMatchOutput() RouteSpecGrpcRouteMatchMetadataMatchOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataMatchOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchMetadataMatchArgs) ToRouteSpecGrpcRouteMatchMetadataMatchOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataMatchOutput)
}

func (i RouteSpecGrpcRouteMatchMetadataMatchArgs) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutput() RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchMetadataMatchArgs) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataMatchOutput).ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteMatchMetadataMatchPtrInput is an input type that accepts RouteSpecGrpcRouteMatchMetadataMatchArgs, RouteSpecGrpcRouteMatchMetadataMatchPtr and RouteSpecGrpcRouteMatchMetadataMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchMetadataMatchPtrInput` via:
//
//          RouteSpecGrpcRouteMatchMetadataMatchArgs{...}
//
//  or:
//
//          nil
type RouteSpecGrpcRouteMatchMetadataMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutput() RouteSpecGrpcRouteMatchMetadataMatchPtrOutput
	ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(context.Context) RouteSpecGrpcRouteMatchMetadataMatchPtrOutput
}

type routeSpecGrpcRouteMatchMetadataMatchPtrType RouteSpecGrpcRouteMatchMetadataMatchArgs

func RouteSpecGrpcRouteMatchMetadataMatchPtr(v *RouteSpecGrpcRouteMatchMetadataMatchArgs) RouteSpecGrpcRouteMatchMetadataMatchPtrInput {
	return (*routeSpecGrpcRouteMatchMetadataMatchPtrType)(v)
}

func (*routeSpecGrpcRouteMatchMetadataMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteMatchMetadataMatch)(nil)).Elem()
}

func (i *routeSpecGrpcRouteMatchMetadataMatchPtrType) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutput() RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteMatchMetadataMatchPtrType) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataMatchPtrOutput)
}

type RouteSpecGrpcRouteMatchMetadataMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchMetadataMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatch)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) ToRouteSpecGrpcRouteMatchMetadataMatchOutput() RouteSpecGrpcRouteMatchMetadataMatchOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) ToRouteSpecGrpcRouteMatchMetadataMatchOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutput() RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return o.ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteMatchMetadataMatch) *RouteSpecGrpcRouteMatchMetadataMatch {
		return &v
	}).(RouteSpecGrpcRouteMatchMetadataMatchPtrOutput)
}

// The value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadataMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadataMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The object that specifies the range of numbers that the value sent by the client must be included in.
func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) Range() RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadataMatch) *RouteSpecGrpcRouteMatchMetadataMatchRange {
		return v.Range
	}).(RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput)
}

// The value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadataMatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// The value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadataMatch) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type RouteSpecGrpcRouteMatchMetadataMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteMatchMetadataMatch)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutput() RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) Elem() RouteSpecGrpcRouteMatchMetadataMatchOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatch) RouteSpecGrpcRouteMatchMetadataMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteMatchMetadataMatch
		return ret
	}).(RouteSpecGrpcRouteMatchMetadataMatchOutput)
}

// The value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The object that specifies the range of numbers that the value sent by the client must be included in.
func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) Range() RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatch) *RouteSpecGrpcRouteMatchMetadataMatchRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput)
}

// The value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// The value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatch) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type RouteSpecGrpcRouteMatchMetadataMatchRange struct {
	// The end of the range.
	End int `pulumi:"end"`
	// The start of the range.
	Start int `pulumi:"start"`
}

// RouteSpecGrpcRouteMatchMetadataMatchRangeInput is an input type that accepts RouteSpecGrpcRouteMatchMetadataMatchRangeArgs and RouteSpecGrpcRouteMatchMetadataMatchRangeOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchMetadataMatchRangeInput` via:
//
//          RouteSpecGrpcRouteMatchMetadataMatchRangeArgs{...}
type RouteSpecGrpcRouteMatchMetadataMatchRangeInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchMetadataMatchRangeOutput() RouteSpecGrpcRouteMatchMetadataMatchRangeOutput
	ToRouteSpecGrpcRouteMatchMetadataMatchRangeOutputWithContext(context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangeOutput
}

type RouteSpecGrpcRouteMatchMetadataMatchRangeArgs struct {
	// The end of the range.
	End pulumi.IntInput `pulumi:"end"`
	// The start of the range.
	Start pulumi.IntInput `pulumi:"start"`
}

func (RouteSpecGrpcRouteMatchMetadataMatchRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatchRange)(nil)).Elem()
}

func (i RouteSpecGrpcRouteMatchMetadataMatchRangeArgs) ToRouteSpecGrpcRouteMatchMetadataMatchRangeOutput() RouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataMatchRangeOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchMetadataMatchRangeArgs) ToRouteSpecGrpcRouteMatchMetadataMatchRangeOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataMatchRangeOutput)
}

func (i RouteSpecGrpcRouteMatchMetadataMatchRangeArgs) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput() RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchMetadataMatchRangeArgs) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataMatchRangeOutput).ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteMatchMetadataMatchRangePtrInput is an input type that accepts RouteSpecGrpcRouteMatchMetadataMatchRangeArgs, RouteSpecGrpcRouteMatchMetadataMatchRangePtr and RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchMetadataMatchRangePtrInput` via:
//
//          RouteSpecGrpcRouteMatchMetadataMatchRangeArgs{...}
//
//  or:
//
//          nil
type RouteSpecGrpcRouteMatchMetadataMatchRangePtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput() RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput
	ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput
}

type routeSpecGrpcRouteMatchMetadataMatchRangePtrType RouteSpecGrpcRouteMatchMetadataMatchRangeArgs

func RouteSpecGrpcRouteMatchMetadataMatchRangePtr(v *RouteSpecGrpcRouteMatchMetadataMatchRangeArgs) RouteSpecGrpcRouteMatchMetadataMatchRangePtrInput {
	return (*routeSpecGrpcRouteMatchMetadataMatchRangePtrType)(v)
}

func (*routeSpecGrpcRouteMatchMetadataMatchRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteMatchMetadataMatchRange)(nil)).Elem()
}

func (i *routeSpecGrpcRouteMatchMetadataMatchRangePtrType) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput() RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteMatchMetadataMatchRangePtrType) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput)
}

type RouteSpecGrpcRouteMatchMetadataMatchRangeOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchMetadataMatchRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatchRange)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchMetadataMatchRangeOutput) ToRouteSpecGrpcRouteMatchMetadataMatchRangeOutput() RouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchRangeOutput) ToRouteSpecGrpcRouteMatchMetadataMatchRangeOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchRangeOutput) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput() RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return o.ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteMatchMetadataMatchRangeOutput) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteMatchMetadataMatchRange) *RouteSpecGrpcRouteMatchMetadataMatchRange {
		return &v
	}).(RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput)
}

// The end of the range.
func (o RouteSpecGrpcRouteMatchMetadataMatchRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadataMatchRange) int { return v.End }).(pulumi.IntOutput)
}

// The start of the range.
func (o RouteSpecGrpcRouteMatchMetadataMatchRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadataMatchRange) int { return v.Start }).(pulumi.IntOutput)
}

type RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteMatchMetadataMatchRange)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput() RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput) Elem() RouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatchRange) RouteSpecGrpcRouteMatchMetadataMatchRange {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteMatchMetadataMatchRange
		return ret
	}).(RouteSpecGrpcRouteMatchMetadataMatchRangeOutput)
}

// The end of the range.
func (o RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.IntPtrOutput)
}

// The start of the range.
func (o RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.IntPtrOutput)
}

type RouteSpecGrpcRouteRetryPolicy struct {
	// List of gRPC retry events.
	// Valid values: `cancelled`, `deadline-exceeded`, `internal`, `resource-exhausted`, `unavailable`.
	GrpcRetryEvents []string `pulumi:"grpcRetryEvents"`
	// List of HTTP retry events.
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	HttpRetryEvents []string `pulumi:"httpRetryEvents"`
	// The maximum number of retries.
	MaxRetries int `pulumi:"maxRetries"`
	// The per-retry timeout.
	PerRetryTimeout RouteSpecGrpcRouteRetryPolicyPerRetryTimeout `pulumi:"perRetryTimeout"`
	// List of TCP retry events. The only valid value is `connection-error`.
	TcpRetryEvents []string `pulumi:"tcpRetryEvents"`
}

// RouteSpecGrpcRouteRetryPolicyInput is an input type that accepts RouteSpecGrpcRouteRetryPolicyArgs and RouteSpecGrpcRouteRetryPolicyOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteRetryPolicyInput` via:
//
//          RouteSpecGrpcRouteRetryPolicyArgs{...}
type RouteSpecGrpcRouteRetryPolicyInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteRetryPolicyOutput() RouteSpecGrpcRouteRetryPolicyOutput
	ToRouteSpecGrpcRouteRetryPolicyOutputWithContext(context.Context) RouteSpecGrpcRouteRetryPolicyOutput
}

type RouteSpecGrpcRouteRetryPolicyArgs struct {
	// List of gRPC retry events.
	// Valid values: `cancelled`, `deadline-exceeded`, `internal`, `resource-exhausted`, `unavailable`.
	GrpcRetryEvents pulumi.StringArrayInput `pulumi:"grpcRetryEvents"`
	// List of HTTP retry events.
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	HttpRetryEvents pulumi.StringArrayInput `pulumi:"httpRetryEvents"`
	// The maximum number of retries.
	MaxRetries pulumi.IntInput `pulumi:"maxRetries"`
	// The per-retry timeout.
	PerRetryTimeout RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput `pulumi:"perRetryTimeout"`
	// List of TCP retry events. The only valid value is `connection-error`.
	TcpRetryEvents pulumi.StringArrayInput `pulumi:"tcpRetryEvents"`
}

func (RouteSpecGrpcRouteRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicy)(nil)).Elem()
}

func (i RouteSpecGrpcRouteRetryPolicyArgs) ToRouteSpecGrpcRouteRetryPolicyOutput() RouteSpecGrpcRouteRetryPolicyOutput {
	return i.ToRouteSpecGrpcRouteRetryPolicyOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteRetryPolicyArgs) ToRouteSpecGrpcRouteRetryPolicyOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteRetryPolicyOutput)
}

func (i RouteSpecGrpcRouteRetryPolicyArgs) ToRouteSpecGrpcRouteRetryPolicyPtrOutput() RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return i.ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteRetryPolicyArgs) ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteRetryPolicyOutput).ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteRetryPolicyPtrInput is an input type that accepts RouteSpecGrpcRouteRetryPolicyArgs, RouteSpecGrpcRouteRetryPolicyPtr and RouteSpecGrpcRouteRetryPolicyPtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteRetryPolicyPtrInput` via:
//
//          RouteSpecGrpcRouteRetryPolicyArgs{...}
//
//  or:
//
//          nil
type RouteSpecGrpcRouteRetryPolicyPtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteRetryPolicyPtrOutput() RouteSpecGrpcRouteRetryPolicyPtrOutput
	ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(context.Context) RouteSpecGrpcRouteRetryPolicyPtrOutput
}

type routeSpecGrpcRouteRetryPolicyPtrType RouteSpecGrpcRouteRetryPolicyArgs

func RouteSpecGrpcRouteRetryPolicyPtr(v *RouteSpecGrpcRouteRetryPolicyArgs) RouteSpecGrpcRouteRetryPolicyPtrInput {
	return (*routeSpecGrpcRouteRetryPolicyPtrType)(v)
}

func (*routeSpecGrpcRouteRetryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteRetryPolicy)(nil)).Elem()
}

func (i *routeSpecGrpcRouteRetryPolicyPtrType) ToRouteSpecGrpcRouteRetryPolicyPtrOutput() RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return i.ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteRetryPolicyPtrType) ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteRetryPolicyPtrOutput)
}

type RouteSpecGrpcRouteRetryPolicyOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicy)(nil)).Elem()
}

func (o RouteSpecGrpcRouteRetryPolicyOutput) ToRouteSpecGrpcRouteRetryPolicyOutput() RouteSpecGrpcRouteRetryPolicyOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyOutput) ToRouteSpecGrpcRouteRetryPolicyOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyOutput) ToRouteSpecGrpcRouteRetryPolicyPtrOutput() RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return o.ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteRetryPolicyOutput) ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteRetryPolicy) *RouteSpecGrpcRouteRetryPolicy {
		return &v
	}).(RouteSpecGrpcRouteRetryPolicyPtrOutput)
}

// List of gRPC retry events.
// Valid values: `cancelled`, `deadline-exceeded`, `internal`, `resource-exhausted`, `unavailable`.
func (o RouteSpecGrpcRouteRetryPolicyOutput) GrpcRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteRetryPolicy) []string { return v.GrpcRetryEvents }).(pulumi.StringArrayOutput)
}

// List of HTTP retry events.
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
func (o RouteSpecGrpcRouteRetryPolicyOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteRetryPolicy) []string { return v.HttpRetryEvents }).(pulumi.StringArrayOutput)
}

// The maximum number of retries.
func (o RouteSpecGrpcRouteRetryPolicyOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteRetryPolicy) int { return v.MaxRetries }).(pulumi.IntOutput)
}

// The per-retry timeout.
func (o RouteSpecGrpcRouteRetryPolicyOutput) PerRetryTimeout() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteRetryPolicy) RouteSpecGrpcRouteRetryPolicyPerRetryTimeout {
		return v.PerRetryTimeout
	}).(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput)
}

// List of TCP retry events. The only valid value is `connection-error`.
func (o RouteSpecGrpcRouteRetryPolicyOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteRetryPolicy) []string { return v.TcpRetryEvents }).(pulumi.StringArrayOutput)
}

type RouteSpecGrpcRouteRetryPolicyPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteRetryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteRetryPolicy)(nil)).Elem()
}

func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) ToRouteSpecGrpcRouteRetryPolicyPtrOutput() RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) Elem() RouteSpecGrpcRouteRetryPolicyOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicy) RouteSpecGrpcRouteRetryPolicy {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteRetryPolicy
		return ret
	}).(RouteSpecGrpcRouteRetryPolicyOutput)
}

// List of gRPC retry events.
// Valid values: `cancelled`, `deadline-exceeded`, `internal`, `resource-exhausted`, `unavailable`.
func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) GrpcRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.GrpcRetryEvents
	}).(pulumi.StringArrayOutput)
}

// List of HTTP retry events.
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.HttpRetryEvents
	}).(pulumi.StringArrayOutput)
}

// The maximum number of retries.
func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// The per-retry timeout.
func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) PerRetryTimeout() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicy) *RouteSpecGrpcRouteRetryPolicyPerRetryTimeout {
		if v == nil {
			return nil
		}
		return &v.PerRetryTimeout
	}).(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput)
}

// List of TCP retry events. The only valid value is `connection-error`.
func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.TcpRetryEvents
	}).(pulumi.StringArrayOutput)
}

type RouteSpecGrpcRouteRetryPolicyPerRetryTimeout struct {
	// Retry unit. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Retry value.
	Value int `pulumi:"value"`
}

// RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput is an input type that accepts RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs and RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput` via:
//
//          RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs{...}
type RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput
	ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput
}

type RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs struct {
	// Retry unit. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Retry value.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return i.ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput)
}

func (i RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return i.ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput).ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrInput is an input type that accepts RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs, RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtr and RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrInput` via:
//
//          RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs{...}
//
//  or:
//
//          nil
type RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput
	ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput
}

type routeSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrType RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs

func RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtr(v *RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrInput {
	return (*routeSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrType)(v)
}

func (*routeSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i *routeSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrType) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return i.ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrType) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput)
}

type RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteRetryPolicyPerRetryTimeout) *RouteSpecGrpcRouteRetryPolicyPerRetryTimeout {
		return &v
	}).(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput)
}

// Retry unit. Valid values: `ms`, `s`.
func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteRetryPolicyPerRetryTimeout) string { return v.Unit }).(pulumi.StringOutput)
}

// Retry value.
func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteRetryPolicyPerRetryTimeout) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput) Elem() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicyPerRetryTimeout) RouteSpecGrpcRouteRetryPolicyPerRetryTimeout {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteRetryPolicyPerRetryTimeout
		return ret
	}).(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput)
}

// Retry unit. Valid values: `ms`, `s`.
func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicyPerRetryTimeout) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Retry value.
func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicyPerRetryTimeout) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecGrpcRouteTimeout struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *RouteSpecGrpcRouteTimeoutIdle `pulumi:"idle"`
	// The per request timeout.
	PerRequest *RouteSpecGrpcRouteTimeoutPerRequest `pulumi:"perRequest"`
}

// RouteSpecGrpcRouteTimeoutInput is an input type that accepts RouteSpecGrpcRouteTimeoutArgs and RouteSpecGrpcRouteTimeoutOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteTimeoutInput` via:
//
//          RouteSpecGrpcRouteTimeoutArgs{...}
type RouteSpecGrpcRouteTimeoutInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteTimeoutOutput() RouteSpecGrpcRouteTimeoutOutput
	ToRouteSpecGrpcRouteTimeoutOutputWithContext(context.Context) RouteSpecGrpcRouteTimeoutOutput
}

type RouteSpecGrpcRouteTimeoutArgs struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle RouteSpecGrpcRouteTimeoutIdlePtrInput `pulumi:"idle"`
	// The per request timeout.
	PerRequest RouteSpecGrpcRouteTimeoutPerRequestPtrInput `pulumi:"perRequest"`
}

func (RouteSpecGrpcRouteTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteTimeout)(nil)).Elem()
}

func (i RouteSpecGrpcRouteTimeoutArgs) ToRouteSpecGrpcRouteTimeoutOutput() RouteSpecGrpcRouteTimeoutOutput {
	return i.ToRouteSpecGrpcRouteTimeoutOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteTimeoutArgs) ToRouteSpecGrpcRouteTimeoutOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutOutput)
}

func (i RouteSpecGrpcRouteTimeoutArgs) ToRouteSpecGrpcRouteTimeoutPtrOutput() RouteSpecGrpcRouteTimeoutPtrOutput {
	return i.ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteTimeoutArgs) ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutOutput).ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteTimeoutPtrInput is an input type that accepts RouteSpecGrpcRouteTimeoutArgs, RouteSpecGrpcRouteTimeoutPtr and RouteSpecGrpcRouteTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteTimeoutPtrInput` via:
//
//          RouteSpecGrpcRouteTimeoutArgs{...}
//
//  or:
//
//          nil
type RouteSpecGrpcRouteTimeoutPtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteTimeoutPtrOutput() RouteSpecGrpcRouteTimeoutPtrOutput
	ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(context.Context) RouteSpecGrpcRouteTimeoutPtrOutput
}

type routeSpecGrpcRouteTimeoutPtrType RouteSpecGrpcRouteTimeoutArgs

func RouteSpecGrpcRouteTimeoutPtr(v *RouteSpecGrpcRouteTimeoutArgs) RouteSpecGrpcRouteTimeoutPtrInput {
	return (*routeSpecGrpcRouteTimeoutPtrType)(v)
}

func (*routeSpecGrpcRouteTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteTimeout)(nil)).Elem()
}

func (i *routeSpecGrpcRouteTimeoutPtrType) ToRouteSpecGrpcRouteTimeoutPtrOutput() RouteSpecGrpcRouteTimeoutPtrOutput {
	return i.ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteTimeoutPtrType) ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutPtrOutput)
}

type RouteSpecGrpcRouteTimeoutOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteTimeout)(nil)).Elem()
}

func (o RouteSpecGrpcRouteTimeoutOutput) ToRouteSpecGrpcRouteTimeoutOutput() RouteSpecGrpcRouteTimeoutOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutOutput) ToRouteSpecGrpcRouteTimeoutOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutOutput) ToRouteSpecGrpcRouteTimeoutPtrOutput() RouteSpecGrpcRouteTimeoutPtrOutput {
	return o.ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteTimeoutOutput) ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteTimeout) *RouteSpecGrpcRouteTimeout {
		return &v
	}).(RouteSpecGrpcRouteTimeoutPtrOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecGrpcRouteTimeoutOutput) Idle() RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteTimeout) *RouteSpecGrpcRouteTimeoutIdle { return v.Idle }).(RouteSpecGrpcRouteTimeoutIdlePtrOutput)
}

// The per request timeout.
func (o RouteSpecGrpcRouteTimeoutOutput) PerRequest() RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteTimeout) *RouteSpecGrpcRouteTimeoutPerRequest { return v.PerRequest }).(RouteSpecGrpcRouteTimeoutPerRequestPtrOutput)
}

type RouteSpecGrpcRouteTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteTimeout)(nil)).Elem()
}

func (o RouteSpecGrpcRouteTimeoutPtrOutput) ToRouteSpecGrpcRouteTimeoutPtrOutput() RouteSpecGrpcRouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutPtrOutput) ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutPtrOutput) Elem() RouteSpecGrpcRouteTimeoutOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeout) RouteSpecGrpcRouteTimeout {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteTimeout
		return ret
	}).(RouteSpecGrpcRouteTimeoutOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecGrpcRouteTimeoutPtrOutput) Idle() RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeout) *RouteSpecGrpcRouteTimeoutIdle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(RouteSpecGrpcRouteTimeoutIdlePtrOutput)
}

// The per request timeout.
func (o RouteSpecGrpcRouteTimeoutPtrOutput) PerRequest() RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeout) *RouteSpecGrpcRouteTimeoutPerRequest {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(RouteSpecGrpcRouteTimeoutPerRequestPtrOutput)
}

type RouteSpecGrpcRouteTimeoutIdle struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// RouteSpecGrpcRouteTimeoutIdleInput is an input type that accepts RouteSpecGrpcRouteTimeoutIdleArgs and RouteSpecGrpcRouteTimeoutIdleOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteTimeoutIdleInput` via:
//
//          RouteSpecGrpcRouteTimeoutIdleArgs{...}
type RouteSpecGrpcRouteTimeoutIdleInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteTimeoutIdleOutput() RouteSpecGrpcRouteTimeoutIdleOutput
	ToRouteSpecGrpcRouteTimeoutIdleOutputWithContext(context.Context) RouteSpecGrpcRouteTimeoutIdleOutput
}

type RouteSpecGrpcRouteTimeoutIdleArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecGrpcRouteTimeoutIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteTimeoutIdle)(nil)).Elem()
}

func (i RouteSpecGrpcRouteTimeoutIdleArgs) ToRouteSpecGrpcRouteTimeoutIdleOutput() RouteSpecGrpcRouteTimeoutIdleOutput {
	return i.ToRouteSpecGrpcRouteTimeoutIdleOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteTimeoutIdleArgs) ToRouteSpecGrpcRouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutIdleOutput)
}

func (i RouteSpecGrpcRouteTimeoutIdleArgs) ToRouteSpecGrpcRouteTimeoutIdlePtrOutput() RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteTimeoutIdleArgs) ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutIdleOutput).ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteTimeoutIdlePtrInput is an input type that accepts RouteSpecGrpcRouteTimeoutIdleArgs, RouteSpecGrpcRouteTimeoutIdlePtr and RouteSpecGrpcRouteTimeoutIdlePtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteTimeoutIdlePtrInput` via:
//
//          RouteSpecGrpcRouteTimeoutIdleArgs{...}
//
//  or:
//
//          nil
type RouteSpecGrpcRouteTimeoutIdlePtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteTimeoutIdlePtrOutput() RouteSpecGrpcRouteTimeoutIdlePtrOutput
	ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(context.Context) RouteSpecGrpcRouteTimeoutIdlePtrOutput
}

type routeSpecGrpcRouteTimeoutIdlePtrType RouteSpecGrpcRouteTimeoutIdleArgs

func RouteSpecGrpcRouteTimeoutIdlePtr(v *RouteSpecGrpcRouteTimeoutIdleArgs) RouteSpecGrpcRouteTimeoutIdlePtrInput {
	return (*routeSpecGrpcRouteTimeoutIdlePtrType)(v)
}

func (*routeSpecGrpcRouteTimeoutIdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteTimeoutIdle)(nil)).Elem()
}

func (i *routeSpecGrpcRouteTimeoutIdlePtrType) ToRouteSpecGrpcRouteTimeoutIdlePtrOutput() RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteTimeoutIdlePtrType) ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutIdlePtrOutput)
}

type RouteSpecGrpcRouteTimeoutIdleOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteTimeoutIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecGrpcRouteTimeoutIdleOutput) ToRouteSpecGrpcRouteTimeoutIdleOutput() RouteSpecGrpcRouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutIdleOutput) ToRouteSpecGrpcRouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutIdleOutput) ToRouteSpecGrpcRouteTimeoutIdlePtrOutput() RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return o.ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteTimeoutIdleOutput) ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteTimeoutIdle) *RouteSpecGrpcRouteTimeoutIdle {
		return &v
	}).(RouteSpecGrpcRouteTimeoutIdlePtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o RouteSpecGrpcRouteTimeoutIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteTimeoutIdle) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o RouteSpecGrpcRouteTimeoutIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteTimeoutIdle) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecGrpcRouteTimeoutIdlePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteTimeoutIdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecGrpcRouteTimeoutIdlePtrOutput) ToRouteSpecGrpcRouteTimeoutIdlePtrOutput() RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutIdlePtrOutput) ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutIdlePtrOutput) Elem() RouteSpecGrpcRouteTimeoutIdleOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeoutIdle) RouteSpecGrpcRouteTimeoutIdle {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteTimeoutIdle
		return ret
	}).(RouteSpecGrpcRouteTimeoutIdleOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o RouteSpecGrpcRouteTimeoutIdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeoutIdle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o RouteSpecGrpcRouteTimeoutIdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeoutIdle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecGrpcRouteTimeoutPerRequest struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// RouteSpecGrpcRouteTimeoutPerRequestInput is an input type that accepts RouteSpecGrpcRouteTimeoutPerRequestArgs and RouteSpecGrpcRouteTimeoutPerRequestOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteTimeoutPerRequestInput` via:
//
//          RouteSpecGrpcRouteTimeoutPerRequestArgs{...}
type RouteSpecGrpcRouteTimeoutPerRequestInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteTimeoutPerRequestOutput() RouteSpecGrpcRouteTimeoutPerRequestOutput
	ToRouteSpecGrpcRouteTimeoutPerRequestOutputWithContext(context.Context) RouteSpecGrpcRouteTimeoutPerRequestOutput
}

type RouteSpecGrpcRouteTimeoutPerRequestArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecGrpcRouteTimeoutPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteTimeoutPerRequest)(nil)).Elem()
}

func (i RouteSpecGrpcRouteTimeoutPerRequestArgs) ToRouteSpecGrpcRouteTimeoutPerRequestOutput() RouteSpecGrpcRouteTimeoutPerRequestOutput {
	return i.ToRouteSpecGrpcRouteTimeoutPerRequestOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteTimeoutPerRequestArgs) ToRouteSpecGrpcRouteTimeoutPerRequestOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutPerRequestOutput)
}

func (i RouteSpecGrpcRouteTimeoutPerRequestArgs) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutput() RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return i.ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteTimeoutPerRequestArgs) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutPerRequestOutput).ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteTimeoutPerRequestPtrInput is an input type that accepts RouteSpecGrpcRouteTimeoutPerRequestArgs, RouteSpecGrpcRouteTimeoutPerRequestPtr and RouteSpecGrpcRouteTimeoutPerRequestPtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteTimeoutPerRequestPtrInput` via:
//
//          RouteSpecGrpcRouteTimeoutPerRequestArgs{...}
//
//  or:
//
//          nil
type RouteSpecGrpcRouteTimeoutPerRequestPtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutput() RouteSpecGrpcRouteTimeoutPerRequestPtrOutput
	ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(context.Context) RouteSpecGrpcRouteTimeoutPerRequestPtrOutput
}

type routeSpecGrpcRouteTimeoutPerRequestPtrType RouteSpecGrpcRouteTimeoutPerRequestArgs

func RouteSpecGrpcRouteTimeoutPerRequestPtr(v *RouteSpecGrpcRouteTimeoutPerRequestArgs) RouteSpecGrpcRouteTimeoutPerRequestPtrInput {
	return (*routeSpecGrpcRouteTimeoutPerRequestPtrType)(v)
}

func (*routeSpecGrpcRouteTimeoutPerRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteTimeoutPerRequest)(nil)).Elem()
}

func (i *routeSpecGrpcRouteTimeoutPerRequestPtrType) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutput() RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return i.ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteTimeoutPerRequestPtrType) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutPerRequestPtrOutput)
}

type RouteSpecGrpcRouteTimeoutPerRequestOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteTimeoutPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteTimeoutPerRequest)(nil)).Elem()
}

func (o RouteSpecGrpcRouteTimeoutPerRequestOutput) ToRouteSpecGrpcRouteTimeoutPerRequestOutput() RouteSpecGrpcRouteTimeoutPerRequestOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutPerRequestOutput) ToRouteSpecGrpcRouteTimeoutPerRequestOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPerRequestOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutPerRequestOutput) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutput() RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return o.ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteTimeoutPerRequestOutput) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteTimeoutPerRequest) *RouteSpecGrpcRouteTimeoutPerRequest {
		return &v
	}).(RouteSpecGrpcRouteTimeoutPerRequestPtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o RouteSpecGrpcRouteTimeoutPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteTimeoutPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o RouteSpecGrpcRouteTimeoutPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteTimeoutPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecGrpcRouteTimeoutPerRequestPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteTimeoutPerRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteTimeoutPerRequest)(nil)).Elem()
}

func (o RouteSpecGrpcRouteTimeoutPerRequestPtrOutput) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutput() RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutPerRequestPtrOutput) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutPerRequestPtrOutput) Elem() RouteSpecGrpcRouteTimeoutPerRequestOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeoutPerRequest) RouteSpecGrpcRouteTimeoutPerRequest {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteTimeoutPerRequest
		return ret
	}).(RouteSpecGrpcRouteTimeoutPerRequestOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o RouteSpecGrpcRouteTimeoutPerRequestPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeoutPerRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o RouteSpecGrpcRouteTimeoutPerRequestPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeoutPerRequest) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttp2Route struct {
	// The action to take if a match is determined.
	Action RouteSpecHttp2RouteAction `pulumi:"action"`
	// The criteria for determining an gRPC request match.
	Match RouteSpecHttp2RouteMatch `pulumi:"match"`
	// The retry policy.
	RetryPolicy *RouteSpecHttp2RouteRetryPolicy `pulumi:"retryPolicy"`
	// The types of timeouts.
	Timeout *RouteSpecHttp2RouteTimeout `pulumi:"timeout"`
}

// RouteSpecHttp2RouteInput is an input type that accepts RouteSpecHttp2RouteArgs and RouteSpecHttp2RouteOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteInput` via:
//
//          RouteSpecHttp2RouteArgs{...}
type RouteSpecHttp2RouteInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteOutput() RouteSpecHttp2RouteOutput
	ToRouteSpecHttp2RouteOutputWithContext(context.Context) RouteSpecHttp2RouteOutput
}

type RouteSpecHttp2RouteArgs struct {
	// The action to take if a match is determined.
	Action RouteSpecHttp2RouteActionInput `pulumi:"action"`
	// The criteria for determining an gRPC request match.
	Match RouteSpecHttp2RouteMatchInput `pulumi:"match"`
	// The retry policy.
	RetryPolicy RouteSpecHttp2RouteRetryPolicyPtrInput `pulumi:"retryPolicy"`
	// The types of timeouts.
	Timeout RouteSpecHttp2RouteTimeoutPtrInput `pulumi:"timeout"`
}

func (RouteSpecHttp2RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2Route)(nil)).Elem()
}

func (i RouteSpecHttp2RouteArgs) ToRouteSpecHttp2RouteOutput() RouteSpecHttp2RouteOutput {
	return i.ToRouteSpecHttp2RouteOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteArgs) ToRouteSpecHttp2RouteOutputWithContext(ctx context.Context) RouteSpecHttp2RouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteOutput)
}

func (i RouteSpecHttp2RouteArgs) ToRouteSpecHttp2RoutePtrOutput() RouteSpecHttp2RoutePtrOutput {
	return i.ToRouteSpecHttp2RoutePtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteArgs) ToRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteOutput).ToRouteSpecHttp2RoutePtrOutputWithContext(ctx)
}

// RouteSpecHttp2RoutePtrInput is an input type that accepts RouteSpecHttp2RouteArgs, RouteSpecHttp2RoutePtr and RouteSpecHttp2RoutePtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RoutePtrInput` via:
//
//          RouteSpecHttp2RouteArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttp2RoutePtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RoutePtrOutput() RouteSpecHttp2RoutePtrOutput
	ToRouteSpecHttp2RoutePtrOutputWithContext(context.Context) RouteSpecHttp2RoutePtrOutput
}

type routeSpecHttp2RoutePtrType RouteSpecHttp2RouteArgs

func RouteSpecHttp2RoutePtr(v *RouteSpecHttp2RouteArgs) RouteSpecHttp2RoutePtrInput {
	return (*routeSpecHttp2RoutePtrType)(v)
}

func (*routeSpecHttp2RoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2Route)(nil)).Elem()
}

func (i *routeSpecHttp2RoutePtrType) ToRouteSpecHttp2RoutePtrOutput() RouteSpecHttp2RoutePtrOutput {
	return i.ToRouteSpecHttp2RoutePtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RoutePtrType) ToRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RoutePtrOutput)
}

type RouteSpecHttp2RouteOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2Route)(nil)).Elem()
}

func (o RouteSpecHttp2RouteOutput) ToRouteSpecHttp2RouteOutput() RouteSpecHttp2RouteOutput {
	return o
}

func (o RouteSpecHttp2RouteOutput) ToRouteSpecHttp2RouteOutputWithContext(ctx context.Context) RouteSpecHttp2RouteOutput {
	return o
}

func (o RouteSpecHttp2RouteOutput) ToRouteSpecHttp2RoutePtrOutput() RouteSpecHttp2RoutePtrOutput {
	return o.ToRouteSpecHttp2RoutePtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteOutput) ToRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2Route) *RouteSpecHttp2Route {
		return &v
	}).(RouteSpecHttp2RoutePtrOutput)
}

// The action to take if a match is determined.
func (o RouteSpecHttp2RouteOutput) Action() RouteSpecHttp2RouteActionOutput {
	return o.ApplyT(func(v RouteSpecHttp2Route) RouteSpecHttp2RouteAction { return v.Action }).(RouteSpecHttp2RouteActionOutput)
}

// The criteria for determining an gRPC request match.
func (o RouteSpecHttp2RouteOutput) Match() RouteSpecHttp2RouteMatchOutput {
	return o.ApplyT(func(v RouteSpecHttp2Route) RouteSpecHttp2RouteMatch { return v.Match }).(RouteSpecHttp2RouteMatchOutput)
}

// The retry policy.
func (o RouteSpecHttp2RouteOutput) RetryPolicy() RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2Route) *RouteSpecHttp2RouteRetryPolicy { return v.RetryPolicy }).(RouteSpecHttp2RouteRetryPolicyPtrOutput)
}

// The types of timeouts.
func (o RouteSpecHttp2RouteOutput) Timeout() RouteSpecHttp2RouteTimeoutPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2Route) *RouteSpecHttp2RouteTimeout { return v.Timeout }).(RouteSpecHttp2RouteTimeoutPtrOutput)
}

type RouteSpecHttp2RoutePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2Route)(nil)).Elem()
}

func (o RouteSpecHttp2RoutePtrOutput) ToRouteSpecHttp2RoutePtrOutput() RouteSpecHttp2RoutePtrOutput {
	return o
}

func (o RouteSpecHttp2RoutePtrOutput) ToRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RoutePtrOutput {
	return o
}

func (o RouteSpecHttp2RoutePtrOutput) Elem() RouteSpecHttp2RouteOutput {
	return o.ApplyT(func(v *RouteSpecHttp2Route) RouteSpecHttp2Route {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2Route
		return ret
	}).(RouteSpecHttp2RouteOutput)
}

// The action to take if a match is determined.
func (o RouteSpecHttp2RoutePtrOutput) Action() RouteSpecHttp2RouteActionPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2Route) *RouteSpecHttp2RouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(RouteSpecHttp2RouteActionPtrOutput)
}

// The criteria for determining an gRPC request match.
func (o RouteSpecHttp2RoutePtrOutput) Match() RouteSpecHttp2RouteMatchPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2Route) *RouteSpecHttp2RouteMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(RouteSpecHttp2RouteMatchPtrOutput)
}

// The retry policy.
func (o RouteSpecHttp2RoutePtrOutput) RetryPolicy() RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2Route) *RouteSpecHttp2RouteRetryPolicy {
		if v == nil {
			return nil
		}
		return v.RetryPolicy
	}).(RouteSpecHttp2RouteRetryPolicyPtrOutput)
}

// The types of timeouts.
func (o RouteSpecHttp2RoutePtrOutput) Timeout() RouteSpecHttp2RouteTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2Route) *RouteSpecHttp2RouteTimeout {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(RouteSpecHttp2RouteTimeoutPtrOutput)
}

type RouteSpecHttp2RouteAction struct {
	// The targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets []RouteSpecHttp2RouteActionWeightedTarget `pulumi:"weightedTargets"`
}

// RouteSpecHttp2RouteActionInput is an input type that accepts RouteSpecHttp2RouteActionArgs and RouteSpecHttp2RouteActionOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteActionInput` via:
//
//          RouteSpecHttp2RouteActionArgs{...}
type RouteSpecHttp2RouteActionInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteActionOutput() RouteSpecHttp2RouteActionOutput
	ToRouteSpecHttp2RouteActionOutputWithContext(context.Context) RouteSpecHttp2RouteActionOutput
}

type RouteSpecHttp2RouteActionArgs struct {
	// The targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets RouteSpecHttp2RouteActionWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (RouteSpecHttp2RouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteAction)(nil)).Elem()
}

func (i RouteSpecHttp2RouteActionArgs) ToRouteSpecHttp2RouteActionOutput() RouteSpecHttp2RouteActionOutput {
	return i.ToRouteSpecHttp2RouteActionOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteActionArgs) ToRouteSpecHttp2RouteActionOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteActionOutput)
}

func (i RouteSpecHttp2RouteActionArgs) ToRouteSpecHttp2RouteActionPtrOutput() RouteSpecHttp2RouteActionPtrOutput {
	return i.ToRouteSpecHttp2RouteActionPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteActionArgs) ToRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteActionOutput).ToRouteSpecHttp2RouteActionPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteActionPtrInput is an input type that accepts RouteSpecHttp2RouteActionArgs, RouteSpecHttp2RouteActionPtr and RouteSpecHttp2RouteActionPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteActionPtrInput` via:
//
//          RouteSpecHttp2RouteActionArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttp2RouteActionPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteActionPtrOutput() RouteSpecHttp2RouteActionPtrOutput
	ToRouteSpecHttp2RouteActionPtrOutputWithContext(context.Context) RouteSpecHttp2RouteActionPtrOutput
}

type routeSpecHttp2RouteActionPtrType RouteSpecHttp2RouteActionArgs

func RouteSpecHttp2RouteActionPtr(v *RouteSpecHttp2RouteActionArgs) RouteSpecHttp2RouteActionPtrInput {
	return (*routeSpecHttp2RouteActionPtrType)(v)
}

func (*routeSpecHttp2RouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteAction)(nil)).Elem()
}

func (i *routeSpecHttp2RouteActionPtrType) ToRouteSpecHttp2RouteActionPtrOutput() RouteSpecHttp2RouteActionPtrOutput {
	return i.ToRouteSpecHttp2RouteActionPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteActionPtrType) ToRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteActionPtrOutput)
}

type RouteSpecHttp2RouteActionOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteAction)(nil)).Elem()
}

func (o RouteSpecHttp2RouteActionOutput) ToRouteSpecHttp2RouteActionOutput() RouteSpecHttp2RouteActionOutput {
	return o
}

func (o RouteSpecHttp2RouteActionOutput) ToRouteSpecHttp2RouteActionOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionOutput {
	return o
}

func (o RouteSpecHttp2RouteActionOutput) ToRouteSpecHttp2RouteActionPtrOutput() RouteSpecHttp2RouteActionPtrOutput {
	return o.ToRouteSpecHttp2RouteActionPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteActionOutput) ToRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteAction) *RouteSpecHttp2RouteAction {
		return &v
	}).(RouteSpecHttp2RouteActionPtrOutput)
}

// The targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecHttp2RouteActionOutput) WeightedTargets() RouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteAction) []RouteSpecHttp2RouteActionWeightedTarget { return v.WeightedTargets }).(RouteSpecHttp2RouteActionWeightedTargetArrayOutput)
}

type RouteSpecHttp2RouteActionPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteAction)(nil)).Elem()
}

func (o RouteSpecHttp2RouteActionPtrOutput) ToRouteSpecHttp2RouteActionPtrOutput() RouteSpecHttp2RouteActionPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteActionPtrOutput) ToRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteActionPtrOutput) Elem() RouteSpecHttp2RouteActionOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteAction) RouteSpecHttp2RouteAction {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteAction
		return ret
	}).(RouteSpecHttp2RouteActionOutput)
}

// The targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecHttp2RouteActionPtrOutput) WeightedTargets() RouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteAction) []RouteSpecHttp2RouteActionWeightedTarget {
		if v == nil {
			return nil
		}
		return v.WeightedTargets
	}).(RouteSpecHttp2RouteActionWeightedTargetArrayOutput)
}

type RouteSpecHttp2RouteActionWeightedTarget struct {
	// The virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode string `pulumi:"virtualNode"`
	// The relative weight of the weighted target. An integer between 0 and 100.
	Weight int `pulumi:"weight"`
}

// RouteSpecHttp2RouteActionWeightedTargetInput is an input type that accepts RouteSpecHttp2RouteActionWeightedTargetArgs and RouteSpecHttp2RouteActionWeightedTargetOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteActionWeightedTargetInput` via:
//
//          RouteSpecHttp2RouteActionWeightedTargetArgs{...}
type RouteSpecHttp2RouteActionWeightedTargetInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteActionWeightedTargetOutput() RouteSpecHttp2RouteActionWeightedTargetOutput
	ToRouteSpecHttp2RouteActionWeightedTargetOutputWithContext(context.Context) RouteSpecHttp2RouteActionWeightedTargetOutput
}

type RouteSpecHttp2RouteActionWeightedTargetArgs struct {
	// The virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode pulumi.StringInput `pulumi:"virtualNode"`
	// The relative weight of the weighted target. An integer between 0 and 100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (RouteSpecHttp2RouteActionWeightedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecHttp2RouteActionWeightedTargetArgs) ToRouteSpecHttp2RouteActionWeightedTargetOutput() RouteSpecHttp2RouteActionWeightedTargetOutput {
	return i.ToRouteSpecHttp2RouteActionWeightedTargetOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteActionWeightedTargetArgs) ToRouteSpecHttp2RouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionWeightedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteActionWeightedTargetOutput)
}

// RouteSpecHttp2RouteActionWeightedTargetArrayInput is an input type that accepts RouteSpecHttp2RouteActionWeightedTargetArray and RouteSpecHttp2RouteActionWeightedTargetArrayOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteActionWeightedTargetArrayInput` via:
//
//          RouteSpecHttp2RouteActionWeightedTargetArray{ RouteSpecHttp2RouteActionWeightedTargetArgs{...} }
type RouteSpecHttp2RouteActionWeightedTargetArrayInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteActionWeightedTargetArrayOutput() RouteSpecHttp2RouteActionWeightedTargetArrayOutput
	ToRouteSpecHttp2RouteActionWeightedTargetArrayOutputWithContext(context.Context) RouteSpecHttp2RouteActionWeightedTargetArrayOutput
}

type RouteSpecHttp2RouteActionWeightedTargetArray []RouteSpecHttp2RouteActionWeightedTargetInput

func (RouteSpecHttp2RouteActionWeightedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttp2RouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecHttp2RouteActionWeightedTargetArray) ToRouteSpecHttp2RouteActionWeightedTargetArrayOutput() RouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return i.ToRouteSpecHttp2RouteActionWeightedTargetArrayOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteActionWeightedTargetArray) ToRouteSpecHttp2RouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteActionWeightedTargetArrayOutput)
}

type RouteSpecHttp2RouteActionWeightedTargetOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteActionWeightedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecHttp2RouteActionWeightedTargetOutput) ToRouteSpecHttp2RouteActionWeightedTargetOutput() RouteSpecHttp2RouteActionWeightedTargetOutput {
	return o
}

func (o RouteSpecHttp2RouteActionWeightedTargetOutput) ToRouteSpecHttp2RouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionWeightedTargetOutput {
	return o
}

// The virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteActionWeightedTargetOutput) VirtualNode() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteActionWeightedTarget) string { return v.VirtualNode }).(pulumi.StringOutput)
}

// The relative weight of the weighted target. An integer between 0 and 100.
func (o RouteSpecHttp2RouteActionWeightedTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteActionWeightedTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type RouteSpecHttp2RouteActionWeightedTargetArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteActionWeightedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttp2RouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecHttp2RouteActionWeightedTargetArrayOutput) ToRouteSpecHttp2RouteActionWeightedTargetArrayOutput() RouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecHttp2RouteActionWeightedTargetArrayOutput) ToRouteSpecHttp2RouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecHttp2RouteActionWeightedTargetArrayOutput) Index(i pulumi.IntInput) RouteSpecHttp2RouteActionWeightedTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecHttp2RouteActionWeightedTarget {
		return vs[0].([]RouteSpecHttp2RouteActionWeightedTarget)[vs[1].(int)]
	}).(RouteSpecHttp2RouteActionWeightedTargetOutput)
}

type RouteSpecHttp2RouteMatch struct {
	// The client request headers to match on.
	Headers []RouteSpecHttp2RouteMatchHeader `pulumi:"headers"`
	// The client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
	Method *string `pulumi:"method"`
	// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix string `pulumi:"prefix"`
	// The client request header scheme to match on. Valid values: `http`, `https`.
	Scheme *string `pulumi:"scheme"`
}

// RouteSpecHttp2RouteMatchInput is an input type that accepts RouteSpecHttp2RouteMatchArgs and RouteSpecHttp2RouteMatchOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchInput` via:
//
//          RouteSpecHttp2RouteMatchArgs{...}
type RouteSpecHttp2RouteMatchInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchOutput() RouteSpecHttp2RouteMatchOutput
	ToRouteSpecHttp2RouteMatchOutputWithContext(context.Context) RouteSpecHttp2RouteMatchOutput
}

type RouteSpecHttp2RouteMatchArgs struct {
	// The client request headers to match on.
	Headers RouteSpecHttp2RouteMatchHeaderArrayInput `pulumi:"headers"`
	// The client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// The client request header scheme to match on. Valid values: `http`, `https`.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (RouteSpecHttp2RouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (i RouteSpecHttp2RouteMatchArgs) ToRouteSpecHttp2RouteMatchOutput() RouteSpecHttp2RouteMatchOutput {
	return i.ToRouteSpecHttp2RouteMatchOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchArgs) ToRouteSpecHttp2RouteMatchOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchOutput)
}

func (i RouteSpecHttp2RouteMatchArgs) ToRouteSpecHttp2RouteMatchPtrOutput() RouteSpecHttp2RouteMatchPtrOutput {
	return i.ToRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchArgs) ToRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchOutput).ToRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteMatchPtrInput is an input type that accepts RouteSpecHttp2RouteMatchArgs, RouteSpecHttp2RouteMatchPtr and RouteSpecHttp2RouteMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchPtrInput` via:
//
//          RouteSpecHttp2RouteMatchArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttp2RouteMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchPtrOutput() RouteSpecHttp2RouteMatchPtrOutput
	ToRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Context) RouteSpecHttp2RouteMatchPtrOutput
}

type routeSpecHttp2RouteMatchPtrType RouteSpecHttp2RouteMatchArgs

func RouteSpecHttp2RouteMatchPtr(v *RouteSpecHttp2RouteMatchArgs) RouteSpecHttp2RouteMatchPtrInput {
	return (*routeSpecHttp2RouteMatchPtrType)(v)
}

func (*routeSpecHttp2RouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (i *routeSpecHttp2RouteMatchPtrType) ToRouteSpecHttp2RouteMatchPtrOutput() RouteSpecHttp2RouteMatchPtrOutput {
	return i.ToRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteMatchPtrType) ToRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchPtrOutput)
}

type RouteSpecHttp2RouteMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchOutput) ToRouteSpecHttp2RouteMatchOutput() RouteSpecHttp2RouteMatchOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchOutput) ToRouteSpecHttp2RouteMatchOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchOutput) ToRouteSpecHttp2RouteMatchPtrOutput() RouteSpecHttp2RouteMatchPtrOutput {
	return o.ToRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteMatchOutput) ToRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteMatch) *RouteSpecHttp2RouteMatch {
		return &v
	}).(RouteSpecHttp2RouteMatchPtrOutput)
}

// The client request headers to match on.
func (o RouteSpecHttp2RouteMatchOutput) Headers() RouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatch) []RouteSpecHttp2RouteMatchHeader { return v.Headers }).(RouteSpecHttp2RouteMatchHeaderArrayOutput)
}

// The client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
func (o RouteSpecHttp2RouteMatchOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatch) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttp2RouteMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

// The client request header scheme to match on. Valid values: `http`, `https`.
func (o RouteSpecHttp2RouteMatchOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatch) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type RouteSpecHttp2RouteMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchPtrOutput) ToRouteSpecHttp2RouteMatchPtrOutput() RouteSpecHttp2RouteMatchPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchPtrOutput) ToRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchPtrOutput) Elem() RouteSpecHttp2RouteMatchOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatch) RouteSpecHttp2RouteMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteMatch
		return ret
	}).(RouteSpecHttp2RouteMatchOutput)
}

// The client request headers to match on.
func (o RouteSpecHttp2RouteMatchPtrOutput) Headers() RouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatch) []RouteSpecHttp2RouteMatchHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(RouteSpecHttp2RouteMatchHeaderArrayOutput)
}

// The client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
func (o RouteSpecHttp2RouteMatchPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttp2RouteMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatch) *string {
		if v == nil {
			return nil
		}
		return &v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The client request header scheme to match on. Valid values: `http`, `https`.
func (o RouteSpecHttp2RouteMatchPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

type RouteSpecHttp2RouteMatchHeader struct {
	// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
	Invert *bool `pulumi:"invert"`
	// The method and value to match the header value sent with a request. Specify one match method.
	Match *RouteSpecHttp2RouteMatchHeaderMatch `pulumi:"match"`
	// A name for the HTTP header in the client request that will be matched on.
	Name string `pulumi:"name"`
}

// RouteSpecHttp2RouteMatchHeaderInput is an input type that accepts RouteSpecHttp2RouteMatchHeaderArgs and RouteSpecHttp2RouteMatchHeaderOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchHeaderInput` via:
//
//          RouteSpecHttp2RouteMatchHeaderArgs{...}
type RouteSpecHttp2RouteMatchHeaderInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchHeaderOutput() RouteSpecHttp2RouteMatchHeaderOutput
	ToRouteSpecHttp2RouteMatchHeaderOutputWithContext(context.Context) RouteSpecHttp2RouteMatchHeaderOutput
}

type RouteSpecHttp2RouteMatchHeaderArgs struct {
	// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
	Invert pulumi.BoolPtrInput `pulumi:"invert"`
	// The method and value to match the header value sent with a request. Specify one match method.
	Match RouteSpecHttp2RouteMatchHeaderMatchPtrInput `pulumi:"match"`
	// A name for the HTTP header in the client request that will be matched on.
	Name pulumi.StringInput `pulumi:"name"`
}

func (RouteSpecHttp2RouteMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (i RouteSpecHttp2RouteMatchHeaderArgs) ToRouteSpecHttp2RouteMatchHeaderOutput() RouteSpecHttp2RouteMatchHeaderOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchHeaderArgs) ToRouteSpecHttp2RouteMatchHeaderOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderOutput)
}

// RouteSpecHttp2RouteMatchHeaderArrayInput is an input type that accepts RouteSpecHttp2RouteMatchHeaderArray and RouteSpecHttp2RouteMatchHeaderArrayOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchHeaderArrayInput` via:
//
//          RouteSpecHttp2RouteMatchHeaderArray{ RouteSpecHttp2RouteMatchHeaderArgs{...} }
type RouteSpecHttp2RouteMatchHeaderArrayInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchHeaderArrayOutput() RouteSpecHttp2RouteMatchHeaderArrayOutput
	ToRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(context.Context) RouteSpecHttp2RouteMatchHeaderArrayOutput
}

type RouteSpecHttp2RouteMatchHeaderArray []RouteSpecHttp2RouteMatchHeaderInput

func (RouteSpecHttp2RouteMatchHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (i RouteSpecHttp2RouteMatchHeaderArray) ToRouteSpecHttp2RouteMatchHeaderArrayOutput() RouteSpecHttp2RouteMatchHeaderArrayOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchHeaderArray) ToRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderArrayOutput)
}

type RouteSpecHttp2RouteMatchHeaderOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchHeaderOutput) ToRouteSpecHttp2RouteMatchHeaderOutput() RouteSpecHttp2RouteMatchHeaderOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderOutput) ToRouteSpecHttp2RouteMatchHeaderOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderOutput {
	return o
}

// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
func (o RouteSpecHttp2RouteMatchHeaderOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeader) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

// The method and value to match the header value sent with a request. Specify one match method.
func (o RouteSpecHttp2RouteMatchHeaderOutput) Match() RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeader) *RouteSpecHttp2RouteMatchHeaderMatch { return v.Match }).(RouteSpecHttp2RouteMatchHeaderMatchPtrOutput)
}

// A name for the HTTP header in the client request that will be matched on.
func (o RouteSpecHttp2RouteMatchHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeader) string { return v.Name }).(pulumi.StringOutput)
}

type RouteSpecHttp2RouteMatchHeaderArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchHeaderArrayOutput) ToRouteSpecHttp2RouteMatchHeaderArrayOutput() RouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderArrayOutput) ToRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderArrayOutput) Index(i pulumi.IntInput) RouteSpecHttp2RouteMatchHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecHttp2RouteMatchHeader {
		return vs[0].([]RouteSpecHttp2RouteMatchHeader)[vs[1].(int)]
	}).(RouteSpecHttp2RouteMatchHeaderOutput)
}

type RouteSpecHttp2RouteMatchHeaderMatch struct {
	// The value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
	Exact *string `pulumi:"exact"`
	// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix *string `pulumi:"prefix"`
	// The object that specifies the range of numbers that the value sent by the client must be included in.
	Range *RouteSpecHttp2RouteMatchHeaderMatchRange `pulumi:"range"`
	// The value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
	Regex *string `pulumi:"regex"`
	// The value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
	Suffix *string `pulumi:"suffix"`
}

// RouteSpecHttp2RouteMatchHeaderMatchInput is an input type that accepts RouteSpecHttp2RouteMatchHeaderMatchArgs and RouteSpecHttp2RouteMatchHeaderMatchOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchHeaderMatchInput` via:
//
//          RouteSpecHttp2RouteMatchHeaderMatchArgs{...}
type RouteSpecHttp2RouteMatchHeaderMatchInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchHeaderMatchOutput() RouteSpecHttp2RouteMatchHeaderMatchOutput
	ToRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(context.Context) RouteSpecHttp2RouteMatchHeaderMatchOutput
}

type RouteSpecHttp2RouteMatchHeaderMatchArgs struct {
	// The value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The object that specifies the range of numbers that the value sent by the client must be included in.
	Range RouteSpecHttp2RouteMatchHeaderMatchRangePtrInput `pulumi:"range"`
	// The value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// The value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (RouteSpecHttp2RouteMatchHeaderMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (i RouteSpecHttp2RouteMatchHeaderMatchArgs) ToRouteSpecHttp2RouteMatchHeaderMatchOutput() RouteSpecHttp2RouteMatchHeaderMatchOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchHeaderMatchArgs) ToRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderMatchOutput)
}

func (i RouteSpecHttp2RouteMatchHeaderMatchArgs) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchHeaderMatchArgs) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderMatchOutput).ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteMatchHeaderMatchPtrInput is an input type that accepts RouteSpecHttp2RouteMatchHeaderMatchArgs, RouteSpecHttp2RouteMatchHeaderMatchPtr and RouteSpecHttp2RouteMatchHeaderMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchHeaderMatchPtrInput` via:
//
//          RouteSpecHttp2RouteMatchHeaderMatchArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttp2RouteMatchHeaderMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() RouteSpecHttp2RouteMatchHeaderMatchPtrOutput
	ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(context.Context) RouteSpecHttp2RouteMatchHeaderMatchPtrOutput
}

type routeSpecHttp2RouteMatchHeaderMatchPtrType RouteSpecHttp2RouteMatchHeaderMatchArgs

func RouteSpecHttp2RouteMatchHeaderMatchPtr(v *RouteSpecHttp2RouteMatchHeaderMatchArgs) RouteSpecHttp2RouteMatchHeaderMatchPtrInput {
	return (*routeSpecHttp2RouteMatchHeaderMatchPtrType)(v)
}

func (*routeSpecHttp2RouteMatchHeaderMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (i *routeSpecHttp2RouteMatchHeaderMatchPtrType) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteMatchHeaderMatchPtrType) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderMatchPtrOutput)
}

type RouteSpecHttp2RouteMatchHeaderMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchHeaderMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) ToRouteSpecHttp2RouteMatchHeaderMatchOutput() RouteSpecHttp2RouteMatchHeaderMatchOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) ToRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o.ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteMatchHeaderMatch) *RouteSpecHttp2RouteMatchHeaderMatch {
		return &v
	}).(RouteSpecHttp2RouteMatchHeaderMatchPtrOutput)
}

// The value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeaderMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeaderMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The object that specifies the range of numbers that the value sent by the client must be included in.
func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) Range() RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeaderMatch) *RouteSpecHttp2RouteMatchHeaderMatchRange { return v.Range }).(RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput)
}

// The value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeaderMatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// The value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeaderMatch) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type RouteSpecHttp2RouteMatchHeaderMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Elem() RouteSpecHttp2RouteMatchHeaderMatchOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatch) RouteSpecHttp2RouteMatchHeaderMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteMatchHeaderMatch
		return ret
	}).(RouteSpecHttp2RouteMatchHeaderMatchOutput)
}

// The value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The object that specifies the range of numbers that the value sent by the client must be included in.
func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Range() RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatch) *RouteSpecHttp2RouteMatchHeaderMatchRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput)
}

// The value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// The value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type RouteSpecHttp2RouteMatchHeaderMatchRange struct {
	// The end of the range.
	End int `pulumi:"end"`
	// The start of the range.
	Start int `pulumi:"start"`
}

// RouteSpecHttp2RouteMatchHeaderMatchRangeInput is an input type that accepts RouteSpecHttp2RouteMatchHeaderMatchRangeArgs and RouteSpecHttp2RouteMatchHeaderMatchRangeOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchHeaderMatchRangeInput` via:
//
//          RouteSpecHttp2RouteMatchHeaderMatchRangeArgs{...}
type RouteSpecHttp2RouteMatchHeaderMatchRangeInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() RouteSpecHttp2RouteMatchHeaderMatchRangeOutput
	ToRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangeOutput
}

type RouteSpecHttp2RouteMatchHeaderMatchRangeArgs struct {
	// The end of the range.
	End pulumi.IntInput `pulumi:"end"`
	// The start of the range.
	Start pulumi.IntInput `pulumi:"start"`
}

func (RouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i RouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() RouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderMatchRangeOutput)
}

func (i RouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderMatchRangeOutput).ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteMatchHeaderMatchRangePtrInput is an input type that accepts RouteSpecHttp2RouteMatchHeaderMatchRangeArgs, RouteSpecHttp2RouteMatchHeaderMatchRangePtr and RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchHeaderMatchRangePtrInput` via:
//
//          RouteSpecHttp2RouteMatchHeaderMatchRangeArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttp2RouteMatchHeaderMatchRangePtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput
	ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput
}

type routeSpecHttp2RouteMatchHeaderMatchRangePtrType RouteSpecHttp2RouteMatchHeaderMatchRangeArgs

func RouteSpecHttp2RouteMatchHeaderMatchRangePtr(v *RouteSpecHttp2RouteMatchHeaderMatchRangeArgs) RouteSpecHttp2RouteMatchHeaderMatchRangePtrInput {
	return (*routeSpecHttp2RouteMatchHeaderMatchRangePtrType)(v)
}

func (*routeSpecHttp2RouteMatchHeaderMatchRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i *routeSpecHttp2RouteMatchHeaderMatchRangePtrType) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteMatchHeaderMatchRangePtrType) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput)
}

type RouteSpecHttp2RouteMatchHeaderMatchRangeOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() RouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o.ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteMatchHeaderMatchRange) *RouteSpecHttp2RouteMatchHeaderMatchRange {
		return &v
	}).(RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput)
}

// The end of the range.
func (o RouteSpecHttp2RouteMatchHeaderMatchRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeaderMatchRange) int { return v.End }).(pulumi.IntOutput)
}

// The start of the range.
func (o RouteSpecHttp2RouteMatchHeaderMatchRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeaderMatchRange) int { return v.Start }).(pulumi.IntOutput)
}

type RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) Elem() RouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatchRange) RouteSpecHttp2RouteMatchHeaderMatchRange {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteMatchHeaderMatchRange
		return ret
	}).(RouteSpecHttp2RouteMatchHeaderMatchRangeOutput)
}

// The end of the range.
func (o RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.IntPtrOutput)
}

// The start of the range.
func (o RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttp2RouteRetryPolicy struct {
	// List of HTTP retry events.
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	HttpRetryEvents []string `pulumi:"httpRetryEvents"`
	// The maximum number of retries.
	MaxRetries int `pulumi:"maxRetries"`
	// The per-retry timeout.
	PerRetryTimeout RouteSpecHttp2RouteRetryPolicyPerRetryTimeout `pulumi:"perRetryTimeout"`
	// List of TCP retry events. The only valid value is `connection-error`.
	TcpRetryEvents []string `pulumi:"tcpRetryEvents"`
}

// RouteSpecHttp2RouteRetryPolicyInput is an input type that accepts RouteSpecHttp2RouteRetryPolicyArgs and RouteSpecHttp2RouteRetryPolicyOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteRetryPolicyInput` via:
//
//          RouteSpecHttp2RouteRetryPolicyArgs{...}
type RouteSpecHttp2RouteRetryPolicyInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteRetryPolicyOutput() RouteSpecHttp2RouteRetryPolicyOutput
	ToRouteSpecHttp2RouteRetryPolicyOutputWithContext(context.Context) RouteSpecHttp2RouteRetryPolicyOutput
}

type RouteSpecHttp2RouteRetryPolicyArgs struct {
	// List of HTTP retry events.
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	HttpRetryEvents pulumi.StringArrayInput `pulumi:"httpRetryEvents"`
	// The maximum number of retries.
	MaxRetries pulumi.IntInput `pulumi:"maxRetries"`
	// The per-retry timeout.
	PerRetryTimeout RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput `pulumi:"perRetryTimeout"`
	// List of TCP retry events. The only valid value is `connection-error`.
	TcpRetryEvents pulumi.StringArrayInput `pulumi:"tcpRetryEvents"`
}

func (RouteSpecHttp2RouteRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicy)(nil)).Elem()
}

func (i RouteSpecHttp2RouteRetryPolicyArgs) ToRouteSpecHttp2RouteRetryPolicyOutput() RouteSpecHttp2RouteRetryPolicyOutput {
	return i.ToRouteSpecHttp2RouteRetryPolicyOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteRetryPolicyArgs) ToRouteSpecHttp2RouteRetryPolicyOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteRetryPolicyOutput)
}

func (i RouteSpecHttp2RouteRetryPolicyArgs) ToRouteSpecHttp2RouteRetryPolicyPtrOutput() RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return i.ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteRetryPolicyArgs) ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteRetryPolicyOutput).ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteRetryPolicyPtrInput is an input type that accepts RouteSpecHttp2RouteRetryPolicyArgs, RouteSpecHttp2RouteRetryPolicyPtr and RouteSpecHttp2RouteRetryPolicyPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteRetryPolicyPtrInput` via:
//
//          RouteSpecHttp2RouteRetryPolicyArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttp2RouteRetryPolicyPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteRetryPolicyPtrOutput() RouteSpecHttp2RouteRetryPolicyPtrOutput
	ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(context.Context) RouteSpecHttp2RouteRetryPolicyPtrOutput
}

type routeSpecHttp2RouteRetryPolicyPtrType RouteSpecHttp2RouteRetryPolicyArgs

func RouteSpecHttp2RouteRetryPolicyPtr(v *RouteSpecHttp2RouteRetryPolicyArgs) RouteSpecHttp2RouteRetryPolicyPtrInput {
	return (*routeSpecHttp2RouteRetryPolicyPtrType)(v)
}

func (*routeSpecHttp2RouteRetryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteRetryPolicy)(nil)).Elem()
}

func (i *routeSpecHttp2RouteRetryPolicyPtrType) ToRouteSpecHttp2RouteRetryPolicyPtrOutput() RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return i.ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteRetryPolicyPtrType) ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteRetryPolicyPtrOutput)
}

type RouteSpecHttp2RouteRetryPolicyOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicy)(nil)).Elem()
}

func (o RouteSpecHttp2RouteRetryPolicyOutput) ToRouteSpecHttp2RouteRetryPolicyOutput() RouteSpecHttp2RouteRetryPolicyOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyOutput) ToRouteSpecHttp2RouteRetryPolicyOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyOutput) ToRouteSpecHttp2RouteRetryPolicyPtrOutput() RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return o.ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteRetryPolicyOutput) ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteRetryPolicy) *RouteSpecHttp2RouteRetryPolicy {
		return &v
	}).(RouteSpecHttp2RouteRetryPolicyPtrOutput)
}

// List of HTTP retry events.
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
func (o RouteSpecHttp2RouteRetryPolicyOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteRetryPolicy) []string { return v.HttpRetryEvents }).(pulumi.StringArrayOutput)
}

// The maximum number of retries.
func (o RouteSpecHttp2RouteRetryPolicyOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteRetryPolicy) int { return v.MaxRetries }).(pulumi.IntOutput)
}

// The per-retry timeout.
func (o RouteSpecHttp2RouteRetryPolicyOutput) PerRetryTimeout() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteRetryPolicy) RouteSpecHttp2RouteRetryPolicyPerRetryTimeout {
		return v.PerRetryTimeout
	}).(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput)
}

// List of TCP retry events. The only valid value is `connection-error`.
func (o RouteSpecHttp2RouteRetryPolicyOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteRetryPolicy) []string { return v.TcpRetryEvents }).(pulumi.StringArrayOutput)
}

type RouteSpecHttp2RouteRetryPolicyPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteRetryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteRetryPolicy)(nil)).Elem()
}

func (o RouteSpecHttp2RouteRetryPolicyPtrOutput) ToRouteSpecHttp2RouteRetryPolicyPtrOutput() RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyPtrOutput) ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyPtrOutput) Elem() RouteSpecHttp2RouteRetryPolicyOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicy) RouteSpecHttp2RouteRetryPolicy {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteRetryPolicy
		return ret
	}).(RouteSpecHttp2RouteRetryPolicyOutput)
}

// List of HTTP retry events.
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
func (o RouteSpecHttp2RouteRetryPolicyPtrOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.HttpRetryEvents
	}).(pulumi.StringArrayOutput)
}

// The maximum number of retries.
func (o RouteSpecHttp2RouteRetryPolicyPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// The per-retry timeout.
func (o RouteSpecHttp2RouteRetryPolicyPtrOutput) PerRetryTimeout() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicy) *RouteSpecHttp2RouteRetryPolicyPerRetryTimeout {
		if v == nil {
			return nil
		}
		return &v.PerRetryTimeout
	}).(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput)
}

// List of TCP retry events. The only valid value is `connection-error`.
func (o RouteSpecHttp2RouteRetryPolicyPtrOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.TcpRetryEvents
	}).(pulumi.StringArrayOutput)
}

type RouteSpecHttp2RouteRetryPolicyPerRetryTimeout struct {
	// Retry unit. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Retry value.
	Value int `pulumi:"value"`
}

// RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput is an input type that accepts RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs and RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput` via:
//
//          RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs{...}
type RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput
	ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput
}

type RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs struct {
	// Retry unit. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Retry value.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return i.ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput)
}

func (i RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return i.ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput).ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrInput is an input type that accepts RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs, RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtr and RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrInput` via:
//
//          RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput
	ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput
}

type routeSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrType RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs

func RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtr(v *RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrInput {
	return (*routeSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrType)(v)
}

func (*routeSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i *routeSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrType) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return i.ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrType) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput)
}

type RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteRetryPolicyPerRetryTimeout) *RouteSpecHttp2RouteRetryPolicyPerRetryTimeout {
		return &v
	}).(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput)
}

// Retry unit. Valid values: `ms`, `s`.
func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteRetryPolicyPerRetryTimeout) string { return v.Unit }).(pulumi.StringOutput)
}

// Retry value.
func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteRetryPolicyPerRetryTimeout) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput) Elem() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicyPerRetryTimeout) RouteSpecHttp2RouteRetryPolicyPerRetryTimeout {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteRetryPolicyPerRetryTimeout
		return ret
	}).(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput)
}

// Retry unit. Valid values: `ms`, `s`.
func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicyPerRetryTimeout) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Retry value.
func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicyPerRetryTimeout) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttp2RouteTimeout struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *RouteSpecHttp2RouteTimeoutIdle `pulumi:"idle"`
	// The per request timeout.
	PerRequest *RouteSpecHttp2RouteTimeoutPerRequest `pulumi:"perRequest"`
}

// RouteSpecHttp2RouteTimeoutInput is an input type that accepts RouteSpecHttp2RouteTimeoutArgs and RouteSpecHttp2RouteTimeoutOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteTimeoutInput` via:
//
//          RouteSpecHttp2RouteTimeoutArgs{...}
type RouteSpecHttp2RouteTimeoutInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteTimeoutOutput() RouteSpecHttp2RouteTimeoutOutput
	ToRouteSpecHttp2RouteTimeoutOutputWithContext(context.Context) RouteSpecHttp2RouteTimeoutOutput
}

type RouteSpecHttp2RouteTimeoutArgs struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle RouteSpecHttp2RouteTimeoutIdlePtrInput `pulumi:"idle"`
	// The per request timeout.
	PerRequest RouteSpecHttp2RouteTimeoutPerRequestPtrInput `pulumi:"perRequest"`
}

func (RouteSpecHttp2RouteTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteTimeout)(nil)).Elem()
}

func (i RouteSpecHttp2RouteTimeoutArgs) ToRouteSpecHttp2RouteTimeoutOutput() RouteSpecHttp2RouteTimeoutOutput {
	return i.ToRouteSpecHttp2RouteTimeoutOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteTimeoutArgs) ToRouteSpecHttp2RouteTimeoutOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutOutput)
}

func (i RouteSpecHttp2RouteTimeoutArgs) ToRouteSpecHttp2RouteTimeoutPtrOutput() RouteSpecHttp2RouteTimeoutPtrOutput {
	return i.ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteTimeoutArgs) ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutOutput).ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteTimeoutPtrInput is an input type that accepts RouteSpecHttp2RouteTimeoutArgs, RouteSpecHttp2RouteTimeoutPtr and RouteSpecHttp2RouteTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteTimeoutPtrInput` via:
//
//          RouteSpecHttp2RouteTimeoutArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttp2RouteTimeoutPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteTimeoutPtrOutput() RouteSpecHttp2RouteTimeoutPtrOutput
	ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(context.Context) RouteSpecHttp2RouteTimeoutPtrOutput
}

type routeSpecHttp2RouteTimeoutPtrType RouteSpecHttp2RouteTimeoutArgs

func RouteSpecHttp2RouteTimeoutPtr(v *RouteSpecHttp2RouteTimeoutArgs) RouteSpecHttp2RouteTimeoutPtrInput {
	return (*routeSpecHttp2RouteTimeoutPtrType)(v)
}

func (*routeSpecHttp2RouteTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteTimeout)(nil)).Elem()
}

func (i *routeSpecHttp2RouteTimeoutPtrType) ToRouteSpecHttp2RouteTimeoutPtrOutput() RouteSpecHttp2RouteTimeoutPtrOutput {
	return i.ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteTimeoutPtrType) ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutPtrOutput)
}

type RouteSpecHttp2RouteTimeoutOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteTimeout)(nil)).Elem()
}

func (o RouteSpecHttp2RouteTimeoutOutput) ToRouteSpecHttp2RouteTimeoutOutput() RouteSpecHttp2RouteTimeoutOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutOutput) ToRouteSpecHttp2RouteTimeoutOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutOutput) ToRouteSpecHttp2RouteTimeoutPtrOutput() RouteSpecHttp2RouteTimeoutPtrOutput {
	return o.ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteTimeoutOutput) ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteTimeout) *RouteSpecHttp2RouteTimeout {
		return &v
	}).(RouteSpecHttp2RouteTimeoutPtrOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecHttp2RouteTimeoutOutput) Idle() RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteTimeout) *RouteSpecHttp2RouteTimeoutIdle { return v.Idle }).(RouteSpecHttp2RouteTimeoutIdlePtrOutput)
}

// The per request timeout.
func (o RouteSpecHttp2RouteTimeoutOutput) PerRequest() RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteTimeout) *RouteSpecHttp2RouteTimeoutPerRequest { return v.PerRequest }).(RouteSpecHttp2RouteTimeoutPerRequestPtrOutput)
}

type RouteSpecHttp2RouteTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteTimeout)(nil)).Elem()
}

func (o RouteSpecHttp2RouteTimeoutPtrOutput) ToRouteSpecHttp2RouteTimeoutPtrOutput() RouteSpecHttp2RouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutPtrOutput) ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutPtrOutput) Elem() RouteSpecHttp2RouteTimeoutOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeout) RouteSpecHttp2RouteTimeout {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteTimeout
		return ret
	}).(RouteSpecHttp2RouteTimeoutOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecHttp2RouteTimeoutPtrOutput) Idle() RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeout) *RouteSpecHttp2RouteTimeoutIdle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(RouteSpecHttp2RouteTimeoutIdlePtrOutput)
}

// The per request timeout.
func (o RouteSpecHttp2RouteTimeoutPtrOutput) PerRequest() RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeout) *RouteSpecHttp2RouteTimeoutPerRequest {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(RouteSpecHttp2RouteTimeoutPerRequestPtrOutput)
}

type RouteSpecHttp2RouteTimeoutIdle struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// RouteSpecHttp2RouteTimeoutIdleInput is an input type that accepts RouteSpecHttp2RouteTimeoutIdleArgs and RouteSpecHttp2RouteTimeoutIdleOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteTimeoutIdleInput` via:
//
//          RouteSpecHttp2RouteTimeoutIdleArgs{...}
type RouteSpecHttp2RouteTimeoutIdleInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteTimeoutIdleOutput() RouteSpecHttp2RouteTimeoutIdleOutput
	ToRouteSpecHttp2RouteTimeoutIdleOutputWithContext(context.Context) RouteSpecHttp2RouteTimeoutIdleOutput
}

type RouteSpecHttp2RouteTimeoutIdleArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecHttp2RouteTimeoutIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteTimeoutIdle)(nil)).Elem()
}

func (i RouteSpecHttp2RouteTimeoutIdleArgs) ToRouteSpecHttp2RouteTimeoutIdleOutput() RouteSpecHttp2RouteTimeoutIdleOutput {
	return i.ToRouteSpecHttp2RouteTimeoutIdleOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteTimeoutIdleArgs) ToRouteSpecHttp2RouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutIdleOutput)
}

func (i RouteSpecHttp2RouteTimeoutIdleArgs) ToRouteSpecHttp2RouteTimeoutIdlePtrOutput() RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteTimeoutIdleArgs) ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutIdleOutput).ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteTimeoutIdlePtrInput is an input type that accepts RouteSpecHttp2RouteTimeoutIdleArgs, RouteSpecHttp2RouteTimeoutIdlePtr and RouteSpecHttp2RouteTimeoutIdlePtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteTimeoutIdlePtrInput` via:
//
//          RouteSpecHttp2RouteTimeoutIdleArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttp2RouteTimeoutIdlePtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteTimeoutIdlePtrOutput() RouteSpecHttp2RouteTimeoutIdlePtrOutput
	ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(context.Context) RouteSpecHttp2RouteTimeoutIdlePtrOutput
}

type routeSpecHttp2RouteTimeoutIdlePtrType RouteSpecHttp2RouteTimeoutIdleArgs

func RouteSpecHttp2RouteTimeoutIdlePtr(v *RouteSpecHttp2RouteTimeoutIdleArgs) RouteSpecHttp2RouteTimeoutIdlePtrInput {
	return (*routeSpecHttp2RouteTimeoutIdlePtrType)(v)
}

func (*routeSpecHttp2RouteTimeoutIdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteTimeoutIdle)(nil)).Elem()
}

func (i *routeSpecHttp2RouteTimeoutIdlePtrType) ToRouteSpecHttp2RouteTimeoutIdlePtrOutput() RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteTimeoutIdlePtrType) ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutIdlePtrOutput)
}

type RouteSpecHttp2RouteTimeoutIdleOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteTimeoutIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecHttp2RouteTimeoutIdleOutput) ToRouteSpecHttp2RouteTimeoutIdleOutput() RouteSpecHttp2RouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutIdleOutput) ToRouteSpecHttp2RouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutIdleOutput) ToRouteSpecHttp2RouteTimeoutIdlePtrOutput() RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return o.ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteTimeoutIdleOutput) ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteTimeoutIdle) *RouteSpecHttp2RouteTimeoutIdle {
		return &v
	}).(RouteSpecHttp2RouteTimeoutIdlePtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttp2RouteTimeoutIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteTimeoutIdle) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o RouteSpecHttp2RouteTimeoutIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteTimeoutIdle) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecHttp2RouteTimeoutIdlePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteTimeoutIdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecHttp2RouteTimeoutIdlePtrOutput) ToRouteSpecHttp2RouteTimeoutIdlePtrOutput() RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutIdlePtrOutput) ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutIdlePtrOutput) Elem() RouteSpecHttp2RouteTimeoutIdleOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeoutIdle) RouteSpecHttp2RouteTimeoutIdle {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteTimeoutIdle
		return ret
	}).(RouteSpecHttp2RouteTimeoutIdleOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttp2RouteTimeoutIdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeoutIdle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o RouteSpecHttp2RouteTimeoutIdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeoutIdle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttp2RouteTimeoutPerRequest struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// RouteSpecHttp2RouteTimeoutPerRequestInput is an input type that accepts RouteSpecHttp2RouteTimeoutPerRequestArgs and RouteSpecHttp2RouteTimeoutPerRequestOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteTimeoutPerRequestInput` via:
//
//          RouteSpecHttp2RouteTimeoutPerRequestArgs{...}
type RouteSpecHttp2RouteTimeoutPerRequestInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteTimeoutPerRequestOutput() RouteSpecHttp2RouteTimeoutPerRequestOutput
	ToRouteSpecHttp2RouteTimeoutPerRequestOutputWithContext(context.Context) RouteSpecHttp2RouteTimeoutPerRequestOutput
}

type RouteSpecHttp2RouteTimeoutPerRequestArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecHttp2RouteTimeoutPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteTimeoutPerRequest)(nil)).Elem()
}

func (i RouteSpecHttp2RouteTimeoutPerRequestArgs) ToRouteSpecHttp2RouteTimeoutPerRequestOutput() RouteSpecHttp2RouteTimeoutPerRequestOutput {
	return i.ToRouteSpecHttp2RouteTimeoutPerRequestOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteTimeoutPerRequestArgs) ToRouteSpecHttp2RouteTimeoutPerRequestOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutPerRequestOutput)
}

func (i RouteSpecHttp2RouteTimeoutPerRequestArgs) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutput() RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return i.ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteTimeoutPerRequestArgs) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutPerRequestOutput).ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteTimeoutPerRequestPtrInput is an input type that accepts RouteSpecHttp2RouteTimeoutPerRequestArgs, RouteSpecHttp2RouteTimeoutPerRequestPtr and RouteSpecHttp2RouteTimeoutPerRequestPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteTimeoutPerRequestPtrInput` via:
//
//          RouteSpecHttp2RouteTimeoutPerRequestArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttp2RouteTimeoutPerRequestPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutput() RouteSpecHttp2RouteTimeoutPerRequestPtrOutput
	ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(context.Context) RouteSpecHttp2RouteTimeoutPerRequestPtrOutput
}

type routeSpecHttp2RouteTimeoutPerRequestPtrType RouteSpecHttp2RouteTimeoutPerRequestArgs

func RouteSpecHttp2RouteTimeoutPerRequestPtr(v *RouteSpecHttp2RouteTimeoutPerRequestArgs) RouteSpecHttp2RouteTimeoutPerRequestPtrInput {
	return (*routeSpecHttp2RouteTimeoutPerRequestPtrType)(v)
}

func (*routeSpecHttp2RouteTimeoutPerRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteTimeoutPerRequest)(nil)).Elem()
}

func (i *routeSpecHttp2RouteTimeoutPerRequestPtrType) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutput() RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return i.ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteTimeoutPerRequestPtrType) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutPerRequestPtrOutput)
}

type RouteSpecHttp2RouteTimeoutPerRequestOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteTimeoutPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteTimeoutPerRequest)(nil)).Elem()
}

func (o RouteSpecHttp2RouteTimeoutPerRequestOutput) ToRouteSpecHttp2RouteTimeoutPerRequestOutput() RouteSpecHttp2RouteTimeoutPerRequestOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutPerRequestOutput) ToRouteSpecHttp2RouteTimeoutPerRequestOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPerRequestOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutPerRequestOutput) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutput() RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return o.ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteTimeoutPerRequestOutput) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteTimeoutPerRequest) *RouteSpecHttp2RouteTimeoutPerRequest {
		return &v
	}).(RouteSpecHttp2RouteTimeoutPerRequestPtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttp2RouteTimeoutPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteTimeoutPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o RouteSpecHttp2RouteTimeoutPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteTimeoutPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecHttp2RouteTimeoutPerRequestPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteTimeoutPerRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteTimeoutPerRequest)(nil)).Elem()
}

func (o RouteSpecHttp2RouteTimeoutPerRequestPtrOutput) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutput() RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutPerRequestPtrOutput) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutPerRequestPtrOutput) Elem() RouteSpecHttp2RouteTimeoutPerRequestOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeoutPerRequest) RouteSpecHttp2RouteTimeoutPerRequest {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteTimeoutPerRequest
		return ret
	}).(RouteSpecHttp2RouteTimeoutPerRequestOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttp2RouteTimeoutPerRequestPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeoutPerRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o RouteSpecHttp2RouteTimeoutPerRequestPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeoutPerRequest) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttpRoute struct {
	// The action to take if a match is determined.
	Action RouteSpecHttpRouteAction `pulumi:"action"`
	// The criteria for determining an HTTP request match.
	Match RouteSpecHttpRouteMatch `pulumi:"match"`
	// The retry policy.
	RetryPolicy *RouteSpecHttpRouteRetryPolicy `pulumi:"retryPolicy"`
	// The types of timeouts.
	Timeout *RouteSpecHttpRouteTimeout `pulumi:"timeout"`
}

// RouteSpecHttpRouteInput is an input type that accepts RouteSpecHttpRouteArgs and RouteSpecHttpRouteOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteInput` via:
//
//          RouteSpecHttpRouteArgs{...}
type RouteSpecHttpRouteInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteOutput() RouteSpecHttpRouteOutput
	ToRouteSpecHttpRouteOutputWithContext(context.Context) RouteSpecHttpRouteOutput
}

type RouteSpecHttpRouteArgs struct {
	// The action to take if a match is determined.
	Action RouteSpecHttpRouteActionInput `pulumi:"action"`
	// The criteria for determining an HTTP request match.
	Match RouteSpecHttpRouteMatchInput `pulumi:"match"`
	// The retry policy.
	RetryPolicy RouteSpecHttpRouteRetryPolicyPtrInput `pulumi:"retryPolicy"`
	// The types of timeouts.
	Timeout RouteSpecHttpRouteTimeoutPtrInput `pulumi:"timeout"`
}

func (RouteSpecHttpRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRoute)(nil)).Elem()
}

func (i RouteSpecHttpRouteArgs) ToRouteSpecHttpRouteOutput() RouteSpecHttpRouteOutput {
	return i.ToRouteSpecHttpRouteOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteArgs) ToRouteSpecHttpRouteOutputWithContext(ctx context.Context) RouteSpecHttpRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteOutput)
}

func (i RouteSpecHttpRouteArgs) ToRouteSpecHttpRoutePtrOutput() RouteSpecHttpRoutePtrOutput {
	return i.ToRouteSpecHttpRoutePtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteArgs) ToRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) RouteSpecHttpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteOutput).ToRouteSpecHttpRoutePtrOutputWithContext(ctx)
}

// RouteSpecHttpRoutePtrInput is an input type that accepts RouteSpecHttpRouteArgs, RouteSpecHttpRoutePtr and RouteSpecHttpRoutePtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRoutePtrInput` via:
//
//          RouteSpecHttpRouteArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttpRoutePtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRoutePtrOutput() RouteSpecHttpRoutePtrOutput
	ToRouteSpecHttpRoutePtrOutputWithContext(context.Context) RouteSpecHttpRoutePtrOutput
}

type routeSpecHttpRoutePtrType RouteSpecHttpRouteArgs

func RouteSpecHttpRoutePtr(v *RouteSpecHttpRouteArgs) RouteSpecHttpRoutePtrInput {
	return (*routeSpecHttpRoutePtrType)(v)
}

func (*routeSpecHttpRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRoute)(nil)).Elem()
}

func (i *routeSpecHttpRoutePtrType) ToRouteSpecHttpRoutePtrOutput() RouteSpecHttpRoutePtrOutput {
	return i.ToRouteSpecHttpRoutePtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRoutePtrType) ToRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) RouteSpecHttpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRoutePtrOutput)
}

type RouteSpecHttpRouteOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRoute)(nil)).Elem()
}

func (o RouteSpecHttpRouteOutput) ToRouteSpecHttpRouteOutput() RouteSpecHttpRouteOutput {
	return o
}

func (o RouteSpecHttpRouteOutput) ToRouteSpecHttpRouteOutputWithContext(ctx context.Context) RouteSpecHttpRouteOutput {
	return o
}

func (o RouteSpecHttpRouteOutput) ToRouteSpecHttpRoutePtrOutput() RouteSpecHttpRoutePtrOutput {
	return o.ToRouteSpecHttpRoutePtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteOutput) ToRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) RouteSpecHttpRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRoute) *RouteSpecHttpRoute {
		return &v
	}).(RouteSpecHttpRoutePtrOutput)
}

// The action to take if a match is determined.
func (o RouteSpecHttpRouteOutput) Action() RouteSpecHttpRouteActionOutput {
	return o.ApplyT(func(v RouteSpecHttpRoute) RouteSpecHttpRouteAction { return v.Action }).(RouteSpecHttpRouteActionOutput)
}

// The criteria for determining an HTTP request match.
func (o RouteSpecHttpRouteOutput) Match() RouteSpecHttpRouteMatchOutput {
	return o.ApplyT(func(v RouteSpecHttpRoute) RouteSpecHttpRouteMatch { return v.Match }).(RouteSpecHttpRouteMatchOutput)
}

// The retry policy.
func (o RouteSpecHttpRouteOutput) RetryPolicy() RouteSpecHttpRouteRetryPolicyPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRoute) *RouteSpecHttpRouteRetryPolicy { return v.RetryPolicy }).(RouteSpecHttpRouteRetryPolicyPtrOutput)
}

// The types of timeouts.
func (o RouteSpecHttpRouteOutput) Timeout() RouteSpecHttpRouteTimeoutPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRoute) *RouteSpecHttpRouteTimeout { return v.Timeout }).(RouteSpecHttpRouteTimeoutPtrOutput)
}

type RouteSpecHttpRoutePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRoute)(nil)).Elem()
}

func (o RouteSpecHttpRoutePtrOutput) ToRouteSpecHttpRoutePtrOutput() RouteSpecHttpRoutePtrOutput {
	return o
}

func (o RouteSpecHttpRoutePtrOutput) ToRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) RouteSpecHttpRoutePtrOutput {
	return o
}

func (o RouteSpecHttpRoutePtrOutput) Elem() RouteSpecHttpRouteOutput {
	return o.ApplyT(func(v *RouteSpecHttpRoute) RouteSpecHttpRoute {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRoute
		return ret
	}).(RouteSpecHttpRouteOutput)
}

// The action to take if a match is determined.
func (o RouteSpecHttpRoutePtrOutput) Action() RouteSpecHttpRouteActionPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRoute) *RouteSpecHttpRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(RouteSpecHttpRouteActionPtrOutput)
}

// The criteria for determining an HTTP request match.
func (o RouteSpecHttpRoutePtrOutput) Match() RouteSpecHttpRouteMatchPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRoute) *RouteSpecHttpRouteMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(RouteSpecHttpRouteMatchPtrOutput)
}

// The retry policy.
func (o RouteSpecHttpRoutePtrOutput) RetryPolicy() RouteSpecHttpRouteRetryPolicyPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRoute) *RouteSpecHttpRouteRetryPolicy {
		if v == nil {
			return nil
		}
		return v.RetryPolicy
	}).(RouteSpecHttpRouteRetryPolicyPtrOutput)
}

// The types of timeouts.
func (o RouteSpecHttpRoutePtrOutput) Timeout() RouteSpecHttpRouteTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRoute) *RouteSpecHttpRouteTimeout {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(RouteSpecHttpRouteTimeoutPtrOutput)
}

type RouteSpecHttpRouteAction struct {
	// The targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets []RouteSpecHttpRouteActionWeightedTarget `pulumi:"weightedTargets"`
}

// RouteSpecHttpRouteActionInput is an input type that accepts RouteSpecHttpRouteActionArgs and RouteSpecHttpRouteActionOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteActionInput` via:
//
//          RouteSpecHttpRouteActionArgs{...}
type RouteSpecHttpRouteActionInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteActionOutput() RouteSpecHttpRouteActionOutput
	ToRouteSpecHttpRouteActionOutputWithContext(context.Context) RouteSpecHttpRouteActionOutput
}

type RouteSpecHttpRouteActionArgs struct {
	// The targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets RouteSpecHttpRouteActionWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (RouteSpecHttpRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteAction)(nil)).Elem()
}

func (i RouteSpecHttpRouteActionArgs) ToRouteSpecHttpRouteActionOutput() RouteSpecHttpRouteActionOutput {
	return i.ToRouteSpecHttpRouteActionOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteActionArgs) ToRouteSpecHttpRouteActionOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteActionOutput)
}

func (i RouteSpecHttpRouteActionArgs) ToRouteSpecHttpRouteActionPtrOutput() RouteSpecHttpRouteActionPtrOutput {
	return i.ToRouteSpecHttpRouteActionPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteActionArgs) ToRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteActionOutput).ToRouteSpecHttpRouteActionPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteActionPtrInput is an input type that accepts RouteSpecHttpRouteActionArgs, RouteSpecHttpRouteActionPtr and RouteSpecHttpRouteActionPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteActionPtrInput` via:
//
//          RouteSpecHttpRouteActionArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttpRouteActionPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteActionPtrOutput() RouteSpecHttpRouteActionPtrOutput
	ToRouteSpecHttpRouteActionPtrOutputWithContext(context.Context) RouteSpecHttpRouteActionPtrOutput
}

type routeSpecHttpRouteActionPtrType RouteSpecHttpRouteActionArgs

func RouteSpecHttpRouteActionPtr(v *RouteSpecHttpRouteActionArgs) RouteSpecHttpRouteActionPtrInput {
	return (*routeSpecHttpRouteActionPtrType)(v)
}

func (*routeSpecHttpRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteAction)(nil)).Elem()
}

func (i *routeSpecHttpRouteActionPtrType) ToRouteSpecHttpRouteActionPtrOutput() RouteSpecHttpRouteActionPtrOutput {
	return i.ToRouteSpecHttpRouteActionPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteActionPtrType) ToRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteActionPtrOutput)
}

type RouteSpecHttpRouteActionOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteAction)(nil)).Elem()
}

func (o RouteSpecHttpRouteActionOutput) ToRouteSpecHttpRouteActionOutput() RouteSpecHttpRouteActionOutput {
	return o
}

func (o RouteSpecHttpRouteActionOutput) ToRouteSpecHttpRouteActionOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionOutput {
	return o
}

func (o RouteSpecHttpRouteActionOutput) ToRouteSpecHttpRouteActionPtrOutput() RouteSpecHttpRouteActionPtrOutput {
	return o.ToRouteSpecHttpRouteActionPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteActionOutput) ToRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteAction) *RouteSpecHttpRouteAction {
		return &v
	}).(RouteSpecHttpRouteActionPtrOutput)
}

// The targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecHttpRouteActionOutput) WeightedTargets() RouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteAction) []RouteSpecHttpRouteActionWeightedTarget { return v.WeightedTargets }).(RouteSpecHttpRouteActionWeightedTargetArrayOutput)
}

type RouteSpecHttpRouteActionPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteAction)(nil)).Elem()
}

func (o RouteSpecHttpRouteActionPtrOutput) ToRouteSpecHttpRouteActionPtrOutput() RouteSpecHttpRouteActionPtrOutput {
	return o
}

func (o RouteSpecHttpRouteActionPtrOutput) ToRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionPtrOutput {
	return o
}

func (o RouteSpecHttpRouteActionPtrOutput) Elem() RouteSpecHttpRouteActionOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteAction) RouteSpecHttpRouteAction {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteAction
		return ret
	}).(RouteSpecHttpRouteActionOutput)
}

// The targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecHttpRouteActionPtrOutput) WeightedTargets() RouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteAction) []RouteSpecHttpRouteActionWeightedTarget {
		if v == nil {
			return nil
		}
		return v.WeightedTargets
	}).(RouteSpecHttpRouteActionWeightedTargetArrayOutput)
}

type RouteSpecHttpRouteActionWeightedTarget struct {
	// The virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode string `pulumi:"virtualNode"`
	// The relative weight of the weighted target. An integer between 0 and 100.
	Weight int `pulumi:"weight"`
}

// RouteSpecHttpRouteActionWeightedTargetInput is an input type that accepts RouteSpecHttpRouteActionWeightedTargetArgs and RouteSpecHttpRouteActionWeightedTargetOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteActionWeightedTargetInput` via:
//
//          RouteSpecHttpRouteActionWeightedTargetArgs{...}
type RouteSpecHttpRouteActionWeightedTargetInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteActionWeightedTargetOutput() RouteSpecHttpRouteActionWeightedTargetOutput
	ToRouteSpecHttpRouteActionWeightedTargetOutputWithContext(context.Context) RouteSpecHttpRouteActionWeightedTargetOutput
}

type RouteSpecHttpRouteActionWeightedTargetArgs struct {
	// The virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode pulumi.StringInput `pulumi:"virtualNode"`
	// The relative weight of the weighted target. An integer between 0 and 100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (RouteSpecHttpRouteActionWeightedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecHttpRouteActionWeightedTargetArgs) ToRouteSpecHttpRouteActionWeightedTargetOutput() RouteSpecHttpRouteActionWeightedTargetOutput {
	return i.ToRouteSpecHttpRouteActionWeightedTargetOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteActionWeightedTargetArgs) ToRouteSpecHttpRouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionWeightedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteActionWeightedTargetOutput)
}

// RouteSpecHttpRouteActionWeightedTargetArrayInput is an input type that accepts RouteSpecHttpRouteActionWeightedTargetArray and RouteSpecHttpRouteActionWeightedTargetArrayOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteActionWeightedTargetArrayInput` via:
//
//          RouteSpecHttpRouteActionWeightedTargetArray{ RouteSpecHttpRouteActionWeightedTargetArgs{...} }
type RouteSpecHttpRouteActionWeightedTargetArrayInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteActionWeightedTargetArrayOutput() RouteSpecHttpRouteActionWeightedTargetArrayOutput
	ToRouteSpecHttpRouteActionWeightedTargetArrayOutputWithContext(context.Context) RouteSpecHttpRouteActionWeightedTargetArrayOutput
}

type RouteSpecHttpRouteActionWeightedTargetArray []RouteSpecHttpRouteActionWeightedTargetInput

func (RouteSpecHttpRouteActionWeightedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttpRouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecHttpRouteActionWeightedTargetArray) ToRouteSpecHttpRouteActionWeightedTargetArrayOutput() RouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return i.ToRouteSpecHttpRouteActionWeightedTargetArrayOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteActionWeightedTargetArray) ToRouteSpecHttpRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteActionWeightedTargetArrayOutput)
}

type RouteSpecHttpRouteActionWeightedTargetOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteActionWeightedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecHttpRouteActionWeightedTargetOutput) ToRouteSpecHttpRouteActionWeightedTargetOutput() RouteSpecHttpRouteActionWeightedTargetOutput {
	return o
}

func (o RouteSpecHttpRouteActionWeightedTargetOutput) ToRouteSpecHttpRouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionWeightedTargetOutput {
	return o
}

// The virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteActionWeightedTargetOutput) VirtualNode() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteActionWeightedTarget) string { return v.VirtualNode }).(pulumi.StringOutput)
}

// The relative weight of the weighted target. An integer between 0 and 100.
func (o RouteSpecHttpRouteActionWeightedTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteActionWeightedTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type RouteSpecHttpRouteActionWeightedTargetArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteActionWeightedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttpRouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecHttpRouteActionWeightedTargetArrayOutput) ToRouteSpecHttpRouteActionWeightedTargetArrayOutput() RouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecHttpRouteActionWeightedTargetArrayOutput) ToRouteSpecHttpRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecHttpRouteActionWeightedTargetArrayOutput) Index(i pulumi.IntInput) RouteSpecHttpRouteActionWeightedTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecHttpRouteActionWeightedTarget {
		return vs[0].([]RouteSpecHttpRouteActionWeightedTarget)[vs[1].(int)]
	}).(RouteSpecHttpRouteActionWeightedTargetOutput)
}

type RouteSpecHttpRouteMatch struct {
	// The client request headers to match on.
	Headers []RouteSpecHttpRouteMatchHeader `pulumi:"headers"`
	// The client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
	Method *string `pulumi:"method"`
	// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix string `pulumi:"prefix"`
	// The client request header scheme to match on. Valid values: `http`, `https`.
	Scheme *string `pulumi:"scheme"`
}

// RouteSpecHttpRouteMatchInput is an input type that accepts RouteSpecHttpRouteMatchArgs and RouteSpecHttpRouteMatchOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchInput` via:
//
//          RouteSpecHttpRouteMatchArgs{...}
type RouteSpecHttpRouteMatchInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchOutput() RouteSpecHttpRouteMatchOutput
	ToRouteSpecHttpRouteMatchOutputWithContext(context.Context) RouteSpecHttpRouteMatchOutput
}

type RouteSpecHttpRouteMatchArgs struct {
	// The client request headers to match on.
	Headers RouteSpecHttpRouteMatchHeaderArrayInput `pulumi:"headers"`
	// The client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// The client request header scheme to match on. Valid values: `http`, `https`.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (RouteSpecHttpRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatch)(nil)).Elem()
}

func (i RouteSpecHttpRouteMatchArgs) ToRouteSpecHttpRouteMatchOutput() RouteSpecHttpRouteMatchOutput {
	return i.ToRouteSpecHttpRouteMatchOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchArgs) ToRouteSpecHttpRouteMatchOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchOutput)
}

func (i RouteSpecHttpRouteMatchArgs) ToRouteSpecHttpRouteMatchPtrOutput() RouteSpecHttpRouteMatchPtrOutput {
	return i.ToRouteSpecHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchArgs) ToRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchOutput).ToRouteSpecHttpRouteMatchPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteMatchPtrInput is an input type that accepts RouteSpecHttpRouteMatchArgs, RouteSpecHttpRouteMatchPtr and RouteSpecHttpRouteMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchPtrInput` via:
//
//          RouteSpecHttpRouteMatchArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttpRouteMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchPtrOutput() RouteSpecHttpRouteMatchPtrOutput
	ToRouteSpecHttpRouteMatchPtrOutputWithContext(context.Context) RouteSpecHttpRouteMatchPtrOutput
}

type routeSpecHttpRouteMatchPtrType RouteSpecHttpRouteMatchArgs

func RouteSpecHttpRouteMatchPtr(v *RouteSpecHttpRouteMatchArgs) RouteSpecHttpRouteMatchPtrInput {
	return (*routeSpecHttpRouteMatchPtrType)(v)
}

func (*routeSpecHttpRouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatch)(nil)).Elem()
}

func (i *routeSpecHttpRouteMatchPtrType) ToRouteSpecHttpRouteMatchPtrOutput() RouteSpecHttpRouteMatchPtrOutput {
	return i.ToRouteSpecHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteMatchPtrType) ToRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchPtrOutput)
}

type RouteSpecHttpRouteMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatch)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchOutput) ToRouteSpecHttpRouteMatchOutput() RouteSpecHttpRouteMatchOutput {
	return o
}

func (o RouteSpecHttpRouteMatchOutput) ToRouteSpecHttpRouteMatchOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchOutput {
	return o
}

func (o RouteSpecHttpRouteMatchOutput) ToRouteSpecHttpRouteMatchPtrOutput() RouteSpecHttpRouteMatchPtrOutput {
	return o.ToRouteSpecHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteMatchOutput) ToRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteMatch) *RouteSpecHttpRouteMatch {
		return &v
	}).(RouteSpecHttpRouteMatchPtrOutput)
}

// The client request headers to match on.
func (o RouteSpecHttpRouteMatchOutput) Headers() RouteSpecHttpRouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatch) []RouteSpecHttpRouteMatchHeader { return v.Headers }).(RouteSpecHttpRouteMatchHeaderArrayOutput)
}

// The client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
func (o RouteSpecHttpRouteMatchOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatch) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttpRouteMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

// The client request header scheme to match on. Valid values: `http`, `https`.
func (o RouteSpecHttpRouteMatchOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatch) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type RouteSpecHttpRouteMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatch)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchPtrOutput) ToRouteSpecHttpRouteMatchPtrOutput() RouteSpecHttpRouteMatchPtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchPtrOutput) ToRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchPtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchPtrOutput) Elem() RouteSpecHttpRouteMatchOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatch) RouteSpecHttpRouteMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteMatch
		return ret
	}).(RouteSpecHttpRouteMatchOutput)
}

// The client request headers to match on.
func (o RouteSpecHttpRouteMatchPtrOutput) Headers() RouteSpecHttpRouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatch) []RouteSpecHttpRouteMatchHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(RouteSpecHttpRouteMatchHeaderArrayOutput)
}

// The client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
func (o RouteSpecHttpRouteMatchPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttpRouteMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatch) *string {
		if v == nil {
			return nil
		}
		return &v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The client request header scheme to match on. Valid values: `http`, `https`.
func (o RouteSpecHttpRouteMatchPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

type RouteSpecHttpRouteMatchHeader struct {
	// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
	Invert *bool `pulumi:"invert"`
	// The method and value to match the header value sent with a request. Specify one match method.
	Match *RouteSpecHttpRouteMatchHeaderMatch `pulumi:"match"`
	// A name for the HTTP header in the client request that will be matched on.
	Name string `pulumi:"name"`
}

// RouteSpecHttpRouteMatchHeaderInput is an input type that accepts RouteSpecHttpRouteMatchHeaderArgs and RouteSpecHttpRouteMatchHeaderOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchHeaderInput` via:
//
//          RouteSpecHttpRouteMatchHeaderArgs{...}
type RouteSpecHttpRouteMatchHeaderInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchHeaderOutput() RouteSpecHttpRouteMatchHeaderOutput
	ToRouteSpecHttpRouteMatchHeaderOutputWithContext(context.Context) RouteSpecHttpRouteMatchHeaderOutput
}

type RouteSpecHttpRouteMatchHeaderArgs struct {
	// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
	Invert pulumi.BoolPtrInput `pulumi:"invert"`
	// The method and value to match the header value sent with a request. Specify one match method.
	Match RouteSpecHttpRouteMatchHeaderMatchPtrInput `pulumi:"match"`
	// A name for the HTTP header in the client request that will be matched on.
	Name pulumi.StringInput `pulumi:"name"`
}

func (RouteSpecHttpRouteMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (i RouteSpecHttpRouteMatchHeaderArgs) ToRouteSpecHttpRouteMatchHeaderOutput() RouteSpecHttpRouteMatchHeaderOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchHeaderArgs) ToRouteSpecHttpRouteMatchHeaderOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderOutput)
}

// RouteSpecHttpRouteMatchHeaderArrayInput is an input type that accepts RouteSpecHttpRouteMatchHeaderArray and RouteSpecHttpRouteMatchHeaderArrayOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchHeaderArrayInput` via:
//
//          RouteSpecHttpRouteMatchHeaderArray{ RouteSpecHttpRouteMatchHeaderArgs{...} }
type RouteSpecHttpRouteMatchHeaderArrayInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchHeaderArrayOutput() RouteSpecHttpRouteMatchHeaderArrayOutput
	ToRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(context.Context) RouteSpecHttpRouteMatchHeaderArrayOutput
}

type RouteSpecHttpRouteMatchHeaderArray []RouteSpecHttpRouteMatchHeaderInput

func (RouteSpecHttpRouteMatchHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (i RouteSpecHttpRouteMatchHeaderArray) ToRouteSpecHttpRouteMatchHeaderArrayOutput() RouteSpecHttpRouteMatchHeaderArrayOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchHeaderArray) ToRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderArrayOutput)
}

type RouteSpecHttpRouteMatchHeaderOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchHeaderOutput) ToRouteSpecHttpRouteMatchHeaderOutput() RouteSpecHttpRouteMatchHeaderOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderOutput) ToRouteSpecHttpRouteMatchHeaderOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderOutput {
	return o
}

// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
func (o RouteSpecHttpRouteMatchHeaderOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeader) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

// The method and value to match the header value sent with a request. Specify one match method.
func (o RouteSpecHttpRouteMatchHeaderOutput) Match() RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeader) *RouteSpecHttpRouteMatchHeaderMatch { return v.Match }).(RouteSpecHttpRouteMatchHeaderMatchPtrOutput)
}

// A name for the HTTP header in the client request that will be matched on.
func (o RouteSpecHttpRouteMatchHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeader) string { return v.Name }).(pulumi.StringOutput)
}

type RouteSpecHttpRouteMatchHeaderArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchHeaderArrayOutput) ToRouteSpecHttpRouteMatchHeaderArrayOutput() RouteSpecHttpRouteMatchHeaderArrayOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderArrayOutput) ToRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderArrayOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderArrayOutput) Index(i pulumi.IntInput) RouteSpecHttpRouteMatchHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecHttpRouteMatchHeader {
		return vs[0].([]RouteSpecHttpRouteMatchHeader)[vs[1].(int)]
	}).(RouteSpecHttpRouteMatchHeaderOutput)
}

type RouteSpecHttpRouteMatchHeaderMatch struct {
	// The value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
	Exact *string `pulumi:"exact"`
	// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix *string `pulumi:"prefix"`
	// The object that specifies the range of numbers that the value sent by the client must be included in.
	Range *RouteSpecHttpRouteMatchHeaderMatchRange `pulumi:"range"`
	// The value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
	Regex *string `pulumi:"regex"`
	// The value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
	Suffix *string `pulumi:"suffix"`
}

// RouteSpecHttpRouteMatchHeaderMatchInput is an input type that accepts RouteSpecHttpRouteMatchHeaderMatchArgs and RouteSpecHttpRouteMatchHeaderMatchOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchHeaderMatchInput` via:
//
//          RouteSpecHttpRouteMatchHeaderMatchArgs{...}
type RouteSpecHttpRouteMatchHeaderMatchInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchHeaderMatchOutput() RouteSpecHttpRouteMatchHeaderMatchOutput
	ToRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(context.Context) RouteSpecHttpRouteMatchHeaderMatchOutput
}

type RouteSpecHttpRouteMatchHeaderMatchArgs struct {
	// The value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The object that specifies the range of numbers that the value sent by the client must be included in.
	Range RouteSpecHttpRouteMatchHeaderMatchRangePtrInput `pulumi:"range"`
	// The value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// The value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (RouteSpecHttpRouteMatchHeaderMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (i RouteSpecHttpRouteMatchHeaderMatchArgs) ToRouteSpecHttpRouteMatchHeaderMatchOutput() RouteSpecHttpRouteMatchHeaderMatchOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchHeaderMatchArgs) ToRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderMatchOutput)
}

func (i RouteSpecHttpRouteMatchHeaderMatchArgs) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutput() RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchHeaderMatchArgs) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderMatchOutput).ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteMatchHeaderMatchPtrInput is an input type that accepts RouteSpecHttpRouteMatchHeaderMatchArgs, RouteSpecHttpRouteMatchHeaderMatchPtr and RouteSpecHttpRouteMatchHeaderMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchHeaderMatchPtrInput` via:
//
//          RouteSpecHttpRouteMatchHeaderMatchArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttpRouteMatchHeaderMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchHeaderMatchPtrOutput() RouteSpecHttpRouteMatchHeaderMatchPtrOutput
	ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(context.Context) RouteSpecHttpRouteMatchHeaderMatchPtrOutput
}

type routeSpecHttpRouteMatchHeaderMatchPtrType RouteSpecHttpRouteMatchHeaderMatchArgs

func RouteSpecHttpRouteMatchHeaderMatchPtr(v *RouteSpecHttpRouteMatchHeaderMatchArgs) RouteSpecHttpRouteMatchHeaderMatchPtrInput {
	return (*routeSpecHttpRouteMatchHeaderMatchPtrType)(v)
}

func (*routeSpecHttpRouteMatchHeaderMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (i *routeSpecHttpRouteMatchHeaderMatchPtrType) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutput() RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteMatchHeaderMatchPtrType) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderMatchPtrOutput)
}

type RouteSpecHttpRouteMatchHeaderMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchHeaderMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchHeaderMatchOutput) ToRouteSpecHttpRouteMatchHeaderMatchOutput() RouteSpecHttpRouteMatchHeaderMatchOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchOutput) ToRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchOutput) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutput() RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o.ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteMatchHeaderMatchOutput) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteMatchHeaderMatch) *RouteSpecHttpRouteMatchHeaderMatch {
		return &v
	}).(RouteSpecHttpRouteMatchHeaderMatchPtrOutput)
}

// The value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteMatchHeaderMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeaderMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttpRouteMatchHeaderMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeaderMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The object that specifies the range of numbers that the value sent by the client must be included in.
func (o RouteSpecHttpRouteMatchHeaderMatchOutput) Range() RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeaderMatch) *RouteSpecHttpRouteMatchHeaderMatchRange { return v.Range }).(RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput)
}

// The value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteMatchHeaderMatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeaderMatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// The value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteMatchHeaderMatchOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeaderMatch) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type RouteSpecHttpRouteMatchHeaderMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchHeaderMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutput() RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) Elem() RouteSpecHttpRouteMatchHeaderMatchOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatch) RouteSpecHttpRouteMatchHeaderMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteMatchHeaderMatch
		return ret
	}).(RouteSpecHttpRouteMatchHeaderMatchOutput)
}

// The value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// The value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The object that specifies the range of numbers that the value sent by the client must be included in.
func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) Range() RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatch) *RouteSpecHttpRouteMatchHeaderMatchRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput)
}

// The value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// The value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type RouteSpecHttpRouteMatchHeaderMatchRange struct {
	// The end of the range.
	End int `pulumi:"end"`
	// The start of the range.
	Start int `pulumi:"start"`
}

// RouteSpecHttpRouteMatchHeaderMatchRangeInput is an input type that accepts RouteSpecHttpRouteMatchHeaderMatchRangeArgs and RouteSpecHttpRouteMatchHeaderMatchRangeOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchHeaderMatchRangeInput` via:
//
//          RouteSpecHttpRouteMatchHeaderMatchRangeArgs{...}
type RouteSpecHttpRouteMatchHeaderMatchRangeInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchHeaderMatchRangeOutput() RouteSpecHttpRouteMatchHeaderMatchRangeOutput
	ToRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(context.Context) RouteSpecHttpRouteMatchHeaderMatchRangeOutput
}

type RouteSpecHttpRouteMatchHeaderMatchRangeArgs struct {
	// The end of the range.
	End pulumi.IntInput `pulumi:"end"`
	// The start of the range.
	Start pulumi.IntInput `pulumi:"start"`
}

func (RouteSpecHttpRouteMatchHeaderMatchRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i RouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToRouteSpecHttpRouteMatchHeaderMatchRangeOutput() RouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderMatchRangeOutput)
}

func (i RouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderMatchRangeOutput).ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteMatchHeaderMatchRangePtrInput is an input type that accepts RouteSpecHttpRouteMatchHeaderMatchRangeArgs, RouteSpecHttpRouteMatchHeaderMatchRangePtr and RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchHeaderMatchRangePtrInput` via:
//
//          RouteSpecHttpRouteMatchHeaderMatchRangeArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttpRouteMatchHeaderMatchRangePtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput
	ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(context.Context) RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput
}

type routeSpecHttpRouteMatchHeaderMatchRangePtrType RouteSpecHttpRouteMatchHeaderMatchRangeArgs

func RouteSpecHttpRouteMatchHeaderMatchRangePtr(v *RouteSpecHttpRouteMatchHeaderMatchRangeArgs) RouteSpecHttpRouteMatchHeaderMatchRangePtrInput {
	return (*routeSpecHttpRouteMatchHeaderMatchRangePtrType)(v)
}

func (*routeSpecHttpRouteMatchHeaderMatchRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i *routeSpecHttpRouteMatchHeaderMatchRangePtrType) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteMatchHeaderMatchRangePtrType) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput)
}

type RouteSpecHttpRouteMatchHeaderMatchRangeOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchHeaderMatchRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToRouteSpecHttpRouteMatchHeaderMatchRangeOutput() RouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o.ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteMatchHeaderMatchRange) *RouteSpecHttpRouteMatchHeaderMatchRange {
		return &v
	}).(RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput)
}

// The end of the range.
func (o RouteSpecHttpRouteMatchHeaderMatchRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeaderMatchRange) int { return v.End }).(pulumi.IntOutput)
}

// The start of the range.
func (o RouteSpecHttpRouteMatchHeaderMatchRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeaderMatchRange) int { return v.Start }).(pulumi.IntOutput)
}

type RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) Elem() RouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatchRange) RouteSpecHttpRouteMatchHeaderMatchRange {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteMatchHeaderMatchRange
		return ret
	}).(RouteSpecHttpRouteMatchHeaderMatchRangeOutput)
}

// The end of the range.
func (o RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.IntPtrOutput)
}

// The start of the range.
func (o RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttpRouteRetryPolicy struct {
	// List of HTTP retry events.
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	HttpRetryEvents []string `pulumi:"httpRetryEvents"`
	// The maximum number of retries.
	MaxRetries int `pulumi:"maxRetries"`
	// The per-retry timeout.
	PerRetryTimeout RouteSpecHttpRouteRetryPolicyPerRetryTimeout `pulumi:"perRetryTimeout"`
	// List of TCP retry events. The only valid value is `connection-error`.
	TcpRetryEvents []string `pulumi:"tcpRetryEvents"`
}

// RouteSpecHttpRouteRetryPolicyInput is an input type that accepts RouteSpecHttpRouteRetryPolicyArgs and RouteSpecHttpRouteRetryPolicyOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteRetryPolicyInput` via:
//
//          RouteSpecHttpRouteRetryPolicyArgs{...}
type RouteSpecHttpRouteRetryPolicyInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteRetryPolicyOutput() RouteSpecHttpRouteRetryPolicyOutput
	ToRouteSpecHttpRouteRetryPolicyOutputWithContext(context.Context) RouteSpecHttpRouteRetryPolicyOutput
}

type RouteSpecHttpRouteRetryPolicyArgs struct {
	// List of HTTP retry events.
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	HttpRetryEvents pulumi.StringArrayInput `pulumi:"httpRetryEvents"`
	// The maximum number of retries.
	MaxRetries pulumi.IntInput `pulumi:"maxRetries"`
	// The per-retry timeout.
	PerRetryTimeout RouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput `pulumi:"perRetryTimeout"`
	// List of TCP retry events. The only valid value is `connection-error`.
	TcpRetryEvents pulumi.StringArrayInput `pulumi:"tcpRetryEvents"`
}

func (RouteSpecHttpRouteRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteRetryPolicy)(nil)).Elem()
}

func (i RouteSpecHttpRouteRetryPolicyArgs) ToRouteSpecHttpRouteRetryPolicyOutput() RouteSpecHttpRouteRetryPolicyOutput {
	return i.ToRouteSpecHttpRouteRetryPolicyOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteRetryPolicyArgs) ToRouteSpecHttpRouteRetryPolicyOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteRetryPolicyOutput)
}

func (i RouteSpecHttpRouteRetryPolicyArgs) ToRouteSpecHttpRouteRetryPolicyPtrOutput() RouteSpecHttpRouteRetryPolicyPtrOutput {
	return i.ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteRetryPolicyArgs) ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteRetryPolicyOutput).ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteRetryPolicyPtrInput is an input type that accepts RouteSpecHttpRouteRetryPolicyArgs, RouteSpecHttpRouteRetryPolicyPtr and RouteSpecHttpRouteRetryPolicyPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteRetryPolicyPtrInput` via:
//
//          RouteSpecHttpRouteRetryPolicyArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttpRouteRetryPolicyPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteRetryPolicyPtrOutput() RouteSpecHttpRouteRetryPolicyPtrOutput
	ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(context.Context) RouteSpecHttpRouteRetryPolicyPtrOutput
}

type routeSpecHttpRouteRetryPolicyPtrType RouteSpecHttpRouteRetryPolicyArgs

func RouteSpecHttpRouteRetryPolicyPtr(v *RouteSpecHttpRouteRetryPolicyArgs) RouteSpecHttpRouteRetryPolicyPtrInput {
	return (*routeSpecHttpRouteRetryPolicyPtrType)(v)
}

func (*routeSpecHttpRouteRetryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteRetryPolicy)(nil)).Elem()
}

func (i *routeSpecHttpRouteRetryPolicyPtrType) ToRouteSpecHttpRouteRetryPolicyPtrOutput() RouteSpecHttpRouteRetryPolicyPtrOutput {
	return i.ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteRetryPolicyPtrType) ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteRetryPolicyPtrOutput)
}

type RouteSpecHttpRouteRetryPolicyOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteRetryPolicy)(nil)).Elem()
}

func (o RouteSpecHttpRouteRetryPolicyOutput) ToRouteSpecHttpRouteRetryPolicyOutput() RouteSpecHttpRouteRetryPolicyOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyOutput) ToRouteSpecHttpRouteRetryPolicyOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyOutput) ToRouteSpecHttpRouteRetryPolicyPtrOutput() RouteSpecHttpRouteRetryPolicyPtrOutput {
	return o.ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteRetryPolicyOutput) ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteRetryPolicy) *RouteSpecHttpRouteRetryPolicy {
		return &v
	}).(RouteSpecHttpRouteRetryPolicyPtrOutput)
}

// List of HTTP retry events.
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
func (o RouteSpecHttpRouteRetryPolicyOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteRetryPolicy) []string { return v.HttpRetryEvents }).(pulumi.StringArrayOutput)
}

// The maximum number of retries.
func (o RouteSpecHttpRouteRetryPolicyOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteRetryPolicy) int { return v.MaxRetries }).(pulumi.IntOutput)
}

// The per-retry timeout.
func (o RouteSpecHttpRouteRetryPolicyOutput) PerRetryTimeout() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteRetryPolicy) RouteSpecHttpRouteRetryPolicyPerRetryTimeout {
		return v.PerRetryTimeout
	}).(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput)
}

// List of TCP retry events. The only valid value is `connection-error`.
func (o RouteSpecHttpRouteRetryPolicyOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteRetryPolicy) []string { return v.TcpRetryEvents }).(pulumi.StringArrayOutput)
}

type RouteSpecHttpRouteRetryPolicyPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteRetryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteRetryPolicy)(nil)).Elem()
}

func (o RouteSpecHttpRouteRetryPolicyPtrOutput) ToRouteSpecHttpRouteRetryPolicyPtrOutput() RouteSpecHttpRouteRetryPolicyPtrOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyPtrOutput) ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPtrOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyPtrOutput) Elem() RouteSpecHttpRouteRetryPolicyOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicy) RouteSpecHttpRouteRetryPolicy {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteRetryPolicy
		return ret
	}).(RouteSpecHttpRouteRetryPolicyOutput)
}

// List of HTTP retry events.
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
func (o RouteSpecHttpRouteRetryPolicyPtrOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.HttpRetryEvents
	}).(pulumi.StringArrayOutput)
}

// The maximum number of retries.
func (o RouteSpecHttpRouteRetryPolicyPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// The per-retry timeout.
func (o RouteSpecHttpRouteRetryPolicyPtrOutput) PerRetryTimeout() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicy) *RouteSpecHttpRouteRetryPolicyPerRetryTimeout {
		if v == nil {
			return nil
		}
		return &v.PerRetryTimeout
	}).(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput)
}

// List of TCP retry events. The only valid value is `connection-error`.
func (o RouteSpecHttpRouteRetryPolicyPtrOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.TcpRetryEvents
	}).(pulumi.StringArrayOutput)
}

type RouteSpecHttpRouteRetryPolicyPerRetryTimeout struct {
	// Retry unit. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Retry value.
	Value int `pulumi:"value"`
}

// RouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput is an input type that accepts RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs and RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput` via:
//
//          RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs{...}
type RouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput
	ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput
}

type RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs struct {
	// Retry unit. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Retry value.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return i.ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput)
}

func (i RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return i.ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput).ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrInput is an input type that accepts RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs, RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtr and RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrInput` via:
//
//          RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput
	ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput
}

type routeSpecHttpRouteRetryPolicyPerRetryTimeoutPtrType RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs

func RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtr(v *RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrInput {
	return (*routeSpecHttpRouteRetryPolicyPerRetryTimeoutPtrType)(v)
}

func (*routeSpecHttpRouteRetryPolicyPerRetryTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i *routeSpecHttpRouteRetryPolicyPerRetryTimeoutPtrType) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return i.ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteRetryPolicyPerRetryTimeoutPtrType) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput)
}

type RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteRetryPolicyPerRetryTimeout) *RouteSpecHttpRouteRetryPolicyPerRetryTimeout {
		return &v
	}).(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput)
}

// Retry unit. Valid values: `ms`, `s`.
func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteRetryPolicyPerRetryTimeout) string { return v.Unit }).(pulumi.StringOutput)
}

// Retry value.
func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteRetryPolicyPerRetryTimeout) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput) Elem() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicyPerRetryTimeout) RouteSpecHttpRouteRetryPolicyPerRetryTimeout {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteRetryPolicyPerRetryTimeout
		return ret
	}).(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput)
}

// Retry unit. Valid values: `ms`, `s`.
func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicyPerRetryTimeout) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Retry value.
func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicyPerRetryTimeout) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttpRouteTimeout struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *RouteSpecHttpRouteTimeoutIdle `pulumi:"idle"`
	// The per request timeout.
	PerRequest *RouteSpecHttpRouteTimeoutPerRequest `pulumi:"perRequest"`
}

// RouteSpecHttpRouteTimeoutInput is an input type that accepts RouteSpecHttpRouteTimeoutArgs and RouteSpecHttpRouteTimeoutOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteTimeoutInput` via:
//
//          RouteSpecHttpRouteTimeoutArgs{...}
type RouteSpecHttpRouteTimeoutInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteTimeoutOutput() RouteSpecHttpRouteTimeoutOutput
	ToRouteSpecHttpRouteTimeoutOutputWithContext(context.Context) RouteSpecHttpRouteTimeoutOutput
}

type RouteSpecHttpRouteTimeoutArgs struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle RouteSpecHttpRouteTimeoutIdlePtrInput `pulumi:"idle"`
	// The per request timeout.
	PerRequest RouteSpecHttpRouteTimeoutPerRequestPtrInput `pulumi:"perRequest"`
}

func (RouteSpecHttpRouteTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteTimeout)(nil)).Elem()
}

func (i RouteSpecHttpRouteTimeoutArgs) ToRouteSpecHttpRouteTimeoutOutput() RouteSpecHttpRouteTimeoutOutput {
	return i.ToRouteSpecHttpRouteTimeoutOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteTimeoutArgs) ToRouteSpecHttpRouteTimeoutOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutOutput)
}

func (i RouteSpecHttpRouteTimeoutArgs) ToRouteSpecHttpRouteTimeoutPtrOutput() RouteSpecHttpRouteTimeoutPtrOutput {
	return i.ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteTimeoutArgs) ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutOutput).ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteTimeoutPtrInput is an input type that accepts RouteSpecHttpRouteTimeoutArgs, RouteSpecHttpRouteTimeoutPtr and RouteSpecHttpRouteTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteTimeoutPtrInput` via:
//
//          RouteSpecHttpRouteTimeoutArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttpRouteTimeoutPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteTimeoutPtrOutput() RouteSpecHttpRouteTimeoutPtrOutput
	ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(context.Context) RouteSpecHttpRouteTimeoutPtrOutput
}

type routeSpecHttpRouteTimeoutPtrType RouteSpecHttpRouteTimeoutArgs

func RouteSpecHttpRouteTimeoutPtr(v *RouteSpecHttpRouteTimeoutArgs) RouteSpecHttpRouteTimeoutPtrInput {
	return (*routeSpecHttpRouteTimeoutPtrType)(v)
}

func (*routeSpecHttpRouteTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteTimeout)(nil)).Elem()
}

func (i *routeSpecHttpRouteTimeoutPtrType) ToRouteSpecHttpRouteTimeoutPtrOutput() RouteSpecHttpRouteTimeoutPtrOutput {
	return i.ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteTimeoutPtrType) ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutPtrOutput)
}

type RouteSpecHttpRouteTimeoutOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteTimeout)(nil)).Elem()
}

func (o RouteSpecHttpRouteTimeoutOutput) ToRouteSpecHttpRouteTimeoutOutput() RouteSpecHttpRouteTimeoutOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutOutput) ToRouteSpecHttpRouteTimeoutOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutOutput) ToRouteSpecHttpRouteTimeoutPtrOutput() RouteSpecHttpRouteTimeoutPtrOutput {
	return o.ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteTimeoutOutput) ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteTimeout) *RouteSpecHttpRouteTimeout {
		return &v
	}).(RouteSpecHttpRouteTimeoutPtrOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecHttpRouteTimeoutOutput) Idle() RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteTimeout) *RouteSpecHttpRouteTimeoutIdle { return v.Idle }).(RouteSpecHttpRouteTimeoutIdlePtrOutput)
}

// The per request timeout.
func (o RouteSpecHttpRouteTimeoutOutput) PerRequest() RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteTimeout) *RouteSpecHttpRouteTimeoutPerRequest { return v.PerRequest }).(RouteSpecHttpRouteTimeoutPerRequestPtrOutput)
}

type RouteSpecHttpRouteTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteTimeout)(nil)).Elem()
}

func (o RouteSpecHttpRouteTimeoutPtrOutput) ToRouteSpecHttpRouteTimeoutPtrOutput() RouteSpecHttpRouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutPtrOutput) ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutPtrOutput) Elem() RouteSpecHttpRouteTimeoutOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeout) RouteSpecHttpRouteTimeout {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteTimeout
		return ret
	}).(RouteSpecHttpRouteTimeoutOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecHttpRouteTimeoutPtrOutput) Idle() RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeout) *RouteSpecHttpRouteTimeoutIdle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(RouteSpecHttpRouteTimeoutIdlePtrOutput)
}

// The per request timeout.
func (o RouteSpecHttpRouteTimeoutPtrOutput) PerRequest() RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeout) *RouteSpecHttpRouteTimeoutPerRequest {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(RouteSpecHttpRouteTimeoutPerRequestPtrOutput)
}

type RouteSpecHttpRouteTimeoutIdle struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// RouteSpecHttpRouteTimeoutIdleInput is an input type that accepts RouteSpecHttpRouteTimeoutIdleArgs and RouteSpecHttpRouteTimeoutIdleOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteTimeoutIdleInput` via:
//
//          RouteSpecHttpRouteTimeoutIdleArgs{...}
type RouteSpecHttpRouteTimeoutIdleInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteTimeoutIdleOutput() RouteSpecHttpRouteTimeoutIdleOutput
	ToRouteSpecHttpRouteTimeoutIdleOutputWithContext(context.Context) RouteSpecHttpRouteTimeoutIdleOutput
}

type RouteSpecHttpRouteTimeoutIdleArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecHttpRouteTimeoutIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteTimeoutIdle)(nil)).Elem()
}

func (i RouteSpecHttpRouteTimeoutIdleArgs) ToRouteSpecHttpRouteTimeoutIdleOutput() RouteSpecHttpRouteTimeoutIdleOutput {
	return i.ToRouteSpecHttpRouteTimeoutIdleOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteTimeoutIdleArgs) ToRouteSpecHttpRouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutIdleOutput)
}

func (i RouteSpecHttpRouteTimeoutIdleArgs) ToRouteSpecHttpRouteTimeoutIdlePtrOutput() RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteTimeoutIdleArgs) ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutIdleOutput).ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteTimeoutIdlePtrInput is an input type that accepts RouteSpecHttpRouteTimeoutIdleArgs, RouteSpecHttpRouteTimeoutIdlePtr and RouteSpecHttpRouteTimeoutIdlePtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteTimeoutIdlePtrInput` via:
//
//          RouteSpecHttpRouteTimeoutIdleArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttpRouteTimeoutIdlePtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteTimeoutIdlePtrOutput() RouteSpecHttpRouteTimeoutIdlePtrOutput
	ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(context.Context) RouteSpecHttpRouteTimeoutIdlePtrOutput
}

type routeSpecHttpRouteTimeoutIdlePtrType RouteSpecHttpRouteTimeoutIdleArgs

func RouteSpecHttpRouteTimeoutIdlePtr(v *RouteSpecHttpRouteTimeoutIdleArgs) RouteSpecHttpRouteTimeoutIdlePtrInput {
	return (*routeSpecHttpRouteTimeoutIdlePtrType)(v)
}

func (*routeSpecHttpRouteTimeoutIdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteTimeoutIdle)(nil)).Elem()
}

func (i *routeSpecHttpRouteTimeoutIdlePtrType) ToRouteSpecHttpRouteTimeoutIdlePtrOutput() RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteTimeoutIdlePtrType) ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutIdlePtrOutput)
}

type RouteSpecHttpRouteTimeoutIdleOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteTimeoutIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecHttpRouteTimeoutIdleOutput) ToRouteSpecHttpRouteTimeoutIdleOutput() RouteSpecHttpRouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutIdleOutput) ToRouteSpecHttpRouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutIdleOutput) ToRouteSpecHttpRouteTimeoutIdlePtrOutput() RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return o.ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteTimeoutIdleOutput) ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteTimeoutIdle) *RouteSpecHttpRouteTimeoutIdle {
		return &v
	}).(RouteSpecHttpRouteTimeoutIdlePtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttpRouteTimeoutIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteTimeoutIdle) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o RouteSpecHttpRouteTimeoutIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteTimeoutIdle) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecHttpRouteTimeoutIdlePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteTimeoutIdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecHttpRouteTimeoutIdlePtrOutput) ToRouteSpecHttpRouteTimeoutIdlePtrOutput() RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutIdlePtrOutput) ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutIdlePtrOutput) Elem() RouteSpecHttpRouteTimeoutIdleOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeoutIdle) RouteSpecHttpRouteTimeoutIdle {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteTimeoutIdle
		return ret
	}).(RouteSpecHttpRouteTimeoutIdleOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttpRouteTimeoutIdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeoutIdle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o RouteSpecHttpRouteTimeoutIdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeoutIdle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttpRouteTimeoutPerRequest struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// RouteSpecHttpRouteTimeoutPerRequestInput is an input type that accepts RouteSpecHttpRouteTimeoutPerRequestArgs and RouteSpecHttpRouteTimeoutPerRequestOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteTimeoutPerRequestInput` via:
//
//          RouteSpecHttpRouteTimeoutPerRequestArgs{...}
type RouteSpecHttpRouteTimeoutPerRequestInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteTimeoutPerRequestOutput() RouteSpecHttpRouteTimeoutPerRequestOutput
	ToRouteSpecHttpRouteTimeoutPerRequestOutputWithContext(context.Context) RouteSpecHttpRouteTimeoutPerRequestOutput
}

type RouteSpecHttpRouteTimeoutPerRequestArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecHttpRouteTimeoutPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteTimeoutPerRequest)(nil)).Elem()
}

func (i RouteSpecHttpRouteTimeoutPerRequestArgs) ToRouteSpecHttpRouteTimeoutPerRequestOutput() RouteSpecHttpRouteTimeoutPerRequestOutput {
	return i.ToRouteSpecHttpRouteTimeoutPerRequestOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteTimeoutPerRequestArgs) ToRouteSpecHttpRouteTimeoutPerRequestOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutPerRequestOutput)
}

func (i RouteSpecHttpRouteTimeoutPerRequestArgs) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutput() RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return i.ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteTimeoutPerRequestArgs) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutPerRequestOutput).ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteTimeoutPerRequestPtrInput is an input type that accepts RouteSpecHttpRouteTimeoutPerRequestArgs, RouteSpecHttpRouteTimeoutPerRequestPtr and RouteSpecHttpRouteTimeoutPerRequestPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteTimeoutPerRequestPtrInput` via:
//
//          RouteSpecHttpRouteTimeoutPerRequestArgs{...}
//
//  or:
//
//          nil
type RouteSpecHttpRouteTimeoutPerRequestPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteTimeoutPerRequestPtrOutput() RouteSpecHttpRouteTimeoutPerRequestPtrOutput
	ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(context.Context) RouteSpecHttpRouteTimeoutPerRequestPtrOutput
}

type routeSpecHttpRouteTimeoutPerRequestPtrType RouteSpecHttpRouteTimeoutPerRequestArgs

func RouteSpecHttpRouteTimeoutPerRequestPtr(v *RouteSpecHttpRouteTimeoutPerRequestArgs) RouteSpecHttpRouteTimeoutPerRequestPtrInput {
	return (*routeSpecHttpRouteTimeoutPerRequestPtrType)(v)
}

func (*routeSpecHttpRouteTimeoutPerRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteTimeoutPerRequest)(nil)).Elem()
}

func (i *routeSpecHttpRouteTimeoutPerRequestPtrType) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutput() RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return i.ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteTimeoutPerRequestPtrType) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutPerRequestPtrOutput)
}

type RouteSpecHttpRouteTimeoutPerRequestOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteTimeoutPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteTimeoutPerRequest)(nil)).Elem()
}

func (o RouteSpecHttpRouteTimeoutPerRequestOutput) ToRouteSpecHttpRouteTimeoutPerRequestOutput() RouteSpecHttpRouteTimeoutPerRequestOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutPerRequestOutput) ToRouteSpecHttpRouteTimeoutPerRequestOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPerRequestOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutPerRequestOutput) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutput() RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return o.ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteTimeoutPerRequestOutput) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteTimeoutPerRequest) *RouteSpecHttpRouteTimeoutPerRequest {
		return &v
	}).(RouteSpecHttpRouteTimeoutPerRequestPtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttpRouteTimeoutPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteTimeoutPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o RouteSpecHttpRouteTimeoutPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteTimeoutPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecHttpRouteTimeoutPerRequestPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteTimeoutPerRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteTimeoutPerRequest)(nil)).Elem()
}

func (o RouteSpecHttpRouteTimeoutPerRequestPtrOutput) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutput() RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutPerRequestPtrOutput) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutPerRequestPtrOutput) Elem() RouteSpecHttpRouteTimeoutPerRequestOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeoutPerRequest) RouteSpecHttpRouteTimeoutPerRequest {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteTimeoutPerRequest
		return ret
	}).(RouteSpecHttpRouteTimeoutPerRequestOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttpRouteTimeoutPerRequestPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeoutPerRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o RouteSpecHttpRouteTimeoutPerRequestPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeoutPerRequest) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecTcpRoute struct {
	// The action to take if a match is determined.
	Action RouteSpecTcpRouteAction `pulumi:"action"`
	// The types of timeouts.
	Timeout *RouteSpecTcpRouteTimeout `pulumi:"timeout"`
}

// RouteSpecTcpRouteInput is an input type that accepts RouteSpecTcpRouteArgs and RouteSpecTcpRouteOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteInput` via:
//
//          RouteSpecTcpRouteArgs{...}
type RouteSpecTcpRouteInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteOutput() RouteSpecTcpRouteOutput
	ToRouteSpecTcpRouteOutputWithContext(context.Context) RouteSpecTcpRouteOutput
}

type RouteSpecTcpRouteArgs struct {
	// The action to take if a match is determined.
	Action RouteSpecTcpRouteActionInput `pulumi:"action"`
	// The types of timeouts.
	Timeout RouteSpecTcpRouteTimeoutPtrInput `pulumi:"timeout"`
}

func (RouteSpecTcpRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRoute)(nil)).Elem()
}

func (i RouteSpecTcpRouteArgs) ToRouteSpecTcpRouteOutput() RouteSpecTcpRouteOutput {
	return i.ToRouteSpecTcpRouteOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteArgs) ToRouteSpecTcpRouteOutputWithContext(ctx context.Context) RouteSpecTcpRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteOutput)
}

func (i RouteSpecTcpRouteArgs) ToRouteSpecTcpRoutePtrOutput() RouteSpecTcpRoutePtrOutput {
	return i.ToRouteSpecTcpRoutePtrOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteArgs) ToRouteSpecTcpRoutePtrOutputWithContext(ctx context.Context) RouteSpecTcpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteOutput).ToRouteSpecTcpRoutePtrOutputWithContext(ctx)
}

// RouteSpecTcpRoutePtrInput is an input type that accepts RouteSpecTcpRouteArgs, RouteSpecTcpRoutePtr and RouteSpecTcpRoutePtrOutput values.
// You can construct a concrete instance of `RouteSpecTcpRoutePtrInput` via:
//
//          RouteSpecTcpRouteArgs{...}
//
//  or:
//
//          nil
type RouteSpecTcpRoutePtrInput interface {
	pulumi.Input

	ToRouteSpecTcpRoutePtrOutput() RouteSpecTcpRoutePtrOutput
	ToRouteSpecTcpRoutePtrOutputWithContext(context.Context) RouteSpecTcpRoutePtrOutput
}

type routeSpecTcpRoutePtrType RouteSpecTcpRouteArgs

func RouteSpecTcpRoutePtr(v *RouteSpecTcpRouteArgs) RouteSpecTcpRoutePtrInput {
	return (*routeSpecTcpRoutePtrType)(v)
}

func (*routeSpecTcpRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRoute)(nil)).Elem()
}

func (i *routeSpecTcpRoutePtrType) ToRouteSpecTcpRoutePtrOutput() RouteSpecTcpRoutePtrOutput {
	return i.ToRouteSpecTcpRoutePtrOutputWithContext(context.Background())
}

func (i *routeSpecTcpRoutePtrType) ToRouteSpecTcpRoutePtrOutputWithContext(ctx context.Context) RouteSpecTcpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRoutePtrOutput)
}

type RouteSpecTcpRouteOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRoute)(nil)).Elem()
}

func (o RouteSpecTcpRouteOutput) ToRouteSpecTcpRouteOutput() RouteSpecTcpRouteOutput {
	return o
}

func (o RouteSpecTcpRouteOutput) ToRouteSpecTcpRouteOutputWithContext(ctx context.Context) RouteSpecTcpRouteOutput {
	return o
}

func (o RouteSpecTcpRouteOutput) ToRouteSpecTcpRoutePtrOutput() RouteSpecTcpRoutePtrOutput {
	return o.ToRouteSpecTcpRoutePtrOutputWithContext(context.Background())
}

func (o RouteSpecTcpRouteOutput) ToRouteSpecTcpRoutePtrOutputWithContext(ctx context.Context) RouteSpecTcpRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecTcpRoute) *RouteSpecTcpRoute {
		return &v
	}).(RouteSpecTcpRoutePtrOutput)
}

// The action to take if a match is determined.
func (o RouteSpecTcpRouteOutput) Action() RouteSpecTcpRouteActionOutput {
	return o.ApplyT(func(v RouteSpecTcpRoute) RouteSpecTcpRouteAction { return v.Action }).(RouteSpecTcpRouteActionOutput)
}

// The types of timeouts.
func (o RouteSpecTcpRouteOutput) Timeout() RouteSpecTcpRouteTimeoutPtrOutput {
	return o.ApplyT(func(v RouteSpecTcpRoute) *RouteSpecTcpRouteTimeout { return v.Timeout }).(RouteSpecTcpRouteTimeoutPtrOutput)
}

type RouteSpecTcpRoutePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRoute)(nil)).Elem()
}

func (o RouteSpecTcpRoutePtrOutput) ToRouteSpecTcpRoutePtrOutput() RouteSpecTcpRoutePtrOutput {
	return o
}

func (o RouteSpecTcpRoutePtrOutput) ToRouteSpecTcpRoutePtrOutputWithContext(ctx context.Context) RouteSpecTcpRoutePtrOutput {
	return o
}

func (o RouteSpecTcpRoutePtrOutput) Elem() RouteSpecTcpRouteOutput {
	return o.ApplyT(func(v *RouteSpecTcpRoute) RouteSpecTcpRoute {
		if v != nil {
			return *v
		}
		var ret RouteSpecTcpRoute
		return ret
	}).(RouteSpecTcpRouteOutput)
}

// The action to take if a match is determined.
func (o RouteSpecTcpRoutePtrOutput) Action() RouteSpecTcpRouteActionPtrOutput {
	return o.ApplyT(func(v *RouteSpecTcpRoute) *RouteSpecTcpRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(RouteSpecTcpRouteActionPtrOutput)
}

// The types of timeouts.
func (o RouteSpecTcpRoutePtrOutput) Timeout() RouteSpecTcpRouteTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteSpecTcpRoute) *RouteSpecTcpRouteTimeout {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(RouteSpecTcpRouteTimeoutPtrOutput)
}

type RouteSpecTcpRouteAction struct {
	// The targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets []RouteSpecTcpRouteActionWeightedTarget `pulumi:"weightedTargets"`
}

// RouteSpecTcpRouteActionInput is an input type that accepts RouteSpecTcpRouteActionArgs and RouteSpecTcpRouteActionOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteActionInput` via:
//
//          RouteSpecTcpRouteActionArgs{...}
type RouteSpecTcpRouteActionInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteActionOutput() RouteSpecTcpRouteActionOutput
	ToRouteSpecTcpRouteActionOutputWithContext(context.Context) RouteSpecTcpRouteActionOutput
}

type RouteSpecTcpRouteActionArgs struct {
	// The targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets RouteSpecTcpRouteActionWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (RouteSpecTcpRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteAction)(nil)).Elem()
}

func (i RouteSpecTcpRouteActionArgs) ToRouteSpecTcpRouteActionOutput() RouteSpecTcpRouteActionOutput {
	return i.ToRouteSpecTcpRouteActionOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteActionArgs) ToRouteSpecTcpRouteActionOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteActionOutput)
}

func (i RouteSpecTcpRouteActionArgs) ToRouteSpecTcpRouteActionPtrOutput() RouteSpecTcpRouteActionPtrOutput {
	return i.ToRouteSpecTcpRouteActionPtrOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteActionArgs) ToRouteSpecTcpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteActionOutput).ToRouteSpecTcpRouteActionPtrOutputWithContext(ctx)
}

// RouteSpecTcpRouteActionPtrInput is an input type that accepts RouteSpecTcpRouteActionArgs, RouteSpecTcpRouteActionPtr and RouteSpecTcpRouteActionPtrOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteActionPtrInput` via:
//
//          RouteSpecTcpRouteActionArgs{...}
//
//  or:
//
//          nil
type RouteSpecTcpRouteActionPtrInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteActionPtrOutput() RouteSpecTcpRouteActionPtrOutput
	ToRouteSpecTcpRouteActionPtrOutputWithContext(context.Context) RouteSpecTcpRouteActionPtrOutput
}

type routeSpecTcpRouteActionPtrType RouteSpecTcpRouteActionArgs

func RouteSpecTcpRouteActionPtr(v *RouteSpecTcpRouteActionArgs) RouteSpecTcpRouteActionPtrInput {
	return (*routeSpecTcpRouteActionPtrType)(v)
}

func (*routeSpecTcpRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRouteAction)(nil)).Elem()
}

func (i *routeSpecTcpRouteActionPtrType) ToRouteSpecTcpRouteActionPtrOutput() RouteSpecTcpRouteActionPtrOutput {
	return i.ToRouteSpecTcpRouteActionPtrOutputWithContext(context.Background())
}

func (i *routeSpecTcpRouteActionPtrType) ToRouteSpecTcpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteActionPtrOutput)
}

type RouteSpecTcpRouteActionOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteAction)(nil)).Elem()
}

func (o RouteSpecTcpRouteActionOutput) ToRouteSpecTcpRouteActionOutput() RouteSpecTcpRouteActionOutput {
	return o
}

func (o RouteSpecTcpRouteActionOutput) ToRouteSpecTcpRouteActionOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionOutput {
	return o
}

func (o RouteSpecTcpRouteActionOutput) ToRouteSpecTcpRouteActionPtrOutput() RouteSpecTcpRouteActionPtrOutput {
	return o.ToRouteSpecTcpRouteActionPtrOutputWithContext(context.Background())
}

func (o RouteSpecTcpRouteActionOutput) ToRouteSpecTcpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecTcpRouteAction) *RouteSpecTcpRouteAction {
		return &v
	}).(RouteSpecTcpRouteActionPtrOutput)
}

// The targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecTcpRouteActionOutput) WeightedTargets() RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v RouteSpecTcpRouteAction) []RouteSpecTcpRouteActionWeightedTarget { return v.WeightedTargets }).(RouteSpecTcpRouteActionWeightedTargetArrayOutput)
}

type RouteSpecTcpRouteActionPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRouteAction)(nil)).Elem()
}

func (o RouteSpecTcpRouteActionPtrOutput) ToRouteSpecTcpRouteActionPtrOutput() RouteSpecTcpRouteActionPtrOutput {
	return o
}

func (o RouteSpecTcpRouteActionPtrOutput) ToRouteSpecTcpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionPtrOutput {
	return o
}

func (o RouteSpecTcpRouteActionPtrOutput) Elem() RouteSpecTcpRouteActionOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteAction) RouteSpecTcpRouteAction {
		if v != nil {
			return *v
		}
		var ret RouteSpecTcpRouteAction
		return ret
	}).(RouteSpecTcpRouteActionOutput)
}

// The targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecTcpRouteActionPtrOutput) WeightedTargets() RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteAction) []RouteSpecTcpRouteActionWeightedTarget {
		if v == nil {
			return nil
		}
		return v.WeightedTargets
	}).(RouteSpecTcpRouteActionWeightedTargetArrayOutput)
}

type RouteSpecTcpRouteActionWeightedTarget struct {
	// The virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode string `pulumi:"virtualNode"`
	// The relative weight of the weighted target. An integer between 0 and 100.
	Weight int `pulumi:"weight"`
}

// RouteSpecTcpRouteActionWeightedTargetInput is an input type that accepts RouteSpecTcpRouteActionWeightedTargetArgs and RouteSpecTcpRouteActionWeightedTargetOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteActionWeightedTargetInput` via:
//
//          RouteSpecTcpRouteActionWeightedTargetArgs{...}
type RouteSpecTcpRouteActionWeightedTargetInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteActionWeightedTargetOutput() RouteSpecTcpRouteActionWeightedTargetOutput
	ToRouteSpecTcpRouteActionWeightedTargetOutputWithContext(context.Context) RouteSpecTcpRouteActionWeightedTargetOutput
}

type RouteSpecTcpRouteActionWeightedTargetArgs struct {
	// The virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode pulumi.StringInput `pulumi:"virtualNode"`
	// The relative weight of the weighted target. An integer between 0 and 100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (RouteSpecTcpRouteActionWeightedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecTcpRouteActionWeightedTargetArgs) ToRouteSpecTcpRouteActionWeightedTargetOutput() RouteSpecTcpRouteActionWeightedTargetOutput {
	return i.ToRouteSpecTcpRouteActionWeightedTargetOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteActionWeightedTargetArgs) ToRouteSpecTcpRouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionWeightedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteActionWeightedTargetOutput)
}

// RouteSpecTcpRouteActionWeightedTargetArrayInput is an input type that accepts RouteSpecTcpRouteActionWeightedTargetArray and RouteSpecTcpRouteActionWeightedTargetArrayOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteActionWeightedTargetArrayInput` via:
//
//          RouteSpecTcpRouteActionWeightedTargetArray{ RouteSpecTcpRouteActionWeightedTargetArgs{...} }
type RouteSpecTcpRouteActionWeightedTargetArrayInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteActionWeightedTargetArrayOutput() RouteSpecTcpRouteActionWeightedTargetArrayOutput
	ToRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(context.Context) RouteSpecTcpRouteActionWeightedTargetArrayOutput
}

type RouteSpecTcpRouteActionWeightedTargetArray []RouteSpecTcpRouteActionWeightedTargetInput

func (RouteSpecTcpRouteActionWeightedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecTcpRouteActionWeightedTargetArray) ToRouteSpecTcpRouteActionWeightedTargetArrayOutput() RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return i.ToRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteActionWeightedTargetArray) ToRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteActionWeightedTargetArrayOutput)
}

type RouteSpecTcpRouteActionWeightedTargetOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteActionWeightedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecTcpRouteActionWeightedTargetOutput) ToRouteSpecTcpRouteActionWeightedTargetOutput() RouteSpecTcpRouteActionWeightedTargetOutput {
	return o
}

func (o RouteSpecTcpRouteActionWeightedTargetOutput) ToRouteSpecTcpRouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionWeightedTargetOutput {
	return o
}

// The virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
func (o RouteSpecTcpRouteActionWeightedTargetOutput) VirtualNode() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecTcpRouteActionWeightedTarget) string { return v.VirtualNode }).(pulumi.StringOutput)
}

// The relative weight of the weighted target. An integer between 0 and 100.
func (o RouteSpecTcpRouteActionWeightedTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecTcpRouteActionWeightedTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type RouteSpecTcpRouteActionWeightedTargetArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteActionWeightedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecTcpRouteActionWeightedTargetArrayOutput) ToRouteSpecTcpRouteActionWeightedTargetArrayOutput() RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecTcpRouteActionWeightedTargetArrayOutput) ToRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecTcpRouteActionWeightedTargetArrayOutput) Index(i pulumi.IntInput) RouteSpecTcpRouteActionWeightedTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecTcpRouteActionWeightedTarget {
		return vs[0].([]RouteSpecTcpRouteActionWeightedTarget)[vs[1].(int)]
	}).(RouteSpecTcpRouteActionWeightedTargetOutput)
}

type RouteSpecTcpRouteTimeout struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *RouteSpecTcpRouteTimeoutIdle `pulumi:"idle"`
}

// RouteSpecTcpRouteTimeoutInput is an input type that accepts RouteSpecTcpRouteTimeoutArgs and RouteSpecTcpRouteTimeoutOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteTimeoutInput` via:
//
//          RouteSpecTcpRouteTimeoutArgs{...}
type RouteSpecTcpRouteTimeoutInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteTimeoutOutput() RouteSpecTcpRouteTimeoutOutput
	ToRouteSpecTcpRouteTimeoutOutputWithContext(context.Context) RouteSpecTcpRouteTimeoutOutput
}

type RouteSpecTcpRouteTimeoutArgs struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle RouteSpecTcpRouteTimeoutIdlePtrInput `pulumi:"idle"`
}

func (RouteSpecTcpRouteTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteTimeout)(nil)).Elem()
}

func (i RouteSpecTcpRouteTimeoutArgs) ToRouteSpecTcpRouteTimeoutOutput() RouteSpecTcpRouteTimeoutOutput {
	return i.ToRouteSpecTcpRouteTimeoutOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteTimeoutArgs) ToRouteSpecTcpRouteTimeoutOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteTimeoutOutput)
}

func (i RouteSpecTcpRouteTimeoutArgs) ToRouteSpecTcpRouteTimeoutPtrOutput() RouteSpecTcpRouteTimeoutPtrOutput {
	return i.ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteTimeoutArgs) ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteTimeoutOutput).ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(ctx)
}

// RouteSpecTcpRouteTimeoutPtrInput is an input type that accepts RouteSpecTcpRouteTimeoutArgs, RouteSpecTcpRouteTimeoutPtr and RouteSpecTcpRouteTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteTimeoutPtrInput` via:
//
//          RouteSpecTcpRouteTimeoutArgs{...}
//
//  or:
//
//          nil
type RouteSpecTcpRouteTimeoutPtrInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteTimeoutPtrOutput() RouteSpecTcpRouteTimeoutPtrOutput
	ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(context.Context) RouteSpecTcpRouteTimeoutPtrOutput
}

type routeSpecTcpRouteTimeoutPtrType RouteSpecTcpRouteTimeoutArgs

func RouteSpecTcpRouteTimeoutPtr(v *RouteSpecTcpRouteTimeoutArgs) RouteSpecTcpRouteTimeoutPtrInput {
	return (*routeSpecTcpRouteTimeoutPtrType)(v)
}

func (*routeSpecTcpRouteTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRouteTimeout)(nil)).Elem()
}

func (i *routeSpecTcpRouteTimeoutPtrType) ToRouteSpecTcpRouteTimeoutPtrOutput() RouteSpecTcpRouteTimeoutPtrOutput {
	return i.ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeSpecTcpRouteTimeoutPtrType) ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteTimeoutPtrOutput)
}

type RouteSpecTcpRouteTimeoutOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteTimeout)(nil)).Elem()
}

func (o RouteSpecTcpRouteTimeoutOutput) ToRouteSpecTcpRouteTimeoutOutput() RouteSpecTcpRouteTimeoutOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutOutput) ToRouteSpecTcpRouteTimeoutOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutOutput) ToRouteSpecTcpRouteTimeoutPtrOutput() RouteSpecTcpRouteTimeoutPtrOutput {
	return o.ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteSpecTcpRouteTimeoutOutput) ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecTcpRouteTimeout) *RouteSpecTcpRouteTimeout {
		return &v
	}).(RouteSpecTcpRouteTimeoutPtrOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecTcpRouteTimeoutOutput) Idle() RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v RouteSpecTcpRouteTimeout) *RouteSpecTcpRouteTimeoutIdle { return v.Idle }).(RouteSpecTcpRouteTimeoutIdlePtrOutput)
}

type RouteSpecTcpRouteTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRouteTimeout)(nil)).Elem()
}

func (o RouteSpecTcpRouteTimeoutPtrOutput) ToRouteSpecTcpRouteTimeoutPtrOutput() RouteSpecTcpRouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutPtrOutput) ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutPtrOutput) Elem() RouteSpecTcpRouteTimeoutOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteTimeout) RouteSpecTcpRouteTimeout {
		if v != nil {
			return *v
		}
		var ret RouteSpecTcpRouteTimeout
		return ret
	}).(RouteSpecTcpRouteTimeoutOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecTcpRouteTimeoutPtrOutput) Idle() RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteTimeout) *RouteSpecTcpRouteTimeoutIdle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(RouteSpecTcpRouteTimeoutIdlePtrOutput)
}

type RouteSpecTcpRouteTimeoutIdle struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// RouteSpecTcpRouteTimeoutIdleInput is an input type that accepts RouteSpecTcpRouteTimeoutIdleArgs and RouteSpecTcpRouteTimeoutIdleOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteTimeoutIdleInput` via:
//
//          RouteSpecTcpRouteTimeoutIdleArgs{...}
type RouteSpecTcpRouteTimeoutIdleInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteTimeoutIdleOutput() RouteSpecTcpRouteTimeoutIdleOutput
	ToRouteSpecTcpRouteTimeoutIdleOutputWithContext(context.Context) RouteSpecTcpRouteTimeoutIdleOutput
}

type RouteSpecTcpRouteTimeoutIdleArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecTcpRouteTimeoutIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteTimeoutIdle)(nil)).Elem()
}

func (i RouteSpecTcpRouteTimeoutIdleArgs) ToRouteSpecTcpRouteTimeoutIdleOutput() RouteSpecTcpRouteTimeoutIdleOutput {
	return i.ToRouteSpecTcpRouteTimeoutIdleOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteTimeoutIdleArgs) ToRouteSpecTcpRouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteTimeoutIdleOutput)
}

func (i RouteSpecTcpRouteTimeoutIdleArgs) ToRouteSpecTcpRouteTimeoutIdlePtrOutput() RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteTimeoutIdleArgs) ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteTimeoutIdleOutput).ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(ctx)
}

// RouteSpecTcpRouteTimeoutIdlePtrInput is an input type that accepts RouteSpecTcpRouteTimeoutIdleArgs, RouteSpecTcpRouteTimeoutIdlePtr and RouteSpecTcpRouteTimeoutIdlePtrOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteTimeoutIdlePtrInput` via:
//
//          RouteSpecTcpRouteTimeoutIdleArgs{...}
//
//  or:
//
//          nil
type RouteSpecTcpRouteTimeoutIdlePtrInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteTimeoutIdlePtrOutput() RouteSpecTcpRouteTimeoutIdlePtrOutput
	ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(context.Context) RouteSpecTcpRouteTimeoutIdlePtrOutput
}

type routeSpecTcpRouteTimeoutIdlePtrType RouteSpecTcpRouteTimeoutIdleArgs

func RouteSpecTcpRouteTimeoutIdlePtr(v *RouteSpecTcpRouteTimeoutIdleArgs) RouteSpecTcpRouteTimeoutIdlePtrInput {
	return (*routeSpecTcpRouteTimeoutIdlePtrType)(v)
}

func (*routeSpecTcpRouteTimeoutIdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRouteTimeoutIdle)(nil)).Elem()
}

func (i *routeSpecTcpRouteTimeoutIdlePtrType) ToRouteSpecTcpRouteTimeoutIdlePtrOutput() RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i *routeSpecTcpRouteTimeoutIdlePtrType) ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteTimeoutIdlePtrOutput)
}

type RouteSpecTcpRouteTimeoutIdleOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteTimeoutIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecTcpRouteTimeoutIdleOutput) ToRouteSpecTcpRouteTimeoutIdleOutput() RouteSpecTcpRouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutIdleOutput) ToRouteSpecTcpRouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutIdleOutput) ToRouteSpecTcpRouteTimeoutIdlePtrOutput() RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return o.ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (o RouteSpecTcpRouteTimeoutIdleOutput) ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecTcpRouteTimeoutIdle) *RouteSpecTcpRouteTimeoutIdle {
		return &v
	}).(RouteSpecTcpRouteTimeoutIdlePtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o RouteSpecTcpRouteTimeoutIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecTcpRouteTimeoutIdle) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o RouteSpecTcpRouteTimeoutIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecTcpRouteTimeoutIdle) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecTcpRouteTimeoutIdlePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteTimeoutIdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecTcpRouteTimeoutIdlePtrOutput) ToRouteSpecTcpRouteTimeoutIdlePtrOutput() RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutIdlePtrOutput) ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutIdlePtrOutput) Elem() RouteSpecTcpRouteTimeoutIdleOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteTimeoutIdle) RouteSpecTcpRouteTimeoutIdle {
		if v != nil {
			return *v
		}
		var ret RouteSpecTcpRouteTimeoutIdle
		return ret
	}).(RouteSpecTcpRouteTimeoutIdleOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o RouteSpecTcpRouteTimeoutIdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteTimeoutIdle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o RouteSpecTcpRouteTimeoutIdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteTimeoutIdle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualGatewaySpec struct {
	// The defaults for backends.
	BackendDefaults *VirtualGatewaySpecBackendDefaults `pulumi:"backendDefaults"`
	// The listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.
	Listener VirtualGatewaySpecListener `pulumi:"listener"`
	// The inbound and outbound access logging information for the virtual gateway.
	Logging *VirtualGatewaySpecLogging `pulumi:"logging"`
}

// VirtualGatewaySpecInput is an input type that accepts VirtualGatewaySpecArgs and VirtualGatewaySpecOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecInput` via:
//
//          VirtualGatewaySpecArgs{...}
type VirtualGatewaySpecInput interface {
	pulumi.Input

	ToVirtualGatewaySpecOutput() VirtualGatewaySpecOutput
	ToVirtualGatewaySpecOutputWithContext(context.Context) VirtualGatewaySpecOutput
}

type VirtualGatewaySpecArgs struct {
	// The defaults for backends.
	BackendDefaults VirtualGatewaySpecBackendDefaultsPtrInput `pulumi:"backendDefaults"`
	// The listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.
	Listener VirtualGatewaySpecListenerInput `pulumi:"listener"`
	// The inbound and outbound access logging information for the virtual gateway.
	Logging VirtualGatewaySpecLoggingPtrInput `pulumi:"logging"`
}

func (VirtualGatewaySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpec)(nil)).Elem()
}

func (i VirtualGatewaySpecArgs) ToVirtualGatewaySpecOutput() VirtualGatewaySpecOutput {
	return i.ToVirtualGatewaySpecOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecArgs) ToVirtualGatewaySpecOutputWithContext(ctx context.Context) VirtualGatewaySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecOutput)
}

func (i VirtualGatewaySpecArgs) ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput {
	return i.ToVirtualGatewaySpecPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecArgs) ToVirtualGatewaySpecPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecOutput).ToVirtualGatewaySpecPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecPtrInput is an input type that accepts VirtualGatewaySpecArgs, VirtualGatewaySpecPtr and VirtualGatewaySpecPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecPtrInput` via:
//
//          VirtualGatewaySpecArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput
	ToVirtualGatewaySpecPtrOutputWithContext(context.Context) VirtualGatewaySpecPtrOutput
}

type virtualGatewaySpecPtrType VirtualGatewaySpecArgs

func VirtualGatewaySpecPtr(v *VirtualGatewaySpecArgs) VirtualGatewaySpecPtrInput {
	return (*virtualGatewaySpecPtrType)(v)
}

func (*virtualGatewaySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpec)(nil)).Elem()
}

func (i *virtualGatewaySpecPtrType) ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput {
	return i.ToVirtualGatewaySpecPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecPtrType) ToVirtualGatewaySpecPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecPtrOutput)
}

type VirtualGatewaySpecOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpec)(nil)).Elem()
}

func (o VirtualGatewaySpecOutput) ToVirtualGatewaySpecOutput() VirtualGatewaySpecOutput {
	return o
}

func (o VirtualGatewaySpecOutput) ToVirtualGatewaySpecOutputWithContext(ctx context.Context) VirtualGatewaySpecOutput {
	return o
}

func (o VirtualGatewaySpecOutput) ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput {
	return o.ToVirtualGatewaySpecPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecOutput) ToVirtualGatewaySpecPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpec) *VirtualGatewaySpec {
		return &v
	}).(VirtualGatewaySpecPtrOutput)
}

// The defaults for backends.
func (o VirtualGatewaySpecOutput) BackendDefaults() VirtualGatewaySpecBackendDefaultsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpec) *VirtualGatewaySpecBackendDefaults { return v.BackendDefaults }).(VirtualGatewaySpecBackendDefaultsPtrOutput)
}

// The listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.
func (o VirtualGatewaySpecOutput) Listener() VirtualGatewaySpecListenerOutput {
	return o.ApplyT(func(v VirtualGatewaySpec) VirtualGatewaySpecListener { return v.Listener }).(VirtualGatewaySpecListenerOutput)
}

// The inbound and outbound access logging information for the virtual gateway.
func (o VirtualGatewaySpecOutput) Logging() VirtualGatewaySpecLoggingPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpec) *VirtualGatewaySpecLogging { return v.Logging }).(VirtualGatewaySpecLoggingPtrOutput)
}

type VirtualGatewaySpecPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpec)(nil)).Elem()
}

func (o VirtualGatewaySpecPtrOutput) ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput {
	return o
}

func (o VirtualGatewaySpecPtrOutput) ToVirtualGatewaySpecPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecPtrOutput {
	return o
}

func (o VirtualGatewaySpecPtrOutput) Elem() VirtualGatewaySpecOutput {
	return o.ApplyT(func(v *VirtualGatewaySpec) VirtualGatewaySpec {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpec
		return ret
	}).(VirtualGatewaySpecOutput)
}

// The defaults for backends.
func (o VirtualGatewaySpecPtrOutput) BackendDefaults() VirtualGatewaySpecBackendDefaultsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpec) *VirtualGatewaySpecBackendDefaults {
		if v == nil {
			return nil
		}
		return v.BackendDefaults
	}).(VirtualGatewaySpecBackendDefaultsPtrOutput)
}

// The listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.
func (o VirtualGatewaySpecPtrOutput) Listener() VirtualGatewaySpecListenerPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpec) *VirtualGatewaySpecListener {
		if v == nil {
			return nil
		}
		return &v.Listener
	}).(VirtualGatewaySpecListenerPtrOutput)
}

// The inbound and outbound access logging information for the virtual gateway.
func (o VirtualGatewaySpecPtrOutput) Logging() VirtualGatewaySpecLoggingPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpec) *VirtualGatewaySpecLogging {
		if v == nil {
			return nil
		}
		return v.Logging
	}).(VirtualGatewaySpecLoggingPtrOutput)
}

type VirtualGatewaySpecBackendDefaults struct {
	// The default client policy for virtual gateway backends.
	ClientPolicy *VirtualGatewaySpecBackendDefaultsClientPolicy `pulumi:"clientPolicy"`
}

// VirtualGatewaySpecBackendDefaultsInput is an input type that accepts VirtualGatewaySpecBackendDefaultsArgs and VirtualGatewaySpecBackendDefaultsOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsInput` via:
//
//          VirtualGatewaySpecBackendDefaultsArgs{...}
type VirtualGatewaySpecBackendDefaultsInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsOutput() VirtualGatewaySpecBackendDefaultsOutput
	ToVirtualGatewaySpecBackendDefaultsOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsOutput
}

type VirtualGatewaySpecBackendDefaultsArgs struct {
	// The default client policy for virtual gateway backends.
	ClientPolicy VirtualGatewaySpecBackendDefaultsClientPolicyPtrInput `pulumi:"clientPolicy"`
}

func (VirtualGatewaySpecBackendDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaults)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsArgs) ToVirtualGatewaySpecBackendDefaultsOutput() VirtualGatewaySpecBackendDefaultsOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsArgs) ToVirtualGatewaySpecBackendDefaultsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsOutput)
}

func (i VirtualGatewaySpecBackendDefaultsArgs) ToVirtualGatewaySpecBackendDefaultsPtrOutput() VirtualGatewaySpecBackendDefaultsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsArgs) ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsOutput).ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsArgs, VirtualGatewaySpecBackendDefaultsPtr and VirtualGatewaySpecBackendDefaultsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsPtrInput` via:
//
//          VirtualGatewaySpecBackendDefaultsArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecBackendDefaultsPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsPtrOutput() VirtualGatewaySpecBackendDefaultsPtrOutput
	ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsPtrOutput
}

type virtualGatewaySpecBackendDefaultsPtrType VirtualGatewaySpecBackendDefaultsArgs

func VirtualGatewaySpecBackendDefaultsPtr(v *VirtualGatewaySpecBackendDefaultsArgs) VirtualGatewaySpecBackendDefaultsPtrInput {
	return (*virtualGatewaySpecBackendDefaultsPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaults)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsPtrType) ToVirtualGatewaySpecBackendDefaultsPtrOutput() VirtualGatewaySpecBackendDefaultsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsPtrType) ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaults)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsOutput) ToVirtualGatewaySpecBackendDefaultsOutput() VirtualGatewaySpecBackendDefaultsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsOutput) ToVirtualGatewaySpecBackendDefaultsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsOutput) ToVirtualGatewaySpecBackendDefaultsPtrOutput() VirtualGatewaySpecBackendDefaultsPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsOutput) ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaults) *VirtualGatewaySpecBackendDefaults {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsPtrOutput)
}

// The default client policy for virtual gateway backends.
func (o VirtualGatewaySpecBackendDefaultsOutput) ClientPolicy() VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaults) *VirtualGatewaySpecBackendDefaultsClientPolicy {
		return v.ClientPolicy
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaults)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsPtrOutput) ToVirtualGatewaySpecBackendDefaultsPtrOutput() VirtualGatewaySpecBackendDefaultsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsPtrOutput) ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaults) VirtualGatewaySpecBackendDefaults {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaults
		return ret
	}).(VirtualGatewaySpecBackendDefaultsOutput)
}

// The default client policy for virtual gateway backends.
func (o VirtualGatewaySpecBackendDefaultsPtrOutput) ClientPolicy() VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaults) *VirtualGatewaySpecBackendDefaultsClientPolicy {
		if v == nil {
			return nil
		}
		return v.ClientPolicy
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicy struct {
	// The Transport Layer Security (TLS) client policy.
	Tls *VirtualGatewaySpecBackendDefaultsClientPolicyTls `pulumi:"tls"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyArgs and VirtualGatewaySpecBackendDefaultsClientPolicyOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyOutput() VirtualGatewaySpecBackendDefaultsClientPolicyOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyArgs struct {
	// The Transport Layer Security (TLS) client policy.
	Tls VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrInput `pulumi:"tls"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyOutput() VirtualGatewaySpecBackendDefaultsClientPolicyOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyArgs, VirtualGatewaySpecBackendDefaultsClientPolicyPtr and VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyPtrInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecBackendDefaultsClientPolicyPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyPtrType VirtualGatewaySpecBackendDefaultsClientPolicyArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyArgs) VirtualGatewaySpecBackendDefaultsClientPolicyPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyOutput() VirtualGatewaySpecBackendDefaultsClientPolicyOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicy) *VirtualGatewaySpecBackendDefaultsClientPolicy {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput)
}

// The Transport Layer Security (TLS) client policy.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyOutput) Tls() VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicy) *VirtualGatewaySpecBackendDefaultsClientPolicyTls {
		return v.Tls
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicy) VirtualGatewaySpecBackendDefaultsClientPolicy {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicy
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyOutput)
}

// The Transport Layer Security (TLS) client policy.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput) Tls() VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicy) *VirtualGatewaySpecBackendDefaultsClientPolicyTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTls struct {
	// The listener's TLS certificate.
	Certificate *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate `pulumi:"certificate"`
	// Whether the policy is enforced. Default is `true`.
	Enforce *bool `pulumi:"enforce"`
	// One or more ports that the policy is enforced for.
	Ports []int `pulumi:"ports"`
	// The listener's Transport Layer Security (TLS) validation context.
	Validation VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation `pulumi:"validation"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs struct {
	// The listener's TLS certificate.
	Certificate VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrInput `pulumi:"certificate"`
	// Whether the policy is enforced. Default is `true`.
	Enforce pulumi.BoolPtrInput `pulumi:"enforce"`
	// One or more ports that the policy is enforced for.
	Ports pulumi.IntArrayInput `pulumi:"ports"`
	// The listener's Transport Layer Security (TLS) validation context.
	Validation VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationInput `pulumi:"validation"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTls) *VirtualGatewaySpecBackendDefaultsClientPolicyTls {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput)
}

// The listener's TLS certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) Certificate() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTls) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate {
		return v.Certificate
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

// Whether the policy is enforced. Default is `true`.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTls) *bool { return v.Enforce }).(pulumi.BoolPtrOutput)
}

// One or more ports that the policy is enforced for.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTls) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

// The listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) Validation() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTls) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation {
		return v.Validation
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTls) VirtualGatewaySpecBackendDefaultsClientPolicyTls {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTls
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput)
}

// The listener's TLS certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) Certificate() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTls) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

// Whether the policy is enforced. Default is `true`.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTls) *bool {
		if v == nil {
			return nil
		}
		return v.Enforce
	}).(pulumi.BoolPtrOutput)
}

// One or more ports that the policy is enforced for.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTls) []int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntArrayOutput)
}

// The listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) Validation() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTls) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation {
		if v == nil {
			return nil
		}
		return &v.Validation
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate struct {
	// A local file certificate.
	File *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds `pulumi:"sds"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs struct {
	// A local file certificate.
	File VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput `pulumi:"sds"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

// A local file certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput) File() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile {
		return v.File
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput) Sds() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds {
		return v.Sds
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput)
}

// A local file certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) File() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) Sds() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
	// The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey string `pulumi:"privateKey"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	// The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

// The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

// The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds struct {
	// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs struct {
	// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput)
}

// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation struct {
	// The SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
	SubjectAlternativeNames *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames `pulumi:"subjectAlternativeNames"`
	// The TLS validation context trust.
	Trust VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust `pulumi:"trust"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs struct {
	// The SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
	SubjectAlternativeNames VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput `pulumi:"subjectAlternativeNames"`
	// The TLS validation context trust.
	Trust VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustInput `pulumi:"trust"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput)
}

// The SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput) SubjectAlternativeNames() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		return v.SubjectAlternativeNames
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The TLS validation context trust.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput) Trust() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust {
		return v.Trust
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput)
}

// The SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput) SubjectAlternativeNames() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The TLS validation context trust.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput) Trust() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust {
		if v == nil {
			return nil
		}
		return &v.Trust
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames struct {
	// The criteria for determining a SAN's match.
	Match VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch `pulumi:"match"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs struct {
	// The criteria for determining a SAN's match.
	Match VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput `pulumi:"match"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The criteria for determining a SAN's match.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) Match() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		return v.Match
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput)
}

// The criteria for determining a SAN's match.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) Match() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch struct {
	// The values sent must match the specified values exactly.
	Exacts []string `pulumi:"exacts"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs struct {
	// The values sent must match the specified values exactly.
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

// The values sent must match the specified values exactly.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) []string {
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

// The values sent must match the specified values exactly.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) []string {
		if v == nil {
			return nil
		}
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust struct {
	// The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
	Acm *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm `pulumi:"acm"`
	// The TLS validation context trust for a local file certificate.
	File *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile `pulumi:"file"`
	// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds `pulumi:"sds"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs struct {
	// The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
	Acm VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput `pulumi:"acm"`
	// The TLS validation context trust for a local file certificate.
	File VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput `pulumi:"file"`
	// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput `pulumi:"sds"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput)
}

// The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) Acm() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		return v.Acm
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

// The TLS validation context trust for a local file certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) File() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		return v.File
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) Sds() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		return v.Sds
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput)
}

// The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) Acm() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		if v == nil {
			return nil
		}
		return v.Acm
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

// The TLS validation context trust for a local file certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) File() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) Sds() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm struct {
	// One or more ACM Amazon Resource Name (ARN)s.
	CertificateAuthorityArns []string `pulumi:"certificateAuthorityArns"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs struct {
	// One or more ACM Amazon Resource Name (ARN)s.
	CertificateAuthorityArns pulumi.StringArrayInput `pulumi:"certificateAuthorityArns"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

// One or more ACM Amazon Resource Name (ARN)s.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm) []string {
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput)
}

// One or more ACM Amazon Resource Name (ARN)s.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm) []string {
		if v == nil {
			return nil
		}
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds struct {
	// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs struct {
	// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput` via:
//
//          VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput)
}

// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecListener struct {
	// The connection pool information for the listener.
	ConnectionPool *VirtualGatewaySpecListenerConnectionPool `pulumi:"connectionPool"`
	// The health check information for the listener.
	HealthCheck *VirtualGatewaySpecListenerHealthCheck `pulumi:"healthCheck"`
	// The port mapping information for the listener.
	PortMapping VirtualGatewaySpecListenerPortMapping `pulumi:"portMapping"`
	// The Transport Layer Security (TLS) properties for the listener
	Tls *VirtualGatewaySpecListenerTls `pulumi:"tls"`
}

// VirtualGatewaySpecListenerInput is an input type that accepts VirtualGatewaySpecListenerArgs and VirtualGatewaySpecListenerOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerInput` via:
//
//          VirtualGatewaySpecListenerArgs{...}
type VirtualGatewaySpecListenerInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerOutput() VirtualGatewaySpecListenerOutput
	ToVirtualGatewaySpecListenerOutputWithContext(context.Context) VirtualGatewaySpecListenerOutput
}

type VirtualGatewaySpecListenerArgs struct {
	// The connection pool information for the listener.
	ConnectionPool VirtualGatewaySpecListenerConnectionPoolPtrInput `pulumi:"connectionPool"`
	// The health check information for the listener.
	HealthCheck VirtualGatewaySpecListenerHealthCheckPtrInput `pulumi:"healthCheck"`
	// The port mapping information for the listener.
	PortMapping VirtualGatewaySpecListenerPortMappingInput `pulumi:"portMapping"`
	// The Transport Layer Security (TLS) properties for the listener
	Tls VirtualGatewaySpecListenerTlsPtrInput `pulumi:"tls"`
}

func (VirtualGatewaySpecListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListener)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerArgs) ToVirtualGatewaySpecListenerOutput() VirtualGatewaySpecListenerOutput {
	return i.ToVirtualGatewaySpecListenerOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerArgs) ToVirtualGatewaySpecListenerOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerOutput)
}

func (i VirtualGatewaySpecListenerArgs) ToVirtualGatewaySpecListenerPtrOutput() VirtualGatewaySpecListenerPtrOutput {
	return i.ToVirtualGatewaySpecListenerPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerArgs) ToVirtualGatewaySpecListenerPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerOutput).ToVirtualGatewaySpecListenerPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerPtrInput is an input type that accepts VirtualGatewaySpecListenerArgs, VirtualGatewaySpecListenerPtr and VirtualGatewaySpecListenerPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerPtrInput` via:
//
//          VirtualGatewaySpecListenerArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerPtrOutput() VirtualGatewaySpecListenerPtrOutput
	ToVirtualGatewaySpecListenerPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerPtrOutput
}

type virtualGatewaySpecListenerPtrType VirtualGatewaySpecListenerArgs

func VirtualGatewaySpecListenerPtr(v *VirtualGatewaySpecListenerArgs) VirtualGatewaySpecListenerPtrInput {
	return (*virtualGatewaySpecListenerPtrType)(v)
}

func (*virtualGatewaySpecListenerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListener)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerPtrType) ToVirtualGatewaySpecListenerPtrOutput() VirtualGatewaySpecListenerPtrOutput {
	return i.ToVirtualGatewaySpecListenerPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerPtrType) ToVirtualGatewaySpecListenerPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerPtrOutput)
}

type VirtualGatewaySpecListenerOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListener)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerOutput) ToVirtualGatewaySpecListenerOutput() VirtualGatewaySpecListenerOutput {
	return o
}

func (o VirtualGatewaySpecListenerOutput) ToVirtualGatewaySpecListenerOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerOutput {
	return o
}

func (o VirtualGatewaySpecListenerOutput) ToVirtualGatewaySpecListenerPtrOutput() VirtualGatewaySpecListenerPtrOutput {
	return o.ToVirtualGatewaySpecListenerPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerOutput) ToVirtualGatewaySpecListenerPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListener) *VirtualGatewaySpecListener {
		return &v
	}).(VirtualGatewaySpecListenerPtrOutput)
}

// The connection pool information for the listener.
func (o VirtualGatewaySpecListenerOutput) ConnectionPool() VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListener) *VirtualGatewaySpecListenerConnectionPool { return v.ConnectionPool }).(VirtualGatewaySpecListenerConnectionPoolPtrOutput)
}

// The health check information for the listener.
func (o VirtualGatewaySpecListenerOutput) HealthCheck() VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListener) *VirtualGatewaySpecListenerHealthCheck { return v.HealthCheck }).(VirtualGatewaySpecListenerHealthCheckPtrOutput)
}

// The port mapping information for the listener.
func (o VirtualGatewaySpecListenerOutput) PortMapping() VirtualGatewaySpecListenerPortMappingOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListener) VirtualGatewaySpecListenerPortMapping { return v.PortMapping }).(VirtualGatewaySpecListenerPortMappingOutput)
}

// The Transport Layer Security (TLS) properties for the listener
func (o VirtualGatewaySpecListenerOutput) Tls() VirtualGatewaySpecListenerTlsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListener) *VirtualGatewaySpecListenerTls { return v.Tls }).(VirtualGatewaySpecListenerTlsPtrOutput)
}

type VirtualGatewaySpecListenerPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListener)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerPtrOutput) ToVirtualGatewaySpecListenerPtrOutput() VirtualGatewaySpecListenerPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerPtrOutput) ToVirtualGatewaySpecListenerPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerPtrOutput) Elem() VirtualGatewaySpecListenerOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListener) VirtualGatewaySpecListener {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListener
		return ret
	}).(VirtualGatewaySpecListenerOutput)
}

// The connection pool information for the listener.
func (o VirtualGatewaySpecListenerPtrOutput) ConnectionPool() VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListener) *VirtualGatewaySpecListenerConnectionPool {
		if v == nil {
			return nil
		}
		return v.ConnectionPool
	}).(VirtualGatewaySpecListenerConnectionPoolPtrOutput)
}

// The health check information for the listener.
func (o VirtualGatewaySpecListenerPtrOutput) HealthCheck() VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListener) *VirtualGatewaySpecListenerHealthCheck {
		if v == nil {
			return nil
		}
		return v.HealthCheck
	}).(VirtualGatewaySpecListenerHealthCheckPtrOutput)
}

// The port mapping information for the listener.
func (o VirtualGatewaySpecListenerPtrOutput) PortMapping() VirtualGatewaySpecListenerPortMappingPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListener) *VirtualGatewaySpecListenerPortMapping {
		if v == nil {
			return nil
		}
		return &v.PortMapping
	}).(VirtualGatewaySpecListenerPortMappingPtrOutput)
}

// The Transport Layer Security (TLS) properties for the listener
func (o VirtualGatewaySpecListenerPtrOutput) Tls() VirtualGatewaySpecListenerTlsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListener) *VirtualGatewaySpecListenerTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(VirtualGatewaySpecListenerTlsPtrOutput)
}

type VirtualGatewaySpecListenerConnectionPool struct {
	// Connection pool information for gRPC listeners.
	Grpc *VirtualGatewaySpecListenerConnectionPoolGrpc `pulumi:"grpc"`
	// Connection pool information for HTTP listeners.
	Http *VirtualGatewaySpecListenerConnectionPoolHttp `pulumi:"http"`
	// Connection pool information for HTTP2 listeners.
	Http2 *VirtualGatewaySpecListenerConnectionPoolHttp2 `pulumi:"http2"`
}

// VirtualGatewaySpecListenerConnectionPoolInput is an input type that accepts VirtualGatewaySpecListenerConnectionPoolArgs and VirtualGatewaySpecListenerConnectionPoolOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolInput` via:
//
//          VirtualGatewaySpecListenerConnectionPoolArgs{...}
type VirtualGatewaySpecListenerConnectionPoolInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolOutput() VirtualGatewaySpecListenerConnectionPoolOutput
	ToVirtualGatewaySpecListenerConnectionPoolOutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolOutput
}

type VirtualGatewaySpecListenerConnectionPoolArgs struct {
	// Connection pool information for gRPC listeners.
	Grpc VirtualGatewaySpecListenerConnectionPoolGrpcPtrInput `pulumi:"grpc"`
	// Connection pool information for HTTP listeners.
	Http VirtualGatewaySpecListenerConnectionPoolHttpPtrInput `pulumi:"http"`
	// Connection pool information for HTTP2 listeners.
	Http2 VirtualGatewaySpecListenerConnectionPoolHttp2PtrInput `pulumi:"http2"`
}

func (VirtualGatewaySpecListenerConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPool)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerConnectionPoolArgs) ToVirtualGatewaySpecListenerConnectionPoolOutput() VirtualGatewaySpecListenerConnectionPoolOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolArgs) ToVirtualGatewaySpecListenerConnectionPoolOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolOutput)
}

func (i VirtualGatewaySpecListenerConnectionPoolArgs) ToVirtualGatewaySpecListenerConnectionPoolPtrOutput() VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolArgs) ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolOutput).ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerConnectionPoolPtrInput is an input type that accepts VirtualGatewaySpecListenerConnectionPoolArgs, VirtualGatewaySpecListenerConnectionPoolPtr and VirtualGatewaySpecListenerConnectionPoolPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolPtrInput` via:
//
//          VirtualGatewaySpecListenerConnectionPoolArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerConnectionPoolPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolPtrOutput() VirtualGatewaySpecListenerConnectionPoolPtrOutput
	ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolPtrOutput
}

type virtualGatewaySpecListenerConnectionPoolPtrType VirtualGatewaySpecListenerConnectionPoolArgs

func VirtualGatewaySpecListenerConnectionPoolPtr(v *VirtualGatewaySpecListenerConnectionPoolArgs) VirtualGatewaySpecListenerConnectionPoolPtrInput {
	return (*virtualGatewaySpecListenerConnectionPoolPtrType)(v)
}

func (*virtualGatewaySpecListenerConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPool)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerConnectionPoolPtrType) ToVirtualGatewaySpecListenerConnectionPoolPtrOutput() VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerConnectionPoolPtrType) ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolPtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPool)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolOutput) ToVirtualGatewaySpecListenerConnectionPoolOutput() VirtualGatewaySpecListenerConnectionPoolOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolOutput) ToVirtualGatewaySpecListenerConnectionPoolOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolOutput) ToVirtualGatewaySpecListenerConnectionPoolPtrOutput() VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return o.ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerConnectionPoolOutput) ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerConnectionPool) *VirtualGatewaySpecListenerConnectionPool {
		return &v
	}).(VirtualGatewaySpecListenerConnectionPoolPtrOutput)
}

// Connection pool information for gRPC listeners.
func (o VirtualGatewaySpecListenerConnectionPoolOutput) Grpc() VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerConnectionPool) *VirtualGatewaySpecListenerConnectionPoolGrpc {
		return v.Grpc
	}).(VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput)
}

// Connection pool information for HTTP listeners.
func (o VirtualGatewaySpecListenerConnectionPoolOutput) Http() VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerConnectionPool) *VirtualGatewaySpecListenerConnectionPoolHttp {
		return v.Http
	}).(VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput)
}

// Connection pool information for HTTP2 listeners.
func (o VirtualGatewaySpecListenerConnectionPoolOutput) Http2() VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerConnectionPool) *VirtualGatewaySpecListenerConnectionPoolHttp2 {
		return v.Http2
	}).(VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPool)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolPtrOutput) ToVirtualGatewaySpecListenerConnectionPoolPtrOutput() VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolPtrOutput) ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolPtrOutput) Elem() VirtualGatewaySpecListenerConnectionPoolOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPool) VirtualGatewaySpecListenerConnectionPool {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerConnectionPool
		return ret
	}).(VirtualGatewaySpecListenerConnectionPoolOutput)
}

// Connection pool information for gRPC listeners.
func (o VirtualGatewaySpecListenerConnectionPoolPtrOutput) Grpc() VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPool) *VirtualGatewaySpecListenerConnectionPoolGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput)
}

// Connection pool information for HTTP listeners.
func (o VirtualGatewaySpecListenerConnectionPoolPtrOutput) Http() VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPool) *VirtualGatewaySpecListenerConnectionPoolHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput)
}

// Connection pool information for HTTP2 listeners.
func (o VirtualGatewaySpecListenerConnectionPoolPtrOutput) Http2() VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPool) *VirtualGatewaySpecListenerConnectionPoolHttp2 {
		if v == nil {
			return nil
		}
		return v.Http2
	}).(VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolGrpc struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests int `pulumi:"maxRequests"`
}

// VirtualGatewaySpecListenerConnectionPoolGrpcInput is an input type that accepts VirtualGatewaySpecListenerConnectionPoolGrpcArgs and VirtualGatewaySpecListenerConnectionPoolGrpcOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolGrpcInput` via:
//
//          VirtualGatewaySpecListenerConnectionPoolGrpcArgs{...}
type VirtualGatewaySpecListenerConnectionPoolGrpcInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolGrpcOutput() VirtualGatewaySpecListenerConnectionPoolGrpcOutput
	ToVirtualGatewaySpecListenerConnectionPoolGrpcOutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcOutput
}

type VirtualGatewaySpecListenerConnectionPoolGrpcArgs struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (VirtualGatewaySpecListenerConnectionPoolGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerConnectionPoolGrpcArgs) ToVirtualGatewaySpecListenerConnectionPoolGrpcOutput() VirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolGrpcOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolGrpcArgs) ToVirtualGatewaySpecListenerConnectionPoolGrpcOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolGrpcOutput)
}

func (i VirtualGatewaySpecListenerConnectionPoolGrpcArgs) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput() VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolGrpcArgs) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolGrpcOutput).ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerConnectionPoolGrpcPtrInput is an input type that accepts VirtualGatewaySpecListenerConnectionPoolGrpcArgs, VirtualGatewaySpecListenerConnectionPoolGrpcPtr and VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolGrpcPtrInput` via:
//
//          VirtualGatewaySpecListenerConnectionPoolGrpcArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerConnectionPoolGrpcPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput() VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput
	ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput
}

type virtualGatewaySpecListenerConnectionPoolGrpcPtrType VirtualGatewaySpecListenerConnectionPoolGrpcArgs

func VirtualGatewaySpecListenerConnectionPoolGrpcPtr(v *VirtualGatewaySpecListenerConnectionPoolGrpcArgs) VirtualGatewaySpecListenerConnectionPoolGrpcPtrInput {
	return (*virtualGatewaySpecListenerConnectionPoolGrpcPtrType)(v)
}

func (*virtualGatewaySpecListenerConnectionPoolGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerConnectionPoolGrpcPtrType) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput() VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerConnectionPoolGrpcPtrType) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolGrpcOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolGrpcOutput) ToVirtualGatewaySpecListenerConnectionPoolGrpcOutput() VirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolGrpcOutput) ToVirtualGatewaySpecListenerConnectionPoolGrpcOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolGrpcOutput) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput() VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return o.ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerConnectionPoolGrpcOutput) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerConnectionPoolGrpc) *VirtualGatewaySpecListenerConnectionPoolGrpc {
		return &v
	}).(VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput)
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualGatewaySpecListenerConnectionPoolGrpcOutput) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerConnectionPoolGrpc) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput() VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput) Elem() VirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPoolGrpc) VirtualGatewaySpecListenerConnectionPoolGrpc {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerConnectionPoolGrpc
		return ret
	}).(VirtualGatewaySpecListenerConnectionPoolGrpcOutput)
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput) MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPoolGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolHttp2 struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests int `pulumi:"maxRequests"`
}

// VirtualGatewaySpecListenerConnectionPoolHttp2Input is an input type that accepts VirtualGatewaySpecListenerConnectionPoolHttp2Args and VirtualGatewaySpecListenerConnectionPoolHttp2Output values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolHttp2Input` via:
//
//          VirtualGatewaySpecListenerConnectionPoolHttp2Args{...}
type VirtualGatewaySpecListenerConnectionPoolHttp2Input interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolHttp2Output() VirtualGatewaySpecListenerConnectionPoolHttp2Output
	ToVirtualGatewaySpecListenerConnectionPoolHttp2OutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2Output
}

type VirtualGatewaySpecListenerConnectionPoolHttp2Args struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (VirtualGatewaySpecListenerConnectionPoolHttp2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerConnectionPoolHttp2Args) ToVirtualGatewaySpecListenerConnectionPoolHttp2Output() VirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return i.ToVirtualGatewaySpecListenerConnectionPoolHttp2OutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolHttp2Args) ToVirtualGatewaySpecListenerConnectionPoolHttp2OutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolHttp2Output)
}

func (i VirtualGatewaySpecListenerConnectionPoolHttp2Args) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput() VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolHttp2Args) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolHttp2Output).ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerConnectionPoolHttp2PtrInput is an input type that accepts VirtualGatewaySpecListenerConnectionPoolHttp2Args, VirtualGatewaySpecListenerConnectionPoolHttp2Ptr and VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolHttp2PtrInput` via:
//
//          VirtualGatewaySpecListenerConnectionPoolHttp2Args{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerConnectionPoolHttp2PtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput() VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput
	ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput
}

type virtualGatewaySpecListenerConnectionPoolHttp2PtrType VirtualGatewaySpecListenerConnectionPoolHttp2Args

func VirtualGatewaySpecListenerConnectionPoolHttp2Ptr(v *VirtualGatewaySpecListenerConnectionPoolHttp2Args) VirtualGatewaySpecListenerConnectionPoolHttp2PtrInput {
	return (*virtualGatewaySpecListenerConnectionPoolHttp2PtrType)(v)
}

func (*virtualGatewaySpecListenerConnectionPoolHttp2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerConnectionPoolHttp2PtrType) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput() VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerConnectionPoolHttp2PtrType) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolHttp2Output struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolHttp2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolHttp2Output) ToVirtualGatewaySpecListenerConnectionPoolHttp2Output() VirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttp2Output) ToVirtualGatewaySpecListenerConnectionPoolHttp2OutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttp2Output) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput() VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return o.ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerConnectionPoolHttp2Output) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerConnectionPoolHttp2) *VirtualGatewaySpecListenerConnectionPoolHttp2 {
		return &v
	}).(VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput)
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualGatewaySpecListenerConnectionPoolHttp2Output) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerConnectionPoolHttp2) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput() VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput) Elem() VirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPoolHttp2) VirtualGatewaySpecListenerConnectionPoolHttp2 {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerConnectionPoolHttp2
		return ret
	}).(VirtualGatewaySpecListenerConnectionPoolHttp2Output)
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput) MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPoolHttp2) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolHttp struct {
	// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
	MaxConnections int `pulumi:"maxConnections"`
	// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
	MaxPendingRequests *int `pulumi:"maxPendingRequests"`
}

// VirtualGatewaySpecListenerConnectionPoolHttpInput is an input type that accepts VirtualGatewaySpecListenerConnectionPoolHttpArgs and VirtualGatewaySpecListenerConnectionPoolHttpOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolHttpInput` via:
//
//          VirtualGatewaySpecListenerConnectionPoolHttpArgs{...}
type VirtualGatewaySpecListenerConnectionPoolHttpInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolHttpOutput() VirtualGatewaySpecListenerConnectionPoolHttpOutput
	ToVirtualGatewaySpecListenerConnectionPoolHttpOutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolHttpOutput
}

type VirtualGatewaySpecListenerConnectionPoolHttpArgs struct {
	// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
	MaxPendingRequests pulumi.IntPtrInput `pulumi:"maxPendingRequests"`
}

func (VirtualGatewaySpecListenerConnectionPoolHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerConnectionPoolHttpArgs) ToVirtualGatewaySpecListenerConnectionPoolHttpOutput() VirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolHttpOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolHttpArgs) ToVirtualGatewaySpecListenerConnectionPoolHttpOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolHttpOutput)
}

func (i VirtualGatewaySpecListenerConnectionPoolHttpArgs) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutput() VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolHttpArgs) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolHttpOutput).ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerConnectionPoolHttpPtrInput is an input type that accepts VirtualGatewaySpecListenerConnectionPoolHttpArgs, VirtualGatewaySpecListenerConnectionPoolHttpPtr and VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolHttpPtrInput` via:
//
//          VirtualGatewaySpecListenerConnectionPoolHttpArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerConnectionPoolHttpPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutput() VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput
	ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput
}

type virtualGatewaySpecListenerConnectionPoolHttpPtrType VirtualGatewaySpecListenerConnectionPoolHttpArgs

func VirtualGatewaySpecListenerConnectionPoolHttpPtr(v *VirtualGatewaySpecListenerConnectionPoolHttpArgs) VirtualGatewaySpecListenerConnectionPoolHttpPtrInput {
	return (*virtualGatewaySpecListenerConnectionPoolHttpPtrType)(v)
}

func (*virtualGatewaySpecListenerConnectionPoolHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerConnectionPoolHttpPtrType) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutput() VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerConnectionPoolHttpPtrType) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolHttpOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolHttpOutput) ToVirtualGatewaySpecListenerConnectionPoolHttpOutput() VirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttpOutput) ToVirtualGatewaySpecListenerConnectionPoolHttpOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttpOutput) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutput() VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return o.ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerConnectionPoolHttpOutput) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerConnectionPoolHttp) *VirtualGatewaySpecListenerConnectionPoolHttp {
		return &v
	}).(VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput)
}

// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
func (o VirtualGatewaySpecListenerConnectionPoolHttpOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerConnectionPoolHttp) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
func (o VirtualGatewaySpecListenerConnectionPoolHttpOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerConnectionPoolHttp) *int { return v.MaxPendingRequests }).(pulumi.IntPtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutput() VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput) Elem() VirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPoolHttp) VirtualGatewaySpecListenerConnectionPoolHttp {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerConnectionPoolHttp
		return ret
	}).(VirtualGatewaySpecListenerConnectionPoolHttpOutput)
}

// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
func (o VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return &v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
func (o VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualGatewaySpecListenerHealthCheck struct {
	// The number of consecutive successful health checks that must occur before declaring listener healthy.
	HealthyThreshold int `pulumi:"healthyThreshold"`
	// The time period in milliseconds between each health check execution.
	IntervalMillis int `pulumi:"intervalMillis"`
	// The destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
	Path *string `pulumi:"path"`
	// The destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
	Port *int `pulumi:"port"`
	// The protocol for the health check request. Valid values are `http`, `http2`, and `grpc`.
	Protocol string `pulumi:"protocol"`
	// The amount of time to wait when receiving a response from the health check, in milliseconds.
	TimeoutMillis int `pulumi:"timeoutMillis"`
	// The number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.
	UnhealthyThreshold int `pulumi:"unhealthyThreshold"`
}

// VirtualGatewaySpecListenerHealthCheckInput is an input type that accepts VirtualGatewaySpecListenerHealthCheckArgs and VirtualGatewaySpecListenerHealthCheckOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerHealthCheckInput` via:
//
//          VirtualGatewaySpecListenerHealthCheckArgs{...}
type VirtualGatewaySpecListenerHealthCheckInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerHealthCheckOutput() VirtualGatewaySpecListenerHealthCheckOutput
	ToVirtualGatewaySpecListenerHealthCheckOutputWithContext(context.Context) VirtualGatewaySpecListenerHealthCheckOutput
}

type VirtualGatewaySpecListenerHealthCheckArgs struct {
	// The number of consecutive successful health checks that must occur before declaring listener healthy.
	HealthyThreshold pulumi.IntInput `pulumi:"healthyThreshold"`
	// The time period in milliseconds between each health check execution.
	IntervalMillis pulumi.IntInput `pulumi:"intervalMillis"`
	// The destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The protocol for the health check request. Valid values are `http`, `http2`, and `grpc`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The amount of time to wait when receiving a response from the health check, in milliseconds.
	TimeoutMillis pulumi.IntInput `pulumi:"timeoutMillis"`
	// The number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.
	UnhealthyThreshold pulumi.IntInput `pulumi:"unhealthyThreshold"`
}

func (VirtualGatewaySpecListenerHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerHealthCheck)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerHealthCheckArgs) ToVirtualGatewaySpecListenerHealthCheckOutput() VirtualGatewaySpecListenerHealthCheckOutput {
	return i.ToVirtualGatewaySpecListenerHealthCheckOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerHealthCheckArgs) ToVirtualGatewaySpecListenerHealthCheckOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerHealthCheckOutput)
}

func (i VirtualGatewaySpecListenerHealthCheckArgs) ToVirtualGatewaySpecListenerHealthCheckPtrOutput() VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return i.ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerHealthCheckArgs) ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerHealthCheckOutput).ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerHealthCheckPtrInput is an input type that accepts VirtualGatewaySpecListenerHealthCheckArgs, VirtualGatewaySpecListenerHealthCheckPtr and VirtualGatewaySpecListenerHealthCheckPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerHealthCheckPtrInput` via:
//
//          VirtualGatewaySpecListenerHealthCheckArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerHealthCheckPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerHealthCheckPtrOutput() VirtualGatewaySpecListenerHealthCheckPtrOutput
	ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerHealthCheckPtrOutput
}

type virtualGatewaySpecListenerHealthCheckPtrType VirtualGatewaySpecListenerHealthCheckArgs

func VirtualGatewaySpecListenerHealthCheckPtr(v *VirtualGatewaySpecListenerHealthCheckArgs) VirtualGatewaySpecListenerHealthCheckPtrInput {
	return (*virtualGatewaySpecListenerHealthCheckPtrType)(v)
}

func (*virtualGatewaySpecListenerHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerHealthCheck)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerHealthCheckPtrType) ToVirtualGatewaySpecListenerHealthCheckPtrOutput() VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return i.ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerHealthCheckPtrType) ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerHealthCheckPtrOutput)
}

type VirtualGatewaySpecListenerHealthCheckOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerHealthCheck)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerHealthCheckOutput) ToVirtualGatewaySpecListenerHealthCheckOutput() VirtualGatewaySpecListenerHealthCheckOutput {
	return o
}

func (o VirtualGatewaySpecListenerHealthCheckOutput) ToVirtualGatewaySpecListenerHealthCheckOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerHealthCheckOutput {
	return o
}

func (o VirtualGatewaySpecListenerHealthCheckOutput) ToVirtualGatewaySpecListenerHealthCheckPtrOutput() VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return o.ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerHealthCheckOutput) ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerHealthCheck) *VirtualGatewaySpecListenerHealthCheck {
		return &v
	}).(VirtualGatewaySpecListenerHealthCheckPtrOutput)
}

// The number of consecutive successful health checks that must occur before declaring listener healthy.
func (o VirtualGatewaySpecListenerHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

// The time period in milliseconds between each health check execution.
func (o VirtualGatewaySpecListenerHealthCheckOutput) IntervalMillis() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerHealthCheck) int { return v.IntervalMillis }).(pulumi.IntOutput)
}

// The destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
func (o VirtualGatewaySpecListenerHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
func (o VirtualGatewaySpecListenerHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The protocol for the health check request. Valid values are `http`, `http2`, and `grpc`.
func (o VirtualGatewaySpecListenerHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

// The amount of time to wait when receiving a response from the health check, in milliseconds.
func (o VirtualGatewaySpecListenerHealthCheckOutput) TimeoutMillis() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerHealthCheck) int { return v.TimeoutMillis }).(pulumi.IntOutput)
}

// The number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.
func (o VirtualGatewaySpecListenerHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type VirtualGatewaySpecListenerHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerHealthCheck)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) ToVirtualGatewaySpecListenerHealthCheckPtrOutput() VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) Elem() VirtualGatewaySpecListenerHealthCheckOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) VirtualGatewaySpecListenerHealthCheck {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerHealthCheck
		return ret
	}).(VirtualGatewaySpecListenerHealthCheckOutput)
}

// The number of consecutive successful health checks that must occur before declaring listener healthy.
func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// The time period in milliseconds between each health check execution.
func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) IntervalMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.IntervalMillis
	}).(pulumi.IntPtrOutput)
}

// The destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The protocol for the health check request. Valid values are `http`, `http2`, and `grpc`.
func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The amount of time to wait when receiving a response from the health check, in milliseconds.
func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) TimeoutMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutMillis
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.
func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

type VirtualGatewaySpecListenerPortMapping struct {
	// The port used for the port mapping.
	Port int `pulumi:"port"`
	// The protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
	Protocol string `pulumi:"protocol"`
}

// VirtualGatewaySpecListenerPortMappingInput is an input type that accepts VirtualGatewaySpecListenerPortMappingArgs and VirtualGatewaySpecListenerPortMappingOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerPortMappingInput` via:
//
//          VirtualGatewaySpecListenerPortMappingArgs{...}
type VirtualGatewaySpecListenerPortMappingInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerPortMappingOutput() VirtualGatewaySpecListenerPortMappingOutput
	ToVirtualGatewaySpecListenerPortMappingOutputWithContext(context.Context) VirtualGatewaySpecListenerPortMappingOutput
}

type VirtualGatewaySpecListenerPortMappingArgs struct {
	// The port used for the port mapping.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (VirtualGatewaySpecListenerPortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerPortMapping)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerPortMappingArgs) ToVirtualGatewaySpecListenerPortMappingOutput() VirtualGatewaySpecListenerPortMappingOutput {
	return i.ToVirtualGatewaySpecListenerPortMappingOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerPortMappingArgs) ToVirtualGatewaySpecListenerPortMappingOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerPortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerPortMappingOutput)
}

func (i VirtualGatewaySpecListenerPortMappingArgs) ToVirtualGatewaySpecListenerPortMappingPtrOutput() VirtualGatewaySpecListenerPortMappingPtrOutput {
	return i.ToVirtualGatewaySpecListenerPortMappingPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerPortMappingArgs) ToVirtualGatewaySpecListenerPortMappingPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerPortMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerPortMappingOutput).ToVirtualGatewaySpecListenerPortMappingPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerPortMappingPtrInput is an input type that accepts VirtualGatewaySpecListenerPortMappingArgs, VirtualGatewaySpecListenerPortMappingPtr and VirtualGatewaySpecListenerPortMappingPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerPortMappingPtrInput` via:
//
//          VirtualGatewaySpecListenerPortMappingArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerPortMappingPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerPortMappingPtrOutput() VirtualGatewaySpecListenerPortMappingPtrOutput
	ToVirtualGatewaySpecListenerPortMappingPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerPortMappingPtrOutput
}

type virtualGatewaySpecListenerPortMappingPtrType VirtualGatewaySpecListenerPortMappingArgs

func VirtualGatewaySpecListenerPortMappingPtr(v *VirtualGatewaySpecListenerPortMappingArgs) VirtualGatewaySpecListenerPortMappingPtrInput {
	return (*virtualGatewaySpecListenerPortMappingPtrType)(v)
}

func (*virtualGatewaySpecListenerPortMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerPortMapping)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerPortMappingPtrType) ToVirtualGatewaySpecListenerPortMappingPtrOutput() VirtualGatewaySpecListenerPortMappingPtrOutput {
	return i.ToVirtualGatewaySpecListenerPortMappingPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerPortMappingPtrType) ToVirtualGatewaySpecListenerPortMappingPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerPortMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerPortMappingPtrOutput)
}

type VirtualGatewaySpecListenerPortMappingOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerPortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerPortMapping)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerPortMappingOutput) ToVirtualGatewaySpecListenerPortMappingOutput() VirtualGatewaySpecListenerPortMappingOutput {
	return o
}

func (o VirtualGatewaySpecListenerPortMappingOutput) ToVirtualGatewaySpecListenerPortMappingOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerPortMappingOutput {
	return o
}

func (o VirtualGatewaySpecListenerPortMappingOutput) ToVirtualGatewaySpecListenerPortMappingPtrOutput() VirtualGatewaySpecListenerPortMappingPtrOutput {
	return o.ToVirtualGatewaySpecListenerPortMappingPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerPortMappingOutput) ToVirtualGatewaySpecListenerPortMappingPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerPortMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerPortMapping) *VirtualGatewaySpecListenerPortMapping {
		return &v
	}).(VirtualGatewaySpecListenerPortMappingPtrOutput)
}

// The port used for the port mapping.
func (o VirtualGatewaySpecListenerPortMappingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerPortMapping) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
func (o VirtualGatewaySpecListenerPortMappingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerPortMapping) string { return v.Protocol }).(pulumi.StringOutput)
}

type VirtualGatewaySpecListenerPortMappingPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerPortMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerPortMapping)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerPortMappingPtrOutput) ToVirtualGatewaySpecListenerPortMappingPtrOutput() VirtualGatewaySpecListenerPortMappingPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerPortMappingPtrOutput) ToVirtualGatewaySpecListenerPortMappingPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerPortMappingPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerPortMappingPtrOutput) Elem() VirtualGatewaySpecListenerPortMappingOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerPortMapping) VirtualGatewaySpecListenerPortMapping {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerPortMapping
		return ret
	}).(VirtualGatewaySpecListenerPortMappingOutput)
}

// The port used for the port mapping.
func (o VirtualGatewaySpecListenerPortMappingPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerPortMapping) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
func (o VirtualGatewaySpecListenerPortMappingPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerPortMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecListenerTls struct {
	// The listener's TLS certificate.
	Certificate VirtualGatewaySpecListenerTlsCertificate `pulumi:"certificate"`
	// The listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
	Mode string `pulumi:"mode"`
	// The listener's Transport Layer Security (TLS) validation context.
	Validation *VirtualGatewaySpecListenerTlsValidation `pulumi:"validation"`
}

// VirtualGatewaySpecListenerTlsInput is an input type that accepts VirtualGatewaySpecListenerTlsArgs and VirtualGatewaySpecListenerTlsOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsInput` via:
//
//          VirtualGatewaySpecListenerTlsArgs{...}
type VirtualGatewaySpecListenerTlsInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsOutput() VirtualGatewaySpecListenerTlsOutput
	ToVirtualGatewaySpecListenerTlsOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsOutput
}

type VirtualGatewaySpecListenerTlsArgs struct {
	// The listener's TLS certificate.
	Certificate VirtualGatewaySpecListenerTlsCertificateInput `pulumi:"certificate"`
	// The listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The listener's Transport Layer Security (TLS) validation context.
	Validation VirtualGatewaySpecListenerTlsValidationPtrInput `pulumi:"validation"`
}

func (VirtualGatewaySpecListenerTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTls)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsArgs) ToVirtualGatewaySpecListenerTlsOutput() VirtualGatewaySpecListenerTlsOutput {
	return i.ToVirtualGatewaySpecListenerTlsOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsArgs) ToVirtualGatewaySpecListenerTlsOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsOutput)
}

func (i VirtualGatewaySpecListenerTlsArgs) ToVirtualGatewaySpecListenerTlsPtrOutput() VirtualGatewaySpecListenerTlsPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsArgs) ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsOutput).ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsArgs, VirtualGatewaySpecListenerTlsPtr and VirtualGatewaySpecListenerTlsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsPtrInput` via:
//
//          VirtualGatewaySpecListenerTlsArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerTlsPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsPtrOutput() VirtualGatewaySpecListenerTlsPtrOutput
	ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsPtrOutput
}

type virtualGatewaySpecListenerTlsPtrType VirtualGatewaySpecListenerTlsArgs

func VirtualGatewaySpecListenerTlsPtr(v *VirtualGatewaySpecListenerTlsArgs) VirtualGatewaySpecListenerTlsPtrInput {
	return (*virtualGatewaySpecListenerTlsPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTls)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsPtrType) ToVirtualGatewaySpecListenerTlsPtrOutput() VirtualGatewaySpecListenerTlsPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsPtrType) ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsPtrOutput)
}

type VirtualGatewaySpecListenerTlsOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTls)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsOutput) ToVirtualGatewaySpecListenerTlsOutput() VirtualGatewaySpecListenerTlsOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsOutput) ToVirtualGatewaySpecListenerTlsOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsOutput) ToVirtualGatewaySpecListenerTlsPtrOutput() VirtualGatewaySpecListenerTlsPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsOutput) ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTls) *VirtualGatewaySpecListenerTls {
		return &v
	}).(VirtualGatewaySpecListenerTlsPtrOutput)
}

// The listener's TLS certificate.
func (o VirtualGatewaySpecListenerTlsOutput) Certificate() VirtualGatewaySpecListenerTlsCertificateOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTls) VirtualGatewaySpecListenerTlsCertificate { return v.Certificate }).(VirtualGatewaySpecListenerTlsCertificateOutput)
}

// The listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
func (o VirtualGatewaySpecListenerTlsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTls) string { return v.Mode }).(pulumi.StringOutput)
}

// The listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecListenerTlsOutput) Validation() VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTls) *VirtualGatewaySpecListenerTlsValidation { return v.Validation }).(VirtualGatewaySpecListenerTlsValidationPtrOutput)
}

type VirtualGatewaySpecListenerTlsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTls)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsPtrOutput) ToVirtualGatewaySpecListenerTlsPtrOutput() VirtualGatewaySpecListenerTlsPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsPtrOutput) ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsPtrOutput) Elem() VirtualGatewaySpecListenerTlsOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTls) VirtualGatewaySpecListenerTls {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTls
		return ret
	}).(VirtualGatewaySpecListenerTlsOutput)
}

// The listener's TLS certificate.
func (o VirtualGatewaySpecListenerTlsPtrOutput) Certificate() VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTls) *VirtualGatewaySpecListenerTlsCertificate {
		if v == nil {
			return nil
		}
		return &v.Certificate
	}).(VirtualGatewaySpecListenerTlsCertificatePtrOutput)
}

// The listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
func (o VirtualGatewaySpecListenerTlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTls) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// The listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecListenerTlsPtrOutput) Validation() VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTls) *VirtualGatewaySpecListenerTlsValidation {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(VirtualGatewaySpecListenerTlsValidationPtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificate struct {
	// An AWS Certificate Manager (ACM) certificate.
	Acm *VirtualGatewaySpecListenerTlsCertificateAcm `pulumi:"acm"`
	// A local file certificate.
	File *VirtualGatewaySpecListenerTlsCertificateFile `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualGatewaySpecListenerTlsCertificateSds `pulumi:"sds"`
}

// VirtualGatewaySpecListenerTlsCertificateInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateArgs and VirtualGatewaySpecListenerTlsCertificateOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificateInput` via:
//
//          VirtualGatewaySpecListenerTlsCertificateArgs{...}
type VirtualGatewaySpecListenerTlsCertificateInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificateOutput() VirtualGatewaySpecListenerTlsCertificateOutput
	ToVirtualGatewaySpecListenerTlsCertificateOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificateOutput
}

type VirtualGatewaySpecListenerTlsCertificateArgs struct {
	// An AWS Certificate Manager (ACM) certificate.
	Acm VirtualGatewaySpecListenerTlsCertificateAcmPtrInput `pulumi:"acm"`
	// A local file certificate.
	File VirtualGatewaySpecListenerTlsCertificateFilePtrInput `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualGatewaySpecListenerTlsCertificateSdsPtrInput `pulumi:"sds"`
}

func (VirtualGatewaySpecListenerTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificate)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsCertificateArgs) ToVirtualGatewaySpecListenerTlsCertificateOutput() VirtualGatewaySpecListenerTlsCertificateOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateArgs) ToVirtualGatewaySpecListenerTlsCertificateOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateOutput)
}

func (i VirtualGatewaySpecListenerTlsCertificateArgs) ToVirtualGatewaySpecListenerTlsCertificatePtrOutput() VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateArgs) ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateOutput).ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsCertificatePtrInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateArgs, VirtualGatewaySpecListenerTlsCertificatePtr and VirtualGatewaySpecListenerTlsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificatePtrInput` via:
//
//          VirtualGatewaySpecListenerTlsCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerTlsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificatePtrOutput() VirtualGatewaySpecListenerTlsCertificatePtrOutput
	ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificatePtrOutput
}

type virtualGatewaySpecListenerTlsCertificatePtrType VirtualGatewaySpecListenerTlsCertificateArgs

func VirtualGatewaySpecListenerTlsCertificatePtr(v *VirtualGatewaySpecListenerTlsCertificateArgs) VirtualGatewaySpecListenerTlsCertificatePtrInput {
	return (*virtualGatewaySpecListenerTlsCertificatePtrType)(v)
}

func (*virtualGatewaySpecListenerTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificate)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsCertificatePtrType) ToVirtualGatewaySpecListenerTlsCertificatePtrOutput() VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsCertificatePtrType) ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificatePtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificate)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificateOutput) ToVirtualGatewaySpecListenerTlsCertificateOutput() VirtualGatewaySpecListenerTlsCertificateOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateOutput) ToVirtualGatewaySpecListenerTlsCertificateOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateOutput) ToVirtualGatewaySpecListenerTlsCertificatePtrOutput() VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsCertificateOutput) ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsCertificate) *VirtualGatewaySpecListenerTlsCertificate {
		return &v
	}).(VirtualGatewaySpecListenerTlsCertificatePtrOutput)
}

// An AWS Certificate Manager (ACM) certificate.
func (o VirtualGatewaySpecListenerTlsCertificateOutput) Acm() VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsCertificate) *VirtualGatewaySpecListenerTlsCertificateAcm {
		return v.Acm
	}).(VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput)
}

// A local file certificate.
func (o VirtualGatewaySpecListenerTlsCertificateOutput) File() VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsCertificate) *VirtualGatewaySpecListenerTlsCertificateFile {
		return v.File
	}).(VirtualGatewaySpecListenerTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecListenerTlsCertificateOutput) Sds() VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsCertificate) *VirtualGatewaySpecListenerTlsCertificateSds {
		return v.Sds
	}).(VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificate)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificatePtrOutput) ToVirtualGatewaySpecListenerTlsCertificatePtrOutput() VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificatePtrOutput) ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificatePtrOutput) Elem() VirtualGatewaySpecListenerTlsCertificateOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificate) VirtualGatewaySpecListenerTlsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsCertificate
		return ret
	}).(VirtualGatewaySpecListenerTlsCertificateOutput)
}

// An AWS Certificate Manager (ACM) certificate.
func (o VirtualGatewaySpecListenerTlsCertificatePtrOutput) Acm() VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificate) *VirtualGatewaySpecListenerTlsCertificateAcm {
		if v == nil {
			return nil
		}
		return v.Acm
	}).(VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput)
}

// A local file certificate.
func (o VirtualGatewaySpecListenerTlsCertificatePtrOutput) File() VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificate) *VirtualGatewaySpecListenerTlsCertificateFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewaySpecListenerTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecListenerTlsCertificatePtrOutput) Sds() VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificate) *VirtualGatewaySpecListenerTlsCertificateSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificateAcm struct {
	// The Amazon Resource Name (ARN) for the certificate.
	CertificateArn string `pulumi:"certificateArn"`
}

// VirtualGatewaySpecListenerTlsCertificateAcmInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateAcmArgs and VirtualGatewaySpecListenerTlsCertificateAcmOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificateAcmInput` via:
//
//          VirtualGatewaySpecListenerTlsCertificateAcmArgs{...}
type VirtualGatewaySpecListenerTlsCertificateAcmInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificateAcmOutput() VirtualGatewaySpecListenerTlsCertificateAcmOutput
	ToVirtualGatewaySpecListenerTlsCertificateAcmOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificateAcmOutput
}

type VirtualGatewaySpecListenerTlsCertificateAcmArgs struct {
	// The Amazon Resource Name (ARN) for the certificate.
	CertificateArn pulumi.StringInput `pulumi:"certificateArn"`
}

func (VirtualGatewaySpecListenerTlsCertificateAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsCertificateAcmArgs) ToVirtualGatewaySpecListenerTlsCertificateAcmOutput() VirtualGatewaySpecListenerTlsCertificateAcmOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateAcmOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateAcmArgs) ToVirtualGatewaySpecListenerTlsCertificateAcmOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateAcmOutput)
}

func (i VirtualGatewaySpecListenerTlsCertificateAcmArgs) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutput() VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateAcmArgs) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateAcmOutput).ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsCertificateAcmPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateAcmArgs, VirtualGatewaySpecListenerTlsCertificateAcmPtr and VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificateAcmPtrInput` via:
//
//          VirtualGatewaySpecListenerTlsCertificateAcmArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerTlsCertificateAcmPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutput() VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput
	ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput
}

type virtualGatewaySpecListenerTlsCertificateAcmPtrType VirtualGatewaySpecListenerTlsCertificateAcmArgs

func VirtualGatewaySpecListenerTlsCertificateAcmPtr(v *VirtualGatewaySpecListenerTlsCertificateAcmArgs) VirtualGatewaySpecListenerTlsCertificateAcmPtrInput {
	return (*virtualGatewaySpecListenerTlsCertificateAcmPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsCertificateAcmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsCertificateAcmPtrType) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutput() VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsCertificateAcmPtrType) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificateAcmOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificateAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificateAcmOutput) ToVirtualGatewaySpecListenerTlsCertificateAcmOutput() VirtualGatewaySpecListenerTlsCertificateAcmOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateAcmOutput) ToVirtualGatewaySpecListenerTlsCertificateAcmOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateAcmOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateAcmOutput) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutput() VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsCertificateAcmOutput) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsCertificateAcm) *VirtualGatewaySpecListenerTlsCertificateAcm {
		return &v
	}).(VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput)
}

// The Amazon Resource Name (ARN) for the certificate.
func (o VirtualGatewaySpecListenerTlsCertificateAcmOutput) CertificateArn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsCertificateAcm) string { return v.CertificateArn }).(pulumi.StringOutput)
}

type VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutput() VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput) Elem() VirtualGatewaySpecListenerTlsCertificateAcmOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificateAcm) VirtualGatewaySpecListenerTlsCertificateAcm {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsCertificateAcm
		return ret
	}).(VirtualGatewaySpecListenerTlsCertificateAcmOutput)
}

// The Amazon Resource Name (ARN) for the certificate.
func (o VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificateAcm) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificateFile struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
	// The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey string `pulumi:"privateKey"`
}

// VirtualGatewaySpecListenerTlsCertificateFileInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateFileArgs and VirtualGatewaySpecListenerTlsCertificateFileOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificateFileInput` via:
//
//          VirtualGatewaySpecListenerTlsCertificateFileArgs{...}
type VirtualGatewaySpecListenerTlsCertificateFileInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificateFileOutput() VirtualGatewaySpecListenerTlsCertificateFileOutput
	ToVirtualGatewaySpecListenerTlsCertificateFileOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificateFileOutput
}

type VirtualGatewaySpecListenerTlsCertificateFileArgs struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	// The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (VirtualGatewaySpecListenerTlsCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateFile)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsCertificateFileArgs) ToVirtualGatewaySpecListenerTlsCertificateFileOutput() VirtualGatewaySpecListenerTlsCertificateFileOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateFileOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateFileArgs) ToVirtualGatewaySpecListenerTlsCertificateFileOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateFileOutput)
}

func (i VirtualGatewaySpecListenerTlsCertificateFileArgs) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutput() VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateFileArgs) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateFileOutput).ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsCertificateFilePtrInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateFileArgs, VirtualGatewaySpecListenerTlsCertificateFilePtr and VirtualGatewaySpecListenerTlsCertificateFilePtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificateFilePtrInput` via:
//
//          VirtualGatewaySpecListenerTlsCertificateFileArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerTlsCertificateFilePtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutput() VirtualGatewaySpecListenerTlsCertificateFilePtrOutput
	ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificateFilePtrOutput
}

type virtualGatewaySpecListenerTlsCertificateFilePtrType VirtualGatewaySpecListenerTlsCertificateFileArgs

func VirtualGatewaySpecListenerTlsCertificateFilePtr(v *VirtualGatewaySpecListenerTlsCertificateFileArgs) VirtualGatewaySpecListenerTlsCertificateFilePtrInput {
	return (*virtualGatewaySpecListenerTlsCertificateFilePtrType)(v)
}

func (*virtualGatewaySpecListenerTlsCertificateFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificateFile)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsCertificateFilePtrType) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutput() VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsCertificateFilePtrType) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateFilePtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificateFileOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateFile)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificateFileOutput) ToVirtualGatewaySpecListenerTlsCertificateFileOutput() VirtualGatewaySpecListenerTlsCertificateFileOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateFileOutput) ToVirtualGatewaySpecListenerTlsCertificateFileOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateFileOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateFileOutput) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutput() VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsCertificateFileOutput) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsCertificateFile) *VirtualGatewaySpecListenerTlsCertificateFile {
		return &v
	}).(VirtualGatewaySpecListenerTlsCertificateFilePtrOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecListenerTlsCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsCertificateFile) string { return v.CertificateChain }).(pulumi.StringOutput)
}

// The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecListenerTlsCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsCertificateFile) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type VirtualGatewaySpecListenerTlsCertificateFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificateFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificateFile)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificateFilePtrOutput) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutput() VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateFilePtrOutput) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateFilePtrOutput) Elem() VirtualGatewaySpecListenerTlsCertificateFileOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificateFile) VirtualGatewaySpecListenerTlsCertificateFile {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsCertificateFile
		return ret
	}).(VirtualGatewaySpecListenerTlsCertificateFileOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecListenerTlsCertificateFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

// The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecListenerTlsCertificateFilePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificateSds struct {
	// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualGatewaySpecListenerTlsCertificateSdsInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateSdsArgs and VirtualGatewaySpecListenerTlsCertificateSdsOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificateSdsInput` via:
//
//          VirtualGatewaySpecListenerTlsCertificateSdsArgs{...}
type VirtualGatewaySpecListenerTlsCertificateSdsInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificateSdsOutput() VirtualGatewaySpecListenerTlsCertificateSdsOutput
	ToVirtualGatewaySpecListenerTlsCertificateSdsOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificateSdsOutput
}

type VirtualGatewaySpecListenerTlsCertificateSdsArgs struct {
	// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualGatewaySpecListenerTlsCertificateSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateSds)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsCertificateSdsArgs) ToVirtualGatewaySpecListenerTlsCertificateSdsOutput() VirtualGatewaySpecListenerTlsCertificateSdsOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateSdsOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateSdsArgs) ToVirtualGatewaySpecListenerTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateSdsOutput)
}

func (i VirtualGatewaySpecListenerTlsCertificateSdsArgs) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutput() VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateSdsArgs) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateSdsOutput).ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsCertificateSdsPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateSdsArgs, VirtualGatewaySpecListenerTlsCertificateSdsPtr and VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificateSdsPtrInput` via:
//
//          VirtualGatewaySpecListenerTlsCertificateSdsArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerTlsCertificateSdsPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutput() VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput
	ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput
}

type virtualGatewaySpecListenerTlsCertificateSdsPtrType VirtualGatewaySpecListenerTlsCertificateSdsArgs

func VirtualGatewaySpecListenerTlsCertificateSdsPtr(v *VirtualGatewaySpecListenerTlsCertificateSdsArgs) VirtualGatewaySpecListenerTlsCertificateSdsPtrInput {
	return (*virtualGatewaySpecListenerTlsCertificateSdsPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsCertificateSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificateSds)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsCertificateSdsPtrType) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutput() VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsCertificateSdsPtrType) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificateSdsOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificateSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateSds)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificateSdsOutput) ToVirtualGatewaySpecListenerTlsCertificateSdsOutput() VirtualGatewaySpecListenerTlsCertificateSdsOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateSdsOutput) ToVirtualGatewaySpecListenerTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateSdsOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateSdsOutput) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutput() VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsCertificateSdsOutput) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsCertificateSds) *VirtualGatewaySpecListenerTlsCertificateSds {
		return &v
	}).(VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput)
}

// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecListenerTlsCertificateSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsCertificateSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificateSds)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutput() VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput) Elem() VirtualGatewaySpecListenerTlsCertificateSdsOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificateSds) VirtualGatewaySpecListenerTlsCertificateSds {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsCertificateSds
		return ret
	}).(VirtualGatewaySpecListenerTlsCertificateSdsOutput)
}

// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificateSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidation struct {
	// The SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
	SubjectAlternativeNames *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames `pulumi:"subjectAlternativeNames"`
	// The TLS validation context trust.
	Trust VirtualGatewaySpecListenerTlsValidationTrust `pulumi:"trust"`
}

// VirtualGatewaySpecListenerTlsValidationInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationArgs and VirtualGatewaySpecListenerTlsValidationOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationInput` via:
//
//          VirtualGatewaySpecListenerTlsValidationArgs{...}
type VirtualGatewaySpecListenerTlsValidationInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationOutput() VirtualGatewaySpecListenerTlsValidationOutput
	ToVirtualGatewaySpecListenerTlsValidationOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationOutput
}

type VirtualGatewaySpecListenerTlsValidationArgs struct {
	// The SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
	SubjectAlternativeNames VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrInput `pulumi:"subjectAlternativeNames"`
	// The TLS validation context trust.
	Trust VirtualGatewaySpecListenerTlsValidationTrustInput `pulumi:"trust"`
}

func (VirtualGatewaySpecListenerTlsValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidation)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsValidationArgs) ToVirtualGatewaySpecListenerTlsValidationOutput() VirtualGatewaySpecListenerTlsValidationOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationArgs) ToVirtualGatewaySpecListenerTlsValidationOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationOutput)
}

func (i VirtualGatewaySpecListenerTlsValidationArgs) ToVirtualGatewaySpecListenerTlsValidationPtrOutput() VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationArgs) ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationOutput).ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsValidationPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationArgs, VirtualGatewaySpecListenerTlsValidationPtr and VirtualGatewaySpecListenerTlsValidationPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationPtrInput` via:
//
//          VirtualGatewaySpecListenerTlsValidationArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerTlsValidationPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationPtrOutput() VirtualGatewaySpecListenerTlsValidationPtrOutput
	ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationPtrOutput
}

type virtualGatewaySpecListenerTlsValidationPtrType VirtualGatewaySpecListenerTlsValidationArgs

func VirtualGatewaySpecListenerTlsValidationPtr(v *VirtualGatewaySpecListenerTlsValidationArgs) VirtualGatewaySpecListenerTlsValidationPtrInput {
	return (*virtualGatewaySpecListenerTlsValidationPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidation)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsValidationPtrType) ToVirtualGatewaySpecListenerTlsValidationPtrOutput() VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsValidationPtrType) ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidation)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationOutput) ToVirtualGatewaySpecListenerTlsValidationOutput() VirtualGatewaySpecListenerTlsValidationOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationOutput) ToVirtualGatewaySpecListenerTlsValidationOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationOutput) ToVirtualGatewaySpecListenerTlsValidationPtrOutput() VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsValidationOutput) ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsValidation) *VirtualGatewaySpecListenerTlsValidation {
		return &v
	}).(VirtualGatewaySpecListenerTlsValidationPtrOutput)
}

// The SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecListenerTlsValidationOutput) SubjectAlternativeNames() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidation) *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames {
		return v.SubjectAlternativeNames
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The TLS validation context trust.
func (o VirtualGatewaySpecListenerTlsValidationOutput) Trust() VirtualGatewaySpecListenerTlsValidationTrustOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidation) VirtualGatewaySpecListenerTlsValidationTrust {
		return v.Trust
	}).(VirtualGatewaySpecListenerTlsValidationTrustOutput)
}

type VirtualGatewaySpecListenerTlsValidationPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidation)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationPtrOutput) ToVirtualGatewaySpecListenerTlsValidationPtrOutput() VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationPtrOutput) ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationPtrOutput) Elem() VirtualGatewaySpecListenerTlsValidationOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidation) VirtualGatewaySpecListenerTlsValidation {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsValidation
		return ret
	}).(VirtualGatewaySpecListenerTlsValidationOutput)
}

// The SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecListenerTlsValidationPtrOutput) SubjectAlternativeNames() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidation) *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The TLS validation context trust.
func (o VirtualGatewaySpecListenerTlsValidationPtrOutput) Trust() VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidation) *VirtualGatewaySpecListenerTlsValidationTrust {
		if v == nil {
			return nil
		}
		return &v.Trust
	}).(VirtualGatewaySpecListenerTlsValidationTrustPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames struct {
	// The criteria for determining a SAN's match.
	Match VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch `pulumi:"match"`
}

// VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs and VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesInput` via:
//
//          VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs{...}
type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput
	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs struct {
	// The criteria for determining a SAN's match.
	Match VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchInput `pulumi:"match"`
}

func (VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput)
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput).ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs, VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtr and VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrInput` via:
//
//          VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput
	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput
}

type virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrType VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs

func VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtr(v *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrInput {
	return (*virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrType) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrType) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames) *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames {
		return &v
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The criteria for determining a SAN's match.
func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput) Match() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch {
		return v.Match
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput)
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) Elem() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames
		return ret
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput)
}

// The criteria for determining a SAN's match.
func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) Match() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames) *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch struct {
	// The values sent must match the specified values exactly.
	Exacts []string `pulumi:"exacts"`
}

// VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs and VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchInput` via:
//
//          VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{...}
type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput
	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs struct {
	// The values sent must match the specified values exactly.
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput)
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput).ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs, VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtr and VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput` via:
//
//          VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput
	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput
}

type virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs

func VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtr(v *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput {
	return (*virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch) *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch {
		return &v
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

// The values sent must match the specified values exactly.
func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch) []string { return v.Exacts }).(pulumi.StringArrayOutput)
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) Elem() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch
		return ret
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput)
}

// The values sent must match the specified values exactly.
func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch) []string {
		if v == nil {
			return nil
		}
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrust struct {
	// The TLS validation context trust for a local file certificate.
	File *VirtualGatewaySpecListenerTlsValidationTrustFile `pulumi:"file"`
	// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualGatewaySpecListenerTlsValidationTrustSds `pulumi:"sds"`
}

// VirtualGatewaySpecListenerTlsValidationTrustInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationTrustArgs and VirtualGatewaySpecListenerTlsValidationTrustOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationTrustInput` via:
//
//          VirtualGatewaySpecListenerTlsValidationTrustArgs{...}
type VirtualGatewaySpecListenerTlsValidationTrustInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationTrustOutput() VirtualGatewaySpecListenerTlsValidationTrustOutput
	ToVirtualGatewaySpecListenerTlsValidationTrustOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationTrustOutput
}

type VirtualGatewaySpecListenerTlsValidationTrustArgs struct {
	// The TLS validation context trust for a local file certificate.
	File VirtualGatewaySpecListenerTlsValidationTrustFilePtrInput `pulumi:"file"`
	// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualGatewaySpecListenerTlsValidationTrustSdsPtrInput `pulumi:"sds"`
}

func (VirtualGatewaySpecListenerTlsValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrust)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsValidationTrustArgs) ToVirtualGatewaySpecListenerTlsValidationTrustOutput() VirtualGatewaySpecListenerTlsValidationTrustOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationTrustArgs) ToVirtualGatewaySpecListenerTlsValidationTrustOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustOutput)
}

func (i VirtualGatewaySpecListenerTlsValidationTrustArgs) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationTrustArgs) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustOutput).ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsValidationTrustPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationTrustArgs, VirtualGatewaySpecListenerTlsValidationTrustPtr and VirtualGatewaySpecListenerTlsValidationTrustPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationTrustPtrInput` via:
//
//          VirtualGatewaySpecListenerTlsValidationTrustArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerTlsValidationTrustPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustPtrOutput
	ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationTrustPtrOutput
}

type virtualGatewaySpecListenerTlsValidationTrustPtrType VirtualGatewaySpecListenerTlsValidationTrustArgs

func VirtualGatewaySpecListenerTlsValidationTrustPtr(v *VirtualGatewaySpecListenerTlsValidationTrustArgs) VirtualGatewaySpecListenerTlsValidationTrustPtrInput {
	return (*virtualGatewaySpecListenerTlsValidationTrustPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsValidationTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationTrust)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsValidationTrustPtrType) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsValidationTrustPtrType) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrust)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationTrustOutput) ToVirtualGatewaySpecListenerTlsValidationTrustOutput() VirtualGatewaySpecListenerTlsValidationTrustOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustOutput) ToVirtualGatewaySpecListenerTlsValidationTrustOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustOutput) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsValidationTrustOutput) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsValidationTrust) *VirtualGatewaySpecListenerTlsValidationTrust {
		return &v
	}).(VirtualGatewaySpecListenerTlsValidationTrustPtrOutput)
}

// The TLS validation context trust for a local file certificate.
func (o VirtualGatewaySpecListenerTlsValidationTrustOutput) File() VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidationTrust) *VirtualGatewaySpecListenerTlsValidationTrustFile {
		return v.File
	}).(VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput)
}

// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecListenerTlsValidationTrustOutput) Sds() VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidationTrust) *VirtualGatewaySpecListenerTlsValidationTrustSds {
		return v.Sds
	}).(VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationTrust)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationTrustPtrOutput) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustPtrOutput) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustPtrOutput) Elem() VirtualGatewaySpecListenerTlsValidationTrustOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationTrust) VirtualGatewaySpecListenerTlsValidationTrust {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsValidationTrust
		return ret
	}).(VirtualGatewaySpecListenerTlsValidationTrustOutput)
}

// The TLS validation context trust for a local file certificate.
func (o VirtualGatewaySpecListenerTlsValidationTrustPtrOutput) File() VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationTrust) *VirtualGatewaySpecListenerTlsValidationTrustFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput)
}

// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecListenerTlsValidationTrustPtrOutput) Sds() VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationTrust) *VirtualGatewaySpecListenerTlsValidationTrustSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustFile struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
}

// VirtualGatewaySpecListenerTlsValidationTrustFileInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationTrustFileArgs and VirtualGatewaySpecListenerTlsValidationTrustFileOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationTrustFileInput` via:
//
//          VirtualGatewaySpecListenerTlsValidationTrustFileArgs{...}
type VirtualGatewaySpecListenerTlsValidationTrustFileInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationTrustFileOutput() VirtualGatewaySpecListenerTlsValidationTrustFileOutput
	ToVirtualGatewaySpecListenerTlsValidationTrustFileOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationTrustFileOutput
}

type VirtualGatewaySpecListenerTlsValidationTrustFileArgs struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (VirtualGatewaySpecListenerTlsValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsValidationTrustFileArgs) ToVirtualGatewaySpecListenerTlsValidationTrustFileOutput() VirtualGatewaySpecListenerTlsValidationTrustFileOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustFileOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationTrustFileArgs) ToVirtualGatewaySpecListenerTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustFileOutput)
}

func (i VirtualGatewaySpecListenerTlsValidationTrustFileArgs) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput() VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationTrustFileArgs) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustFileOutput).ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsValidationTrustFilePtrInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationTrustFileArgs, VirtualGatewaySpecListenerTlsValidationTrustFilePtr and VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationTrustFilePtrInput` via:
//
//          VirtualGatewaySpecListenerTlsValidationTrustFileArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerTlsValidationTrustFilePtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput() VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput
	ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput
}

type virtualGatewaySpecListenerTlsValidationTrustFilePtrType VirtualGatewaySpecListenerTlsValidationTrustFileArgs

func VirtualGatewaySpecListenerTlsValidationTrustFilePtr(v *VirtualGatewaySpecListenerTlsValidationTrustFileArgs) VirtualGatewaySpecListenerTlsValidationTrustFilePtrInput {
	return (*virtualGatewaySpecListenerTlsValidationTrustFilePtrType)(v)
}

func (*virtualGatewaySpecListenerTlsValidationTrustFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsValidationTrustFilePtrType) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput() VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsValidationTrustFilePtrType) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustFileOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationTrustFileOutput) ToVirtualGatewaySpecListenerTlsValidationTrustFileOutput() VirtualGatewaySpecListenerTlsValidationTrustFileOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustFileOutput) ToVirtualGatewaySpecListenerTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustFileOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustFileOutput) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput() VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsValidationTrustFileOutput) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsValidationTrustFile) *VirtualGatewaySpecListenerTlsValidationTrustFile {
		return &v
	}).(VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecListenerTlsValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidationTrustFile) string { return v.CertificateChain }).(pulumi.StringOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput() VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput) Elem() VirtualGatewaySpecListenerTlsValidationTrustFileOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationTrustFile) VirtualGatewaySpecListenerTlsValidationTrustFile {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsValidationTrustFile
		return ret
	}).(VirtualGatewaySpecListenerTlsValidationTrustFileOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationTrustFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustSds struct {
	// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualGatewaySpecListenerTlsValidationTrustSdsInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationTrustSdsArgs and VirtualGatewaySpecListenerTlsValidationTrustSdsOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationTrustSdsInput` via:
//
//          VirtualGatewaySpecListenerTlsValidationTrustSdsArgs{...}
type VirtualGatewaySpecListenerTlsValidationTrustSdsInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationTrustSdsOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsOutput
	ToVirtualGatewaySpecListenerTlsValidationTrustSdsOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsOutput
}

type VirtualGatewaySpecListenerTlsValidationTrustSdsArgs struct {
	// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualGatewaySpecListenerTlsValidationTrustSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsValidationTrustSdsArgs) ToVirtualGatewaySpecListenerTlsValidationTrustSdsOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustSdsOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationTrustSdsArgs) ToVirtualGatewaySpecListenerTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustSdsOutput)
}

func (i VirtualGatewaySpecListenerTlsValidationTrustSdsArgs) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationTrustSdsArgs) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustSdsOutput).ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsValidationTrustSdsPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationTrustSdsArgs, VirtualGatewaySpecListenerTlsValidationTrustSdsPtr and VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationTrustSdsPtrInput` via:
//
//          VirtualGatewaySpecListenerTlsValidationTrustSdsArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecListenerTlsValidationTrustSdsPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput
	ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput
}

type virtualGatewaySpecListenerTlsValidationTrustSdsPtrType VirtualGatewaySpecListenerTlsValidationTrustSdsArgs

func VirtualGatewaySpecListenerTlsValidationTrustSdsPtr(v *VirtualGatewaySpecListenerTlsValidationTrustSdsArgs) VirtualGatewaySpecListenerTlsValidationTrustSdsPtrInput {
	return (*virtualGatewaySpecListenerTlsValidationTrustSdsPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsValidationTrustSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsValidationTrustSdsPtrType) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsValidationTrustSdsPtrType) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustSdsOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationTrustSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationTrustSdsOutput) ToVirtualGatewaySpecListenerTlsValidationTrustSdsOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustSdsOutput) ToVirtualGatewaySpecListenerTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustSdsOutput) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsValidationTrustSdsOutput) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsValidationTrustSds) *VirtualGatewaySpecListenerTlsValidationTrustSds {
		return &v
	}).(VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput)
}

// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecListenerTlsValidationTrustSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidationTrustSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput) Elem() VirtualGatewaySpecListenerTlsValidationTrustSdsOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationTrustSds) VirtualGatewaySpecListenerTlsValidationTrustSds {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsValidationTrustSds
		return ret
	}).(VirtualGatewaySpecListenerTlsValidationTrustSdsOutput)
}

// The name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationTrustSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecLogging struct {
	// The access log configuration for a virtual gateway.
	AccessLog *VirtualGatewaySpecLoggingAccessLog `pulumi:"accessLog"`
}

// VirtualGatewaySpecLoggingInput is an input type that accepts VirtualGatewaySpecLoggingArgs and VirtualGatewaySpecLoggingOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingInput` via:
//
//          VirtualGatewaySpecLoggingArgs{...}
type VirtualGatewaySpecLoggingInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingOutput() VirtualGatewaySpecLoggingOutput
	ToVirtualGatewaySpecLoggingOutputWithContext(context.Context) VirtualGatewaySpecLoggingOutput
}

type VirtualGatewaySpecLoggingArgs struct {
	// The access log configuration for a virtual gateway.
	AccessLog VirtualGatewaySpecLoggingAccessLogPtrInput `pulumi:"accessLog"`
}

func (VirtualGatewaySpecLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLogging)(nil)).Elem()
}

func (i VirtualGatewaySpecLoggingArgs) ToVirtualGatewaySpecLoggingOutput() VirtualGatewaySpecLoggingOutput {
	return i.ToVirtualGatewaySpecLoggingOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingArgs) ToVirtualGatewaySpecLoggingOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingOutput)
}

func (i VirtualGatewaySpecLoggingArgs) ToVirtualGatewaySpecLoggingPtrOutput() VirtualGatewaySpecLoggingPtrOutput {
	return i.ToVirtualGatewaySpecLoggingPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingArgs) ToVirtualGatewaySpecLoggingPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingOutput).ToVirtualGatewaySpecLoggingPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecLoggingPtrInput is an input type that accepts VirtualGatewaySpecLoggingArgs, VirtualGatewaySpecLoggingPtr and VirtualGatewaySpecLoggingPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingPtrInput` via:
//
//          VirtualGatewaySpecLoggingArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecLoggingPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingPtrOutput() VirtualGatewaySpecLoggingPtrOutput
	ToVirtualGatewaySpecLoggingPtrOutputWithContext(context.Context) VirtualGatewaySpecLoggingPtrOutput
}

type virtualGatewaySpecLoggingPtrType VirtualGatewaySpecLoggingArgs

func VirtualGatewaySpecLoggingPtr(v *VirtualGatewaySpecLoggingArgs) VirtualGatewaySpecLoggingPtrInput {
	return (*virtualGatewaySpecLoggingPtrType)(v)
}

func (*virtualGatewaySpecLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecLogging)(nil)).Elem()
}

func (i *virtualGatewaySpecLoggingPtrType) ToVirtualGatewaySpecLoggingPtrOutput() VirtualGatewaySpecLoggingPtrOutput {
	return i.ToVirtualGatewaySpecLoggingPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecLoggingPtrType) ToVirtualGatewaySpecLoggingPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingPtrOutput)
}

type VirtualGatewaySpecLoggingOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLogging)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingOutput) ToVirtualGatewaySpecLoggingOutput() VirtualGatewaySpecLoggingOutput {
	return o
}

func (o VirtualGatewaySpecLoggingOutput) ToVirtualGatewaySpecLoggingOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingOutput {
	return o
}

func (o VirtualGatewaySpecLoggingOutput) ToVirtualGatewaySpecLoggingPtrOutput() VirtualGatewaySpecLoggingPtrOutput {
	return o.ToVirtualGatewaySpecLoggingPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecLoggingOutput) ToVirtualGatewaySpecLoggingPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecLogging) *VirtualGatewaySpecLogging {
		return &v
	}).(VirtualGatewaySpecLoggingPtrOutput)
}

// The access log configuration for a virtual gateway.
func (o VirtualGatewaySpecLoggingOutput) AccessLog() VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecLogging) *VirtualGatewaySpecLoggingAccessLog { return v.AccessLog }).(VirtualGatewaySpecLoggingAccessLogPtrOutput)
}

type VirtualGatewaySpecLoggingPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecLogging)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingPtrOutput) ToVirtualGatewaySpecLoggingPtrOutput() VirtualGatewaySpecLoggingPtrOutput {
	return o
}

func (o VirtualGatewaySpecLoggingPtrOutput) ToVirtualGatewaySpecLoggingPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingPtrOutput {
	return o
}

func (o VirtualGatewaySpecLoggingPtrOutput) Elem() VirtualGatewaySpecLoggingOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLogging) VirtualGatewaySpecLogging {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecLogging
		return ret
	}).(VirtualGatewaySpecLoggingOutput)
}

// The access log configuration for a virtual gateway.
func (o VirtualGatewaySpecLoggingPtrOutput) AccessLog() VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLogging) *VirtualGatewaySpecLoggingAccessLog {
		if v == nil {
			return nil
		}
		return v.AccessLog
	}).(VirtualGatewaySpecLoggingAccessLogPtrOutput)
}

type VirtualGatewaySpecLoggingAccessLog struct {
	// The file object to send virtual gateway access logs to.
	File *VirtualGatewaySpecLoggingAccessLogFile `pulumi:"file"`
}

// VirtualGatewaySpecLoggingAccessLogInput is an input type that accepts VirtualGatewaySpecLoggingAccessLogArgs and VirtualGatewaySpecLoggingAccessLogOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingAccessLogInput` via:
//
//          VirtualGatewaySpecLoggingAccessLogArgs{...}
type VirtualGatewaySpecLoggingAccessLogInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingAccessLogOutput() VirtualGatewaySpecLoggingAccessLogOutput
	ToVirtualGatewaySpecLoggingAccessLogOutputWithContext(context.Context) VirtualGatewaySpecLoggingAccessLogOutput
}

type VirtualGatewaySpecLoggingAccessLogArgs struct {
	// The file object to send virtual gateway access logs to.
	File VirtualGatewaySpecLoggingAccessLogFilePtrInput `pulumi:"file"`
}

func (VirtualGatewaySpecLoggingAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLog)(nil)).Elem()
}

func (i VirtualGatewaySpecLoggingAccessLogArgs) ToVirtualGatewaySpecLoggingAccessLogOutput() VirtualGatewaySpecLoggingAccessLogOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingAccessLogArgs) ToVirtualGatewaySpecLoggingAccessLogOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogOutput)
}

func (i VirtualGatewaySpecLoggingAccessLogArgs) ToVirtualGatewaySpecLoggingAccessLogPtrOutput() VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingAccessLogArgs) ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogOutput).ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecLoggingAccessLogPtrInput is an input type that accepts VirtualGatewaySpecLoggingAccessLogArgs, VirtualGatewaySpecLoggingAccessLogPtr and VirtualGatewaySpecLoggingAccessLogPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingAccessLogPtrInput` via:
//
//          VirtualGatewaySpecLoggingAccessLogArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecLoggingAccessLogPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingAccessLogPtrOutput() VirtualGatewaySpecLoggingAccessLogPtrOutput
	ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(context.Context) VirtualGatewaySpecLoggingAccessLogPtrOutput
}

type virtualGatewaySpecLoggingAccessLogPtrType VirtualGatewaySpecLoggingAccessLogArgs

func VirtualGatewaySpecLoggingAccessLogPtr(v *VirtualGatewaySpecLoggingAccessLogArgs) VirtualGatewaySpecLoggingAccessLogPtrInput {
	return (*virtualGatewaySpecLoggingAccessLogPtrType)(v)
}

func (*virtualGatewaySpecLoggingAccessLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecLoggingAccessLog)(nil)).Elem()
}

func (i *virtualGatewaySpecLoggingAccessLogPtrType) ToVirtualGatewaySpecLoggingAccessLogPtrOutput() VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecLoggingAccessLogPtrType) ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogPtrOutput)
}

type VirtualGatewaySpecLoggingAccessLogOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLog)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingAccessLogOutput) ToVirtualGatewaySpecLoggingAccessLogOutput() VirtualGatewaySpecLoggingAccessLogOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogOutput) ToVirtualGatewaySpecLoggingAccessLogOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogOutput) ToVirtualGatewaySpecLoggingAccessLogPtrOutput() VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return o.ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecLoggingAccessLogOutput) ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecLoggingAccessLog) *VirtualGatewaySpecLoggingAccessLog {
		return &v
	}).(VirtualGatewaySpecLoggingAccessLogPtrOutput)
}

// The file object to send virtual gateway access logs to.
func (o VirtualGatewaySpecLoggingAccessLogOutput) File() VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecLoggingAccessLog) *VirtualGatewaySpecLoggingAccessLogFile { return v.File }).(VirtualGatewaySpecLoggingAccessLogFilePtrOutput)
}

type VirtualGatewaySpecLoggingAccessLogPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingAccessLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecLoggingAccessLog)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingAccessLogPtrOutput) ToVirtualGatewaySpecLoggingAccessLogPtrOutput() VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogPtrOutput) ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogPtrOutput) Elem() VirtualGatewaySpecLoggingAccessLogOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLoggingAccessLog) VirtualGatewaySpecLoggingAccessLog {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecLoggingAccessLog
		return ret
	}).(VirtualGatewaySpecLoggingAccessLogOutput)
}

// The file object to send virtual gateway access logs to.
func (o VirtualGatewaySpecLoggingAccessLogPtrOutput) File() VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLoggingAccessLog) *VirtualGatewaySpecLoggingAccessLogFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewaySpecLoggingAccessLogFilePtrOutput)
}

type VirtualGatewaySpecLoggingAccessLogFile struct {
	// The file path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
	Path string `pulumi:"path"`
}

// VirtualGatewaySpecLoggingAccessLogFileInput is an input type that accepts VirtualGatewaySpecLoggingAccessLogFileArgs and VirtualGatewaySpecLoggingAccessLogFileOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingAccessLogFileInput` via:
//
//          VirtualGatewaySpecLoggingAccessLogFileArgs{...}
type VirtualGatewaySpecLoggingAccessLogFileInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingAccessLogFileOutput() VirtualGatewaySpecLoggingAccessLogFileOutput
	ToVirtualGatewaySpecLoggingAccessLogFileOutputWithContext(context.Context) VirtualGatewaySpecLoggingAccessLogFileOutput
}

type VirtualGatewaySpecLoggingAccessLogFileArgs struct {
	// The file path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
	Path pulumi.StringInput `pulumi:"path"`
}

func (VirtualGatewaySpecLoggingAccessLogFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFile)(nil)).Elem()
}

func (i VirtualGatewaySpecLoggingAccessLogFileArgs) ToVirtualGatewaySpecLoggingAccessLogFileOutput() VirtualGatewaySpecLoggingAccessLogFileOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogFileOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingAccessLogFileArgs) ToVirtualGatewaySpecLoggingAccessLogFileOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogFileOutput)
}

func (i VirtualGatewaySpecLoggingAccessLogFileArgs) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutput() VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingAccessLogFileArgs) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogFileOutput).ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(ctx)
}

// VirtualGatewaySpecLoggingAccessLogFilePtrInput is an input type that accepts VirtualGatewaySpecLoggingAccessLogFileArgs, VirtualGatewaySpecLoggingAccessLogFilePtr and VirtualGatewaySpecLoggingAccessLogFilePtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingAccessLogFilePtrInput` via:
//
//          VirtualGatewaySpecLoggingAccessLogFileArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecLoggingAccessLogFilePtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingAccessLogFilePtrOutput() VirtualGatewaySpecLoggingAccessLogFilePtrOutput
	ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(context.Context) VirtualGatewaySpecLoggingAccessLogFilePtrOutput
}

type virtualGatewaySpecLoggingAccessLogFilePtrType VirtualGatewaySpecLoggingAccessLogFileArgs

func VirtualGatewaySpecLoggingAccessLogFilePtr(v *VirtualGatewaySpecLoggingAccessLogFileArgs) VirtualGatewaySpecLoggingAccessLogFilePtrInput {
	return (*virtualGatewaySpecLoggingAccessLogFilePtrType)(v)
}

func (*virtualGatewaySpecLoggingAccessLogFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecLoggingAccessLogFile)(nil)).Elem()
}

func (i *virtualGatewaySpecLoggingAccessLogFilePtrType) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutput() VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecLoggingAccessLogFilePtrType) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogFilePtrOutput)
}

type VirtualGatewaySpecLoggingAccessLogFileOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingAccessLogFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFile)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingAccessLogFileOutput) ToVirtualGatewaySpecLoggingAccessLogFileOutput() VirtualGatewaySpecLoggingAccessLogFileOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFileOutput) ToVirtualGatewaySpecLoggingAccessLogFileOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFileOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFileOutput) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutput() VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return o.ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecLoggingAccessLogFileOutput) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecLoggingAccessLogFile) *VirtualGatewaySpecLoggingAccessLogFile {
		return &v
	}).(VirtualGatewaySpecLoggingAccessLogFilePtrOutput)
}

// The file path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecLoggingAccessLogFileOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecLoggingAccessLogFile) string { return v.Path }).(pulumi.StringOutput)
}

type VirtualGatewaySpecLoggingAccessLogFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingAccessLogFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecLoggingAccessLogFile)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingAccessLogFilePtrOutput) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutput() VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFilePtrOutput) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFilePtrOutput) Elem() VirtualGatewaySpecLoggingAccessLogFileOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLoggingAccessLogFile) VirtualGatewaySpecLoggingAccessLogFile {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecLoggingAccessLogFile
		return ret
	}).(VirtualGatewaySpecLoggingAccessLogFileOutput)
}

// The file path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecLoggingAccessLogFilePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLoggingAccessLogFile) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpec struct {
	// The defaults for backends.
	BackendDefaults *VirtualNodeSpecBackendDefaults `pulumi:"backendDefaults"`
	// The backends to which the virtual node is expected to send outbound traffic.
	Backends []VirtualNodeSpecBackend `pulumi:"backends"`
	// The listeners from which the virtual node is expected to receive inbound traffic.
	Listener *VirtualNodeSpecListener `pulumi:"listener"`
	// The inbound and outbound access logging information for the virtual node.
	Logging *VirtualNodeSpecLogging `pulumi:"logging"`
	// The service discovery information for the virtual node.
	ServiceDiscovery *VirtualNodeSpecServiceDiscovery `pulumi:"serviceDiscovery"`
}

// VirtualNodeSpecInput is an input type that accepts VirtualNodeSpecArgs and VirtualNodeSpecOutput values.
// You can construct a concrete instance of `VirtualNodeSpecInput` via:
//
//          VirtualNodeSpecArgs{...}
type VirtualNodeSpecInput interface {
	pulumi.Input

	ToVirtualNodeSpecOutput() VirtualNodeSpecOutput
	ToVirtualNodeSpecOutputWithContext(context.Context) VirtualNodeSpecOutput
}

type VirtualNodeSpecArgs struct {
	// The defaults for backends.
	BackendDefaults VirtualNodeSpecBackendDefaultsPtrInput `pulumi:"backendDefaults"`
	// The backends to which the virtual node is expected to send outbound traffic.
	Backends VirtualNodeSpecBackendArrayInput `pulumi:"backends"`
	// The listeners from which the virtual node is expected to receive inbound traffic.
	Listener VirtualNodeSpecListenerPtrInput `pulumi:"listener"`
	// The inbound and outbound access logging information for the virtual node.
	Logging VirtualNodeSpecLoggingPtrInput `pulumi:"logging"`
	// The service discovery information for the virtual node.
	ServiceDiscovery VirtualNodeSpecServiceDiscoveryPtrInput `pulumi:"serviceDiscovery"`
}

func (VirtualNodeSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpec)(nil)).Elem()
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecOutput() VirtualNodeSpecOutput {
	return i.ToVirtualNodeSpecOutputWithContext(context.Background())
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecOutputWithContext(ctx context.Context) VirtualNodeSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecOutput)
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return i.ToVirtualNodeSpecPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecOutput).ToVirtualNodeSpecPtrOutputWithContext(ctx)
}

// VirtualNodeSpecPtrInput is an input type that accepts VirtualNodeSpecArgs, VirtualNodeSpecPtr and VirtualNodeSpecPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecPtrInput` via:
//
//          VirtualNodeSpecArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput
	ToVirtualNodeSpecPtrOutputWithContext(context.Context) VirtualNodeSpecPtrOutput
}

type virtualNodeSpecPtrType VirtualNodeSpecArgs

func VirtualNodeSpecPtr(v *VirtualNodeSpecArgs) VirtualNodeSpecPtrInput {
	return (*virtualNodeSpecPtrType)(v)
}

func (*virtualNodeSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpec)(nil)).Elem()
}

func (i *virtualNodeSpecPtrType) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return i.ToVirtualNodeSpecPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecPtrType) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecPtrOutput)
}

type VirtualNodeSpecOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpec)(nil)).Elem()
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecOutput() VirtualNodeSpecOutput {
	return o
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecOutputWithContext(ctx context.Context) VirtualNodeSpecOutput {
	return o
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return o.ToVirtualNodeSpecPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpec) *VirtualNodeSpec {
		return &v
	}).(VirtualNodeSpecPtrOutput)
}

// The defaults for backends.
func (o VirtualNodeSpecOutput) BackendDefaults() VirtualNodeSpecBackendDefaultsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpec) *VirtualNodeSpecBackendDefaults { return v.BackendDefaults }).(VirtualNodeSpecBackendDefaultsPtrOutput)
}

// The backends to which the virtual node is expected to send outbound traffic.
func (o VirtualNodeSpecOutput) Backends() VirtualNodeSpecBackendArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpec) []VirtualNodeSpecBackend { return v.Backends }).(VirtualNodeSpecBackendArrayOutput)
}

// The listeners from which the virtual node is expected to receive inbound traffic.
func (o VirtualNodeSpecOutput) Listener() VirtualNodeSpecListenerPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpec) *VirtualNodeSpecListener { return v.Listener }).(VirtualNodeSpecListenerPtrOutput)
}

// The inbound and outbound access logging information for the virtual node.
func (o VirtualNodeSpecOutput) Logging() VirtualNodeSpecLoggingPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpec) *VirtualNodeSpecLogging { return v.Logging }).(VirtualNodeSpecLoggingPtrOutput)
}

// The service discovery information for the virtual node.
func (o VirtualNodeSpecOutput) ServiceDiscovery() VirtualNodeSpecServiceDiscoveryPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpec) *VirtualNodeSpecServiceDiscovery { return v.ServiceDiscovery }).(VirtualNodeSpecServiceDiscoveryPtrOutput)
}

type VirtualNodeSpecPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpec)(nil)).Elem()
}

func (o VirtualNodeSpecPtrOutput) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return o
}

func (o VirtualNodeSpecPtrOutput) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return o
}

func (o VirtualNodeSpecPtrOutput) Elem() VirtualNodeSpecOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) VirtualNodeSpec {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpec
		return ret
	}).(VirtualNodeSpecOutput)
}

// The defaults for backends.
func (o VirtualNodeSpecPtrOutput) BackendDefaults() VirtualNodeSpecBackendDefaultsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) *VirtualNodeSpecBackendDefaults {
		if v == nil {
			return nil
		}
		return v.BackendDefaults
	}).(VirtualNodeSpecBackendDefaultsPtrOutput)
}

// The backends to which the virtual node is expected to send outbound traffic.
func (o VirtualNodeSpecPtrOutput) Backends() VirtualNodeSpecBackendArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) []VirtualNodeSpecBackend {
		if v == nil {
			return nil
		}
		return v.Backends
	}).(VirtualNodeSpecBackendArrayOutput)
}

// The listeners from which the virtual node is expected to receive inbound traffic.
func (o VirtualNodeSpecPtrOutput) Listener() VirtualNodeSpecListenerPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) *VirtualNodeSpecListener {
		if v == nil {
			return nil
		}
		return v.Listener
	}).(VirtualNodeSpecListenerPtrOutput)
}

// The inbound and outbound access logging information for the virtual node.
func (o VirtualNodeSpecPtrOutput) Logging() VirtualNodeSpecLoggingPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) *VirtualNodeSpecLogging {
		if v == nil {
			return nil
		}
		return v.Logging
	}).(VirtualNodeSpecLoggingPtrOutput)
}

// The service discovery information for the virtual node.
func (o VirtualNodeSpecPtrOutput) ServiceDiscovery() VirtualNodeSpecServiceDiscoveryPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) *VirtualNodeSpecServiceDiscovery {
		if v == nil {
			return nil
		}
		return v.ServiceDiscovery
	}).(VirtualNodeSpecServiceDiscoveryPtrOutput)
}

type VirtualNodeSpecBackend struct {
	// Specifies a virtual service to use as a backend for a virtual node.
	VirtualService VirtualNodeSpecBackendVirtualService `pulumi:"virtualService"`
}

// VirtualNodeSpecBackendInput is an input type that accepts VirtualNodeSpecBackendArgs and VirtualNodeSpecBackendOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendInput` via:
//
//          VirtualNodeSpecBackendArgs{...}
type VirtualNodeSpecBackendInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendOutput() VirtualNodeSpecBackendOutput
	ToVirtualNodeSpecBackendOutputWithContext(context.Context) VirtualNodeSpecBackendOutput
}

type VirtualNodeSpecBackendArgs struct {
	// Specifies a virtual service to use as a backend for a virtual node.
	VirtualService VirtualNodeSpecBackendVirtualServiceInput `pulumi:"virtualService"`
}

func (VirtualNodeSpecBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackend)(nil)).Elem()
}

func (i VirtualNodeSpecBackendArgs) ToVirtualNodeSpecBackendOutput() VirtualNodeSpecBackendOutput {
	return i.ToVirtualNodeSpecBackendOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendArgs) ToVirtualNodeSpecBackendOutputWithContext(ctx context.Context) VirtualNodeSpecBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendOutput)
}

// VirtualNodeSpecBackendArrayInput is an input type that accepts VirtualNodeSpecBackendArray and VirtualNodeSpecBackendArrayOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendArrayInput` via:
//
//          VirtualNodeSpecBackendArray{ VirtualNodeSpecBackendArgs{...} }
type VirtualNodeSpecBackendArrayInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendArrayOutput() VirtualNodeSpecBackendArrayOutput
	ToVirtualNodeSpecBackendArrayOutputWithContext(context.Context) VirtualNodeSpecBackendArrayOutput
}

type VirtualNodeSpecBackendArray []VirtualNodeSpecBackendInput

func (VirtualNodeSpecBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeSpecBackend)(nil)).Elem()
}

func (i VirtualNodeSpecBackendArray) ToVirtualNodeSpecBackendArrayOutput() VirtualNodeSpecBackendArrayOutput {
	return i.ToVirtualNodeSpecBackendArrayOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendArray) ToVirtualNodeSpecBackendArrayOutputWithContext(ctx context.Context) VirtualNodeSpecBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendArrayOutput)
}

type VirtualNodeSpecBackendOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackend)(nil)).Elem()
}

func (o VirtualNodeSpecBackendOutput) ToVirtualNodeSpecBackendOutput() VirtualNodeSpecBackendOutput {
	return o
}

func (o VirtualNodeSpecBackendOutput) ToVirtualNodeSpecBackendOutputWithContext(ctx context.Context) VirtualNodeSpecBackendOutput {
	return o
}

// Specifies a virtual service to use as a backend for a virtual node.
func (o VirtualNodeSpecBackendOutput) VirtualService() VirtualNodeSpecBackendVirtualServiceOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackend) VirtualNodeSpecBackendVirtualService { return v.VirtualService }).(VirtualNodeSpecBackendVirtualServiceOutput)
}

type VirtualNodeSpecBackendArrayOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeSpecBackend)(nil)).Elem()
}

func (o VirtualNodeSpecBackendArrayOutput) ToVirtualNodeSpecBackendArrayOutput() VirtualNodeSpecBackendArrayOutput {
	return o
}

func (o VirtualNodeSpecBackendArrayOutput) ToVirtualNodeSpecBackendArrayOutputWithContext(ctx context.Context) VirtualNodeSpecBackendArrayOutput {
	return o
}

func (o VirtualNodeSpecBackendArrayOutput) Index(i pulumi.IntInput) VirtualNodeSpecBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNodeSpecBackend {
		return vs[0].([]VirtualNodeSpecBackend)[vs[1].(int)]
	}).(VirtualNodeSpecBackendOutput)
}

type VirtualNodeSpecBackendDefaults struct {
	// The default client policy for virtual service backends. See above for details.
	ClientPolicy *VirtualNodeSpecBackendDefaultsClientPolicy `pulumi:"clientPolicy"`
}

// VirtualNodeSpecBackendDefaultsInput is an input type that accepts VirtualNodeSpecBackendDefaultsArgs and VirtualNodeSpecBackendDefaultsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsInput` via:
//
//          VirtualNodeSpecBackendDefaultsArgs{...}
type VirtualNodeSpecBackendDefaultsInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsOutput() VirtualNodeSpecBackendDefaultsOutput
	ToVirtualNodeSpecBackendDefaultsOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsOutput
}

type VirtualNodeSpecBackendDefaultsArgs struct {
	// The default client policy for virtual service backends. See above for details.
	ClientPolicy VirtualNodeSpecBackendDefaultsClientPolicyPtrInput `pulumi:"clientPolicy"`
}

func (VirtualNodeSpecBackendDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaults)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsArgs) ToVirtualNodeSpecBackendDefaultsOutput() VirtualNodeSpecBackendDefaultsOutput {
	return i.ToVirtualNodeSpecBackendDefaultsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsArgs) ToVirtualNodeSpecBackendDefaultsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsOutput)
}

func (i VirtualNodeSpecBackendDefaultsArgs) ToVirtualNodeSpecBackendDefaultsPtrOutput() VirtualNodeSpecBackendDefaultsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsArgs) ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsOutput).ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsArgs, VirtualNodeSpecBackendDefaultsPtr and VirtualNodeSpecBackendDefaultsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsPtrInput` via:
//
//          VirtualNodeSpecBackendDefaultsArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendDefaultsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsPtrOutput() VirtualNodeSpecBackendDefaultsPtrOutput
	ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsPtrOutput
}

type virtualNodeSpecBackendDefaultsPtrType VirtualNodeSpecBackendDefaultsArgs

func VirtualNodeSpecBackendDefaultsPtr(v *VirtualNodeSpecBackendDefaultsArgs) VirtualNodeSpecBackendDefaultsPtrInput {
	return (*virtualNodeSpecBackendDefaultsPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaults)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsPtrType) ToVirtualNodeSpecBackendDefaultsPtrOutput() VirtualNodeSpecBackendDefaultsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsPtrType) ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaults)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsOutput) ToVirtualNodeSpecBackendDefaultsOutput() VirtualNodeSpecBackendDefaultsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsOutput) ToVirtualNodeSpecBackendDefaultsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsOutput) ToVirtualNodeSpecBackendDefaultsPtrOutput() VirtualNodeSpecBackendDefaultsPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsOutput) ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaults) *VirtualNodeSpecBackendDefaults {
		return &v
	}).(VirtualNodeSpecBackendDefaultsPtrOutput)
}

// The default client policy for virtual service backends. See above for details.
func (o VirtualNodeSpecBackendDefaultsOutput) ClientPolicy() VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaults) *VirtualNodeSpecBackendDefaultsClientPolicy {
		return v.ClientPolicy
	}).(VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput)
}

type VirtualNodeSpecBackendDefaultsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaults)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsPtrOutput) ToVirtualNodeSpecBackendDefaultsPtrOutput() VirtualNodeSpecBackendDefaultsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsPtrOutput) ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsPtrOutput) Elem() VirtualNodeSpecBackendDefaultsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaults) VirtualNodeSpecBackendDefaults {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaults
		return ret
	}).(VirtualNodeSpecBackendDefaultsOutput)
}

// The default client policy for virtual service backends. See above for details.
func (o VirtualNodeSpecBackendDefaultsPtrOutput) ClientPolicy() VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaults) *VirtualNodeSpecBackendDefaultsClientPolicy {
		if v == nil {
			return nil
		}
		return v.ClientPolicy
	}).(VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicy struct {
	// The Transport Layer Security (TLS) client policy.
	Tls *VirtualNodeSpecBackendDefaultsClientPolicyTls `pulumi:"tls"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyArgs and VirtualNodeSpecBackendDefaultsClientPolicyOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyOutput() VirtualNodeSpecBackendDefaultsClientPolicyOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyArgs struct {
	// The Transport Layer Security (TLS) client policy.
	Tls VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrInput `pulumi:"tls"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyOutput() VirtualNodeSpecBackendDefaultsClientPolicyOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyArgs, VirtualNodeSpecBackendDefaultsClientPolicyPtr and VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyPtrInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendDefaultsClientPolicyPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyPtrType VirtualNodeSpecBackendDefaultsClientPolicyArgs

func VirtualNodeSpecBackendDefaultsClientPolicyPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyArgs) VirtualNodeSpecBackendDefaultsClientPolicyPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyOutput() VirtualNodeSpecBackendDefaultsClientPolicyOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicy) *VirtualNodeSpecBackendDefaultsClientPolicy {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput)
}

// The Transport Layer Security (TLS) client policy.
func (o VirtualNodeSpecBackendDefaultsClientPolicyOutput) Tls() VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicy) *VirtualNodeSpecBackendDefaultsClientPolicyTls {
		return v.Tls
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicy) VirtualNodeSpecBackendDefaultsClientPolicy {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicy
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyOutput)
}

// The Transport Layer Security (TLS) client policy.
func (o VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput) Tls() VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicy) *VirtualNodeSpecBackendDefaultsClientPolicyTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTls struct {
	// The listener's TLS certificate.
	Certificate *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate `pulumi:"certificate"`
	// Whether the policy is enforced. Default is `true`.
	Enforce *bool `pulumi:"enforce"`
	// One or more ports that the policy is enforced for.
	Ports []int `pulumi:"ports"`
	// The listener's Transport Layer Security (TLS) validation context.
	Validation VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation `pulumi:"validation"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs struct {
	// The listener's TLS certificate.
	Certificate VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrInput `pulumi:"certificate"`
	// Whether the policy is enforced. Default is `true`.
	Enforce pulumi.BoolPtrInput `pulumi:"enforce"`
	// One or more ports that the policy is enforced for.
	Ports pulumi.IntArrayInput `pulumi:"ports"`
	// The listener's Transport Layer Security (TLS) validation context.
	Validation VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationInput `pulumi:"validation"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTls) *VirtualNodeSpecBackendDefaultsClientPolicyTls {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput)
}

// The listener's TLS certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) Certificate() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTls) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate {
		return v.Certificate
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

// Whether the policy is enforced. Default is `true`.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTls) *bool { return v.Enforce }).(pulumi.BoolPtrOutput)
}

// One or more ports that the policy is enforced for.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTls) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

// The listener's Transport Layer Security (TLS) validation context.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) Validation() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTls) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation {
		return v.Validation
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTls) VirtualNodeSpecBackendDefaultsClientPolicyTls {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTls
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput)
}

// The listener's TLS certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) Certificate() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTls) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

// Whether the policy is enforced. Default is `true`.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTls) *bool {
		if v == nil {
			return nil
		}
		return v.Enforce
	}).(pulumi.BoolPtrOutput)
}

// One or more ports that the policy is enforced for.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTls) []int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntArrayOutput)
}

// The listener's Transport Layer Security (TLS) validation context.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) Validation() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTls) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation {
		if v == nil {
			return nil
		}
		return &v.Validation
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate struct {
	// A local file certificate.
	File *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds `pulumi:"sds"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs struct {
	// A local file certificate.
	File VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput `pulumi:"sds"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

// A local file certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput) File() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile {
		return v.File
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput) Sds() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds {
		return v.Sds
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput)
}

// A local file certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) File() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) Sds() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
	// The private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey string `pulumi:"privateKey"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	// The private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile) string { return v.CertificateChain }).(pulumi.StringOutput)
}

// The private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

// The private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds struct {
	// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs struct {
	// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput)
}

// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation struct {
	// The SANs for a TLS validation context.
	SubjectAlternativeNames *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames `pulumi:"subjectAlternativeNames"`
	// The TLS validation context trust.
	Trust VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust `pulumi:"trust"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs struct {
	// The SANs for a TLS validation context.
	SubjectAlternativeNames VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput `pulumi:"subjectAlternativeNames"`
	// The TLS validation context trust.
	Trust VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustInput `pulumi:"trust"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput)
}

// The SANs for a TLS validation context.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput) SubjectAlternativeNames() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		return v.SubjectAlternativeNames
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The TLS validation context trust.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput) Trust() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust {
		return v.Trust
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput)
}

// The SANs for a TLS validation context.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput) SubjectAlternativeNames() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The TLS validation context trust.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput) Trust() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust {
		if v == nil {
			return nil
		}
		return &v.Trust
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames struct {
	// The criteria for determining a SAN's match.
	Match VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch `pulumi:"match"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs struct {
	// The criteria for determining a SAN's match.
	Match VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput `pulumi:"match"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The criteria for determining a SAN's match.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) Match() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		return v.Match
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput)
}

// The criteria for determining a SAN's match.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) Match() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch struct {
	// The values sent must match the specified values exactly.
	Exacts []string `pulumi:"exacts"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs struct {
	// The values sent must match the specified values exactly.
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

// The values sent must match the specified values exactly.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) []string {
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

// The values sent must match the specified values exactly.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) []string {
		if v == nil {
			return nil
		}
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust struct {
	// The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
	Acm *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm `pulumi:"acm"`
	// The TLS validation context trust for a local file certificate.
	File *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile `pulumi:"file"`
	// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds `pulumi:"sds"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs struct {
	// The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
	Acm VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput `pulumi:"acm"`
	// The TLS validation context trust for a local file certificate.
	File VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput `pulumi:"file"`
	// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput `pulumi:"sds"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput)
}

// The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) Acm() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		return v.Acm
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

// The TLS validation context trust for a local file certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) File() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		return v.File
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) Sds() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		return v.Sds
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput)
}

// The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) Acm() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		if v == nil {
			return nil
		}
		return v.Acm
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

// The TLS validation context trust for a local file certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) File() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) Sds() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm struct {
	// One or more ACM Amazon Resource Name (ARN)s.
	CertificateAuthorityArns []string `pulumi:"certificateAuthorityArns"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs struct {
	// One or more ACM Amazon Resource Name (ARN)s.
	CertificateAuthorityArns pulumi.StringArrayInput `pulumi:"certificateAuthorityArns"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

// One or more ACM Amazon Resource Name (ARN)s.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm) []string {
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput)
}

// One or more ACM Amazon Resource Name (ARN)s.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm) []string {
		if v == nil {
			return nil
		}
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds struct {
	// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs struct {
	// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput` via:
//
//          VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput)
}

// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecBackendVirtualService struct {
	// The client policy for the backend.
	ClientPolicy *VirtualNodeSpecBackendVirtualServiceClientPolicy `pulumi:"clientPolicy"`
	// The name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.
	VirtualServiceName string `pulumi:"virtualServiceName"`
}

// VirtualNodeSpecBackendVirtualServiceInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceArgs and VirtualNodeSpecBackendVirtualServiceOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceArgs{...}
type VirtualNodeSpecBackendVirtualServiceInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceOutput() VirtualNodeSpecBackendVirtualServiceOutput
	ToVirtualNodeSpecBackendVirtualServiceOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceOutput
}

type VirtualNodeSpecBackendVirtualServiceArgs struct {
	// The client policy for the backend.
	ClientPolicy VirtualNodeSpecBackendVirtualServiceClientPolicyPtrInput `pulumi:"clientPolicy"`
	// The name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.
	VirtualServiceName pulumi.StringInput `pulumi:"virtualServiceName"`
}

func (VirtualNodeSpecBackendVirtualServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualService)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceArgs) ToVirtualNodeSpecBackendVirtualServiceOutput() VirtualNodeSpecBackendVirtualServiceOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceArgs) ToVirtualNodeSpecBackendVirtualServiceOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceOutput)
}

type VirtualNodeSpecBackendVirtualServiceOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualService)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceOutput) ToVirtualNodeSpecBackendVirtualServiceOutput() VirtualNodeSpecBackendVirtualServiceOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceOutput) ToVirtualNodeSpecBackendVirtualServiceOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceOutput {
	return o
}

// The client policy for the backend.
func (o VirtualNodeSpecBackendVirtualServiceOutput) ClientPolicy() VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualService) *VirtualNodeSpecBackendVirtualServiceClientPolicy {
		return v.ClientPolicy
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput)
}

// The name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendVirtualServiceOutput) VirtualServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualService) string { return v.VirtualServiceName }).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicy struct {
	// The Transport Layer Security (TLS) client policy.
	Tls *VirtualNodeSpecBackendVirtualServiceClientPolicyTls `pulumi:"tls"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyArgs struct {
	// The Transport Layer Security (TLS) client policy.
	Tls VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrInput `pulumi:"tls"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicy)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyPtrInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicy)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicy)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicy) *VirtualNodeSpecBackendVirtualServiceClientPolicy {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput)
}

// The Transport Layer Security (TLS) client policy.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyOutput) Tls() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicy) *VirtualNodeSpecBackendVirtualServiceClientPolicyTls {
		return v.Tls
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicy)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicy) VirtualNodeSpecBackendVirtualServiceClientPolicy {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicy
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyOutput)
}

// The Transport Layer Security (TLS) client policy.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput) Tls() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicy) *VirtualNodeSpecBackendVirtualServiceClientPolicyTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTls struct {
	// The listener's TLS certificate.
	Certificate *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate `pulumi:"certificate"`
	// Whether the policy is enforced. Default is `true`.
	Enforce *bool `pulumi:"enforce"`
	// One or more ports that the policy is enforced for.
	Ports []int `pulumi:"ports"`
	// The listener's Transport Layer Security (TLS) validation context.
	Validation VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation `pulumi:"validation"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs struct {
	// The listener's TLS certificate.
	Certificate VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrInput `pulumi:"certificate"`
	// Whether the policy is enforced. Default is `true`.
	Enforce pulumi.BoolPtrInput `pulumi:"enforce"`
	// One or more ports that the policy is enforced for.
	Ports pulumi.IntArrayInput `pulumi:"ports"`
	// The listener's Transport Layer Security (TLS) validation context.
	Validation VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationInput `pulumi:"validation"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTls)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTls)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTls)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTls) *VirtualNodeSpecBackendVirtualServiceClientPolicyTls {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput)
}

// The listener's TLS certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) Certificate() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTls) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate {
		return v.Certificate
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput)
}

// Whether the policy is enforced. Default is `true`.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTls) *bool { return v.Enforce }).(pulumi.BoolPtrOutput)
}

// One or more ports that the policy is enforced for.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTls) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

// The listener's Transport Layer Security (TLS) validation context.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) Validation() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTls) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation {
		return v.Validation
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTls)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTls) VirtualNodeSpecBackendVirtualServiceClientPolicyTls {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTls
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput)
}

// The listener's TLS certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) Certificate() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTls) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput)
}

// Whether the policy is enforced. Default is `true`.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTls) *bool {
		if v == nil {
			return nil
		}
		return v.Enforce
	}).(pulumi.BoolPtrOutput)
}

// One or more ports that the policy is enforced for.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTls) []int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntArrayOutput)
}

// The listener's Transport Layer Security (TLS) validation context.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) Validation() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTls) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation {
		if v == nil {
			return nil
		}
		return &v.Validation
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate struct {
	// A local file certificate.
	File *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds `pulumi:"sds"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs struct {
	// A local file certificate.
	File VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrInput `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrInput `pulumi:"sds"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput)
}

// A local file certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput) File() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile {
		return v.File
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput) Sds() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds {
		return v.Sds
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput)
}

// A local file certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput) File() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput) Sds() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
	// The private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey string `pulumi:"privateKey"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	// The private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

// The private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

// The private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds struct {
	// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs struct {
	// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput)
}

// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput)
}

// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation struct {
	// The SANs for a TLS validation context.
	SubjectAlternativeNames *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames `pulumi:"subjectAlternativeNames"`
	// The TLS validation context trust.
	Trust VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust `pulumi:"trust"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs struct {
	// The SANs for a TLS validation context.
	SubjectAlternativeNames VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrInput `pulumi:"subjectAlternativeNames"`
	// The TLS validation context trust.
	Trust VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustInput `pulumi:"trust"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput)
}

// The SANs for a TLS validation context.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput) SubjectAlternativeNames() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames {
		return v.SubjectAlternativeNames
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The TLS validation context trust.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput) Trust() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust {
		return v.Trust
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput)
}

// The SANs for a TLS validation context.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput) SubjectAlternativeNames() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The TLS validation context trust.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput) Trust() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust {
		if v == nil {
			return nil
		}
		return &v.Trust
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames struct {
	// The criteria for determining a SAN's match.
	Match VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch `pulumi:"match"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs struct {
	// The criteria for determining a SAN's match.
	Match VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchInput `pulumi:"match"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The criteria for determining a SAN's match.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput) Match() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		return v.Match
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput)
}

// The criteria for determining a SAN's match.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) Match() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch struct {
	// The values sent must match the specified values exactly.
	Exacts []string `pulumi:"exacts"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs struct {
	// The values sent must match the specified values exactly.
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

// The values sent must match the specified values exactly.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch) []string {
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

// The values sent must match the specified values exactly.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch) []string {
		if v == nil {
			return nil
		}
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust struct {
	// The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
	Acm *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm `pulumi:"acm"`
	// The TLS validation context trust for a local file certificate.
	File *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile `pulumi:"file"`
	// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds `pulumi:"sds"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs struct {
	// The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
	Acm VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrInput `pulumi:"acm"`
	// The TLS validation context trust for a local file certificate.
	File VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrInput `pulumi:"file"`
	// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrInput `pulumi:"sds"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput)
}

// The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) Acm() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm {
		return v.Acm
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput)
}

// The TLS validation context trust for a local file certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) File() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile {
		return v.File
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput)
}

// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) Sds() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds {
		return v.Sds
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput)
}

// The TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput) Acm() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm {
		if v == nil {
			return nil
		}
		return v.Acm
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput)
}

// The TLS validation context trust for a local file certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput) File() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput)
}

// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput) Sds() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm struct {
	// One or more ACM Amazon Resource Name (ARN)s.
	CertificateAuthorityArns []string `pulumi:"certificateAuthorityArns"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs struct {
	// One or more ACM Amazon Resource Name (ARN)s.
	CertificateAuthorityArns pulumi.StringArrayInput `pulumi:"certificateAuthorityArns"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput)
}

// One or more ACM Amazon Resource Name (ARN)s.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm) []string {
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput)
}

// One or more ACM Amazon Resource Name (ARN)s.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm) []string {
		if v == nil {
			return nil
		}
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds struct {
	// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs struct {
	// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrInput` via:
//
//          VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput)
}

// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds) string {
		return v.SecretName
	}).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput)
}

// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecListener struct {
	// The connection pool information for the listener.
	ConnectionPool *VirtualNodeSpecListenerConnectionPool `pulumi:"connectionPool"`
	// The health check information for the listener.
	HealthCheck *VirtualNodeSpecListenerHealthCheck `pulumi:"healthCheck"`
	// The outlier detection information for the listener.
	OutlierDetection *VirtualNodeSpecListenerOutlierDetection `pulumi:"outlierDetection"`
	// The port mapping information for the listener.
	PortMapping VirtualNodeSpecListenerPortMapping `pulumi:"portMapping"`
	// Timeouts for different protocols.
	Timeout *VirtualNodeSpecListenerTimeout `pulumi:"timeout"`
	// The Transport Layer Security (TLS) properties for the listener
	Tls *VirtualNodeSpecListenerTls `pulumi:"tls"`
}

// VirtualNodeSpecListenerInput is an input type that accepts VirtualNodeSpecListenerArgs and VirtualNodeSpecListenerOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerInput` via:
//
//          VirtualNodeSpecListenerArgs{...}
type VirtualNodeSpecListenerInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerOutput() VirtualNodeSpecListenerOutput
	ToVirtualNodeSpecListenerOutputWithContext(context.Context) VirtualNodeSpecListenerOutput
}

type VirtualNodeSpecListenerArgs struct {
	// The connection pool information for the listener.
	ConnectionPool VirtualNodeSpecListenerConnectionPoolPtrInput `pulumi:"connectionPool"`
	// The health check information for the listener.
	HealthCheck VirtualNodeSpecListenerHealthCheckPtrInput `pulumi:"healthCheck"`
	// The outlier detection information for the listener.
	OutlierDetection VirtualNodeSpecListenerOutlierDetectionPtrInput `pulumi:"outlierDetection"`
	// The port mapping information for the listener.
	PortMapping VirtualNodeSpecListenerPortMappingInput `pulumi:"portMapping"`
	// Timeouts for different protocols.
	Timeout VirtualNodeSpecListenerTimeoutPtrInput `pulumi:"timeout"`
	// The Transport Layer Security (TLS) properties for the listener
	Tls VirtualNodeSpecListenerTlsPtrInput `pulumi:"tls"`
}

func (VirtualNodeSpecListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListener)(nil)).Elem()
}

func (i VirtualNodeSpecListenerArgs) ToVirtualNodeSpecListenerOutput() VirtualNodeSpecListenerOutput {
	return i.ToVirtualNodeSpecListenerOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerArgs) ToVirtualNodeSpecListenerOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutput)
}

func (i VirtualNodeSpecListenerArgs) ToVirtualNodeSpecListenerPtrOutput() VirtualNodeSpecListenerPtrOutput {
	return i.ToVirtualNodeSpecListenerPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerArgs) ToVirtualNodeSpecListenerPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutput).ToVirtualNodeSpecListenerPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerPtrInput is an input type that accepts VirtualNodeSpecListenerArgs, VirtualNodeSpecListenerPtr and VirtualNodeSpecListenerPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerPtrInput` via:
//
//          VirtualNodeSpecListenerArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerPtrOutput() VirtualNodeSpecListenerPtrOutput
	ToVirtualNodeSpecListenerPtrOutputWithContext(context.Context) VirtualNodeSpecListenerPtrOutput
}

type virtualNodeSpecListenerPtrType VirtualNodeSpecListenerArgs

func VirtualNodeSpecListenerPtr(v *VirtualNodeSpecListenerArgs) VirtualNodeSpecListenerPtrInput {
	return (*virtualNodeSpecListenerPtrType)(v)
}

func (*virtualNodeSpecListenerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListener)(nil)).Elem()
}

func (i *virtualNodeSpecListenerPtrType) ToVirtualNodeSpecListenerPtrOutput() VirtualNodeSpecListenerPtrOutput {
	return i.ToVirtualNodeSpecListenerPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerPtrType) ToVirtualNodeSpecListenerPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerPtrOutput)
}

type VirtualNodeSpecListenerOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListener)(nil)).Elem()
}

func (o VirtualNodeSpecListenerOutput) ToVirtualNodeSpecListenerOutput() VirtualNodeSpecListenerOutput {
	return o
}

func (o VirtualNodeSpecListenerOutput) ToVirtualNodeSpecListenerOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutput {
	return o
}

func (o VirtualNodeSpecListenerOutput) ToVirtualNodeSpecListenerPtrOutput() VirtualNodeSpecListenerPtrOutput {
	return o.ToVirtualNodeSpecListenerPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerOutput) ToVirtualNodeSpecListenerPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListener) *VirtualNodeSpecListener {
		return &v
	}).(VirtualNodeSpecListenerPtrOutput)
}

// The connection pool information for the listener.
func (o VirtualNodeSpecListenerOutput) ConnectionPool() VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListener) *VirtualNodeSpecListenerConnectionPool { return v.ConnectionPool }).(VirtualNodeSpecListenerConnectionPoolPtrOutput)
}

// The health check information for the listener.
func (o VirtualNodeSpecListenerOutput) HealthCheck() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListener) *VirtualNodeSpecListenerHealthCheck { return v.HealthCheck }).(VirtualNodeSpecListenerHealthCheckPtrOutput)
}

// The outlier detection information for the listener.
func (o VirtualNodeSpecListenerOutput) OutlierDetection() VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListener) *VirtualNodeSpecListenerOutlierDetection { return v.OutlierDetection }).(VirtualNodeSpecListenerOutlierDetectionPtrOutput)
}

// The port mapping information for the listener.
func (o VirtualNodeSpecListenerOutput) PortMapping() VirtualNodeSpecListenerPortMappingOutput {
	return o.ApplyT(func(v VirtualNodeSpecListener) VirtualNodeSpecListenerPortMapping { return v.PortMapping }).(VirtualNodeSpecListenerPortMappingOutput)
}

// Timeouts for different protocols.
func (o VirtualNodeSpecListenerOutput) Timeout() VirtualNodeSpecListenerTimeoutPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListener) *VirtualNodeSpecListenerTimeout { return v.Timeout }).(VirtualNodeSpecListenerTimeoutPtrOutput)
}

// The Transport Layer Security (TLS) properties for the listener
func (o VirtualNodeSpecListenerOutput) Tls() VirtualNodeSpecListenerTlsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListener) *VirtualNodeSpecListenerTls { return v.Tls }).(VirtualNodeSpecListenerTlsPtrOutput)
}

type VirtualNodeSpecListenerPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListener)(nil)).Elem()
}

func (o VirtualNodeSpecListenerPtrOutput) ToVirtualNodeSpecListenerPtrOutput() VirtualNodeSpecListenerPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerPtrOutput) ToVirtualNodeSpecListenerPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerPtrOutput) Elem() VirtualNodeSpecListenerOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListener) VirtualNodeSpecListener {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListener
		return ret
	}).(VirtualNodeSpecListenerOutput)
}

// The connection pool information for the listener.
func (o VirtualNodeSpecListenerPtrOutput) ConnectionPool() VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListener) *VirtualNodeSpecListenerConnectionPool {
		if v == nil {
			return nil
		}
		return v.ConnectionPool
	}).(VirtualNodeSpecListenerConnectionPoolPtrOutput)
}

// The health check information for the listener.
func (o VirtualNodeSpecListenerPtrOutput) HealthCheck() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListener) *VirtualNodeSpecListenerHealthCheck {
		if v == nil {
			return nil
		}
		return v.HealthCheck
	}).(VirtualNodeSpecListenerHealthCheckPtrOutput)
}

// The outlier detection information for the listener.
func (o VirtualNodeSpecListenerPtrOutput) OutlierDetection() VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListener) *VirtualNodeSpecListenerOutlierDetection {
		if v == nil {
			return nil
		}
		return v.OutlierDetection
	}).(VirtualNodeSpecListenerOutlierDetectionPtrOutput)
}

// The port mapping information for the listener.
func (o VirtualNodeSpecListenerPtrOutput) PortMapping() VirtualNodeSpecListenerPortMappingPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListener) *VirtualNodeSpecListenerPortMapping {
		if v == nil {
			return nil
		}
		return &v.PortMapping
	}).(VirtualNodeSpecListenerPortMappingPtrOutput)
}

// Timeouts for different protocols.
func (o VirtualNodeSpecListenerPtrOutput) Timeout() VirtualNodeSpecListenerTimeoutPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListener) *VirtualNodeSpecListenerTimeout {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(VirtualNodeSpecListenerTimeoutPtrOutput)
}

// The Transport Layer Security (TLS) properties for the listener
func (o VirtualNodeSpecListenerPtrOutput) Tls() VirtualNodeSpecListenerTlsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListener) *VirtualNodeSpecListenerTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(VirtualNodeSpecListenerTlsPtrOutput)
}

type VirtualNodeSpecListenerConnectionPool struct {
	// Connection pool information for gRPC listeners.
	Grpc *VirtualNodeSpecListenerConnectionPoolGrpc `pulumi:"grpc"`
	// Connection pool information for HTTP listeners.
	Http *VirtualNodeSpecListenerConnectionPoolHttp `pulumi:"http"`
	// Connection pool information for HTTP2 listeners.
	Http2 *VirtualNodeSpecListenerConnectionPoolHttp2 `pulumi:"http2"`
	// Connection pool information for TCP listeners.
	Tcp *VirtualNodeSpecListenerConnectionPoolTcp `pulumi:"tcp"`
}

// VirtualNodeSpecListenerConnectionPoolInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolArgs and VirtualNodeSpecListenerConnectionPoolOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolInput` via:
//
//          VirtualNodeSpecListenerConnectionPoolArgs{...}
type VirtualNodeSpecListenerConnectionPoolInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolOutput() VirtualNodeSpecListenerConnectionPoolOutput
	ToVirtualNodeSpecListenerConnectionPoolOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolOutput
}

type VirtualNodeSpecListenerConnectionPoolArgs struct {
	// Connection pool information for gRPC listeners.
	Grpc VirtualNodeSpecListenerConnectionPoolGrpcPtrInput `pulumi:"grpc"`
	// Connection pool information for HTTP listeners.
	Http VirtualNodeSpecListenerConnectionPoolHttpPtrInput `pulumi:"http"`
	// Connection pool information for HTTP2 listeners.
	Http2 VirtualNodeSpecListenerConnectionPoolHttp2PtrInput `pulumi:"http2"`
	// Connection pool information for TCP listeners.
	Tcp VirtualNodeSpecListenerConnectionPoolTcpPtrInput `pulumi:"tcp"`
}

func (VirtualNodeSpecListenerConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPool)(nil)).Elem()
}

func (i VirtualNodeSpecListenerConnectionPoolArgs) ToVirtualNodeSpecListenerConnectionPoolOutput() VirtualNodeSpecListenerConnectionPoolOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolArgs) ToVirtualNodeSpecListenerConnectionPoolOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolOutput)
}

func (i VirtualNodeSpecListenerConnectionPoolArgs) ToVirtualNodeSpecListenerConnectionPoolPtrOutput() VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolArgs) ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolOutput).ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerConnectionPoolPtrInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolArgs, VirtualNodeSpecListenerConnectionPoolPtr and VirtualNodeSpecListenerConnectionPoolPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolPtrInput` via:
//
//          VirtualNodeSpecListenerConnectionPoolArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerConnectionPoolPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolPtrOutput() VirtualNodeSpecListenerConnectionPoolPtrOutput
	ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolPtrOutput
}

type virtualNodeSpecListenerConnectionPoolPtrType VirtualNodeSpecListenerConnectionPoolArgs

func VirtualNodeSpecListenerConnectionPoolPtr(v *VirtualNodeSpecListenerConnectionPoolArgs) VirtualNodeSpecListenerConnectionPoolPtrInput {
	return (*virtualNodeSpecListenerConnectionPoolPtrType)(v)
}

func (*virtualNodeSpecListenerConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerConnectionPool)(nil)).Elem()
}

func (i *virtualNodeSpecListenerConnectionPoolPtrType) ToVirtualNodeSpecListenerConnectionPoolPtrOutput() VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerConnectionPoolPtrType) ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolPtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPool)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolOutput) ToVirtualNodeSpecListenerConnectionPoolOutput() VirtualNodeSpecListenerConnectionPoolOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolOutput) ToVirtualNodeSpecListenerConnectionPoolOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolOutput) ToVirtualNodeSpecListenerConnectionPoolPtrOutput() VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return o.ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerConnectionPoolOutput) ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerConnectionPool) *VirtualNodeSpecListenerConnectionPool {
		return &v
	}).(VirtualNodeSpecListenerConnectionPoolPtrOutput)
}

// Connection pool information for gRPC listeners.
func (o VirtualNodeSpecListenerConnectionPoolOutput) Grpc() VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPool) *VirtualNodeSpecListenerConnectionPoolGrpc {
		return v.Grpc
	}).(VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput)
}

// Connection pool information for HTTP listeners.
func (o VirtualNodeSpecListenerConnectionPoolOutput) Http() VirtualNodeSpecListenerConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPool) *VirtualNodeSpecListenerConnectionPoolHttp {
		return v.Http
	}).(VirtualNodeSpecListenerConnectionPoolHttpPtrOutput)
}

// Connection pool information for HTTP2 listeners.
func (o VirtualNodeSpecListenerConnectionPoolOutput) Http2() VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPool) *VirtualNodeSpecListenerConnectionPoolHttp2 {
		return v.Http2
	}).(VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput)
}

// Connection pool information for TCP listeners.
func (o VirtualNodeSpecListenerConnectionPoolOutput) Tcp() VirtualNodeSpecListenerConnectionPoolTcpPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPool) *VirtualNodeSpecListenerConnectionPoolTcp { return v.Tcp }).(VirtualNodeSpecListenerConnectionPoolTcpPtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerConnectionPool)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolPtrOutput) ToVirtualNodeSpecListenerConnectionPoolPtrOutput() VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolPtrOutput) ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolPtrOutput) Elem() VirtualNodeSpecListenerConnectionPoolOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPool) VirtualNodeSpecListenerConnectionPool {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerConnectionPool
		return ret
	}).(VirtualNodeSpecListenerConnectionPoolOutput)
}

// Connection pool information for gRPC listeners.
func (o VirtualNodeSpecListenerConnectionPoolPtrOutput) Grpc() VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPool) *VirtualNodeSpecListenerConnectionPoolGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput)
}

// Connection pool information for HTTP listeners.
func (o VirtualNodeSpecListenerConnectionPoolPtrOutput) Http() VirtualNodeSpecListenerConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPool) *VirtualNodeSpecListenerConnectionPoolHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(VirtualNodeSpecListenerConnectionPoolHttpPtrOutput)
}

// Connection pool information for HTTP2 listeners.
func (o VirtualNodeSpecListenerConnectionPoolPtrOutput) Http2() VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPool) *VirtualNodeSpecListenerConnectionPoolHttp2 {
		if v == nil {
			return nil
		}
		return v.Http2
	}).(VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput)
}

// Connection pool information for TCP listeners.
func (o VirtualNodeSpecListenerConnectionPoolPtrOutput) Tcp() VirtualNodeSpecListenerConnectionPoolTcpPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPool) *VirtualNodeSpecListenerConnectionPoolTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(VirtualNodeSpecListenerConnectionPoolTcpPtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolGrpc struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests int `pulumi:"maxRequests"`
}

// VirtualNodeSpecListenerConnectionPoolGrpcInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolGrpcArgs and VirtualNodeSpecListenerConnectionPoolGrpcOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolGrpcInput` via:
//
//          VirtualNodeSpecListenerConnectionPoolGrpcArgs{...}
type VirtualNodeSpecListenerConnectionPoolGrpcInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolGrpcOutput() VirtualNodeSpecListenerConnectionPoolGrpcOutput
	ToVirtualNodeSpecListenerConnectionPoolGrpcOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolGrpcOutput
}

type VirtualNodeSpecListenerConnectionPoolGrpcArgs struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (VirtualNodeSpecListenerConnectionPoolGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (i VirtualNodeSpecListenerConnectionPoolGrpcArgs) ToVirtualNodeSpecListenerConnectionPoolGrpcOutput() VirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolGrpcOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolGrpcArgs) ToVirtualNodeSpecListenerConnectionPoolGrpcOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolGrpcOutput)
}

func (i VirtualNodeSpecListenerConnectionPoolGrpcArgs) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutput() VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolGrpcArgs) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolGrpcOutput).ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerConnectionPoolGrpcPtrInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolGrpcArgs, VirtualNodeSpecListenerConnectionPoolGrpcPtr and VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolGrpcPtrInput` via:
//
//          VirtualNodeSpecListenerConnectionPoolGrpcArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerConnectionPoolGrpcPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutput() VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput
	ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput
}

type virtualNodeSpecListenerConnectionPoolGrpcPtrType VirtualNodeSpecListenerConnectionPoolGrpcArgs

func VirtualNodeSpecListenerConnectionPoolGrpcPtr(v *VirtualNodeSpecListenerConnectionPoolGrpcArgs) VirtualNodeSpecListenerConnectionPoolGrpcPtrInput {
	return (*virtualNodeSpecListenerConnectionPoolGrpcPtrType)(v)
}

func (*virtualNodeSpecListenerConnectionPoolGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (i *virtualNodeSpecListenerConnectionPoolGrpcPtrType) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutput() VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerConnectionPoolGrpcPtrType) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolGrpcOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolGrpcOutput) ToVirtualNodeSpecListenerConnectionPoolGrpcOutput() VirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolGrpcOutput) ToVirtualNodeSpecListenerConnectionPoolGrpcOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolGrpcOutput) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutput() VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return o.ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerConnectionPoolGrpcOutput) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerConnectionPoolGrpc) *VirtualNodeSpecListenerConnectionPoolGrpc {
		return &v
	}).(VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput)
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolGrpcOutput) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPoolGrpc) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutput() VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput) Elem() VirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPoolGrpc) VirtualNodeSpecListenerConnectionPoolGrpc {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerConnectionPoolGrpc
		return ret
	}).(VirtualNodeSpecListenerConnectionPoolGrpcOutput)
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput) MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPoolGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolHttp2 struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests int `pulumi:"maxRequests"`
}

// VirtualNodeSpecListenerConnectionPoolHttp2Input is an input type that accepts VirtualNodeSpecListenerConnectionPoolHttp2Args and VirtualNodeSpecListenerConnectionPoolHttp2Output values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolHttp2Input` via:
//
//          VirtualNodeSpecListenerConnectionPoolHttp2Args{...}
type VirtualNodeSpecListenerConnectionPoolHttp2Input interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolHttp2Output() VirtualNodeSpecListenerConnectionPoolHttp2Output
	ToVirtualNodeSpecListenerConnectionPoolHttp2OutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolHttp2Output
}

type VirtualNodeSpecListenerConnectionPoolHttp2Args struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (VirtualNodeSpecListenerConnectionPoolHttp2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (i VirtualNodeSpecListenerConnectionPoolHttp2Args) ToVirtualNodeSpecListenerConnectionPoolHttp2Output() VirtualNodeSpecListenerConnectionPoolHttp2Output {
	return i.ToVirtualNodeSpecListenerConnectionPoolHttp2OutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolHttp2Args) ToVirtualNodeSpecListenerConnectionPoolHttp2OutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttp2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolHttp2Output)
}

func (i VirtualNodeSpecListenerConnectionPoolHttp2Args) ToVirtualNodeSpecListenerConnectionPoolHttp2PtrOutput() VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolHttp2PtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolHttp2Args) ToVirtualNodeSpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolHttp2Output).ToVirtualNodeSpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerConnectionPoolHttp2PtrInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolHttp2Args, VirtualNodeSpecListenerConnectionPoolHttp2Ptr and VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolHttp2PtrInput` via:
//
//          VirtualNodeSpecListenerConnectionPoolHttp2Args{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerConnectionPoolHttp2PtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolHttp2PtrOutput() VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput
	ToVirtualNodeSpecListenerConnectionPoolHttp2PtrOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput
}

type virtualNodeSpecListenerConnectionPoolHttp2PtrType VirtualNodeSpecListenerConnectionPoolHttp2Args

func VirtualNodeSpecListenerConnectionPoolHttp2Ptr(v *VirtualNodeSpecListenerConnectionPoolHttp2Args) VirtualNodeSpecListenerConnectionPoolHttp2PtrInput {
	return (*virtualNodeSpecListenerConnectionPoolHttp2PtrType)(v)
}

func (*virtualNodeSpecListenerConnectionPoolHttp2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (i *virtualNodeSpecListenerConnectionPoolHttp2PtrType) ToVirtualNodeSpecListenerConnectionPoolHttp2PtrOutput() VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolHttp2PtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerConnectionPoolHttp2PtrType) ToVirtualNodeSpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolHttp2Output struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolHttp2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolHttp2Output) ToVirtualNodeSpecListenerConnectionPoolHttp2Output() VirtualNodeSpecListenerConnectionPoolHttp2Output {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolHttp2Output) ToVirtualNodeSpecListenerConnectionPoolHttp2OutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttp2Output {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolHttp2Output) ToVirtualNodeSpecListenerConnectionPoolHttp2PtrOutput() VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput {
	return o.ToVirtualNodeSpecListenerConnectionPoolHttp2PtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerConnectionPoolHttp2Output) ToVirtualNodeSpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerConnectionPoolHttp2) *VirtualNodeSpecListenerConnectionPoolHttp2 {
		return &v
	}).(VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput)
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolHttp2Output) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPoolHttp2) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput) ToVirtualNodeSpecListenerConnectionPoolHttp2PtrOutput() VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput) ToVirtualNodeSpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput) Elem() VirtualNodeSpecListenerConnectionPoolHttp2Output {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPoolHttp2) VirtualNodeSpecListenerConnectionPoolHttp2 {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerConnectionPoolHttp2
		return ret
	}).(VirtualNodeSpecListenerConnectionPoolHttp2Output)
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput) MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPoolHttp2) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolHttp struct {
	// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
	MaxConnections int `pulumi:"maxConnections"`
	// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
	MaxPendingRequests *int `pulumi:"maxPendingRequests"`
}

// VirtualNodeSpecListenerConnectionPoolHttpInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolHttpArgs and VirtualNodeSpecListenerConnectionPoolHttpOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolHttpInput` via:
//
//          VirtualNodeSpecListenerConnectionPoolHttpArgs{...}
type VirtualNodeSpecListenerConnectionPoolHttpInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolHttpOutput() VirtualNodeSpecListenerConnectionPoolHttpOutput
	ToVirtualNodeSpecListenerConnectionPoolHttpOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolHttpOutput
}

type VirtualNodeSpecListenerConnectionPoolHttpArgs struct {
	// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
	MaxPendingRequests pulumi.IntPtrInput `pulumi:"maxPendingRequests"`
}

func (VirtualNodeSpecListenerConnectionPoolHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (i VirtualNodeSpecListenerConnectionPoolHttpArgs) ToVirtualNodeSpecListenerConnectionPoolHttpOutput() VirtualNodeSpecListenerConnectionPoolHttpOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolHttpOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolHttpArgs) ToVirtualNodeSpecListenerConnectionPoolHttpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolHttpOutput)
}

func (i VirtualNodeSpecListenerConnectionPoolHttpArgs) ToVirtualNodeSpecListenerConnectionPoolHttpPtrOutput() VirtualNodeSpecListenerConnectionPoolHttpPtrOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolHttpArgs) ToVirtualNodeSpecListenerConnectionPoolHttpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolHttpOutput).ToVirtualNodeSpecListenerConnectionPoolHttpPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerConnectionPoolHttpPtrInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolHttpArgs, VirtualNodeSpecListenerConnectionPoolHttpPtr and VirtualNodeSpecListenerConnectionPoolHttpPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolHttpPtrInput` via:
//
//          VirtualNodeSpecListenerConnectionPoolHttpArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerConnectionPoolHttpPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolHttpPtrOutput() VirtualNodeSpecListenerConnectionPoolHttpPtrOutput
	ToVirtualNodeSpecListenerConnectionPoolHttpPtrOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolHttpPtrOutput
}

type virtualNodeSpecListenerConnectionPoolHttpPtrType VirtualNodeSpecListenerConnectionPoolHttpArgs

func VirtualNodeSpecListenerConnectionPoolHttpPtr(v *VirtualNodeSpecListenerConnectionPoolHttpArgs) VirtualNodeSpecListenerConnectionPoolHttpPtrInput {
	return (*virtualNodeSpecListenerConnectionPoolHttpPtrType)(v)
}

func (*virtualNodeSpecListenerConnectionPoolHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (i *virtualNodeSpecListenerConnectionPoolHttpPtrType) ToVirtualNodeSpecListenerConnectionPoolHttpPtrOutput() VirtualNodeSpecListenerConnectionPoolHttpPtrOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerConnectionPoolHttpPtrType) ToVirtualNodeSpecListenerConnectionPoolHttpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolHttpPtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolHttpOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolHttpOutput) ToVirtualNodeSpecListenerConnectionPoolHttpOutput() VirtualNodeSpecListenerConnectionPoolHttpOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolHttpOutput) ToVirtualNodeSpecListenerConnectionPoolHttpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttpOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolHttpOutput) ToVirtualNodeSpecListenerConnectionPoolHttpPtrOutput() VirtualNodeSpecListenerConnectionPoolHttpPtrOutput {
	return o.ToVirtualNodeSpecListenerConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerConnectionPoolHttpOutput) ToVirtualNodeSpecListenerConnectionPoolHttpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerConnectionPoolHttp) *VirtualNodeSpecListenerConnectionPoolHttp {
		return &v
	}).(VirtualNodeSpecListenerConnectionPoolHttpPtrOutput)
}

// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolHttpOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPoolHttp) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolHttpOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPoolHttp) *int { return v.MaxPendingRequests }).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolHttpPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolHttpPtrOutput) ToVirtualNodeSpecListenerConnectionPoolHttpPtrOutput() VirtualNodeSpecListenerConnectionPoolHttpPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolHttpPtrOutput) ToVirtualNodeSpecListenerConnectionPoolHttpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttpPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolHttpPtrOutput) Elem() VirtualNodeSpecListenerConnectionPoolHttpOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPoolHttp) VirtualNodeSpecListenerConnectionPoolHttp {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerConnectionPoolHttp
		return ret
	}).(VirtualNodeSpecListenerConnectionPoolHttpOutput)
}

// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolHttpPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return &v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolHttpPtrOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolTcp struct {
	// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
	MaxConnections int `pulumi:"maxConnections"`
}

// VirtualNodeSpecListenerConnectionPoolTcpInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolTcpArgs and VirtualNodeSpecListenerConnectionPoolTcpOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolTcpInput` via:
//
//          VirtualNodeSpecListenerConnectionPoolTcpArgs{...}
type VirtualNodeSpecListenerConnectionPoolTcpInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolTcpOutput() VirtualNodeSpecListenerConnectionPoolTcpOutput
	ToVirtualNodeSpecListenerConnectionPoolTcpOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolTcpOutput
}

type VirtualNodeSpecListenerConnectionPoolTcpArgs struct {
	// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
}

func (VirtualNodeSpecListenerConnectionPoolTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolTcp)(nil)).Elem()
}

func (i VirtualNodeSpecListenerConnectionPoolTcpArgs) ToVirtualNodeSpecListenerConnectionPoolTcpOutput() VirtualNodeSpecListenerConnectionPoolTcpOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolTcpOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolTcpArgs) ToVirtualNodeSpecListenerConnectionPoolTcpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolTcpOutput)
}

func (i VirtualNodeSpecListenerConnectionPoolTcpArgs) ToVirtualNodeSpecListenerConnectionPoolTcpPtrOutput() VirtualNodeSpecListenerConnectionPoolTcpPtrOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolTcpArgs) ToVirtualNodeSpecListenerConnectionPoolTcpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolTcpOutput).ToVirtualNodeSpecListenerConnectionPoolTcpPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerConnectionPoolTcpPtrInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolTcpArgs, VirtualNodeSpecListenerConnectionPoolTcpPtr and VirtualNodeSpecListenerConnectionPoolTcpPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolTcpPtrInput` via:
//
//          VirtualNodeSpecListenerConnectionPoolTcpArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerConnectionPoolTcpPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolTcpPtrOutput() VirtualNodeSpecListenerConnectionPoolTcpPtrOutput
	ToVirtualNodeSpecListenerConnectionPoolTcpPtrOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolTcpPtrOutput
}

type virtualNodeSpecListenerConnectionPoolTcpPtrType VirtualNodeSpecListenerConnectionPoolTcpArgs

func VirtualNodeSpecListenerConnectionPoolTcpPtr(v *VirtualNodeSpecListenerConnectionPoolTcpArgs) VirtualNodeSpecListenerConnectionPoolTcpPtrInput {
	return (*virtualNodeSpecListenerConnectionPoolTcpPtrType)(v)
}

func (*virtualNodeSpecListenerConnectionPoolTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerConnectionPoolTcp)(nil)).Elem()
}

func (i *virtualNodeSpecListenerConnectionPoolTcpPtrType) ToVirtualNodeSpecListenerConnectionPoolTcpPtrOutput() VirtualNodeSpecListenerConnectionPoolTcpPtrOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerConnectionPoolTcpPtrType) ToVirtualNodeSpecListenerConnectionPoolTcpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolTcpPtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolTcpOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolTcp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolTcpOutput) ToVirtualNodeSpecListenerConnectionPoolTcpOutput() VirtualNodeSpecListenerConnectionPoolTcpOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolTcpOutput) ToVirtualNodeSpecListenerConnectionPoolTcpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolTcpOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolTcpOutput) ToVirtualNodeSpecListenerConnectionPoolTcpPtrOutput() VirtualNodeSpecListenerConnectionPoolTcpPtrOutput {
	return o.ToVirtualNodeSpecListenerConnectionPoolTcpPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerConnectionPoolTcpOutput) ToVirtualNodeSpecListenerConnectionPoolTcpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerConnectionPoolTcp) *VirtualNodeSpecListenerConnectionPoolTcp {
		return &v
	}).(VirtualNodeSpecListenerConnectionPoolTcpPtrOutput)
}

// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolTcpOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPoolTcp) int { return v.MaxConnections }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerConnectionPoolTcpPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerConnectionPoolTcp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolTcpPtrOutput) ToVirtualNodeSpecListenerConnectionPoolTcpPtrOutput() VirtualNodeSpecListenerConnectionPoolTcpPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolTcpPtrOutput) ToVirtualNodeSpecListenerConnectionPoolTcpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolTcpPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolTcpPtrOutput) Elem() VirtualNodeSpecListenerConnectionPoolTcpOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPoolTcp) VirtualNodeSpecListenerConnectionPoolTcp {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerConnectionPoolTcp
		return ret
	}).(VirtualNodeSpecListenerConnectionPoolTcpOutput)
}

// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolTcpPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPoolTcp) *int {
		if v == nil {
			return nil
		}
		return &v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerHealthCheck struct {
	// The number of consecutive successful health checks that must occur before declaring listener healthy.
	HealthyThreshold int `pulumi:"healthyThreshold"`
	// The time period in milliseconds between each health check execution.
	IntervalMillis int `pulumi:"intervalMillis"`
	// The destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
	Path *string `pulumi:"path"`
	// The destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
	Port *int `pulumi:"port"`
	// The protocol for the health check request. Valid values are `http`, `http2`, `tcp` and `grpc`.
	Protocol string `pulumi:"protocol"`
	// The amount of time to wait when receiving a response from the health check, in milliseconds.
	TimeoutMillis int `pulumi:"timeoutMillis"`
	// The number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
	UnhealthyThreshold int `pulumi:"unhealthyThreshold"`
}

// VirtualNodeSpecListenerHealthCheckInput is an input type that accepts VirtualNodeSpecListenerHealthCheckArgs and VirtualNodeSpecListenerHealthCheckOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerHealthCheckInput` via:
//
//          VirtualNodeSpecListenerHealthCheckArgs{...}
type VirtualNodeSpecListenerHealthCheckInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerHealthCheckOutput() VirtualNodeSpecListenerHealthCheckOutput
	ToVirtualNodeSpecListenerHealthCheckOutputWithContext(context.Context) VirtualNodeSpecListenerHealthCheckOutput
}

type VirtualNodeSpecListenerHealthCheckArgs struct {
	// The number of consecutive successful health checks that must occur before declaring listener healthy.
	HealthyThreshold pulumi.IntInput `pulumi:"healthyThreshold"`
	// The time period in milliseconds between each health check execution.
	IntervalMillis pulumi.IntInput `pulumi:"intervalMillis"`
	// The destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The protocol for the health check request. Valid values are `http`, `http2`, `tcp` and `grpc`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The amount of time to wait when receiving a response from the health check, in milliseconds.
	TimeoutMillis pulumi.IntInput `pulumi:"timeoutMillis"`
	// The number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
	UnhealthyThreshold pulumi.IntInput `pulumi:"unhealthyThreshold"`
}

func (VirtualNodeSpecListenerHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (i VirtualNodeSpecListenerHealthCheckArgs) ToVirtualNodeSpecListenerHealthCheckOutput() VirtualNodeSpecListenerHealthCheckOutput {
	return i.ToVirtualNodeSpecListenerHealthCheckOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerHealthCheckArgs) ToVirtualNodeSpecListenerHealthCheckOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerHealthCheckOutput)
}

func (i VirtualNodeSpecListenerHealthCheckArgs) ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return i.ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerHealthCheckArgs) ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerHealthCheckOutput).ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerHealthCheckPtrInput is an input type that accepts VirtualNodeSpecListenerHealthCheckArgs, VirtualNodeSpecListenerHealthCheckPtr and VirtualNodeSpecListenerHealthCheckPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerHealthCheckPtrInput` via:
//
//          VirtualNodeSpecListenerHealthCheckArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerHealthCheckPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput
	ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput
}

type virtualNodeSpecListenerHealthCheckPtrType VirtualNodeSpecListenerHealthCheckArgs

func VirtualNodeSpecListenerHealthCheckPtr(v *VirtualNodeSpecListenerHealthCheckArgs) VirtualNodeSpecListenerHealthCheckPtrInput {
	return (*virtualNodeSpecListenerHealthCheckPtrType)(v)
}

func (*virtualNodeSpecListenerHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (i *virtualNodeSpecListenerHealthCheckPtrType) ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return i.ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerHealthCheckPtrType) ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerHealthCheckPtrOutput)
}

type VirtualNodeSpecListenerHealthCheckOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (o VirtualNodeSpecListenerHealthCheckOutput) ToVirtualNodeSpecListenerHealthCheckOutput() VirtualNodeSpecListenerHealthCheckOutput {
	return o
}

func (o VirtualNodeSpecListenerHealthCheckOutput) ToVirtualNodeSpecListenerHealthCheckOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckOutput {
	return o
}

func (o VirtualNodeSpecListenerHealthCheckOutput) ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o.ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerHealthCheckOutput) ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerHealthCheck) *VirtualNodeSpecListenerHealthCheck {
		return &v
	}).(VirtualNodeSpecListenerHealthCheckPtrOutput)
}

// The number of consecutive successful health checks that must occur before declaring listener healthy.
func (o VirtualNodeSpecListenerHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

// The time period in milliseconds between each health check execution.
func (o VirtualNodeSpecListenerHealthCheckOutput) IntervalMillis() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) int { return v.IntervalMillis }).(pulumi.IntOutput)
}

// The destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
func (o VirtualNodeSpecListenerHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
func (o VirtualNodeSpecListenerHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The protocol for the health check request. Valid values are `http`, `http2`, `tcp` and `grpc`.
func (o VirtualNodeSpecListenerHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

// The amount of time to wait when receiving a response from the health check, in milliseconds.
func (o VirtualNodeSpecListenerHealthCheckOutput) TimeoutMillis() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) int { return v.TimeoutMillis }).(pulumi.IntOutput)
}

// The number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
func (o VirtualNodeSpecListenerHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (o VirtualNodeSpecListenerHealthCheckPtrOutput) ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerHealthCheckPtrOutput) ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerHealthCheckPtrOutput) Elem() VirtualNodeSpecListenerHealthCheckOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) VirtualNodeSpecListenerHealthCheck {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerHealthCheck
		return ret
	}).(VirtualNodeSpecListenerHealthCheckOutput)
}

// The number of consecutive successful health checks that must occur before declaring listener healthy.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// The time period in milliseconds between each health check execution.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) IntervalMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.IntervalMillis
	}).(pulumi.IntPtrOutput)
}

// The destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The protocol for the health check request. Valid values are `http`, `http2`, `tcp` and `grpc`.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The amount of time to wait when receiving a response from the health check, in milliseconds.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) TimeoutMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutMillis
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerOutlierDetection struct {
	// The base amount of time for which a host is ejected.
	BaseEjectionDuration VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration `pulumi:"baseEjectionDuration"`
	// The time interval between ejection sweep analysis.
	Interval VirtualNodeSpecListenerOutlierDetectionInterval `pulumi:"interval"`
	// Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
	// Minimum value of `0`. Maximum value of `100`.
	MaxEjectionPercent int `pulumi:"maxEjectionPercent"`
	// Number of consecutive `5xx` errors required for ejection. Minimum value of `1`.
	MaxServerErrors int `pulumi:"maxServerErrors"`
}

// VirtualNodeSpecListenerOutlierDetectionInput is an input type that accepts VirtualNodeSpecListenerOutlierDetectionArgs and VirtualNodeSpecListenerOutlierDetectionOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerOutlierDetectionInput` via:
//
//          VirtualNodeSpecListenerOutlierDetectionArgs{...}
type VirtualNodeSpecListenerOutlierDetectionInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerOutlierDetectionOutput() VirtualNodeSpecListenerOutlierDetectionOutput
	ToVirtualNodeSpecListenerOutlierDetectionOutputWithContext(context.Context) VirtualNodeSpecListenerOutlierDetectionOutput
}

type VirtualNodeSpecListenerOutlierDetectionArgs struct {
	// The base amount of time for which a host is ejected.
	BaseEjectionDuration VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput `pulumi:"baseEjectionDuration"`
	// The time interval between ejection sweep analysis.
	Interval VirtualNodeSpecListenerOutlierDetectionIntervalInput `pulumi:"interval"`
	// Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
	// Minimum value of `0`. Maximum value of `100`.
	MaxEjectionPercent pulumi.IntInput `pulumi:"maxEjectionPercent"`
	// Number of consecutive `5xx` errors required for ejection. Minimum value of `1`.
	MaxServerErrors pulumi.IntInput `pulumi:"maxServerErrors"`
}

func (VirtualNodeSpecListenerOutlierDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetection)(nil)).Elem()
}

func (i VirtualNodeSpecListenerOutlierDetectionArgs) ToVirtualNodeSpecListenerOutlierDetectionOutput() VirtualNodeSpecListenerOutlierDetectionOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerOutlierDetectionArgs) ToVirtualNodeSpecListenerOutlierDetectionOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionOutput)
}

func (i VirtualNodeSpecListenerOutlierDetectionArgs) ToVirtualNodeSpecListenerOutlierDetectionPtrOutput() VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerOutlierDetectionArgs) ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionOutput).ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerOutlierDetectionPtrInput is an input type that accepts VirtualNodeSpecListenerOutlierDetectionArgs, VirtualNodeSpecListenerOutlierDetectionPtr and VirtualNodeSpecListenerOutlierDetectionPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerOutlierDetectionPtrInput` via:
//
//          VirtualNodeSpecListenerOutlierDetectionArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerOutlierDetectionPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerOutlierDetectionPtrOutput() VirtualNodeSpecListenerOutlierDetectionPtrOutput
	ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(context.Context) VirtualNodeSpecListenerOutlierDetectionPtrOutput
}

type virtualNodeSpecListenerOutlierDetectionPtrType VirtualNodeSpecListenerOutlierDetectionArgs

func VirtualNodeSpecListenerOutlierDetectionPtr(v *VirtualNodeSpecListenerOutlierDetectionArgs) VirtualNodeSpecListenerOutlierDetectionPtrInput {
	return (*virtualNodeSpecListenerOutlierDetectionPtrType)(v)
}

func (*virtualNodeSpecListenerOutlierDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerOutlierDetection)(nil)).Elem()
}

func (i *virtualNodeSpecListenerOutlierDetectionPtrType) ToVirtualNodeSpecListenerOutlierDetectionPtrOutput() VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerOutlierDetectionPtrType) ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionPtrOutput)
}

type VirtualNodeSpecListenerOutlierDetectionOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerOutlierDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetection)(nil)).Elem()
}

func (o VirtualNodeSpecListenerOutlierDetectionOutput) ToVirtualNodeSpecListenerOutlierDetectionOutput() VirtualNodeSpecListenerOutlierDetectionOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionOutput) ToVirtualNodeSpecListenerOutlierDetectionOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionOutput) ToVirtualNodeSpecListenerOutlierDetectionPtrOutput() VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return o.ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerOutlierDetectionOutput) ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerOutlierDetection) *VirtualNodeSpecListenerOutlierDetection {
		return &v
	}).(VirtualNodeSpecListenerOutlierDetectionPtrOutput)
}

// The base amount of time for which a host is ejected.
func (o VirtualNodeSpecListenerOutlierDetectionOutput) BaseEjectionDuration() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetection) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration {
		return v.BaseEjectionDuration
	}).(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput)
}

// The time interval between ejection sweep analysis.
func (o VirtualNodeSpecListenerOutlierDetectionOutput) Interval() VirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetection) VirtualNodeSpecListenerOutlierDetectionInterval {
		return v.Interval
	}).(VirtualNodeSpecListenerOutlierDetectionIntervalOutput)
}

// Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
// Minimum value of `0`. Maximum value of `100`.
func (o VirtualNodeSpecListenerOutlierDetectionOutput) MaxEjectionPercent() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetection) int { return v.MaxEjectionPercent }).(pulumi.IntOutput)
}

// Number of consecutive `5xx` errors required for ejection. Minimum value of `1`.
func (o VirtualNodeSpecListenerOutlierDetectionOutput) MaxServerErrors() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetection) int { return v.MaxServerErrors }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerOutlierDetectionPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerOutlierDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerOutlierDetection)(nil)).Elem()
}

func (o VirtualNodeSpecListenerOutlierDetectionPtrOutput) ToVirtualNodeSpecListenerOutlierDetectionPtrOutput() VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionPtrOutput) ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionPtrOutput) Elem() VirtualNodeSpecListenerOutlierDetectionOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetection) VirtualNodeSpecListenerOutlierDetection {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerOutlierDetection
		return ret
	}).(VirtualNodeSpecListenerOutlierDetectionOutput)
}

// The base amount of time for which a host is ejected.
func (o VirtualNodeSpecListenerOutlierDetectionPtrOutput) BaseEjectionDuration() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetection) *VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration {
		if v == nil {
			return nil
		}
		return &v.BaseEjectionDuration
	}).(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput)
}

// The time interval between ejection sweep analysis.
func (o VirtualNodeSpecListenerOutlierDetectionPtrOutput) Interval() VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetection) *VirtualNodeSpecListenerOutlierDetectionInterval {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput)
}

// Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
// Minimum value of `0`. Maximum value of `100`.
func (o VirtualNodeSpecListenerOutlierDetectionPtrOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return &v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Number of consecutive `5xx` errors required for ejection. Minimum value of `1`.
func (o VirtualNodeSpecListenerOutlierDetectionPtrOutput) MaxServerErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return &v.MaxServerErrors
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput is an input type that accepts VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs and VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput` via:
//
//          VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs{...}
type VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput
	ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutputWithContext(context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput
}

type VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration)(nil)).Elem()
}

func (i VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput)
}

func (i VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput).ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrInput is an input type that accepts VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs, VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtr and VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrInput` via:
//
//          VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput
	ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput
}

type virtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrType VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs

func VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtr(v *VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrInput {
	return (*virtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrType)(v)
}

func (*virtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration)(nil)).Elem()
}

func (i *virtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrType) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrType) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput)
}

type VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration)(nil)).Elem()
}

func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return o.ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration) *VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration {
		return &v
	}).(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration)(nil)).Elem()
}

func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput) Elem() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration
		return ret
	}).(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerOutlierDetectionInterval struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerOutlierDetectionIntervalInput is an input type that accepts VirtualNodeSpecListenerOutlierDetectionIntervalArgs and VirtualNodeSpecListenerOutlierDetectionIntervalOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerOutlierDetectionIntervalInput` via:
//
//          VirtualNodeSpecListenerOutlierDetectionIntervalArgs{...}
type VirtualNodeSpecListenerOutlierDetectionIntervalInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerOutlierDetectionIntervalOutput() VirtualNodeSpecListenerOutlierDetectionIntervalOutput
	ToVirtualNodeSpecListenerOutlierDetectionIntervalOutputWithContext(context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalOutput
}

type VirtualNodeSpecListenerOutlierDetectionIntervalArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerOutlierDetectionIntervalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionInterval)(nil)).Elem()
}

func (i VirtualNodeSpecListenerOutlierDetectionIntervalArgs) ToVirtualNodeSpecListenerOutlierDetectionIntervalOutput() VirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionIntervalOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerOutlierDetectionIntervalArgs) ToVirtualNodeSpecListenerOutlierDetectionIntervalOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionIntervalOutput)
}

func (i VirtualNodeSpecListenerOutlierDetectionIntervalArgs) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput() VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerOutlierDetectionIntervalArgs) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionIntervalOutput).ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerOutlierDetectionIntervalPtrInput is an input type that accepts VirtualNodeSpecListenerOutlierDetectionIntervalArgs, VirtualNodeSpecListenerOutlierDetectionIntervalPtr and VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerOutlierDetectionIntervalPtrInput` via:
//
//          VirtualNodeSpecListenerOutlierDetectionIntervalArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerOutlierDetectionIntervalPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput() VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput
	ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput
}

type virtualNodeSpecListenerOutlierDetectionIntervalPtrType VirtualNodeSpecListenerOutlierDetectionIntervalArgs

func VirtualNodeSpecListenerOutlierDetectionIntervalPtr(v *VirtualNodeSpecListenerOutlierDetectionIntervalArgs) VirtualNodeSpecListenerOutlierDetectionIntervalPtrInput {
	return (*virtualNodeSpecListenerOutlierDetectionIntervalPtrType)(v)
}

func (*virtualNodeSpecListenerOutlierDetectionIntervalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerOutlierDetectionInterval)(nil)).Elem()
}

func (i *virtualNodeSpecListenerOutlierDetectionIntervalPtrType) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput() VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerOutlierDetectionIntervalPtrType) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput)
}

type VirtualNodeSpecListenerOutlierDetectionIntervalOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerOutlierDetectionIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionInterval)(nil)).Elem()
}

func (o VirtualNodeSpecListenerOutlierDetectionIntervalOutput) ToVirtualNodeSpecListenerOutlierDetectionIntervalOutput() VirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionIntervalOutput) ToVirtualNodeSpecListenerOutlierDetectionIntervalOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionIntervalOutput) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput() VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return o.ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerOutlierDetectionIntervalOutput) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerOutlierDetectionInterval) *VirtualNodeSpecListenerOutlierDetectionInterval {
		return &v
	}).(VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerOutlierDetectionIntervalOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetectionInterval) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerOutlierDetectionIntervalOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetectionInterval) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerOutlierDetectionInterval)(nil)).Elem()
}

func (o VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput() VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput) Elem() VirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetectionInterval) VirtualNodeSpecListenerOutlierDetectionInterval {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerOutlierDetectionInterval
		return ret
	}).(VirtualNodeSpecListenerOutlierDetectionIntervalOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetectionInterval) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetectionInterval) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerPortMapping struct {
	// The port used for the port mapping.
	Port int `pulumi:"port"`
	// The protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
	Protocol string `pulumi:"protocol"`
}

// VirtualNodeSpecListenerPortMappingInput is an input type that accepts VirtualNodeSpecListenerPortMappingArgs and VirtualNodeSpecListenerPortMappingOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerPortMappingInput` via:
//
//          VirtualNodeSpecListenerPortMappingArgs{...}
type VirtualNodeSpecListenerPortMappingInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerPortMappingOutput() VirtualNodeSpecListenerPortMappingOutput
	ToVirtualNodeSpecListenerPortMappingOutputWithContext(context.Context) VirtualNodeSpecListenerPortMappingOutput
}

type VirtualNodeSpecListenerPortMappingArgs struct {
	// The port used for the port mapping.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (VirtualNodeSpecListenerPortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerPortMapping)(nil)).Elem()
}

func (i VirtualNodeSpecListenerPortMappingArgs) ToVirtualNodeSpecListenerPortMappingOutput() VirtualNodeSpecListenerPortMappingOutput {
	return i.ToVirtualNodeSpecListenerPortMappingOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerPortMappingArgs) ToVirtualNodeSpecListenerPortMappingOutputWithContext(ctx context.Context) VirtualNodeSpecListenerPortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerPortMappingOutput)
}

func (i VirtualNodeSpecListenerPortMappingArgs) ToVirtualNodeSpecListenerPortMappingPtrOutput() VirtualNodeSpecListenerPortMappingPtrOutput {
	return i.ToVirtualNodeSpecListenerPortMappingPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerPortMappingArgs) ToVirtualNodeSpecListenerPortMappingPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerPortMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerPortMappingOutput).ToVirtualNodeSpecListenerPortMappingPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerPortMappingPtrInput is an input type that accepts VirtualNodeSpecListenerPortMappingArgs, VirtualNodeSpecListenerPortMappingPtr and VirtualNodeSpecListenerPortMappingPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerPortMappingPtrInput` via:
//
//          VirtualNodeSpecListenerPortMappingArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerPortMappingPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerPortMappingPtrOutput() VirtualNodeSpecListenerPortMappingPtrOutput
	ToVirtualNodeSpecListenerPortMappingPtrOutputWithContext(context.Context) VirtualNodeSpecListenerPortMappingPtrOutput
}

type virtualNodeSpecListenerPortMappingPtrType VirtualNodeSpecListenerPortMappingArgs

func VirtualNodeSpecListenerPortMappingPtr(v *VirtualNodeSpecListenerPortMappingArgs) VirtualNodeSpecListenerPortMappingPtrInput {
	return (*virtualNodeSpecListenerPortMappingPtrType)(v)
}

func (*virtualNodeSpecListenerPortMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerPortMapping)(nil)).Elem()
}

func (i *virtualNodeSpecListenerPortMappingPtrType) ToVirtualNodeSpecListenerPortMappingPtrOutput() VirtualNodeSpecListenerPortMappingPtrOutput {
	return i.ToVirtualNodeSpecListenerPortMappingPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerPortMappingPtrType) ToVirtualNodeSpecListenerPortMappingPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerPortMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerPortMappingPtrOutput)
}

type VirtualNodeSpecListenerPortMappingOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerPortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerPortMapping)(nil)).Elem()
}

func (o VirtualNodeSpecListenerPortMappingOutput) ToVirtualNodeSpecListenerPortMappingOutput() VirtualNodeSpecListenerPortMappingOutput {
	return o
}

func (o VirtualNodeSpecListenerPortMappingOutput) ToVirtualNodeSpecListenerPortMappingOutputWithContext(ctx context.Context) VirtualNodeSpecListenerPortMappingOutput {
	return o
}

func (o VirtualNodeSpecListenerPortMappingOutput) ToVirtualNodeSpecListenerPortMappingPtrOutput() VirtualNodeSpecListenerPortMappingPtrOutput {
	return o.ToVirtualNodeSpecListenerPortMappingPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerPortMappingOutput) ToVirtualNodeSpecListenerPortMappingPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerPortMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerPortMapping) *VirtualNodeSpecListenerPortMapping {
		return &v
	}).(VirtualNodeSpecListenerPortMappingPtrOutput)
}

// The port used for the port mapping.
func (o VirtualNodeSpecListenerPortMappingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerPortMapping) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
func (o VirtualNodeSpecListenerPortMappingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerPortMapping) string { return v.Protocol }).(pulumi.StringOutput)
}

type VirtualNodeSpecListenerPortMappingPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerPortMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerPortMapping)(nil)).Elem()
}

func (o VirtualNodeSpecListenerPortMappingPtrOutput) ToVirtualNodeSpecListenerPortMappingPtrOutput() VirtualNodeSpecListenerPortMappingPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerPortMappingPtrOutput) ToVirtualNodeSpecListenerPortMappingPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerPortMappingPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerPortMappingPtrOutput) Elem() VirtualNodeSpecListenerPortMappingOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerPortMapping) VirtualNodeSpecListenerPortMapping {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerPortMapping
		return ret
	}).(VirtualNodeSpecListenerPortMappingOutput)
}

// The port used for the port mapping.
func (o VirtualNodeSpecListenerPortMappingPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerPortMapping) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
func (o VirtualNodeSpecListenerPortMappingPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerPortMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecListenerTimeout struct {
	// Timeouts for gRPC listeners.
	Grpc *VirtualNodeSpecListenerTimeoutGrpc `pulumi:"grpc"`
	// Timeouts for HTTP listeners.
	Http *VirtualNodeSpecListenerTimeoutHttp `pulumi:"http"`
	// Timeouts for HTTP2 listeners.
	Http2 *VirtualNodeSpecListenerTimeoutHttp2 `pulumi:"http2"`
	// Timeouts for TCP listeners.
	Tcp *VirtualNodeSpecListenerTimeoutTcp `pulumi:"tcp"`
}

// VirtualNodeSpecListenerTimeoutInput is an input type that accepts VirtualNodeSpecListenerTimeoutArgs and VirtualNodeSpecListenerTimeoutOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutInput` via:
//
//          VirtualNodeSpecListenerTimeoutArgs{...}
type VirtualNodeSpecListenerTimeoutInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutOutput() VirtualNodeSpecListenerTimeoutOutput
	ToVirtualNodeSpecListenerTimeoutOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutOutput
}

type VirtualNodeSpecListenerTimeoutArgs struct {
	// Timeouts for gRPC listeners.
	Grpc VirtualNodeSpecListenerTimeoutGrpcPtrInput `pulumi:"grpc"`
	// Timeouts for HTTP listeners.
	Http VirtualNodeSpecListenerTimeoutHttpPtrInput `pulumi:"http"`
	// Timeouts for HTTP2 listeners.
	Http2 VirtualNodeSpecListenerTimeoutHttp2PtrInput `pulumi:"http2"`
	// Timeouts for TCP listeners.
	Tcp VirtualNodeSpecListenerTimeoutTcpPtrInput `pulumi:"tcp"`
}

func (VirtualNodeSpecListenerTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeout)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutArgs) ToVirtualNodeSpecListenerTimeoutOutput() VirtualNodeSpecListenerTimeoutOutput {
	return i.ToVirtualNodeSpecListenerTimeoutOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutArgs) ToVirtualNodeSpecListenerTimeoutOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutOutput)
}

func (i VirtualNodeSpecListenerTimeoutArgs) ToVirtualNodeSpecListenerTimeoutPtrOutput() VirtualNodeSpecListenerTimeoutPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutArgs) ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutOutput).ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutPtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutArgs, VirtualNodeSpecListenerTimeoutPtr and VirtualNodeSpecListenerTimeoutPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutPtrInput` via:
//
//          VirtualNodeSpecListenerTimeoutArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTimeoutPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutPtrOutput() VirtualNodeSpecListenerTimeoutPtrOutput
	ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutPtrOutput
}

type virtualNodeSpecListenerTimeoutPtrType VirtualNodeSpecListenerTimeoutArgs

func VirtualNodeSpecListenerTimeoutPtr(v *VirtualNodeSpecListenerTimeoutArgs) VirtualNodeSpecListenerTimeoutPtrInput {
	return (*virtualNodeSpecListenerTimeoutPtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeout)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutPtrType) ToVirtualNodeSpecListenerTimeoutPtrOutput() VirtualNodeSpecListenerTimeoutPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutPtrType) ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutPtrOutput)
}

type VirtualNodeSpecListenerTimeoutOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeout)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutOutput) ToVirtualNodeSpecListenerTimeoutOutput() VirtualNodeSpecListenerTimeoutOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutOutput) ToVirtualNodeSpecListenerTimeoutOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutOutput) ToVirtualNodeSpecListenerTimeoutPtrOutput() VirtualNodeSpecListenerTimeoutPtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutOutput) ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeout {
		return &v
	}).(VirtualNodeSpecListenerTimeoutPtrOutput)
}

// Timeouts for gRPC listeners.
func (o VirtualNodeSpecListenerTimeoutOutput) Grpc() VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutGrpc { return v.Grpc }).(VirtualNodeSpecListenerTimeoutGrpcPtrOutput)
}

// Timeouts for HTTP listeners.
func (o VirtualNodeSpecListenerTimeoutOutput) Http() VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutHttp { return v.Http }).(VirtualNodeSpecListenerTimeoutHttpPtrOutput)
}

// Timeouts for HTTP2 listeners.
func (o VirtualNodeSpecListenerTimeoutOutput) Http2() VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutHttp2 { return v.Http2 }).(VirtualNodeSpecListenerTimeoutHttp2PtrOutput)
}

// Timeouts for TCP listeners.
func (o VirtualNodeSpecListenerTimeoutOutput) Tcp() VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutTcp { return v.Tcp }).(VirtualNodeSpecListenerTimeoutTcpPtrOutput)
}

type VirtualNodeSpecListenerTimeoutPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeout)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutPtrOutput) ToVirtualNodeSpecListenerTimeoutPtrOutput() VirtualNodeSpecListenerTimeoutPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutPtrOutput) ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutPtrOutput) Elem() VirtualNodeSpecListenerTimeoutOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeout) VirtualNodeSpecListenerTimeout {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeout
		return ret
	}).(VirtualNodeSpecListenerTimeoutOutput)
}

// Timeouts for gRPC listeners.
func (o VirtualNodeSpecListenerTimeoutPtrOutput) Grpc() VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(VirtualNodeSpecListenerTimeoutGrpcPtrOutput)
}

// Timeouts for HTTP listeners.
func (o VirtualNodeSpecListenerTimeoutPtrOutput) Http() VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(VirtualNodeSpecListenerTimeoutHttpPtrOutput)
}

// Timeouts for HTTP2 listeners.
func (o VirtualNodeSpecListenerTimeoutPtrOutput) Http2() VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutHttp2 {
		if v == nil {
			return nil
		}
		return v.Http2
	}).(VirtualNodeSpecListenerTimeoutHttp2PtrOutput)
}

// Timeouts for TCP listeners.
func (o VirtualNodeSpecListenerTimeoutPtrOutput) Tcp() VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(VirtualNodeSpecListenerTimeoutTcpPtrOutput)
}

type VirtualNodeSpecListenerTimeoutGrpc struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *VirtualNodeSpecListenerTimeoutGrpcIdle `pulumi:"idle"`
	// The per request timeout.
	PerRequest *VirtualNodeSpecListenerTimeoutGrpcPerRequest `pulumi:"perRequest"`
}

// VirtualNodeSpecListenerTimeoutGrpcInput is an input type that accepts VirtualNodeSpecListenerTimeoutGrpcArgs and VirtualNodeSpecListenerTimeoutGrpcOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutGrpcInput` via:
//
//          VirtualNodeSpecListenerTimeoutGrpcArgs{...}
type VirtualNodeSpecListenerTimeoutGrpcInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutGrpcOutput() VirtualNodeSpecListenerTimeoutGrpcOutput
	ToVirtualNodeSpecListenerTimeoutGrpcOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutGrpcOutput
}

type VirtualNodeSpecListenerTimeoutGrpcArgs struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle VirtualNodeSpecListenerTimeoutGrpcIdlePtrInput `pulumi:"idle"`
	// The per request timeout.
	PerRequest VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrInput `pulumi:"perRequest"`
}

func (VirtualNodeSpecListenerTimeoutGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpc)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutGrpcArgs) ToVirtualNodeSpecListenerTimeoutGrpcOutput() VirtualNodeSpecListenerTimeoutGrpcOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutGrpcArgs) ToVirtualNodeSpecListenerTimeoutGrpcOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcOutput)
}

func (i VirtualNodeSpecListenerTimeoutGrpcArgs) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutGrpcArgs) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcOutput).ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutGrpcPtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutGrpcArgs, VirtualNodeSpecListenerTimeoutGrpcPtr and VirtualNodeSpecListenerTimeoutGrpcPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutGrpcPtrInput` via:
//
//          VirtualNodeSpecListenerTimeoutGrpcArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTimeoutGrpcPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutGrpcPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPtrOutput
	ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutGrpcPtrOutput
}

type virtualNodeSpecListenerTimeoutGrpcPtrType VirtualNodeSpecListenerTimeoutGrpcArgs

func VirtualNodeSpecListenerTimeoutGrpcPtr(v *VirtualNodeSpecListenerTimeoutGrpcArgs) VirtualNodeSpecListenerTimeoutGrpcPtrInput {
	return (*virtualNodeSpecListenerTimeoutGrpcPtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutGrpc)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutGrpcPtrType) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutGrpcPtrType) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcPtrOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpc)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutGrpcOutput) ToVirtualNodeSpecListenerTimeoutGrpcOutput() VirtualNodeSpecListenerTimeoutGrpcOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcOutput) ToVirtualNodeSpecListenerTimeoutGrpcOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcOutput) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutGrpcOutput) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutGrpc) *VirtualNodeSpecListenerTimeoutGrpc {
		return &v
	}).(VirtualNodeSpecListenerTimeoutGrpcPtrOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutGrpcOutput) Idle() VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutGrpc) *VirtualNodeSpecListenerTimeoutGrpcIdle { return v.Idle }).(VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput)
}

// The per request timeout.
func (o VirtualNodeSpecListenerTimeoutGrpcOutput) PerRequest() VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutGrpc) *VirtualNodeSpecListenerTimeoutGrpcPerRequest {
		return v.PerRequest
	}).(VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutGrpc)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutGrpcPtrOutput) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcPtrOutput) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcPtrOutput) Elem() VirtualNodeSpecListenerTimeoutGrpcOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpc) VirtualNodeSpecListenerTimeoutGrpc {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutGrpc
		return ret
	}).(VirtualNodeSpecListenerTimeoutGrpcOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutGrpcPtrOutput) Idle() VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpc) *VirtualNodeSpecListenerTimeoutGrpcIdle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput)
}

// The per request timeout.
func (o VirtualNodeSpecListenerTimeoutGrpcPtrOutput) PerRequest() VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpc) *VirtualNodeSpecListenerTimeoutGrpcPerRequest {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcIdle struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerTimeoutGrpcIdleInput is an input type that accepts VirtualNodeSpecListenerTimeoutGrpcIdleArgs and VirtualNodeSpecListenerTimeoutGrpcIdleOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutGrpcIdleInput` via:
//
//          VirtualNodeSpecListenerTimeoutGrpcIdleArgs{...}
type VirtualNodeSpecListenerTimeoutGrpcIdleInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutGrpcIdleOutput() VirtualNodeSpecListenerTimeoutGrpcIdleOutput
	ToVirtualNodeSpecListenerTimeoutGrpcIdleOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutGrpcIdleOutput
}

type VirtualNodeSpecListenerTimeoutGrpcIdleArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerTimeoutGrpcIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcIdle)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutGrpcIdleArgs) ToVirtualNodeSpecListenerTimeoutGrpcIdleOutput() VirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcIdleOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutGrpcIdleArgs) ToVirtualNodeSpecListenerTimeoutGrpcIdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcIdleOutput)
}

func (i VirtualNodeSpecListenerTimeoutGrpcIdleArgs) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput() VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutGrpcIdleArgs) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcIdleOutput).ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutGrpcIdlePtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutGrpcIdleArgs, VirtualNodeSpecListenerTimeoutGrpcIdlePtr and VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutGrpcIdlePtrInput` via:
//
//          VirtualNodeSpecListenerTimeoutGrpcIdleArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTimeoutGrpcIdlePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput() VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput
	ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput
}

type virtualNodeSpecListenerTimeoutGrpcIdlePtrType VirtualNodeSpecListenerTimeoutGrpcIdleArgs

func VirtualNodeSpecListenerTimeoutGrpcIdlePtr(v *VirtualNodeSpecListenerTimeoutGrpcIdleArgs) VirtualNodeSpecListenerTimeoutGrpcIdlePtrInput {
	return (*virtualNodeSpecListenerTimeoutGrpcIdlePtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutGrpcIdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutGrpcIdle)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutGrpcIdlePtrType) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput() VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutGrpcIdlePtrType) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcIdleOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutGrpcIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcIdle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutGrpcIdleOutput) ToVirtualNodeSpecListenerTimeoutGrpcIdleOutput() VirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcIdleOutput) ToVirtualNodeSpecListenerTimeoutGrpcIdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcIdleOutput) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput() VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutGrpcIdleOutput) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutGrpcIdle) *VirtualNodeSpecListenerTimeoutGrpcIdle {
		return &v
	}).(VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutGrpcIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutGrpcIdle) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutGrpcIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutGrpcIdle) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutGrpcIdle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput() VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput) Elem() VirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpcIdle) VirtualNodeSpecListenerTimeoutGrpcIdle {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutGrpcIdle
		return ret
	}).(VirtualNodeSpecListenerTimeoutGrpcIdleOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpcIdle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpcIdle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcPerRequest struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerTimeoutGrpcPerRequestInput is an input type that accepts VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs and VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutGrpcPerRequestInput` via:
//
//          VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs{...}
type VirtualNodeSpecListenerTimeoutGrpcPerRequestInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput
	ToVirtualNodeSpecListenerTimeoutGrpcPerRequestOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput
}

type VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcPerRequest)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcPerRequestOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput)
}

func (i VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput).ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs, VirtualNodeSpecListenerTimeoutGrpcPerRequestPtr and VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrInput` via:
//
//          VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput
	ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput
}

type virtualNodeSpecListenerTimeoutGrpcPerRequestPtrType VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs

func VirtualNodeSpecListenerTimeoutGrpcPerRequestPtr(v *VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrInput {
	return (*virtualNodeSpecListenerTimeoutGrpcPerRequestPtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutGrpcPerRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutGrpcPerRequest)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutGrpcPerRequestPtrType) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutGrpcPerRequestPtrType) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcPerRequest)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutGrpcPerRequest) *VirtualNodeSpecListenerTimeoutGrpcPerRequest {
		return &v
	}).(VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutGrpcPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutGrpcPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutGrpcPerRequest)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput) Elem() VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpcPerRequest) VirtualNodeSpecListenerTimeoutGrpcPerRequest {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutGrpcPerRequest
		return ret
	}).(VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpcPerRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpcPerRequest) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2 struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *VirtualNodeSpecListenerTimeoutHttp2Idle `pulumi:"idle"`
	// The per request timeout.
	PerRequest *VirtualNodeSpecListenerTimeoutHttp2PerRequest `pulumi:"perRequest"`
}

// VirtualNodeSpecListenerTimeoutHttp2Input is an input type that accepts VirtualNodeSpecListenerTimeoutHttp2Args and VirtualNodeSpecListenerTimeoutHttp2Output values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttp2Input` via:
//
//          VirtualNodeSpecListenerTimeoutHttp2Args{...}
type VirtualNodeSpecListenerTimeoutHttp2Input interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttp2Output() VirtualNodeSpecListenerTimeoutHttp2Output
	ToVirtualNodeSpecListenerTimeoutHttp2OutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttp2Output
}

type VirtualNodeSpecListenerTimeoutHttp2Args struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle VirtualNodeSpecListenerTimeoutHttp2IdlePtrInput `pulumi:"idle"`
	// The per request timeout.
	PerRequest VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrInput `pulumi:"perRequest"`
}

func (VirtualNodeSpecListenerTimeoutHttp2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutHttp2Args) ToVirtualNodeSpecListenerTimeoutHttp2Output() VirtualNodeSpecListenerTimeoutHttp2Output {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2OutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttp2Args) ToVirtualNodeSpecListenerTimeoutHttp2OutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2Output)
}

func (i VirtualNodeSpecListenerTimeoutHttp2Args) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutput() VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttp2Args) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2Output).ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutHttp2PtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttp2Args, VirtualNodeSpecListenerTimeoutHttp2Ptr and VirtualNodeSpecListenerTimeoutHttp2PtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttp2PtrInput` via:
//
//          VirtualNodeSpecListenerTimeoutHttp2Args{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTimeoutHttp2PtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttp2PtrOutput() VirtualNodeSpecListenerTimeoutHttp2PtrOutput
	ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttp2PtrOutput
}

type virtualNodeSpecListenerTimeoutHttp2PtrType VirtualNodeSpecListenerTimeoutHttp2Args

func VirtualNodeSpecListenerTimeoutHttp2Ptr(v *VirtualNodeSpecListenerTimeoutHttp2Args) VirtualNodeSpecListenerTimeoutHttp2PtrInput {
	return (*virtualNodeSpecListenerTimeoutHttp2PtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutHttp2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp2)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutHttp2PtrType) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutput() VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutHttp2PtrType) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2PtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2Output struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttp2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttp2Output) ToVirtualNodeSpecListenerTimeoutHttp2Output() VirtualNodeSpecListenerTimeoutHttp2Output {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2Output) ToVirtualNodeSpecListenerTimeoutHttp2OutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2Output {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2Output) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutput() VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutHttp2Output) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutHttp2) *VirtualNodeSpecListenerTimeoutHttp2 {
		return &v
	}).(VirtualNodeSpecListenerTimeoutHttp2PtrOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutHttp2Output) Idle() VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp2) *VirtualNodeSpecListenerTimeoutHttp2Idle { return v.Idle }).(VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput)
}

// The per request timeout.
func (o VirtualNodeSpecListenerTimeoutHttp2Output) PerRequest() VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp2) *VirtualNodeSpecListenerTimeoutHttp2PerRequest {
		return v.PerRequest
	}).(VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2PtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttp2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp2)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttp2PtrOutput) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutput() VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2PtrOutput) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2PtrOutput) Elem() VirtualNodeSpecListenerTimeoutHttp2Output {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2) VirtualNodeSpecListenerTimeoutHttp2 {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutHttp2
		return ret
	}).(VirtualNodeSpecListenerTimeoutHttp2Output)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutHttp2PtrOutput) Idle() VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2) *VirtualNodeSpecListenerTimeoutHttp2Idle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput)
}

// The per request timeout.
func (o VirtualNodeSpecListenerTimeoutHttp2PtrOutput) PerRequest() VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2) *VirtualNodeSpecListenerTimeoutHttp2PerRequest {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2Idle struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerTimeoutHttp2IdleInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttp2IdleArgs and VirtualNodeSpecListenerTimeoutHttp2IdleOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttp2IdleInput` via:
//
//          VirtualNodeSpecListenerTimeoutHttp2IdleArgs{...}
type VirtualNodeSpecListenerTimeoutHttp2IdleInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttp2IdleOutput() VirtualNodeSpecListenerTimeoutHttp2IdleOutput
	ToVirtualNodeSpecListenerTimeoutHttp2IdleOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttp2IdleOutput
}

type VirtualNodeSpecListenerTimeoutHttp2IdleArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerTimeoutHttp2IdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2Idle)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutHttp2IdleArgs) ToVirtualNodeSpecListenerTimeoutHttp2IdleOutput() VirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2IdleOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttp2IdleArgs) ToVirtualNodeSpecListenerTimeoutHttp2IdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2IdleOutput)
}

func (i VirtualNodeSpecListenerTimeoutHttp2IdleArgs) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput() VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttp2IdleArgs) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2IdleOutput).ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutHttp2IdlePtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttp2IdleArgs, VirtualNodeSpecListenerTimeoutHttp2IdlePtr and VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttp2IdlePtrInput` via:
//
//          VirtualNodeSpecListenerTimeoutHttp2IdleArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTimeoutHttp2IdlePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput() VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput
	ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput
}

type virtualNodeSpecListenerTimeoutHttp2IdlePtrType VirtualNodeSpecListenerTimeoutHttp2IdleArgs

func VirtualNodeSpecListenerTimeoutHttp2IdlePtr(v *VirtualNodeSpecListenerTimeoutHttp2IdleArgs) VirtualNodeSpecListenerTimeoutHttp2IdlePtrInput {
	return (*virtualNodeSpecListenerTimeoutHttp2IdlePtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutHttp2IdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp2Idle)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutHttp2IdlePtrType) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput() VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutHttp2IdlePtrType) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2IdleOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttp2IdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2Idle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttp2IdleOutput) ToVirtualNodeSpecListenerTimeoutHttp2IdleOutput() VirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2IdleOutput) ToVirtualNodeSpecListenerTimeoutHttp2IdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2IdleOutput) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput() VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutHttp2IdleOutput) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutHttp2Idle) *VirtualNodeSpecListenerTimeoutHttp2Idle {
		return &v
	}).(VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttp2IdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp2Idle) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutHttp2IdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp2Idle) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp2Idle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput() VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput) Elem() VirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2Idle) VirtualNodeSpecListenerTimeoutHttp2Idle {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutHttp2Idle
		return ret
	}).(VirtualNodeSpecListenerTimeoutHttp2IdleOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2Idle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2Idle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2PerRequest struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerTimeoutHttp2PerRequestInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs and VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttp2PerRequestInput` via:
//
//          VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs{...}
type VirtualNodeSpecListenerTimeoutHttp2PerRequestInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput
	ToVirtualNodeSpecListenerTimeoutHttp2PerRequestOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput
}

type VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2PerRequest)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2PerRequestOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput)
}

func (i VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput).ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs, VirtualNodeSpecListenerTimeoutHttp2PerRequestPtr and VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrInput` via:
//
//          VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput
	ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput
}

type virtualNodeSpecListenerTimeoutHttp2PerRequestPtrType VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs

func VirtualNodeSpecListenerTimeoutHttp2PerRequestPtr(v *VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrInput {
	return (*virtualNodeSpecListenerTimeoutHttp2PerRequestPtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutHttp2PerRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp2PerRequest)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutHttp2PerRequestPtrType) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutHttp2PerRequestPtrType) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2PerRequest)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutHttp2PerRequest) *VirtualNodeSpecListenerTimeoutHttp2PerRequest {
		return &v
	}).(VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp2PerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp2PerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp2PerRequest)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput) Elem() VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2PerRequest) VirtualNodeSpecListenerTimeoutHttp2PerRequest {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutHttp2PerRequest
		return ret
	}).(VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2PerRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2PerRequest) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *VirtualNodeSpecListenerTimeoutHttpIdle `pulumi:"idle"`
	// The per request timeout.
	PerRequest *VirtualNodeSpecListenerTimeoutHttpPerRequest `pulumi:"perRequest"`
}

// VirtualNodeSpecListenerTimeoutHttpInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttpArgs and VirtualNodeSpecListenerTimeoutHttpOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttpInput` via:
//
//          VirtualNodeSpecListenerTimeoutHttpArgs{...}
type VirtualNodeSpecListenerTimeoutHttpInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttpOutput() VirtualNodeSpecListenerTimeoutHttpOutput
	ToVirtualNodeSpecListenerTimeoutHttpOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttpOutput
}

type VirtualNodeSpecListenerTimeoutHttpArgs struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle VirtualNodeSpecListenerTimeoutHttpIdlePtrInput `pulumi:"idle"`
	// The per request timeout.
	PerRequest VirtualNodeSpecListenerTimeoutHttpPerRequestPtrInput `pulumi:"perRequest"`
}

func (VirtualNodeSpecListenerTimeoutHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutHttpArgs) ToVirtualNodeSpecListenerTimeoutHttpOutput() VirtualNodeSpecListenerTimeoutHttpOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttpArgs) ToVirtualNodeSpecListenerTimeoutHttpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpOutput)
}

func (i VirtualNodeSpecListenerTimeoutHttpArgs) ToVirtualNodeSpecListenerTimeoutHttpPtrOutput() VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttpArgs) ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpOutput).ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutHttpPtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttpArgs, VirtualNodeSpecListenerTimeoutHttpPtr and VirtualNodeSpecListenerTimeoutHttpPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttpPtrInput` via:
//
//          VirtualNodeSpecListenerTimeoutHttpArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTimeoutHttpPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttpPtrOutput() VirtualNodeSpecListenerTimeoutHttpPtrOutput
	ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttpPtrOutput
}

type virtualNodeSpecListenerTimeoutHttpPtrType VirtualNodeSpecListenerTimeoutHttpArgs

func VirtualNodeSpecListenerTimeoutHttpPtr(v *VirtualNodeSpecListenerTimeoutHttpArgs) VirtualNodeSpecListenerTimeoutHttpPtrInput {
	return (*virtualNodeSpecListenerTimeoutHttpPtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutHttpPtrType) ToVirtualNodeSpecListenerTimeoutHttpPtrOutput() VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutHttpPtrType) ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttpOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttpOutput) ToVirtualNodeSpecListenerTimeoutHttpOutput() VirtualNodeSpecListenerTimeoutHttpOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpOutput) ToVirtualNodeSpecListenerTimeoutHttpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpOutput) ToVirtualNodeSpecListenerTimeoutHttpPtrOutput() VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutHttpOutput) ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutHttp) *VirtualNodeSpecListenerTimeoutHttp {
		return &v
	}).(VirtualNodeSpecListenerTimeoutHttpPtrOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutHttpOutput) Idle() VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp) *VirtualNodeSpecListenerTimeoutHttpIdle { return v.Idle }).(VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput)
}

// The per request timeout.
func (o VirtualNodeSpecListenerTimeoutHttpOutput) PerRequest() VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp) *VirtualNodeSpecListenerTimeoutHttpPerRequest {
		return v.PerRequest
	}).(VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttpPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttpPtrOutput) ToVirtualNodeSpecListenerTimeoutHttpPtrOutput() VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpPtrOutput) ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpPtrOutput) Elem() VirtualNodeSpecListenerTimeoutHttpOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp) VirtualNodeSpecListenerTimeoutHttp {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutHttp
		return ret
	}).(VirtualNodeSpecListenerTimeoutHttpOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutHttpPtrOutput) Idle() VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp) *VirtualNodeSpecListenerTimeoutHttpIdle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput)
}

// The per request timeout.
func (o VirtualNodeSpecListenerTimeoutHttpPtrOutput) PerRequest() VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp) *VirtualNodeSpecListenerTimeoutHttpPerRequest {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttpIdle struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerTimeoutHttpIdleInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttpIdleArgs and VirtualNodeSpecListenerTimeoutHttpIdleOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttpIdleInput` via:
//
//          VirtualNodeSpecListenerTimeoutHttpIdleArgs{...}
type VirtualNodeSpecListenerTimeoutHttpIdleInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttpIdleOutput() VirtualNodeSpecListenerTimeoutHttpIdleOutput
	ToVirtualNodeSpecListenerTimeoutHttpIdleOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttpIdleOutput
}

type VirtualNodeSpecListenerTimeoutHttpIdleArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerTimeoutHttpIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpIdle)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutHttpIdleArgs) ToVirtualNodeSpecListenerTimeoutHttpIdleOutput() VirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpIdleOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttpIdleArgs) ToVirtualNodeSpecListenerTimeoutHttpIdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpIdleOutput)
}

func (i VirtualNodeSpecListenerTimeoutHttpIdleArgs) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutput() VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttpIdleArgs) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpIdleOutput).ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutHttpIdlePtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttpIdleArgs, VirtualNodeSpecListenerTimeoutHttpIdlePtr and VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttpIdlePtrInput` via:
//
//          VirtualNodeSpecListenerTimeoutHttpIdleArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTimeoutHttpIdlePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutput() VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput
	ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput
}

type virtualNodeSpecListenerTimeoutHttpIdlePtrType VirtualNodeSpecListenerTimeoutHttpIdleArgs

func VirtualNodeSpecListenerTimeoutHttpIdlePtr(v *VirtualNodeSpecListenerTimeoutHttpIdleArgs) VirtualNodeSpecListenerTimeoutHttpIdlePtrInput {
	return (*virtualNodeSpecListenerTimeoutHttpIdlePtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutHttpIdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttpIdle)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutHttpIdlePtrType) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutput() VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutHttpIdlePtrType) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttpIdleOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttpIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpIdle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttpIdleOutput) ToVirtualNodeSpecListenerTimeoutHttpIdleOutput() VirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpIdleOutput) ToVirtualNodeSpecListenerTimeoutHttpIdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpIdleOutput) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutput() VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutHttpIdleOutput) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutHttpIdle) *VirtualNodeSpecListenerTimeoutHttpIdle {
		return &v
	}).(VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttpIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttpIdle) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutHttpIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttpIdle) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttpIdle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutput() VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput) Elem() VirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttpIdle) VirtualNodeSpecListenerTimeoutHttpIdle {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutHttpIdle
		return ret
	}).(VirtualNodeSpecListenerTimeoutHttpIdleOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttpIdle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttpIdle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttpPerRequest struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerTimeoutHttpPerRequestInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttpPerRequestArgs and VirtualNodeSpecListenerTimeoutHttpPerRequestOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttpPerRequestInput` via:
//
//          VirtualNodeSpecListenerTimeoutHttpPerRequestArgs{...}
type VirtualNodeSpecListenerTimeoutHttpPerRequestInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttpPerRequestOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestOutput
	ToVirtualNodeSpecListenerTimeoutHttpPerRequestOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestOutput
}

type VirtualNodeSpecListenerTimeoutHttpPerRequestArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerTimeoutHttpPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpPerRequest)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutHttpPerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttpPerRequestOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpPerRequestOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttpPerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttpPerRequestOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpPerRequestOutput)
}

func (i VirtualNodeSpecListenerTimeoutHttpPerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttpPerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpPerRequestOutput).ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutHttpPerRequestPtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttpPerRequestArgs, VirtualNodeSpecListenerTimeoutHttpPerRequestPtr and VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttpPerRequestPtrInput` via:
//
//          VirtualNodeSpecListenerTimeoutHttpPerRequestArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTimeoutHttpPerRequestPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput
	ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput
}

type virtualNodeSpecListenerTimeoutHttpPerRequestPtrType VirtualNodeSpecListenerTimeoutHttpPerRequestArgs

func VirtualNodeSpecListenerTimeoutHttpPerRequestPtr(v *VirtualNodeSpecListenerTimeoutHttpPerRequestArgs) VirtualNodeSpecListenerTimeoutHttpPerRequestPtrInput {
	return (*virtualNodeSpecListenerTimeoutHttpPerRequestPtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutHttpPerRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttpPerRequest)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutHttpPerRequestPtrType) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutHttpPerRequestPtrType) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttpPerRequestOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttpPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpPerRequest)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttpPerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttpPerRequestOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpPerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttpPerRequestOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpPerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutHttpPerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutHttpPerRequest) *VirtualNodeSpecListenerTimeoutHttpPerRequest {
		return &v
	}).(VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttpPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttpPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutHttpPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttpPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttpPerRequest)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput) Elem() VirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttpPerRequest) VirtualNodeSpecListenerTimeoutHttpPerRequest {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutHttpPerRequest
		return ret
	}).(VirtualNodeSpecListenerTimeoutHttpPerRequestOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttpPerRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttpPerRequest) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerTimeoutTcp struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *VirtualNodeSpecListenerTimeoutTcpIdle `pulumi:"idle"`
}

// VirtualNodeSpecListenerTimeoutTcpInput is an input type that accepts VirtualNodeSpecListenerTimeoutTcpArgs and VirtualNodeSpecListenerTimeoutTcpOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutTcpInput` via:
//
//          VirtualNodeSpecListenerTimeoutTcpArgs{...}
type VirtualNodeSpecListenerTimeoutTcpInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutTcpOutput() VirtualNodeSpecListenerTimeoutTcpOutput
	ToVirtualNodeSpecListenerTimeoutTcpOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutTcpOutput
}

type VirtualNodeSpecListenerTimeoutTcpArgs struct {
	// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle VirtualNodeSpecListenerTimeoutTcpIdlePtrInput `pulumi:"idle"`
}

func (VirtualNodeSpecListenerTimeoutTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcp)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutTcpArgs) ToVirtualNodeSpecListenerTimeoutTcpOutput() VirtualNodeSpecListenerTimeoutTcpOutput {
	return i.ToVirtualNodeSpecListenerTimeoutTcpOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutTcpArgs) ToVirtualNodeSpecListenerTimeoutTcpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutTcpOutput)
}

func (i VirtualNodeSpecListenerTimeoutTcpArgs) ToVirtualNodeSpecListenerTimeoutTcpPtrOutput() VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutTcpArgs) ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutTcpOutput).ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutTcpPtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutTcpArgs, VirtualNodeSpecListenerTimeoutTcpPtr and VirtualNodeSpecListenerTimeoutTcpPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutTcpPtrInput` via:
//
//          VirtualNodeSpecListenerTimeoutTcpArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTimeoutTcpPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutTcpPtrOutput() VirtualNodeSpecListenerTimeoutTcpPtrOutput
	ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutTcpPtrOutput
}

type virtualNodeSpecListenerTimeoutTcpPtrType VirtualNodeSpecListenerTimeoutTcpArgs

func VirtualNodeSpecListenerTimeoutTcpPtr(v *VirtualNodeSpecListenerTimeoutTcpArgs) VirtualNodeSpecListenerTimeoutTcpPtrInput {
	return (*virtualNodeSpecListenerTimeoutTcpPtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutTcp)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutTcpPtrType) ToVirtualNodeSpecListenerTimeoutTcpPtrOutput() VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutTcpPtrType) ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutTcpPtrOutput)
}

type VirtualNodeSpecListenerTimeoutTcpOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutTcpOutput) ToVirtualNodeSpecListenerTimeoutTcpOutput() VirtualNodeSpecListenerTimeoutTcpOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpOutput) ToVirtualNodeSpecListenerTimeoutTcpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpOutput) ToVirtualNodeSpecListenerTimeoutTcpPtrOutput() VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutTcpOutput) ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutTcp) *VirtualNodeSpecListenerTimeoutTcp {
		return &v
	}).(VirtualNodeSpecListenerTimeoutTcpPtrOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutTcpOutput) Idle() VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutTcp) *VirtualNodeSpecListenerTimeoutTcpIdle { return v.Idle }).(VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput)
}

type VirtualNodeSpecListenerTimeoutTcpPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutTcp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutTcpPtrOutput) ToVirtualNodeSpecListenerTimeoutTcpPtrOutput() VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpPtrOutput) ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpPtrOutput) Elem() VirtualNodeSpecListenerTimeoutTcpOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutTcp) VirtualNodeSpecListenerTimeoutTcp {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutTcp
		return ret
	}).(VirtualNodeSpecListenerTimeoutTcpOutput)
}

// The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutTcpPtrOutput) Idle() VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutTcp) *VirtualNodeSpecListenerTimeoutTcpIdle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput)
}

type VirtualNodeSpecListenerTimeoutTcpIdle struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerTimeoutTcpIdleInput is an input type that accepts VirtualNodeSpecListenerTimeoutTcpIdleArgs and VirtualNodeSpecListenerTimeoutTcpIdleOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutTcpIdleInput` via:
//
//          VirtualNodeSpecListenerTimeoutTcpIdleArgs{...}
type VirtualNodeSpecListenerTimeoutTcpIdleInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutTcpIdleOutput() VirtualNodeSpecListenerTimeoutTcpIdleOutput
	ToVirtualNodeSpecListenerTimeoutTcpIdleOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutTcpIdleOutput
}

type VirtualNodeSpecListenerTimeoutTcpIdleArgs struct {
	// The unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerTimeoutTcpIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcpIdle)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutTcpIdleArgs) ToVirtualNodeSpecListenerTimeoutTcpIdleOutput() VirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return i.ToVirtualNodeSpecListenerTimeoutTcpIdleOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutTcpIdleArgs) ToVirtualNodeSpecListenerTimeoutTcpIdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutTcpIdleOutput)
}

func (i VirtualNodeSpecListenerTimeoutTcpIdleArgs) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutput() VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutTcpIdleArgs) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutTcpIdleOutput).ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutTcpIdlePtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutTcpIdleArgs, VirtualNodeSpecListenerTimeoutTcpIdlePtr and VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutTcpIdlePtrInput` via:
//
//          VirtualNodeSpecListenerTimeoutTcpIdleArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTimeoutTcpIdlePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutput() VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput
	ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput
}

type virtualNodeSpecListenerTimeoutTcpIdlePtrType VirtualNodeSpecListenerTimeoutTcpIdleArgs

func VirtualNodeSpecListenerTimeoutTcpIdlePtr(v *VirtualNodeSpecListenerTimeoutTcpIdleArgs) VirtualNodeSpecListenerTimeoutTcpIdlePtrInput {
	return (*virtualNodeSpecListenerTimeoutTcpIdlePtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutTcpIdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutTcpIdle)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutTcpIdlePtrType) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutput() VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutTcpIdlePtrType) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput)
}

type VirtualNodeSpecListenerTimeoutTcpIdleOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutTcpIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcpIdle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutTcpIdleOutput) ToVirtualNodeSpecListenerTimeoutTcpIdleOutput() VirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpIdleOutput) ToVirtualNodeSpecListenerTimeoutTcpIdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpIdleOutput) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutput() VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutTcpIdleOutput) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutTcpIdle) *VirtualNodeSpecListenerTimeoutTcpIdle {
		return &v
	}).(VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutTcpIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutTcpIdle) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutTcpIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutTcpIdle) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutTcpIdle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutput() VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput) Elem() VirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutTcpIdle) VirtualNodeSpecListenerTimeoutTcpIdle {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutTcpIdle
		return ret
	}).(VirtualNodeSpecListenerTimeoutTcpIdleOutput)
}

// The unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutTcpIdle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutTcpIdle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerTls struct {
	// The listener's TLS certificate.
	Certificate VirtualNodeSpecListenerTlsCertificate `pulumi:"certificate"`
	// The listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
	Mode string `pulumi:"mode"`
	// The listener's Transport Layer Security (TLS) validation context.
	Validation *VirtualNodeSpecListenerTlsValidation `pulumi:"validation"`
}

// VirtualNodeSpecListenerTlsInput is an input type that accepts VirtualNodeSpecListenerTlsArgs and VirtualNodeSpecListenerTlsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsInput` via:
//
//          VirtualNodeSpecListenerTlsArgs{...}
type VirtualNodeSpecListenerTlsInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsOutput() VirtualNodeSpecListenerTlsOutput
	ToVirtualNodeSpecListenerTlsOutputWithContext(context.Context) VirtualNodeSpecListenerTlsOutput
}

type VirtualNodeSpecListenerTlsArgs struct {
	// The listener's TLS certificate.
	Certificate VirtualNodeSpecListenerTlsCertificateInput `pulumi:"certificate"`
	// The listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The listener's Transport Layer Security (TLS) validation context.
	Validation VirtualNodeSpecListenerTlsValidationPtrInput `pulumi:"validation"`
}

func (VirtualNodeSpecListenerTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTls)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsArgs) ToVirtualNodeSpecListenerTlsOutput() VirtualNodeSpecListenerTlsOutput {
	return i.ToVirtualNodeSpecListenerTlsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsArgs) ToVirtualNodeSpecListenerTlsOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsOutput)
}

func (i VirtualNodeSpecListenerTlsArgs) ToVirtualNodeSpecListenerTlsPtrOutput() VirtualNodeSpecListenerTlsPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsArgs) ToVirtualNodeSpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsOutput).ToVirtualNodeSpecListenerTlsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsPtrInput is an input type that accepts VirtualNodeSpecListenerTlsArgs, VirtualNodeSpecListenerTlsPtr and VirtualNodeSpecListenerTlsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsPtrInput` via:
//
//          VirtualNodeSpecListenerTlsArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTlsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsPtrOutput() VirtualNodeSpecListenerTlsPtrOutput
	ToVirtualNodeSpecListenerTlsPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsPtrOutput
}

type virtualNodeSpecListenerTlsPtrType VirtualNodeSpecListenerTlsArgs

func VirtualNodeSpecListenerTlsPtr(v *VirtualNodeSpecListenerTlsArgs) VirtualNodeSpecListenerTlsPtrInput {
	return (*virtualNodeSpecListenerTlsPtrType)(v)
}

func (*virtualNodeSpecListenerTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTls)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsPtrType) ToVirtualNodeSpecListenerTlsPtrOutput() VirtualNodeSpecListenerTlsPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsPtrType) ToVirtualNodeSpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsPtrOutput)
}

type VirtualNodeSpecListenerTlsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTls)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsOutput) ToVirtualNodeSpecListenerTlsOutput() VirtualNodeSpecListenerTlsOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsOutput) ToVirtualNodeSpecListenerTlsOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsOutput) ToVirtualNodeSpecListenerTlsPtrOutput() VirtualNodeSpecListenerTlsPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsOutput) ToVirtualNodeSpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTls) *VirtualNodeSpecListenerTls {
		return &v
	}).(VirtualNodeSpecListenerTlsPtrOutput)
}

// The listener's TLS certificate.
func (o VirtualNodeSpecListenerTlsOutput) Certificate() VirtualNodeSpecListenerTlsCertificateOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTls) VirtualNodeSpecListenerTlsCertificate { return v.Certificate }).(VirtualNodeSpecListenerTlsCertificateOutput)
}

// The listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
func (o VirtualNodeSpecListenerTlsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTls) string { return v.Mode }).(pulumi.StringOutput)
}

// The listener's Transport Layer Security (TLS) validation context.
func (o VirtualNodeSpecListenerTlsOutput) Validation() VirtualNodeSpecListenerTlsValidationPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTls) *VirtualNodeSpecListenerTlsValidation { return v.Validation }).(VirtualNodeSpecListenerTlsValidationPtrOutput)
}

type VirtualNodeSpecListenerTlsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTls)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsPtrOutput) ToVirtualNodeSpecListenerTlsPtrOutput() VirtualNodeSpecListenerTlsPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsPtrOutput) ToVirtualNodeSpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsPtrOutput) Elem() VirtualNodeSpecListenerTlsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTls) VirtualNodeSpecListenerTls {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTls
		return ret
	}).(VirtualNodeSpecListenerTlsOutput)
}

// The listener's TLS certificate.
func (o VirtualNodeSpecListenerTlsPtrOutput) Certificate() VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTls) *VirtualNodeSpecListenerTlsCertificate {
		if v == nil {
			return nil
		}
		return &v.Certificate
	}).(VirtualNodeSpecListenerTlsCertificatePtrOutput)
}

// The listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
func (o VirtualNodeSpecListenerTlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTls) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// The listener's Transport Layer Security (TLS) validation context.
func (o VirtualNodeSpecListenerTlsPtrOutput) Validation() VirtualNodeSpecListenerTlsValidationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTls) *VirtualNodeSpecListenerTlsValidation {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(VirtualNodeSpecListenerTlsValidationPtrOutput)
}

type VirtualNodeSpecListenerTlsCertificate struct {
	// An AWS Certificate Manager (ACM) certificate.
	Acm *VirtualNodeSpecListenerTlsCertificateAcm `pulumi:"acm"`
	// A local file certificate.
	File *VirtualNodeSpecListenerTlsCertificateFile `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualNodeSpecListenerTlsCertificateSds `pulumi:"sds"`
}

// VirtualNodeSpecListenerTlsCertificateInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateArgs and VirtualNodeSpecListenerTlsCertificateOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificateInput` via:
//
//          VirtualNodeSpecListenerTlsCertificateArgs{...}
type VirtualNodeSpecListenerTlsCertificateInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificateOutput() VirtualNodeSpecListenerTlsCertificateOutput
	ToVirtualNodeSpecListenerTlsCertificateOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificateOutput
}

type VirtualNodeSpecListenerTlsCertificateArgs struct {
	// An AWS Certificate Manager (ACM) certificate.
	Acm VirtualNodeSpecListenerTlsCertificateAcmPtrInput `pulumi:"acm"`
	// A local file certificate.
	File VirtualNodeSpecListenerTlsCertificateFilePtrInput `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualNodeSpecListenerTlsCertificateSdsPtrInput `pulumi:"sds"`
}

func (VirtualNodeSpecListenerTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificate)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsCertificateArgs) ToVirtualNodeSpecListenerTlsCertificateOutput() VirtualNodeSpecListenerTlsCertificateOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateArgs) ToVirtualNodeSpecListenerTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateOutput)
}

func (i VirtualNodeSpecListenerTlsCertificateArgs) ToVirtualNodeSpecListenerTlsCertificatePtrOutput() VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateArgs) ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateOutput).ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsCertificatePtrInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateArgs, VirtualNodeSpecListenerTlsCertificatePtr and VirtualNodeSpecListenerTlsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificatePtrInput` via:
//
//          VirtualNodeSpecListenerTlsCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTlsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificatePtrOutput() VirtualNodeSpecListenerTlsCertificatePtrOutput
	ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificatePtrOutput
}

type virtualNodeSpecListenerTlsCertificatePtrType VirtualNodeSpecListenerTlsCertificateArgs

func VirtualNodeSpecListenerTlsCertificatePtr(v *VirtualNodeSpecListenerTlsCertificateArgs) VirtualNodeSpecListenerTlsCertificatePtrInput {
	return (*virtualNodeSpecListenerTlsCertificatePtrType)(v)
}

func (*virtualNodeSpecListenerTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificate)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsCertificatePtrType) ToVirtualNodeSpecListenerTlsCertificatePtrOutput() VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsCertificatePtrType) ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificatePtrOutput)
}

type VirtualNodeSpecListenerTlsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificateOutput) ToVirtualNodeSpecListenerTlsCertificateOutput() VirtualNodeSpecListenerTlsCertificateOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateOutput) ToVirtualNodeSpecListenerTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateOutput) ToVirtualNodeSpecListenerTlsCertificatePtrOutput() VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return o.ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsCertificateOutput) ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsCertificate) *VirtualNodeSpecListenerTlsCertificate {
		return &v
	}).(VirtualNodeSpecListenerTlsCertificatePtrOutput)
}

// An AWS Certificate Manager (ACM) certificate.
func (o VirtualNodeSpecListenerTlsCertificateOutput) Acm() VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsCertificate) *VirtualNodeSpecListenerTlsCertificateAcm { return v.Acm }).(VirtualNodeSpecListenerTlsCertificateAcmPtrOutput)
}

// A local file certificate.
func (o VirtualNodeSpecListenerTlsCertificateOutput) File() VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsCertificate) *VirtualNodeSpecListenerTlsCertificateFile {
		return v.File
	}).(VirtualNodeSpecListenerTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecListenerTlsCertificateOutput) Sds() VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsCertificate) *VirtualNodeSpecListenerTlsCertificateSds { return v.Sds }).(VirtualNodeSpecListenerTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecListenerTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificatePtrOutput) ToVirtualNodeSpecListenerTlsCertificatePtrOutput() VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificatePtrOutput) ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificatePtrOutput) Elem() VirtualNodeSpecListenerTlsCertificateOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificate) VirtualNodeSpecListenerTlsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsCertificate
		return ret
	}).(VirtualNodeSpecListenerTlsCertificateOutput)
}

// An AWS Certificate Manager (ACM) certificate.
func (o VirtualNodeSpecListenerTlsCertificatePtrOutput) Acm() VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificate) *VirtualNodeSpecListenerTlsCertificateAcm {
		if v == nil {
			return nil
		}
		return v.Acm
	}).(VirtualNodeSpecListenerTlsCertificateAcmPtrOutput)
}

// A local file certificate.
func (o VirtualNodeSpecListenerTlsCertificatePtrOutput) File() VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificate) *VirtualNodeSpecListenerTlsCertificateFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeSpecListenerTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecListenerTlsCertificatePtrOutput) Sds() VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificate) *VirtualNodeSpecListenerTlsCertificateSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualNodeSpecListenerTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecListenerTlsCertificateAcm struct {
	// The Amazon Resource Name (ARN) for the certificate.
	CertificateArn string `pulumi:"certificateArn"`
}

// VirtualNodeSpecListenerTlsCertificateAcmInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateAcmArgs and VirtualNodeSpecListenerTlsCertificateAcmOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificateAcmInput` via:
//
//          VirtualNodeSpecListenerTlsCertificateAcmArgs{...}
type VirtualNodeSpecListenerTlsCertificateAcmInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificateAcmOutput() VirtualNodeSpecListenerTlsCertificateAcmOutput
	ToVirtualNodeSpecListenerTlsCertificateAcmOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificateAcmOutput
}

type VirtualNodeSpecListenerTlsCertificateAcmArgs struct {
	// The Amazon Resource Name (ARN) for the certificate.
	CertificateArn pulumi.StringInput `pulumi:"certificateArn"`
}

func (VirtualNodeSpecListenerTlsCertificateAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsCertificateAcmArgs) ToVirtualNodeSpecListenerTlsCertificateAcmOutput() VirtualNodeSpecListenerTlsCertificateAcmOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateAcmOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateAcmArgs) ToVirtualNodeSpecListenerTlsCertificateAcmOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateAcmOutput)
}

func (i VirtualNodeSpecListenerTlsCertificateAcmArgs) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutput() VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateAcmArgs) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateAcmOutput).ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsCertificateAcmPtrInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateAcmArgs, VirtualNodeSpecListenerTlsCertificateAcmPtr and VirtualNodeSpecListenerTlsCertificateAcmPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificateAcmPtrInput` via:
//
//          VirtualNodeSpecListenerTlsCertificateAcmArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTlsCertificateAcmPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutput() VirtualNodeSpecListenerTlsCertificateAcmPtrOutput
	ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificateAcmPtrOutput
}

type virtualNodeSpecListenerTlsCertificateAcmPtrType VirtualNodeSpecListenerTlsCertificateAcmArgs

func VirtualNodeSpecListenerTlsCertificateAcmPtr(v *VirtualNodeSpecListenerTlsCertificateAcmArgs) VirtualNodeSpecListenerTlsCertificateAcmPtrInput {
	return (*virtualNodeSpecListenerTlsCertificateAcmPtrType)(v)
}

func (*virtualNodeSpecListenerTlsCertificateAcmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsCertificateAcmPtrType) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutput() VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsCertificateAcmPtrType) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateAcmPtrOutput)
}

type VirtualNodeSpecListenerTlsCertificateAcmOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificateAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificateAcmOutput) ToVirtualNodeSpecListenerTlsCertificateAcmOutput() VirtualNodeSpecListenerTlsCertificateAcmOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateAcmOutput) ToVirtualNodeSpecListenerTlsCertificateAcmOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateAcmOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateAcmOutput) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutput() VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsCertificateAcmOutput) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsCertificateAcm) *VirtualNodeSpecListenerTlsCertificateAcm {
		return &v
	}).(VirtualNodeSpecListenerTlsCertificateAcmPtrOutput)
}

// The Amazon Resource Name (ARN) for the certificate.
func (o VirtualNodeSpecListenerTlsCertificateAcmOutput) CertificateArn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsCertificateAcm) string { return v.CertificateArn }).(pulumi.StringOutput)
}

type VirtualNodeSpecListenerTlsCertificateAcmPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificateAcmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificateAcmPtrOutput) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutput() VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateAcmPtrOutput) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateAcmPtrOutput) Elem() VirtualNodeSpecListenerTlsCertificateAcmOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificateAcm) VirtualNodeSpecListenerTlsCertificateAcm {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsCertificateAcm
		return ret
	}).(VirtualNodeSpecListenerTlsCertificateAcmOutput)
}

// The Amazon Resource Name (ARN) for the certificate.
func (o VirtualNodeSpecListenerTlsCertificateAcmPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificateAcm) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecListenerTlsCertificateFile struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
	// The private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey string `pulumi:"privateKey"`
}

// VirtualNodeSpecListenerTlsCertificateFileInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateFileArgs and VirtualNodeSpecListenerTlsCertificateFileOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificateFileInput` via:
//
//          VirtualNodeSpecListenerTlsCertificateFileArgs{...}
type VirtualNodeSpecListenerTlsCertificateFileInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificateFileOutput() VirtualNodeSpecListenerTlsCertificateFileOutput
	ToVirtualNodeSpecListenerTlsCertificateFileOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificateFileOutput
}

type VirtualNodeSpecListenerTlsCertificateFileArgs struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	// The private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (VirtualNodeSpecListenerTlsCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateFile)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsCertificateFileArgs) ToVirtualNodeSpecListenerTlsCertificateFileOutput() VirtualNodeSpecListenerTlsCertificateFileOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateFileOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateFileArgs) ToVirtualNodeSpecListenerTlsCertificateFileOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateFileOutput)
}

func (i VirtualNodeSpecListenerTlsCertificateFileArgs) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutput() VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateFileArgs) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateFileOutput).ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsCertificateFilePtrInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateFileArgs, VirtualNodeSpecListenerTlsCertificateFilePtr and VirtualNodeSpecListenerTlsCertificateFilePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificateFilePtrInput` via:
//
//          VirtualNodeSpecListenerTlsCertificateFileArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTlsCertificateFilePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificateFilePtrOutput() VirtualNodeSpecListenerTlsCertificateFilePtrOutput
	ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificateFilePtrOutput
}

type virtualNodeSpecListenerTlsCertificateFilePtrType VirtualNodeSpecListenerTlsCertificateFileArgs

func VirtualNodeSpecListenerTlsCertificateFilePtr(v *VirtualNodeSpecListenerTlsCertificateFileArgs) VirtualNodeSpecListenerTlsCertificateFilePtrInput {
	return (*virtualNodeSpecListenerTlsCertificateFilePtrType)(v)
}

func (*virtualNodeSpecListenerTlsCertificateFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificateFile)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsCertificateFilePtrType) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutput() VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsCertificateFilePtrType) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateFilePtrOutput)
}

type VirtualNodeSpecListenerTlsCertificateFileOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateFile)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificateFileOutput) ToVirtualNodeSpecListenerTlsCertificateFileOutput() VirtualNodeSpecListenerTlsCertificateFileOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateFileOutput) ToVirtualNodeSpecListenerTlsCertificateFileOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateFileOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateFileOutput) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutput() VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return o.ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsCertificateFileOutput) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsCertificateFile) *VirtualNodeSpecListenerTlsCertificateFile {
		return &v
	}).(VirtualNodeSpecListenerTlsCertificateFilePtrOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecListenerTlsCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsCertificateFile) string { return v.CertificateChain }).(pulumi.StringOutput)
}

// The private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecListenerTlsCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsCertificateFile) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type VirtualNodeSpecListenerTlsCertificateFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificateFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificateFile)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificateFilePtrOutput) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutput() VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateFilePtrOutput) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateFilePtrOutput) Elem() VirtualNodeSpecListenerTlsCertificateFileOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificateFile) VirtualNodeSpecListenerTlsCertificateFile {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsCertificateFile
		return ret
	}).(VirtualNodeSpecListenerTlsCertificateFileOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecListenerTlsCertificateFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

// The private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecListenerTlsCertificateFilePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecListenerTlsCertificateSds struct {
	// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualNodeSpecListenerTlsCertificateSdsInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateSdsArgs and VirtualNodeSpecListenerTlsCertificateSdsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificateSdsInput` via:
//
//          VirtualNodeSpecListenerTlsCertificateSdsArgs{...}
type VirtualNodeSpecListenerTlsCertificateSdsInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificateSdsOutput() VirtualNodeSpecListenerTlsCertificateSdsOutput
	ToVirtualNodeSpecListenerTlsCertificateSdsOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificateSdsOutput
}

type VirtualNodeSpecListenerTlsCertificateSdsArgs struct {
	// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualNodeSpecListenerTlsCertificateSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateSds)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsCertificateSdsArgs) ToVirtualNodeSpecListenerTlsCertificateSdsOutput() VirtualNodeSpecListenerTlsCertificateSdsOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateSdsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateSdsArgs) ToVirtualNodeSpecListenerTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateSdsOutput)
}

func (i VirtualNodeSpecListenerTlsCertificateSdsArgs) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutput() VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateSdsArgs) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateSdsOutput).ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsCertificateSdsPtrInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateSdsArgs, VirtualNodeSpecListenerTlsCertificateSdsPtr and VirtualNodeSpecListenerTlsCertificateSdsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificateSdsPtrInput` via:
//
//          VirtualNodeSpecListenerTlsCertificateSdsArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTlsCertificateSdsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutput() VirtualNodeSpecListenerTlsCertificateSdsPtrOutput
	ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificateSdsPtrOutput
}

type virtualNodeSpecListenerTlsCertificateSdsPtrType VirtualNodeSpecListenerTlsCertificateSdsArgs

func VirtualNodeSpecListenerTlsCertificateSdsPtr(v *VirtualNodeSpecListenerTlsCertificateSdsArgs) VirtualNodeSpecListenerTlsCertificateSdsPtrInput {
	return (*virtualNodeSpecListenerTlsCertificateSdsPtrType)(v)
}

func (*virtualNodeSpecListenerTlsCertificateSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificateSds)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsCertificateSdsPtrType) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutput() VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsCertificateSdsPtrType) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecListenerTlsCertificateSdsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificateSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateSds)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificateSdsOutput) ToVirtualNodeSpecListenerTlsCertificateSdsOutput() VirtualNodeSpecListenerTlsCertificateSdsOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateSdsOutput) ToVirtualNodeSpecListenerTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateSdsOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateSdsOutput) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutput() VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsCertificateSdsOutput) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsCertificateSds) *VirtualNodeSpecListenerTlsCertificateSds {
		return &v
	}).(VirtualNodeSpecListenerTlsCertificateSdsPtrOutput)
}

// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecListenerTlsCertificateSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsCertificateSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualNodeSpecListenerTlsCertificateSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificateSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificateSds)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificateSdsPtrOutput) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutput() VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateSdsPtrOutput) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateSdsPtrOutput) Elem() VirtualNodeSpecListenerTlsCertificateSdsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificateSds) VirtualNodeSpecListenerTlsCertificateSds {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsCertificateSds
		return ret
	}).(VirtualNodeSpecListenerTlsCertificateSdsOutput)
}

// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecListenerTlsCertificateSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificateSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecListenerTlsValidation struct {
	// The SANs for a TLS validation context.
	SubjectAlternativeNames *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames `pulumi:"subjectAlternativeNames"`
	// The TLS validation context trust.
	Trust VirtualNodeSpecListenerTlsValidationTrust `pulumi:"trust"`
}

// VirtualNodeSpecListenerTlsValidationInput is an input type that accepts VirtualNodeSpecListenerTlsValidationArgs and VirtualNodeSpecListenerTlsValidationOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationInput` via:
//
//          VirtualNodeSpecListenerTlsValidationArgs{...}
type VirtualNodeSpecListenerTlsValidationInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationOutput() VirtualNodeSpecListenerTlsValidationOutput
	ToVirtualNodeSpecListenerTlsValidationOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationOutput
}

type VirtualNodeSpecListenerTlsValidationArgs struct {
	// The SANs for a TLS validation context.
	SubjectAlternativeNames VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrInput `pulumi:"subjectAlternativeNames"`
	// The TLS validation context trust.
	Trust VirtualNodeSpecListenerTlsValidationTrustInput `pulumi:"trust"`
}

func (VirtualNodeSpecListenerTlsValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidation)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsValidationArgs) ToVirtualNodeSpecListenerTlsValidationOutput() VirtualNodeSpecListenerTlsValidationOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationArgs) ToVirtualNodeSpecListenerTlsValidationOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationOutput)
}

func (i VirtualNodeSpecListenerTlsValidationArgs) ToVirtualNodeSpecListenerTlsValidationPtrOutput() VirtualNodeSpecListenerTlsValidationPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationArgs) ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationOutput).ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsValidationPtrInput is an input type that accepts VirtualNodeSpecListenerTlsValidationArgs, VirtualNodeSpecListenerTlsValidationPtr and VirtualNodeSpecListenerTlsValidationPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationPtrInput` via:
//
//          VirtualNodeSpecListenerTlsValidationArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTlsValidationPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationPtrOutput() VirtualNodeSpecListenerTlsValidationPtrOutput
	ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationPtrOutput
}

type virtualNodeSpecListenerTlsValidationPtrType VirtualNodeSpecListenerTlsValidationArgs

func VirtualNodeSpecListenerTlsValidationPtr(v *VirtualNodeSpecListenerTlsValidationArgs) VirtualNodeSpecListenerTlsValidationPtrInput {
	return (*virtualNodeSpecListenerTlsValidationPtrType)(v)
}

func (*virtualNodeSpecListenerTlsValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidation)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsValidationPtrType) ToVirtualNodeSpecListenerTlsValidationPtrOutput() VirtualNodeSpecListenerTlsValidationPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsValidationPtrType) ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidation)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationOutput) ToVirtualNodeSpecListenerTlsValidationOutput() VirtualNodeSpecListenerTlsValidationOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationOutput) ToVirtualNodeSpecListenerTlsValidationOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationOutput) ToVirtualNodeSpecListenerTlsValidationPtrOutput() VirtualNodeSpecListenerTlsValidationPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsValidationOutput) ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsValidation) *VirtualNodeSpecListenerTlsValidation {
		return &v
	}).(VirtualNodeSpecListenerTlsValidationPtrOutput)
}

// The SANs for a TLS validation context.
func (o VirtualNodeSpecListenerTlsValidationOutput) SubjectAlternativeNames() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidation) *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames {
		return v.SubjectAlternativeNames
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The TLS validation context trust.
func (o VirtualNodeSpecListenerTlsValidationOutput) Trust() VirtualNodeSpecListenerTlsValidationTrustOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidation) VirtualNodeSpecListenerTlsValidationTrust { return v.Trust }).(VirtualNodeSpecListenerTlsValidationTrustOutput)
}

type VirtualNodeSpecListenerTlsValidationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidation)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationPtrOutput) ToVirtualNodeSpecListenerTlsValidationPtrOutput() VirtualNodeSpecListenerTlsValidationPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationPtrOutput) ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationPtrOutput) Elem() VirtualNodeSpecListenerTlsValidationOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidation) VirtualNodeSpecListenerTlsValidation {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsValidation
		return ret
	}).(VirtualNodeSpecListenerTlsValidationOutput)
}

// The SANs for a TLS validation context.
func (o VirtualNodeSpecListenerTlsValidationPtrOutput) SubjectAlternativeNames() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidation) *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The TLS validation context trust.
func (o VirtualNodeSpecListenerTlsValidationPtrOutput) Trust() VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidation) *VirtualNodeSpecListenerTlsValidationTrust {
		if v == nil {
			return nil
		}
		return &v.Trust
	}).(VirtualNodeSpecListenerTlsValidationTrustPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames struct {
	// The criteria for determining a SAN's match.
	Match VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch `pulumi:"match"`
}

// VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesInput is an input type that accepts VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs and VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesInput` via:
//
//          VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs{...}
type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput
	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs struct {
	// The criteria for determining a SAN's match.
	Match VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchInput `pulumi:"match"`
}

func (VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput)
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput).ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrInput is an input type that accepts VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs, VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtr and VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrInput` via:
//
//          VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput
	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput
}

type virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrType VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs

func VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtr(v *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrInput {
	return (*virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrType)(v)
}

func (*virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrType) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrType) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames) *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames {
		return &v
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

// The criteria for determining a SAN's match.
func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput) Match() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch {
		return v.Match
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput)
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) Elem() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames
		return ret
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput)
}

// The criteria for determining a SAN's match.
func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) Match() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames) *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch struct {
	// The values sent must match the specified values exactly.
	Exacts []string `pulumi:"exacts"`
}

// VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchInput is an input type that accepts VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs and VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchInput` via:
//
//          VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{...}
type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput
	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs struct {
	// The values sent must match the specified values exactly.
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput)
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput).ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput is an input type that accepts VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs, VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtr and VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput` via:
//
//          VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput
	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput
}

type virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs

func VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtr(v *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput {
	return (*virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType)(v)
}

func (*virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch) *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch {
		return &v
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

// The values sent must match the specified values exactly.
func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch) []string { return v.Exacts }).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) Elem() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch
		return ret
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput)
}

// The values sent must match the specified values exactly.
func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch) []string {
		if v == nil {
			return nil
		}
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecListenerTlsValidationTrust struct {
	// The TLS validation context trust for a local file certificate.
	File *VirtualNodeSpecListenerTlsValidationTrustFile `pulumi:"file"`
	// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualNodeSpecListenerTlsValidationTrustSds `pulumi:"sds"`
}

// VirtualNodeSpecListenerTlsValidationTrustInput is an input type that accepts VirtualNodeSpecListenerTlsValidationTrustArgs and VirtualNodeSpecListenerTlsValidationTrustOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationTrustInput` via:
//
//          VirtualNodeSpecListenerTlsValidationTrustArgs{...}
type VirtualNodeSpecListenerTlsValidationTrustInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationTrustOutput() VirtualNodeSpecListenerTlsValidationTrustOutput
	ToVirtualNodeSpecListenerTlsValidationTrustOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationTrustOutput
}

type VirtualNodeSpecListenerTlsValidationTrustArgs struct {
	// The TLS validation context trust for a local file certificate.
	File VirtualNodeSpecListenerTlsValidationTrustFilePtrInput `pulumi:"file"`
	// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualNodeSpecListenerTlsValidationTrustSdsPtrInput `pulumi:"sds"`
}

func (VirtualNodeSpecListenerTlsValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrust)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsValidationTrustArgs) ToVirtualNodeSpecListenerTlsValidationTrustOutput() VirtualNodeSpecListenerTlsValidationTrustOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationTrustArgs) ToVirtualNodeSpecListenerTlsValidationTrustOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustOutput)
}

func (i VirtualNodeSpecListenerTlsValidationTrustArgs) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutput() VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationTrustArgs) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustOutput).ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsValidationTrustPtrInput is an input type that accepts VirtualNodeSpecListenerTlsValidationTrustArgs, VirtualNodeSpecListenerTlsValidationTrustPtr and VirtualNodeSpecListenerTlsValidationTrustPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationTrustPtrInput` via:
//
//          VirtualNodeSpecListenerTlsValidationTrustArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTlsValidationTrustPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationTrustPtrOutput() VirtualNodeSpecListenerTlsValidationTrustPtrOutput
	ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationTrustPtrOutput
}

type virtualNodeSpecListenerTlsValidationTrustPtrType VirtualNodeSpecListenerTlsValidationTrustArgs

func VirtualNodeSpecListenerTlsValidationTrustPtr(v *VirtualNodeSpecListenerTlsValidationTrustArgs) VirtualNodeSpecListenerTlsValidationTrustPtrInput {
	return (*virtualNodeSpecListenerTlsValidationTrustPtrType)(v)
}

func (*virtualNodeSpecListenerTlsValidationTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationTrust)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsValidationTrustPtrType) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutput() VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsValidationTrustPtrType) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrust)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationTrustOutput) ToVirtualNodeSpecListenerTlsValidationTrustOutput() VirtualNodeSpecListenerTlsValidationTrustOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustOutput) ToVirtualNodeSpecListenerTlsValidationTrustOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustOutput) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutput() VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsValidationTrustOutput) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsValidationTrust) *VirtualNodeSpecListenerTlsValidationTrust {
		return &v
	}).(VirtualNodeSpecListenerTlsValidationTrustPtrOutput)
}

// The TLS validation context trust for a local file certificate.
func (o VirtualNodeSpecListenerTlsValidationTrustOutput) File() VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidationTrust) *VirtualNodeSpecListenerTlsValidationTrustFile {
		return v.File
	}).(VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput)
}

// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecListenerTlsValidationTrustOutput) Sds() VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidationTrust) *VirtualNodeSpecListenerTlsValidationTrustSds {
		return v.Sds
	}).(VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationTrust)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationTrustPtrOutput) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutput() VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustPtrOutput) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustPtrOutput) Elem() VirtualNodeSpecListenerTlsValidationTrustOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationTrust) VirtualNodeSpecListenerTlsValidationTrust {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsValidationTrust
		return ret
	}).(VirtualNodeSpecListenerTlsValidationTrustOutput)
}

// The TLS validation context trust for a local file certificate.
func (o VirtualNodeSpecListenerTlsValidationTrustPtrOutput) File() VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationTrust) *VirtualNodeSpecListenerTlsValidationTrustFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput)
}

// The TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecListenerTlsValidationTrustPtrOutput) Sds() VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationTrust) *VirtualNodeSpecListenerTlsValidationTrustSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustFile struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
}

// VirtualNodeSpecListenerTlsValidationTrustFileInput is an input type that accepts VirtualNodeSpecListenerTlsValidationTrustFileArgs and VirtualNodeSpecListenerTlsValidationTrustFileOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationTrustFileInput` via:
//
//          VirtualNodeSpecListenerTlsValidationTrustFileArgs{...}
type VirtualNodeSpecListenerTlsValidationTrustFileInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationTrustFileOutput() VirtualNodeSpecListenerTlsValidationTrustFileOutput
	ToVirtualNodeSpecListenerTlsValidationTrustFileOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationTrustFileOutput
}

type VirtualNodeSpecListenerTlsValidationTrustFileArgs struct {
	// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (VirtualNodeSpecListenerTlsValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsValidationTrustFileArgs) ToVirtualNodeSpecListenerTlsValidationTrustFileOutput() VirtualNodeSpecListenerTlsValidationTrustFileOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustFileOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationTrustFileArgs) ToVirtualNodeSpecListenerTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustFileOutput)
}

func (i VirtualNodeSpecListenerTlsValidationTrustFileArgs) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutput() VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationTrustFileArgs) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustFileOutput).ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsValidationTrustFilePtrInput is an input type that accepts VirtualNodeSpecListenerTlsValidationTrustFileArgs, VirtualNodeSpecListenerTlsValidationTrustFilePtr and VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationTrustFilePtrInput` via:
//
//          VirtualNodeSpecListenerTlsValidationTrustFileArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTlsValidationTrustFilePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutput() VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput
	ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput
}

type virtualNodeSpecListenerTlsValidationTrustFilePtrType VirtualNodeSpecListenerTlsValidationTrustFileArgs

func VirtualNodeSpecListenerTlsValidationTrustFilePtr(v *VirtualNodeSpecListenerTlsValidationTrustFileArgs) VirtualNodeSpecListenerTlsValidationTrustFilePtrInput {
	return (*virtualNodeSpecListenerTlsValidationTrustFilePtrType)(v)
}

func (*virtualNodeSpecListenerTlsValidationTrustFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsValidationTrustFilePtrType) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutput() VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsValidationTrustFilePtrType) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustFileOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationTrustFileOutput) ToVirtualNodeSpecListenerTlsValidationTrustFileOutput() VirtualNodeSpecListenerTlsValidationTrustFileOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustFileOutput) ToVirtualNodeSpecListenerTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustFileOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustFileOutput) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutput() VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return o.ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsValidationTrustFileOutput) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsValidationTrustFile) *VirtualNodeSpecListenerTlsValidationTrustFile {
		return &v
	}).(VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecListenerTlsValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidationTrustFile) string { return v.CertificateChain }).(pulumi.StringOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutput() VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput) Elem() VirtualNodeSpecListenerTlsValidationTrustFileOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationTrustFile) VirtualNodeSpecListenerTlsValidationTrustFile {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsValidationTrustFile
		return ret
	}).(VirtualNodeSpecListenerTlsValidationTrustFileOutput)
}

// The certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationTrustFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustSds struct {
	// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualNodeSpecListenerTlsValidationTrustSdsInput is an input type that accepts VirtualNodeSpecListenerTlsValidationTrustSdsArgs and VirtualNodeSpecListenerTlsValidationTrustSdsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationTrustSdsInput` via:
//
//          VirtualNodeSpecListenerTlsValidationTrustSdsArgs{...}
type VirtualNodeSpecListenerTlsValidationTrustSdsInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationTrustSdsOutput() VirtualNodeSpecListenerTlsValidationTrustSdsOutput
	ToVirtualNodeSpecListenerTlsValidationTrustSdsOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsOutput
}

type VirtualNodeSpecListenerTlsValidationTrustSdsArgs struct {
	// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualNodeSpecListenerTlsValidationTrustSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsValidationTrustSdsArgs) ToVirtualNodeSpecListenerTlsValidationTrustSdsOutput() VirtualNodeSpecListenerTlsValidationTrustSdsOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustSdsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationTrustSdsArgs) ToVirtualNodeSpecListenerTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustSdsOutput)
}

func (i VirtualNodeSpecListenerTlsValidationTrustSdsArgs) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput() VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationTrustSdsArgs) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustSdsOutput).ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsValidationTrustSdsPtrInput is an input type that accepts VirtualNodeSpecListenerTlsValidationTrustSdsArgs, VirtualNodeSpecListenerTlsValidationTrustSdsPtr and VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationTrustSdsPtrInput` via:
//
//          VirtualNodeSpecListenerTlsValidationTrustSdsArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecListenerTlsValidationTrustSdsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput() VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput
	ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput
}

type virtualNodeSpecListenerTlsValidationTrustSdsPtrType VirtualNodeSpecListenerTlsValidationTrustSdsArgs

func VirtualNodeSpecListenerTlsValidationTrustSdsPtr(v *VirtualNodeSpecListenerTlsValidationTrustSdsArgs) VirtualNodeSpecListenerTlsValidationTrustSdsPtrInput {
	return (*virtualNodeSpecListenerTlsValidationTrustSdsPtrType)(v)
}

func (*virtualNodeSpecListenerTlsValidationTrustSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsValidationTrustSdsPtrType) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput() VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsValidationTrustSdsPtrType) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustSdsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationTrustSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationTrustSdsOutput) ToVirtualNodeSpecListenerTlsValidationTrustSdsOutput() VirtualNodeSpecListenerTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustSdsOutput) ToVirtualNodeSpecListenerTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustSdsOutput) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput() VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsValidationTrustSdsOutput) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsValidationTrustSds) *VirtualNodeSpecListenerTlsValidationTrustSds {
		return &v
	}).(VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput)
}

// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecListenerTlsValidationTrustSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidationTrustSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput() VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput) Elem() VirtualNodeSpecListenerTlsValidationTrustSdsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationTrustSds) VirtualNodeSpecListenerTlsValidationTrustSds {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsValidationTrustSds
		return ret
	}).(VirtualNodeSpecListenerTlsValidationTrustSdsOutput)
}

// The name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationTrustSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecLogging struct {
	// The access log configuration for a virtual node.
	AccessLog *VirtualNodeSpecLoggingAccessLog `pulumi:"accessLog"`
}

// VirtualNodeSpecLoggingInput is an input type that accepts VirtualNodeSpecLoggingArgs and VirtualNodeSpecLoggingOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingInput` via:
//
//          VirtualNodeSpecLoggingArgs{...}
type VirtualNodeSpecLoggingInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingOutput() VirtualNodeSpecLoggingOutput
	ToVirtualNodeSpecLoggingOutputWithContext(context.Context) VirtualNodeSpecLoggingOutput
}

type VirtualNodeSpecLoggingArgs struct {
	// The access log configuration for a virtual node.
	AccessLog VirtualNodeSpecLoggingAccessLogPtrInput `pulumi:"accessLog"`
}

func (VirtualNodeSpecLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLogging)(nil)).Elem()
}

func (i VirtualNodeSpecLoggingArgs) ToVirtualNodeSpecLoggingOutput() VirtualNodeSpecLoggingOutput {
	return i.ToVirtualNodeSpecLoggingOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingArgs) ToVirtualNodeSpecLoggingOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingOutput)
}

func (i VirtualNodeSpecLoggingArgs) ToVirtualNodeSpecLoggingPtrOutput() VirtualNodeSpecLoggingPtrOutput {
	return i.ToVirtualNodeSpecLoggingPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingArgs) ToVirtualNodeSpecLoggingPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingOutput).ToVirtualNodeSpecLoggingPtrOutputWithContext(ctx)
}

// VirtualNodeSpecLoggingPtrInput is an input type that accepts VirtualNodeSpecLoggingArgs, VirtualNodeSpecLoggingPtr and VirtualNodeSpecLoggingPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingPtrInput` via:
//
//          VirtualNodeSpecLoggingArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecLoggingPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingPtrOutput() VirtualNodeSpecLoggingPtrOutput
	ToVirtualNodeSpecLoggingPtrOutputWithContext(context.Context) VirtualNodeSpecLoggingPtrOutput
}

type virtualNodeSpecLoggingPtrType VirtualNodeSpecLoggingArgs

func VirtualNodeSpecLoggingPtr(v *VirtualNodeSpecLoggingArgs) VirtualNodeSpecLoggingPtrInput {
	return (*virtualNodeSpecLoggingPtrType)(v)
}

func (*virtualNodeSpecLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecLogging)(nil)).Elem()
}

func (i *virtualNodeSpecLoggingPtrType) ToVirtualNodeSpecLoggingPtrOutput() VirtualNodeSpecLoggingPtrOutput {
	return i.ToVirtualNodeSpecLoggingPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecLoggingPtrType) ToVirtualNodeSpecLoggingPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingPtrOutput)
}

type VirtualNodeSpecLoggingOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLogging)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingOutput) ToVirtualNodeSpecLoggingOutput() VirtualNodeSpecLoggingOutput {
	return o
}

func (o VirtualNodeSpecLoggingOutput) ToVirtualNodeSpecLoggingOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingOutput {
	return o
}

func (o VirtualNodeSpecLoggingOutput) ToVirtualNodeSpecLoggingPtrOutput() VirtualNodeSpecLoggingPtrOutput {
	return o.ToVirtualNodeSpecLoggingPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecLoggingOutput) ToVirtualNodeSpecLoggingPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecLogging) *VirtualNodeSpecLogging {
		return &v
	}).(VirtualNodeSpecLoggingPtrOutput)
}

// The access log configuration for a virtual node.
func (o VirtualNodeSpecLoggingOutput) AccessLog() VirtualNodeSpecLoggingAccessLogPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecLogging) *VirtualNodeSpecLoggingAccessLog { return v.AccessLog }).(VirtualNodeSpecLoggingAccessLogPtrOutput)
}

type VirtualNodeSpecLoggingPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecLogging)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingPtrOutput) ToVirtualNodeSpecLoggingPtrOutput() VirtualNodeSpecLoggingPtrOutput {
	return o
}

func (o VirtualNodeSpecLoggingPtrOutput) ToVirtualNodeSpecLoggingPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingPtrOutput {
	return o
}

func (o VirtualNodeSpecLoggingPtrOutput) Elem() VirtualNodeSpecLoggingOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLogging) VirtualNodeSpecLogging {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecLogging
		return ret
	}).(VirtualNodeSpecLoggingOutput)
}

// The access log configuration for a virtual node.
func (o VirtualNodeSpecLoggingPtrOutput) AccessLog() VirtualNodeSpecLoggingAccessLogPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLogging) *VirtualNodeSpecLoggingAccessLog {
		if v == nil {
			return nil
		}
		return v.AccessLog
	}).(VirtualNodeSpecLoggingAccessLogPtrOutput)
}

type VirtualNodeSpecLoggingAccessLog struct {
	// The file object to send virtual node access logs to.
	File *VirtualNodeSpecLoggingAccessLogFile `pulumi:"file"`
}

// VirtualNodeSpecLoggingAccessLogInput is an input type that accepts VirtualNodeSpecLoggingAccessLogArgs and VirtualNodeSpecLoggingAccessLogOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingAccessLogInput` via:
//
//          VirtualNodeSpecLoggingAccessLogArgs{...}
type VirtualNodeSpecLoggingAccessLogInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingAccessLogOutput() VirtualNodeSpecLoggingAccessLogOutput
	ToVirtualNodeSpecLoggingAccessLogOutputWithContext(context.Context) VirtualNodeSpecLoggingAccessLogOutput
}

type VirtualNodeSpecLoggingAccessLogArgs struct {
	// The file object to send virtual node access logs to.
	File VirtualNodeSpecLoggingAccessLogFilePtrInput `pulumi:"file"`
}

func (VirtualNodeSpecLoggingAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLoggingAccessLog)(nil)).Elem()
}

func (i VirtualNodeSpecLoggingAccessLogArgs) ToVirtualNodeSpecLoggingAccessLogOutput() VirtualNodeSpecLoggingAccessLogOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingAccessLogArgs) ToVirtualNodeSpecLoggingAccessLogOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogOutput)
}

func (i VirtualNodeSpecLoggingAccessLogArgs) ToVirtualNodeSpecLoggingAccessLogPtrOutput() VirtualNodeSpecLoggingAccessLogPtrOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingAccessLogArgs) ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogOutput).ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(ctx)
}

// VirtualNodeSpecLoggingAccessLogPtrInput is an input type that accepts VirtualNodeSpecLoggingAccessLogArgs, VirtualNodeSpecLoggingAccessLogPtr and VirtualNodeSpecLoggingAccessLogPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingAccessLogPtrInput` via:
//
//          VirtualNodeSpecLoggingAccessLogArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecLoggingAccessLogPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingAccessLogPtrOutput() VirtualNodeSpecLoggingAccessLogPtrOutput
	ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(context.Context) VirtualNodeSpecLoggingAccessLogPtrOutput
}

type virtualNodeSpecLoggingAccessLogPtrType VirtualNodeSpecLoggingAccessLogArgs

func VirtualNodeSpecLoggingAccessLogPtr(v *VirtualNodeSpecLoggingAccessLogArgs) VirtualNodeSpecLoggingAccessLogPtrInput {
	return (*virtualNodeSpecLoggingAccessLogPtrType)(v)
}

func (*virtualNodeSpecLoggingAccessLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecLoggingAccessLog)(nil)).Elem()
}

func (i *virtualNodeSpecLoggingAccessLogPtrType) ToVirtualNodeSpecLoggingAccessLogPtrOutput() VirtualNodeSpecLoggingAccessLogPtrOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecLoggingAccessLogPtrType) ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogPtrOutput)
}

type VirtualNodeSpecLoggingAccessLogOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLoggingAccessLog)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingAccessLogOutput) ToVirtualNodeSpecLoggingAccessLogOutput() VirtualNodeSpecLoggingAccessLogOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogOutput) ToVirtualNodeSpecLoggingAccessLogOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogOutput) ToVirtualNodeSpecLoggingAccessLogPtrOutput() VirtualNodeSpecLoggingAccessLogPtrOutput {
	return o.ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecLoggingAccessLogOutput) ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecLoggingAccessLog) *VirtualNodeSpecLoggingAccessLog {
		return &v
	}).(VirtualNodeSpecLoggingAccessLogPtrOutput)
}

// The file object to send virtual node access logs to.
func (o VirtualNodeSpecLoggingAccessLogOutput) File() VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecLoggingAccessLog) *VirtualNodeSpecLoggingAccessLogFile { return v.File }).(VirtualNodeSpecLoggingAccessLogFilePtrOutput)
}

type VirtualNodeSpecLoggingAccessLogPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingAccessLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecLoggingAccessLog)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingAccessLogPtrOutput) ToVirtualNodeSpecLoggingAccessLogPtrOutput() VirtualNodeSpecLoggingAccessLogPtrOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogPtrOutput) ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogPtrOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogPtrOutput) Elem() VirtualNodeSpecLoggingAccessLogOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLoggingAccessLog) VirtualNodeSpecLoggingAccessLog {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecLoggingAccessLog
		return ret
	}).(VirtualNodeSpecLoggingAccessLogOutput)
}

// The file object to send virtual node access logs to.
func (o VirtualNodeSpecLoggingAccessLogPtrOutput) File() VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLoggingAccessLog) *VirtualNodeSpecLoggingAccessLogFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeSpecLoggingAccessLogFilePtrOutput)
}

type VirtualNodeSpecLoggingAccessLogFile struct {
	// The file path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
	Path string `pulumi:"path"`
}

// VirtualNodeSpecLoggingAccessLogFileInput is an input type that accepts VirtualNodeSpecLoggingAccessLogFileArgs and VirtualNodeSpecLoggingAccessLogFileOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingAccessLogFileInput` via:
//
//          VirtualNodeSpecLoggingAccessLogFileArgs{...}
type VirtualNodeSpecLoggingAccessLogFileInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingAccessLogFileOutput() VirtualNodeSpecLoggingAccessLogFileOutput
	ToVirtualNodeSpecLoggingAccessLogFileOutputWithContext(context.Context) VirtualNodeSpecLoggingAccessLogFileOutput
}

type VirtualNodeSpecLoggingAccessLogFileArgs struct {
	// The file path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
	Path pulumi.StringInput `pulumi:"path"`
}

func (VirtualNodeSpecLoggingAccessLogFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFile)(nil)).Elem()
}

func (i VirtualNodeSpecLoggingAccessLogFileArgs) ToVirtualNodeSpecLoggingAccessLogFileOutput() VirtualNodeSpecLoggingAccessLogFileOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogFileOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingAccessLogFileArgs) ToVirtualNodeSpecLoggingAccessLogFileOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogFileOutput)
}

func (i VirtualNodeSpecLoggingAccessLogFileArgs) ToVirtualNodeSpecLoggingAccessLogFilePtrOutput() VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingAccessLogFileArgs) ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogFileOutput).ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(ctx)
}

// VirtualNodeSpecLoggingAccessLogFilePtrInput is an input type that accepts VirtualNodeSpecLoggingAccessLogFileArgs, VirtualNodeSpecLoggingAccessLogFilePtr and VirtualNodeSpecLoggingAccessLogFilePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingAccessLogFilePtrInput` via:
//
//          VirtualNodeSpecLoggingAccessLogFileArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecLoggingAccessLogFilePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingAccessLogFilePtrOutput() VirtualNodeSpecLoggingAccessLogFilePtrOutput
	ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(context.Context) VirtualNodeSpecLoggingAccessLogFilePtrOutput
}

type virtualNodeSpecLoggingAccessLogFilePtrType VirtualNodeSpecLoggingAccessLogFileArgs

func VirtualNodeSpecLoggingAccessLogFilePtr(v *VirtualNodeSpecLoggingAccessLogFileArgs) VirtualNodeSpecLoggingAccessLogFilePtrInput {
	return (*virtualNodeSpecLoggingAccessLogFilePtrType)(v)
}

func (*virtualNodeSpecLoggingAccessLogFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecLoggingAccessLogFile)(nil)).Elem()
}

func (i *virtualNodeSpecLoggingAccessLogFilePtrType) ToVirtualNodeSpecLoggingAccessLogFilePtrOutput() VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecLoggingAccessLogFilePtrType) ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogFilePtrOutput)
}

type VirtualNodeSpecLoggingAccessLogFileOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingAccessLogFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFile)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingAccessLogFileOutput) ToVirtualNodeSpecLoggingAccessLogFileOutput() VirtualNodeSpecLoggingAccessLogFileOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFileOutput) ToVirtualNodeSpecLoggingAccessLogFileOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFileOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFileOutput) ToVirtualNodeSpecLoggingAccessLogFilePtrOutput() VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return o.ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecLoggingAccessLogFileOutput) ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecLoggingAccessLogFile) *VirtualNodeSpecLoggingAccessLogFile {
		return &v
	}).(VirtualNodeSpecLoggingAccessLogFilePtrOutput)
}

// The file path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecLoggingAccessLogFileOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecLoggingAccessLogFile) string { return v.Path }).(pulumi.StringOutput)
}

type VirtualNodeSpecLoggingAccessLogFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingAccessLogFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecLoggingAccessLogFile)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingAccessLogFilePtrOutput) ToVirtualNodeSpecLoggingAccessLogFilePtrOutput() VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFilePtrOutput) ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFilePtrOutput) Elem() VirtualNodeSpecLoggingAccessLogFileOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLoggingAccessLogFile) VirtualNodeSpecLoggingAccessLogFile {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecLoggingAccessLogFile
		return ret
	}).(VirtualNodeSpecLoggingAccessLogFileOutput)
}

// The file path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecLoggingAccessLogFilePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLoggingAccessLogFile) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecServiceDiscovery struct {
	// Specifies any AWS Cloud Map information for the virtual node.
	AwsCloudMap *VirtualNodeSpecServiceDiscoveryAwsCloudMap `pulumi:"awsCloudMap"`
	// Specifies the DNS service name for the virtual node.
	Dns *VirtualNodeSpecServiceDiscoveryDns `pulumi:"dns"`
}

// VirtualNodeSpecServiceDiscoveryInput is an input type that accepts VirtualNodeSpecServiceDiscoveryArgs and VirtualNodeSpecServiceDiscoveryOutput values.
// You can construct a concrete instance of `VirtualNodeSpecServiceDiscoveryInput` via:
//
//          VirtualNodeSpecServiceDiscoveryArgs{...}
type VirtualNodeSpecServiceDiscoveryInput interface {
	pulumi.Input

	ToVirtualNodeSpecServiceDiscoveryOutput() VirtualNodeSpecServiceDiscoveryOutput
	ToVirtualNodeSpecServiceDiscoveryOutputWithContext(context.Context) VirtualNodeSpecServiceDiscoveryOutput
}

type VirtualNodeSpecServiceDiscoveryArgs struct {
	// Specifies any AWS Cloud Map information for the virtual node.
	AwsCloudMap VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrInput `pulumi:"awsCloudMap"`
	// Specifies the DNS service name for the virtual node.
	Dns VirtualNodeSpecServiceDiscoveryDnsPtrInput `pulumi:"dns"`
}

func (VirtualNodeSpecServiceDiscoveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecServiceDiscovery)(nil)).Elem()
}

func (i VirtualNodeSpecServiceDiscoveryArgs) ToVirtualNodeSpecServiceDiscoveryOutput() VirtualNodeSpecServiceDiscoveryOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryOutputWithContext(context.Background())
}

func (i VirtualNodeSpecServiceDiscoveryArgs) ToVirtualNodeSpecServiceDiscoveryOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryOutput)
}

func (i VirtualNodeSpecServiceDiscoveryArgs) ToVirtualNodeSpecServiceDiscoveryPtrOutput() VirtualNodeSpecServiceDiscoveryPtrOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecServiceDiscoveryArgs) ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryOutput).ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(ctx)
}

// VirtualNodeSpecServiceDiscoveryPtrInput is an input type that accepts VirtualNodeSpecServiceDiscoveryArgs, VirtualNodeSpecServiceDiscoveryPtr and VirtualNodeSpecServiceDiscoveryPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecServiceDiscoveryPtrInput` via:
//
//          VirtualNodeSpecServiceDiscoveryArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecServiceDiscoveryPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecServiceDiscoveryPtrOutput() VirtualNodeSpecServiceDiscoveryPtrOutput
	ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(context.Context) VirtualNodeSpecServiceDiscoveryPtrOutput
}

type virtualNodeSpecServiceDiscoveryPtrType VirtualNodeSpecServiceDiscoveryArgs

func VirtualNodeSpecServiceDiscoveryPtr(v *VirtualNodeSpecServiceDiscoveryArgs) VirtualNodeSpecServiceDiscoveryPtrInput {
	return (*virtualNodeSpecServiceDiscoveryPtrType)(v)
}

func (*virtualNodeSpecServiceDiscoveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecServiceDiscovery)(nil)).Elem()
}

func (i *virtualNodeSpecServiceDiscoveryPtrType) ToVirtualNodeSpecServiceDiscoveryPtrOutput() VirtualNodeSpecServiceDiscoveryPtrOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecServiceDiscoveryPtrType) ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryPtrOutput)
}

type VirtualNodeSpecServiceDiscoveryOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecServiceDiscoveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecServiceDiscovery)(nil)).Elem()
}

func (o VirtualNodeSpecServiceDiscoveryOutput) ToVirtualNodeSpecServiceDiscoveryOutput() VirtualNodeSpecServiceDiscoveryOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryOutput) ToVirtualNodeSpecServiceDiscoveryOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryOutput) ToVirtualNodeSpecServiceDiscoveryPtrOutput() VirtualNodeSpecServiceDiscoveryPtrOutput {
	return o.ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecServiceDiscoveryOutput) ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecServiceDiscovery) *VirtualNodeSpecServiceDiscovery {
		return &v
	}).(VirtualNodeSpecServiceDiscoveryPtrOutput)
}

// Specifies any AWS Cloud Map information for the virtual node.
func (o VirtualNodeSpecServiceDiscoveryOutput) AwsCloudMap() VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecServiceDiscovery) *VirtualNodeSpecServiceDiscoveryAwsCloudMap {
		return v.AwsCloudMap
	}).(VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput)
}

// Specifies the DNS service name for the virtual node.
func (o VirtualNodeSpecServiceDiscoveryOutput) Dns() VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecServiceDiscovery) *VirtualNodeSpecServiceDiscoveryDns { return v.Dns }).(VirtualNodeSpecServiceDiscoveryDnsPtrOutput)
}

type VirtualNodeSpecServiceDiscoveryPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecServiceDiscoveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecServiceDiscovery)(nil)).Elem()
}

func (o VirtualNodeSpecServiceDiscoveryPtrOutput) ToVirtualNodeSpecServiceDiscoveryPtrOutput() VirtualNodeSpecServiceDiscoveryPtrOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryPtrOutput) ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryPtrOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryPtrOutput) Elem() VirtualNodeSpecServiceDiscoveryOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscovery) VirtualNodeSpecServiceDiscovery {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecServiceDiscovery
		return ret
	}).(VirtualNodeSpecServiceDiscoveryOutput)
}

// Specifies any AWS Cloud Map information for the virtual node.
func (o VirtualNodeSpecServiceDiscoveryPtrOutput) AwsCloudMap() VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscovery) *VirtualNodeSpecServiceDiscoveryAwsCloudMap {
		if v == nil {
			return nil
		}
		return v.AwsCloudMap
	}).(VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput)
}

// Specifies the DNS service name for the virtual node.
func (o VirtualNodeSpecServiceDiscoveryPtrOutput) Dns() VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscovery) *VirtualNodeSpecServiceDiscoveryDns {
		if v == nil {
			return nil
		}
		return v.Dns
	}).(VirtualNodeSpecServiceDiscoveryDnsPtrOutput)
}

type VirtualNodeSpecServiceDiscoveryAwsCloudMap struct {
	// A string map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
	Attributes map[string]string `pulumi:"attributes"`
	// The name of the AWS Cloud Map namespace to use.
	// Use the `servicediscovery.HttpNamespace` resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
	NamespaceName string `pulumi:"namespaceName"`
	// The name of the AWS Cloud Map service to use. Use the `servicediscovery.Service` resource to configure a Cloud Map service. Must be between 1 and 1024 characters in length.
	ServiceName string `pulumi:"serviceName"`
}

// VirtualNodeSpecServiceDiscoveryAwsCloudMapInput is an input type that accepts VirtualNodeSpecServiceDiscoveryAwsCloudMap and VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput values.
// You can construct a concrete instance of `VirtualNodeSpecServiceDiscoveryAwsCloudMapInput` via:
//
//          VirtualNodeSpecServiceDiscoveryAwsCloudMap{ "key": VirtualNodeSpecServiceDiscoveryAwsCloudArgs{...} }
type VirtualNodeSpecServiceDiscoveryAwsCloudMapInput interface {
	pulumi.Input

	ToVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput
	ToVirtualNodeSpecServiceDiscoveryAwsCloudMapOutputWithContext(context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput
}

type VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs struct {
	// A string map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
	Attributes pulumi.StringMapInput `pulumi:"attributes"`
	// The name of the AWS Cloud Map namespace to use.
	// Use the `servicediscovery.HttpNamespace` resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// The name of the AWS Cloud Map service to use. Use the `servicediscovery.Service` resource to configure a Cloud Map service. Must be between 1 and 1024 characters in length.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryAwsCloudMap)(nil)).Elem()
}

func (i VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryAwsCloudMapOutputWithContext(context.Background())
}

func (i VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput)
}

func (i VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput).ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(ctx)
}

// VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrInput is an input type that accepts VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs, VirtualNodeSpecServiceDiscoveryAwsCloudMapPtr and VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrInput` via:
//
//          VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput
	ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput
}

type virtualNodeSpecServiceDiscoveryAwsCloudMapPtrType VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs

func VirtualNodeSpecServiceDiscoveryAwsCloudMapPtr(v *VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrInput {
	return (*virtualNodeSpecServiceDiscoveryAwsCloudMapPtrType)(v)
}

func (*virtualNodeSpecServiceDiscoveryAwsCloudMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecServiceDiscoveryAwsCloudMap)(nil)).Elem()
}

func (i *virtualNodeSpecServiceDiscoveryAwsCloudMapPtrType) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecServiceDiscoveryAwsCloudMapPtrType) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput)
}

type VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryAwsCloudMap)(nil)).Elem()
}

func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return o.ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecServiceDiscoveryAwsCloudMap) *VirtualNodeSpecServiceDiscoveryAwsCloudMap {
		return &v
	}).(VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput)
}

// A string map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNodeSpecServiceDiscoveryAwsCloudMap) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

// The name of the AWS Cloud Map namespace to use.
// Use the `servicediscovery.HttpNamespace` resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecServiceDiscoveryAwsCloudMap) string { return v.NamespaceName }).(pulumi.StringOutput)
}

// The name of the AWS Cloud Map service to use. Use the `servicediscovery.Service` resource to configure a Cloud Map service. Must be between 1 and 1024 characters in length.
func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecServiceDiscoveryAwsCloudMap) string { return v.ServiceName }).(pulumi.StringOutput)
}

type VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecServiceDiscoveryAwsCloudMap)(nil)).Elem()
}

func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput) Elem() VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscoveryAwsCloudMap) VirtualNodeSpecServiceDiscoveryAwsCloudMap {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecServiceDiscoveryAwsCloudMap
		return ret
	}).(VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput)
}

// A string map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscoveryAwsCloudMap) map[string]string {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.StringMapOutput)
}

// The name of the AWS Cloud Map namespace to use.
// Use the `servicediscovery.HttpNamespace` resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput) NamespaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscoveryAwsCloudMap) *string {
		if v == nil {
			return nil
		}
		return &v.NamespaceName
	}).(pulumi.StringPtrOutput)
}

// The name of the AWS Cloud Map service to use. Use the `servicediscovery.Service` resource to configure a Cloud Map service. Must be between 1 and 1024 characters in length.
func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscoveryAwsCloudMap) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecServiceDiscoveryDns struct {
	// The DNS host name for your virtual node.
	Hostname string `pulumi:"hostname"`
}

// VirtualNodeSpecServiceDiscoveryDnsInput is an input type that accepts VirtualNodeSpecServiceDiscoveryDnsArgs and VirtualNodeSpecServiceDiscoveryDnsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecServiceDiscoveryDnsInput` via:
//
//          VirtualNodeSpecServiceDiscoveryDnsArgs{...}
type VirtualNodeSpecServiceDiscoveryDnsInput interface {
	pulumi.Input

	ToVirtualNodeSpecServiceDiscoveryDnsOutput() VirtualNodeSpecServiceDiscoveryDnsOutput
	ToVirtualNodeSpecServiceDiscoveryDnsOutputWithContext(context.Context) VirtualNodeSpecServiceDiscoveryDnsOutput
}

type VirtualNodeSpecServiceDiscoveryDnsArgs struct {
	// The DNS host name for your virtual node.
	Hostname pulumi.StringInput `pulumi:"hostname"`
}

func (VirtualNodeSpecServiceDiscoveryDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryDns)(nil)).Elem()
}

func (i VirtualNodeSpecServiceDiscoveryDnsArgs) ToVirtualNodeSpecServiceDiscoveryDnsOutput() VirtualNodeSpecServiceDiscoveryDnsOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryDnsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecServiceDiscoveryDnsArgs) ToVirtualNodeSpecServiceDiscoveryDnsOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryDnsOutput)
}

func (i VirtualNodeSpecServiceDiscoveryDnsArgs) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutput() VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecServiceDiscoveryDnsArgs) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryDnsOutput).ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecServiceDiscoveryDnsPtrInput is an input type that accepts VirtualNodeSpecServiceDiscoveryDnsArgs, VirtualNodeSpecServiceDiscoveryDnsPtr and VirtualNodeSpecServiceDiscoveryDnsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecServiceDiscoveryDnsPtrInput` via:
//
//          VirtualNodeSpecServiceDiscoveryDnsArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecServiceDiscoveryDnsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecServiceDiscoveryDnsPtrOutput() VirtualNodeSpecServiceDiscoveryDnsPtrOutput
	ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(context.Context) VirtualNodeSpecServiceDiscoveryDnsPtrOutput
}

type virtualNodeSpecServiceDiscoveryDnsPtrType VirtualNodeSpecServiceDiscoveryDnsArgs

func VirtualNodeSpecServiceDiscoveryDnsPtr(v *VirtualNodeSpecServiceDiscoveryDnsArgs) VirtualNodeSpecServiceDiscoveryDnsPtrInput {
	return (*virtualNodeSpecServiceDiscoveryDnsPtrType)(v)
}

func (*virtualNodeSpecServiceDiscoveryDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecServiceDiscoveryDns)(nil)).Elem()
}

func (i *virtualNodeSpecServiceDiscoveryDnsPtrType) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutput() VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecServiceDiscoveryDnsPtrType) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryDnsPtrOutput)
}

type VirtualNodeSpecServiceDiscoveryDnsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecServiceDiscoveryDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryDns)(nil)).Elem()
}

func (o VirtualNodeSpecServiceDiscoveryDnsOutput) ToVirtualNodeSpecServiceDiscoveryDnsOutput() VirtualNodeSpecServiceDiscoveryDnsOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryDnsOutput) ToVirtualNodeSpecServiceDiscoveryDnsOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryDnsOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryDnsOutput) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutput() VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return o.ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecServiceDiscoveryDnsOutput) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecServiceDiscoveryDns) *VirtualNodeSpecServiceDiscoveryDns {
		return &v
	}).(VirtualNodeSpecServiceDiscoveryDnsPtrOutput)
}

// The DNS host name for your virtual node.
func (o VirtualNodeSpecServiceDiscoveryDnsOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecServiceDiscoveryDns) string { return v.Hostname }).(pulumi.StringOutput)
}

type VirtualNodeSpecServiceDiscoveryDnsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecServiceDiscoveryDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecServiceDiscoveryDns)(nil)).Elem()
}

func (o VirtualNodeSpecServiceDiscoveryDnsPtrOutput) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutput() VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryDnsPtrOutput) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryDnsPtrOutput) Elem() VirtualNodeSpecServiceDiscoveryDnsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscoveryDns) VirtualNodeSpecServiceDiscoveryDns {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecServiceDiscoveryDns
		return ret
	}).(VirtualNodeSpecServiceDiscoveryDnsOutput)
}

// The DNS host name for your virtual node.
func (o VirtualNodeSpecServiceDiscoveryDnsPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscoveryDns) *string {
		if v == nil {
			return nil
		}
		return &v.Hostname
	}).(pulumi.StringPtrOutput)
}

type VirtualRouterSpec struct {
	// The listeners that the virtual router is expected to receive inbound traffic from.
	// Currently only one listener is supported per virtual router.
	Listener VirtualRouterSpecListener `pulumi:"listener"`
}

// VirtualRouterSpecInput is an input type that accepts VirtualRouterSpecArgs and VirtualRouterSpecOutput values.
// You can construct a concrete instance of `VirtualRouterSpecInput` via:
//
//          VirtualRouterSpecArgs{...}
type VirtualRouterSpecInput interface {
	pulumi.Input

	ToVirtualRouterSpecOutput() VirtualRouterSpecOutput
	ToVirtualRouterSpecOutputWithContext(context.Context) VirtualRouterSpecOutput
}

type VirtualRouterSpecArgs struct {
	// The listeners that the virtual router is expected to receive inbound traffic from.
	// Currently only one listener is supported per virtual router.
	Listener VirtualRouterSpecListenerInput `pulumi:"listener"`
}

func (VirtualRouterSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterSpec)(nil)).Elem()
}

func (i VirtualRouterSpecArgs) ToVirtualRouterSpecOutput() VirtualRouterSpecOutput {
	return i.ToVirtualRouterSpecOutputWithContext(context.Background())
}

func (i VirtualRouterSpecArgs) ToVirtualRouterSpecOutputWithContext(ctx context.Context) VirtualRouterSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecOutput)
}

func (i VirtualRouterSpecArgs) ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput {
	return i.ToVirtualRouterSpecPtrOutputWithContext(context.Background())
}

func (i VirtualRouterSpecArgs) ToVirtualRouterSpecPtrOutputWithContext(ctx context.Context) VirtualRouterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecOutput).ToVirtualRouterSpecPtrOutputWithContext(ctx)
}

// VirtualRouterSpecPtrInput is an input type that accepts VirtualRouterSpecArgs, VirtualRouterSpecPtr and VirtualRouterSpecPtrOutput values.
// You can construct a concrete instance of `VirtualRouterSpecPtrInput` via:
//
//          VirtualRouterSpecArgs{...}
//
//  or:
//
//          nil
type VirtualRouterSpecPtrInput interface {
	pulumi.Input

	ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput
	ToVirtualRouterSpecPtrOutputWithContext(context.Context) VirtualRouterSpecPtrOutput
}

type virtualRouterSpecPtrType VirtualRouterSpecArgs

func VirtualRouterSpecPtr(v *VirtualRouterSpecArgs) VirtualRouterSpecPtrInput {
	return (*virtualRouterSpecPtrType)(v)
}

func (*virtualRouterSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterSpec)(nil)).Elem()
}

func (i *virtualRouterSpecPtrType) ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput {
	return i.ToVirtualRouterSpecPtrOutputWithContext(context.Background())
}

func (i *virtualRouterSpecPtrType) ToVirtualRouterSpecPtrOutputWithContext(ctx context.Context) VirtualRouterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecPtrOutput)
}

type VirtualRouterSpecOutput struct{ *pulumi.OutputState }

func (VirtualRouterSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterSpec)(nil)).Elem()
}

func (o VirtualRouterSpecOutput) ToVirtualRouterSpecOutput() VirtualRouterSpecOutput {
	return o
}

func (o VirtualRouterSpecOutput) ToVirtualRouterSpecOutputWithContext(ctx context.Context) VirtualRouterSpecOutput {
	return o
}

func (o VirtualRouterSpecOutput) ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput {
	return o.ToVirtualRouterSpecPtrOutputWithContext(context.Background())
}

func (o VirtualRouterSpecOutput) ToVirtualRouterSpecPtrOutputWithContext(ctx context.Context) VirtualRouterSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualRouterSpec) *VirtualRouterSpec {
		return &v
	}).(VirtualRouterSpecPtrOutput)
}

// The listeners that the virtual router is expected to receive inbound traffic from.
// Currently only one listener is supported per virtual router.
func (o VirtualRouterSpecOutput) Listener() VirtualRouterSpecListenerOutput {
	return o.ApplyT(func(v VirtualRouterSpec) VirtualRouterSpecListener { return v.Listener }).(VirtualRouterSpecListenerOutput)
}

type VirtualRouterSpecPtrOutput struct{ *pulumi.OutputState }

func (VirtualRouterSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterSpec)(nil)).Elem()
}

func (o VirtualRouterSpecPtrOutput) ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput {
	return o
}

func (o VirtualRouterSpecPtrOutput) ToVirtualRouterSpecPtrOutputWithContext(ctx context.Context) VirtualRouterSpecPtrOutput {
	return o
}

func (o VirtualRouterSpecPtrOutput) Elem() VirtualRouterSpecOutput {
	return o.ApplyT(func(v *VirtualRouterSpec) VirtualRouterSpec {
		if v != nil {
			return *v
		}
		var ret VirtualRouterSpec
		return ret
	}).(VirtualRouterSpecOutput)
}

// The listeners that the virtual router is expected to receive inbound traffic from.
// Currently only one listener is supported per virtual router.
func (o VirtualRouterSpecPtrOutput) Listener() VirtualRouterSpecListenerPtrOutput {
	return o.ApplyT(func(v *VirtualRouterSpec) *VirtualRouterSpecListener {
		if v == nil {
			return nil
		}
		return &v.Listener
	}).(VirtualRouterSpecListenerPtrOutput)
}

type VirtualRouterSpecListener struct {
	// The port mapping information for the listener.
	PortMapping VirtualRouterSpecListenerPortMapping `pulumi:"portMapping"`
}

// VirtualRouterSpecListenerInput is an input type that accepts VirtualRouterSpecListenerArgs and VirtualRouterSpecListenerOutput values.
// You can construct a concrete instance of `VirtualRouterSpecListenerInput` via:
//
//          VirtualRouterSpecListenerArgs{...}
type VirtualRouterSpecListenerInput interface {
	pulumi.Input

	ToVirtualRouterSpecListenerOutput() VirtualRouterSpecListenerOutput
	ToVirtualRouterSpecListenerOutputWithContext(context.Context) VirtualRouterSpecListenerOutput
}

type VirtualRouterSpecListenerArgs struct {
	// The port mapping information for the listener.
	PortMapping VirtualRouterSpecListenerPortMappingInput `pulumi:"portMapping"`
}

func (VirtualRouterSpecListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterSpecListener)(nil)).Elem()
}

func (i VirtualRouterSpecListenerArgs) ToVirtualRouterSpecListenerOutput() VirtualRouterSpecListenerOutput {
	return i.ToVirtualRouterSpecListenerOutputWithContext(context.Background())
}

func (i VirtualRouterSpecListenerArgs) ToVirtualRouterSpecListenerOutputWithContext(ctx context.Context) VirtualRouterSpecListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecListenerOutput)
}

func (i VirtualRouterSpecListenerArgs) ToVirtualRouterSpecListenerPtrOutput() VirtualRouterSpecListenerPtrOutput {
	return i.ToVirtualRouterSpecListenerPtrOutputWithContext(context.Background())
}

func (i VirtualRouterSpecListenerArgs) ToVirtualRouterSpecListenerPtrOutputWithContext(ctx context.Context) VirtualRouterSpecListenerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecListenerOutput).ToVirtualRouterSpecListenerPtrOutputWithContext(ctx)
}

// VirtualRouterSpecListenerPtrInput is an input type that accepts VirtualRouterSpecListenerArgs, VirtualRouterSpecListenerPtr and VirtualRouterSpecListenerPtrOutput values.
// You can construct a concrete instance of `VirtualRouterSpecListenerPtrInput` via:
//
//          VirtualRouterSpecListenerArgs{...}
//
//  or:
//
//          nil
type VirtualRouterSpecListenerPtrInput interface {
	pulumi.Input

	ToVirtualRouterSpecListenerPtrOutput() VirtualRouterSpecListenerPtrOutput
	ToVirtualRouterSpecListenerPtrOutputWithContext(context.Context) VirtualRouterSpecListenerPtrOutput
}

type virtualRouterSpecListenerPtrType VirtualRouterSpecListenerArgs

func VirtualRouterSpecListenerPtr(v *VirtualRouterSpecListenerArgs) VirtualRouterSpecListenerPtrInput {
	return (*virtualRouterSpecListenerPtrType)(v)
}

func (*virtualRouterSpecListenerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterSpecListener)(nil)).Elem()
}

func (i *virtualRouterSpecListenerPtrType) ToVirtualRouterSpecListenerPtrOutput() VirtualRouterSpecListenerPtrOutput {
	return i.ToVirtualRouterSpecListenerPtrOutputWithContext(context.Background())
}

func (i *virtualRouterSpecListenerPtrType) ToVirtualRouterSpecListenerPtrOutputWithContext(ctx context.Context) VirtualRouterSpecListenerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecListenerPtrOutput)
}

type VirtualRouterSpecListenerOutput struct{ *pulumi.OutputState }

func (VirtualRouterSpecListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterSpecListener)(nil)).Elem()
}

func (o VirtualRouterSpecListenerOutput) ToVirtualRouterSpecListenerOutput() VirtualRouterSpecListenerOutput {
	return o
}

func (o VirtualRouterSpecListenerOutput) ToVirtualRouterSpecListenerOutputWithContext(ctx context.Context) VirtualRouterSpecListenerOutput {
	return o
}

func (o VirtualRouterSpecListenerOutput) ToVirtualRouterSpecListenerPtrOutput() VirtualRouterSpecListenerPtrOutput {
	return o.ToVirtualRouterSpecListenerPtrOutputWithContext(context.Background())
}

func (o VirtualRouterSpecListenerOutput) ToVirtualRouterSpecListenerPtrOutputWithContext(ctx context.Context) VirtualRouterSpecListenerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualRouterSpecListener) *VirtualRouterSpecListener {
		return &v
	}).(VirtualRouterSpecListenerPtrOutput)
}

// The port mapping information for the listener.
func (o VirtualRouterSpecListenerOutput) PortMapping() VirtualRouterSpecListenerPortMappingOutput {
	return o.ApplyT(func(v VirtualRouterSpecListener) VirtualRouterSpecListenerPortMapping { return v.PortMapping }).(VirtualRouterSpecListenerPortMappingOutput)
}

type VirtualRouterSpecListenerPtrOutput struct{ *pulumi.OutputState }

func (VirtualRouterSpecListenerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterSpecListener)(nil)).Elem()
}

func (o VirtualRouterSpecListenerPtrOutput) ToVirtualRouterSpecListenerPtrOutput() VirtualRouterSpecListenerPtrOutput {
	return o
}

func (o VirtualRouterSpecListenerPtrOutput) ToVirtualRouterSpecListenerPtrOutputWithContext(ctx context.Context) VirtualRouterSpecListenerPtrOutput {
	return o
}

func (o VirtualRouterSpecListenerPtrOutput) Elem() VirtualRouterSpecListenerOutput {
	return o.ApplyT(func(v *VirtualRouterSpecListener) VirtualRouterSpecListener {
		if v != nil {
			return *v
		}
		var ret VirtualRouterSpecListener
		return ret
	}).(VirtualRouterSpecListenerOutput)
}

// The port mapping information for the listener.
func (o VirtualRouterSpecListenerPtrOutput) PortMapping() VirtualRouterSpecListenerPortMappingPtrOutput {
	return o.ApplyT(func(v *VirtualRouterSpecListener) *VirtualRouterSpecListenerPortMapping {
		if v == nil {
			return nil
		}
		return &v.PortMapping
	}).(VirtualRouterSpecListenerPortMappingPtrOutput)
}

type VirtualRouterSpecListenerPortMapping struct {
	// The port used for the port mapping.
	Port int `pulumi:"port"`
	// The protocol used for the port mapping. Valid values are `http`,`http2`, `tcp` and `grpc`.
	Protocol string `pulumi:"protocol"`
}

// VirtualRouterSpecListenerPortMappingInput is an input type that accepts VirtualRouterSpecListenerPortMappingArgs and VirtualRouterSpecListenerPortMappingOutput values.
// You can construct a concrete instance of `VirtualRouterSpecListenerPortMappingInput` via:
//
//          VirtualRouterSpecListenerPortMappingArgs{...}
type VirtualRouterSpecListenerPortMappingInput interface {
	pulumi.Input

	ToVirtualRouterSpecListenerPortMappingOutput() VirtualRouterSpecListenerPortMappingOutput
	ToVirtualRouterSpecListenerPortMappingOutputWithContext(context.Context) VirtualRouterSpecListenerPortMappingOutput
}

type VirtualRouterSpecListenerPortMappingArgs struct {
	// The port used for the port mapping.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol used for the port mapping. Valid values are `http`,`http2`, `tcp` and `grpc`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (VirtualRouterSpecListenerPortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterSpecListenerPortMapping)(nil)).Elem()
}

func (i VirtualRouterSpecListenerPortMappingArgs) ToVirtualRouterSpecListenerPortMappingOutput() VirtualRouterSpecListenerPortMappingOutput {
	return i.ToVirtualRouterSpecListenerPortMappingOutputWithContext(context.Background())
}

func (i VirtualRouterSpecListenerPortMappingArgs) ToVirtualRouterSpecListenerPortMappingOutputWithContext(ctx context.Context) VirtualRouterSpecListenerPortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecListenerPortMappingOutput)
}

func (i VirtualRouterSpecListenerPortMappingArgs) ToVirtualRouterSpecListenerPortMappingPtrOutput() VirtualRouterSpecListenerPortMappingPtrOutput {
	return i.ToVirtualRouterSpecListenerPortMappingPtrOutputWithContext(context.Background())
}

func (i VirtualRouterSpecListenerPortMappingArgs) ToVirtualRouterSpecListenerPortMappingPtrOutputWithContext(ctx context.Context) VirtualRouterSpecListenerPortMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecListenerPortMappingOutput).ToVirtualRouterSpecListenerPortMappingPtrOutputWithContext(ctx)
}

// VirtualRouterSpecListenerPortMappingPtrInput is an input type that accepts VirtualRouterSpecListenerPortMappingArgs, VirtualRouterSpecListenerPortMappingPtr and VirtualRouterSpecListenerPortMappingPtrOutput values.
// You can construct a concrete instance of `VirtualRouterSpecListenerPortMappingPtrInput` via:
//
//          VirtualRouterSpecListenerPortMappingArgs{...}
//
//  or:
//
//          nil
type VirtualRouterSpecListenerPortMappingPtrInput interface {
	pulumi.Input

	ToVirtualRouterSpecListenerPortMappingPtrOutput() VirtualRouterSpecListenerPortMappingPtrOutput
	ToVirtualRouterSpecListenerPortMappingPtrOutputWithContext(context.Context) VirtualRouterSpecListenerPortMappingPtrOutput
}

type virtualRouterSpecListenerPortMappingPtrType VirtualRouterSpecListenerPortMappingArgs

func VirtualRouterSpecListenerPortMappingPtr(v *VirtualRouterSpecListenerPortMappingArgs) VirtualRouterSpecListenerPortMappingPtrInput {
	return (*virtualRouterSpecListenerPortMappingPtrType)(v)
}

func (*virtualRouterSpecListenerPortMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterSpecListenerPortMapping)(nil)).Elem()
}

func (i *virtualRouterSpecListenerPortMappingPtrType) ToVirtualRouterSpecListenerPortMappingPtrOutput() VirtualRouterSpecListenerPortMappingPtrOutput {
	return i.ToVirtualRouterSpecListenerPortMappingPtrOutputWithContext(context.Background())
}

func (i *virtualRouterSpecListenerPortMappingPtrType) ToVirtualRouterSpecListenerPortMappingPtrOutputWithContext(ctx context.Context) VirtualRouterSpecListenerPortMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecListenerPortMappingPtrOutput)
}

type VirtualRouterSpecListenerPortMappingOutput struct{ *pulumi.OutputState }

func (VirtualRouterSpecListenerPortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterSpecListenerPortMapping)(nil)).Elem()
}

func (o VirtualRouterSpecListenerPortMappingOutput) ToVirtualRouterSpecListenerPortMappingOutput() VirtualRouterSpecListenerPortMappingOutput {
	return o
}

func (o VirtualRouterSpecListenerPortMappingOutput) ToVirtualRouterSpecListenerPortMappingOutputWithContext(ctx context.Context) VirtualRouterSpecListenerPortMappingOutput {
	return o
}

func (o VirtualRouterSpecListenerPortMappingOutput) ToVirtualRouterSpecListenerPortMappingPtrOutput() VirtualRouterSpecListenerPortMappingPtrOutput {
	return o.ToVirtualRouterSpecListenerPortMappingPtrOutputWithContext(context.Background())
}

func (o VirtualRouterSpecListenerPortMappingOutput) ToVirtualRouterSpecListenerPortMappingPtrOutputWithContext(ctx context.Context) VirtualRouterSpecListenerPortMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualRouterSpecListenerPortMapping) *VirtualRouterSpecListenerPortMapping {
		return &v
	}).(VirtualRouterSpecListenerPortMappingPtrOutput)
}

// The port used for the port mapping.
func (o VirtualRouterSpecListenerPortMappingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualRouterSpecListenerPortMapping) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol used for the port mapping. Valid values are `http`,`http2`, `tcp` and `grpc`.
func (o VirtualRouterSpecListenerPortMappingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualRouterSpecListenerPortMapping) string { return v.Protocol }).(pulumi.StringOutput)
}

type VirtualRouterSpecListenerPortMappingPtrOutput struct{ *pulumi.OutputState }

func (VirtualRouterSpecListenerPortMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterSpecListenerPortMapping)(nil)).Elem()
}

func (o VirtualRouterSpecListenerPortMappingPtrOutput) ToVirtualRouterSpecListenerPortMappingPtrOutput() VirtualRouterSpecListenerPortMappingPtrOutput {
	return o
}

func (o VirtualRouterSpecListenerPortMappingPtrOutput) ToVirtualRouterSpecListenerPortMappingPtrOutputWithContext(ctx context.Context) VirtualRouterSpecListenerPortMappingPtrOutput {
	return o
}

func (o VirtualRouterSpecListenerPortMappingPtrOutput) Elem() VirtualRouterSpecListenerPortMappingOutput {
	return o.ApplyT(func(v *VirtualRouterSpecListenerPortMapping) VirtualRouterSpecListenerPortMapping {
		if v != nil {
			return *v
		}
		var ret VirtualRouterSpecListenerPortMapping
		return ret
	}).(VirtualRouterSpecListenerPortMappingOutput)
}

// The port used for the port mapping.
func (o VirtualRouterSpecListenerPortMappingPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualRouterSpecListenerPortMapping) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The protocol used for the port mapping. Valid values are `http`,`http2`, `tcp` and `grpc`.
func (o VirtualRouterSpecListenerPortMappingPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualRouterSpecListenerPortMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

type VirtualServiceSpec struct {
	// The App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.
	Provider *VirtualServiceSpecProvider `pulumi:"provider"`
}

// VirtualServiceSpecInput is an input type that accepts VirtualServiceSpecArgs and VirtualServiceSpecOutput values.
// You can construct a concrete instance of `VirtualServiceSpecInput` via:
//
//          VirtualServiceSpecArgs{...}
type VirtualServiceSpecInput interface {
	pulumi.Input

	ToVirtualServiceSpecOutput() VirtualServiceSpecOutput
	ToVirtualServiceSpecOutputWithContext(context.Context) VirtualServiceSpecOutput
}

type VirtualServiceSpecArgs struct {
	// The App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.
	Provider VirtualServiceSpecProviderPtrInput `pulumi:"provider"`
}

func (VirtualServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpec)(nil)).Elem()
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecOutput() VirtualServiceSpecOutput {
	return i.ToVirtualServiceSpecOutputWithContext(context.Background())
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecOutputWithContext(ctx context.Context) VirtualServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecOutput)
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return i.ToVirtualServiceSpecPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecOutput).ToVirtualServiceSpecPtrOutputWithContext(ctx)
}

// VirtualServiceSpecPtrInput is an input type that accepts VirtualServiceSpecArgs, VirtualServiceSpecPtr and VirtualServiceSpecPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecPtrInput` via:
//
//          VirtualServiceSpecArgs{...}
//
//  or:
//
//          nil
type VirtualServiceSpecPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput
	ToVirtualServiceSpecPtrOutputWithContext(context.Context) VirtualServiceSpecPtrOutput
}

type virtualServiceSpecPtrType VirtualServiceSpecArgs

func VirtualServiceSpecPtr(v *VirtualServiceSpecArgs) VirtualServiceSpecPtrInput {
	return (*virtualServiceSpecPtrType)(v)
}

func (*virtualServiceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpec)(nil)).Elem()
}

func (i *virtualServiceSpecPtrType) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return i.ToVirtualServiceSpecPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecPtrType) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecPtrOutput)
}

type VirtualServiceSpecOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpec)(nil)).Elem()
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecOutput() VirtualServiceSpecOutput {
	return o
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecOutputWithContext(ctx context.Context) VirtualServiceSpecOutput {
	return o
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return o.ToVirtualServiceSpecPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpec) *VirtualServiceSpec {
		return &v
	}).(VirtualServiceSpecPtrOutput)
}

// The App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.
func (o VirtualServiceSpecOutput) Provider() VirtualServiceSpecProviderPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpec) *VirtualServiceSpecProvider { return v.Provider }).(VirtualServiceSpecProviderPtrOutput)
}

type VirtualServiceSpecPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpec)(nil)).Elem()
}

func (o VirtualServiceSpecPtrOutput) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return o
}

func (o VirtualServiceSpecPtrOutput) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return o
}

func (o VirtualServiceSpecPtrOutput) Elem() VirtualServiceSpecOutput {
	return o.ApplyT(func(v *VirtualServiceSpec) VirtualServiceSpec {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpec
		return ret
	}).(VirtualServiceSpecOutput)
}

// The App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.
func (o VirtualServiceSpecPtrOutput) Provider() VirtualServiceSpecProviderPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpec) *VirtualServiceSpecProvider {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(VirtualServiceSpecProviderPtrOutput)
}

type VirtualServiceSpecProvider struct {
	// The virtual node associated with a virtual service.
	VirtualNode *VirtualServiceSpecProviderVirtualNode `pulumi:"virtualNode"`
	// The virtual router associated with a virtual service.
	VirtualRouter *VirtualServiceSpecProviderVirtualRouter `pulumi:"virtualRouter"`
}

// VirtualServiceSpecProviderInput is an input type that accepts VirtualServiceSpecProviderArgs and VirtualServiceSpecProviderOutput values.
// You can construct a concrete instance of `VirtualServiceSpecProviderInput` via:
//
//          VirtualServiceSpecProviderArgs{...}
type VirtualServiceSpecProviderInput interface {
	pulumi.Input

	ToVirtualServiceSpecProviderOutput() VirtualServiceSpecProviderOutput
	ToVirtualServiceSpecProviderOutputWithContext(context.Context) VirtualServiceSpecProviderOutput
}

type VirtualServiceSpecProviderArgs struct {
	// The virtual node associated with a virtual service.
	VirtualNode VirtualServiceSpecProviderVirtualNodePtrInput `pulumi:"virtualNode"`
	// The virtual router associated with a virtual service.
	VirtualRouter VirtualServiceSpecProviderVirtualRouterPtrInput `pulumi:"virtualRouter"`
}

func (VirtualServiceSpecProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecProvider)(nil)).Elem()
}

func (i VirtualServiceSpecProviderArgs) ToVirtualServiceSpecProviderOutput() VirtualServiceSpecProviderOutput {
	return i.ToVirtualServiceSpecProviderOutputWithContext(context.Background())
}

func (i VirtualServiceSpecProviderArgs) ToVirtualServiceSpecProviderOutputWithContext(ctx context.Context) VirtualServiceSpecProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderOutput)
}

func (i VirtualServiceSpecProviderArgs) ToVirtualServiceSpecProviderPtrOutput() VirtualServiceSpecProviderPtrOutput {
	return i.ToVirtualServiceSpecProviderPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecProviderArgs) ToVirtualServiceSpecProviderPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderOutput).ToVirtualServiceSpecProviderPtrOutputWithContext(ctx)
}

// VirtualServiceSpecProviderPtrInput is an input type that accepts VirtualServiceSpecProviderArgs, VirtualServiceSpecProviderPtr and VirtualServiceSpecProviderPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecProviderPtrInput` via:
//
//          VirtualServiceSpecProviderArgs{...}
//
//  or:
//
//          nil
type VirtualServiceSpecProviderPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecProviderPtrOutput() VirtualServiceSpecProviderPtrOutput
	ToVirtualServiceSpecProviderPtrOutputWithContext(context.Context) VirtualServiceSpecProviderPtrOutput
}

type virtualServiceSpecProviderPtrType VirtualServiceSpecProviderArgs

func VirtualServiceSpecProviderPtr(v *VirtualServiceSpecProviderArgs) VirtualServiceSpecProviderPtrInput {
	return (*virtualServiceSpecProviderPtrType)(v)
}

func (*virtualServiceSpecProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecProvider)(nil)).Elem()
}

func (i *virtualServiceSpecProviderPtrType) ToVirtualServiceSpecProviderPtrOutput() VirtualServiceSpecProviderPtrOutput {
	return i.ToVirtualServiceSpecProviderPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecProviderPtrType) ToVirtualServiceSpecProviderPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderPtrOutput)
}

type VirtualServiceSpecProviderOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecProvider)(nil)).Elem()
}

func (o VirtualServiceSpecProviderOutput) ToVirtualServiceSpecProviderOutput() VirtualServiceSpecProviderOutput {
	return o
}

func (o VirtualServiceSpecProviderOutput) ToVirtualServiceSpecProviderOutputWithContext(ctx context.Context) VirtualServiceSpecProviderOutput {
	return o
}

func (o VirtualServiceSpecProviderOutput) ToVirtualServiceSpecProviderPtrOutput() VirtualServiceSpecProviderPtrOutput {
	return o.ToVirtualServiceSpecProviderPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecProviderOutput) ToVirtualServiceSpecProviderPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecProvider) *VirtualServiceSpecProvider {
		return &v
	}).(VirtualServiceSpecProviderPtrOutput)
}

// The virtual node associated with a virtual service.
func (o VirtualServiceSpecProviderOutput) VirtualNode() VirtualServiceSpecProviderVirtualNodePtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecProvider) *VirtualServiceSpecProviderVirtualNode { return v.VirtualNode }).(VirtualServiceSpecProviderVirtualNodePtrOutput)
}

// The virtual router associated with a virtual service.
func (o VirtualServiceSpecProviderOutput) VirtualRouter() VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecProvider) *VirtualServiceSpecProviderVirtualRouter { return v.VirtualRouter }).(VirtualServiceSpecProviderVirtualRouterPtrOutput)
}

type VirtualServiceSpecProviderPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecProvider)(nil)).Elem()
}

func (o VirtualServiceSpecProviderPtrOutput) ToVirtualServiceSpecProviderPtrOutput() VirtualServiceSpecProviderPtrOutput {
	return o
}

func (o VirtualServiceSpecProviderPtrOutput) ToVirtualServiceSpecProviderPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderPtrOutput {
	return o
}

func (o VirtualServiceSpecProviderPtrOutput) Elem() VirtualServiceSpecProviderOutput {
	return o.ApplyT(func(v *VirtualServiceSpecProvider) VirtualServiceSpecProvider {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecProvider
		return ret
	}).(VirtualServiceSpecProviderOutput)
}

// The virtual node associated with a virtual service.
func (o VirtualServiceSpecProviderPtrOutput) VirtualNode() VirtualServiceSpecProviderVirtualNodePtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecProvider) *VirtualServiceSpecProviderVirtualNode {
		if v == nil {
			return nil
		}
		return v.VirtualNode
	}).(VirtualServiceSpecProviderVirtualNodePtrOutput)
}

// The virtual router associated with a virtual service.
func (o VirtualServiceSpecProviderPtrOutput) VirtualRouter() VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecProvider) *VirtualServiceSpecProviderVirtualRouter {
		if v == nil {
			return nil
		}
		return v.VirtualRouter
	}).(VirtualServiceSpecProviderVirtualRouterPtrOutput)
}

type VirtualServiceSpecProviderVirtualNode struct {
	// The name of the virtual node that is acting as a service provider. Must be between 1 and 255 characters in length.
	VirtualNodeName string `pulumi:"virtualNodeName"`
}

// VirtualServiceSpecProviderVirtualNodeInput is an input type that accepts VirtualServiceSpecProviderVirtualNodeArgs and VirtualServiceSpecProviderVirtualNodeOutput values.
// You can construct a concrete instance of `VirtualServiceSpecProviderVirtualNodeInput` via:
//
//          VirtualServiceSpecProviderVirtualNodeArgs{...}
type VirtualServiceSpecProviderVirtualNodeInput interface {
	pulumi.Input

	ToVirtualServiceSpecProviderVirtualNodeOutput() VirtualServiceSpecProviderVirtualNodeOutput
	ToVirtualServiceSpecProviderVirtualNodeOutputWithContext(context.Context) VirtualServiceSpecProviderVirtualNodeOutput
}

type VirtualServiceSpecProviderVirtualNodeArgs struct {
	// The name of the virtual node that is acting as a service provider. Must be between 1 and 255 characters in length.
	VirtualNodeName pulumi.StringInput `pulumi:"virtualNodeName"`
}

func (VirtualServiceSpecProviderVirtualNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (i VirtualServiceSpecProviderVirtualNodeArgs) ToVirtualServiceSpecProviderVirtualNodeOutput() VirtualServiceSpecProviderVirtualNodeOutput {
	return i.ToVirtualServiceSpecProviderVirtualNodeOutputWithContext(context.Background())
}

func (i VirtualServiceSpecProviderVirtualNodeArgs) ToVirtualServiceSpecProviderVirtualNodeOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderVirtualNodeOutput)
}

func (i VirtualServiceSpecProviderVirtualNodeArgs) ToVirtualServiceSpecProviderVirtualNodePtrOutput() VirtualServiceSpecProviderVirtualNodePtrOutput {
	return i.ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecProviderVirtualNodeArgs) ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualNodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderVirtualNodeOutput).ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(ctx)
}

// VirtualServiceSpecProviderVirtualNodePtrInput is an input type that accepts VirtualServiceSpecProviderVirtualNodeArgs, VirtualServiceSpecProviderVirtualNodePtr and VirtualServiceSpecProviderVirtualNodePtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecProviderVirtualNodePtrInput` via:
//
//          VirtualServiceSpecProviderVirtualNodeArgs{...}
//
//  or:
//
//          nil
type VirtualServiceSpecProviderVirtualNodePtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecProviderVirtualNodePtrOutput() VirtualServiceSpecProviderVirtualNodePtrOutput
	ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(context.Context) VirtualServiceSpecProviderVirtualNodePtrOutput
}

type virtualServiceSpecProviderVirtualNodePtrType VirtualServiceSpecProviderVirtualNodeArgs

func VirtualServiceSpecProviderVirtualNodePtr(v *VirtualServiceSpecProviderVirtualNodeArgs) VirtualServiceSpecProviderVirtualNodePtrInput {
	return (*virtualServiceSpecProviderVirtualNodePtrType)(v)
}

func (*virtualServiceSpecProviderVirtualNodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (i *virtualServiceSpecProviderVirtualNodePtrType) ToVirtualServiceSpecProviderVirtualNodePtrOutput() VirtualServiceSpecProviderVirtualNodePtrOutput {
	return i.ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecProviderVirtualNodePtrType) ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualNodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderVirtualNodePtrOutput)
}

type VirtualServiceSpecProviderVirtualNodeOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecProviderVirtualNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (o VirtualServiceSpecProviderVirtualNodeOutput) ToVirtualServiceSpecProviderVirtualNodeOutput() VirtualServiceSpecProviderVirtualNodeOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualNodeOutput) ToVirtualServiceSpecProviderVirtualNodeOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualNodeOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualNodeOutput) ToVirtualServiceSpecProviderVirtualNodePtrOutput() VirtualServiceSpecProviderVirtualNodePtrOutput {
	return o.ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecProviderVirtualNodeOutput) ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualNodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecProviderVirtualNode) *VirtualServiceSpecProviderVirtualNode {
		return &v
	}).(VirtualServiceSpecProviderVirtualNodePtrOutput)
}

// The name of the virtual node that is acting as a service provider. Must be between 1 and 255 characters in length.
func (o VirtualServiceSpecProviderVirtualNodeOutput) VirtualNodeName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualServiceSpecProviderVirtualNode) string { return v.VirtualNodeName }).(pulumi.StringOutput)
}

type VirtualServiceSpecProviderVirtualNodePtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecProviderVirtualNodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (o VirtualServiceSpecProviderVirtualNodePtrOutput) ToVirtualServiceSpecProviderVirtualNodePtrOutput() VirtualServiceSpecProviderVirtualNodePtrOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualNodePtrOutput) ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualNodePtrOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualNodePtrOutput) Elem() VirtualServiceSpecProviderVirtualNodeOutput {
	return o.ApplyT(func(v *VirtualServiceSpecProviderVirtualNode) VirtualServiceSpecProviderVirtualNode {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecProviderVirtualNode
		return ret
	}).(VirtualServiceSpecProviderVirtualNodeOutput)
}

// The name of the virtual node that is acting as a service provider. Must be between 1 and 255 characters in length.
func (o VirtualServiceSpecProviderVirtualNodePtrOutput) VirtualNodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecProviderVirtualNode) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualNodeName
	}).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecProviderVirtualRouter struct {
	// The name of the virtual router that is acting as a service provider. Must be between 1 and 255 characters in length.
	VirtualRouterName string `pulumi:"virtualRouterName"`
}

// VirtualServiceSpecProviderVirtualRouterInput is an input type that accepts VirtualServiceSpecProviderVirtualRouterArgs and VirtualServiceSpecProviderVirtualRouterOutput values.
// You can construct a concrete instance of `VirtualServiceSpecProviderVirtualRouterInput` via:
//
//          VirtualServiceSpecProviderVirtualRouterArgs{...}
type VirtualServiceSpecProviderVirtualRouterInput interface {
	pulumi.Input

	ToVirtualServiceSpecProviderVirtualRouterOutput() VirtualServiceSpecProviderVirtualRouterOutput
	ToVirtualServiceSpecProviderVirtualRouterOutputWithContext(context.Context) VirtualServiceSpecProviderVirtualRouterOutput
}

type VirtualServiceSpecProviderVirtualRouterArgs struct {
	// The name of the virtual router that is acting as a service provider. Must be between 1 and 255 characters in length.
	VirtualRouterName pulumi.StringInput `pulumi:"virtualRouterName"`
}

func (VirtualServiceSpecProviderVirtualRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (i VirtualServiceSpecProviderVirtualRouterArgs) ToVirtualServiceSpecProviderVirtualRouterOutput() VirtualServiceSpecProviderVirtualRouterOutput {
	return i.ToVirtualServiceSpecProviderVirtualRouterOutputWithContext(context.Background())
}

func (i VirtualServiceSpecProviderVirtualRouterArgs) ToVirtualServiceSpecProviderVirtualRouterOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderVirtualRouterOutput)
}

func (i VirtualServiceSpecProviderVirtualRouterArgs) ToVirtualServiceSpecProviderVirtualRouterPtrOutput() VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return i.ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecProviderVirtualRouterArgs) ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderVirtualRouterOutput).ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(ctx)
}

// VirtualServiceSpecProviderVirtualRouterPtrInput is an input type that accepts VirtualServiceSpecProviderVirtualRouterArgs, VirtualServiceSpecProviderVirtualRouterPtr and VirtualServiceSpecProviderVirtualRouterPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecProviderVirtualRouterPtrInput` via:
//
//          VirtualServiceSpecProviderVirtualRouterArgs{...}
//
//  or:
//
//          nil
type VirtualServiceSpecProviderVirtualRouterPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecProviderVirtualRouterPtrOutput() VirtualServiceSpecProviderVirtualRouterPtrOutput
	ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(context.Context) VirtualServiceSpecProviderVirtualRouterPtrOutput
}

type virtualServiceSpecProviderVirtualRouterPtrType VirtualServiceSpecProviderVirtualRouterArgs

func VirtualServiceSpecProviderVirtualRouterPtr(v *VirtualServiceSpecProviderVirtualRouterArgs) VirtualServiceSpecProviderVirtualRouterPtrInput {
	return (*virtualServiceSpecProviderVirtualRouterPtrType)(v)
}

func (*virtualServiceSpecProviderVirtualRouterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (i *virtualServiceSpecProviderVirtualRouterPtrType) ToVirtualServiceSpecProviderVirtualRouterPtrOutput() VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return i.ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecProviderVirtualRouterPtrType) ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderVirtualRouterPtrOutput)
}

type VirtualServiceSpecProviderVirtualRouterOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecProviderVirtualRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (o VirtualServiceSpecProviderVirtualRouterOutput) ToVirtualServiceSpecProviderVirtualRouterOutput() VirtualServiceSpecProviderVirtualRouterOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualRouterOutput) ToVirtualServiceSpecProviderVirtualRouterOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualRouterOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualRouterOutput) ToVirtualServiceSpecProviderVirtualRouterPtrOutput() VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return o.ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecProviderVirtualRouterOutput) ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecProviderVirtualRouter) *VirtualServiceSpecProviderVirtualRouter {
		return &v
	}).(VirtualServiceSpecProviderVirtualRouterPtrOutput)
}

// The name of the virtual router that is acting as a service provider. Must be between 1 and 255 characters in length.
func (o VirtualServiceSpecProviderVirtualRouterOutput) VirtualRouterName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualServiceSpecProviderVirtualRouter) string { return v.VirtualRouterName }).(pulumi.StringOutput)
}

type VirtualServiceSpecProviderVirtualRouterPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecProviderVirtualRouterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (o VirtualServiceSpecProviderVirtualRouterPtrOutput) ToVirtualServiceSpecProviderVirtualRouterPtrOutput() VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualRouterPtrOutput) ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualRouterPtrOutput) Elem() VirtualServiceSpecProviderVirtualRouterOutput {
	return o.ApplyT(func(v *VirtualServiceSpecProviderVirtualRouter) VirtualServiceSpecProviderVirtualRouter {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecProviderVirtualRouter
		return ret
	}).(VirtualServiceSpecProviderVirtualRouterOutput)
}

// The name of the virtual router that is acting as a service provider. Must be between 1 and 255 characters in length.
func (o VirtualServiceSpecProviderVirtualRouterPtrOutput) VirtualRouterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecProviderVirtualRouter) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualRouterName
	}).(pulumi.StringPtrOutput)
}

type GetMeshSpec struct {
	// The egress filter rules for the service mesh.
	EgressFilters []GetMeshSpecEgressFilter `pulumi:"egressFilters"`
}

// GetMeshSpecInput is an input type that accepts GetMeshSpecArgs and GetMeshSpecOutput values.
// You can construct a concrete instance of `GetMeshSpecInput` via:
//
//          GetMeshSpecArgs{...}
type GetMeshSpecInput interface {
	pulumi.Input

	ToGetMeshSpecOutput() GetMeshSpecOutput
	ToGetMeshSpecOutputWithContext(context.Context) GetMeshSpecOutput
}

type GetMeshSpecArgs struct {
	// The egress filter rules for the service mesh.
	EgressFilters GetMeshSpecEgressFilterArrayInput `pulumi:"egressFilters"`
}

func (GetMeshSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMeshSpec)(nil)).Elem()
}

func (i GetMeshSpecArgs) ToGetMeshSpecOutput() GetMeshSpecOutput {
	return i.ToGetMeshSpecOutputWithContext(context.Background())
}

func (i GetMeshSpecArgs) ToGetMeshSpecOutputWithContext(ctx context.Context) GetMeshSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMeshSpecOutput)
}

// GetMeshSpecArrayInput is an input type that accepts GetMeshSpecArray and GetMeshSpecArrayOutput values.
// You can construct a concrete instance of `GetMeshSpecArrayInput` via:
//
//          GetMeshSpecArray{ GetMeshSpecArgs{...} }
type GetMeshSpecArrayInput interface {
	pulumi.Input

	ToGetMeshSpecArrayOutput() GetMeshSpecArrayOutput
	ToGetMeshSpecArrayOutputWithContext(context.Context) GetMeshSpecArrayOutput
}

type GetMeshSpecArray []GetMeshSpecInput

func (GetMeshSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMeshSpec)(nil)).Elem()
}

func (i GetMeshSpecArray) ToGetMeshSpecArrayOutput() GetMeshSpecArrayOutput {
	return i.ToGetMeshSpecArrayOutputWithContext(context.Background())
}

func (i GetMeshSpecArray) ToGetMeshSpecArrayOutputWithContext(ctx context.Context) GetMeshSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMeshSpecArrayOutput)
}

type GetMeshSpecOutput struct{ *pulumi.OutputState }

func (GetMeshSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMeshSpec)(nil)).Elem()
}

func (o GetMeshSpecOutput) ToGetMeshSpecOutput() GetMeshSpecOutput {
	return o
}

func (o GetMeshSpecOutput) ToGetMeshSpecOutputWithContext(ctx context.Context) GetMeshSpecOutput {
	return o
}

// The egress filter rules for the service mesh.
func (o GetMeshSpecOutput) EgressFilters() GetMeshSpecEgressFilterArrayOutput {
	return o.ApplyT(func(v GetMeshSpec) []GetMeshSpecEgressFilter { return v.EgressFilters }).(GetMeshSpecEgressFilterArrayOutput)
}

type GetMeshSpecArrayOutput struct{ *pulumi.OutputState }

func (GetMeshSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMeshSpec)(nil)).Elem()
}

func (o GetMeshSpecArrayOutput) ToGetMeshSpecArrayOutput() GetMeshSpecArrayOutput {
	return o
}

func (o GetMeshSpecArrayOutput) ToGetMeshSpecArrayOutputWithContext(ctx context.Context) GetMeshSpecArrayOutput {
	return o
}

func (o GetMeshSpecArrayOutput) Index(i pulumi.IntInput) GetMeshSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMeshSpec {
		return vs[0].([]GetMeshSpec)[vs[1].(int)]
	}).(GetMeshSpecOutput)
}

type GetMeshSpecEgressFilter struct {
	// The egress filter type.
	Type string `pulumi:"type"`
}

// GetMeshSpecEgressFilterInput is an input type that accepts GetMeshSpecEgressFilterArgs and GetMeshSpecEgressFilterOutput values.
// You can construct a concrete instance of `GetMeshSpecEgressFilterInput` via:
//
//          GetMeshSpecEgressFilterArgs{...}
type GetMeshSpecEgressFilterInput interface {
	pulumi.Input

	ToGetMeshSpecEgressFilterOutput() GetMeshSpecEgressFilterOutput
	ToGetMeshSpecEgressFilterOutputWithContext(context.Context) GetMeshSpecEgressFilterOutput
}

type GetMeshSpecEgressFilterArgs struct {
	// The egress filter type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMeshSpecEgressFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMeshSpecEgressFilter)(nil)).Elem()
}

func (i GetMeshSpecEgressFilterArgs) ToGetMeshSpecEgressFilterOutput() GetMeshSpecEgressFilterOutput {
	return i.ToGetMeshSpecEgressFilterOutputWithContext(context.Background())
}

func (i GetMeshSpecEgressFilterArgs) ToGetMeshSpecEgressFilterOutputWithContext(ctx context.Context) GetMeshSpecEgressFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMeshSpecEgressFilterOutput)
}

// GetMeshSpecEgressFilterArrayInput is an input type that accepts GetMeshSpecEgressFilterArray and GetMeshSpecEgressFilterArrayOutput values.
// You can construct a concrete instance of `GetMeshSpecEgressFilterArrayInput` via:
//
//          GetMeshSpecEgressFilterArray{ GetMeshSpecEgressFilterArgs{...} }
type GetMeshSpecEgressFilterArrayInput interface {
	pulumi.Input

	ToGetMeshSpecEgressFilterArrayOutput() GetMeshSpecEgressFilterArrayOutput
	ToGetMeshSpecEgressFilterArrayOutputWithContext(context.Context) GetMeshSpecEgressFilterArrayOutput
}

type GetMeshSpecEgressFilterArray []GetMeshSpecEgressFilterInput

func (GetMeshSpecEgressFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMeshSpecEgressFilter)(nil)).Elem()
}

func (i GetMeshSpecEgressFilterArray) ToGetMeshSpecEgressFilterArrayOutput() GetMeshSpecEgressFilterArrayOutput {
	return i.ToGetMeshSpecEgressFilterArrayOutputWithContext(context.Background())
}

func (i GetMeshSpecEgressFilterArray) ToGetMeshSpecEgressFilterArrayOutputWithContext(ctx context.Context) GetMeshSpecEgressFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMeshSpecEgressFilterArrayOutput)
}

type GetMeshSpecEgressFilterOutput struct{ *pulumi.OutputState }

func (GetMeshSpecEgressFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMeshSpecEgressFilter)(nil)).Elem()
}

func (o GetMeshSpecEgressFilterOutput) ToGetMeshSpecEgressFilterOutput() GetMeshSpecEgressFilterOutput {
	return o
}

func (o GetMeshSpecEgressFilterOutput) ToGetMeshSpecEgressFilterOutputWithContext(ctx context.Context) GetMeshSpecEgressFilterOutput {
	return o
}

// The egress filter type.
func (o GetMeshSpecEgressFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMeshSpecEgressFilter) string { return v.Type }).(pulumi.StringOutput)
}

type GetMeshSpecEgressFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMeshSpecEgressFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMeshSpecEgressFilter)(nil)).Elem()
}

func (o GetMeshSpecEgressFilterArrayOutput) ToGetMeshSpecEgressFilterArrayOutput() GetMeshSpecEgressFilterArrayOutput {
	return o
}

func (o GetMeshSpecEgressFilterArrayOutput) ToGetMeshSpecEgressFilterArrayOutputWithContext(ctx context.Context) GetMeshSpecEgressFilterArrayOutput {
	return o
}

func (o GetMeshSpecEgressFilterArrayOutput) Index(i pulumi.IntInput) GetMeshSpecEgressFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMeshSpecEgressFilter {
		return vs[0].([]GetMeshSpecEgressFilter)[vs[1].(int)]
	}).(GetMeshSpecEgressFilterOutput)
}

type GetVirtualServiceSpec struct {
	// The App Mesh object that is acting as the provider for a virtual service.
	Providers []GetVirtualServiceSpecProvider `pulumi:"providers"`
}

// GetVirtualServiceSpecInput is an input type that accepts GetVirtualServiceSpecArgs and GetVirtualServiceSpecOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecInput` via:
//
//          GetVirtualServiceSpecArgs{...}
type GetVirtualServiceSpecInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecOutput() GetVirtualServiceSpecOutput
	ToGetVirtualServiceSpecOutputWithContext(context.Context) GetVirtualServiceSpecOutput
}

type GetVirtualServiceSpecArgs struct {
	// The App Mesh object that is acting as the provider for a virtual service.
	Providers GetVirtualServiceSpecProviderArrayInput `pulumi:"providers"`
}

func (GetVirtualServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpec)(nil)).Elem()
}

func (i GetVirtualServiceSpecArgs) ToGetVirtualServiceSpecOutput() GetVirtualServiceSpecOutput {
	return i.ToGetVirtualServiceSpecOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecArgs) ToGetVirtualServiceSpecOutputWithContext(ctx context.Context) GetVirtualServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecOutput)
}

// GetVirtualServiceSpecArrayInput is an input type that accepts GetVirtualServiceSpecArray and GetVirtualServiceSpecArrayOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecArrayInput` via:
//
//          GetVirtualServiceSpecArray{ GetVirtualServiceSpecArgs{...} }
type GetVirtualServiceSpecArrayInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecArrayOutput() GetVirtualServiceSpecArrayOutput
	ToGetVirtualServiceSpecArrayOutputWithContext(context.Context) GetVirtualServiceSpecArrayOutput
}

type GetVirtualServiceSpecArray []GetVirtualServiceSpecInput

func (GetVirtualServiceSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpec)(nil)).Elem()
}

func (i GetVirtualServiceSpecArray) ToGetVirtualServiceSpecArrayOutput() GetVirtualServiceSpecArrayOutput {
	return i.ToGetVirtualServiceSpecArrayOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecArray) ToGetVirtualServiceSpecArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecArrayOutput)
}

type GetVirtualServiceSpecOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpec)(nil)).Elem()
}

func (o GetVirtualServiceSpecOutput) ToGetVirtualServiceSpecOutput() GetVirtualServiceSpecOutput {
	return o
}

func (o GetVirtualServiceSpecOutput) ToGetVirtualServiceSpecOutputWithContext(ctx context.Context) GetVirtualServiceSpecOutput {
	return o
}

// The App Mesh object that is acting as the provider for a virtual service.
func (o GetVirtualServiceSpecOutput) Providers() GetVirtualServiceSpecProviderArrayOutput {
	return o.ApplyT(func(v GetVirtualServiceSpec) []GetVirtualServiceSpecProvider { return v.Providers }).(GetVirtualServiceSpecProviderArrayOutput)
}

type GetVirtualServiceSpecArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpec)(nil)).Elem()
}

func (o GetVirtualServiceSpecArrayOutput) ToGetVirtualServiceSpecArrayOutput() GetVirtualServiceSpecArrayOutput {
	return o
}

func (o GetVirtualServiceSpecArrayOutput) ToGetVirtualServiceSpecArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecArrayOutput {
	return o
}

func (o GetVirtualServiceSpecArrayOutput) Index(i pulumi.IntInput) GetVirtualServiceSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualServiceSpec {
		return vs[0].([]GetVirtualServiceSpec)[vs[1].(int)]
	}).(GetVirtualServiceSpecOutput)
}

type GetVirtualServiceSpecProvider struct {
	// The virtual node associated with the virtual service.
	VirtualNodes []GetVirtualServiceSpecProviderVirtualNode `pulumi:"virtualNodes"`
	// The virtual router associated with the virtual service.
	VirtualRouters []GetVirtualServiceSpecProviderVirtualRouter `pulumi:"virtualRouters"`
}

// GetVirtualServiceSpecProviderInput is an input type that accepts GetVirtualServiceSpecProviderArgs and GetVirtualServiceSpecProviderOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecProviderInput` via:
//
//          GetVirtualServiceSpecProviderArgs{...}
type GetVirtualServiceSpecProviderInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecProviderOutput() GetVirtualServiceSpecProviderOutput
	ToGetVirtualServiceSpecProviderOutputWithContext(context.Context) GetVirtualServiceSpecProviderOutput
}

type GetVirtualServiceSpecProviderArgs struct {
	// The virtual node associated with the virtual service.
	VirtualNodes GetVirtualServiceSpecProviderVirtualNodeArrayInput `pulumi:"virtualNodes"`
	// The virtual router associated with the virtual service.
	VirtualRouters GetVirtualServiceSpecProviderVirtualRouterArrayInput `pulumi:"virtualRouters"`
}

func (GetVirtualServiceSpecProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpecProvider)(nil)).Elem()
}

func (i GetVirtualServiceSpecProviderArgs) ToGetVirtualServiceSpecProviderOutput() GetVirtualServiceSpecProviderOutput {
	return i.ToGetVirtualServiceSpecProviderOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecProviderArgs) ToGetVirtualServiceSpecProviderOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecProviderOutput)
}

// GetVirtualServiceSpecProviderArrayInput is an input type that accepts GetVirtualServiceSpecProviderArray and GetVirtualServiceSpecProviderArrayOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecProviderArrayInput` via:
//
//          GetVirtualServiceSpecProviderArray{ GetVirtualServiceSpecProviderArgs{...} }
type GetVirtualServiceSpecProviderArrayInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecProviderArrayOutput() GetVirtualServiceSpecProviderArrayOutput
	ToGetVirtualServiceSpecProviderArrayOutputWithContext(context.Context) GetVirtualServiceSpecProviderArrayOutput
}

type GetVirtualServiceSpecProviderArray []GetVirtualServiceSpecProviderInput

func (GetVirtualServiceSpecProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpecProvider)(nil)).Elem()
}

func (i GetVirtualServiceSpecProviderArray) ToGetVirtualServiceSpecProviderArrayOutput() GetVirtualServiceSpecProviderArrayOutput {
	return i.ToGetVirtualServiceSpecProviderArrayOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecProviderArray) ToGetVirtualServiceSpecProviderArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecProviderArrayOutput)
}

type GetVirtualServiceSpecProviderOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpecProvider)(nil)).Elem()
}

func (o GetVirtualServiceSpecProviderOutput) ToGetVirtualServiceSpecProviderOutput() GetVirtualServiceSpecProviderOutput {
	return o
}

func (o GetVirtualServiceSpecProviderOutput) ToGetVirtualServiceSpecProviderOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderOutput {
	return o
}

// The virtual node associated with the virtual service.
func (o GetVirtualServiceSpecProviderOutput) VirtualNodes() GetVirtualServiceSpecProviderVirtualNodeArrayOutput {
	return o.ApplyT(func(v GetVirtualServiceSpecProvider) []GetVirtualServiceSpecProviderVirtualNode {
		return v.VirtualNodes
	}).(GetVirtualServiceSpecProviderVirtualNodeArrayOutput)
}

// The virtual router associated with the virtual service.
func (o GetVirtualServiceSpecProviderOutput) VirtualRouters() GetVirtualServiceSpecProviderVirtualRouterArrayOutput {
	return o.ApplyT(func(v GetVirtualServiceSpecProvider) []GetVirtualServiceSpecProviderVirtualRouter {
		return v.VirtualRouters
	}).(GetVirtualServiceSpecProviderVirtualRouterArrayOutput)
}

type GetVirtualServiceSpecProviderArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpecProvider)(nil)).Elem()
}

func (o GetVirtualServiceSpecProviderArrayOutput) ToGetVirtualServiceSpecProviderArrayOutput() GetVirtualServiceSpecProviderArrayOutput {
	return o
}

func (o GetVirtualServiceSpecProviderArrayOutput) ToGetVirtualServiceSpecProviderArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderArrayOutput {
	return o
}

func (o GetVirtualServiceSpecProviderArrayOutput) Index(i pulumi.IntInput) GetVirtualServiceSpecProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualServiceSpecProvider {
		return vs[0].([]GetVirtualServiceSpecProvider)[vs[1].(int)]
	}).(GetVirtualServiceSpecProviderOutput)
}

type GetVirtualServiceSpecProviderVirtualNode struct {
	// The name of the virtual node that is acting as a service provider.
	VirtualNodeName string `pulumi:"virtualNodeName"`
}

// GetVirtualServiceSpecProviderVirtualNodeInput is an input type that accepts GetVirtualServiceSpecProviderVirtualNodeArgs and GetVirtualServiceSpecProviderVirtualNodeOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecProviderVirtualNodeInput` via:
//
//          GetVirtualServiceSpecProviderVirtualNodeArgs{...}
type GetVirtualServiceSpecProviderVirtualNodeInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecProviderVirtualNodeOutput() GetVirtualServiceSpecProviderVirtualNodeOutput
	ToGetVirtualServiceSpecProviderVirtualNodeOutputWithContext(context.Context) GetVirtualServiceSpecProviderVirtualNodeOutput
}

type GetVirtualServiceSpecProviderVirtualNodeArgs struct {
	// The name of the virtual node that is acting as a service provider.
	VirtualNodeName pulumi.StringInput `pulumi:"virtualNodeName"`
}

func (GetVirtualServiceSpecProviderVirtualNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (i GetVirtualServiceSpecProviderVirtualNodeArgs) ToGetVirtualServiceSpecProviderVirtualNodeOutput() GetVirtualServiceSpecProviderVirtualNodeOutput {
	return i.ToGetVirtualServiceSpecProviderVirtualNodeOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecProviderVirtualNodeArgs) ToGetVirtualServiceSpecProviderVirtualNodeOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecProviderVirtualNodeOutput)
}

// GetVirtualServiceSpecProviderVirtualNodeArrayInput is an input type that accepts GetVirtualServiceSpecProviderVirtualNodeArray and GetVirtualServiceSpecProviderVirtualNodeArrayOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecProviderVirtualNodeArrayInput` via:
//
//          GetVirtualServiceSpecProviderVirtualNodeArray{ GetVirtualServiceSpecProviderVirtualNodeArgs{...} }
type GetVirtualServiceSpecProviderVirtualNodeArrayInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecProviderVirtualNodeArrayOutput() GetVirtualServiceSpecProviderVirtualNodeArrayOutput
	ToGetVirtualServiceSpecProviderVirtualNodeArrayOutputWithContext(context.Context) GetVirtualServiceSpecProviderVirtualNodeArrayOutput
}

type GetVirtualServiceSpecProviderVirtualNodeArray []GetVirtualServiceSpecProviderVirtualNodeInput

func (GetVirtualServiceSpecProviderVirtualNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (i GetVirtualServiceSpecProviderVirtualNodeArray) ToGetVirtualServiceSpecProviderVirtualNodeArrayOutput() GetVirtualServiceSpecProviderVirtualNodeArrayOutput {
	return i.ToGetVirtualServiceSpecProviderVirtualNodeArrayOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecProviderVirtualNodeArray) ToGetVirtualServiceSpecProviderVirtualNodeArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecProviderVirtualNodeArrayOutput)
}

type GetVirtualServiceSpecProviderVirtualNodeOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecProviderVirtualNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (o GetVirtualServiceSpecProviderVirtualNodeOutput) ToGetVirtualServiceSpecProviderVirtualNodeOutput() GetVirtualServiceSpecProviderVirtualNodeOutput {
	return o
}

func (o GetVirtualServiceSpecProviderVirtualNodeOutput) ToGetVirtualServiceSpecProviderVirtualNodeOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualNodeOutput {
	return o
}

// The name of the virtual node that is acting as a service provider.
func (o GetVirtualServiceSpecProviderVirtualNodeOutput) VirtualNodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualServiceSpecProviderVirtualNode) string { return v.VirtualNodeName }).(pulumi.StringOutput)
}

type GetVirtualServiceSpecProviderVirtualNodeArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecProviderVirtualNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (o GetVirtualServiceSpecProviderVirtualNodeArrayOutput) ToGetVirtualServiceSpecProviderVirtualNodeArrayOutput() GetVirtualServiceSpecProviderVirtualNodeArrayOutput {
	return o
}

func (o GetVirtualServiceSpecProviderVirtualNodeArrayOutput) ToGetVirtualServiceSpecProviderVirtualNodeArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualNodeArrayOutput {
	return o
}

func (o GetVirtualServiceSpecProviderVirtualNodeArrayOutput) Index(i pulumi.IntInput) GetVirtualServiceSpecProviderVirtualNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualServiceSpecProviderVirtualNode {
		return vs[0].([]GetVirtualServiceSpecProviderVirtualNode)[vs[1].(int)]
	}).(GetVirtualServiceSpecProviderVirtualNodeOutput)
}

type GetVirtualServiceSpecProviderVirtualRouter struct {
	// The name of the virtual router that is acting as a service provider.
	VirtualRouterName string `pulumi:"virtualRouterName"`
}

// GetVirtualServiceSpecProviderVirtualRouterInput is an input type that accepts GetVirtualServiceSpecProviderVirtualRouterArgs and GetVirtualServiceSpecProviderVirtualRouterOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecProviderVirtualRouterInput` via:
//
//          GetVirtualServiceSpecProviderVirtualRouterArgs{...}
type GetVirtualServiceSpecProviderVirtualRouterInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecProviderVirtualRouterOutput() GetVirtualServiceSpecProviderVirtualRouterOutput
	ToGetVirtualServiceSpecProviderVirtualRouterOutputWithContext(context.Context) GetVirtualServiceSpecProviderVirtualRouterOutput
}

type GetVirtualServiceSpecProviderVirtualRouterArgs struct {
	// The name of the virtual router that is acting as a service provider.
	VirtualRouterName pulumi.StringInput `pulumi:"virtualRouterName"`
}

func (GetVirtualServiceSpecProviderVirtualRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (i GetVirtualServiceSpecProviderVirtualRouterArgs) ToGetVirtualServiceSpecProviderVirtualRouterOutput() GetVirtualServiceSpecProviderVirtualRouterOutput {
	return i.ToGetVirtualServiceSpecProviderVirtualRouterOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecProviderVirtualRouterArgs) ToGetVirtualServiceSpecProviderVirtualRouterOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecProviderVirtualRouterOutput)
}

// GetVirtualServiceSpecProviderVirtualRouterArrayInput is an input type that accepts GetVirtualServiceSpecProviderVirtualRouterArray and GetVirtualServiceSpecProviderVirtualRouterArrayOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecProviderVirtualRouterArrayInput` via:
//
//          GetVirtualServiceSpecProviderVirtualRouterArray{ GetVirtualServiceSpecProviderVirtualRouterArgs{...} }
type GetVirtualServiceSpecProviderVirtualRouterArrayInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecProviderVirtualRouterArrayOutput() GetVirtualServiceSpecProviderVirtualRouterArrayOutput
	ToGetVirtualServiceSpecProviderVirtualRouterArrayOutputWithContext(context.Context) GetVirtualServiceSpecProviderVirtualRouterArrayOutput
}

type GetVirtualServiceSpecProviderVirtualRouterArray []GetVirtualServiceSpecProviderVirtualRouterInput

func (GetVirtualServiceSpecProviderVirtualRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (i GetVirtualServiceSpecProviderVirtualRouterArray) ToGetVirtualServiceSpecProviderVirtualRouterArrayOutput() GetVirtualServiceSpecProviderVirtualRouterArrayOutput {
	return i.ToGetVirtualServiceSpecProviderVirtualRouterArrayOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecProviderVirtualRouterArray) ToGetVirtualServiceSpecProviderVirtualRouterArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecProviderVirtualRouterArrayOutput)
}

type GetVirtualServiceSpecProviderVirtualRouterOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecProviderVirtualRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (o GetVirtualServiceSpecProviderVirtualRouterOutput) ToGetVirtualServiceSpecProviderVirtualRouterOutput() GetVirtualServiceSpecProviderVirtualRouterOutput {
	return o
}

func (o GetVirtualServiceSpecProviderVirtualRouterOutput) ToGetVirtualServiceSpecProviderVirtualRouterOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualRouterOutput {
	return o
}

// The name of the virtual router that is acting as a service provider.
func (o GetVirtualServiceSpecProviderVirtualRouterOutput) VirtualRouterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualServiceSpecProviderVirtualRouter) string { return v.VirtualRouterName }).(pulumi.StringOutput)
}

type GetVirtualServiceSpecProviderVirtualRouterArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecProviderVirtualRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (o GetVirtualServiceSpecProviderVirtualRouterArrayOutput) ToGetVirtualServiceSpecProviderVirtualRouterArrayOutput() GetVirtualServiceSpecProviderVirtualRouterArrayOutput {
	return o
}

func (o GetVirtualServiceSpecProviderVirtualRouterArrayOutput) ToGetVirtualServiceSpecProviderVirtualRouterArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualRouterArrayOutput {
	return o
}

func (o GetVirtualServiceSpecProviderVirtualRouterArrayOutput) Index(i pulumi.IntInput) GetVirtualServiceSpecProviderVirtualRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualServiceSpecProviderVirtualRouter {
		return vs[0].([]GetVirtualServiceSpecProviderVirtualRouter)[vs[1].(int)]
	}).(GetVirtualServiceSpecProviderVirtualRouterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecInput)(nil)).Elem(), GatewayRouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecPtrInput)(nil)).Elem(), GatewayRouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRoutePtrInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionPtrInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTargetInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTargetPtrInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteMatchInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteMatchPtrInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RoutePtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionPtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTargetInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTargetPtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchPtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteInput)(nil)).Elem(), GatewayRouteSpecHttpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRoutePtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionPtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTargetInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTargetPtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTargetVirtualServiceInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchPtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshSpecInput)(nil)).Elem(), MeshSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshSpecPtrInput)(nil)).Elem(), MeshSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshSpecEgressFilterInput)(nil)).Elem(), MeshSpecEgressFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshSpecEgressFilterPtrInput)(nil)).Elem(), MeshSpecEgressFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecInput)(nil)).Elem(), RouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecPtrInput)(nil)).Elem(), RouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteInput)(nil)).Elem(), RouteSpecGrpcRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRoutePtrInput)(nil)).Elem(), RouteSpecGrpcRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteActionInput)(nil)).Elem(), RouteSpecGrpcRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteActionPtrInput)(nil)).Elem(), RouteSpecGrpcRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteActionWeightedTargetInput)(nil)).Elem(), RouteSpecGrpcRouteActionWeightedTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteActionWeightedTargetArrayInput)(nil)).Elem(), RouteSpecGrpcRouteActionWeightedTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchInput)(nil)).Elem(), RouteSpecGrpcRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchPtrInput)(nil)).Elem(), RouteSpecGrpcRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataInput)(nil)).Elem(), RouteSpecGrpcRouteMatchMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataArrayInput)(nil)).Elem(), RouteSpecGrpcRouteMatchMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatchInput)(nil)).Elem(), RouteSpecGrpcRouteMatchMetadataMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatchPtrInput)(nil)).Elem(), RouteSpecGrpcRouteMatchMetadataMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatchRangeInput)(nil)).Elem(), RouteSpecGrpcRouteMatchMetadataMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatchRangePtrInput)(nil)).Elem(), RouteSpecGrpcRouteMatchMetadataMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicyInput)(nil)).Elem(), RouteSpecGrpcRouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicyPtrInput)(nil)).Elem(), RouteSpecGrpcRouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput)(nil)).Elem(), RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrInput)(nil)).Elem(), RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteTimeoutInput)(nil)).Elem(), RouteSpecGrpcRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteTimeoutPtrInput)(nil)).Elem(), RouteSpecGrpcRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteTimeoutIdleInput)(nil)).Elem(), RouteSpecGrpcRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteTimeoutIdlePtrInput)(nil)).Elem(), RouteSpecGrpcRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteTimeoutPerRequestInput)(nil)).Elem(), RouteSpecGrpcRouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteTimeoutPerRequestPtrInput)(nil)).Elem(), RouteSpecGrpcRouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteInput)(nil)).Elem(), RouteSpecHttp2RouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RoutePtrInput)(nil)).Elem(), RouteSpecHttp2RouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteActionInput)(nil)).Elem(), RouteSpecHttp2RouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteActionPtrInput)(nil)).Elem(), RouteSpecHttp2RouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteActionWeightedTargetInput)(nil)).Elem(), RouteSpecHttp2RouteActionWeightedTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteActionWeightedTargetArrayInput)(nil)).Elem(), RouteSpecHttp2RouteActionWeightedTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchInput)(nil)).Elem(), RouteSpecHttp2RouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchPtrInput)(nil)).Elem(), RouteSpecHttp2RouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderInput)(nil)).Elem(), RouteSpecHttp2RouteMatchHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderArrayInput)(nil)).Elem(), RouteSpecHttp2RouteMatchHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatchInput)(nil)).Elem(), RouteSpecHttp2RouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatchPtrInput)(nil)).Elem(), RouteSpecHttp2RouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatchRangeInput)(nil)).Elem(), RouteSpecHttp2RouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatchRangePtrInput)(nil)).Elem(), RouteSpecHttp2RouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicyInput)(nil)).Elem(), RouteSpecHttp2RouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicyPtrInput)(nil)).Elem(), RouteSpecHttp2RouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput)(nil)).Elem(), RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrInput)(nil)).Elem(), RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteTimeoutInput)(nil)).Elem(), RouteSpecHttp2RouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteTimeoutPtrInput)(nil)).Elem(), RouteSpecHttp2RouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteTimeoutIdleInput)(nil)).Elem(), RouteSpecHttp2RouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteTimeoutIdlePtrInput)(nil)).Elem(), RouteSpecHttp2RouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteTimeoutPerRequestInput)(nil)).Elem(), RouteSpecHttp2RouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteTimeoutPerRequestPtrInput)(nil)).Elem(), RouteSpecHttp2RouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteInput)(nil)).Elem(), RouteSpecHttpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRoutePtrInput)(nil)).Elem(), RouteSpecHttpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteActionInput)(nil)).Elem(), RouteSpecHttpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteActionPtrInput)(nil)).Elem(), RouteSpecHttpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteActionWeightedTargetInput)(nil)).Elem(), RouteSpecHttpRouteActionWeightedTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteActionWeightedTargetArrayInput)(nil)).Elem(), RouteSpecHttpRouteActionWeightedTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchInput)(nil)).Elem(), RouteSpecHttpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchPtrInput)(nil)).Elem(), RouteSpecHttpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderInput)(nil)).Elem(), RouteSpecHttpRouteMatchHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderArrayInput)(nil)).Elem(), RouteSpecHttpRouteMatchHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatchInput)(nil)).Elem(), RouteSpecHttpRouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatchPtrInput)(nil)).Elem(), RouteSpecHttpRouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatchRangeInput)(nil)).Elem(), RouteSpecHttpRouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatchRangePtrInput)(nil)).Elem(), RouteSpecHttpRouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteRetryPolicyInput)(nil)).Elem(), RouteSpecHttpRouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteRetryPolicyPtrInput)(nil)).Elem(), RouteSpecHttpRouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput)(nil)).Elem(), RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrInput)(nil)).Elem(), RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteTimeoutInput)(nil)).Elem(), RouteSpecHttpRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteTimeoutPtrInput)(nil)).Elem(), RouteSpecHttpRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteTimeoutIdleInput)(nil)).Elem(), RouteSpecHttpRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteTimeoutIdlePtrInput)(nil)).Elem(), RouteSpecHttpRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteTimeoutPerRequestInput)(nil)).Elem(), RouteSpecHttpRouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteTimeoutPerRequestPtrInput)(nil)).Elem(), RouteSpecHttpRouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteInput)(nil)).Elem(), RouteSpecTcpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRoutePtrInput)(nil)).Elem(), RouteSpecTcpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteActionInput)(nil)).Elem(), RouteSpecTcpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteActionPtrInput)(nil)).Elem(), RouteSpecTcpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteActionWeightedTargetInput)(nil)).Elem(), RouteSpecTcpRouteActionWeightedTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteActionWeightedTargetArrayInput)(nil)).Elem(), RouteSpecTcpRouteActionWeightedTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteTimeoutInput)(nil)).Elem(), RouteSpecTcpRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteTimeoutPtrInput)(nil)).Elem(), RouteSpecTcpRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteTimeoutIdleInput)(nil)).Elem(), RouteSpecTcpRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteTimeoutIdlePtrInput)(nil)).Elem(), RouteSpecTcpRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecInput)(nil)).Elem(), VirtualGatewaySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecPtrInput)(nil)).Elem(), VirtualGatewaySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerInput)(nil)).Elem(), VirtualGatewaySpecListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolInput)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolGrpcInput)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolGrpcPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttp2Input)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttp2PtrInput)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttpInput)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttpPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerHealthCheckInput)(nil)).Elem(), VirtualGatewaySpecListenerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerHealthCheckPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerPortMappingInput)(nil)).Elem(), VirtualGatewaySpecListenerPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerPortMappingPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificatePtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateAcmInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateAcmPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateFileInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateFilePtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateSdsInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateSdsPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustFileInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustFilePtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustSdsInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustSdsPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingInput)(nil)).Elem(), VirtualGatewaySpecLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingPtrInput)(nil)).Elem(), VirtualGatewaySpecLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogInput)(nil)).Elem(), VirtualGatewaySpecLoggingAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogPtrInput)(nil)).Elem(), VirtualGatewaySpecLoggingAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFileInput)(nil)).Elem(), VirtualGatewaySpecLoggingAccessLogFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFilePtrInput)(nil)).Elem(), VirtualGatewaySpecLoggingAccessLogFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecInput)(nil)).Elem(), VirtualNodeSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecPtrInput)(nil)).Elem(), VirtualNodeSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendInput)(nil)).Elem(), VirtualNodeSpecBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendArrayInput)(nil)).Elem(), VirtualNodeSpecBackendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerInput)(nil)).Elem(), VirtualNodeSpecListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerPtrInput)(nil)).Elem(), VirtualNodeSpecListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolPtrInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolGrpcInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolGrpcPtrInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttp2Input)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttp2PtrInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttpInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttpPtrInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolTcpInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolTcpPtrInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerHealthCheckInput)(nil)).Elem(), VirtualNodeSpecListenerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerHealthCheckPtrInput)(nil)).Elem(), VirtualNodeSpecListenerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionInput)(nil)).Elem(), VirtualNodeSpecListenerOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionPtrInput)(nil)).Elem(), VirtualNodeSpecListenerOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput)(nil)).Elem(), VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrInput)(nil)).Elem(), VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionIntervalInput)(nil)).Elem(), VirtualNodeSpecListenerOutlierDetectionIntervalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionIntervalPtrInput)(nil)).Elem(), VirtualNodeSpecListenerOutlierDetectionIntervalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerPortMappingInput)(nil)).Elem(), VirtualNodeSpecListenerPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerPortMappingPtrInput)(nil)).Elem(), VirtualNodeSpecListenerPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcIdleInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutGrpcIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcIdlePtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutGrpcIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcPerRequestInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2Input)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2PtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2IdleInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttp2IdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2IdlePtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttp2IdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2PerRequestInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpIdleInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttpIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpIdlePtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttpIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpPerRequestInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttpPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpPerRequestPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttpPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcpInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcpPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcpIdleInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutTcpIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcpIdlePtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutTcpIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsInput)(nil)).Elem(), VirtualNodeSpecListenerTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificatePtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateAcmInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateAcmPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateFileInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateFilePtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateSdsInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateSdsPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustFileInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustFilePtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustSdsInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustSdsPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingInput)(nil)).Elem(), VirtualNodeSpecLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingPtrInput)(nil)).Elem(), VirtualNodeSpecLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogInput)(nil)).Elem(), VirtualNodeSpecLoggingAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogPtrInput)(nil)).Elem(), VirtualNodeSpecLoggingAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFileInput)(nil)).Elem(), VirtualNodeSpecLoggingAccessLogFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFilePtrInput)(nil)).Elem(), VirtualNodeSpecLoggingAccessLogFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryInput)(nil)).Elem(), VirtualNodeSpecServiceDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryPtrInput)(nil)).Elem(), VirtualNodeSpecServiceDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryAwsCloudMapInput)(nil)).Elem(), VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrInput)(nil)).Elem(), VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryDnsInput)(nil)).Elem(), VirtualNodeSpecServiceDiscoveryDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryDnsPtrInput)(nil)).Elem(), VirtualNodeSpecServiceDiscoveryDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterSpecInput)(nil)).Elem(), VirtualRouterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterSpecPtrInput)(nil)).Elem(), VirtualRouterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterSpecListenerInput)(nil)).Elem(), VirtualRouterSpecListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterSpecListenerPtrInput)(nil)).Elem(), VirtualRouterSpecListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterSpecListenerPortMappingInput)(nil)).Elem(), VirtualRouterSpecListenerPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterSpecListenerPortMappingPtrInput)(nil)).Elem(), VirtualRouterSpecListenerPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecInput)(nil)).Elem(), VirtualServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecPtrInput)(nil)).Elem(), VirtualServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecProviderInput)(nil)).Elem(), VirtualServiceSpecProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecProviderPtrInput)(nil)).Elem(), VirtualServiceSpecProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecProviderVirtualNodeInput)(nil)).Elem(), VirtualServiceSpecProviderVirtualNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecProviderVirtualNodePtrInput)(nil)).Elem(), VirtualServiceSpecProviderVirtualNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecProviderVirtualRouterInput)(nil)).Elem(), VirtualServiceSpecProviderVirtualRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecProviderVirtualRouterPtrInput)(nil)).Elem(), VirtualServiceSpecProviderVirtualRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMeshSpecInput)(nil)).Elem(), GetMeshSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMeshSpecArrayInput)(nil)).Elem(), GetMeshSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMeshSpecEgressFilterInput)(nil)).Elem(), GetMeshSpecEgressFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMeshSpecEgressFilterArrayInput)(nil)).Elem(), GetMeshSpecEgressFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecInput)(nil)).Elem(), GetVirtualServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecArrayInput)(nil)).Elem(), GetVirtualServiceSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecProviderInput)(nil)).Elem(), GetVirtualServiceSpecProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecProviderArrayInput)(nil)).Elem(), GetVirtualServiceSpecProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualNodeInput)(nil)).Elem(), GetVirtualServiceSpecProviderVirtualNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualNodeArrayInput)(nil)).Elem(), GetVirtualServiceSpecProviderVirtualNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualRouterInput)(nil)).Elem(), GetVirtualServiceSpecProviderVirtualRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualRouterArrayInput)(nil)).Elem(), GetVirtualServiceSpecProviderVirtualRouterArray{})
	pulumi.RegisterOutputType(GatewayRouteSpecOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRoutePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteActionOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteActionPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteActionTargetOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteActionTargetPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RoutePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionTargetOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionTargetPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRoutePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionTargetOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionTargetPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchPtrOutput{})
	pulumi.RegisterOutputType(MeshSpecOutput{})
	pulumi.RegisterOutputType(MeshSpecPtrOutput{})
	pulumi.RegisterOutputType(MeshSpecEgressFilterOutput{})
	pulumi.RegisterOutputType(MeshSpecEgressFilterPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecOutput{})
	pulumi.RegisterOutputType(RouteSpecPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRoutePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteActionOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteActionPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteActionWeightedTargetOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteActionWeightedTargetArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchMetadataOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchMetadataArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchMetadataMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchMetadataMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchMetadataMatchRangeOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteRetryPolicyOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteRetryPolicyPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteTimeoutOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteTimeoutIdleOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteTimeoutIdlePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteTimeoutPerRequestOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteTimeoutPerRequestPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RoutePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteActionOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteActionPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteActionWeightedTargetOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteActionWeightedTargetArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchHeaderOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchHeaderArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchHeaderMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchHeaderMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchHeaderMatchRangeOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteRetryPolicyOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteRetryPolicyPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteTimeoutOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteTimeoutIdleOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteTimeoutIdlePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteTimeoutPerRequestOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteTimeoutPerRequestPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRoutePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteActionOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteActionPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteActionWeightedTargetOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteActionWeightedTargetArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchHeaderOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchHeaderArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchHeaderMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchHeaderMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchHeaderMatchRangeOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteRetryPolicyOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteRetryPolicyPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteTimeoutOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteTimeoutIdleOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteTimeoutIdlePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteTimeoutPerRequestOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteTimeoutPerRequestPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRoutePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteActionOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteActionPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteActionWeightedTargetOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteActionWeightedTargetArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteTimeoutOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteTimeoutIdleOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteTimeoutIdlePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolGrpcOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolHttp2Output{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolHttpOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerHealthCheckOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerPortMappingOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerPortMappingPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificateAcmOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificateFileOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificateFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificateSdsOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationTrustOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationTrustFileOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationTrustSdsOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingAccessLogOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingAccessLogPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingAccessLogFileOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingAccessLogFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendArrayOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolGrpcOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolHttp2Output{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolHttp2PtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolHttpOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolHttpPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolTcpOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolTcpPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerHealthCheckOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerOutlierDetectionOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerOutlierDetectionPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerOutlierDetectionIntervalOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerPortMappingOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerPortMappingPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutGrpcOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutGrpcPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutGrpcIdleOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttp2Output{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttp2PtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttp2IdleOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttpOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttpPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttpIdleOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttpPerRequestOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutTcpOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutTcpPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutTcpIdleOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificateAcmOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificateAcmPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificateFileOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificateFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificateSdsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificateSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationTrustOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationTrustFileOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationTrustSdsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingAccessLogOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingAccessLogPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingAccessLogFileOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingAccessLogFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecServiceDiscoveryOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecServiceDiscoveryPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecServiceDiscoveryDnsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecServiceDiscoveryDnsPtrOutput{})
	pulumi.RegisterOutputType(VirtualRouterSpecOutput{})
	pulumi.RegisterOutputType(VirtualRouterSpecPtrOutput{})
	pulumi.RegisterOutputType(VirtualRouterSpecListenerOutput{})
	pulumi.RegisterOutputType(VirtualRouterSpecListenerPtrOutput{})
	pulumi.RegisterOutputType(VirtualRouterSpecListenerPortMappingOutput{})
	pulumi.RegisterOutputType(VirtualRouterSpecListenerPortMappingPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecProviderOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecProviderPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecProviderVirtualNodeOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecProviderVirtualNodePtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecProviderVirtualRouterOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecProviderVirtualRouterPtrOutput{})
	pulumi.RegisterOutputType(GetMeshSpecOutput{})
	pulumi.RegisterOutputType(GetMeshSpecArrayOutput{})
	pulumi.RegisterOutputType(GetMeshSpecEgressFilterOutput{})
	pulumi.RegisterOutputType(GetMeshSpecEgressFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecProviderOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecProviderArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecProviderVirtualNodeOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecProviderVirtualNodeArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecProviderVirtualRouterOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecProviderVirtualRouterArrayOutput{})
}
