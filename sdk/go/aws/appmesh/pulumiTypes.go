// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appmesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GatewayRouteSpec struct {
	// Specification of a gRPC gateway route.
	GrpcRoute *GatewayRouteSpecGrpcRoute `pulumi:"grpcRoute"`
	// Specification of an HTTP/2 gateway route.
	Http2Route *GatewayRouteSpecHttp2Route `pulumi:"http2Route"`
	// Specification of an HTTP gateway route.
	HttpRoute *GatewayRouteSpecHttpRoute `pulumi:"httpRoute"`
	// Priority for the gateway route, between `0` and `1000`.
	Priority *int `pulumi:"priority"`
}

// GatewayRouteSpecInput is an input type that accepts GatewayRouteSpecArgs and GatewayRouteSpecOutput values.
// You can construct a concrete instance of `GatewayRouteSpecInput` via:
//
//	GatewayRouteSpecArgs{...}
type GatewayRouteSpecInput interface {
	pulumi.Input

	ToGatewayRouteSpecOutput() GatewayRouteSpecOutput
	ToGatewayRouteSpecOutputWithContext(context.Context) GatewayRouteSpecOutput
}

type GatewayRouteSpecArgs struct {
	// Specification of a gRPC gateway route.
	GrpcRoute GatewayRouteSpecGrpcRoutePtrInput `pulumi:"grpcRoute"`
	// Specification of an HTTP/2 gateway route.
	Http2Route GatewayRouteSpecHttp2RoutePtrInput `pulumi:"http2Route"`
	// Specification of an HTTP gateway route.
	HttpRoute GatewayRouteSpecHttpRoutePtrInput `pulumi:"httpRoute"`
	// Priority for the gateway route, between `0` and `1000`.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (GatewayRouteSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpec)(nil)).Elem()
}

func (i GatewayRouteSpecArgs) ToGatewayRouteSpecOutput() GatewayRouteSpecOutput {
	return i.ToGatewayRouteSpecOutputWithContext(context.Background())
}

func (i GatewayRouteSpecArgs) ToGatewayRouteSpecOutputWithContext(ctx context.Context) GatewayRouteSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecOutput)
}

func (i GatewayRouteSpecArgs) ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput {
	return i.ToGatewayRouteSpecPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecArgs) ToGatewayRouteSpecPtrOutputWithContext(ctx context.Context) GatewayRouteSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecOutput).ToGatewayRouteSpecPtrOutputWithContext(ctx)
}

// GatewayRouteSpecPtrInput is an input type that accepts GatewayRouteSpecArgs, GatewayRouteSpecPtr and GatewayRouteSpecPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecPtrInput` via:
//
//	        GatewayRouteSpecArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput
	ToGatewayRouteSpecPtrOutputWithContext(context.Context) GatewayRouteSpecPtrOutput
}

type gatewayRouteSpecPtrType GatewayRouteSpecArgs

func GatewayRouteSpecPtr(v *GatewayRouteSpecArgs) GatewayRouteSpecPtrInput {
	return (*gatewayRouteSpecPtrType)(v)
}

func (*gatewayRouteSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpec)(nil)).Elem()
}

func (i *gatewayRouteSpecPtrType) ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput {
	return i.ToGatewayRouteSpecPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecPtrType) ToGatewayRouteSpecPtrOutputWithContext(ctx context.Context) GatewayRouteSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecPtrOutput)
}

type GatewayRouteSpecOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpec)(nil)).Elem()
}

func (o GatewayRouteSpecOutput) ToGatewayRouteSpecOutput() GatewayRouteSpecOutput {
	return o
}

func (o GatewayRouteSpecOutput) ToGatewayRouteSpecOutputWithContext(ctx context.Context) GatewayRouteSpecOutput {
	return o
}

func (o GatewayRouteSpecOutput) ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput {
	return o.ToGatewayRouteSpecPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecOutput) ToGatewayRouteSpecPtrOutputWithContext(ctx context.Context) GatewayRouteSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpec) *GatewayRouteSpec {
		return &v
	}).(GatewayRouteSpecPtrOutput)
}

// Specification of a gRPC gateway route.
func (o GatewayRouteSpecOutput) GrpcRoute() GatewayRouteSpecGrpcRoutePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpec) *GatewayRouteSpecGrpcRoute { return v.GrpcRoute }).(GatewayRouteSpecGrpcRoutePtrOutput)
}

// Specification of an HTTP/2 gateway route.
func (o GatewayRouteSpecOutput) Http2Route() GatewayRouteSpecHttp2RoutePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpec) *GatewayRouteSpecHttp2Route { return v.Http2Route }).(GatewayRouteSpecHttp2RoutePtrOutput)
}

// Specification of an HTTP gateway route.
func (o GatewayRouteSpecOutput) HttpRoute() GatewayRouteSpecHttpRoutePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpec) *GatewayRouteSpecHttpRoute { return v.HttpRoute }).(GatewayRouteSpecHttpRoutePtrOutput)
}

// Priority for the gateway route, between `0` and `1000`.
func (o GatewayRouteSpecOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpec) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type GatewayRouteSpecPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpec)(nil)).Elem()
}

func (o GatewayRouteSpecPtrOutput) ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput {
	return o
}

func (o GatewayRouteSpecPtrOutput) ToGatewayRouteSpecPtrOutputWithContext(ctx context.Context) GatewayRouteSpecPtrOutput {
	return o
}

func (o GatewayRouteSpecPtrOutput) Elem() GatewayRouteSpecOutput {
	return o.ApplyT(func(v *GatewayRouteSpec) GatewayRouteSpec {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpec
		return ret
	}).(GatewayRouteSpecOutput)
}

// Specification of a gRPC gateway route.
func (o GatewayRouteSpecPtrOutput) GrpcRoute() GatewayRouteSpecGrpcRoutePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpec) *GatewayRouteSpecGrpcRoute {
		if v == nil {
			return nil
		}
		return v.GrpcRoute
	}).(GatewayRouteSpecGrpcRoutePtrOutput)
}

// Specification of an HTTP/2 gateway route.
func (o GatewayRouteSpecPtrOutput) Http2Route() GatewayRouteSpecHttp2RoutePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpec) *GatewayRouteSpecHttp2Route {
		if v == nil {
			return nil
		}
		return v.Http2Route
	}).(GatewayRouteSpecHttp2RoutePtrOutput)
}

// Specification of an HTTP gateway route.
func (o GatewayRouteSpecPtrOutput) HttpRoute() GatewayRouteSpecHttpRoutePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpec) *GatewayRouteSpecHttpRoute {
		if v == nil {
			return nil
		}
		return v.HttpRoute
	}).(GatewayRouteSpecHttpRoutePtrOutput)
}

// Priority for the gateway route, between `0` and `1000`.
func (o GatewayRouteSpecPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpec) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

type GatewayRouteSpecGrpcRoute struct {
	// Action to take if a match is determined.
	Action GatewayRouteSpecGrpcRouteAction `pulumi:"action"`
	// Criteria for determining a request match.
	Match GatewayRouteSpecGrpcRouteMatch `pulumi:"match"`
}

// GatewayRouteSpecGrpcRouteInput is an input type that accepts GatewayRouteSpecGrpcRouteArgs and GatewayRouteSpecGrpcRouteOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteInput` via:
//
//	GatewayRouteSpecGrpcRouteArgs{...}
type GatewayRouteSpecGrpcRouteInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteOutput() GatewayRouteSpecGrpcRouteOutput
	ToGatewayRouteSpecGrpcRouteOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteOutput
}

type GatewayRouteSpecGrpcRouteArgs struct {
	// Action to take if a match is determined.
	Action GatewayRouteSpecGrpcRouteActionInput `pulumi:"action"`
	// Criteria for determining a request match.
	Match GatewayRouteSpecGrpcRouteMatchInput `pulumi:"match"`
}

func (GatewayRouteSpecGrpcRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRoute)(nil)).Elem()
}

func (i GatewayRouteSpecGrpcRouteArgs) ToGatewayRouteSpecGrpcRouteOutput() GatewayRouteSpecGrpcRouteOutput {
	return i.ToGatewayRouteSpecGrpcRouteOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteArgs) ToGatewayRouteSpecGrpcRouteOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteOutput)
}

func (i GatewayRouteSpecGrpcRouteArgs) ToGatewayRouteSpecGrpcRoutePtrOutput() GatewayRouteSpecGrpcRoutePtrOutput {
	return i.ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteArgs) ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteOutput).ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(ctx)
}

// GatewayRouteSpecGrpcRoutePtrInput is an input type that accepts GatewayRouteSpecGrpcRouteArgs, GatewayRouteSpecGrpcRoutePtr and GatewayRouteSpecGrpcRoutePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRoutePtrInput` via:
//
//	        GatewayRouteSpecGrpcRouteArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecGrpcRoutePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRoutePtrOutput() GatewayRouteSpecGrpcRoutePtrOutput
	ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(context.Context) GatewayRouteSpecGrpcRoutePtrOutput
}

type gatewayRouteSpecGrpcRoutePtrType GatewayRouteSpecGrpcRouteArgs

func GatewayRouteSpecGrpcRoutePtr(v *GatewayRouteSpecGrpcRouteArgs) GatewayRouteSpecGrpcRoutePtrInput {
	return (*gatewayRouteSpecGrpcRoutePtrType)(v)
}

func (*gatewayRouteSpecGrpcRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRoute)(nil)).Elem()
}

func (i *gatewayRouteSpecGrpcRoutePtrType) ToGatewayRouteSpecGrpcRoutePtrOutput() GatewayRouteSpecGrpcRoutePtrOutput {
	return i.ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecGrpcRoutePtrType) ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRoutePtrOutput)
}

type GatewayRouteSpecGrpcRouteOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRoute)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteOutput) ToGatewayRouteSpecGrpcRouteOutput() GatewayRouteSpecGrpcRouteOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteOutput) ToGatewayRouteSpecGrpcRouteOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteOutput) ToGatewayRouteSpecGrpcRoutePtrOutput() GatewayRouteSpecGrpcRoutePtrOutput {
	return o.ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecGrpcRouteOutput) ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecGrpcRoute) *GatewayRouteSpecGrpcRoute {
		return &v
	}).(GatewayRouteSpecGrpcRoutePtrOutput)
}

// Action to take if a match is determined.
func (o GatewayRouteSpecGrpcRouteOutput) Action() GatewayRouteSpecGrpcRouteActionOutput {
	return o.ApplyT(func(v GatewayRouteSpecGrpcRoute) GatewayRouteSpecGrpcRouteAction { return v.Action }).(GatewayRouteSpecGrpcRouteActionOutput)
}

// Criteria for determining a request match.
func (o GatewayRouteSpecGrpcRouteOutput) Match() GatewayRouteSpecGrpcRouteMatchOutput {
	return o.ApplyT(func(v GatewayRouteSpecGrpcRoute) GatewayRouteSpecGrpcRouteMatch { return v.Match }).(GatewayRouteSpecGrpcRouteMatchOutput)
}

type GatewayRouteSpecGrpcRoutePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRoute)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRoutePtrOutput) ToGatewayRouteSpecGrpcRoutePtrOutput() GatewayRouteSpecGrpcRoutePtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRoutePtrOutput) ToGatewayRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRoutePtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRoutePtrOutput) Elem() GatewayRouteSpecGrpcRouteOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRoute) GatewayRouteSpecGrpcRoute {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecGrpcRoute
		return ret
	}).(GatewayRouteSpecGrpcRouteOutput)
}

// Action to take if a match is determined.
func (o GatewayRouteSpecGrpcRoutePtrOutput) Action() GatewayRouteSpecGrpcRouteActionPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRoute) *GatewayRouteSpecGrpcRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(GatewayRouteSpecGrpcRouteActionPtrOutput)
}

// Criteria for determining a request match.
func (o GatewayRouteSpecGrpcRoutePtrOutput) Match() GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRoute) *GatewayRouteSpecGrpcRouteMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(GatewayRouteSpecGrpcRouteMatchPtrOutput)
}

type GatewayRouteSpecGrpcRouteAction struct {
	// Target that traffic is routed to when a request matches the gateway route.
	Target GatewayRouteSpecGrpcRouteActionTarget `pulumi:"target"`
}

// GatewayRouteSpecGrpcRouteActionInput is an input type that accepts GatewayRouteSpecGrpcRouteActionArgs and GatewayRouteSpecGrpcRouteActionOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteActionInput` via:
//
//	GatewayRouteSpecGrpcRouteActionArgs{...}
type GatewayRouteSpecGrpcRouteActionInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteActionOutput() GatewayRouteSpecGrpcRouteActionOutput
	ToGatewayRouteSpecGrpcRouteActionOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteActionOutput
}

type GatewayRouteSpecGrpcRouteActionArgs struct {
	// Target that traffic is routed to when a request matches the gateway route.
	Target GatewayRouteSpecGrpcRouteActionTargetInput `pulumi:"target"`
}

func (GatewayRouteSpecGrpcRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (i GatewayRouteSpecGrpcRouteActionArgs) ToGatewayRouteSpecGrpcRouteActionOutput() GatewayRouteSpecGrpcRouteActionOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteActionArgs) ToGatewayRouteSpecGrpcRouteActionOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionOutput)
}

func (i GatewayRouteSpecGrpcRouteActionArgs) ToGatewayRouteSpecGrpcRouteActionPtrOutput() GatewayRouteSpecGrpcRouteActionPtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteActionArgs) ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionOutput).ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(ctx)
}

// GatewayRouteSpecGrpcRouteActionPtrInput is an input type that accepts GatewayRouteSpecGrpcRouteActionArgs, GatewayRouteSpecGrpcRouteActionPtr and GatewayRouteSpecGrpcRouteActionPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteActionPtrInput` via:
//
//	        GatewayRouteSpecGrpcRouteActionArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecGrpcRouteActionPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteActionPtrOutput() GatewayRouteSpecGrpcRouteActionPtrOutput
	ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteActionPtrOutput
}

type gatewayRouteSpecGrpcRouteActionPtrType GatewayRouteSpecGrpcRouteActionArgs

func GatewayRouteSpecGrpcRouteActionPtr(v *GatewayRouteSpecGrpcRouteActionArgs) GatewayRouteSpecGrpcRouteActionPtrInput {
	return (*gatewayRouteSpecGrpcRouteActionPtrType)(v)
}

func (*gatewayRouteSpecGrpcRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (i *gatewayRouteSpecGrpcRouteActionPtrType) ToGatewayRouteSpecGrpcRouteActionPtrOutput() GatewayRouteSpecGrpcRouteActionPtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecGrpcRouteActionPtrType) ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionPtrOutput)
}

type GatewayRouteSpecGrpcRouteActionOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteActionOutput) ToGatewayRouteSpecGrpcRouteActionOutput() GatewayRouteSpecGrpcRouteActionOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionOutput) ToGatewayRouteSpecGrpcRouteActionOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionOutput) ToGatewayRouteSpecGrpcRouteActionPtrOutput() GatewayRouteSpecGrpcRouteActionPtrOutput {
	return o.ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecGrpcRouteActionOutput) ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecGrpcRouteAction) *GatewayRouteSpecGrpcRouteAction {
		return &v
	}).(GatewayRouteSpecGrpcRouteActionPtrOutput)
}

// Target that traffic is routed to when a request matches the gateway route.
func (o GatewayRouteSpecGrpcRouteActionOutput) Target() GatewayRouteSpecGrpcRouteActionTargetOutput {
	return o.ApplyT(func(v GatewayRouteSpecGrpcRouteAction) GatewayRouteSpecGrpcRouteActionTarget { return v.Target }).(GatewayRouteSpecGrpcRouteActionTargetOutput)
}

type GatewayRouteSpecGrpcRouteActionPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteActionPtrOutput) ToGatewayRouteSpecGrpcRouteActionPtrOutput() GatewayRouteSpecGrpcRouteActionPtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionPtrOutput) ToGatewayRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionPtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionPtrOutput) Elem() GatewayRouteSpecGrpcRouteActionOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteAction) GatewayRouteSpecGrpcRouteAction {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecGrpcRouteAction
		return ret
	}).(GatewayRouteSpecGrpcRouteActionOutput)
}

// Target that traffic is routed to when a request matches the gateway route.
func (o GatewayRouteSpecGrpcRouteActionPtrOutput) Target() GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteAction) *GatewayRouteSpecGrpcRouteActionTarget {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(GatewayRouteSpecGrpcRouteActionTargetPtrOutput)
}

type GatewayRouteSpecGrpcRouteActionTarget struct {
	// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
	Port *int `pulumi:"port"`
	// Virtual service gateway route target.
	VirtualService GatewayRouteSpecGrpcRouteActionTargetVirtualService `pulumi:"virtualService"`
}

// GatewayRouteSpecGrpcRouteActionTargetInput is an input type that accepts GatewayRouteSpecGrpcRouteActionTargetArgs and GatewayRouteSpecGrpcRouteActionTargetOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteActionTargetInput` via:
//
//	GatewayRouteSpecGrpcRouteActionTargetArgs{...}
type GatewayRouteSpecGrpcRouteActionTargetInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteActionTargetOutput() GatewayRouteSpecGrpcRouteActionTargetOutput
	ToGatewayRouteSpecGrpcRouteActionTargetOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteActionTargetOutput
}

type GatewayRouteSpecGrpcRouteActionTargetArgs struct {
	// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Virtual service gateway route target.
	VirtualService GatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput `pulumi:"virtualService"`
}

func (GatewayRouteSpecGrpcRouteActionTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTarget)(nil)).Elem()
}

func (i GatewayRouteSpecGrpcRouteActionTargetArgs) ToGatewayRouteSpecGrpcRouteActionTargetOutput() GatewayRouteSpecGrpcRouteActionTargetOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionTargetOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteActionTargetArgs) ToGatewayRouteSpecGrpcRouteActionTargetOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionTargetOutput)
}

func (i GatewayRouteSpecGrpcRouteActionTargetArgs) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutput() GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteActionTargetArgs) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionTargetOutput).ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(ctx)
}

// GatewayRouteSpecGrpcRouteActionTargetPtrInput is an input type that accepts GatewayRouteSpecGrpcRouteActionTargetArgs, GatewayRouteSpecGrpcRouteActionTargetPtr and GatewayRouteSpecGrpcRouteActionTargetPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteActionTargetPtrInput` via:
//
//	        GatewayRouteSpecGrpcRouteActionTargetArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecGrpcRouteActionTargetPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteActionTargetPtrOutput() GatewayRouteSpecGrpcRouteActionTargetPtrOutput
	ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteActionTargetPtrOutput
}

type gatewayRouteSpecGrpcRouteActionTargetPtrType GatewayRouteSpecGrpcRouteActionTargetArgs

func GatewayRouteSpecGrpcRouteActionTargetPtr(v *GatewayRouteSpecGrpcRouteActionTargetArgs) GatewayRouteSpecGrpcRouteActionTargetPtrInput {
	return (*gatewayRouteSpecGrpcRouteActionTargetPtrType)(v)
}

func (*gatewayRouteSpecGrpcRouteActionTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteActionTarget)(nil)).Elem()
}

func (i *gatewayRouteSpecGrpcRouteActionTargetPtrType) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutput() GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecGrpcRouteActionTargetPtrType) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionTargetPtrOutput)
}

type GatewayRouteSpecGrpcRouteActionTargetOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteActionTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTarget)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteActionTargetOutput) ToGatewayRouteSpecGrpcRouteActionTargetOutput() GatewayRouteSpecGrpcRouteActionTargetOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetOutput) ToGatewayRouteSpecGrpcRouteActionTargetOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetOutput) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutput() GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return o.ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecGrpcRouteActionTargetOutput) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecGrpcRouteActionTarget) *GatewayRouteSpecGrpcRouteActionTarget {
		return &v
	}).(GatewayRouteSpecGrpcRouteActionTargetPtrOutput)
}

// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
func (o GatewayRouteSpecGrpcRouteActionTargetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecGrpcRouteActionTarget) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Virtual service gateway route target.
func (o GatewayRouteSpecGrpcRouteActionTargetOutput) VirtualService() GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return o.ApplyT(func(v GatewayRouteSpecGrpcRouteActionTarget) GatewayRouteSpecGrpcRouteActionTargetVirtualService {
		return v.VirtualService
	}).(GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput)
}

type GatewayRouteSpecGrpcRouteActionTargetPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteActionTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteActionTarget)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteActionTargetPtrOutput) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutput() GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetPtrOutput) ToGatewayRouteSpecGrpcRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetPtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetPtrOutput) Elem() GatewayRouteSpecGrpcRouteActionTargetOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteActionTarget) GatewayRouteSpecGrpcRouteActionTarget {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecGrpcRouteActionTarget
		return ret
	}).(GatewayRouteSpecGrpcRouteActionTargetOutput)
}

// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
func (o GatewayRouteSpecGrpcRouteActionTargetPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteActionTarget) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Virtual service gateway route target.
func (o GatewayRouteSpecGrpcRouteActionTargetPtrOutput) VirtualService() GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteActionTarget) *GatewayRouteSpecGrpcRouteActionTargetVirtualService {
		if v == nil {
			return nil
		}
		return &v.VirtualService
	}).(GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput)
}

type GatewayRouteSpecGrpcRouteActionTargetVirtualService struct {
	// Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
	VirtualServiceName string `pulumi:"virtualServiceName"`
}

// GatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput is an input type that accepts GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs and GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput` via:
//
//	GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs{...}
type GatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput
	ToGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput
}

type GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs struct {
	// Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
	VirtualServiceName pulumi.StringInput `pulumi:"virtualServiceName"`
}

func (GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTargetVirtualService)(nil)).Elem()
}

func (i GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput)
}

func (i GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput).ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(ctx)
}

// GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrInput is an input type that accepts GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs, GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtr and GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrInput` via:
//
//	        GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput
	ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput
}

type gatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrType GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs

func GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtr(v *GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrInput {
	return (*gatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrType)(v)
}

func (*gatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteActionTargetVirtualService)(nil)).Elem()
}

func (i *gatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrType) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrType) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput)
}

type GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTargetVirtualService)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return o.ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecGrpcRouteActionTargetVirtualService) *GatewayRouteSpecGrpcRouteActionTargetVirtualService {
		return &v
	}).(GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput)
}

// Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) VirtualServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecGrpcRouteActionTargetVirtualService) string { return v.VirtualServiceName }).(pulumi.StringOutput)
}

type GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteActionTargetVirtualService)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput) ToGatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput) Elem() GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteActionTargetVirtualService) GatewayRouteSpecGrpcRouteActionTargetVirtualService {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecGrpcRouteActionTargetVirtualService
		return ret
	}).(GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput)
}

// Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
func (o GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput) VirtualServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteActionTargetVirtualService) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualServiceName
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecGrpcRouteMatch struct {
	// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
	Port *int `pulumi:"port"`
	// Fully qualified domain name for the service to match from the request.
	ServiceName string `pulumi:"serviceName"`
}

// GatewayRouteSpecGrpcRouteMatchInput is an input type that accepts GatewayRouteSpecGrpcRouteMatchArgs and GatewayRouteSpecGrpcRouteMatchOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteMatchInput` via:
//
//	GatewayRouteSpecGrpcRouteMatchArgs{...}
type GatewayRouteSpecGrpcRouteMatchInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteMatchOutput() GatewayRouteSpecGrpcRouteMatchOutput
	ToGatewayRouteSpecGrpcRouteMatchOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteMatchOutput
}

type GatewayRouteSpecGrpcRouteMatchArgs struct {
	// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Fully qualified domain name for the service to match from the request.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GatewayRouteSpecGrpcRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (i GatewayRouteSpecGrpcRouteMatchArgs) ToGatewayRouteSpecGrpcRouteMatchOutput() GatewayRouteSpecGrpcRouteMatchOutput {
	return i.ToGatewayRouteSpecGrpcRouteMatchOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteMatchArgs) ToGatewayRouteSpecGrpcRouteMatchOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteMatchOutput)
}

func (i GatewayRouteSpecGrpcRouteMatchArgs) ToGatewayRouteSpecGrpcRouteMatchPtrOutput() GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecGrpcRouteMatchArgs) ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteMatchOutput).ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx)
}

// GatewayRouteSpecGrpcRouteMatchPtrInput is an input type that accepts GatewayRouteSpecGrpcRouteMatchArgs, GatewayRouteSpecGrpcRouteMatchPtr and GatewayRouteSpecGrpcRouteMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecGrpcRouteMatchPtrInput` via:
//
//	        GatewayRouteSpecGrpcRouteMatchArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecGrpcRouteMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecGrpcRouteMatchPtrOutput() GatewayRouteSpecGrpcRouteMatchPtrOutput
	ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Context) GatewayRouteSpecGrpcRouteMatchPtrOutput
}

type gatewayRouteSpecGrpcRouteMatchPtrType GatewayRouteSpecGrpcRouteMatchArgs

func GatewayRouteSpecGrpcRouteMatchPtr(v *GatewayRouteSpecGrpcRouteMatchArgs) GatewayRouteSpecGrpcRouteMatchPtrInput {
	return (*gatewayRouteSpecGrpcRouteMatchPtrType)(v)
}

func (*gatewayRouteSpecGrpcRouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (i *gatewayRouteSpecGrpcRouteMatchPtrType) ToGatewayRouteSpecGrpcRouteMatchPtrOutput() GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return i.ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecGrpcRouteMatchPtrType) ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecGrpcRouteMatchPtrOutput)
}

type GatewayRouteSpecGrpcRouteMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteMatchOutput) ToGatewayRouteSpecGrpcRouteMatchOutput() GatewayRouteSpecGrpcRouteMatchOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteMatchOutput) ToGatewayRouteSpecGrpcRouteMatchOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteMatchOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteMatchOutput) ToGatewayRouteSpecGrpcRouteMatchPtrOutput() GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return o.ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecGrpcRouteMatchOutput) ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecGrpcRouteMatch) *GatewayRouteSpecGrpcRouteMatch {
		return &v
	}).(GatewayRouteSpecGrpcRouteMatchPtrOutput)
}

// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
func (o GatewayRouteSpecGrpcRouteMatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecGrpcRouteMatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Fully qualified domain name for the service to match from the request.
func (o GatewayRouteSpecGrpcRouteMatchOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecGrpcRouteMatch) string { return v.ServiceName }).(pulumi.StringOutput)
}

type GatewayRouteSpecGrpcRouteMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecGrpcRouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (o GatewayRouteSpecGrpcRouteMatchPtrOutput) ToGatewayRouteSpecGrpcRouteMatchPtrOutput() GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteMatchPtrOutput) ToGatewayRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecGrpcRouteMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecGrpcRouteMatchPtrOutput) Elem() GatewayRouteSpecGrpcRouteMatchOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteMatch) GatewayRouteSpecGrpcRouteMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecGrpcRouteMatch
		return ret
	}).(GatewayRouteSpecGrpcRouteMatchOutput)
}

// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
func (o GatewayRouteSpecGrpcRouteMatchPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteMatch) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Fully qualified domain name for the service to match from the request.
func (o GatewayRouteSpecGrpcRouteMatchPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecGrpcRouteMatch) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2Route struct {
	// Action to take if a match is determined.
	Action GatewayRouteSpecHttp2RouteAction `pulumi:"action"`
	// Criteria for determining a request match.
	Match GatewayRouteSpecHttp2RouteMatch `pulumi:"match"`
}

// GatewayRouteSpecHttp2RouteInput is an input type that accepts GatewayRouteSpecHttp2RouteArgs and GatewayRouteSpecHttp2RouteOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteInput` via:
//
//	GatewayRouteSpecHttp2RouteArgs{...}
type GatewayRouteSpecHttp2RouteInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteOutput() GatewayRouteSpecHttp2RouteOutput
	ToGatewayRouteSpecHttp2RouteOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteOutput
}

type GatewayRouteSpecHttp2RouteArgs struct {
	// Action to take if a match is determined.
	Action GatewayRouteSpecHttp2RouteActionInput `pulumi:"action"`
	// Criteria for determining a request match.
	Match GatewayRouteSpecHttp2RouteMatchInput `pulumi:"match"`
}

func (GatewayRouteSpecHttp2RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2Route)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteArgs) ToGatewayRouteSpecHttp2RouteOutput() GatewayRouteSpecHttp2RouteOutput {
	return i.ToGatewayRouteSpecHttp2RouteOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteArgs) ToGatewayRouteSpecHttp2RouteOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteOutput)
}

func (i GatewayRouteSpecHttp2RouteArgs) ToGatewayRouteSpecHttp2RoutePtrOutput() GatewayRouteSpecHttp2RoutePtrOutput {
	return i.ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteArgs) ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteOutput).ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RoutePtrInput is an input type that accepts GatewayRouteSpecHttp2RouteArgs, GatewayRouteSpecHttp2RoutePtr and GatewayRouteSpecHttp2RoutePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RoutePtrInput` via:
//
//	        GatewayRouteSpecHttp2RouteArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttp2RoutePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RoutePtrOutput() GatewayRouteSpecHttp2RoutePtrOutput
	ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RoutePtrOutput
}

type gatewayRouteSpecHttp2RoutePtrType GatewayRouteSpecHttp2RouteArgs

func GatewayRouteSpecHttp2RoutePtr(v *GatewayRouteSpecHttp2RouteArgs) GatewayRouteSpecHttp2RoutePtrInput {
	return (*gatewayRouteSpecHttp2RoutePtrType)(v)
}

func (*gatewayRouteSpecHttp2RoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2Route)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RoutePtrType) ToGatewayRouteSpecHttp2RoutePtrOutput() GatewayRouteSpecHttp2RoutePtrOutput {
	return i.ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RoutePtrType) ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RoutePtrOutput)
}

type GatewayRouteSpecHttp2RouteOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2Route)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteOutput) ToGatewayRouteSpecHttp2RouteOutput() GatewayRouteSpecHttp2RouteOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteOutput) ToGatewayRouteSpecHttp2RouteOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteOutput) ToGatewayRouteSpecHttp2RoutePtrOutput() GatewayRouteSpecHttp2RoutePtrOutput {
	return o.ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteOutput) ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2Route) *GatewayRouteSpecHttp2Route {
		return &v
	}).(GatewayRouteSpecHttp2RoutePtrOutput)
}

// Action to take if a match is determined.
func (o GatewayRouteSpecHttp2RouteOutput) Action() GatewayRouteSpecHttp2RouteActionOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2Route) GatewayRouteSpecHttp2RouteAction { return v.Action }).(GatewayRouteSpecHttp2RouteActionOutput)
}

// Criteria for determining a request match.
func (o GatewayRouteSpecHttp2RouteOutput) Match() GatewayRouteSpecHttp2RouteMatchOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2Route) GatewayRouteSpecHttp2RouteMatch { return v.Match }).(GatewayRouteSpecHttp2RouteMatchOutput)
}

type GatewayRouteSpecHttp2RoutePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2Route)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RoutePtrOutput) ToGatewayRouteSpecHttp2RoutePtrOutput() GatewayRouteSpecHttp2RoutePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RoutePtrOutput) ToGatewayRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RoutePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RoutePtrOutput) Elem() GatewayRouteSpecHttp2RouteOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2Route) GatewayRouteSpecHttp2Route {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2Route
		return ret
	}).(GatewayRouteSpecHttp2RouteOutput)
}

// Action to take if a match is determined.
func (o GatewayRouteSpecHttp2RoutePtrOutput) Action() GatewayRouteSpecHttp2RouteActionPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2Route) *GatewayRouteSpecHttp2RouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(GatewayRouteSpecHttp2RouteActionPtrOutput)
}

// Criteria for determining a request match.
func (o GatewayRouteSpecHttp2RoutePtrOutput) Match() GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2Route) *GatewayRouteSpecHttp2RouteMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(GatewayRouteSpecHttp2RouteMatchPtrOutput)
}

type GatewayRouteSpecHttp2RouteAction struct {
	// Gateway route action to rewrite.
	Rewrite *GatewayRouteSpecHttp2RouteActionRewrite `pulumi:"rewrite"`
	// Target that traffic is routed to when a request matches the gateway route.
	Target GatewayRouteSpecHttp2RouteActionTarget `pulumi:"target"`
}

// GatewayRouteSpecHttp2RouteActionInput is an input type that accepts GatewayRouteSpecHttp2RouteActionArgs and GatewayRouteSpecHttp2RouteActionOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionInput` via:
//
//	GatewayRouteSpecHttp2RouteActionArgs{...}
type GatewayRouteSpecHttp2RouteActionInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionOutput() GatewayRouteSpecHttp2RouteActionOutput
	ToGatewayRouteSpecHttp2RouteActionOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionOutput
}

type GatewayRouteSpecHttp2RouteActionArgs struct {
	// Gateway route action to rewrite.
	Rewrite GatewayRouteSpecHttp2RouteActionRewritePtrInput `pulumi:"rewrite"`
	// Target that traffic is routed to when a request matches the gateway route.
	Target GatewayRouteSpecHttp2RouteActionTargetInput `pulumi:"target"`
}

func (GatewayRouteSpecHttp2RouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteActionArgs) ToGatewayRouteSpecHttp2RouteActionOutput() GatewayRouteSpecHttp2RouteActionOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionArgs) ToGatewayRouteSpecHttp2RouteActionOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionOutput)
}

func (i GatewayRouteSpecHttp2RouteActionArgs) ToGatewayRouteSpecHttp2RouteActionPtrOutput() GatewayRouteSpecHttp2RouteActionPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionArgs) ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionOutput).ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteActionPtrInput is an input type that accepts GatewayRouteSpecHttp2RouteActionArgs, GatewayRouteSpecHttp2RouteActionPtr and GatewayRouteSpecHttp2RouteActionPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionPtrInput` via:
//
//	        GatewayRouteSpecHttp2RouteActionArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttp2RouteActionPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionPtrOutput() GatewayRouteSpecHttp2RouteActionPtrOutput
	ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionPtrOutput
}

type gatewayRouteSpecHttp2RouteActionPtrType GatewayRouteSpecHttp2RouteActionArgs

func GatewayRouteSpecHttp2RouteActionPtr(v *GatewayRouteSpecHttp2RouteActionArgs) GatewayRouteSpecHttp2RouteActionPtrInput {
	return (*gatewayRouteSpecHttp2RouteActionPtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteActionPtrType) ToGatewayRouteSpecHttp2RouteActionPtrOutput() GatewayRouteSpecHttp2RouteActionPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteActionPtrType) ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionPtrOutput)
}

type GatewayRouteSpecHttp2RouteActionOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionOutput) ToGatewayRouteSpecHttp2RouteActionOutput() GatewayRouteSpecHttp2RouteActionOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionOutput) ToGatewayRouteSpecHttp2RouteActionOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionOutput) ToGatewayRouteSpecHttp2RouteActionPtrOutput() GatewayRouteSpecHttp2RouteActionPtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteActionOutput) ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteAction) *GatewayRouteSpecHttp2RouteAction {
		return &v
	}).(GatewayRouteSpecHttp2RouteActionPtrOutput)
}

// Gateway route action to rewrite.
func (o GatewayRouteSpecHttp2RouteActionOutput) Rewrite() GatewayRouteSpecHttp2RouteActionRewritePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteAction) *GatewayRouteSpecHttp2RouteActionRewrite { return v.Rewrite }).(GatewayRouteSpecHttp2RouteActionRewritePtrOutput)
}

// Target that traffic is routed to when a request matches the gateway route.
func (o GatewayRouteSpecHttp2RouteActionOutput) Target() GatewayRouteSpecHttp2RouteActionTargetOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteAction) GatewayRouteSpecHttp2RouteActionTarget { return v.Target }).(GatewayRouteSpecHttp2RouteActionTargetOutput)
}

type GatewayRouteSpecHttp2RouteActionPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionPtrOutput) ToGatewayRouteSpecHttp2RouteActionPtrOutput() GatewayRouteSpecHttp2RouteActionPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionPtrOutput) ToGatewayRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionPtrOutput) Elem() GatewayRouteSpecHttp2RouteActionOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteAction) GatewayRouteSpecHttp2RouteAction {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteAction
		return ret
	}).(GatewayRouteSpecHttp2RouteActionOutput)
}

// Gateway route action to rewrite.
func (o GatewayRouteSpecHttp2RouteActionPtrOutput) Rewrite() GatewayRouteSpecHttp2RouteActionRewritePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteAction) *GatewayRouteSpecHttp2RouteActionRewrite {
		if v == nil {
			return nil
		}
		return v.Rewrite
	}).(GatewayRouteSpecHttp2RouteActionRewritePtrOutput)
}

// Target that traffic is routed to when a request matches the gateway route.
func (o GatewayRouteSpecHttp2RouteActionPtrOutput) Target() GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteAction) *GatewayRouteSpecHttp2RouteActionTarget {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(GatewayRouteSpecHttp2RouteActionTargetPtrOutput)
}

type GatewayRouteSpecHttp2RouteActionRewrite struct {
	// Host name to rewrite.
	Hostname *GatewayRouteSpecHttp2RouteActionRewriteHostname `pulumi:"hostname"`
	// Exact path to rewrite.
	Path *GatewayRouteSpecHttp2RouteActionRewritePath `pulumi:"path"`
	// Specified beginning characters to rewrite.
	Prefix *GatewayRouteSpecHttp2RouteActionRewritePrefix `pulumi:"prefix"`
}

// GatewayRouteSpecHttp2RouteActionRewriteInput is an input type that accepts GatewayRouteSpecHttp2RouteActionRewriteArgs and GatewayRouteSpecHttp2RouteActionRewriteOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionRewriteInput` via:
//
//	GatewayRouteSpecHttp2RouteActionRewriteArgs{...}
type GatewayRouteSpecHttp2RouteActionRewriteInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionRewriteOutput() GatewayRouteSpecHttp2RouteActionRewriteOutput
	ToGatewayRouteSpecHttp2RouteActionRewriteOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionRewriteOutput
}

type GatewayRouteSpecHttp2RouteActionRewriteArgs struct {
	// Host name to rewrite.
	Hostname GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrInput `pulumi:"hostname"`
	// Exact path to rewrite.
	Path GatewayRouteSpecHttp2RouteActionRewritePathPtrInput `pulumi:"path"`
	// Specified beginning characters to rewrite.
	Prefix GatewayRouteSpecHttp2RouteActionRewritePrefixPtrInput `pulumi:"prefix"`
}

func (GatewayRouteSpecHttp2RouteActionRewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewrite)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteActionRewriteArgs) ToGatewayRouteSpecHttp2RouteActionRewriteOutput() GatewayRouteSpecHttp2RouteActionRewriteOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionRewriteOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionRewriteArgs) ToGatewayRouteSpecHttp2RouteActionRewriteOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionRewriteOutput)
}

func (i GatewayRouteSpecHttp2RouteActionRewriteArgs) ToGatewayRouteSpecHttp2RouteActionRewritePtrOutput() GatewayRouteSpecHttp2RouteActionRewritePtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionRewritePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionRewriteArgs) ToGatewayRouteSpecHttp2RouteActionRewritePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionRewriteOutput).ToGatewayRouteSpecHttp2RouteActionRewritePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteActionRewritePtrInput is an input type that accepts GatewayRouteSpecHttp2RouteActionRewriteArgs, GatewayRouteSpecHttp2RouteActionRewritePtr and GatewayRouteSpecHttp2RouteActionRewritePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionRewritePtrInput` via:
//
//	        GatewayRouteSpecHttp2RouteActionRewriteArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttp2RouteActionRewritePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionRewritePtrOutput() GatewayRouteSpecHttp2RouteActionRewritePtrOutput
	ToGatewayRouteSpecHttp2RouteActionRewritePtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionRewritePtrOutput
}

type gatewayRouteSpecHttp2RouteActionRewritePtrType GatewayRouteSpecHttp2RouteActionRewriteArgs

func GatewayRouteSpecHttp2RouteActionRewritePtr(v *GatewayRouteSpecHttp2RouteActionRewriteArgs) GatewayRouteSpecHttp2RouteActionRewritePtrInput {
	return (*gatewayRouteSpecHttp2RouteActionRewritePtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteActionRewritePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionRewrite)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteActionRewritePtrType) ToGatewayRouteSpecHttp2RouteActionRewritePtrOutput() GatewayRouteSpecHttp2RouteActionRewritePtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionRewritePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteActionRewritePtrType) ToGatewayRouteSpecHttp2RouteActionRewritePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionRewritePtrOutput)
}

type GatewayRouteSpecHttp2RouteActionRewriteOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionRewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewrite)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionRewriteOutput) ToGatewayRouteSpecHttp2RouteActionRewriteOutput() GatewayRouteSpecHttp2RouteActionRewriteOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewriteOutput) ToGatewayRouteSpecHttp2RouteActionRewriteOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewriteOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewriteOutput) ToGatewayRouteSpecHttp2RouteActionRewritePtrOutput() GatewayRouteSpecHttp2RouteActionRewritePtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteActionRewritePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteActionRewriteOutput) ToGatewayRouteSpecHttp2RouteActionRewritePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteActionRewrite) *GatewayRouteSpecHttp2RouteActionRewrite {
		return &v
	}).(GatewayRouteSpecHttp2RouteActionRewritePtrOutput)
}

// Host name to rewrite.
func (o GatewayRouteSpecHttp2RouteActionRewriteOutput) Hostname() GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteActionRewrite) *GatewayRouteSpecHttp2RouteActionRewriteHostname {
		return v.Hostname
	}).(GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput)
}

// Exact path to rewrite.
func (o GatewayRouteSpecHttp2RouteActionRewriteOutput) Path() GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteActionRewrite) *GatewayRouteSpecHttp2RouteActionRewritePath {
		return v.Path
	}).(GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput)
}

// Specified beginning characters to rewrite.
func (o GatewayRouteSpecHttp2RouteActionRewriteOutput) Prefix() GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteActionRewrite) *GatewayRouteSpecHttp2RouteActionRewritePrefix {
		return v.Prefix
	}).(GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput)
}

type GatewayRouteSpecHttp2RouteActionRewritePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionRewritePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionRewrite)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionRewritePtrOutput) ToGatewayRouteSpecHttp2RouteActionRewritePtrOutput() GatewayRouteSpecHttp2RouteActionRewritePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewritePtrOutput) ToGatewayRouteSpecHttp2RouteActionRewritePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewritePtrOutput) Elem() GatewayRouteSpecHttp2RouteActionRewriteOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionRewrite) GatewayRouteSpecHttp2RouteActionRewrite {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteActionRewrite
		return ret
	}).(GatewayRouteSpecHttp2RouteActionRewriteOutput)
}

// Host name to rewrite.
func (o GatewayRouteSpecHttp2RouteActionRewritePtrOutput) Hostname() GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionRewrite) *GatewayRouteSpecHttp2RouteActionRewriteHostname {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput)
}

// Exact path to rewrite.
func (o GatewayRouteSpecHttp2RouteActionRewritePtrOutput) Path() GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionRewrite) *GatewayRouteSpecHttp2RouteActionRewritePath {
		if v == nil {
			return nil
		}
		return v.Path
	}).(GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput)
}

// Specified beginning characters to rewrite.
func (o GatewayRouteSpecHttp2RouteActionRewritePtrOutput) Prefix() GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionRewrite) *GatewayRouteSpecHttp2RouteActionRewritePrefix {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput)
}

type GatewayRouteSpecHttp2RouteActionRewriteHostname struct {
	// Default target host name to write to. Valid values: `ENABLED`, `DISABLED`.
	DefaultTargetHostname string `pulumi:"defaultTargetHostname"`
}

// GatewayRouteSpecHttp2RouteActionRewriteHostnameInput is an input type that accepts GatewayRouteSpecHttp2RouteActionRewriteHostnameArgs and GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionRewriteHostnameInput` via:
//
//	GatewayRouteSpecHttp2RouteActionRewriteHostnameArgs{...}
type GatewayRouteSpecHttp2RouteActionRewriteHostnameInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput() GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput
	ToGatewayRouteSpecHttp2RouteActionRewriteHostnameOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput
}

type GatewayRouteSpecHttp2RouteActionRewriteHostnameArgs struct {
	// Default target host name to write to. Valid values: `ENABLED`, `DISABLED`.
	DefaultTargetHostname pulumi.StringInput `pulumi:"defaultTargetHostname"`
}

func (GatewayRouteSpecHttp2RouteActionRewriteHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewriteHostname)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteActionRewriteHostnameArgs) ToGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput() GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionRewriteHostnameOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionRewriteHostnameArgs) ToGatewayRouteSpecHttp2RouteActionRewriteHostnameOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput)
}

func (i GatewayRouteSpecHttp2RouteActionRewriteHostnameArgs) ToGatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput() GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionRewriteHostnameArgs) ToGatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput).ToGatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrInput is an input type that accepts GatewayRouteSpecHttp2RouteActionRewriteHostnameArgs, GatewayRouteSpecHttp2RouteActionRewriteHostnamePtr and GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrInput` via:
//
//	        GatewayRouteSpecHttp2RouteActionRewriteHostnameArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput() GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput
	ToGatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput
}

type gatewayRouteSpecHttp2RouteActionRewriteHostnamePtrType GatewayRouteSpecHttp2RouteActionRewriteHostnameArgs

func GatewayRouteSpecHttp2RouteActionRewriteHostnamePtr(v *GatewayRouteSpecHttp2RouteActionRewriteHostnameArgs) GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrInput {
	return (*gatewayRouteSpecHttp2RouteActionRewriteHostnamePtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteActionRewriteHostnamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionRewriteHostname)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteActionRewriteHostnamePtrType) ToGatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput() GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteActionRewriteHostnamePtrType) ToGatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput)
}

type GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewriteHostname)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput) ToGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput() GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput) ToGatewayRouteSpecHttp2RouteActionRewriteHostnameOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput) ToGatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput() GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput) ToGatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteActionRewriteHostname) *GatewayRouteSpecHttp2RouteActionRewriteHostname {
		return &v
	}).(GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput)
}

// Default target host name to write to. Valid values: `ENABLED`, `DISABLED`.
func (o GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput) DefaultTargetHostname() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteActionRewriteHostname) string { return v.DefaultTargetHostname }).(pulumi.StringOutput)
}

type GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionRewriteHostname)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput) ToGatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput() GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput) ToGatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput) Elem() GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionRewriteHostname) GatewayRouteSpecHttp2RouteActionRewriteHostname {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteActionRewriteHostname
		return ret
	}).(GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput)
}

// Default target host name to write to. Valid values: `ENABLED`, `DISABLED`.
func (o GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput) DefaultTargetHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionRewriteHostname) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultTargetHostname
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2RouteActionRewritePath struct {
	// The exact path to match on.
	Exact string `pulumi:"exact"`
}

// GatewayRouteSpecHttp2RouteActionRewritePathInput is an input type that accepts GatewayRouteSpecHttp2RouteActionRewritePathArgs and GatewayRouteSpecHttp2RouteActionRewritePathOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionRewritePathInput` via:
//
//	GatewayRouteSpecHttp2RouteActionRewritePathArgs{...}
type GatewayRouteSpecHttp2RouteActionRewritePathInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionRewritePathOutput() GatewayRouteSpecHttp2RouteActionRewritePathOutput
	ToGatewayRouteSpecHttp2RouteActionRewritePathOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionRewritePathOutput
}

type GatewayRouteSpecHttp2RouteActionRewritePathArgs struct {
	// The exact path to match on.
	Exact pulumi.StringInput `pulumi:"exact"`
}

func (GatewayRouteSpecHttp2RouteActionRewritePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewritePath)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteActionRewritePathArgs) ToGatewayRouteSpecHttp2RouteActionRewritePathOutput() GatewayRouteSpecHttp2RouteActionRewritePathOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionRewritePathOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionRewritePathArgs) ToGatewayRouteSpecHttp2RouteActionRewritePathOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionRewritePathOutput)
}

func (i GatewayRouteSpecHttp2RouteActionRewritePathArgs) ToGatewayRouteSpecHttp2RouteActionRewritePathPtrOutput() GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionRewritePathPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionRewritePathArgs) ToGatewayRouteSpecHttp2RouteActionRewritePathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionRewritePathOutput).ToGatewayRouteSpecHttp2RouteActionRewritePathPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteActionRewritePathPtrInput is an input type that accepts GatewayRouteSpecHttp2RouteActionRewritePathArgs, GatewayRouteSpecHttp2RouteActionRewritePathPtr and GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionRewritePathPtrInput` via:
//
//	        GatewayRouteSpecHttp2RouteActionRewritePathArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttp2RouteActionRewritePathPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionRewritePathPtrOutput() GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput
	ToGatewayRouteSpecHttp2RouteActionRewritePathPtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput
}

type gatewayRouteSpecHttp2RouteActionRewritePathPtrType GatewayRouteSpecHttp2RouteActionRewritePathArgs

func GatewayRouteSpecHttp2RouteActionRewritePathPtr(v *GatewayRouteSpecHttp2RouteActionRewritePathArgs) GatewayRouteSpecHttp2RouteActionRewritePathPtrInput {
	return (*gatewayRouteSpecHttp2RouteActionRewritePathPtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteActionRewritePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionRewritePath)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteActionRewritePathPtrType) ToGatewayRouteSpecHttp2RouteActionRewritePathPtrOutput() GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionRewritePathPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteActionRewritePathPtrType) ToGatewayRouteSpecHttp2RouteActionRewritePathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput)
}

type GatewayRouteSpecHttp2RouteActionRewritePathOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionRewritePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewritePath)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionRewritePathOutput) ToGatewayRouteSpecHttp2RouteActionRewritePathOutput() GatewayRouteSpecHttp2RouteActionRewritePathOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewritePathOutput) ToGatewayRouteSpecHttp2RouteActionRewritePathOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePathOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewritePathOutput) ToGatewayRouteSpecHttp2RouteActionRewritePathPtrOutput() GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteActionRewritePathPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteActionRewritePathOutput) ToGatewayRouteSpecHttp2RouteActionRewritePathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteActionRewritePath) *GatewayRouteSpecHttp2RouteActionRewritePath {
		return &v
	}).(GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput)
}

// The exact path to match on.
func (o GatewayRouteSpecHttp2RouteActionRewritePathOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteActionRewritePath) string { return v.Exact }).(pulumi.StringOutput)
}

type GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionRewritePath)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput) ToGatewayRouteSpecHttp2RouteActionRewritePathPtrOutput() GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput) ToGatewayRouteSpecHttp2RouteActionRewritePathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput) Elem() GatewayRouteSpecHttp2RouteActionRewritePathOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionRewritePath) GatewayRouteSpecHttp2RouteActionRewritePath {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteActionRewritePath
		return ret
	}).(GatewayRouteSpecHttp2RouteActionRewritePathOutput)
}

// The exact path to match on.
func (o GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionRewritePath) *string {
		if v == nil {
			return nil
		}
		return &v.Exact
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2RouteActionRewritePrefix struct {
	// Default prefix used to replace the incoming route prefix when rewritten. Valid values: `ENABLED`, `DISABLED`.
	DefaultPrefix *string `pulumi:"defaultPrefix"`
	// Value used to replace the incoming route prefix when rewritten.
	Value *string `pulumi:"value"`
}

// GatewayRouteSpecHttp2RouteActionRewritePrefixInput is an input type that accepts GatewayRouteSpecHttp2RouteActionRewritePrefixArgs and GatewayRouteSpecHttp2RouteActionRewritePrefixOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionRewritePrefixInput` via:
//
//	GatewayRouteSpecHttp2RouteActionRewritePrefixArgs{...}
type GatewayRouteSpecHttp2RouteActionRewritePrefixInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionRewritePrefixOutput() GatewayRouteSpecHttp2RouteActionRewritePrefixOutput
	ToGatewayRouteSpecHttp2RouteActionRewritePrefixOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionRewritePrefixOutput
}

type GatewayRouteSpecHttp2RouteActionRewritePrefixArgs struct {
	// Default prefix used to replace the incoming route prefix when rewritten. Valid values: `ENABLED`, `DISABLED`.
	DefaultPrefix pulumi.StringPtrInput `pulumi:"defaultPrefix"`
	// Value used to replace the incoming route prefix when rewritten.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GatewayRouteSpecHttp2RouteActionRewritePrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewritePrefix)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteActionRewritePrefixArgs) ToGatewayRouteSpecHttp2RouteActionRewritePrefixOutput() GatewayRouteSpecHttp2RouteActionRewritePrefixOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionRewritePrefixOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionRewritePrefixArgs) ToGatewayRouteSpecHttp2RouteActionRewritePrefixOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionRewritePrefixOutput)
}

func (i GatewayRouteSpecHttp2RouteActionRewritePrefixArgs) ToGatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput() GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionRewritePrefixArgs) ToGatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionRewritePrefixOutput).ToGatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteActionRewritePrefixPtrInput is an input type that accepts GatewayRouteSpecHttp2RouteActionRewritePrefixArgs, GatewayRouteSpecHttp2RouteActionRewritePrefixPtr and GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionRewritePrefixPtrInput` via:
//
//	        GatewayRouteSpecHttp2RouteActionRewritePrefixArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttp2RouteActionRewritePrefixPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput() GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput
	ToGatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput
}

type gatewayRouteSpecHttp2RouteActionRewritePrefixPtrType GatewayRouteSpecHttp2RouteActionRewritePrefixArgs

func GatewayRouteSpecHttp2RouteActionRewritePrefixPtr(v *GatewayRouteSpecHttp2RouteActionRewritePrefixArgs) GatewayRouteSpecHttp2RouteActionRewritePrefixPtrInput {
	return (*gatewayRouteSpecHttp2RouteActionRewritePrefixPtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteActionRewritePrefixPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionRewritePrefix)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteActionRewritePrefixPtrType) ToGatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput() GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteActionRewritePrefixPtrType) ToGatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput)
}

type GatewayRouteSpecHttp2RouteActionRewritePrefixOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionRewritePrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewritePrefix)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionRewritePrefixOutput) ToGatewayRouteSpecHttp2RouteActionRewritePrefixOutput() GatewayRouteSpecHttp2RouteActionRewritePrefixOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewritePrefixOutput) ToGatewayRouteSpecHttp2RouteActionRewritePrefixOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePrefixOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewritePrefixOutput) ToGatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput() GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteActionRewritePrefixOutput) ToGatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteActionRewritePrefix) *GatewayRouteSpecHttp2RouteActionRewritePrefix {
		return &v
	}).(GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput)
}

// Default prefix used to replace the incoming route prefix when rewritten. Valid values: `ENABLED`, `DISABLED`.
func (o GatewayRouteSpecHttp2RouteActionRewritePrefixOutput) DefaultPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteActionRewritePrefix) *string { return v.DefaultPrefix }).(pulumi.StringPtrOutput)
}

// Value used to replace the incoming route prefix when rewritten.
func (o GatewayRouteSpecHttp2RouteActionRewritePrefixOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteActionRewritePrefix) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionRewritePrefix)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput) ToGatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput() GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput) ToGatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput) Elem() GatewayRouteSpecHttp2RouteActionRewritePrefixOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionRewritePrefix) GatewayRouteSpecHttp2RouteActionRewritePrefix {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteActionRewritePrefix
		return ret
	}).(GatewayRouteSpecHttp2RouteActionRewritePrefixOutput)
}

// Default prefix used to replace the incoming route prefix when rewritten. Valid values: `ENABLED`, `DISABLED`.
func (o GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput) DefaultPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionRewritePrefix) *string {
		if v == nil {
			return nil
		}
		return v.DefaultPrefix
	}).(pulumi.StringPtrOutput)
}

// Value used to replace the incoming route prefix when rewritten.
func (o GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionRewritePrefix) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2RouteActionTarget struct {
	// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
	Port *int `pulumi:"port"`
	// Virtual service gateway route target.
	VirtualService GatewayRouteSpecHttp2RouteActionTargetVirtualService `pulumi:"virtualService"`
}

// GatewayRouteSpecHttp2RouteActionTargetInput is an input type that accepts GatewayRouteSpecHttp2RouteActionTargetArgs and GatewayRouteSpecHttp2RouteActionTargetOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionTargetInput` via:
//
//	GatewayRouteSpecHttp2RouteActionTargetArgs{...}
type GatewayRouteSpecHttp2RouteActionTargetInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionTargetOutput() GatewayRouteSpecHttp2RouteActionTargetOutput
	ToGatewayRouteSpecHttp2RouteActionTargetOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionTargetOutput
}

type GatewayRouteSpecHttp2RouteActionTargetArgs struct {
	// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Virtual service gateway route target.
	VirtualService GatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput `pulumi:"virtualService"`
}

func (GatewayRouteSpecHttp2RouteActionTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTarget)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteActionTargetArgs) ToGatewayRouteSpecHttp2RouteActionTargetOutput() GatewayRouteSpecHttp2RouteActionTargetOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionTargetOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionTargetArgs) ToGatewayRouteSpecHttp2RouteActionTargetOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionTargetOutput)
}

func (i GatewayRouteSpecHttp2RouteActionTargetArgs) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutput() GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionTargetArgs) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionTargetOutput).ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteActionTargetPtrInput is an input type that accepts GatewayRouteSpecHttp2RouteActionTargetArgs, GatewayRouteSpecHttp2RouteActionTargetPtr and GatewayRouteSpecHttp2RouteActionTargetPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionTargetPtrInput` via:
//
//	        GatewayRouteSpecHttp2RouteActionTargetArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttp2RouteActionTargetPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionTargetPtrOutput() GatewayRouteSpecHttp2RouteActionTargetPtrOutput
	ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionTargetPtrOutput
}

type gatewayRouteSpecHttp2RouteActionTargetPtrType GatewayRouteSpecHttp2RouteActionTargetArgs

func GatewayRouteSpecHttp2RouteActionTargetPtr(v *GatewayRouteSpecHttp2RouteActionTargetArgs) GatewayRouteSpecHttp2RouteActionTargetPtrInput {
	return (*gatewayRouteSpecHttp2RouteActionTargetPtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteActionTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionTarget)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteActionTargetPtrType) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutput() GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteActionTargetPtrType) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionTargetPtrOutput)
}

type GatewayRouteSpecHttp2RouteActionTargetOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTarget)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionTargetOutput) ToGatewayRouteSpecHttp2RouteActionTargetOutput() GatewayRouteSpecHttp2RouteActionTargetOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetOutput) ToGatewayRouteSpecHttp2RouteActionTargetOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetOutput) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutput() GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteActionTargetOutput) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteActionTarget) *GatewayRouteSpecHttp2RouteActionTarget {
		return &v
	}).(GatewayRouteSpecHttp2RouteActionTargetPtrOutput)
}

// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
func (o GatewayRouteSpecHttp2RouteActionTargetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteActionTarget) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Virtual service gateway route target.
func (o GatewayRouteSpecHttp2RouteActionTargetOutput) VirtualService() GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteActionTarget) GatewayRouteSpecHttp2RouteActionTargetVirtualService {
		return v.VirtualService
	}).(GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput)
}

type GatewayRouteSpecHttp2RouteActionTargetPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionTarget)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionTargetPtrOutput) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutput() GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetPtrOutput) ToGatewayRouteSpecHttp2RouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetPtrOutput) Elem() GatewayRouteSpecHttp2RouteActionTargetOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionTarget) GatewayRouteSpecHttp2RouteActionTarget {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteActionTarget
		return ret
	}).(GatewayRouteSpecHttp2RouteActionTargetOutput)
}

// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
func (o GatewayRouteSpecHttp2RouteActionTargetPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionTarget) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Virtual service gateway route target.
func (o GatewayRouteSpecHttp2RouteActionTargetPtrOutput) VirtualService() GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionTarget) *GatewayRouteSpecHttp2RouteActionTargetVirtualService {
		if v == nil {
			return nil
		}
		return &v.VirtualService
	}).(GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput)
}

type GatewayRouteSpecHttp2RouteActionTargetVirtualService struct {
	// Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
	VirtualServiceName string `pulumi:"virtualServiceName"`
}

// GatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput is an input type that accepts GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs and GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput` via:
//
//	GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs{...}
type GatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput
	ToGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput
}

type GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs struct {
	// Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
	VirtualServiceName pulumi.StringInput `pulumi:"virtualServiceName"`
}

func (GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTargetVirtualService)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput)
}

func (i GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput).ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrInput is an input type that accepts GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs, GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtr and GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrInput` via:
//
//	        GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput
	ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput
}

type gatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrType GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs

func GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtr(v *GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrInput {
	return (*gatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionTargetVirtualService)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrType) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrType) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput)
}

type GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTargetVirtualService)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteActionTargetVirtualService) *GatewayRouteSpecHttp2RouteActionTargetVirtualService {
		return &v
	}).(GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput)
}

// Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) VirtualServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteActionTargetVirtualService) string { return v.VirtualServiceName }).(pulumi.StringOutput)
}

type GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteActionTargetVirtualService)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput) ToGatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput) Elem() GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionTargetVirtualService) GatewayRouteSpecHttp2RouteActionTargetVirtualService {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteActionTargetVirtualService
		return ret
	}).(GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput)
}

// Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
func (o GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput) VirtualServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteActionTargetVirtualService) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualServiceName
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatch struct {
	// Client request headers to match on.
	Headers []GatewayRouteSpecHttp2RouteMatchHeader `pulumi:"headers"`
	// Host name to rewrite.
	Hostname *GatewayRouteSpecHttp2RouteMatchHostname `pulumi:"hostname"`
	// Exact path to rewrite.
	Path *GatewayRouteSpecHttp2RouteMatchPath `pulumi:"path"`
	// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
	Port *int `pulumi:"port"`
	// Specified beginning characters to rewrite.
	Prefix *string `pulumi:"prefix"`
	// Client request query parameters to match on.
	QueryParameters []GatewayRouteSpecHttp2RouteMatchQueryParameter `pulumi:"queryParameters"`
}

// GatewayRouteSpecHttp2RouteMatchInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchArgs and GatewayRouteSpecHttp2RouteMatchOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchInput` via:
//
//	GatewayRouteSpecHttp2RouteMatchArgs{...}
type GatewayRouteSpecHttp2RouteMatchInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchOutput() GatewayRouteSpecHttp2RouteMatchOutput
	ToGatewayRouteSpecHttp2RouteMatchOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchOutput
}

type GatewayRouteSpecHttp2RouteMatchArgs struct {
	// Client request headers to match on.
	Headers GatewayRouteSpecHttp2RouteMatchHeaderArrayInput `pulumi:"headers"`
	// Host name to rewrite.
	Hostname GatewayRouteSpecHttp2RouteMatchHostnamePtrInput `pulumi:"hostname"`
	// Exact path to rewrite.
	Path GatewayRouteSpecHttp2RouteMatchPathPtrInput `pulumi:"path"`
	// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Specified beginning characters to rewrite.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Client request query parameters to match on.
	QueryParameters GatewayRouteSpecHttp2RouteMatchQueryParameterArrayInput `pulumi:"queryParameters"`
}

func (GatewayRouteSpecHttp2RouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteMatchArgs) ToGatewayRouteSpecHttp2RouteMatchOutput() GatewayRouteSpecHttp2RouteMatchOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchArgs) ToGatewayRouteSpecHttp2RouteMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchOutput)
}

func (i GatewayRouteSpecHttp2RouteMatchArgs) ToGatewayRouteSpecHttp2RouteMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchArgs) ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchOutput).ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteMatchPtrInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchArgs, GatewayRouteSpecHttp2RouteMatchPtr and GatewayRouteSpecHttp2RouteMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchPtrInput` via:
//
//	        GatewayRouteSpecHttp2RouteMatchArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttp2RouteMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchPtrOutput
	ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchPtrOutput
}

type gatewayRouteSpecHttp2RouteMatchPtrType GatewayRouteSpecHttp2RouteMatchArgs

func GatewayRouteSpecHttp2RouteMatchPtr(v *GatewayRouteSpecHttp2RouteMatchArgs) GatewayRouteSpecHttp2RouteMatchPtrInput {
	return (*gatewayRouteSpecHttp2RouteMatchPtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteMatchPtrType) ToGatewayRouteSpecHttp2RouteMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteMatchPtrType) ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchOutput) ToGatewayRouteSpecHttp2RouteMatchOutput() GatewayRouteSpecHttp2RouteMatchOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchOutput) ToGatewayRouteSpecHttp2RouteMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchOutput) ToGatewayRouteSpecHttp2RouteMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteMatchOutput) ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteMatch) *GatewayRouteSpecHttp2RouteMatch {
		return &v
	}).(GatewayRouteSpecHttp2RouteMatchPtrOutput)
}

// Client request headers to match on.
func (o GatewayRouteSpecHttp2RouteMatchOutput) Headers() GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatch) []GatewayRouteSpecHttp2RouteMatchHeader { return v.Headers }).(GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput)
}

// Host name to rewrite.
func (o GatewayRouteSpecHttp2RouteMatchOutput) Hostname() GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatch) *GatewayRouteSpecHttp2RouteMatchHostname { return v.Hostname }).(GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput)
}

// Exact path to rewrite.
func (o GatewayRouteSpecHttp2RouteMatchOutput) Path() GatewayRouteSpecHttp2RouteMatchPathPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatch) *GatewayRouteSpecHttp2RouteMatchPath { return v.Path }).(GatewayRouteSpecHttp2RouteMatchPathPtrOutput)
}

// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
func (o GatewayRouteSpecHttp2RouteMatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Specified beginning characters to rewrite.
func (o GatewayRouteSpecHttp2RouteMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Client request query parameters to match on.
func (o GatewayRouteSpecHttp2RouteMatchOutput) QueryParameters() GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatch) []GatewayRouteSpecHttp2RouteMatchQueryParameter {
		return v.QueryParameters
	}).(GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput)
}

type GatewayRouteSpecHttp2RouteMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchPtrOutput) ToGatewayRouteSpecHttp2RouteMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchPtrOutput) ToGatewayRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchPtrOutput) Elem() GatewayRouteSpecHttp2RouteMatchOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatch) GatewayRouteSpecHttp2RouteMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteMatch
		return ret
	}).(GatewayRouteSpecHttp2RouteMatchOutput)
}

// Client request headers to match on.
func (o GatewayRouteSpecHttp2RouteMatchPtrOutput) Headers() GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatch) []GatewayRouteSpecHttp2RouteMatchHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput)
}

// Host name to rewrite.
func (o GatewayRouteSpecHttp2RouteMatchPtrOutput) Hostname() GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatch) *GatewayRouteSpecHttp2RouteMatchHostname {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput)
}

// Exact path to rewrite.
func (o GatewayRouteSpecHttp2RouteMatchPtrOutput) Path() GatewayRouteSpecHttp2RouteMatchPathPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatch) *GatewayRouteSpecHttp2RouteMatchPath {
		if v == nil {
			return nil
		}
		return v.Path
	}).(GatewayRouteSpecHttp2RouteMatchPathPtrOutput)
}

// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
func (o GatewayRouteSpecHttp2RouteMatchPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatch) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Specified beginning characters to rewrite.
func (o GatewayRouteSpecHttp2RouteMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Client request query parameters to match on.
func (o GatewayRouteSpecHttp2RouteMatchPtrOutput) QueryParameters() GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatch) []GatewayRouteSpecHttp2RouteMatchQueryParameter {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput)
}

type GatewayRouteSpecHttp2RouteMatchHeader struct {
	// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
	Invert *bool `pulumi:"invert"`
	// Method and value to match the header value sent with a request. Specify one match method.
	Match *GatewayRouteSpecHttp2RouteMatchHeaderMatch `pulumi:"match"`
	// Name for the HTTP header in the client request that will be matched on.
	Name string `pulumi:"name"`
}

// GatewayRouteSpecHttp2RouteMatchHeaderInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchHeaderArgs and GatewayRouteSpecHttp2RouteMatchHeaderOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchHeaderInput` via:
//
//	GatewayRouteSpecHttp2RouteMatchHeaderArgs{...}
type GatewayRouteSpecHttp2RouteMatchHeaderInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchHeaderOutput() GatewayRouteSpecHttp2RouteMatchHeaderOutput
	ToGatewayRouteSpecHttp2RouteMatchHeaderOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchHeaderOutput
}

type GatewayRouteSpecHttp2RouteMatchHeaderArgs struct {
	// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
	Invert pulumi.BoolPtrInput `pulumi:"invert"`
	// Method and value to match the header value sent with a request. Specify one match method.
	Match GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrInput `pulumi:"match"`
	// Name for the HTTP header in the client request that will be matched on.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GatewayRouteSpecHttp2RouteMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteMatchHeaderArgs) ToGatewayRouteSpecHttp2RouteMatchHeaderOutput() GatewayRouteSpecHttp2RouteMatchHeaderOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchHeaderOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchHeaderArgs) ToGatewayRouteSpecHttp2RouteMatchHeaderOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchHeaderOutput)
}

// GatewayRouteSpecHttp2RouteMatchHeaderArrayInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchHeaderArray and GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchHeaderArrayInput` via:
//
//	GatewayRouteSpecHttp2RouteMatchHeaderArray{ GatewayRouteSpecHttp2RouteMatchHeaderArgs{...} }
type GatewayRouteSpecHttp2RouteMatchHeaderArrayInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput() GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput
	ToGatewayRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput
}

type GatewayRouteSpecHttp2RouteMatchHeaderArray []GatewayRouteSpecHttp2RouteMatchHeaderInput

func (GatewayRouteSpecHttp2RouteMatchHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteMatchHeaderArray) ToGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput() GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchHeaderArray) ToGatewayRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput)
}

type GatewayRouteSpecHttp2RouteMatchHeaderOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderOutput() GatewayRouteSpecHttp2RouteMatchHeaderOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderOutput {
	return o
}

// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
func (o GatewayRouteSpecHttp2RouteMatchHeaderOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchHeader) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

// Method and value to match the header value sent with a request. Specify one match method.
func (o GatewayRouteSpecHttp2RouteMatchHeaderOutput) Match() GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchHeader) *GatewayRouteSpecHttp2RouteMatchHeaderMatch {
		return v.Match
	}).(GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput)
}

// Name for the HTTP header in the client request that will be matched on.
func (o GatewayRouteSpecHttp2RouteMatchHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchHeader) string { return v.Name }).(pulumi.StringOutput)
}

type GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput() GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput) Index(i pulumi.IntInput) GatewayRouteSpecHttp2RouteMatchHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayRouteSpecHttp2RouteMatchHeader {
		return vs[0].([]GatewayRouteSpecHttp2RouteMatchHeader)[vs[1].(int)]
	}).(GatewayRouteSpecHttp2RouteMatchHeaderOutput)
}

type GatewayRouteSpecHttp2RouteMatchHeaderMatch struct {
	// Value used to replace matched path.
	Exact *string `pulumi:"exact"`
	// Specified beginning characters to rewrite.
	Prefix *string `pulumi:"prefix"`
	// Object that specifies the range of numbers that the header value sent by the client must be included in.
	Range *GatewayRouteSpecHttp2RouteMatchHeaderMatchRange `pulumi:"range"`
	// Header value sent by the client must include the specified characters.
	Regex *string `pulumi:"regex"`
	// Header value sent by the client must end with the specified characters.
	Suffix *string `pulumi:"suffix"`
}

// GatewayRouteSpecHttp2RouteMatchHeaderMatchInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchHeaderMatchArgs and GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchHeaderMatchInput` via:
//
//	GatewayRouteSpecHttp2RouteMatchHeaderMatchArgs{...}
type GatewayRouteSpecHttp2RouteMatchHeaderMatchInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput
	ToGatewayRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput
}

type GatewayRouteSpecHttp2RouteMatchHeaderMatchArgs struct {
	// Value used to replace matched path.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// Specified beginning characters to rewrite.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Object that specifies the range of numbers that the header value sent by the client must be included in.
	Range GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrInput `pulumi:"range"`
	// Header value sent by the client must include the specified characters.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// Header value sent by the client must end with the specified characters.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (GatewayRouteSpecHttp2RouteMatchHeaderMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteMatchHeaderMatchArgs) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchHeaderMatchArgs) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput)
}

func (i GatewayRouteSpecHttp2RouteMatchHeaderMatchArgs) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchHeaderMatchArgs) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput).ToGatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchHeaderMatchArgs, GatewayRouteSpecHttp2RouteMatchHeaderMatchPtr and GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrInput` via:
//
//	        GatewayRouteSpecHttp2RouteMatchHeaderMatchArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput
	ToGatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput
}

type gatewayRouteSpecHttp2RouteMatchHeaderMatchPtrType GatewayRouteSpecHttp2RouteMatchHeaderMatchArgs

func GatewayRouteSpecHttp2RouteMatchHeaderMatchPtr(v *GatewayRouteSpecHttp2RouteMatchHeaderMatchArgs) GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrInput {
	return (*gatewayRouteSpecHttp2RouteMatchHeaderMatchPtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteMatchHeaderMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteMatchHeaderMatchPtrType) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteMatchHeaderMatchPtrType) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteMatchHeaderMatch) *GatewayRouteSpecHttp2RouteMatchHeaderMatch {
		return &v
	}).(GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput)
}

// Value used to replace matched path.
func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchHeaderMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// Specified beginning characters to rewrite.
func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchHeaderMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Object that specifies the range of numbers that the header value sent by the client must be included in.
func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) Range() GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchHeaderMatch) *GatewayRouteSpecHttp2RouteMatchHeaderMatchRange {
		return v.Range
	}).(GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput)
}

// Header value sent by the client must include the specified characters.
func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchHeaderMatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// Header value sent by the client must end with the specified characters.
func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchHeaderMatch) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Elem() GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchHeaderMatch) GatewayRouteSpecHttp2RouteMatchHeaderMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteMatchHeaderMatch
		return ret
	}).(GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput)
}

// Value used to replace matched path.
func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// Specified beginning characters to rewrite.
func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Object that specifies the range of numbers that the header value sent by the client must be included in.
func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Range() GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchHeaderMatch) *GatewayRouteSpecHttp2RouteMatchHeaderMatchRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput)
}

// Header value sent by the client must include the specified characters.
func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// Header value sent by the client must end with the specified characters.
func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchHeaderMatchRange struct {
	// End of the range.
	End int `pulumi:"end"`
	// Start of the range.
	Start int `pulumi:"start"`
}

// GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs and GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeInput` via:
//
//	GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs{...}
type GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput
	ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput
}

type GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs struct {
	// End of the range.
	End pulumi.IntInput `pulumi:"end"`
	// Start of the range.
	Start pulumi.IntInput `pulumi:"start"`
}

func (GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput)
}

func (i GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput).ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs, GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtr and GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrInput` via:
//
//	        GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput
	ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput
}

type gatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrType GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs

func GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtr(v *GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs) GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrInput {
	return (*gatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrType) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrType) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteMatchHeaderMatchRange) *GatewayRouteSpecHttp2RouteMatchHeaderMatchRange {
		return &v
	}).(GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput)
}

// End of the range.
func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchHeaderMatchRange) int { return v.End }).(pulumi.IntOutput)
}

// Start of the range.
func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchHeaderMatchRange) int { return v.Start }).(pulumi.IntOutput)
}

type GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) ToGatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) Elem() GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchHeaderMatchRange) GatewayRouteSpecHttp2RouteMatchHeaderMatchRange {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteMatchHeaderMatchRange
		return ret
	}).(GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput)
}

// End of the range.
func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchHeaderMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.IntPtrOutput)
}

// Start of the range.
func (o GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchHeaderMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.IntPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchHostname struct {
	// Exact host name to match on.
	Exact *string `pulumi:"exact"`
	// Specified ending characters of the host name to match on.
	Suffix *string `pulumi:"suffix"`
}

// GatewayRouteSpecHttp2RouteMatchHostnameInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchHostnameArgs and GatewayRouteSpecHttp2RouteMatchHostnameOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchHostnameInput` via:
//
//	GatewayRouteSpecHttp2RouteMatchHostnameArgs{...}
type GatewayRouteSpecHttp2RouteMatchHostnameInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchHostnameOutput() GatewayRouteSpecHttp2RouteMatchHostnameOutput
	ToGatewayRouteSpecHttp2RouteMatchHostnameOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchHostnameOutput
}

type GatewayRouteSpecHttp2RouteMatchHostnameArgs struct {
	// Exact host name to match on.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// Specified ending characters of the host name to match on.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (GatewayRouteSpecHttp2RouteMatchHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHostname)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteMatchHostnameArgs) ToGatewayRouteSpecHttp2RouteMatchHostnameOutput() GatewayRouteSpecHttp2RouteMatchHostnameOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchHostnameOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchHostnameArgs) ToGatewayRouteSpecHttp2RouteMatchHostnameOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchHostnameOutput)
}

func (i GatewayRouteSpecHttp2RouteMatchHostnameArgs) ToGatewayRouteSpecHttp2RouteMatchHostnamePtrOutput() GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchHostnamePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchHostnameArgs) ToGatewayRouteSpecHttp2RouteMatchHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchHostnameOutput).ToGatewayRouteSpecHttp2RouteMatchHostnamePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteMatchHostnamePtrInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchHostnameArgs, GatewayRouteSpecHttp2RouteMatchHostnamePtr and GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchHostnamePtrInput` via:
//
//	        GatewayRouteSpecHttp2RouteMatchHostnameArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttp2RouteMatchHostnamePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchHostnamePtrOutput() GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput
	ToGatewayRouteSpecHttp2RouteMatchHostnamePtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput
}

type gatewayRouteSpecHttp2RouteMatchHostnamePtrType GatewayRouteSpecHttp2RouteMatchHostnameArgs

func GatewayRouteSpecHttp2RouteMatchHostnamePtr(v *GatewayRouteSpecHttp2RouteMatchHostnameArgs) GatewayRouteSpecHttp2RouteMatchHostnamePtrInput {
	return (*gatewayRouteSpecHttp2RouteMatchHostnamePtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteMatchHostnamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteMatchHostname)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteMatchHostnamePtrType) ToGatewayRouteSpecHttp2RouteMatchHostnamePtrOutput() GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchHostnamePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteMatchHostnamePtrType) ToGatewayRouteSpecHttp2RouteMatchHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchHostnameOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHostname)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchHostnameOutput) ToGatewayRouteSpecHttp2RouteMatchHostnameOutput() GatewayRouteSpecHttp2RouteMatchHostnameOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHostnameOutput) ToGatewayRouteSpecHttp2RouteMatchHostnameOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHostnameOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHostnameOutput) ToGatewayRouteSpecHttp2RouteMatchHostnamePtrOutput() GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteMatchHostnamePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteMatchHostnameOutput) ToGatewayRouteSpecHttp2RouteMatchHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteMatchHostname) *GatewayRouteSpecHttp2RouteMatchHostname {
		return &v
	}).(GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput)
}

// Exact host name to match on.
func (o GatewayRouteSpecHttp2RouteMatchHostnameOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchHostname) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// Specified ending characters of the host name to match on.
func (o GatewayRouteSpecHttp2RouteMatchHostnameOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchHostname) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteMatchHostname)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput) ToGatewayRouteSpecHttp2RouteMatchHostnamePtrOutput() GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput) ToGatewayRouteSpecHttp2RouteMatchHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput) Elem() GatewayRouteSpecHttp2RouteMatchHostnameOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchHostname) GatewayRouteSpecHttp2RouteMatchHostname {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteMatchHostname
		return ret
	}).(GatewayRouteSpecHttp2RouteMatchHostnameOutput)
}

// Exact host name to match on.
func (o GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchHostname) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// Specified ending characters of the host name to match on.
func (o GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchHostname) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchPath struct {
	// The exact path to match on.
	Exact *string `pulumi:"exact"`
	// The regex used to match the path.
	Regex *string `pulumi:"regex"`
}

// GatewayRouteSpecHttp2RouteMatchPathInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchPathArgs and GatewayRouteSpecHttp2RouteMatchPathOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchPathInput` via:
//
//	GatewayRouteSpecHttp2RouteMatchPathArgs{...}
type GatewayRouteSpecHttp2RouteMatchPathInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchPathOutput() GatewayRouteSpecHttp2RouteMatchPathOutput
	ToGatewayRouteSpecHttp2RouteMatchPathOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchPathOutput
}

type GatewayRouteSpecHttp2RouteMatchPathArgs struct {
	// The exact path to match on.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// The regex used to match the path.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (GatewayRouteSpecHttp2RouteMatchPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteMatchPathArgs) ToGatewayRouteSpecHttp2RouteMatchPathOutput() GatewayRouteSpecHttp2RouteMatchPathOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchPathOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchPathArgs) ToGatewayRouteSpecHttp2RouteMatchPathOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchPathOutput)
}

func (i GatewayRouteSpecHttp2RouteMatchPathArgs) ToGatewayRouteSpecHttp2RouteMatchPathPtrOutput() GatewayRouteSpecHttp2RouteMatchPathPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchPathPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchPathArgs) ToGatewayRouteSpecHttp2RouteMatchPathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchPathOutput).ToGatewayRouteSpecHttp2RouteMatchPathPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteMatchPathPtrInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchPathArgs, GatewayRouteSpecHttp2RouteMatchPathPtr and GatewayRouteSpecHttp2RouteMatchPathPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchPathPtrInput` via:
//
//	        GatewayRouteSpecHttp2RouteMatchPathArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttp2RouteMatchPathPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchPathPtrOutput() GatewayRouteSpecHttp2RouteMatchPathPtrOutput
	ToGatewayRouteSpecHttp2RouteMatchPathPtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchPathPtrOutput
}

type gatewayRouteSpecHttp2RouteMatchPathPtrType GatewayRouteSpecHttp2RouteMatchPathArgs

func GatewayRouteSpecHttp2RouteMatchPathPtr(v *GatewayRouteSpecHttp2RouteMatchPathArgs) GatewayRouteSpecHttp2RouteMatchPathPtrInput {
	return (*gatewayRouteSpecHttp2RouteMatchPathPtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteMatchPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteMatchPathPtrType) ToGatewayRouteSpecHttp2RouteMatchPathPtrOutput() GatewayRouteSpecHttp2RouteMatchPathPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchPathPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteMatchPathPtrType) ToGatewayRouteSpecHttp2RouteMatchPathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchPathPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchPathOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchPathOutput) ToGatewayRouteSpecHttp2RouteMatchPathOutput() GatewayRouteSpecHttp2RouteMatchPathOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchPathOutput) ToGatewayRouteSpecHttp2RouteMatchPathOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchPathOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchPathOutput) ToGatewayRouteSpecHttp2RouteMatchPathPtrOutput() GatewayRouteSpecHttp2RouteMatchPathPtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteMatchPathPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteMatchPathOutput) ToGatewayRouteSpecHttp2RouteMatchPathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteMatchPath) *GatewayRouteSpecHttp2RouteMatchPath {
		return &v
	}).(GatewayRouteSpecHttp2RouteMatchPathPtrOutput)
}

// The exact path to match on.
func (o GatewayRouteSpecHttp2RouteMatchPathOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchPath) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// The regex used to match the path.
func (o GatewayRouteSpecHttp2RouteMatchPathOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchPath) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchPathPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchPathPtrOutput) ToGatewayRouteSpecHttp2RouteMatchPathPtrOutput() GatewayRouteSpecHttp2RouteMatchPathPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchPathPtrOutput) ToGatewayRouteSpecHttp2RouteMatchPathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchPathPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchPathPtrOutput) Elem() GatewayRouteSpecHttp2RouteMatchPathOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchPath) GatewayRouteSpecHttp2RouteMatchPath {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteMatchPath
		return ret
	}).(GatewayRouteSpecHttp2RouteMatchPathOutput)
}

// The exact path to match on.
func (o GatewayRouteSpecHttp2RouteMatchPathPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchPath) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// The regex used to match the path.
func (o GatewayRouteSpecHttp2RouteMatchPathPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchPath) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchQueryParameter struct {
	// The query parameter to match on.
	Match *GatewayRouteSpecHttp2RouteMatchQueryParameterMatch `pulumi:"match"`
	// Name for the query parameter that will be matched on.
	Name string `pulumi:"name"`
}

// GatewayRouteSpecHttp2RouteMatchQueryParameterInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchQueryParameterArgs and GatewayRouteSpecHttp2RouteMatchQueryParameterOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchQueryParameterInput` via:
//
//	GatewayRouteSpecHttp2RouteMatchQueryParameterArgs{...}
type GatewayRouteSpecHttp2RouteMatchQueryParameterInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchQueryParameterOutput() GatewayRouteSpecHttp2RouteMatchQueryParameterOutput
	ToGatewayRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchQueryParameterOutput
}

type GatewayRouteSpecHttp2RouteMatchQueryParameterArgs struct {
	// The query parameter to match on.
	Match GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrInput `pulumi:"match"`
	// Name for the query parameter that will be matched on.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GatewayRouteSpecHttp2RouteMatchQueryParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteMatchQueryParameterArgs) ToGatewayRouteSpecHttp2RouteMatchQueryParameterOutput() GatewayRouteSpecHttp2RouteMatchQueryParameterOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchQueryParameterArgs) ToGatewayRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchQueryParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchQueryParameterOutput)
}

// GatewayRouteSpecHttp2RouteMatchQueryParameterArrayInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchQueryParameterArray and GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchQueryParameterArrayInput` via:
//
//	GatewayRouteSpecHttp2RouteMatchQueryParameterArray{ GatewayRouteSpecHttp2RouteMatchQueryParameterArgs{...} }
type GatewayRouteSpecHttp2RouteMatchQueryParameterArrayInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput() GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput
	ToGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput
}

type GatewayRouteSpecHttp2RouteMatchQueryParameterArray []GatewayRouteSpecHttp2RouteMatchQueryParameterInput

func (GatewayRouteSpecHttp2RouteMatchQueryParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteMatchQueryParameterArray) ToGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput() GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchQueryParameterArray) ToGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput)
}

type GatewayRouteSpecHttp2RouteMatchQueryParameterOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchQueryParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchQueryParameterOutput) ToGatewayRouteSpecHttp2RouteMatchQueryParameterOutput() GatewayRouteSpecHttp2RouteMatchQueryParameterOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchQueryParameterOutput) ToGatewayRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchQueryParameterOutput {
	return o
}

// The query parameter to match on.
func (o GatewayRouteSpecHttp2RouteMatchQueryParameterOutput) Match() GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchQueryParameter) *GatewayRouteSpecHttp2RouteMatchQueryParameterMatch {
		return v.Match
	}).(GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput)
}

// Name for the query parameter that will be matched on.
func (o GatewayRouteSpecHttp2RouteMatchQueryParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchQueryParameter) string { return v.Name }).(pulumi.StringOutput)
}

type GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput) ToGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput() GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput) ToGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput) Index(i pulumi.IntInput) GatewayRouteSpecHttp2RouteMatchQueryParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayRouteSpecHttp2RouteMatchQueryParameter {
		return vs[0].([]GatewayRouteSpecHttp2RouteMatchQueryParameter)[vs[1].(int)]
	}).(GatewayRouteSpecHttp2RouteMatchQueryParameterOutput)
}

type GatewayRouteSpecHttp2RouteMatchQueryParameterMatch struct {
	// Value used to replace matched path.
	Exact *string `pulumi:"exact"`
}

// GatewayRouteSpecHttp2RouteMatchQueryParameterMatchInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs and GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchQueryParameterMatchInput` via:
//
//	GatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs{...}
type GatewayRouteSpecHttp2RouteMatchQueryParameterMatchInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput() GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput
	ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput
}

type GatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs struct {
	// Value used to replace matched path.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
}

func (GatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i GatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs) ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput() GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs) ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput)
}

func (i GatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs) ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs) ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput).ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrInput is an input type that accepts GatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs, GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtr and GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrInput` via:
//
//	        GatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput
	ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(context.Context) GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput
}

type gatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrType GatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs

func GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtr(v *GatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs) GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrInput {
	return (*gatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrType)(v)
}

func (*gatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i *gatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrType) ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return i.ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrType) ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput) ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput() GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput) ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput) ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return o.ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput) ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttp2RouteMatchQueryParameterMatch) *GatewayRouteSpecHttp2RouteMatchQueryParameterMatch {
		return &v
	}).(GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput)
}

// Value used to replace matched path.
func (o GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttp2RouteMatchQueryParameterMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput) ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput() GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput) ToGatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput) Elem() GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchQueryParameterMatch) GatewayRouteSpecHttp2RouteMatchQueryParameterMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttp2RouteMatchQueryParameterMatch
		return ret
	}).(GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput)
}

// Value used to replace matched path.
func (o GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttp2RouteMatchQueryParameterMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRoute struct {
	// Action to take if a match is determined.
	Action GatewayRouteSpecHttpRouteAction `pulumi:"action"`
	// Criteria for determining a request match.
	Match GatewayRouteSpecHttpRouteMatch `pulumi:"match"`
}

// GatewayRouteSpecHttpRouteInput is an input type that accepts GatewayRouteSpecHttpRouteArgs and GatewayRouteSpecHttpRouteOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteInput` via:
//
//	GatewayRouteSpecHttpRouteArgs{...}
type GatewayRouteSpecHttpRouteInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteOutput() GatewayRouteSpecHttpRouteOutput
	ToGatewayRouteSpecHttpRouteOutputWithContext(context.Context) GatewayRouteSpecHttpRouteOutput
}

type GatewayRouteSpecHttpRouteArgs struct {
	// Action to take if a match is determined.
	Action GatewayRouteSpecHttpRouteActionInput `pulumi:"action"`
	// Criteria for determining a request match.
	Match GatewayRouteSpecHttpRouteMatchInput `pulumi:"match"`
}

func (GatewayRouteSpecHttpRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRoute)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteArgs) ToGatewayRouteSpecHttpRouteOutput() GatewayRouteSpecHttpRouteOutput {
	return i.ToGatewayRouteSpecHttpRouteOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteArgs) ToGatewayRouteSpecHttpRouteOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteOutput)
}

func (i GatewayRouteSpecHttpRouteArgs) ToGatewayRouteSpecHttpRoutePtrOutput() GatewayRouteSpecHttpRoutePtrOutput {
	return i.ToGatewayRouteSpecHttpRoutePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteArgs) ToGatewayRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteOutput).ToGatewayRouteSpecHttpRoutePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRoutePtrInput is an input type that accepts GatewayRouteSpecHttpRouteArgs, GatewayRouteSpecHttpRoutePtr and GatewayRouteSpecHttpRoutePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRoutePtrInput` via:
//
//	        GatewayRouteSpecHttpRouteArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttpRoutePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRoutePtrOutput() GatewayRouteSpecHttpRoutePtrOutput
	ToGatewayRouteSpecHttpRoutePtrOutputWithContext(context.Context) GatewayRouteSpecHttpRoutePtrOutput
}

type gatewayRouteSpecHttpRoutePtrType GatewayRouteSpecHttpRouteArgs

func GatewayRouteSpecHttpRoutePtr(v *GatewayRouteSpecHttpRouteArgs) GatewayRouteSpecHttpRoutePtrInput {
	return (*gatewayRouteSpecHttpRoutePtrType)(v)
}

func (*gatewayRouteSpecHttpRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRoute)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRoutePtrType) ToGatewayRouteSpecHttpRoutePtrOutput() GatewayRouteSpecHttpRoutePtrOutput {
	return i.ToGatewayRouteSpecHttpRoutePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRoutePtrType) ToGatewayRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRoutePtrOutput)
}

type GatewayRouteSpecHttpRouteOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRoute)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteOutput) ToGatewayRouteSpecHttpRouteOutput() GatewayRouteSpecHttpRouteOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteOutput) ToGatewayRouteSpecHttpRouteOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteOutput) ToGatewayRouteSpecHttpRoutePtrOutput() GatewayRouteSpecHttpRoutePtrOutput {
	return o.ToGatewayRouteSpecHttpRoutePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteOutput) ToGatewayRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRoute) *GatewayRouteSpecHttpRoute {
		return &v
	}).(GatewayRouteSpecHttpRoutePtrOutput)
}

// Action to take if a match is determined.
func (o GatewayRouteSpecHttpRouteOutput) Action() GatewayRouteSpecHttpRouteActionOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRoute) GatewayRouteSpecHttpRouteAction { return v.Action }).(GatewayRouteSpecHttpRouteActionOutput)
}

// Criteria for determining a request match.
func (o GatewayRouteSpecHttpRouteOutput) Match() GatewayRouteSpecHttpRouteMatchOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRoute) GatewayRouteSpecHttpRouteMatch { return v.Match }).(GatewayRouteSpecHttpRouteMatchOutput)
}

type GatewayRouteSpecHttpRoutePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRoute)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRoutePtrOutput) ToGatewayRouteSpecHttpRoutePtrOutput() GatewayRouteSpecHttpRoutePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRoutePtrOutput) ToGatewayRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRoutePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRoutePtrOutput) Elem() GatewayRouteSpecHttpRouteOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRoute) GatewayRouteSpecHttpRoute {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRoute
		return ret
	}).(GatewayRouteSpecHttpRouteOutput)
}

// Action to take if a match is determined.
func (o GatewayRouteSpecHttpRoutePtrOutput) Action() GatewayRouteSpecHttpRouteActionPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRoute) *GatewayRouteSpecHttpRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(GatewayRouteSpecHttpRouteActionPtrOutput)
}

// Criteria for determining a request match.
func (o GatewayRouteSpecHttpRoutePtrOutput) Match() GatewayRouteSpecHttpRouteMatchPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRoute) *GatewayRouteSpecHttpRouteMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(GatewayRouteSpecHttpRouteMatchPtrOutput)
}

type GatewayRouteSpecHttpRouteAction struct {
	// Gateway route action to rewrite.
	Rewrite *GatewayRouteSpecHttpRouteActionRewrite `pulumi:"rewrite"`
	// Target that traffic is routed to when a request matches the gateway route.
	Target GatewayRouteSpecHttpRouteActionTarget `pulumi:"target"`
}

// GatewayRouteSpecHttpRouteActionInput is an input type that accepts GatewayRouteSpecHttpRouteActionArgs and GatewayRouteSpecHttpRouteActionOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionInput` via:
//
//	GatewayRouteSpecHttpRouteActionArgs{...}
type GatewayRouteSpecHttpRouteActionInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionOutput() GatewayRouteSpecHttpRouteActionOutput
	ToGatewayRouteSpecHttpRouteActionOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionOutput
}

type GatewayRouteSpecHttpRouteActionArgs struct {
	// Gateway route action to rewrite.
	Rewrite GatewayRouteSpecHttpRouteActionRewritePtrInput `pulumi:"rewrite"`
	// Target that traffic is routed to when a request matches the gateway route.
	Target GatewayRouteSpecHttpRouteActionTargetInput `pulumi:"target"`
}

func (GatewayRouteSpecHttpRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteAction)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteActionArgs) ToGatewayRouteSpecHttpRouteActionOutput() GatewayRouteSpecHttpRouteActionOutput {
	return i.ToGatewayRouteSpecHttpRouteActionOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionArgs) ToGatewayRouteSpecHttpRouteActionOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionOutput)
}

func (i GatewayRouteSpecHttpRouteActionArgs) ToGatewayRouteSpecHttpRouteActionPtrOutput() GatewayRouteSpecHttpRouteActionPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionArgs) ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionOutput).ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteActionPtrInput is an input type that accepts GatewayRouteSpecHttpRouteActionArgs, GatewayRouteSpecHttpRouteActionPtr and GatewayRouteSpecHttpRouteActionPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionPtrInput` via:
//
//	        GatewayRouteSpecHttpRouteActionArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttpRouteActionPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionPtrOutput() GatewayRouteSpecHttpRouteActionPtrOutput
	ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionPtrOutput
}

type gatewayRouteSpecHttpRouteActionPtrType GatewayRouteSpecHttpRouteActionArgs

func GatewayRouteSpecHttpRouteActionPtr(v *GatewayRouteSpecHttpRouteActionArgs) GatewayRouteSpecHttpRouteActionPtrInput {
	return (*gatewayRouteSpecHttpRouteActionPtrType)(v)
}

func (*gatewayRouteSpecHttpRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteAction)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteActionPtrType) ToGatewayRouteSpecHttpRouteActionPtrOutput() GatewayRouteSpecHttpRouteActionPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteActionPtrType) ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionPtrOutput)
}

type GatewayRouteSpecHttpRouteActionOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteAction)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionOutput) ToGatewayRouteSpecHttpRouteActionOutput() GatewayRouteSpecHttpRouteActionOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionOutput) ToGatewayRouteSpecHttpRouteActionOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionOutput) ToGatewayRouteSpecHttpRouteActionPtrOutput() GatewayRouteSpecHttpRouteActionPtrOutput {
	return o.ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteActionOutput) ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteAction) *GatewayRouteSpecHttpRouteAction {
		return &v
	}).(GatewayRouteSpecHttpRouteActionPtrOutput)
}

// Gateway route action to rewrite.
func (o GatewayRouteSpecHttpRouteActionOutput) Rewrite() GatewayRouteSpecHttpRouteActionRewritePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteAction) *GatewayRouteSpecHttpRouteActionRewrite { return v.Rewrite }).(GatewayRouteSpecHttpRouteActionRewritePtrOutput)
}

// Target that traffic is routed to when a request matches the gateway route.
func (o GatewayRouteSpecHttpRouteActionOutput) Target() GatewayRouteSpecHttpRouteActionTargetOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteAction) GatewayRouteSpecHttpRouteActionTarget { return v.Target }).(GatewayRouteSpecHttpRouteActionTargetOutput)
}

type GatewayRouteSpecHttpRouteActionPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteAction)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionPtrOutput) ToGatewayRouteSpecHttpRouteActionPtrOutput() GatewayRouteSpecHttpRouteActionPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionPtrOutput) ToGatewayRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionPtrOutput) Elem() GatewayRouteSpecHttpRouteActionOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteAction) GatewayRouteSpecHttpRouteAction {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteAction
		return ret
	}).(GatewayRouteSpecHttpRouteActionOutput)
}

// Gateway route action to rewrite.
func (o GatewayRouteSpecHttpRouteActionPtrOutput) Rewrite() GatewayRouteSpecHttpRouteActionRewritePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteAction) *GatewayRouteSpecHttpRouteActionRewrite {
		if v == nil {
			return nil
		}
		return v.Rewrite
	}).(GatewayRouteSpecHttpRouteActionRewritePtrOutput)
}

// Target that traffic is routed to when a request matches the gateway route.
func (o GatewayRouteSpecHttpRouteActionPtrOutput) Target() GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteAction) *GatewayRouteSpecHttpRouteActionTarget {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(GatewayRouteSpecHttpRouteActionTargetPtrOutput)
}

type GatewayRouteSpecHttpRouteActionRewrite struct {
	// Host name to rewrite.
	Hostname *GatewayRouteSpecHttpRouteActionRewriteHostname `pulumi:"hostname"`
	// Exact path to rewrite.
	Path *GatewayRouteSpecHttpRouteActionRewritePath `pulumi:"path"`
	// Specified beginning characters to rewrite.
	Prefix *GatewayRouteSpecHttpRouteActionRewritePrefix `pulumi:"prefix"`
}

// GatewayRouteSpecHttpRouteActionRewriteInput is an input type that accepts GatewayRouteSpecHttpRouteActionRewriteArgs and GatewayRouteSpecHttpRouteActionRewriteOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionRewriteInput` via:
//
//	GatewayRouteSpecHttpRouteActionRewriteArgs{...}
type GatewayRouteSpecHttpRouteActionRewriteInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionRewriteOutput() GatewayRouteSpecHttpRouteActionRewriteOutput
	ToGatewayRouteSpecHttpRouteActionRewriteOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionRewriteOutput
}

type GatewayRouteSpecHttpRouteActionRewriteArgs struct {
	// Host name to rewrite.
	Hostname GatewayRouteSpecHttpRouteActionRewriteHostnamePtrInput `pulumi:"hostname"`
	// Exact path to rewrite.
	Path GatewayRouteSpecHttpRouteActionRewritePathPtrInput `pulumi:"path"`
	// Specified beginning characters to rewrite.
	Prefix GatewayRouteSpecHttpRouteActionRewritePrefixPtrInput `pulumi:"prefix"`
}

func (GatewayRouteSpecHttpRouteActionRewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewrite)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteActionRewriteArgs) ToGatewayRouteSpecHttpRouteActionRewriteOutput() GatewayRouteSpecHttpRouteActionRewriteOutput {
	return i.ToGatewayRouteSpecHttpRouteActionRewriteOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionRewriteArgs) ToGatewayRouteSpecHttpRouteActionRewriteOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionRewriteOutput)
}

func (i GatewayRouteSpecHttpRouteActionRewriteArgs) ToGatewayRouteSpecHttpRouteActionRewritePtrOutput() GatewayRouteSpecHttpRouteActionRewritePtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionRewritePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionRewriteArgs) ToGatewayRouteSpecHttpRouteActionRewritePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionRewriteOutput).ToGatewayRouteSpecHttpRouteActionRewritePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteActionRewritePtrInput is an input type that accepts GatewayRouteSpecHttpRouteActionRewriteArgs, GatewayRouteSpecHttpRouteActionRewritePtr and GatewayRouteSpecHttpRouteActionRewritePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionRewritePtrInput` via:
//
//	        GatewayRouteSpecHttpRouteActionRewriteArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttpRouteActionRewritePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionRewritePtrOutput() GatewayRouteSpecHttpRouteActionRewritePtrOutput
	ToGatewayRouteSpecHttpRouteActionRewritePtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionRewritePtrOutput
}

type gatewayRouteSpecHttpRouteActionRewritePtrType GatewayRouteSpecHttpRouteActionRewriteArgs

func GatewayRouteSpecHttpRouteActionRewritePtr(v *GatewayRouteSpecHttpRouteActionRewriteArgs) GatewayRouteSpecHttpRouteActionRewritePtrInput {
	return (*gatewayRouteSpecHttpRouteActionRewritePtrType)(v)
}

func (*gatewayRouteSpecHttpRouteActionRewritePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionRewrite)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteActionRewritePtrType) ToGatewayRouteSpecHttpRouteActionRewritePtrOutput() GatewayRouteSpecHttpRouteActionRewritePtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionRewritePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteActionRewritePtrType) ToGatewayRouteSpecHttpRouteActionRewritePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionRewritePtrOutput)
}

type GatewayRouteSpecHttpRouteActionRewriteOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionRewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewrite)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionRewriteOutput) ToGatewayRouteSpecHttpRouteActionRewriteOutput() GatewayRouteSpecHttpRouteActionRewriteOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewriteOutput) ToGatewayRouteSpecHttpRouteActionRewriteOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewriteOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewriteOutput) ToGatewayRouteSpecHttpRouteActionRewritePtrOutput() GatewayRouteSpecHttpRouteActionRewritePtrOutput {
	return o.ToGatewayRouteSpecHttpRouteActionRewritePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteActionRewriteOutput) ToGatewayRouteSpecHttpRouteActionRewritePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteActionRewrite) *GatewayRouteSpecHttpRouteActionRewrite {
		return &v
	}).(GatewayRouteSpecHttpRouteActionRewritePtrOutput)
}

// Host name to rewrite.
func (o GatewayRouteSpecHttpRouteActionRewriteOutput) Hostname() GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteActionRewrite) *GatewayRouteSpecHttpRouteActionRewriteHostname {
		return v.Hostname
	}).(GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput)
}

// Exact path to rewrite.
func (o GatewayRouteSpecHttpRouteActionRewriteOutput) Path() GatewayRouteSpecHttpRouteActionRewritePathPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteActionRewrite) *GatewayRouteSpecHttpRouteActionRewritePath {
		return v.Path
	}).(GatewayRouteSpecHttpRouteActionRewritePathPtrOutput)
}

// Specified beginning characters to rewrite.
func (o GatewayRouteSpecHttpRouteActionRewriteOutput) Prefix() GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteActionRewrite) *GatewayRouteSpecHttpRouteActionRewritePrefix {
		return v.Prefix
	}).(GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput)
}

type GatewayRouteSpecHttpRouteActionRewritePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionRewritePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionRewrite)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionRewritePtrOutput) ToGatewayRouteSpecHttpRouteActionRewritePtrOutput() GatewayRouteSpecHttpRouteActionRewritePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewritePtrOutput) ToGatewayRouteSpecHttpRouteActionRewritePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewritePtrOutput) Elem() GatewayRouteSpecHttpRouteActionRewriteOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionRewrite) GatewayRouteSpecHttpRouteActionRewrite {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteActionRewrite
		return ret
	}).(GatewayRouteSpecHttpRouteActionRewriteOutput)
}

// Host name to rewrite.
func (o GatewayRouteSpecHttpRouteActionRewritePtrOutput) Hostname() GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionRewrite) *GatewayRouteSpecHttpRouteActionRewriteHostname {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput)
}

// Exact path to rewrite.
func (o GatewayRouteSpecHttpRouteActionRewritePtrOutput) Path() GatewayRouteSpecHttpRouteActionRewritePathPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionRewrite) *GatewayRouteSpecHttpRouteActionRewritePath {
		if v == nil {
			return nil
		}
		return v.Path
	}).(GatewayRouteSpecHttpRouteActionRewritePathPtrOutput)
}

// Specified beginning characters to rewrite.
func (o GatewayRouteSpecHttpRouteActionRewritePtrOutput) Prefix() GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionRewrite) *GatewayRouteSpecHttpRouteActionRewritePrefix {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput)
}

type GatewayRouteSpecHttpRouteActionRewriteHostname struct {
	// Default target host name to write to. Valid values: `ENABLED`, `DISABLED`.
	DefaultTargetHostname string `pulumi:"defaultTargetHostname"`
}

// GatewayRouteSpecHttpRouteActionRewriteHostnameInput is an input type that accepts GatewayRouteSpecHttpRouteActionRewriteHostnameArgs and GatewayRouteSpecHttpRouteActionRewriteHostnameOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionRewriteHostnameInput` via:
//
//	GatewayRouteSpecHttpRouteActionRewriteHostnameArgs{...}
type GatewayRouteSpecHttpRouteActionRewriteHostnameInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionRewriteHostnameOutput() GatewayRouteSpecHttpRouteActionRewriteHostnameOutput
	ToGatewayRouteSpecHttpRouteActionRewriteHostnameOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionRewriteHostnameOutput
}

type GatewayRouteSpecHttpRouteActionRewriteHostnameArgs struct {
	// Default target host name to write to. Valid values: `ENABLED`, `DISABLED`.
	DefaultTargetHostname pulumi.StringInput `pulumi:"defaultTargetHostname"`
}

func (GatewayRouteSpecHttpRouteActionRewriteHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewriteHostname)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteActionRewriteHostnameArgs) ToGatewayRouteSpecHttpRouteActionRewriteHostnameOutput() GatewayRouteSpecHttpRouteActionRewriteHostnameOutput {
	return i.ToGatewayRouteSpecHttpRouteActionRewriteHostnameOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionRewriteHostnameArgs) ToGatewayRouteSpecHttpRouteActionRewriteHostnameOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewriteHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionRewriteHostnameOutput)
}

func (i GatewayRouteSpecHttpRouteActionRewriteHostnameArgs) ToGatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput() GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionRewriteHostnameArgs) ToGatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionRewriteHostnameOutput).ToGatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteActionRewriteHostnamePtrInput is an input type that accepts GatewayRouteSpecHttpRouteActionRewriteHostnameArgs, GatewayRouteSpecHttpRouteActionRewriteHostnamePtr and GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionRewriteHostnamePtrInput` via:
//
//	        GatewayRouteSpecHttpRouteActionRewriteHostnameArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttpRouteActionRewriteHostnamePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput() GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput
	ToGatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput
}

type gatewayRouteSpecHttpRouteActionRewriteHostnamePtrType GatewayRouteSpecHttpRouteActionRewriteHostnameArgs

func GatewayRouteSpecHttpRouteActionRewriteHostnamePtr(v *GatewayRouteSpecHttpRouteActionRewriteHostnameArgs) GatewayRouteSpecHttpRouteActionRewriteHostnamePtrInput {
	return (*gatewayRouteSpecHttpRouteActionRewriteHostnamePtrType)(v)
}

func (*gatewayRouteSpecHttpRouteActionRewriteHostnamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionRewriteHostname)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteActionRewriteHostnamePtrType) ToGatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput() GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteActionRewriteHostnamePtrType) ToGatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput)
}

type GatewayRouteSpecHttpRouteActionRewriteHostnameOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionRewriteHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewriteHostname)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionRewriteHostnameOutput) ToGatewayRouteSpecHttpRouteActionRewriteHostnameOutput() GatewayRouteSpecHttpRouteActionRewriteHostnameOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewriteHostnameOutput) ToGatewayRouteSpecHttpRouteActionRewriteHostnameOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewriteHostnameOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewriteHostnameOutput) ToGatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput() GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput {
	return o.ToGatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteActionRewriteHostnameOutput) ToGatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteActionRewriteHostname) *GatewayRouteSpecHttpRouteActionRewriteHostname {
		return &v
	}).(GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput)
}

// Default target host name to write to. Valid values: `ENABLED`, `DISABLED`.
func (o GatewayRouteSpecHttpRouteActionRewriteHostnameOutput) DefaultTargetHostname() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteActionRewriteHostname) string { return v.DefaultTargetHostname }).(pulumi.StringOutput)
}

type GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionRewriteHostname)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput) ToGatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput() GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput) ToGatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput) Elem() GatewayRouteSpecHttpRouteActionRewriteHostnameOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionRewriteHostname) GatewayRouteSpecHttpRouteActionRewriteHostname {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteActionRewriteHostname
		return ret
	}).(GatewayRouteSpecHttpRouteActionRewriteHostnameOutput)
}

// Default target host name to write to. Valid values: `ENABLED`, `DISABLED`.
func (o GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput) DefaultTargetHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionRewriteHostname) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultTargetHostname
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRouteActionRewritePath struct {
	// The exact path to match on.
	Exact string `pulumi:"exact"`
}

// GatewayRouteSpecHttpRouteActionRewritePathInput is an input type that accepts GatewayRouteSpecHttpRouteActionRewritePathArgs and GatewayRouteSpecHttpRouteActionRewritePathOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionRewritePathInput` via:
//
//	GatewayRouteSpecHttpRouteActionRewritePathArgs{...}
type GatewayRouteSpecHttpRouteActionRewritePathInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionRewritePathOutput() GatewayRouteSpecHttpRouteActionRewritePathOutput
	ToGatewayRouteSpecHttpRouteActionRewritePathOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionRewritePathOutput
}

type GatewayRouteSpecHttpRouteActionRewritePathArgs struct {
	// The exact path to match on.
	Exact pulumi.StringInput `pulumi:"exact"`
}

func (GatewayRouteSpecHttpRouteActionRewritePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewritePath)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteActionRewritePathArgs) ToGatewayRouteSpecHttpRouteActionRewritePathOutput() GatewayRouteSpecHttpRouteActionRewritePathOutput {
	return i.ToGatewayRouteSpecHttpRouteActionRewritePathOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionRewritePathArgs) ToGatewayRouteSpecHttpRouteActionRewritePathOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionRewritePathOutput)
}

func (i GatewayRouteSpecHttpRouteActionRewritePathArgs) ToGatewayRouteSpecHttpRouteActionRewritePathPtrOutput() GatewayRouteSpecHttpRouteActionRewritePathPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionRewritePathPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionRewritePathArgs) ToGatewayRouteSpecHttpRouteActionRewritePathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionRewritePathOutput).ToGatewayRouteSpecHttpRouteActionRewritePathPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteActionRewritePathPtrInput is an input type that accepts GatewayRouteSpecHttpRouteActionRewritePathArgs, GatewayRouteSpecHttpRouteActionRewritePathPtr and GatewayRouteSpecHttpRouteActionRewritePathPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionRewritePathPtrInput` via:
//
//	        GatewayRouteSpecHttpRouteActionRewritePathArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttpRouteActionRewritePathPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionRewritePathPtrOutput() GatewayRouteSpecHttpRouteActionRewritePathPtrOutput
	ToGatewayRouteSpecHttpRouteActionRewritePathPtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionRewritePathPtrOutput
}

type gatewayRouteSpecHttpRouteActionRewritePathPtrType GatewayRouteSpecHttpRouteActionRewritePathArgs

func GatewayRouteSpecHttpRouteActionRewritePathPtr(v *GatewayRouteSpecHttpRouteActionRewritePathArgs) GatewayRouteSpecHttpRouteActionRewritePathPtrInput {
	return (*gatewayRouteSpecHttpRouteActionRewritePathPtrType)(v)
}

func (*gatewayRouteSpecHttpRouteActionRewritePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionRewritePath)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteActionRewritePathPtrType) ToGatewayRouteSpecHttpRouteActionRewritePathPtrOutput() GatewayRouteSpecHttpRouteActionRewritePathPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionRewritePathPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteActionRewritePathPtrType) ToGatewayRouteSpecHttpRouteActionRewritePathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionRewritePathPtrOutput)
}

type GatewayRouteSpecHttpRouteActionRewritePathOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionRewritePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewritePath)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionRewritePathOutput) ToGatewayRouteSpecHttpRouteActionRewritePathOutput() GatewayRouteSpecHttpRouteActionRewritePathOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewritePathOutput) ToGatewayRouteSpecHttpRouteActionRewritePathOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePathOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewritePathOutput) ToGatewayRouteSpecHttpRouteActionRewritePathPtrOutput() GatewayRouteSpecHttpRouteActionRewritePathPtrOutput {
	return o.ToGatewayRouteSpecHttpRouteActionRewritePathPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteActionRewritePathOutput) ToGatewayRouteSpecHttpRouteActionRewritePathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteActionRewritePath) *GatewayRouteSpecHttpRouteActionRewritePath {
		return &v
	}).(GatewayRouteSpecHttpRouteActionRewritePathPtrOutput)
}

// The exact path to match on.
func (o GatewayRouteSpecHttpRouteActionRewritePathOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteActionRewritePath) string { return v.Exact }).(pulumi.StringOutput)
}

type GatewayRouteSpecHttpRouteActionRewritePathPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionRewritePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionRewritePath)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionRewritePathPtrOutput) ToGatewayRouteSpecHttpRouteActionRewritePathPtrOutput() GatewayRouteSpecHttpRouteActionRewritePathPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewritePathPtrOutput) ToGatewayRouteSpecHttpRouteActionRewritePathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePathPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewritePathPtrOutput) Elem() GatewayRouteSpecHttpRouteActionRewritePathOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionRewritePath) GatewayRouteSpecHttpRouteActionRewritePath {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteActionRewritePath
		return ret
	}).(GatewayRouteSpecHttpRouteActionRewritePathOutput)
}

// The exact path to match on.
func (o GatewayRouteSpecHttpRouteActionRewritePathPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionRewritePath) *string {
		if v == nil {
			return nil
		}
		return &v.Exact
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRouteActionRewritePrefix struct {
	// Default prefix used to replace the incoming route prefix when rewritten. Valid values: `ENABLED`, `DISABLED`.
	DefaultPrefix *string `pulumi:"defaultPrefix"`
	// Value used to replace the incoming route prefix when rewritten.
	Value *string `pulumi:"value"`
}

// GatewayRouteSpecHttpRouteActionRewritePrefixInput is an input type that accepts GatewayRouteSpecHttpRouteActionRewritePrefixArgs and GatewayRouteSpecHttpRouteActionRewritePrefixOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionRewritePrefixInput` via:
//
//	GatewayRouteSpecHttpRouteActionRewritePrefixArgs{...}
type GatewayRouteSpecHttpRouteActionRewritePrefixInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionRewritePrefixOutput() GatewayRouteSpecHttpRouteActionRewritePrefixOutput
	ToGatewayRouteSpecHttpRouteActionRewritePrefixOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionRewritePrefixOutput
}

type GatewayRouteSpecHttpRouteActionRewritePrefixArgs struct {
	// Default prefix used to replace the incoming route prefix when rewritten. Valid values: `ENABLED`, `DISABLED`.
	DefaultPrefix pulumi.StringPtrInput `pulumi:"defaultPrefix"`
	// Value used to replace the incoming route prefix when rewritten.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GatewayRouteSpecHttpRouteActionRewritePrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewritePrefix)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteActionRewritePrefixArgs) ToGatewayRouteSpecHttpRouteActionRewritePrefixOutput() GatewayRouteSpecHttpRouteActionRewritePrefixOutput {
	return i.ToGatewayRouteSpecHttpRouteActionRewritePrefixOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionRewritePrefixArgs) ToGatewayRouteSpecHttpRouteActionRewritePrefixOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionRewritePrefixOutput)
}

func (i GatewayRouteSpecHttpRouteActionRewritePrefixArgs) ToGatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput() GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionRewritePrefixPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionRewritePrefixArgs) ToGatewayRouteSpecHttpRouteActionRewritePrefixPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionRewritePrefixOutput).ToGatewayRouteSpecHttpRouteActionRewritePrefixPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteActionRewritePrefixPtrInput is an input type that accepts GatewayRouteSpecHttpRouteActionRewritePrefixArgs, GatewayRouteSpecHttpRouteActionRewritePrefixPtr and GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionRewritePrefixPtrInput` via:
//
//	        GatewayRouteSpecHttpRouteActionRewritePrefixArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttpRouteActionRewritePrefixPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput() GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput
	ToGatewayRouteSpecHttpRouteActionRewritePrefixPtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput
}

type gatewayRouteSpecHttpRouteActionRewritePrefixPtrType GatewayRouteSpecHttpRouteActionRewritePrefixArgs

func GatewayRouteSpecHttpRouteActionRewritePrefixPtr(v *GatewayRouteSpecHttpRouteActionRewritePrefixArgs) GatewayRouteSpecHttpRouteActionRewritePrefixPtrInput {
	return (*gatewayRouteSpecHttpRouteActionRewritePrefixPtrType)(v)
}

func (*gatewayRouteSpecHttpRouteActionRewritePrefixPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionRewritePrefix)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteActionRewritePrefixPtrType) ToGatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput() GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionRewritePrefixPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteActionRewritePrefixPtrType) ToGatewayRouteSpecHttpRouteActionRewritePrefixPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput)
}

type GatewayRouteSpecHttpRouteActionRewritePrefixOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionRewritePrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewritePrefix)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionRewritePrefixOutput) ToGatewayRouteSpecHttpRouteActionRewritePrefixOutput() GatewayRouteSpecHttpRouteActionRewritePrefixOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewritePrefixOutput) ToGatewayRouteSpecHttpRouteActionRewritePrefixOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePrefixOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewritePrefixOutput) ToGatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput() GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput {
	return o.ToGatewayRouteSpecHttpRouteActionRewritePrefixPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteActionRewritePrefixOutput) ToGatewayRouteSpecHttpRouteActionRewritePrefixPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteActionRewritePrefix) *GatewayRouteSpecHttpRouteActionRewritePrefix {
		return &v
	}).(GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput)
}

// Default prefix used to replace the incoming route prefix when rewritten. Valid values: `ENABLED`, `DISABLED`.
func (o GatewayRouteSpecHttpRouteActionRewritePrefixOutput) DefaultPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteActionRewritePrefix) *string { return v.DefaultPrefix }).(pulumi.StringPtrOutput)
}

// Value used to replace the incoming route prefix when rewritten.
func (o GatewayRouteSpecHttpRouteActionRewritePrefixOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteActionRewritePrefix) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionRewritePrefix)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput) ToGatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput() GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput) ToGatewayRouteSpecHttpRouteActionRewritePrefixPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput) Elem() GatewayRouteSpecHttpRouteActionRewritePrefixOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionRewritePrefix) GatewayRouteSpecHttpRouteActionRewritePrefix {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteActionRewritePrefix
		return ret
	}).(GatewayRouteSpecHttpRouteActionRewritePrefixOutput)
}

// Default prefix used to replace the incoming route prefix when rewritten. Valid values: `ENABLED`, `DISABLED`.
func (o GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput) DefaultPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionRewritePrefix) *string {
		if v == nil {
			return nil
		}
		return v.DefaultPrefix
	}).(pulumi.StringPtrOutput)
}

// Value used to replace the incoming route prefix when rewritten.
func (o GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionRewritePrefix) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRouteActionTarget struct {
	// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
	Port *int `pulumi:"port"`
	// Virtual service gateway route target.
	VirtualService GatewayRouteSpecHttpRouteActionTargetVirtualService `pulumi:"virtualService"`
}

// GatewayRouteSpecHttpRouteActionTargetInput is an input type that accepts GatewayRouteSpecHttpRouteActionTargetArgs and GatewayRouteSpecHttpRouteActionTargetOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionTargetInput` via:
//
//	GatewayRouteSpecHttpRouteActionTargetArgs{...}
type GatewayRouteSpecHttpRouteActionTargetInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionTargetOutput() GatewayRouteSpecHttpRouteActionTargetOutput
	ToGatewayRouteSpecHttpRouteActionTargetOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionTargetOutput
}

type GatewayRouteSpecHttpRouteActionTargetArgs struct {
	// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Virtual service gateway route target.
	VirtualService GatewayRouteSpecHttpRouteActionTargetVirtualServiceInput `pulumi:"virtualService"`
}

func (GatewayRouteSpecHttpRouteActionTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTarget)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteActionTargetArgs) ToGatewayRouteSpecHttpRouteActionTargetOutput() GatewayRouteSpecHttpRouteActionTargetOutput {
	return i.ToGatewayRouteSpecHttpRouteActionTargetOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionTargetArgs) ToGatewayRouteSpecHttpRouteActionTargetOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionTargetOutput)
}

func (i GatewayRouteSpecHttpRouteActionTargetArgs) ToGatewayRouteSpecHttpRouteActionTargetPtrOutput() GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionTargetArgs) ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionTargetOutput).ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteActionTargetPtrInput is an input type that accepts GatewayRouteSpecHttpRouteActionTargetArgs, GatewayRouteSpecHttpRouteActionTargetPtr and GatewayRouteSpecHttpRouteActionTargetPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionTargetPtrInput` via:
//
//	        GatewayRouteSpecHttpRouteActionTargetArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttpRouteActionTargetPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionTargetPtrOutput() GatewayRouteSpecHttpRouteActionTargetPtrOutput
	ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionTargetPtrOutput
}

type gatewayRouteSpecHttpRouteActionTargetPtrType GatewayRouteSpecHttpRouteActionTargetArgs

func GatewayRouteSpecHttpRouteActionTargetPtr(v *GatewayRouteSpecHttpRouteActionTargetArgs) GatewayRouteSpecHttpRouteActionTargetPtrInput {
	return (*gatewayRouteSpecHttpRouteActionTargetPtrType)(v)
}

func (*gatewayRouteSpecHttpRouteActionTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionTarget)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteActionTargetPtrType) ToGatewayRouteSpecHttpRouteActionTargetPtrOutput() GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteActionTargetPtrType) ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionTargetPtrOutput)
}

type GatewayRouteSpecHttpRouteActionTargetOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTarget)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionTargetOutput) ToGatewayRouteSpecHttpRouteActionTargetOutput() GatewayRouteSpecHttpRouteActionTargetOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetOutput) ToGatewayRouteSpecHttpRouteActionTargetOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetOutput) ToGatewayRouteSpecHttpRouteActionTargetPtrOutput() GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return o.ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteActionTargetOutput) ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteActionTarget) *GatewayRouteSpecHttpRouteActionTarget {
		return &v
	}).(GatewayRouteSpecHttpRouteActionTargetPtrOutput)
}

// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
func (o GatewayRouteSpecHttpRouteActionTargetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteActionTarget) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Virtual service gateway route target.
func (o GatewayRouteSpecHttpRouteActionTargetOutput) VirtualService() GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteActionTarget) GatewayRouteSpecHttpRouteActionTargetVirtualService {
		return v.VirtualService
	}).(GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput)
}

type GatewayRouteSpecHttpRouteActionTargetPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionTarget)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionTargetPtrOutput) ToGatewayRouteSpecHttpRouteActionTargetPtrOutput() GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetPtrOutput) ToGatewayRouteSpecHttpRouteActionTargetPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetPtrOutput) Elem() GatewayRouteSpecHttpRouteActionTargetOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionTarget) GatewayRouteSpecHttpRouteActionTarget {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteActionTarget
		return ret
	}).(GatewayRouteSpecHttpRouteActionTargetOutput)
}

// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
func (o GatewayRouteSpecHttpRouteActionTargetPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionTarget) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Virtual service gateway route target.
func (o GatewayRouteSpecHttpRouteActionTargetPtrOutput) VirtualService() GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionTarget) *GatewayRouteSpecHttpRouteActionTargetVirtualService {
		if v == nil {
			return nil
		}
		return &v.VirtualService
	}).(GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput)
}

type GatewayRouteSpecHttpRouteActionTargetVirtualService struct {
	// Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
	VirtualServiceName string `pulumi:"virtualServiceName"`
}

// GatewayRouteSpecHttpRouteActionTargetVirtualServiceInput is an input type that accepts GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs and GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionTargetVirtualServiceInput` via:
//
//	GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs{...}
type GatewayRouteSpecHttpRouteActionTargetVirtualServiceInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput
	ToGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput
}

type GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs struct {
	// Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
	VirtualServiceName pulumi.StringInput `pulumi:"virtualServiceName"`
}

func (GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTargetVirtualService)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return i.ToGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput)
}

func (i GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput).ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrInput is an input type that accepts GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs, GatewayRouteSpecHttpRouteActionTargetVirtualServicePtr and GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrInput` via:
//
//	        GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput
	ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput
}

type gatewayRouteSpecHttpRouteActionTargetVirtualServicePtrType GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs

func GatewayRouteSpecHttpRouteActionTargetVirtualServicePtr(v *GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrInput {
	return (*gatewayRouteSpecHttpRouteActionTargetVirtualServicePtrType)(v)
}

func (*gatewayRouteSpecHttpRouteActionTargetVirtualServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionTargetVirtualService)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteActionTargetVirtualServicePtrType) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return i.ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteActionTargetVirtualServicePtrType) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput)
}

type GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTargetVirtualService)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return o.ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteActionTargetVirtualService) *GatewayRouteSpecHttpRouteActionTargetVirtualService {
		return &v
	}).(GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput)
}

// Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
func (o GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) VirtualServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteActionTargetVirtualService) string { return v.VirtualServiceName }).(pulumi.StringOutput)
}

type GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteActionTargetVirtualService)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput() GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput) ToGatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput) Elem() GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionTargetVirtualService) GatewayRouteSpecHttpRouteActionTargetVirtualService {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteActionTargetVirtualService
		return ret
	}).(GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput)
}

// Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
func (o GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput) VirtualServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteActionTargetVirtualService) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualServiceName
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRouteMatch struct {
	// Client request headers to match on.
	Headers []GatewayRouteSpecHttpRouteMatchHeader `pulumi:"headers"`
	// Host name to rewrite.
	Hostname *GatewayRouteSpecHttpRouteMatchHostname `pulumi:"hostname"`
	// Exact path to rewrite.
	Path *GatewayRouteSpecHttpRouteMatchPath `pulumi:"path"`
	// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
	Port *int `pulumi:"port"`
	// Specified beginning characters to rewrite.
	Prefix *string `pulumi:"prefix"`
	// Client request query parameters to match on.
	QueryParameters []GatewayRouteSpecHttpRouteMatchQueryParameter `pulumi:"queryParameters"`
}

// GatewayRouteSpecHttpRouteMatchInput is an input type that accepts GatewayRouteSpecHttpRouteMatchArgs and GatewayRouteSpecHttpRouteMatchOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchInput` via:
//
//	GatewayRouteSpecHttpRouteMatchArgs{...}
type GatewayRouteSpecHttpRouteMatchInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchOutput() GatewayRouteSpecHttpRouteMatchOutput
	ToGatewayRouteSpecHttpRouteMatchOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchOutput
}

type GatewayRouteSpecHttpRouteMatchArgs struct {
	// Client request headers to match on.
	Headers GatewayRouteSpecHttpRouteMatchHeaderArrayInput `pulumi:"headers"`
	// Host name to rewrite.
	Hostname GatewayRouteSpecHttpRouteMatchHostnamePtrInput `pulumi:"hostname"`
	// Exact path to rewrite.
	Path GatewayRouteSpecHttpRouteMatchPathPtrInput `pulumi:"path"`
	// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Specified beginning characters to rewrite.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Client request query parameters to match on.
	QueryParameters GatewayRouteSpecHttpRouteMatchQueryParameterArrayInput `pulumi:"queryParameters"`
}

func (GatewayRouteSpecHttpRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteMatchArgs) ToGatewayRouteSpecHttpRouteMatchOutput() GatewayRouteSpecHttpRouteMatchOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchArgs) ToGatewayRouteSpecHttpRouteMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchOutput)
}

func (i GatewayRouteSpecHttpRouteMatchArgs) ToGatewayRouteSpecHttpRouteMatchPtrOutput() GatewayRouteSpecHttpRouteMatchPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchArgs) ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchOutput).ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteMatchPtrInput is an input type that accepts GatewayRouteSpecHttpRouteMatchArgs, GatewayRouteSpecHttpRouteMatchPtr and GatewayRouteSpecHttpRouteMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchPtrInput` via:
//
//	        GatewayRouteSpecHttpRouteMatchArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttpRouteMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchPtrOutput() GatewayRouteSpecHttpRouteMatchPtrOutput
	ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchPtrOutput
}

type gatewayRouteSpecHttpRouteMatchPtrType GatewayRouteSpecHttpRouteMatchArgs

func GatewayRouteSpecHttpRouteMatchPtr(v *GatewayRouteSpecHttpRouteMatchArgs) GatewayRouteSpecHttpRouteMatchPtrInput {
	return (*gatewayRouteSpecHttpRouteMatchPtrType)(v)
}

func (*gatewayRouteSpecHttpRouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteMatchPtrType) ToGatewayRouteSpecHttpRouteMatchPtrOutput() GatewayRouteSpecHttpRouteMatchPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteMatchPtrType) ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchPtrOutput)
}

type GatewayRouteSpecHttpRouteMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchOutput) ToGatewayRouteSpecHttpRouteMatchOutput() GatewayRouteSpecHttpRouteMatchOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchOutput) ToGatewayRouteSpecHttpRouteMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchOutput) ToGatewayRouteSpecHttpRouteMatchPtrOutput() GatewayRouteSpecHttpRouteMatchPtrOutput {
	return o.ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteMatchOutput) ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteMatch) *GatewayRouteSpecHttpRouteMatch {
		return &v
	}).(GatewayRouteSpecHttpRouteMatchPtrOutput)
}

// Client request headers to match on.
func (o GatewayRouteSpecHttpRouteMatchOutput) Headers() GatewayRouteSpecHttpRouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatch) []GatewayRouteSpecHttpRouteMatchHeader { return v.Headers }).(GatewayRouteSpecHttpRouteMatchHeaderArrayOutput)
}

// Host name to rewrite.
func (o GatewayRouteSpecHttpRouteMatchOutput) Hostname() GatewayRouteSpecHttpRouteMatchHostnamePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatch) *GatewayRouteSpecHttpRouteMatchHostname { return v.Hostname }).(GatewayRouteSpecHttpRouteMatchHostnamePtrOutput)
}

// Exact path to rewrite.
func (o GatewayRouteSpecHttpRouteMatchOutput) Path() GatewayRouteSpecHttpRouteMatchPathPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatch) *GatewayRouteSpecHttpRouteMatchPath { return v.Path }).(GatewayRouteSpecHttpRouteMatchPathPtrOutput)
}

// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
func (o GatewayRouteSpecHttpRouteMatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Specified beginning characters to rewrite.
func (o GatewayRouteSpecHttpRouteMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Client request query parameters to match on.
func (o GatewayRouteSpecHttpRouteMatchOutput) QueryParameters() GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatch) []GatewayRouteSpecHttpRouteMatchQueryParameter {
		return v.QueryParameters
	}).(GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput)
}

type GatewayRouteSpecHttpRouteMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchPtrOutput) ToGatewayRouteSpecHttpRouteMatchPtrOutput() GatewayRouteSpecHttpRouteMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchPtrOutput) ToGatewayRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchPtrOutput) Elem() GatewayRouteSpecHttpRouteMatchOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatch) GatewayRouteSpecHttpRouteMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteMatch
		return ret
	}).(GatewayRouteSpecHttpRouteMatchOutput)
}

// Client request headers to match on.
func (o GatewayRouteSpecHttpRouteMatchPtrOutput) Headers() GatewayRouteSpecHttpRouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatch) []GatewayRouteSpecHttpRouteMatchHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(GatewayRouteSpecHttpRouteMatchHeaderArrayOutput)
}

// Host name to rewrite.
func (o GatewayRouteSpecHttpRouteMatchPtrOutput) Hostname() GatewayRouteSpecHttpRouteMatchHostnamePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatch) *GatewayRouteSpecHttpRouteMatchHostname {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(GatewayRouteSpecHttpRouteMatchHostnamePtrOutput)
}

// Exact path to rewrite.
func (o GatewayRouteSpecHttpRouteMatchPtrOutput) Path() GatewayRouteSpecHttpRouteMatchPathPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatch) *GatewayRouteSpecHttpRouteMatchPath {
		if v == nil {
			return nil
		}
		return v.Path
	}).(GatewayRouteSpecHttpRouteMatchPathPtrOutput)
}

// The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.
func (o GatewayRouteSpecHttpRouteMatchPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatch) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Specified beginning characters to rewrite.
func (o GatewayRouteSpecHttpRouteMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Client request query parameters to match on.
func (o GatewayRouteSpecHttpRouteMatchPtrOutput) QueryParameters() GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatch) []GatewayRouteSpecHttpRouteMatchQueryParameter {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput)
}

type GatewayRouteSpecHttpRouteMatchHeader struct {
	// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
	Invert *bool `pulumi:"invert"`
	// Method and value to match the header value sent with a request. Specify one match method.
	Match *GatewayRouteSpecHttpRouteMatchHeaderMatch `pulumi:"match"`
	// Name for the HTTP header in the client request that will be matched on.
	Name string `pulumi:"name"`
}

// GatewayRouteSpecHttpRouteMatchHeaderInput is an input type that accepts GatewayRouteSpecHttpRouteMatchHeaderArgs and GatewayRouteSpecHttpRouteMatchHeaderOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchHeaderInput` via:
//
//	GatewayRouteSpecHttpRouteMatchHeaderArgs{...}
type GatewayRouteSpecHttpRouteMatchHeaderInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchHeaderOutput() GatewayRouteSpecHttpRouteMatchHeaderOutput
	ToGatewayRouteSpecHttpRouteMatchHeaderOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchHeaderOutput
}

type GatewayRouteSpecHttpRouteMatchHeaderArgs struct {
	// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
	Invert pulumi.BoolPtrInput `pulumi:"invert"`
	// Method and value to match the header value sent with a request. Specify one match method.
	Match GatewayRouteSpecHttpRouteMatchHeaderMatchPtrInput `pulumi:"match"`
	// Name for the HTTP header in the client request that will be matched on.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GatewayRouteSpecHttpRouteMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteMatchHeaderArgs) ToGatewayRouteSpecHttpRouteMatchHeaderOutput() GatewayRouteSpecHttpRouteMatchHeaderOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchHeaderOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchHeaderArgs) ToGatewayRouteSpecHttpRouteMatchHeaderOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchHeaderOutput)
}

// GatewayRouteSpecHttpRouteMatchHeaderArrayInput is an input type that accepts GatewayRouteSpecHttpRouteMatchHeaderArray and GatewayRouteSpecHttpRouteMatchHeaderArrayOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchHeaderArrayInput` via:
//
//	GatewayRouteSpecHttpRouteMatchHeaderArray{ GatewayRouteSpecHttpRouteMatchHeaderArgs{...} }
type GatewayRouteSpecHttpRouteMatchHeaderArrayInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchHeaderArrayOutput() GatewayRouteSpecHttpRouteMatchHeaderArrayOutput
	ToGatewayRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchHeaderArrayOutput
}

type GatewayRouteSpecHttpRouteMatchHeaderArray []GatewayRouteSpecHttpRouteMatchHeaderInput

func (GatewayRouteSpecHttpRouteMatchHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteMatchHeaderArray) ToGatewayRouteSpecHttpRouteMatchHeaderArrayOutput() GatewayRouteSpecHttpRouteMatchHeaderArrayOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchHeaderArray) ToGatewayRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchHeaderArrayOutput)
}

type GatewayRouteSpecHttpRouteMatchHeaderOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchHeaderOutput) ToGatewayRouteSpecHttpRouteMatchHeaderOutput() GatewayRouteSpecHttpRouteMatchHeaderOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHeaderOutput) ToGatewayRouteSpecHttpRouteMatchHeaderOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderOutput {
	return o
}

// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
func (o GatewayRouteSpecHttpRouteMatchHeaderOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchHeader) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

// Method and value to match the header value sent with a request. Specify one match method.
func (o GatewayRouteSpecHttpRouteMatchHeaderOutput) Match() GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchHeader) *GatewayRouteSpecHttpRouteMatchHeaderMatch {
		return v.Match
	}).(GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput)
}

// Name for the HTTP header in the client request that will be matched on.
func (o GatewayRouteSpecHttpRouteMatchHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchHeader) string { return v.Name }).(pulumi.StringOutput)
}

type GatewayRouteSpecHttpRouteMatchHeaderArrayOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchHeaderArrayOutput) ToGatewayRouteSpecHttpRouteMatchHeaderArrayOutput() GatewayRouteSpecHttpRouteMatchHeaderArrayOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHeaderArrayOutput) ToGatewayRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderArrayOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHeaderArrayOutput) Index(i pulumi.IntInput) GatewayRouteSpecHttpRouteMatchHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayRouteSpecHttpRouteMatchHeader {
		return vs[0].([]GatewayRouteSpecHttpRouteMatchHeader)[vs[1].(int)]
	}).(GatewayRouteSpecHttpRouteMatchHeaderOutput)
}

type GatewayRouteSpecHttpRouteMatchHeaderMatch struct {
	// Value used to replace matched path.
	Exact *string `pulumi:"exact"`
	// Specified beginning characters to rewrite.
	Prefix *string `pulumi:"prefix"`
	// Object that specifies the range of numbers that the header value sent by the client must be included in.
	Range *GatewayRouteSpecHttpRouteMatchHeaderMatchRange `pulumi:"range"`
	// Header value sent by the client must include the specified characters.
	Regex *string `pulumi:"regex"`
	// Header value sent by the client must end with the specified characters.
	Suffix *string `pulumi:"suffix"`
}

// GatewayRouteSpecHttpRouteMatchHeaderMatchInput is an input type that accepts GatewayRouteSpecHttpRouteMatchHeaderMatchArgs and GatewayRouteSpecHttpRouteMatchHeaderMatchOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchHeaderMatchInput` via:
//
//	GatewayRouteSpecHttpRouteMatchHeaderMatchArgs{...}
type GatewayRouteSpecHttpRouteMatchHeaderMatchInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchHeaderMatchOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchOutput
	ToGatewayRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchOutput
}

type GatewayRouteSpecHttpRouteMatchHeaderMatchArgs struct {
	// Value used to replace matched path.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// Specified beginning characters to rewrite.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Object that specifies the range of numbers that the header value sent by the client must be included in.
	Range GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrInput `pulumi:"range"`
	// Header value sent by the client must include the specified characters.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// Header value sent by the client must end with the specified characters.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (GatewayRouteSpecHttpRouteMatchHeaderMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteMatchHeaderMatchArgs) ToGatewayRouteSpecHttpRouteMatchHeaderMatchOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchHeaderMatchArgs) ToGatewayRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchHeaderMatchOutput)
}

func (i GatewayRouteSpecHttpRouteMatchHeaderMatchArgs) ToGatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchHeaderMatchArgs) ToGatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchHeaderMatchOutput).ToGatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteMatchHeaderMatchPtrInput is an input type that accepts GatewayRouteSpecHttpRouteMatchHeaderMatchArgs, GatewayRouteSpecHttpRouteMatchHeaderMatchPtr and GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchHeaderMatchPtrInput` via:
//
//	        GatewayRouteSpecHttpRouteMatchHeaderMatchArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttpRouteMatchHeaderMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput
	ToGatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput
}

type gatewayRouteSpecHttpRouteMatchHeaderMatchPtrType GatewayRouteSpecHttpRouteMatchHeaderMatchArgs

func GatewayRouteSpecHttpRouteMatchHeaderMatchPtr(v *GatewayRouteSpecHttpRouteMatchHeaderMatchArgs) GatewayRouteSpecHttpRouteMatchHeaderMatchPtrInput {
	return (*gatewayRouteSpecHttpRouteMatchHeaderMatchPtrType)(v)
}

func (*gatewayRouteSpecHttpRouteMatchHeaderMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteMatchHeaderMatchPtrType) ToGatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteMatchHeaderMatchPtrType) ToGatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput)
}

type GatewayRouteSpecHttpRouteMatchHeaderMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchHeaderMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchHeaderMatchOutput) ToGatewayRouteSpecHttpRouteMatchHeaderMatchOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHeaderMatchOutput) ToGatewayRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHeaderMatchOutput) ToGatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o.ToGatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteMatchHeaderMatchOutput) ToGatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteMatchHeaderMatch) *GatewayRouteSpecHttpRouteMatchHeaderMatch {
		return &v
	}).(GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput)
}

// Value used to replace matched path.
func (o GatewayRouteSpecHttpRouteMatchHeaderMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchHeaderMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// Specified beginning characters to rewrite.
func (o GatewayRouteSpecHttpRouteMatchHeaderMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchHeaderMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Object that specifies the range of numbers that the header value sent by the client must be included in.
func (o GatewayRouteSpecHttpRouteMatchHeaderMatchOutput) Range() GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchHeaderMatch) *GatewayRouteSpecHttpRouteMatchHeaderMatchRange {
		return v.Range
	}).(GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput)
}

// Header value sent by the client must include the specified characters.
func (o GatewayRouteSpecHttpRouteMatchHeaderMatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchHeaderMatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// Header value sent by the client must end with the specified characters.
func (o GatewayRouteSpecHttpRouteMatchHeaderMatchOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchHeaderMatch) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput) ToGatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput) ToGatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput) Elem() GatewayRouteSpecHttpRouteMatchHeaderMatchOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchHeaderMatch) GatewayRouteSpecHttpRouteMatchHeaderMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteMatchHeaderMatch
		return ret
	}).(GatewayRouteSpecHttpRouteMatchHeaderMatchOutput)
}

// Value used to replace matched path.
func (o GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// Specified beginning characters to rewrite.
func (o GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Object that specifies the range of numbers that the header value sent by the client must be included in.
func (o GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput) Range() GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchHeaderMatch) *GatewayRouteSpecHttpRouteMatchHeaderMatchRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput)
}

// Header value sent by the client must include the specified characters.
func (o GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// Header value sent by the client must end with the specified characters.
func (o GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRouteMatchHeaderMatchRange struct {
	// End of the range.
	End int `pulumi:"end"`
	// Start of the range.
	Start int `pulumi:"start"`
}

// GatewayRouteSpecHttpRouteMatchHeaderMatchRangeInput is an input type that accepts GatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs and GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchHeaderMatchRangeInput` via:
//
//	GatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs{...}
type GatewayRouteSpecHttpRouteMatchHeaderMatchRangeInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput
	ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput
}

type GatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs struct {
	// End of the range.
	End pulumi.IntInput `pulumi:"end"`
	// Start of the range.
	Start pulumi.IntInput `pulumi:"start"`
}

func (GatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput)
}

func (i GatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput).ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrInput is an input type that accepts GatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs, GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtr and GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrInput` via:
//
//	        GatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput
	ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput
}

type gatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrType GatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs

func GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtr(v *GatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs) GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrInput {
	return (*gatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrType)(v)
}

func (*gatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrType) ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrType) ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput)
}

type GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o.ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteMatchHeaderMatchRange) *GatewayRouteSpecHttpRouteMatchHeaderMatchRange {
		return &v
	}).(GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput)
}

// End of the range.
func (o GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchHeaderMatchRange) int { return v.End }).(pulumi.IntOutput)
}

// Start of the range.
func (o GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchHeaderMatchRange) int { return v.Start }).(pulumi.IntOutput)
}

type GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) ToGatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) Elem() GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchHeaderMatchRange) GatewayRouteSpecHttpRouteMatchHeaderMatchRange {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteMatchHeaderMatchRange
		return ret
	}).(GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput)
}

// End of the range.
func (o GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchHeaderMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.IntPtrOutput)
}

// Start of the range.
func (o GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchHeaderMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.IntPtrOutput)
}

type GatewayRouteSpecHttpRouteMatchHostname struct {
	// Exact host name to match on.
	Exact *string `pulumi:"exact"`
	// Specified ending characters of the host name to match on.
	Suffix *string `pulumi:"suffix"`
}

// GatewayRouteSpecHttpRouteMatchHostnameInput is an input type that accepts GatewayRouteSpecHttpRouteMatchHostnameArgs and GatewayRouteSpecHttpRouteMatchHostnameOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchHostnameInput` via:
//
//	GatewayRouteSpecHttpRouteMatchHostnameArgs{...}
type GatewayRouteSpecHttpRouteMatchHostnameInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchHostnameOutput() GatewayRouteSpecHttpRouteMatchHostnameOutput
	ToGatewayRouteSpecHttpRouteMatchHostnameOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchHostnameOutput
}

type GatewayRouteSpecHttpRouteMatchHostnameArgs struct {
	// Exact host name to match on.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// Specified ending characters of the host name to match on.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (GatewayRouteSpecHttpRouteMatchHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHostname)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteMatchHostnameArgs) ToGatewayRouteSpecHttpRouteMatchHostnameOutput() GatewayRouteSpecHttpRouteMatchHostnameOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchHostnameOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchHostnameArgs) ToGatewayRouteSpecHttpRouteMatchHostnameOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchHostnameOutput)
}

func (i GatewayRouteSpecHttpRouteMatchHostnameArgs) ToGatewayRouteSpecHttpRouteMatchHostnamePtrOutput() GatewayRouteSpecHttpRouteMatchHostnamePtrOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchHostnamePtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchHostnameArgs) ToGatewayRouteSpecHttpRouteMatchHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHostnamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchHostnameOutput).ToGatewayRouteSpecHttpRouteMatchHostnamePtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteMatchHostnamePtrInput is an input type that accepts GatewayRouteSpecHttpRouteMatchHostnameArgs, GatewayRouteSpecHttpRouteMatchHostnamePtr and GatewayRouteSpecHttpRouteMatchHostnamePtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchHostnamePtrInput` via:
//
//	        GatewayRouteSpecHttpRouteMatchHostnameArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttpRouteMatchHostnamePtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchHostnamePtrOutput() GatewayRouteSpecHttpRouteMatchHostnamePtrOutput
	ToGatewayRouteSpecHttpRouteMatchHostnamePtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchHostnamePtrOutput
}

type gatewayRouteSpecHttpRouteMatchHostnamePtrType GatewayRouteSpecHttpRouteMatchHostnameArgs

func GatewayRouteSpecHttpRouteMatchHostnamePtr(v *GatewayRouteSpecHttpRouteMatchHostnameArgs) GatewayRouteSpecHttpRouteMatchHostnamePtrInput {
	return (*gatewayRouteSpecHttpRouteMatchHostnamePtrType)(v)
}

func (*gatewayRouteSpecHttpRouteMatchHostnamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteMatchHostname)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteMatchHostnamePtrType) ToGatewayRouteSpecHttpRouteMatchHostnamePtrOutput() GatewayRouteSpecHttpRouteMatchHostnamePtrOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchHostnamePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteMatchHostnamePtrType) ToGatewayRouteSpecHttpRouteMatchHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHostnamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchHostnamePtrOutput)
}

type GatewayRouteSpecHttpRouteMatchHostnameOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHostname)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchHostnameOutput) ToGatewayRouteSpecHttpRouteMatchHostnameOutput() GatewayRouteSpecHttpRouteMatchHostnameOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHostnameOutput) ToGatewayRouteSpecHttpRouteMatchHostnameOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHostnameOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHostnameOutput) ToGatewayRouteSpecHttpRouteMatchHostnamePtrOutput() GatewayRouteSpecHttpRouteMatchHostnamePtrOutput {
	return o.ToGatewayRouteSpecHttpRouteMatchHostnamePtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteMatchHostnameOutput) ToGatewayRouteSpecHttpRouteMatchHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHostnamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteMatchHostname) *GatewayRouteSpecHttpRouteMatchHostname {
		return &v
	}).(GatewayRouteSpecHttpRouteMatchHostnamePtrOutput)
}

// Exact host name to match on.
func (o GatewayRouteSpecHttpRouteMatchHostnameOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchHostname) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// Specified ending characters of the host name to match on.
func (o GatewayRouteSpecHttpRouteMatchHostnameOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchHostname) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRouteMatchHostnamePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchHostnamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteMatchHostname)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchHostnamePtrOutput) ToGatewayRouteSpecHttpRouteMatchHostnamePtrOutput() GatewayRouteSpecHttpRouteMatchHostnamePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHostnamePtrOutput) ToGatewayRouteSpecHttpRouteMatchHostnamePtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchHostnamePtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchHostnamePtrOutput) Elem() GatewayRouteSpecHttpRouteMatchHostnameOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchHostname) GatewayRouteSpecHttpRouteMatchHostname {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteMatchHostname
		return ret
	}).(GatewayRouteSpecHttpRouteMatchHostnameOutput)
}

// Exact host name to match on.
func (o GatewayRouteSpecHttpRouteMatchHostnamePtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchHostname) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// Specified ending characters of the host name to match on.
func (o GatewayRouteSpecHttpRouteMatchHostnamePtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchHostname) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRouteMatchPath struct {
	// The exact path to match on.
	Exact *string `pulumi:"exact"`
	// The regex used to match the path.
	Regex *string `pulumi:"regex"`
}

// GatewayRouteSpecHttpRouteMatchPathInput is an input type that accepts GatewayRouteSpecHttpRouteMatchPathArgs and GatewayRouteSpecHttpRouteMatchPathOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchPathInput` via:
//
//	GatewayRouteSpecHttpRouteMatchPathArgs{...}
type GatewayRouteSpecHttpRouteMatchPathInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchPathOutput() GatewayRouteSpecHttpRouteMatchPathOutput
	ToGatewayRouteSpecHttpRouteMatchPathOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchPathOutput
}

type GatewayRouteSpecHttpRouteMatchPathArgs struct {
	// The exact path to match on.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// The regex used to match the path.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (GatewayRouteSpecHttpRouteMatchPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteMatchPathArgs) ToGatewayRouteSpecHttpRouteMatchPathOutput() GatewayRouteSpecHttpRouteMatchPathOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchPathOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchPathArgs) ToGatewayRouteSpecHttpRouteMatchPathOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchPathOutput)
}

func (i GatewayRouteSpecHttpRouteMatchPathArgs) ToGatewayRouteSpecHttpRouteMatchPathPtrOutput() GatewayRouteSpecHttpRouteMatchPathPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchPathPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchPathArgs) ToGatewayRouteSpecHttpRouteMatchPathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchPathOutput).ToGatewayRouteSpecHttpRouteMatchPathPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteMatchPathPtrInput is an input type that accepts GatewayRouteSpecHttpRouteMatchPathArgs, GatewayRouteSpecHttpRouteMatchPathPtr and GatewayRouteSpecHttpRouteMatchPathPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchPathPtrInput` via:
//
//	        GatewayRouteSpecHttpRouteMatchPathArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttpRouteMatchPathPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchPathPtrOutput() GatewayRouteSpecHttpRouteMatchPathPtrOutput
	ToGatewayRouteSpecHttpRouteMatchPathPtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchPathPtrOutput
}

type gatewayRouteSpecHttpRouteMatchPathPtrType GatewayRouteSpecHttpRouteMatchPathArgs

func GatewayRouteSpecHttpRouteMatchPathPtr(v *GatewayRouteSpecHttpRouteMatchPathArgs) GatewayRouteSpecHttpRouteMatchPathPtrInput {
	return (*gatewayRouteSpecHttpRouteMatchPathPtrType)(v)
}

func (*gatewayRouteSpecHttpRouteMatchPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteMatchPathPtrType) ToGatewayRouteSpecHttpRouteMatchPathPtrOutput() GatewayRouteSpecHttpRouteMatchPathPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchPathPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteMatchPathPtrType) ToGatewayRouteSpecHttpRouteMatchPathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchPathPtrOutput)
}

type GatewayRouteSpecHttpRouteMatchPathOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchPathOutput) ToGatewayRouteSpecHttpRouteMatchPathOutput() GatewayRouteSpecHttpRouteMatchPathOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchPathOutput) ToGatewayRouteSpecHttpRouteMatchPathOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchPathOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchPathOutput) ToGatewayRouteSpecHttpRouteMatchPathPtrOutput() GatewayRouteSpecHttpRouteMatchPathPtrOutput {
	return o.ToGatewayRouteSpecHttpRouteMatchPathPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteMatchPathOutput) ToGatewayRouteSpecHttpRouteMatchPathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteMatchPath) *GatewayRouteSpecHttpRouteMatchPath {
		return &v
	}).(GatewayRouteSpecHttpRouteMatchPathPtrOutput)
}

// The exact path to match on.
func (o GatewayRouteSpecHttpRouteMatchPathOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchPath) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// The regex used to match the path.
func (o GatewayRouteSpecHttpRouteMatchPathOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchPath) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRouteMatchPathPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchPathPtrOutput) ToGatewayRouteSpecHttpRouteMatchPathPtrOutput() GatewayRouteSpecHttpRouteMatchPathPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchPathPtrOutput) ToGatewayRouteSpecHttpRouteMatchPathPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchPathPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchPathPtrOutput) Elem() GatewayRouteSpecHttpRouteMatchPathOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchPath) GatewayRouteSpecHttpRouteMatchPath {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteMatchPath
		return ret
	}).(GatewayRouteSpecHttpRouteMatchPathOutput)
}

// The exact path to match on.
func (o GatewayRouteSpecHttpRouteMatchPathPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchPath) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// The regex used to match the path.
func (o GatewayRouteSpecHttpRouteMatchPathPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchPath) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRouteMatchQueryParameter struct {
	// The query parameter to match on.
	Match *GatewayRouteSpecHttpRouteMatchQueryParameterMatch `pulumi:"match"`
	// Name for the query parameter that will be matched on.
	Name string `pulumi:"name"`
}

// GatewayRouteSpecHttpRouteMatchQueryParameterInput is an input type that accepts GatewayRouteSpecHttpRouteMatchQueryParameterArgs and GatewayRouteSpecHttpRouteMatchQueryParameterOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchQueryParameterInput` via:
//
//	GatewayRouteSpecHttpRouteMatchQueryParameterArgs{...}
type GatewayRouteSpecHttpRouteMatchQueryParameterInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchQueryParameterOutput() GatewayRouteSpecHttpRouteMatchQueryParameterOutput
	ToGatewayRouteSpecHttpRouteMatchQueryParameterOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchQueryParameterOutput
}

type GatewayRouteSpecHttpRouteMatchQueryParameterArgs struct {
	// The query parameter to match on.
	Match GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrInput `pulumi:"match"`
	// Name for the query parameter that will be matched on.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GatewayRouteSpecHttpRouteMatchQueryParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteMatchQueryParameterArgs) ToGatewayRouteSpecHttpRouteMatchQueryParameterOutput() GatewayRouteSpecHttpRouteMatchQueryParameterOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchQueryParameterOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchQueryParameterArgs) ToGatewayRouteSpecHttpRouteMatchQueryParameterOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchQueryParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchQueryParameterOutput)
}

// GatewayRouteSpecHttpRouteMatchQueryParameterArrayInput is an input type that accepts GatewayRouteSpecHttpRouteMatchQueryParameterArray and GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchQueryParameterArrayInput` via:
//
//	GatewayRouteSpecHttpRouteMatchQueryParameterArray{ GatewayRouteSpecHttpRouteMatchQueryParameterArgs{...} }
type GatewayRouteSpecHttpRouteMatchQueryParameterArrayInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput() GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput
	ToGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput
}

type GatewayRouteSpecHttpRouteMatchQueryParameterArray []GatewayRouteSpecHttpRouteMatchQueryParameterInput

func (GatewayRouteSpecHttpRouteMatchQueryParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteMatchQueryParameterArray) ToGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput() GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchQueryParameterArray) ToGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput)
}

type GatewayRouteSpecHttpRouteMatchQueryParameterOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchQueryParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchQueryParameterOutput) ToGatewayRouteSpecHttpRouteMatchQueryParameterOutput() GatewayRouteSpecHttpRouteMatchQueryParameterOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchQueryParameterOutput) ToGatewayRouteSpecHttpRouteMatchQueryParameterOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchQueryParameterOutput {
	return o
}

// The query parameter to match on.
func (o GatewayRouteSpecHttpRouteMatchQueryParameterOutput) Match() GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchQueryParameter) *GatewayRouteSpecHttpRouteMatchQueryParameterMatch {
		return v.Match
	}).(GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput)
}

// Name for the query parameter that will be matched on.
func (o GatewayRouteSpecHttpRouteMatchQueryParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchQueryParameter) string { return v.Name }).(pulumi.StringOutput)
}

type GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput) ToGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput() GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput) ToGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput) Index(i pulumi.IntInput) GatewayRouteSpecHttpRouteMatchQueryParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayRouteSpecHttpRouteMatchQueryParameter {
		return vs[0].([]GatewayRouteSpecHttpRouteMatchQueryParameter)[vs[1].(int)]
	}).(GatewayRouteSpecHttpRouteMatchQueryParameterOutput)
}

type GatewayRouteSpecHttpRouteMatchQueryParameterMatch struct {
	// Value used to replace matched path.
	Exact *string `pulumi:"exact"`
}

// GatewayRouteSpecHttpRouteMatchQueryParameterMatchInput is an input type that accepts GatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs and GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchQueryParameterMatchInput` via:
//
//	GatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs{...}
type GatewayRouteSpecHttpRouteMatchQueryParameterMatchInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput() GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput
	ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput
}

type GatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs struct {
	// Value used to replace matched path.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
}

func (GatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i GatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs) ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput() GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs) ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput)
}

func (i GatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs) ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput() GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs) ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput).ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(ctx)
}

// GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrInput is an input type that accepts GatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs, GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtr and GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrInput` via:
//
//	        GatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs{...}
//
//	or:
//
//	        nil
type GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput() GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput
	ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(context.Context) GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput
}

type gatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrType GatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs

func GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtr(v *GatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs) GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrInput {
	return (*gatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrType)(v)
}

func (*gatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i *gatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrType) ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput() GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return i.ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrType) ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput)
}

type GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput) ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput() GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput) ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput) ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput() GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return o.ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput) ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpecHttpRouteMatchQueryParameterMatch) *GatewayRouteSpecHttpRouteMatchQueryParameterMatch {
		return &v
	}).(GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput)
}

// Value used to replace matched path.
func (o GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpecHttpRouteMatchQueryParameterMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

type GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput) ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput() GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput) ToGatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return o
}

func (o GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput) Elem() GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchQueryParameterMatch) GatewayRouteSpecHttpRouteMatchQueryParameterMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpecHttpRouteMatchQueryParameterMatch
		return ret
	}).(GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput)
}

// Value used to replace matched path.
func (o GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpecHttpRouteMatchQueryParameterMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

type MeshSpec struct {
	// Egress filter rules for the service mesh.
	EgressFilter *MeshSpecEgressFilter `pulumi:"egressFilter"`
}

// MeshSpecInput is an input type that accepts MeshSpecArgs and MeshSpecOutput values.
// You can construct a concrete instance of `MeshSpecInput` via:
//
//	MeshSpecArgs{...}
type MeshSpecInput interface {
	pulumi.Input

	ToMeshSpecOutput() MeshSpecOutput
	ToMeshSpecOutputWithContext(context.Context) MeshSpecOutput
}

type MeshSpecArgs struct {
	// Egress filter rules for the service mesh.
	EgressFilter MeshSpecEgressFilterPtrInput `pulumi:"egressFilter"`
}

func (MeshSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MeshSpec)(nil)).Elem()
}

func (i MeshSpecArgs) ToMeshSpecOutput() MeshSpecOutput {
	return i.ToMeshSpecOutputWithContext(context.Background())
}

func (i MeshSpecArgs) ToMeshSpecOutputWithContext(ctx context.Context) MeshSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecOutput)
}

func (i MeshSpecArgs) ToMeshSpecPtrOutput() MeshSpecPtrOutput {
	return i.ToMeshSpecPtrOutputWithContext(context.Background())
}

func (i MeshSpecArgs) ToMeshSpecPtrOutputWithContext(ctx context.Context) MeshSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecOutput).ToMeshSpecPtrOutputWithContext(ctx)
}

// MeshSpecPtrInput is an input type that accepts MeshSpecArgs, MeshSpecPtr and MeshSpecPtrOutput values.
// You can construct a concrete instance of `MeshSpecPtrInput` via:
//
//	        MeshSpecArgs{...}
//
//	or:
//
//	        nil
type MeshSpecPtrInput interface {
	pulumi.Input

	ToMeshSpecPtrOutput() MeshSpecPtrOutput
	ToMeshSpecPtrOutputWithContext(context.Context) MeshSpecPtrOutput
}

type meshSpecPtrType MeshSpecArgs

func MeshSpecPtr(v *MeshSpecArgs) MeshSpecPtrInput {
	return (*meshSpecPtrType)(v)
}

func (*meshSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MeshSpec)(nil)).Elem()
}

func (i *meshSpecPtrType) ToMeshSpecPtrOutput() MeshSpecPtrOutput {
	return i.ToMeshSpecPtrOutputWithContext(context.Background())
}

func (i *meshSpecPtrType) ToMeshSpecPtrOutputWithContext(ctx context.Context) MeshSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecPtrOutput)
}

type MeshSpecOutput struct{ *pulumi.OutputState }

func (MeshSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MeshSpec)(nil)).Elem()
}

func (o MeshSpecOutput) ToMeshSpecOutput() MeshSpecOutput {
	return o
}

func (o MeshSpecOutput) ToMeshSpecOutputWithContext(ctx context.Context) MeshSpecOutput {
	return o
}

func (o MeshSpecOutput) ToMeshSpecPtrOutput() MeshSpecPtrOutput {
	return o.ToMeshSpecPtrOutputWithContext(context.Background())
}

func (o MeshSpecOutput) ToMeshSpecPtrOutputWithContext(ctx context.Context) MeshSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MeshSpec) *MeshSpec {
		return &v
	}).(MeshSpecPtrOutput)
}

// Egress filter rules for the service mesh.
func (o MeshSpecOutput) EgressFilter() MeshSpecEgressFilterPtrOutput {
	return o.ApplyT(func(v MeshSpec) *MeshSpecEgressFilter { return v.EgressFilter }).(MeshSpecEgressFilterPtrOutput)
}

type MeshSpecPtrOutput struct{ *pulumi.OutputState }

func (MeshSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MeshSpec)(nil)).Elem()
}

func (o MeshSpecPtrOutput) ToMeshSpecPtrOutput() MeshSpecPtrOutput {
	return o
}

func (o MeshSpecPtrOutput) ToMeshSpecPtrOutputWithContext(ctx context.Context) MeshSpecPtrOutput {
	return o
}

func (o MeshSpecPtrOutput) Elem() MeshSpecOutput {
	return o.ApplyT(func(v *MeshSpec) MeshSpec {
		if v != nil {
			return *v
		}
		var ret MeshSpec
		return ret
	}).(MeshSpecOutput)
}

// Egress filter rules for the service mesh.
func (o MeshSpecPtrOutput) EgressFilter() MeshSpecEgressFilterPtrOutput {
	return o.ApplyT(func(v *MeshSpec) *MeshSpecEgressFilter {
		if v == nil {
			return nil
		}
		return v.EgressFilter
	}).(MeshSpecEgressFilterPtrOutput)
}

type MeshSpecEgressFilter struct {
	// Egress filter type. By default, the type is `DROP_ALL`.
	// Valid values are `ALLOW_ALL` and `DROP_ALL`.
	Type *string `pulumi:"type"`
}

// MeshSpecEgressFilterInput is an input type that accepts MeshSpecEgressFilterArgs and MeshSpecEgressFilterOutput values.
// You can construct a concrete instance of `MeshSpecEgressFilterInput` via:
//
//	MeshSpecEgressFilterArgs{...}
type MeshSpecEgressFilterInput interface {
	pulumi.Input

	ToMeshSpecEgressFilterOutput() MeshSpecEgressFilterOutput
	ToMeshSpecEgressFilterOutputWithContext(context.Context) MeshSpecEgressFilterOutput
}

type MeshSpecEgressFilterArgs struct {
	// Egress filter type. By default, the type is `DROP_ALL`.
	// Valid values are `ALLOW_ALL` and `DROP_ALL`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (MeshSpecEgressFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MeshSpecEgressFilter)(nil)).Elem()
}

func (i MeshSpecEgressFilterArgs) ToMeshSpecEgressFilterOutput() MeshSpecEgressFilterOutput {
	return i.ToMeshSpecEgressFilterOutputWithContext(context.Background())
}

func (i MeshSpecEgressFilterArgs) ToMeshSpecEgressFilterOutputWithContext(ctx context.Context) MeshSpecEgressFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecEgressFilterOutput)
}

func (i MeshSpecEgressFilterArgs) ToMeshSpecEgressFilterPtrOutput() MeshSpecEgressFilterPtrOutput {
	return i.ToMeshSpecEgressFilterPtrOutputWithContext(context.Background())
}

func (i MeshSpecEgressFilterArgs) ToMeshSpecEgressFilterPtrOutputWithContext(ctx context.Context) MeshSpecEgressFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecEgressFilterOutput).ToMeshSpecEgressFilterPtrOutputWithContext(ctx)
}

// MeshSpecEgressFilterPtrInput is an input type that accepts MeshSpecEgressFilterArgs, MeshSpecEgressFilterPtr and MeshSpecEgressFilterPtrOutput values.
// You can construct a concrete instance of `MeshSpecEgressFilterPtrInput` via:
//
//	        MeshSpecEgressFilterArgs{...}
//
//	or:
//
//	        nil
type MeshSpecEgressFilterPtrInput interface {
	pulumi.Input

	ToMeshSpecEgressFilterPtrOutput() MeshSpecEgressFilterPtrOutput
	ToMeshSpecEgressFilterPtrOutputWithContext(context.Context) MeshSpecEgressFilterPtrOutput
}

type meshSpecEgressFilterPtrType MeshSpecEgressFilterArgs

func MeshSpecEgressFilterPtr(v *MeshSpecEgressFilterArgs) MeshSpecEgressFilterPtrInput {
	return (*meshSpecEgressFilterPtrType)(v)
}

func (*meshSpecEgressFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MeshSpecEgressFilter)(nil)).Elem()
}

func (i *meshSpecEgressFilterPtrType) ToMeshSpecEgressFilterPtrOutput() MeshSpecEgressFilterPtrOutput {
	return i.ToMeshSpecEgressFilterPtrOutputWithContext(context.Background())
}

func (i *meshSpecEgressFilterPtrType) ToMeshSpecEgressFilterPtrOutputWithContext(ctx context.Context) MeshSpecEgressFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecEgressFilterPtrOutput)
}

type MeshSpecEgressFilterOutput struct{ *pulumi.OutputState }

func (MeshSpecEgressFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MeshSpecEgressFilter)(nil)).Elem()
}

func (o MeshSpecEgressFilterOutput) ToMeshSpecEgressFilterOutput() MeshSpecEgressFilterOutput {
	return o
}

func (o MeshSpecEgressFilterOutput) ToMeshSpecEgressFilterOutputWithContext(ctx context.Context) MeshSpecEgressFilterOutput {
	return o
}

func (o MeshSpecEgressFilterOutput) ToMeshSpecEgressFilterPtrOutput() MeshSpecEgressFilterPtrOutput {
	return o.ToMeshSpecEgressFilterPtrOutputWithContext(context.Background())
}

func (o MeshSpecEgressFilterOutput) ToMeshSpecEgressFilterPtrOutputWithContext(ctx context.Context) MeshSpecEgressFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MeshSpecEgressFilter) *MeshSpecEgressFilter {
		return &v
	}).(MeshSpecEgressFilterPtrOutput)
}

// Egress filter type. By default, the type is `DROP_ALL`.
// Valid values are `ALLOW_ALL` and `DROP_ALL`.
func (o MeshSpecEgressFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MeshSpecEgressFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type MeshSpecEgressFilterPtrOutput struct{ *pulumi.OutputState }

func (MeshSpecEgressFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MeshSpecEgressFilter)(nil)).Elem()
}

func (o MeshSpecEgressFilterPtrOutput) ToMeshSpecEgressFilterPtrOutput() MeshSpecEgressFilterPtrOutput {
	return o
}

func (o MeshSpecEgressFilterPtrOutput) ToMeshSpecEgressFilterPtrOutputWithContext(ctx context.Context) MeshSpecEgressFilterPtrOutput {
	return o
}

func (o MeshSpecEgressFilterPtrOutput) Elem() MeshSpecEgressFilterOutput {
	return o.ApplyT(func(v *MeshSpecEgressFilter) MeshSpecEgressFilter {
		if v != nil {
			return *v
		}
		var ret MeshSpecEgressFilter
		return ret
	}).(MeshSpecEgressFilterOutput)
}

// Egress filter type. By default, the type is `DROP_ALL`.
// Valid values are `ALLOW_ALL` and `DROP_ALL`.
func (o MeshSpecEgressFilterPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MeshSpecEgressFilter) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type RouteSpec struct {
	// GRPC routing information for the route.
	GrpcRoute *RouteSpecGrpcRoute `pulumi:"grpcRoute"`
	// HTTP/2 routing information for the route.
	Http2Route *RouteSpecHttp2Route `pulumi:"http2Route"`
	// HTTP routing information for the route.
	HttpRoute *RouteSpecHttpRoute `pulumi:"httpRoute"`
	// Priority for the route, between `0` and `1000`.
	// Routes are matched based on the specified value, where `0` is the highest priority.
	Priority *int `pulumi:"priority"`
	// TCP routing information for the route.
	TcpRoute *RouteSpecTcpRoute `pulumi:"tcpRoute"`
}

// RouteSpecInput is an input type that accepts RouteSpecArgs and RouteSpecOutput values.
// You can construct a concrete instance of `RouteSpecInput` via:
//
//	RouteSpecArgs{...}
type RouteSpecInput interface {
	pulumi.Input

	ToRouteSpecOutput() RouteSpecOutput
	ToRouteSpecOutputWithContext(context.Context) RouteSpecOutput
}

type RouteSpecArgs struct {
	// GRPC routing information for the route.
	GrpcRoute RouteSpecGrpcRoutePtrInput `pulumi:"grpcRoute"`
	// HTTP/2 routing information for the route.
	Http2Route RouteSpecHttp2RoutePtrInput `pulumi:"http2Route"`
	// HTTP routing information for the route.
	HttpRoute RouteSpecHttpRoutePtrInput `pulumi:"httpRoute"`
	// Priority for the route, between `0` and `1000`.
	// Routes are matched based on the specified value, where `0` is the highest priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// TCP routing information for the route.
	TcpRoute RouteSpecTcpRoutePtrInput `pulumi:"tcpRoute"`
}

func (RouteSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpec)(nil)).Elem()
}

func (i RouteSpecArgs) ToRouteSpecOutput() RouteSpecOutput {
	return i.ToRouteSpecOutputWithContext(context.Background())
}

func (i RouteSpecArgs) ToRouteSpecOutputWithContext(ctx context.Context) RouteSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecOutput)
}

func (i RouteSpecArgs) ToRouteSpecPtrOutput() RouteSpecPtrOutput {
	return i.ToRouteSpecPtrOutputWithContext(context.Background())
}

func (i RouteSpecArgs) ToRouteSpecPtrOutputWithContext(ctx context.Context) RouteSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecOutput).ToRouteSpecPtrOutputWithContext(ctx)
}

// RouteSpecPtrInput is an input type that accepts RouteSpecArgs, RouteSpecPtr and RouteSpecPtrOutput values.
// You can construct a concrete instance of `RouteSpecPtrInput` via:
//
//	        RouteSpecArgs{...}
//
//	or:
//
//	        nil
type RouteSpecPtrInput interface {
	pulumi.Input

	ToRouteSpecPtrOutput() RouteSpecPtrOutput
	ToRouteSpecPtrOutputWithContext(context.Context) RouteSpecPtrOutput
}

type routeSpecPtrType RouteSpecArgs

func RouteSpecPtr(v *RouteSpecArgs) RouteSpecPtrInput {
	return (*routeSpecPtrType)(v)
}

func (*routeSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpec)(nil)).Elem()
}

func (i *routeSpecPtrType) ToRouteSpecPtrOutput() RouteSpecPtrOutput {
	return i.ToRouteSpecPtrOutputWithContext(context.Background())
}

func (i *routeSpecPtrType) ToRouteSpecPtrOutputWithContext(ctx context.Context) RouteSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecPtrOutput)
}

type RouteSpecOutput struct{ *pulumi.OutputState }

func (RouteSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpec)(nil)).Elem()
}

func (o RouteSpecOutput) ToRouteSpecOutput() RouteSpecOutput {
	return o
}

func (o RouteSpecOutput) ToRouteSpecOutputWithContext(ctx context.Context) RouteSpecOutput {
	return o
}

func (o RouteSpecOutput) ToRouteSpecPtrOutput() RouteSpecPtrOutput {
	return o.ToRouteSpecPtrOutputWithContext(context.Background())
}

func (o RouteSpecOutput) ToRouteSpecPtrOutputWithContext(ctx context.Context) RouteSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpec) *RouteSpec {
		return &v
	}).(RouteSpecPtrOutput)
}

// GRPC routing information for the route.
func (o RouteSpecOutput) GrpcRoute() RouteSpecGrpcRoutePtrOutput {
	return o.ApplyT(func(v RouteSpec) *RouteSpecGrpcRoute { return v.GrpcRoute }).(RouteSpecGrpcRoutePtrOutput)
}

// HTTP/2 routing information for the route.
func (o RouteSpecOutput) Http2Route() RouteSpecHttp2RoutePtrOutput {
	return o.ApplyT(func(v RouteSpec) *RouteSpecHttp2Route { return v.Http2Route }).(RouteSpecHttp2RoutePtrOutput)
}

// HTTP routing information for the route.
func (o RouteSpecOutput) HttpRoute() RouteSpecHttpRoutePtrOutput {
	return o.ApplyT(func(v RouteSpec) *RouteSpecHttpRoute { return v.HttpRoute }).(RouteSpecHttpRoutePtrOutput)
}

// Priority for the route, between `0` and `1000`.
// Routes are matched based on the specified value, where `0` is the highest priority.
func (o RouteSpecOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouteSpec) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// TCP routing information for the route.
func (o RouteSpecOutput) TcpRoute() RouteSpecTcpRoutePtrOutput {
	return o.ApplyT(func(v RouteSpec) *RouteSpecTcpRoute { return v.TcpRoute }).(RouteSpecTcpRoutePtrOutput)
}

type RouteSpecPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpec)(nil)).Elem()
}

func (o RouteSpecPtrOutput) ToRouteSpecPtrOutput() RouteSpecPtrOutput {
	return o
}

func (o RouteSpecPtrOutput) ToRouteSpecPtrOutputWithContext(ctx context.Context) RouteSpecPtrOutput {
	return o
}

func (o RouteSpecPtrOutput) Elem() RouteSpecOutput {
	return o.ApplyT(func(v *RouteSpec) RouteSpec {
		if v != nil {
			return *v
		}
		var ret RouteSpec
		return ret
	}).(RouteSpecOutput)
}

// GRPC routing information for the route.
func (o RouteSpecPtrOutput) GrpcRoute() RouteSpecGrpcRoutePtrOutput {
	return o.ApplyT(func(v *RouteSpec) *RouteSpecGrpcRoute {
		if v == nil {
			return nil
		}
		return v.GrpcRoute
	}).(RouteSpecGrpcRoutePtrOutput)
}

// HTTP/2 routing information for the route.
func (o RouteSpecPtrOutput) Http2Route() RouteSpecHttp2RoutePtrOutput {
	return o.ApplyT(func(v *RouteSpec) *RouteSpecHttp2Route {
		if v == nil {
			return nil
		}
		return v.Http2Route
	}).(RouteSpecHttp2RoutePtrOutput)
}

// HTTP routing information for the route.
func (o RouteSpecPtrOutput) HttpRoute() RouteSpecHttpRoutePtrOutput {
	return o.ApplyT(func(v *RouteSpec) *RouteSpecHttpRoute {
		if v == nil {
			return nil
		}
		return v.HttpRoute
	}).(RouteSpecHttpRoutePtrOutput)
}

// Priority for the route, between `0` and `1000`.
// Routes are matched based on the specified value, where `0` is the highest priority.
func (o RouteSpecPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpec) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// TCP routing information for the route.
func (o RouteSpecPtrOutput) TcpRoute() RouteSpecTcpRoutePtrOutput {
	return o.ApplyT(func(v *RouteSpec) *RouteSpecTcpRoute {
		if v == nil {
			return nil
		}
		return v.TcpRoute
	}).(RouteSpecTcpRoutePtrOutput)
}

type RouteSpecGrpcRoute struct {
	// Action to take if a match is determined.
	Action RouteSpecGrpcRouteAction `pulumi:"action"`
	// Criteria for determining an gRPC request match.
	Match *RouteSpecGrpcRouteMatch `pulumi:"match"`
	// Retry policy.
	RetryPolicy *RouteSpecGrpcRouteRetryPolicy `pulumi:"retryPolicy"`
	// Types of timeouts.
	Timeout *RouteSpecGrpcRouteTimeout `pulumi:"timeout"`
}

// RouteSpecGrpcRouteInput is an input type that accepts RouteSpecGrpcRouteArgs and RouteSpecGrpcRouteOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteInput` via:
//
//	RouteSpecGrpcRouteArgs{...}
type RouteSpecGrpcRouteInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteOutput() RouteSpecGrpcRouteOutput
	ToRouteSpecGrpcRouteOutputWithContext(context.Context) RouteSpecGrpcRouteOutput
}

type RouteSpecGrpcRouteArgs struct {
	// Action to take if a match is determined.
	Action RouteSpecGrpcRouteActionInput `pulumi:"action"`
	// Criteria for determining an gRPC request match.
	Match RouteSpecGrpcRouteMatchPtrInput `pulumi:"match"`
	// Retry policy.
	RetryPolicy RouteSpecGrpcRouteRetryPolicyPtrInput `pulumi:"retryPolicy"`
	// Types of timeouts.
	Timeout RouteSpecGrpcRouteTimeoutPtrInput `pulumi:"timeout"`
}

func (RouteSpecGrpcRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRoute)(nil)).Elem()
}

func (i RouteSpecGrpcRouteArgs) ToRouteSpecGrpcRouteOutput() RouteSpecGrpcRouteOutput {
	return i.ToRouteSpecGrpcRouteOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteArgs) ToRouteSpecGrpcRouteOutputWithContext(ctx context.Context) RouteSpecGrpcRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteOutput)
}

func (i RouteSpecGrpcRouteArgs) ToRouteSpecGrpcRoutePtrOutput() RouteSpecGrpcRoutePtrOutput {
	return i.ToRouteSpecGrpcRoutePtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteArgs) ToRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteOutput).ToRouteSpecGrpcRoutePtrOutputWithContext(ctx)
}

// RouteSpecGrpcRoutePtrInput is an input type that accepts RouteSpecGrpcRouteArgs, RouteSpecGrpcRoutePtr and RouteSpecGrpcRoutePtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRoutePtrInput` via:
//
//	        RouteSpecGrpcRouteArgs{...}
//
//	or:
//
//	        nil
type RouteSpecGrpcRoutePtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRoutePtrOutput() RouteSpecGrpcRoutePtrOutput
	ToRouteSpecGrpcRoutePtrOutputWithContext(context.Context) RouteSpecGrpcRoutePtrOutput
}

type routeSpecGrpcRoutePtrType RouteSpecGrpcRouteArgs

func RouteSpecGrpcRoutePtr(v *RouteSpecGrpcRouteArgs) RouteSpecGrpcRoutePtrInput {
	return (*routeSpecGrpcRoutePtrType)(v)
}

func (*routeSpecGrpcRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRoute)(nil)).Elem()
}

func (i *routeSpecGrpcRoutePtrType) ToRouteSpecGrpcRoutePtrOutput() RouteSpecGrpcRoutePtrOutput {
	return i.ToRouteSpecGrpcRoutePtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRoutePtrType) ToRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRoutePtrOutput)
}

type RouteSpecGrpcRouteOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRoute)(nil)).Elem()
}

func (o RouteSpecGrpcRouteOutput) ToRouteSpecGrpcRouteOutput() RouteSpecGrpcRouteOutput {
	return o
}

func (o RouteSpecGrpcRouteOutput) ToRouteSpecGrpcRouteOutputWithContext(ctx context.Context) RouteSpecGrpcRouteOutput {
	return o
}

func (o RouteSpecGrpcRouteOutput) ToRouteSpecGrpcRoutePtrOutput() RouteSpecGrpcRoutePtrOutput {
	return o.ToRouteSpecGrpcRoutePtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteOutput) ToRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRoute) *RouteSpecGrpcRoute {
		return &v
	}).(RouteSpecGrpcRoutePtrOutput)
}

// Action to take if a match is determined.
func (o RouteSpecGrpcRouteOutput) Action() RouteSpecGrpcRouteActionOutput {
	return o.ApplyT(func(v RouteSpecGrpcRoute) RouteSpecGrpcRouteAction { return v.Action }).(RouteSpecGrpcRouteActionOutput)
}

// Criteria for determining an gRPC request match.
func (o RouteSpecGrpcRouteOutput) Match() RouteSpecGrpcRouteMatchPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRoute) *RouteSpecGrpcRouteMatch { return v.Match }).(RouteSpecGrpcRouteMatchPtrOutput)
}

// Retry policy.
func (o RouteSpecGrpcRouteOutput) RetryPolicy() RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRoute) *RouteSpecGrpcRouteRetryPolicy { return v.RetryPolicy }).(RouteSpecGrpcRouteRetryPolicyPtrOutput)
}

// Types of timeouts.
func (o RouteSpecGrpcRouteOutput) Timeout() RouteSpecGrpcRouteTimeoutPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRoute) *RouteSpecGrpcRouteTimeout { return v.Timeout }).(RouteSpecGrpcRouteTimeoutPtrOutput)
}

type RouteSpecGrpcRoutePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRoute)(nil)).Elem()
}

func (o RouteSpecGrpcRoutePtrOutput) ToRouteSpecGrpcRoutePtrOutput() RouteSpecGrpcRoutePtrOutput {
	return o
}

func (o RouteSpecGrpcRoutePtrOutput) ToRouteSpecGrpcRoutePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRoutePtrOutput {
	return o
}

func (o RouteSpecGrpcRoutePtrOutput) Elem() RouteSpecGrpcRouteOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRoute) RouteSpecGrpcRoute {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRoute
		return ret
	}).(RouteSpecGrpcRouteOutput)
}

// Action to take if a match is determined.
func (o RouteSpecGrpcRoutePtrOutput) Action() RouteSpecGrpcRouteActionPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRoute) *RouteSpecGrpcRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(RouteSpecGrpcRouteActionPtrOutput)
}

// Criteria for determining an gRPC request match.
func (o RouteSpecGrpcRoutePtrOutput) Match() RouteSpecGrpcRouteMatchPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRoute) *RouteSpecGrpcRouteMatch {
		if v == nil {
			return nil
		}
		return v.Match
	}).(RouteSpecGrpcRouteMatchPtrOutput)
}

// Retry policy.
func (o RouteSpecGrpcRoutePtrOutput) RetryPolicy() RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRoute) *RouteSpecGrpcRouteRetryPolicy {
		if v == nil {
			return nil
		}
		return v.RetryPolicy
	}).(RouteSpecGrpcRouteRetryPolicyPtrOutput)
}

// Types of timeouts.
func (o RouteSpecGrpcRoutePtrOutput) Timeout() RouteSpecGrpcRouteTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRoute) *RouteSpecGrpcRouteTimeout {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(RouteSpecGrpcRouteTimeoutPtrOutput)
}

type RouteSpecGrpcRouteAction struct {
	// Targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets []RouteSpecGrpcRouteActionWeightedTarget `pulumi:"weightedTargets"`
}

// RouteSpecGrpcRouteActionInput is an input type that accepts RouteSpecGrpcRouteActionArgs and RouteSpecGrpcRouteActionOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteActionInput` via:
//
//	RouteSpecGrpcRouteActionArgs{...}
type RouteSpecGrpcRouteActionInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteActionOutput() RouteSpecGrpcRouteActionOutput
	ToRouteSpecGrpcRouteActionOutputWithContext(context.Context) RouteSpecGrpcRouteActionOutput
}

type RouteSpecGrpcRouteActionArgs struct {
	// Targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets RouteSpecGrpcRouteActionWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (RouteSpecGrpcRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteAction)(nil)).Elem()
}

func (i RouteSpecGrpcRouteActionArgs) ToRouteSpecGrpcRouteActionOutput() RouteSpecGrpcRouteActionOutput {
	return i.ToRouteSpecGrpcRouteActionOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteActionArgs) ToRouteSpecGrpcRouteActionOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteActionOutput)
}

func (i RouteSpecGrpcRouteActionArgs) ToRouteSpecGrpcRouteActionPtrOutput() RouteSpecGrpcRouteActionPtrOutput {
	return i.ToRouteSpecGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteActionArgs) ToRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteActionOutput).ToRouteSpecGrpcRouteActionPtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteActionPtrInput is an input type that accepts RouteSpecGrpcRouteActionArgs, RouteSpecGrpcRouteActionPtr and RouteSpecGrpcRouteActionPtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteActionPtrInput` via:
//
//	        RouteSpecGrpcRouteActionArgs{...}
//
//	or:
//
//	        nil
type RouteSpecGrpcRouteActionPtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteActionPtrOutput() RouteSpecGrpcRouteActionPtrOutput
	ToRouteSpecGrpcRouteActionPtrOutputWithContext(context.Context) RouteSpecGrpcRouteActionPtrOutput
}

type routeSpecGrpcRouteActionPtrType RouteSpecGrpcRouteActionArgs

func RouteSpecGrpcRouteActionPtr(v *RouteSpecGrpcRouteActionArgs) RouteSpecGrpcRouteActionPtrInput {
	return (*routeSpecGrpcRouteActionPtrType)(v)
}

func (*routeSpecGrpcRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteAction)(nil)).Elem()
}

func (i *routeSpecGrpcRouteActionPtrType) ToRouteSpecGrpcRouteActionPtrOutput() RouteSpecGrpcRouteActionPtrOutput {
	return i.ToRouteSpecGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteActionPtrType) ToRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteActionPtrOutput)
}

type RouteSpecGrpcRouteActionOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteAction)(nil)).Elem()
}

func (o RouteSpecGrpcRouteActionOutput) ToRouteSpecGrpcRouteActionOutput() RouteSpecGrpcRouteActionOutput {
	return o
}

func (o RouteSpecGrpcRouteActionOutput) ToRouteSpecGrpcRouteActionOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionOutput {
	return o
}

func (o RouteSpecGrpcRouteActionOutput) ToRouteSpecGrpcRouteActionPtrOutput() RouteSpecGrpcRouteActionPtrOutput {
	return o.ToRouteSpecGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteActionOutput) ToRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteAction) *RouteSpecGrpcRouteAction {
		return &v
	}).(RouteSpecGrpcRouteActionPtrOutput)
}

// Targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecGrpcRouteActionOutput) WeightedTargets() RouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteAction) []RouteSpecGrpcRouteActionWeightedTarget { return v.WeightedTargets }).(RouteSpecGrpcRouteActionWeightedTargetArrayOutput)
}

type RouteSpecGrpcRouteActionPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteAction)(nil)).Elem()
}

func (o RouteSpecGrpcRouteActionPtrOutput) ToRouteSpecGrpcRouteActionPtrOutput() RouteSpecGrpcRouteActionPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteActionPtrOutput) ToRouteSpecGrpcRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteActionPtrOutput) Elem() RouteSpecGrpcRouteActionOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteAction) RouteSpecGrpcRouteAction {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteAction
		return ret
	}).(RouteSpecGrpcRouteActionOutput)
}

// Targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecGrpcRouteActionPtrOutput) WeightedTargets() RouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteAction) []RouteSpecGrpcRouteActionWeightedTarget {
		if v == nil {
			return nil
		}
		return v.WeightedTargets
	}).(RouteSpecGrpcRouteActionWeightedTargetArrayOutput)
}

type RouteSpecGrpcRouteActionWeightedTarget struct {
	// The targeted port of the weighted object.
	Port *int `pulumi:"port"`
	// Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode string `pulumi:"virtualNode"`
	// Relative weight of the weighted target. An integer between 0 and 100.
	Weight int `pulumi:"weight"`
}

// RouteSpecGrpcRouteActionWeightedTargetInput is an input type that accepts RouteSpecGrpcRouteActionWeightedTargetArgs and RouteSpecGrpcRouteActionWeightedTargetOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteActionWeightedTargetInput` via:
//
//	RouteSpecGrpcRouteActionWeightedTargetArgs{...}
type RouteSpecGrpcRouteActionWeightedTargetInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteActionWeightedTargetOutput() RouteSpecGrpcRouteActionWeightedTargetOutput
	ToRouteSpecGrpcRouteActionWeightedTargetOutputWithContext(context.Context) RouteSpecGrpcRouteActionWeightedTargetOutput
}

type RouteSpecGrpcRouteActionWeightedTargetArgs struct {
	// The targeted port of the weighted object.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode pulumi.StringInput `pulumi:"virtualNode"`
	// Relative weight of the weighted target. An integer between 0 and 100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (RouteSpecGrpcRouteActionWeightedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecGrpcRouteActionWeightedTargetArgs) ToRouteSpecGrpcRouteActionWeightedTargetOutput() RouteSpecGrpcRouteActionWeightedTargetOutput {
	return i.ToRouteSpecGrpcRouteActionWeightedTargetOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteActionWeightedTargetArgs) ToRouteSpecGrpcRouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionWeightedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteActionWeightedTargetOutput)
}

// RouteSpecGrpcRouteActionWeightedTargetArrayInput is an input type that accepts RouteSpecGrpcRouteActionWeightedTargetArray and RouteSpecGrpcRouteActionWeightedTargetArrayOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteActionWeightedTargetArrayInput` via:
//
//	RouteSpecGrpcRouteActionWeightedTargetArray{ RouteSpecGrpcRouteActionWeightedTargetArgs{...} }
type RouteSpecGrpcRouteActionWeightedTargetArrayInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteActionWeightedTargetArrayOutput() RouteSpecGrpcRouteActionWeightedTargetArrayOutput
	ToRouteSpecGrpcRouteActionWeightedTargetArrayOutputWithContext(context.Context) RouteSpecGrpcRouteActionWeightedTargetArrayOutput
}

type RouteSpecGrpcRouteActionWeightedTargetArray []RouteSpecGrpcRouteActionWeightedTargetInput

func (RouteSpecGrpcRouteActionWeightedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecGrpcRouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecGrpcRouteActionWeightedTargetArray) ToRouteSpecGrpcRouteActionWeightedTargetArrayOutput() RouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return i.ToRouteSpecGrpcRouteActionWeightedTargetArrayOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteActionWeightedTargetArray) ToRouteSpecGrpcRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteActionWeightedTargetArrayOutput)
}

type RouteSpecGrpcRouteActionWeightedTargetOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteActionWeightedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecGrpcRouteActionWeightedTargetOutput) ToRouteSpecGrpcRouteActionWeightedTargetOutput() RouteSpecGrpcRouteActionWeightedTargetOutput {
	return o
}

func (o RouteSpecGrpcRouteActionWeightedTargetOutput) ToRouteSpecGrpcRouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionWeightedTargetOutput {
	return o
}

// The targeted port of the weighted object.
func (o RouteSpecGrpcRouteActionWeightedTargetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteActionWeightedTarget) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
func (o RouteSpecGrpcRouteActionWeightedTargetOutput) VirtualNode() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteActionWeightedTarget) string { return v.VirtualNode }).(pulumi.StringOutput)
}

// Relative weight of the weighted target. An integer between 0 and 100.
func (o RouteSpecGrpcRouteActionWeightedTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteActionWeightedTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type RouteSpecGrpcRouteActionWeightedTargetArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteActionWeightedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecGrpcRouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecGrpcRouteActionWeightedTargetArrayOutput) ToRouteSpecGrpcRouteActionWeightedTargetArrayOutput() RouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecGrpcRouteActionWeightedTargetArrayOutput) ToRouteSpecGrpcRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecGrpcRouteActionWeightedTargetArrayOutput) Index(i pulumi.IntInput) RouteSpecGrpcRouteActionWeightedTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecGrpcRouteActionWeightedTarget {
		return vs[0].([]RouteSpecGrpcRouteActionWeightedTarget)[vs[1].(int)]
	}).(RouteSpecGrpcRouteActionWeightedTargetOutput)
}

type RouteSpecGrpcRouteMatch struct {
	// Data to match from the gRPC request.
	Metadatas []RouteSpecGrpcRouteMatchMetadata `pulumi:"metadatas"`
	// Method name to match from the request. If you specify a name, you must also specify a `serviceName`.
	MethodName *string `pulumi:"methodName"`
	// The port number to match from the request.
	Port *int `pulumi:"port"`
	// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix *string `pulumi:"prefix"`
	// Fully qualified domain name for the service to match from the request.
	ServiceName *string `pulumi:"serviceName"`
}

// RouteSpecGrpcRouteMatchInput is an input type that accepts RouteSpecGrpcRouteMatchArgs and RouteSpecGrpcRouteMatchOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchInput` via:
//
//	RouteSpecGrpcRouteMatchArgs{...}
type RouteSpecGrpcRouteMatchInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchOutput() RouteSpecGrpcRouteMatchOutput
	ToRouteSpecGrpcRouteMatchOutputWithContext(context.Context) RouteSpecGrpcRouteMatchOutput
}

type RouteSpecGrpcRouteMatchArgs struct {
	// Data to match from the gRPC request.
	Metadatas RouteSpecGrpcRouteMatchMetadataArrayInput `pulumi:"metadatas"`
	// Method name to match from the request. If you specify a name, you must also specify a `serviceName`.
	MethodName pulumi.StringPtrInput `pulumi:"methodName"`
	// The port number to match from the request.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Fully qualified domain name for the service to match from the request.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (RouteSpecGrpcRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (i RouteSpecGrpcRouteMatchArgs) ToRouteSpecGrpcRouteMatchOutput() RouteSpecGrpcRouteMatchOutput {
	return i.ToRouteSpecGrpcRouteMatchOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchArgs) ToRouteSpecGrpcRouteMatchOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchOutput)
}

func (i RouteSpecGrpcRouteMatchArgs) ToRouteSpecGrpcRouteMatchPtrOutput() RouteSpecGrpcRouteMatchPtrOutput {
	return i.ToRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchArgs) ToRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchOutput).ToRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteMatchPtrInput is an input type that accepts RouteSpecGrpcRouteMatchArgs, RouteSpecGrpcRouteMatchPtr and RouteSpecGrpcRouteMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchPtrInput` via:
//
//	        RouteSpecGrpcRouteMatchArgs{...}
//
//	or:
//
//	        nil
type RouteSpecGrpcRouteMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchPtrOutput() RouteSpecGrpcRouteMatchPtrOutput
	ToRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Context) RouteSpecGrpcRouteMatchPtrOutput
}

type routeSpecGrpcRouteMatchPtrType RouteSpecGrpcRouteMatchArgs

func RouteSpecGrpcRouteMatchPtr(v *RouteSpecGrpcRouteMatchArgs) RouteSpecGrpcRouteMatchPtrInput {
	return (*routeSpecGrpcRouteMatchPtrType)(v)
}

func (*routeSpecGrpcRouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (i *routeSpecGrpcRouteMatchPtrType) ToRouteSpecGrpcRouteMatchPtrOutput() RouteSpecGrpcRouteMatchPtrOutput {
	return i.ToRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteMatchPtrType) ToRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchPtrOutput)
}

type RouteSpecGrpcRouteMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchOutput) ToRouteSpecGrpcRouteMatchOutput() RouteSpecGrpcRouteMatchOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchOutput) ToRouteSpecGrpcRouteMatchOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchOutput) ToRouteSpecGrpcRouteMatchPtrOutput() RouteSpecGrpcRouteMatchPtrOutput {
	return o.ToRouteSpecGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteMatchOutput) ToRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteMatch) *RouteSpecGrpcRouteMatch {
		return &v
	}).(RouteSpecGrpcRouteMatchPtrOutput)
}

// Data to match from the gRPC request.
func (o RouteSpecGrpcRouteMatchOutput) Metadatas() RouteSpecGrpcRouteMatchMetadataArrayOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatch) []RouteSpecGrpcRouteMatchMetadata { return v.Metadatas }).(RouteSpecGrpcRouteMatchMetadataArrayOutput)
}

// Method name to match from the request. If you specify a name, you must also specify a `serviceName`.
func (o RouteSpecGrpcRouteMatchOutput) MethodName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatch) *string { return v.MethodName }).(pulumi.StringPtrOutput)
}

// The port number to match from the request.
func (o RouteSpecGrpcRouteMatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecGrpcRouteMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Fully qualified domain name for the service to match from the request.
func (o RouteSpecGrpcRouteMatchOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatch) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type RouteSpecGrpcRouteMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchPtrOutput) ToRouteSpecGrpcRouteMatchPtrOutput() RouteSpecGrpcRouteMatchPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchPtrOutput) ToRouteSpecGrpcRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchPtrOutput) Elem() RouteSpecGrpcRouteMatchOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatch) RouteSpecGrpcRouteMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteMatch
		return ret
	}).(RouteSpecGrpcRouteMatchOutput)
}

// Data to match from the gRPC request.
func (o RouteSpecGrpcRouteMatchPtrOutput) Metadatas() RouteSpecGrpcRouteMatchMetadataArrayOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatch) []RouteSpecGrpcRouteMatchMetadata {
		if v == nil {
			return nil
		}
		return v.Metadatas
	}).(RouteSpecGrpcRouteMatchMetadataArrayOutput)
}

// Method name to match from the request. If you specify a name, you must also specify a `serviceName`.
func (o RouteSpecGrpcRouteMatchPtrOutput) MethodName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.MethodName
	}).(pulumi.StringPtrOutput)
}

// The port number to match from the request.
func (o RouteSpecGrpcRouteMatchPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatch) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecGrpcRouteMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Fully qualified domain name for the service to match from the request.
func (o RouteSpecGrpcRouteMatchPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type RouteSpecGrpcRouteMatchMetadata struct {
	// If `true`, the match is on the opposite of the `match` criteria. Default is `false`.
	Invert *bool `pulumi:"invert"`
	// Data to match from the request.
	Match *RouteSpecGrpcRouteMatchMetadataMatch `pulumi:"match"`
	// Name of the route. Must be between 1 and 50 characters in length.
	Name string `pulumi:"name"`
}

// RouteSpecGrpcRouteMatchMetadataInput is an input type that accepts RouteSpecGrpcRouteMatchMetadataArgs and RouteSpecGrpcRouteMatchMetadataOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchMetadataInput` via:
//
//	RouteSpecGrpcRouteMatchMetadataArgs{...}
type RouteSpecGrpcRouteMatchMetadataInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchMetadataOutput() RouteSpecGrpcRouteMatchMetadataOutput
	ToRouteSpecGrpcRouteMatchMetadataOutputWithContext(context.Context) RouteSpecGrpcRouteMatchMetadataOutput
}

type RouteSpecGrpcRouteMatchMetadataArgs struct {
	// If `true`, the match is on the opposite of the `match` criteria. Default is `false`.
	Invert pulumi.BoolPtrInput `pulumi:"invert"`
	// Data to match from the request.
	Match RouteSpecGrpcRouteMatchMetadataMatchPtrInput `pulumi:"match"`
	// Name of the route. Must be between 1 and 50 characters in length.
	Name pulumi.StringInput `pulumi:"name"`
}

func (RouteSpecGrpcRouteMatchMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadata)(nil)).Elem()
}

func (i RouteSpecGrpcRouteMatchMetadataArgs) ToRouteSpecGrpcRouteMatchMetadataOutput() RouteSpecGrpcRouteMatchMetadataOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchMetadataArgs) ToRouteSpecGrpcRouteMatchMetadataOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataOutput)
}

// RouteSpecGrpcRouteMatchMetadataArrayInput is an input type that accepts RouteSpecGrpcRouteMatchMetadataArray and RouteSpecGrpcRouteMatchMetadataArrayOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchMetadataArrayInput` via:
//
//	RouteSpecGrpcRouteMatchMetadataArray{ RouteSpecGrpcRouteMatchMetadataArgs{...} }
type RouteSpecGrpcRouteMatchMetadataArrayInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchMetadataArrayOutput() RouteSpecGrpcRouteMatchMetadataArrayOutput
	ToRouteSpecGrpcRouteMatchMetadataArrayOutputWithContext(context.Context) RouteSpecGrpcRouteMatchMetadataArrayOutput
}

type RouteSpecGrpcRouteMatchMetadataArray []RouteSpecGrpcRouteMatchMetadataInput

func (RouteSpecGrpcRouteMatchMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecGrpcRouteMatchMetadata)(nil)).Elem()
}

func (i RouteSpecGrpcRouteMatchMetadataArray) ToRouteSpecGrpcRouteMatchMetadataArrayOutput() RouteSpecGrpcRouteMatchMetadataArrayOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataArrayOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchMetadataArray) ToRouteSpecGrpcRouteMatchMetadataArrayOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataArrayOutput)
}

type RouteSpecGrpcRouteMatchMetadataOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadata)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchMetadataOutput) ToRouteSpecGrpcRouteMatchMetadataOutput() RouteSpecGrpcRouteMatchMetadataOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataOutput) ToRouteSpecGrpcRouteMatchMetadataOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataOutput {
	return o
}

// If `true`, the match is on the opposite of the `match` criteria. Default is `false`.
func (o RouteSpecGrpcRouteMatchMetadataOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadata) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

// Data to match from the request.
func (o RouteSpecGrpcRouteMatchMetadataOutput) Match() RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadata) *RouteSpecGrpcRouteMatchMetadataMatch { return v.Match }).(RouteSpecGrpcRouteMatchMetadataMatchPtrOutput)
}

// Name of the route. Must be between 1 and 50 characters in length.
func (o RouteSpecGrpcRouteMatchMetadataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadata) string { return v.Name }).(pulumi.StringOutput)
}

type RouteSpecGrpcRouteMatchMetadataArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecGrpcRouteMatchMetadata)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchMetadataArrayOutput) ToRouteSpecGrpcRouteMatchMetadataArrayOutput() RouteSpecGrpcRouteMatchMetadataArrayOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataArrayOutput) ToRouteSpecGrpcRouteMatchMetadataArrayOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataArrayOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataArrayOutput) Index(i pulumi.IntInput) RouteSpecGrpcRouteMatchMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecGrpcRouteMatchMetadata {
		return vs[0].([]RouteSpecGrpcRouteMatchMetadata)[vs[1].(int)]
	}).(RouteSpecGrpcRouteMatchMetadataOutput)
}

type RouteSpecGrpcRouteMatchMetadataMatch struct {
	// The exact path to match on.
	Exact *string `pulumi:"exact"`
	// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix *string `pulumi:"prefix"`
	// Object that specifies the range of numbers that the value sent by the client must be included in.
	Range *RouteSpecGrpcRouteMatchMetadataMatchRange `pulumi:"range"`
	// The regex used to match the path.
	Regex *string `pulumi:"regex"`
	// Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
	Suffix *string `pulumi:"suffix"`
}

// RouteSpecGrpcRouteMatchMetadataMatchInput is an input type that accepts RouteSpecGrpcRouteMatchMetadataMatchArgs and RouteSpecGrpcRouteMatchMetadataMatchOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchMetadataMatchInput` via:
//
//	RouteSpecGrpcRouteMatchMetadataMatchArgs{...}
type RouteSpecGrpcRouteMatchMetadataMatchInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchMetadataMatchOutput() RouteSpecGrpcRouteMatchMetadataMatchOutput
	ToRouteSpecGrpcRouteMatchMetadataMatchOutputWithContext(context.Context) RouteSpecGrpcRouteMatchMetadataMatchOutput
}

type RouteSpecGrpcRouteMatchMetadataMatchArgs struct {
	// The exact path to match on.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Object that specifies the range of numbers that the value sent by the client must be included in.
	Range RouteSpecGrpcRouteMatchMetadataMatchRangePtrInput `pulumi:"range"`
	// The regex used to match the path.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (RouteSpecGrpcRouteMatchMetadataMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatch)(nil)).Elem()
}

func (i RouteSpecGrpcRouteMatchMetadataMatchArgs) ToRouteSpecGrpcRouteMatchMetadataMatchOutput() RouteSpecGrpcRouteMatchMetadataMatchOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataMatchOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchMetadataMatchArgs) ToRouteSpecGrpcRouteMatchMetadataMatchOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataMatchOutput)
}

func (i RouteSpecGrpcRouteMatchMetadataMatchArgs) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutput() RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchMetadataMatchArgs) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataMatchOutput).ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteMatchMetadataMatchPtrInput is an input type that accepts RouteSpecGrpcRouteMatchMetadataMatchArgs, RouteSpecGrpcRouteMatchMetadataMatchPtr and RouteSpecGrpcRouteMatchMetadataMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchMetadataMatchPtrInput` via:
//
//	        RouteSpecGrpcRouteMatchMetadataMatchArgs{...}
//
//	or:
//
//	        nil
type RouteSpecGrpcRouteMatchMetadataMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutput() RouteSpecGrpcRouteMatchMetadataMatchPtrOutput
	ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(context.Context) RouteSpecGrpcRouteMatchMetadataMatchPtrOutput
}

type routeSpecGrpcRouteMatchMetadataMatchPtrType RouteSpecGrpcRouteMatchMetadataMatchArgs

func RouteSpecGrpcRouteMatchMetadataMatchPtr(v *RouteSpecGrpcRouteMatchMetadataMatchArgs) RouteSpecGrpcRouteMatchMetadataMatchPtrInput {
	return (*routeSpecGrpcRouteMatchMetadataMatchPtrType)(v)
}

func (*routeSpecGrpcRouteMatchMetadataMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteMatchMetadataMatch)(nil)).Elem()
}

func (i *routeSpecGrpcRouteMatchMetadataMatchPtrType) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutput() RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteMatchMetadataMatchPtrType) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataMatchPtrOutput)
}

type RouteSpecGrpcRouteMatchMetadataMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchMetadataMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatch)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) ToRouteSpecGrpcRouteMatchMetadataMatchOutput() RouteSpecGrpcRouteMatchMetadataMatchOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) ToRouteSpecGrpcRouteMatchMetadataMatchOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutput() RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return o.ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteMatchMetadataMatch) *RouteSpecGrpcRouteMatchMetadataMatch {
		return &v
	}).(RouteSpecGrpcRouteMatchMetadataMatchPtrOutput)
}

// The exact path to match on.
func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadataMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadataMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Object that specifies the range of numbers that the value sent by the client must be included in.
func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) Range() RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadataMatch) *RouteSpecGrpcRouteMatchMetadataMatchRange {
		return v.Range
	}).(RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput)
}

// The regex used to match the path.
func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadataMatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecGrpcRouteMatchMetadataMatchOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadataMatch) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type RouteSpecGrpcRouteMatchMetadataMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteMatchMetadataMatch)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutput() RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) ToRouteSpecGrpcRouteMatchMetadataMatchPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) Elem() RouteSpecGrpcRouteMatchMetadataMatchOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatch) RouteSpecGrpcRouteMatchMetadataMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteMatchMetadataMatch
		return ret
	}).(RouteSpecGrpcRouteMatchMetadataMatchOutput)
}

// The exact path to match on.
func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Object that specifies the range of numbers that the value sent by the client must be included in.
func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) Range() RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatch) *RouteSpecGrpcRouteMatchMetadataMatchRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput)
}

// The regex used to match the path.
func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecGrpcRouteMatchMetadataMatchPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatch) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type RouteSpecGrpcRouteMatchMetadataMatchRange struct {
	// End of the range.
	End int `pulumi:"end"`
	// Start of the range.
	Start int `pulumi:"start"`
}

// RouteSpecGrpcRouteMatchMetadataMatchRangeInput is an input type that accepts RouteSpecGrpcRouteMatchMetadataMatchRangeArgs and RouteSpecGrpcRouteMatchMetadataMatchRangeOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchMetadataMatchRangeInput` via:
//
//	RouteSpecGrpcRouteMatchMetadataMatchRangeArgs{...}
type RouteSpecGrpcRouteMatchMetadataMatchRangeInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchMetadataMatchRangeOutput() RouteSpecGrpcRouteMatchMetadataMatchRangeOutput
	ToRouteSpecGrpcRouteMatchMetadataMatchRangeOutputWithContext(context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangeOutput
}

type RouteSpecGrpcRouteMatchMetadataMatchRangeArgs struct {
	// End of the range.
	End pulumi.IntInput `pulumi:"end"`
	// Start of the range.
	Start pulumi.IntInput `pulumi:"start"`
}

func (RouteSpecGrpcRouteMatchMetadataMatchRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatchRange)(nil)).Elem()
}

func (i RouteSpecGrpcRouteMatchMetadataMatchRangeArgs) ToRouteSpecGrpcRouteMatchMetadataMatchRangeOutput() RouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataMatchRangeOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchMetadataMatchRangeArgs) ToRouteSpecGrpcRouteMatchMetadataMatchRangeOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataMatchRangeOutput)
}

func (i RouteSpecGrpcRouteMatchMetadataMatchRangeArgs) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput() RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteMatchMetadataMatchRangeArgs) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataMatchRangeOutput).ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteMatchMetadataMatchRangePtrInput is an input type that accepts RouteSpecGrpcRouteMatchMetadataMatchRangeArgs, RouteSpecGrpcRouteMatchMetadataMatchRangePtr and RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteMatchMetadataMatchRangePtrInput` via:
//
//	        RouteSpecGrpcRouteMatchMetadataMatchRangeArgs{...}
//
//	or:
//
//	        nil
type RouteSpecGrpcRouteMatchMetadataMatchRangePtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput() RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput
	ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput
}

type routeSpecGrpcRouteMatchMetadataMatchRangePtrType RouteSpecGrpcRouteMatchMetadataMatchRangeArgs

func RouteSpecGrpcRouteMatchMetadataMatchRangePtr(v *RouteSpecGrpcRouteMatchMetadataMatchRangeArgs) RouteSpecGrpcRouteMatchMetadataMatchRangePtrInput {
	return (*routeSpecGrpcRouteMatchMetadataMatchRangePtrType)(v)
}

func (*routeSpecGrpcRouteMatchMetadataMatchRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteMatchMetadataMatchRange)(nil)).Elem()
}

func (i *routeSpecGrpcRouteMatchMetadataMatchRangePtrType) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput() RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return i.ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteMatchMetadataMatchRangePtrType) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput)
}

type RouteSpecGrpcRouteMatchMetadataMatchRangeOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchMetadataMatchRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatchRange)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchMetadataMatchRangeOutput) ToRouteSpecGrpcRouteMatchMetadataMatchRangeOutput() RouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchRangeOutput) ToRouteSpecGrpcRouteMatchMetadataMatchRangeOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchRangeOutput) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput() RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return o.ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteMatchMetadataMatchRangeOutput) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteMatchMetadataMatchRange) *RouteSpecGrpcRouteMatchMetadataMatchRange {
		return &v
	}).(RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput)
}

// End of the range.
func (o RouteSpecGrpcRouteMatchMetadataMatchRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadataMatchRange) int { return v.End }).(pulumi.IntOutput)
}

// Start of the range.
func (o RouteSpecGrpcRouteMatchMetadataMatchRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteMatchMetadataMatchRange) int { return v.Start }).(pulumi.IntOutput)
}

type RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteMatchMetadataMatchRange)(nil)).Elem()
}

func (o RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput() RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput) ToRouteSpecGrpcRouteMatchMetadataMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput {
	return o
}

func (o RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput) Elem() RouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatchRange) RouteSpecGrpcRouteMatchMetadataMatchRange {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteMatchMetadataMatchRange
		return ret
	}).(RouteSpecGrpcRouteMatchMetadataMatchRangeOutput)
}

// End of the range.
func (o RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.IntPtrOutput)
}

// Start of the range.
func (o RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteMatchMetadataMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.IntPtrOutput)
}

type RouteSpecGrpcRouteRetryPolicy struct {
	// List of gRPC retry events.
	// Valid values: `cancelled`, `deadline-exceeded`, `internal`, `resource-exhausted`, `unavailable`.
	GrpcRetryEvents []string `pulumi:"grpcRetryEvents"`
	// List of HTTP retry events.
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	HttpRetryEvents []string `pulumi:"httpRetryEvents"`
	// Maximum number of retries.
	MaxRetries int `pulumi:"maxRetries"`
	// Per-retry timeout.
	PerRetryTimeout RouteSpecGrpcRouteRetryPolicyPerRetryTimeout `pulumi:"perRetryTimeout"`
	// List of TCP retry events. The only valid value is `connection-error`.
	//
	// You must specify at least one value for `httpRetryEvents`, or at least one value for `tcpRetryEvents`.
	TcpRetryEvents []string `pulumi:"tcpRetryEvents"`
}

// RouteSpecGrpcRouteRetryPolicyInput is an input type that accepts RouteSpecGrpcRouteRetryPolicyArgs and RouteSpecGrpcRouteRetryPolicyOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteRetryPolicyInput` via:
//
//	RouteSpecGrpcRouteRetryPolicyArgs{...}
type RouteSpecGrpcRouteRetryPolicyInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteRetryPolicyOutput() RouteSpecGrpcRouteRetryPolicyOutput
	ToRouteSpecGrpcRouteRetryPolicyOutputWithContext(context.Context) RouteSpecGrpcRouteRetryPolicyOutput
}

type RouteSpecGrpcRouteRetryPolicyArgs struct {
	// List of gRPC retry events.
	// Valid values: `cancelled`, `deadline-exceeded`, `internal`, `resource-exhausted`, `unavailable`.
	GrpcRetryEvents pulumi.StringArrayInput `pulumi:"grpcRetryEvents"`
	// List of HTTP retry events.
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	HttpRetryEvents pulumi.StringArrayInput `pulumi:"httpRetryEvents"`
	// Maximum number of retries.
	MaxRetries pulumi.IntInput `pulumi:"maxRetries"`
	// Per-retry timeout.
	PerRetryTimeout RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput `pulumi:"perRetryTimeout"`
	// List of TCP retry events. The only valid value is `connection-error`.
	//
	// You must specify at least one value for `httpRetryEvents`, or at least one value for `tcpRetryEvents`.
	TcpRetryEvents pulumi.StringArrayInput `pulumi:"tcpRetryEvents"`
}

func (RouteSpecGrpcRouteRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicy)(nil)).Elem()
}

func (i RouteSpecGrpcRouteRetryPolicyArgs) ToRouteSpecGrpcRouteRetryPolicyOutput() RouteSpecGrpcRouteRetryPolicyOutput {
	return i.ToRouteSpecGrpcRouteRetryPolicyOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteRetryPolicyArgs) ToRouteSpecGrpcRouteRetryPolicyOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteRetryPolicyOutput)
}

func (i RouteSpecGrpcRouteRetryPolicyArgs) ToRouteSpecGrpcRouteRetryPolicyPtrOutput() RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return i.ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteRetryPolicyArgs) ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteRetryPolicyOutput).ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteRetryPolicyPtrInput is an input type that accepts RouteSpecGrpcRouteRetryPolicyArgs, RouteSpecGrpcRouteRetryPolicyPtr and RouteSpecGrpcRouteRetryPolicyPtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteRetryPolicyPtrInput` via:
//
//	        RouteSpecGrpcRouteRetryPolicyArgs{...}
//
//	or:
//
//	        nil
type RouteSpecGrpcRouteRetryPolicyPtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteRetryPolicyPtrOutput() RouteSpecGrpcRouteRetryPolicyPtrOutput
	ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(context.Context) RouteSpecGrpcRouteRetryPolicyPtrOutput
}

type routeSpecGrpcRouteRetryPolicyPtrType RouteSpecGrpcRouteRetryPolicyArgs

func RouteSpecGrpcRouteRetryPolicyPtr(v *RouteSpecGrpcRouteRetryPolicyArgs) RouteSpecGrpcRouteRetryPolicyPtrInput {
	return (*routeSpecGrpcRouteRetryPolicyPtrType)(v)
}

func (*routeSpecGrpcRouteRetryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteRetryPolicy)(nil)).Elem()
}

func (i *routeSpecGrpcRouteRetryPolicyPtrType) ToRouteSpecGrpcRouteRetryPolicyPtrOutput() RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return i.ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteRetryPolicyPtrType) ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteRetryPolicyPtrOutput)
}

type RouteSpecGrpcRouteRetryPolicyOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicy)(nil)).Elem()
}

func (o RouteSpecGrpcRouteRetryPolicyOutput) ToRouteSpecGrpcRouteRetryPolicyOutput() RouteSpecGrpcRouteRetryPolicyOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyOutput) ToRouteSpecGrpcRouteRetryPolicyOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyOutput) ToRouteSpecGrpcRouteRetryPolicyPtrOutput() RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return o.ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteRetryPolicyOutput) ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteRetryPolicy) *RouteSpecGrpcRouteRetryPolicy {
		return &v
	}).(RouteSpecGrpcRouteRetryPolicyPtrOutput)
}

// List of gRPC retry events.
// Valid values: `cancelled`, `deadline-exceeded`, `internal`, `resource-exhausted`, `unavailable`.
func (o RouteSpecGrpcRouteRetryPolicyOutput) GrpcRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteRetryPolicy) []string { return v.GrpcRetryEvents }).(pulumi.StringArrayOutput)
}

// List of HTTP retry events.
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
func (o RouteSpecGrpcRouteRetryPolicyOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteRetryPolicy) []string { return v.HttpRetryEvents }).(pulumi.StringArrayOutput)
}

// Maximum number of retries.
func (o RouteSpecGrpcRouteRetryPolicyOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteRetryPolicy) int { return v.MaxRetries }).(pulumi.IntOutput)
}

// Per-retry timeout.
func (o RouteSpecGrpcRouteRetryPolicyOutput) PerRetryTimeout() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteRetryPolicy) RouteSpecGrpcRouteRetryPolicyPerRetryTimeout {
		return v.PerRetryTimeout
	}).(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput)
}

// List of TCP retry events. The only valid value is `connection-error`.
//
// You must specify at least one value for `httpRetryEvents`, or at least one value for `tcpRetryEvents`.
func (o RouteSpecGrpcRouteRetryPolicyOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteRetryPolicy) []string { return v.TcpRetryEvents }).(pulumi.StringArrayOutput)
}

type RouteSpecGrpcRouteRetryPolicyPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteRetryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteRetryPolicy)(nil)).Elem()
}

func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) ToRouteSpecGrpcRouteRetryPolicyPtrOutput() RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) ToRouteSpecGrpcRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) Elem() RouteSpecGrpcRouteRetryPolicyOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicy) RouteSpecGrpcRouteRetryPolicy {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteRetryPolicy
		return ret
	}).(RouteSpecGrpcRouteRetryPolicyOutput)
}

// List of gRPC retry events.
// Valid values: `cancelled`, `deadline-exceeded`, `internal`, `resource-exhausted`, `unavailable`.
func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) GrpcRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.GrpcRetryEvents
	}).(pulumi.StringArrayOutput)
}

// List of HTTP retry events.
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.HttpRetryEvents
	}).(pulumi.StringArrayOutput)
}

// Maximum number of retries.
func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// Per-retry timeout.
func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) PerRetryTimeout() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicy) *RouteSpecGrpcRouteRetryPolicyPerRetryTimeout {
		if v == nil {
			return nil
		}
		return &v.PerRetryTimeout
	}).(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput)
}

// List of TCP retry events. The only valid value is `connection-error`.
//
// You must specify at least one value for `httpRetryEvents`, or at least one value for `tcpRetryEvents`.
func (o RouteSpecGrpcRouteRetryPolicyPtrOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.TcpRetryEvents
	}).(pulumi.StringArrayOutput)
}

type RouteSpecGrpcRouteRetryPolicyPerRetryTimeout struct {
	// Retry unit. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Retry value.
	Value int `pulumi:"value"`
}

// RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput is an input type that accepts RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs and RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput` via:
//
//	RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs{...}
type RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput
	ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput
}

type RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs struct {
	// Retry unit. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Retry value.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return i.ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput)
}

func (i RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return i.ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput).ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrInput is an input type that accepts RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs, RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtr and RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrInput` via:
//
//	        RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs{...}
//
//	or:
//
//	        nil
type RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput
	ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput
}

type routeSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrType RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs

func RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtr(v *RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrInput {
	return (*routeSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrType)(v)
}

func (*routeSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i *routeSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrType) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return i.ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrType) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput)
}

type RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteRetryPolicyPerRetryTimeout) *RouteSpecGrpcRouteRetryPolicyPerRetryTimeout {
		return &v
	}).(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput)
}

// Retry unit. Valid values: `ms`, `s`.
func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteRetryPolicyPerRetryTimeout) string { return v.Unit }).(pulumi.StringOutput)
}

// Retry value.
func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteRetryPolicyPerRetryTimeout) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput) ToRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput) Elem() RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicyPerRetryTimeout) RouteSpecGrpcRouteRetryPolicyPerRetryTimeout {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteRetryPolicyPerRetryTimeout
		return ret
	}).(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput)
}

// Retry unit. Valid values: `ms`, `s`.
func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicyPerRetryTimeout) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Retry value.
func (o RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteRetryPolicyPerRetryTimeout) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecGrpcRouteTimeout struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *RouteSpecGrpcRouteTimeoutIdle `pulumi:"idle"`
	// Per request timeout.
	PerRequest *RouteSpecGrpcRouteTimeoutPerRequest `pulumi:"perRequest"`
}

// RouteSpecGrpcRouteTimeoutInput is an input type that accepts RouteSpecGrpcRouteTimeoutArgs and RouteSpecGrpcRouteTimeoutOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteTimeoutInput` via:
//
//	RouteSpecGrpcRouteTimeoutArgs{...}
type RouteSpecGrpcRouteTimeoutInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteTimeoutOutput() RouteSpecGrpcRouteTimeoutOutput
	ToRouteSpecGrpcRouteTimeoutOutputWithContext(context.Context) RouteSpecGrpcRouteTimeoutOutput
}

type RouteSpecGrpcRouteTimeoutArgs struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle RouteSpecGrpcRouteTimeoutIdlePtrInput `pulumi:"idle"`
	// Per request timeout.
	PerRequest RouteSpecGrpcRouteTimeoutPerRequestPtrInput `pulumi:"perRequest"`
}

func (RouteSpecGrpcRouteTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteTimeout)(nil)).Elem()
}

func (i RouteSpecGrpcRouteTimeoutArgs) ToRouteSpecGrpcRouteTimeoutOutput() RouteSpecGrpcRouteTimeoutOutput {
	return i.ToRouteSpecGrpcRouteTimeoutOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteTimeoutArgs) ToRouteSpecGrpcRouteTimeoutOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutOutput)
}

func (i RouteSpecGrpcRouteTimeoutArgs) ToRouteSpecGrpcRouteTimeoutPtrOutput() RouteSpecGrpcRouteTimeoutPtrOutput {
	return i.ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteTimeoutArgs) ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutOutput).ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteTimeoutPtrInput is an input type that accepts RouteSpecGrpcRouteTimeoutArgs, RouteSpecGrpcRouteTimeoutPtr and RouteSpecGrpcRouteTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteTimeoutPtrInput` via:
//
//	        RouteSpecGrpcRouteTimeoutArgs{...}
//
//	or:
//
//	        nil
type RouteSpecGrpcRouteTimeoutPtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteTimeoutPtrOutput() RouteSpecGrpcRouteTimeoutPtrOutput
	ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(context.Context) RouteSpecGrpcRouteTimeoutPtrOutput
}

type routeSpecGrpcRouteTimeoutPtrType RouteSpecGrpcRouteTimeoutArgs

func RouteSpecGrpcRouteTimeoutPtr(v *RouteSpecGrpcRouteTimeoutArgs) RouteSpecGrpcRouteTimeoutPtrInput {
	return (*routeSpecGrpcRouteTimeoutPtrType)(v)
}

func (*routeSpecGrpcRouteTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteTimeout)(nil)).Elem()
}

func (i *routeSpecGrpcRouteTimeoutPtrType) ToRouteSpecGrpcRouteTimeoutPtrOutput() RouteSpecGrpcRouteTimeoutPtrOutput {
	return i.ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteTimeoutPtrType) ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutPtrOutput)
}

type RouteSpecGrpcRouteTimeoutOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteTimeout)(nil)).Elem()
}

func (o RouteSpecGrpcRouteTimeoutOutput) ToRouteSpecGrpcRouteTimeoutOutput() RouteSpecGrpcRouteTimeoutOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutOutput) ToRouteSpecGrpcRouteTimeoutOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutOutput) ToRouteSpecGrpcRouteTimeoutPtrOutput() RouteSpecGrpcRouteTimeoutPtrOutput {
	return o.ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteTimeoutOutput) ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteTimeout) *RouteSpecGrpcRouteTimeout {
		return &v
	}).(RouteSpecGrpcRouteTimeoutPtrOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecGrpcRouteTimeoutOutput) Idle() RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteTimeout) *RouteSpecGrpcRouteTimeoutIdle { return v.Idle }).(RouteSpecGrpcRouteTimeoutIdlePtrOutput)
}

// Per request timeout.
func (o RouteSpecGrpcRouteTimeoutOutput) PerRequest() RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteTimeout) *RouteSpecGrpcRouteTimeoutPerRequest { return v.PerRequest }).(RouteSpecGrpcRouteTimeoutPerRequestPtrOutput)
}

type RouteSpecGrpcRouteTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteTimeout)(nil)).Elem()
}

func (o RouteSpecGrpcRouteTimeoutPtrOutput) ToRouteSpecGrpcRouteTimeoutPtrOutput() RouteSpecGrpcRouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutPtrOutput) ToRouteSpecGrpcRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutPtrOutput) Elem() RouteSpecGrpcRouteTimeoutOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeout) RouteSpecGrpcRouteTimeout {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteTimeout
		return ret
	}).(RouteSpecGrpcRouteTimeoutOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecGrpcRouteTimeoutPtrOutput) Idle() RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeout) *RouteSpecGrpcRouteTimeoutIdle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(RouteSpecGrpcRouteTimeoutIdlePtrOutput)
}

// Per request timeout.
func (o RouteSpecGrpcRouteTimeoutPtrOutput) PerRequest() RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeout) *RouteSpecGrpcRouteTimeoutPerRequest {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(RouteSpecGrpcRouteTimeoutPerRequestPtrOutput)
}

type RouteSpecGrpcRouteTimeoutIdle struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// RouteSpecGrpcRouteTimeoutIdleInput is an input type that accepts RouteSpecGrpcRouteTimeoutIdleArgs and RouteSpecGrpcRouteTimeoutIdleOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteTimeoutIdleInput` via:
//
//	RouteSpecGrpcRouteTimeoutIdleArgs{...}
type RouteSpecGrpcRouteTimeoutIdleInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteTimeoutIdleOutput() RouteSpecGrpcRouteTimeoutIdleOutput
	ToRouteSpecGrpcRouteTimeoutIdleOutputWithContext(context.Context) RouteSpecGrpcRouteTimeoutIdleOutput
}

type RouteSpecGrpcRouteTimeoutIdleArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecGrpcRouteTimeoutIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteTimeoutIdle)(nil)).Elem()
}

func (i RouteSpecGrpcRouteTimeoutIdleArgs) ToRouteSpecGrpcRouteTimeoutIdleOutput() RouteSpecGrpcRouteTimeoutIdleOutput {
	return i.ToRouteSpecGrpcRouteTimeoutIdleOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteTimeoutIdleArgs) ToRouteSpecGrpcRouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutIdleOutput)
}

func (i RouteSpecGrpcRouteTimeoutIdleArgs) ToRouteSpecGrpcRouteTimeoutIdlePtrOutput() RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteTimeoutIdleArgs) ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutIdleOutput).ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteTimeoutIdlePtrInput is an input type that accepts RouteSpecGrpcRouteTimeoutIdleArgs, RouteSpecGrpcRouteTimeoutIdlePtr and RouteSpecGrpcRouteTimeoutIdlePtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteTimeoutIdlePtrInput` via:
//
//	        RouteSpecGrpcRouteTimeoutIdleArgs{...}
//
//	or:
//
//	        nil
type RouteSpecGrpcRouteTimeoutIdlePtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteTimeoutIdlePtrOutput() RouteSpecGrpcRouteTimeoutIdlePtrOutput
	ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(context.Context) RouteSpecGrpcRouteTimeoutIdlePtrOutput
}

type routeSpecGrpcRouteTimeoutIdlePtrType RouteSpecGrpcRouteTimeoutIdleArgs

func RouteSpecGrpcRouteTimeoutIdlePtr(v *RouteSpecGrpcRouteTimeoutIdleArgs) RouteSpecGrpcRouteTimeoutIdlePtrInput {
	return (*routeSpecGrpcRouteTimeoutIdlePtrType)(v)
}

func (*routeSpecGrpcRouteTimeoutIdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteTimeoutIdle)(nil)).Elem()
}

func (i *routeSpecGrpcRouteTimeoutIdlePtrType) ToRouteSpecGrpcRouteTimeoutIdlePtrOutput() RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteTimeoutIdlePtrType) ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutIdlePtrOutput)
}

type RouteSpecGrpcRouteTimeoutIdleOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteTimeoutIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecGrpcRouteTimeoutIdleOutput) ToRouteSpecGrpcRouteTimeoutIdleOutput() RouteSpecGrpcRouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutIdleOutput) ToRouteSpecGrpcRouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutIdleOutput) ToRouteSpecGrpcRouteTimeoutIdlePtrOutput() RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return o.ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteTimeoutIdleOutput) ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteTimeoutIdle) *RouteSpecGrpcRouteTimeoutIdle {
		return &v
	}).(RouteSpecGrpcRouteTimeoutIdlePtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o RouteSpecGrpcRouteTimeoutIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteTimeoutIdle) string { return v.Unit }).(pulumi.StringOutput)
}

// Number of time units. Minimum value of `0`.
func (o RouteSpecGrpcRouteTimeoutIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteTimeoutIdle) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecGrpcRouteTimeoutIdlePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteTimeoutIdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecGrpcRouteTimeoutIdlePtrOutput) ToRouteSpecGrpcRouteTimeoutIdlePtrOutput() RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutIdlePtrOutput) ToRouteSpecGrpcRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutIdlePtrOutput) Elem() RouteSpecGrpcRouteTimeoutIdleOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeoutIdle) RouteSpecGrpcRouteTimeoutIdle {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteTimeoutIdle
		return ret
	}).(RouteSpecGrpcRouteTimeoutIdleOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o RouteSpecGrpcRouteTimeoutIdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeoutIdle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Number of time units. Minimum value of `0`.
func (o RouteSpecGrpcRouteTimeoutIdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeoutIdle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecGrpcRouteTimeoutPerRequest struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// RouteSpecGrpcRouteTimeoutPerRequestInput is an input type that accepts RouteSpecGrpcRouteTimeoutPerRequestArgs and RouteSpecGrpcRouteTimeoutPerRequestOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteTimeoutPerRequestInput` via:
//
//	RouteSpecGrpcRouteTimeoutPerRequestArgs{...}
type RouteSpecGrpcRouteTimeoutPerRequestInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteTimeoutPerRequestOutput() RouteSpecGrpcRouteTimeoutPerRequestOutput
	ToRouteSpecGrpcRouteTimeoutPerRequestOutputWithContext(context.Context) RouteSpecGrpcRouteTimeoutPerRequestOutput
}

type RouteSpecGrpcRouteTimeoutPerRequestArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecGrpcRouteTimeoutPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteTimeoutPerRequest)(nil)).Elem()
}

func (i RouteSpecGrpcRouteTimeoutPerRequestArgs) ToRouteSpecGrpcRouteTimeoutPerRequestOutput() RouteSpecGrpcRouteTimeoutPerRequestOutput {
	return i.ToRouteSpecGrpcRouteTimeoutPerRequestOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteTimeoutPerRequestArgs) ToRouteSpecGrpcRouteTimeoutPerRequestOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutPerRequestOutput)
}

func (i RouteSpecGrpcRouteTimeoutPerRequestArgs) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutput() RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return i.ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (i RouteSpecGrpcRouteTimeoutPerRequestArgs) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutPerRequestOutput).ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(ctx)
}

// RouteSpecGrpcRouteTimeoutPerRequestPtrInput is an input type that accepts RouteSpecGrpcRouteTimeoutPerRequestArgs, RouteSpecGrpcRouteTimeoutPerRequestPtr and RouteSpecGrpcRouteTimeoutPerRequestPtrOutput values.
// You can construct a concrete instance of `RouteSpecGrpcRouteTimeoutPerRequestPtrInput` via:
//
//	        RouteSpecGrpcRouteTimeoutPerRequestArgs{...}
//
//	or:
//
//	        nil
type RouteSpecGrpcRouteTimeoutPerRequestPtrInput interface {
	pulumi.Input

	ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutput() RouteSpecGrpcRouteTimeoutPerRequestPtrOutput
	ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(context.Context) RouteSpecGrpcRouteTimeoutPerRequestPtrOutput
}

type routeSpecGrpcRouteTimeoutPerRequestPtrType RouteSpecGrpcRouteTimeoutPerRequestArgs

func RouteSpecGrpcRouteTimeoutPerRequestPtr(v *RouteSpecGrpcRouteTimeoutPerRequestArgs) RouteSpecGrpcRouteTimeoutPerRequestPtrInput {
	return (*routeSpecGrpcRouteTimeoutPerRequestPtrType)(v)
}

func (*routeSpecGrpcRouteTimeoutPerRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteTimeoutPerRequest)(nil)).Elem()
}

func (i *routeSpecGrpcRouteTimeoutPerRequestPtrType) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutput() RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return i.ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (i *routeSpecGrpcRouteTimeoutPerRequestPtrType) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecGrpcRouteTimeoutPerRequestPtrOutput)
}

type RouteSpecGrpcRouteTimeoutPerRequestOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteTimeoutPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecGrpcRouteTimeoutPerRequest)(nil)).Elem()
}

func (o RouteSpecGrpcRouteTimeoutPerRequestOutput) ToRouteSpecGrpcRouteTimeoutPerRequestOutput() RouteSpecGrpcRouteTimeoutPerRequestOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutPerRequestOutput) ToRouteSpecGrpcRouteTimeoutPerRequestOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPerRequestOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutPerRequestOutput) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutput() RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return o.ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (o RouteSpecGrpcRouteTimeoutPerRequestOutput) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecGrpcRouteTimeoutPerRequest) *RouteSpecGrpcRouteTimeoutPerRequest {
		return &v
	}).(RouteSpecGrpcRouteTimeoutPerRequestPtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o RouteSpecGrpcRouteTimeoutPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteTimeoutPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

// Number of time units. Minimum value of `0`.
func (o RouteSpecGrpcRouteTimeoutPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecGrpcRouteTimeoutPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecGrpcRouteTimeoutPerRequestPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecGrpcRouteTimeoutPerRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecGrpcRouteTimeoutPerRequest)(nil)).Elem()
}

func (o RouteSpecGrpcRouteTimeoutPerRequestPtrOutput) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutput() RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutPerRequestPtrOutput) ToRouteSpecGrpcRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecGrpcRouteTimeoutPerRequestPtrOutput {
	return o
}

func (o RouteSpecGrpcRouteTimeoutPerRequestPtrOutput) Elem() RouteSpecGrpcRouteTimeoutPerRequestOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeoutPerRequest) RouteSpecGrpcRouteTimeoutPerRequest {
		if v != nil {
			return *v
		}
		var ret RouteSpecGrpcRouteTimeoutPerRequest
		return ret
	}).(RouteSpecGrpcRouteTimeoutPerRequestOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o RouteSpecGrpcRouteTimeoutPerRequestPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeoutPerRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Number of time units. Minimum value of `0`.
func (o RouteSpecGrpcRouteTimeoutPerRequestPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecGrpcRouteTimeoutPerRequest) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttp2Route struct {
	// Action to take if a match is determined.
	Action RouteSpecHttp2RouteAction `pulumi:"action"`
	// Criteria for determining an gRPC request match.
	Match RouteSpecHttp2RouteMatch `pulumi:"match"`
	// Retry policy.
	RetryPolicy *RouteSpecHttp2RouteRetryPolicy `pulumi:"retryPolicy"`
	// Types of timeouts.
	Timeout *RouteSpecHttp2RouteTimeout `pulumi:"timeout"`
}

// RouteSpecHttp2RouteInput is an input type that accepts RouteSpecHttp2RouteArgs and RouteSpecHttp2RouteOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteInput` via:
//
//	RouteSpecHttp2RouteArgs{...}
type RouteSpecHttp2RouteInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteOutput() RouteSpecHttp2RouteOutput
	ToRouteSpecHttp2RouteOutputWithContext(context.Context) RouteSpecHttp2RouteOutput
}

type RouteSpecHttp2RouteArgs struct {
	// Action to take if a match is determined.
	Action RouteSpecHttp2RouteActionInput `pulumi:"action"`
	// Criteria for determining an gRPC request match.
	Match RouteSpecHttp2RouteMatchInput `pulumi:"match"`
	// Retry policy.
	RetryPolicy RouteSpecHttp2RouteRetryPolicyPtrInput `pulumi:"retryPolicy"`
	// Types of timeouts.
	Timeout RouteSpecHttp2RouteTimeoutPtrInput `pulumi:"timeout"`
}

func (RouteSpecHttp2RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2Route)(nil)).Elem()
}

func (i RouteSpecHttp2RouteArgs) ToRouteSpecHttp2RouteOutput() RouteSpecHttp2RouteOutput {
	return i.ToRouteSpecHttp2RouteOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteArgs) ToRouteSpecHttp2RouteOutputWithContext(ctx context.Context) RouteSpecHttp2RouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteOutput)
}

func (i RouteSpecHttp2RouteArgs) ToRouteSpecHttp2RoutePtrOutput() RouteSpecHttp2RoutePtrOutput {
	return i.ToRouteSpecHttp2RoutePtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteArgs) ToRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteOutput).ToRouteSpecHttp2RoutePtrOutputWithContext(ctx)
}

// RouteSpecHttp2RoutePtrInput is an input type that accepts RouteSpecHttp2RouteArgs, RouteSpecHttp2RoutePtr and RouteSpecHttp2RoutePtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RoutePtrInput` via:
//
//	        RouteSpecHttp2RouteArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttp2RoutePtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RoutePtrOutput() RouteSpecHttp2RoutePtrOutput
	ToRouteSpecHttp2RoutePtrOutputWithContext(context.Context) RouteSpecHttp2RoutePtrOutput
}

type routeSpecHttp2RoutePtrType RouteSpecHttp2RouteArgs

func RouteSpecHttp2RoutePtr(v *RouteSpecHttp2RouteArgs) RouteSpecHttp2RoutePtrInput {
	return (*routeSpecHttp2RoutePtrType)(v)
}

func (*routeSpecHttp2RoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2Route)(nil)).Elem()
}

func (i *routeSpecHttp2RoutePtrType) ToRouteSpecHttp2RoutePtrOutput() RouteSpecHttp2RoutePtrOutput {
	return i.ToRouteSpecHttp2RoutePtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RoutePtrType) ToRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RoutePtrOutput)
}

type RouteSpecHttp2RouteOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2Route)(nil)).Elem()
}

func (o RouteSpecHttp2RouteOutput) ToRouteSpecHttp2RouteOutput() RouteSpecHttp2RouteOutput {
	return o
}

func (o RouteSpecHttp2RouteOutput) ToRouteSpecHttp2RouteOutputWithContext(ctx context.Context) RouteSpecHttp2RouteOutput {
	return o
}

func (o RouteSpecHttp2RouteOutput) ToRouteSpecHttp2RoutePtrOutput() RouteSpecHttp2RoutePtrOutput {
	return o.ToRouteSpecHttp2RoutePtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteOutput) ToRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2Route) *RouteSpecHttp2Route {
		return &v
	}).(RouteSpecHttp2RoutePtrOutput)
}

// Action to take if a match is determined.
func (o RouteSpecHttp2RouteOutput) Action() RouteSpecHttp2RouteActionOutput {
	return o.ApplyT(func(v RouteSpecHttp2Route) RouteSpecHttp2RouteAction { return v.Action }).(RouteSpecHttp2RouteActionOutput)
}

// Criteria for determining an gRPC request match.
func (o RouteSpecHttp2RouteOutput) Match() RouteSpecHttp2RouteMatchOutput {
	return o.ApplyT(func(v RouteSpecHttp2Route) RouteSpecHttp2RouteMatch { return v.Match }).(RouteSpecHttp2RouteMatchOutput)
}

// Retry policy.
func (o RouteSpecHttp2RouteOutput) RetryPolicy() RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2Route) *RouteSpecHttp2RouteRetryPolicy { return v.RetryPolicy }).(RouteSpecHttp2RouteRetryPolicyPtrOutput)
}

// Types of timeouts.
func (o RouteSpecHttp2RouteOutput) Timeout() RouteSpecHttp2RouteTimeoutPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2Route) *RouteSpecHttp2RouteTimeout { return v.Timeout }).(RouteSpecHttp2RouteTimeoutPtrOutput)
}

type RouteSpecHttp2RoutePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2Route)(nil)).Elem()
}

func (o RouteSpecHttp2RoutePtrOutput) ToRouteSpecHttp2RoutePtrOutput() RouteSpecHttp2RoutePtrOutput {
	return o
}

func (o RouteSpecHttp2RoutePtrOutput) ToRouteSpecHttp2RoutePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RoutePtrOutput {
	return o
}

func (o RouteSpecHttp2RoutePtrOutput) Elem() RouteSpecHttp2RouteOutput {
	return o.ApplyT(func(v *RouteSpecHttp2Route) RouteSpecHttp2Route {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2Route
		return ret
	}).(RouteSpecHttp2RouteOutput)
}

// Action to take if a match is determined.
func (o RouteSpecHttp2RoutePtrOutput) Action() RouteSpecHttp2RouteActionPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2Route) *RouteSpecHttp2RouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(RouteSpecHttp2RouteActionPtrOutput)
}

// Criteria for determining an gRPC request match.
func (o RouteSpecHttp2RoutePtrOutput) Match() RouteSpecHttp2RouteMatchPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2Route) *RouteSpecHttp2RouteMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(RouteSpecHttp2RouteMatchPtrOutput)
}

// Retry policy.
func (o RouteSpecHttp2RoutePtrOutput) RetryPolicy() RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2Route) *RouteSpecHttp2RouteRetryPolicy {
		if v == nil {
			return nil
		}
		return v.RetryPolicy
	}).(RouteSpecHttp2RouteRetryPolicyPtrOutput)
}

// Types of timeouts.
func (o RouteSpecHttp2RoutePtrOutput) Timeout() RouteSpecHttp2RouteTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2Route) *RouteSpecHttp2RouteTimeout {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(RouteSpecHttp2RouteTimeoutPtrOutput)
}

type RouteSpecHttp2RouteAction struct {
	// Targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets []RouteSpecHttp2RouteActionWeightedTarget `pulumi:"weightedTargets"`
}

// RouteSpecHttp2RouteActionInput is an input type that accepts RouteSpecHttp2RouteActionArgs and RouteSpecHttp2RouteActionOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteActionInput` via:
//
//	RouteSpecHttp2RouteActionArgs{...}
type RouteSpecHttp2RouteActionInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteActionOutput() RouteSpecHttp2RouteActionOutput
	ToRouteSpecHttp2RouteActionOutputWithContext(context.Context) RouteSpecHttp2RouteActionOutput
}

type RouteSpecHttp2RouteActionArgs struct {
	// Targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets RouteSpecHttp2RouteActionWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (RouteSpecHttp2RouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteAction)(nil)).Elem()
}

func (i RouteSpecHttp2RouteActionArgs) ToRouteSpecHttp2RouteActionOutput() RouteSpecHttp2RouteActionOutput {
	return i.ToRouteSpecHttp2RouteActionOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteActionArgs) ToRouteSpecHttp2RouteActionOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteActionOutput)
}

func (i RouteSpecHttp2RouteActionArgs) ToRouteSpecHttp2RouteActionPtrOutput() RouteSpecHttp2RouteActionPtrOutput {
	return i.ToRouteSpecHttp2RouteActionPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteActionArgs) ToRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteActionOutput).ToRouteSpecHttp2RouteActionPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteActionPtrInput is an input type that accepts RouteSpecHttp2RouteActionArgs, RouteSpecHttp2RouteActionPtr and RouteSpecHttp2RouteActionPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteActionPtrInput` via:
//
//	        RouteSpecHttp2RouteActionArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttp2RouteActionPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteActionPtrOutput() RouteSpecHttp2RouteActionPtrOutput
	ToRouteSpecHttp2RouteActionPtrOutputWithContext(context.Context) RouteSpecHttp2RouteActionPtrOutput
}

type routeSpecHttp2RouteActionPtrType RouteSpecHttp2RouteActionArgs

func RouteSpecHttp2RouteActionPtr(v *RouteSpecHttp2RouteActionArgs) RouteSpecHttp2RouteActionPtrInput {
	return (*routeSpecHttp2RouteActionPtrType)(v)
}

func (*routeSpecHttp2RouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteAction)(nil)).Elem()
}

func (i *routeSpecHttp2RouteActionPtrType) ToRouteSpecHttp2RouteActionPtrOutput() RouteSpecHttp2RouteActionPtrOutput {
	return i.ToRouteSpecHttp2RouteActionPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteActionPtrType) ToRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteActionPtrOutput)
}

type RouteSpecHttp2RouteActionOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteAction)(nil)).Elem()
}

func (o RouteSpecHttp2RouteActionOutput) ToRouteSpecHttp2RouteActionOutput() RouteSpecHttp2RouteActionOutput {
	return o
}

func (o RouteSpecHttp2RouteActionOutput) ToRouteSpecHttp2RouteActionOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionOutput {
	return o
}

func (o RouteSpecHttp2RouteActionOutput) ToRouteSpecHttp2RouteActionPtrOutput() RouteSpecHttp2RouteActionPtrOutput {
	return o.ToRouteSpecHttp2RouteActionPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteActionOutput) ToRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteAction) *RouteSpecHttp2RouteAction {
		return &v
	}).(RouteSpecHttp2RouteActionPtrOutput)
}

// Targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecHttp2RouteActionOutput) WeightedTargets() RouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteAction) []RouteSpecHttp2RouteActionWeightedTarget { return v.WeightedTargets }).(RouteSpecHttp2RouteActionWeightedTargetArrayOutput)
}

type RouteSpecHttp2RouteActionPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteAction)(nil)).Elem()
}

func (o RouteSpecHttp2RouteActionPtrOutput) ToRouteSpecHttp2RouteActionPtrOutput() RouteSpecHttp2RouteActionPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteActionPtrOutput) ToRouteSpecHttp2RouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteActionPtrOutput) Elem() RouteSpecHttp2RouteActionOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteAction) RouteSpecHttp2RouteAction {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteAction
		return ret
	}).(RouteSpecHttp2RouteActionOutput)
}

// Targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecHttp2RouteActionPtrOutput) WeightedTargets() RouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteAction) []RouteSpecHttp2RouteActionWeightedTarget {
		if v == nil {
			return nil
		}
		return v.WeightedTargets
	}).(RouteSpecHttp2RouteActionWeightedTargetArrayOutput)
}

type RouteSpecHttp2RouteActionWeightedTarget struct {
	// The targeted port of the weighted object.
	Port *int `pulumi:"port"`
	// Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode string `pulumi:"virtualNode"`
	// Relative weight of the weighted target. An integer between 0 and 100.
	Weight int `pulumi:"weight"`
}

// RouteSpecHttp2RouteActionWeightedTargetInput is an input type that accepts RouteSpecHttp2RouteActionWeightedTargetArgs and RouteSpecHttp2RouteActionWeightedTargetOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteActionWeightedTargetInput` via:
//
//	RouteSpecHttp2RouteActionWeightedTargetArgs{...}
type RouteSpecHttp2RouteActionWeightedTargetInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteActionWeightedTargetOutput() RouteSpecHttp2RouteActionWeightedTargetOutput
	ToRouteSpecHttp2RouteActionWeightedTargetOutputWithContext(context.Context) RouteSpecHttp2RouteActionWeightedTargetOutput
}

type RouteSpecHttp2RouteActionWeightedTargetArgs struct {
	// The targeted port of the weighted object.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode pulumi.StringInput `pulumi:"virtualNode"`
	// Relative weight of the weighted target. An integer between 0 and 100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (RouteSpecHttp2RouteActionWeightedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecHttp2RouteActionWeightedTargetArgs) ToRouteSpecHttp2RouteActionWeightedTargetOutput() RouteSpecHttp2RouteActionWeightedTargetOutput {
	return i.ToRouteSpecHttp2RouteActionWeightedTargetOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteActionWeightedTargetArgs) ToRouteSpecHttp2RouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionWeightedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteActionWeightedTargetOutput)
}

// RouteSpecHttp2RouteActionWeightedTargetArrayInput is an input type that accepts RouteSpecHttp2RouteActionWeightedTargetArray and RouteSpecHttp2RouteActionWeightedTargetArrayOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteActionWeightedTargetArrayInput` via:
//
//	RouteSpecHttp2RouteActionWeightedTargetArray{ RouteSpecHttp2RouteActionWeightedTargetArgs{...} }
type RouteSpecHttp2RouteActionWeightedTargetArrayInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteActionWeightedTargetArrayOutput() RouteSpecHttp2RouteActionWeightedTargetArrayOutput
	ToRouteSpecHttp2RouteActionWeightedTargetArrayOutputWithContext(context.Context) RouteSpecHttp2RouteActionWeightedTargetArrayOutput
}

type RouteSpecHttp2RouteActionWeightedTargetArray []RouteSpecHttp2RouteActionWeightedTargetInput

func (RouteSpecHttp2RouteActionWeightedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttp2RouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecHttp2RouteActionWeightedTargetArray) ToRouteSpecHttp2RouteActionWeightedTargetArrayOutput() RouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return i.ToRouteSpecHttp2RouteActionWeightedTargetArrayOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteActionWeightedTargetArray) ToRouteSpecHttp2RouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteActionWeightedTargetArrayOutput)
}

type RouteSpecHttp2RouteActionWeightedTargetOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteActionWeightedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecHttp2RouteActionWeightedTargetOutput) ToRouteSpecHttp2RouteActionWeightedTargetOutput() RouteSpecHttp2RouteActionWeightedTargetOutput {
	return o
}

func (o RouteSpecHttp2RouteActionWeightedTargetOutput) ToRouteSpecHttp2RouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionWeightedTargetOutput {
	return o
}

// The targeted port of the weighted object.
func (o RouteSpecHttp2RouteActionWeightedTargetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteActionWeightedTarget) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteActionWeightedTargetOutput) VirtualNode() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteActionWeightedTarget) string { return v.VirtualNode }).(pulumi.StringOutput)
}

// Relative weight of the weighted target. An integer between 0 and 100.
func (o RouteSpecHttp2RouteActionWeightedTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteActionWeightedTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type RouteSpecHttp2RouteActionWeightedTargetArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteActionWeightedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttp2RouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecHttp2RouteActionWeightedTargetArrayOutput) ToRouteSpecHttp2RouteActionWeightedTargetArrayOutput() RouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecHttp2RouteActionWeightedTargetArrayOutput) ToRouteSpecHttp2RouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecHttp2RouteActionWeightedTargetArrayOutput) Index(i pulumi.IntInput) RouteSpecHttp2RouteActionWeightedTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecHttp2RouteActionWeightedTarget {
		return vs[0].([]RouteSpecHttp2RouteActionWeightedTarget)[vs[1].(int)]
	}).(RouteSpecHttp2RouteActionWeightedTargetOutput)
}

type RouteSpecHttp2RouteMatch struct {
	// Client request headers to match on.
	Headers []RouteSpecHttp2RouteMatchHeader `pulumi:"headers"`
	// Client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
	Method *string `pulumi:"method"`
	// Client request path to match on.
	Path *RouteSpecHttp2RouteMatchPath `pulumi:"path"`
	// The port number to match from the request.
	Port *int `pulumi:"port"`
	// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix *string `pulumi:"prefix"`
	// Client request query parameters to match on.
	QueryParameters []RouteSpecHttp2RouteMatchQueryParameter `pulumi:"queryParameters"`
	// Client request header scheme to match on. Valid values: `http`, `https`.
	Scheme *string `pulumi:"scheme"`
}

// RouteSpecHttp2RouteMatchInput is an input type that accepts RouteSpecHttp2RouteMatchArgs and RouteSpecHttp2RouteMatchOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchInput` via:
//
//	RouteSpecHttp2RouteMatchArgs{...}
type RouteSpecHttp2RouteMatchInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchOutput() RouteSpecHttp2RouteMatchOutput
	ToRouteSpecHttp2RouteMatchOutputWithContext(context.Context) RouteSpecHttp2RouteMatchOutput
}

type RouteSpecHttp2RouteMatchArgs struct {
	// Client request headers to match on.
	Headers RouteSpecHttp2RouteMatchHeaderArrayInput `pulumi:"headers"`
	// Client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Client request path to match on.
	Path RouteSpecHttp2RouteMatchPathPtrInput `pulumi:"path"`
	// The port number to match from the request.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Client request query parameters to match on.
	QueryParameters RouteSpecHttp2RouteMatchQueryParameterArrayInput `pulumi:"queryParameters"`
	// Client request header scheme to match on. Valid values: `http`, `https`.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (RouteSpecHttp2RouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (i RouteSpecHttp2RouteMatchArgs) ToRouteSpecHttp2RouteMatchOutput() RouteSpecHttp2RouteMatchOutput {
	return i.ToRouteSpecHttp2RouteMatchOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchArgs) ToRouteSpecHttp2RouteMatchOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchOutput)
}

func (i RouteSpecHttp2RouteMatchArgs) ToRouteSpecHttp2RouteMatchPtrOutput() RouteSpecHttp2RouteMatchPtrOutput {
	return i.ToRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchArgs) ToRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchOutput).ToRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteMatchPtrInput is an input type that accepts RouteSpecHttp2RouteMatchArgs, RouteSpecHttp2RouteMatchPtr and RouteSpecHttp2RouteMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchPtrInput` via:
//
//	        RouteSpecHttp2RouteMatchArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttp2RouteMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchPtrOutput() RouteSpecHttp2RouteMatchPtrOutput
	ToRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Context) RouteSpecHttp2RouteMatchPtrOutput
}

type routeSpecHttp2RouteMatchPtrType RouteSpecHttp2RouteMatchArgs

func RouteSpecHttp2RouteMatchPtr(v *RouteSpecHttp2RouteMatchArgs) RouteSpecHttp2RouteMatchPtrInput {
	return (*routeSpecHttp2RouteMatchPtrType)(v)
}

func (*routeSpecHttp2RouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (i *routeSpecHttp2RouteMatchPtrType) ToRouteSpecHttp2RouteMatchPtrOutput() RouteSpecHttp2RouteMatchPtrOutput {
	return i.ToRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteMatchPtrType) ToRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchPtrOutput)
}

type RouteSpecHttp2RouteMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchOutput) ToRouteSpecHttp2RouteMatchOutput() RouteSpecHttp2RouteMatchOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchOutput) ToRouteSpecHttp2RouteMatchOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchOutput) ToRouteSpecHttp2RouteMatchPtrOutput() RouteSpecHttp2RouteMatchPtrOutput {
	return o.ToRouteSpecHttp2RouteMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteMatchOutput) ToRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteMatch) *RouteSpecHttp2RouteMatch {
		return &v
	}).(RouteSpecHttp2RouteMatchPtrOutput)
}

// Client request headers to match on.
func (o RouteSpecHttp2RouteMatchOutput) Headers() RouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatch) []RouteSpecHttp2RouteMatchHeader { return v.Headers }).(RouteSpecHttp2RouteMatchHeaderArrayOutput)
}

// Client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
func (o RouteSpecHttp2RouteMatchOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatch) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Client request path to match on.
func (o RouteSpecHttp2RouteMatchOutput) Path() RouteSpecHttp2RouteMatchPathPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatch) *RouteSpecHttp2RouteMatchPath { return v.Path }).(RouteSpecHttp2RouteMatchPathPtrOutput)
}

// The port number to match from the request.
func (o RouteSpecHttp2RouteMatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttp2RouteMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Client request query parameters to match on.
func (o RouteSpecHttp2RouteMatchOutput) QueryParameters() RouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatch) []RouteSpecHttp2RouteMatchQueryParameter { return v.QueryParameters }).(RouteSpecHttp2RouteMatchQueryParameterArrayOutput)
}

// Client request header scheme to match on. Valid values: `http`, `https`.
func (o RouteSpecHttp2RouteMatchOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatch) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type RouteSpecHttp2RouteMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchPtrOutput) ToRouteSpecHttp2RouteMatchPtrOutput() RouteSpecHttp2RouteMatchPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchPtrOutput) ToRouteSpecHttp2RouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchPtrOutput) Elem() RouteSpecHttp2RouteMatchOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatch) RouteSpecHttp2RouteMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteMatch
		return ret
	}).(RouteSpecHttp2RouteMatchOutput)
}

// Client request headers to match on.
func (o RouteSpecHttp2RouteMatchPtrOutput) Headers() RouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatch) []RouteSpecHttp2RouteMatchHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(RouteSpecHttp2RouteMatchHeaderArrayOutput)
}

// Client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
func (o RouteSpecHttp2RouteMatchPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Client request path to match on.
func (o RouteSpecHttp2RouteMatchPtrOutput) Path() RouteSpecHttp2RouteMatchPathPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatch) *RouteSpecHttp2RouteMatchPath {
		if v == nil {
			return nil
		}
		return v.Path
	}).(RouteSpecHttp2RouteMatchPathPtrOutput)
}

// The port number to match from the request.
func (o RouteSpecHttp2RouteMatchPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatch) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttp2RouteMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Client request query parameters to match on.
func (o RouteSpecHttp2RouteMatchPtrOutput) QueryParameters() RouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatch) []RouteSpecHttp2RouteMatchQueryParameter {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(RouteSpecHttp2RouteMatchQueryParameterArrayOutput)
}

// Client request header scheme to match on. Valid values: `http`, `https`.
func (o RouteSpecHttp2RouteMatchPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

type RouteSpecHttp2RouteMatchHeader struct {
	// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
	Invert *bool `pulumi:"invert"`
	// Method and value to match the header value sent with a request. Specify one match method.
	Match *RouteSpecHttp2RouteMatchHeaderMatch `pulumi:"match"`
	// Name for the HTTP header in the client request that will be matched on.
	Name string `pulumi:"name"`
}

// RouteSpecHttp2RouteMatchHeaderInput is an input type that accepts RouteSpecHttp2RouteMatchHeaderArgs and RouteSpecHttp2RouteMatchHeaderOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchHeaderInput` via:
//
//	RouteSpecHttp2RouteMatchHeaderArgs{...}
type RouteSpecHttp2RouteMatchHeaderInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchHeaderOutput() RouteSpecHttp2RouteMatchHeaderOutput
	ToRouteSpecHttp2RouteMatchHeaderOutputWithContext(context.Context) RouteSpecHttp2RouteMatchHeaderOutput
}

type RouteSpecHttp2RouteMatchHeaderArgs struct {
	// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
	Invert pulumi.BoolPtrInput `pulumi:"invert"`
	// Method and value to match the header value sent with a request. Specify one match method.
	Match RouteSpecHttp2RouteMatchHeaderMatchPtrInput `pulumi:"match"`
	// Name for the HTTP header in the client request that will be matched on.
	Name pulumi.StringInput `pulumi:"name"`
}

func (RouteSpecHttp2RouteMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (i RouteSpecHttp2RouteMatchHeaderArgs) ToRouteSpecHttp2RouteMatchHeaderOutput() RouteSpecHttp2RouteMatchHeaderOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchHeaderArgs) ToRouteSpecHttp2RouteMatchHeaderOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderOutput)
}

// RouteSpecHttp2RouteMatchHeaderArrayInput is an input type that accepts RouteSpecHttp2RouteMatchHeaderArray and RouteSpecHttp2RouteMatchHeaderArrayOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchHeaderArrayInput` via:
//
//	RouteSpecHttp2RouteMatchHeaderArray{ RouteSpecHttp2RouteMatchHeaderArgs{...} }
type RouteSpecHttp2RouteMatchHeaderArrayInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchHeaderArrayOutput() RouteSpecHttp2RouteMatchHeaderArrayOutput
	ToRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(context.Context) RouteSpecHttp2RouteMatchHeaderArrayOutput
}

type RouteSpecHttp2RouteMatchHeaderArray []RouteSpecHttp2RouteMatchHeaderInput

func (RouteSpecHttp2RouteMatchHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (i RouteSpecHttp2RouteMatchHeaderArray) ToRouteSpecHttp2RouteMatchHeaderArrayOutput() RouteSpecHttp2RouteMatchHeaderArrayOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchHeaderArray) ToRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderArrayOutput)
}

type RouteSpecHttp2RouteMatchHeaderOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchHeaderOutput) ToRouteSpecHttp2RouteMatchHeaderOutput() RouteSpecHttp2RouteMatchHeaderOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderOutput) ToRouteSpecHttp2RouteMatchHeaderOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderOutput {
	return o
}

// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
func (o RouteSpecHttp2RouteMatchHeaderOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeader) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

// Method and value to match the header value sent with a request. Specify one match method.
func (o RouteSpecHttp2RouteMatchHeaderOutput) Match() RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeader) *RouteSpecHttp2RouteMatchHeaderMatch { return v.Match }).(RouteSpecHttp2RouteMatchHeaderMatchPtrOutput)
}

// Name for the HTTP header in the client request that will be matched on.
func (o RouteSpecHttp2RouteMatchHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeader) string { return v.Name }).(pulumi.StringOutput)
}

type RouteSpecHttp2RouteMatchHeaderArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchHeaderArrayOutput) ToRouteSpecHttp2RouteMatchHeaderArrayOutput() RouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderArrayOutput) ToRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderArrayOutput) Index(i pulumi.IntInput) RouteSpecHttp2RouteMatchHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecHttp2RouteMatchHeader {
		return vs[0].([]RouteSpecHttp2RouteMatchHeader)[vs[1].(int)]
	}).(RouteSpecHttp2RouteMatchHeaderOutput)
}

type RouteSpecHttp2RouteMatchHeaderMatch struct {
	// The exact path to match on.
	Exact *string `pulumi:"exact"`
	// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix *string `pulumi:"prefix"`
	// Object that specifies the range of numbers that the value sent by the client must be included in.
	Range *RouteSpecHttp2RouteMatchHeaderMatchRange `pulumi:"range"`
	// The regex used to match the path.
	Regex *string `pulumi:"regex"`
	// Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
	Suffix *string `pulumi:"suffix"`
}

// RouteSpecHttp2RouteMatchHeaderMatchInput is an input type that accepts RouteSpecHttp2RouteMatchHeaderMatchArgs and RouteSpecHttp2RouteMatchHeaderMatchOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchHeaderMatchInput` via:
//
//	RouteSpecHttp2RouteMatchHeaderMatchArgs{...}
type RouteSpecHttp2RouteMatchHeaderMatchInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchHeaderMatchOutput() RouteSpecHttp2RouteMatchHeaderMatchOutput
	ToRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(context.Context) RouteSpecHttp2RouteMatchHeaderMatchOutput
}

type RouteSpecHttp2RouteMatchHeaderMatchArgs struct {
	// The exact path to match on.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Object that specifies the range of numbers that the value sent by the client must be included in.
	Range RouteSpecHttp2RouteMatchHeaderMatchRangePtrInput `pulumi:"range"`
	// The regex used to match the path.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (RouteSpecHttp2RouteMatchHeaderMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (i RouteSpecHttp2RouteMatchHeaderMatchArgs) ToRouteSpecHttp2RouteMatchHeaderMatchOutput() RouteSpecHttp2RouteMatchHeaderMatchOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchHeaderMatchArgs) ToRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderMatchOutput)
}

func (i RouteSpecHttp2RouteMatchHeaderMatchArgs) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchHeaderMatchArgs) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderMatchOutput).ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteMatchHeaderMatchPtrInput is an input type that accepts RouteSpecHttp2RouteMatchHeaderMatchArgs, RouteSpecHttp2RouteMatchHeaderMatchPtr and RouteSpecHttp2RouteMatchHeaderMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchHeaderMatchPtrInput` via:
//
//	        RouteSpecHttp2RouteMatchHeaderMatchArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttp2RouteMatchHeaderMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() RouteSpecHttp2RouteMatchHeaderMatchPtrOutput
	ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(context.Context) RouteSpecHttp2RouteMatchHeaderMatchPtrOutput
}

type routeSpecHttp2RouteMatchHeaderMatchPtrType RouteSpecHttp2RouteMatchHeaderMatchArgs

func RouteSpecHttp2RouteMatchHeaderMatchPtr(v *RouteSpecHttp2RouteMatchHeaderMatchArgs) RouteSpecHttp2RouteMatchHeaderMatchPtrInput {
	return (*routeSpecHttp2RouteMatchHeaderMatchPtrType)(v)
}

func (*routeSpecHttp2RouteMatchHeaderMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (i *routeSpecHttp2RouteMatchHeaderMatchPtrType) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteMatchHeaderMatchPtrType) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderMatchPtrOutput)
}

type RouteSpecHttp2RouteMatchHeaderMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchHeaderMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) ToRouteSpecHttp2RouteMatchHeaderMatchOutput() RouteSpecHttp2RouteMatchHeaderMatchOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) ToRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o.ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteMatchHeaderMatch) *RouteSpecHttp2RouteMatchHeaderMatch {
		return &v
	}).(RouteSpecHttp2RouteMatchHeaderMatchPtrOutput)
}

// The exact path to match on.
func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeaderMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeaderMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Object that specifies the range of numbers that the value sent by the client must be included in.
func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) Range() RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeaderMatch) *RouteSpecHttp2RouteMatchHeaderMatchRange { return v.Range }).(RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput)
}

// The regex used to match the path.
func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeaderMatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteMatchHeaderMatchOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeaderMatch) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type RouteSpecHttp2RouteMatchHeaderMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutput() RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) ToRouteSpecHttp2RouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Elem() RouteSpecHttp2RouteMatchHeaderMatchOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatch) RouteSpecHttp2RouteMatchHeaderMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteMatchHeaderMatch
		return ret
	}).(RouteSpecHttp2RouteMatchHeaderMatchOutput)
}

// The exact path to match on.
func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Object that specifies the range of numbers that the value sent by the client must be included in.
func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Range() RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatch) *RouteSpecHttp2RouteMatchHeaderMatchRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput)
}

// The regex used to match the path.
func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteMatchHeaderMatchPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type RouteSpecHttp2RouteMatchHeaderMatchRange struct {
	// End of the range.
	End int `pulumi:"end"`
	// Start of the range.
	Start int `pulumi:"start"`
}

// RouteSpecHttp2RouteMatchHeaderMatchRangeInput is an input type that accepts RouteSpecHttp2RouteMatchHeaderMatchRangeArgs and RouteSpecHttp2RouteMatchHeaderMatchRangeOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchHeaderMatchRangeInput` via:
//
//	RouteSpecHttp2RouteMatchHeaderMatchRangeArgs{...}
type RouteSpecHttp2RouteMatchHeaderMatchRangeInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() RouteSpecHttp2RouteMatchHeaderMatchRangeOutput
	ToRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangeOutput
}

type RouteSpecHttp2RouteMatchHeaderMatchRangeArgs struct {
	// End of the range.
	End pulumi.IntInput `pulumi:"end"`
	// Start of the range.
	Start pulumi.IntInput `pulumi:"start"`
}

func (RouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i RouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() RouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderMatchRangeOutput)
}

func (i RouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderMatchRangeOutput).ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteMatchHeaderMatchRangePtrInput is an input type that accepts RouteSpecHttp2RouteMatchHeaderMatchRangeArgs, RouteSpecHttp2RouteMatchHeaderMatchRangePtr and RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchHeaderMatchRangePtrInput` via:
//
//	        RouteSpecHttp2RouteMatchHeaderMatchRangeArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttp2RouteMatchHeaderMatchRangePtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput
	ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput
}

type routeSpecHttp2RouteMatchHeaderMatchRangePtrType RouteSpecHttp2RouteMatchHeaderMatchRangeArgs

func RouteSpecHttp2RouteMatchHeaderMatchRangePtr(v *RouteSpecHttp2RouteMatchHeaderMatchRangeArgs) RouteSpecHttp2RouteMatchHeaderMatchRangePtrInput {
	return (*routeSpecHttp2RouteMatchHeaderMatchRangePtrType)(v)
}

func (*routeSpecHttp2RouteMatchHeaderMatchRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i *routeSpecHttp2RouteMatchHeaderMatchRangePtrType) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return i.ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteMatchHeaderMatchRangePtrType) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput)
}

type RouteSpecHttp2RouteMatchHeaderMatchRangeOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() RouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o.ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteMatchHeaderMatchRange) *RouteSpecHttp2RouteMatchHeaderMatchRange {
		return &v
	}).(RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput)
}

// End of the range.
func (o RouteSpecHttp2RouteMatchHeaderMatchRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeaderMatchRange) int { return v.End }).(pulumi.IntOutput)
}

// Start of the range.
func (o RouteSpecHttp2RouteMatchHeaderMatchRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchHeaderMatchRange) int { return v.Start }).(pulumi.IntOutput)
}

type RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput() RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) ToRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) Elem() RouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatchRange) RouteSpecHttp2RouteMatchHeaderMatchRange {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteMatchHeaderMatchRange
		return ret
	}).(RouteSpecHttp2RouteMatchHeaderMatchRangeOutput)
}

// End of the range.
func (o RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.IntPtrOutput)
}

// Start of the range.
func (o RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchHeaderMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttp2RouteMatchPath struct {
	// Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
	Exact *string `pulumi:"exact"`
	// Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
	Regex *string `pulumi:"regex"`
}

// RouteSpecHttp2RouteMatchPathInput is an input type that accepts RouteSpecHttp2RouteMatchPathArgs and RouteSpecHttp2RouteMatchPathOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchPathInput` via:
//
//	RouteSpecHttp2RouteMatchPathArgs{...}
type RouteSpecHttp2RouteMatchPathInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchPathOutput() RouteSpecHttp2RouteMatchPathOutput
	ToRouteSpecHttp2RouteMatchPathOutputWithContext(context.Context) RouteSpecHttp2RouteMatchPathOutput
}

type RouteSpecHttp2RouteMatchPathArgs struct {
	// Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (RouteSpecHttp2RouteMatchPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (i RouteSpecHttp2RouteMatchPathArgs) ToRouteSpecHttp2RouteMatchPathOutput() RouteSpecHttp2RouteMatchPathOutput {
	return i.ToRouteSpecHttp2RouteMatchPathOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchPathArgs) ToRouteSpecHttp2RouteMatchPathOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchPathOutput)
}

func (i RouteSpecHttp2RouteMatchPathArgs) ToRouteSpecHttp2RouteMatchPathPtrOutput() RouteSpecHttp2RouteMatchPathPtrOutput {
	return i.ToRouteSpecHttp2RouteMatchPathPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchPathArgs) ToRouteSpecHttp2RouteMatchPathPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchPathOutput).ToRouteSpecHttp2RouteMatchPathPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteMatchPathPtrInput is an input type that accepts RouteSpecHttp2RouteMatchPathArgs, RouteSpecHttp2RouteMatchPathPtr and RouteSpecHttp2RouteMatchPathPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchPathPtrInput` via:
//
//	        RouteSpecHttp2RouteMatchPathArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttp2RouteMatchPathPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchPathPtrOutput() RouteSpecHttp2RouteMatchPathPtrOutput
	ToRouteSpecHttp2RouteMatchPathPtrOutputWithContext(context.Context) RouteSpecHttp2RouteMatchPathPtrOutput
}

type routeSpecHttp2RouteMatchPathPtrType RouteSpecHttp2RouteMatchPathArgs

func RouteSpecHttp2RouteMatchPathPtr(v *RouteSpecHttp2RouteMatchPathArgs) RouteSpecHttp2RouteMatchPathPtrInput {
	return (*routeSpecHttp2RouteMatchPathPtrType)(v)
}

func (*routeSpecHttp2RouteMatchPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (i *routeSpecHttp2RouteMatchPathPtrType) ToRouteSpecHttp2RouteMatchPathPtrOutput() RouteSpecHttp2RouteMatchPathPtrOutput {
	return i.ToRouteSpecHttp2RouteMatchPathPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteMatchPathPtrType) ToRouteSpecHttp2RouteMatchPathPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchPathPtrOutput)
}

type RouteSpecHttp2RouteMatchPathOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchPathOutput) ToRouteSpecHttp2RouteMatchPathOutput() RouteSpecHttp2RouteMatchPathOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchPathOutput) ToRouteSpecHttp2RouteMatchPathOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchPathOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchPathOutput) ToRouteSpecHttp2RouteMatchPathPtrOutput() RouteSpecHttp2RouteMatchPathPtrOutput {
	return o.ToRouteSpecHttp2RouteMatchPathPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteMatchPathOutput) ToRouteSpecHttp2RouteMatchPathPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteMatchPath) *RouteSpecHttp2RouteMatchPath {
		return &v
	}).(RouteSpecHttp2RouteMatchPathPtrOutput)
}

// Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteMatchPathOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchPath) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteMatchPathOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchPath) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type RouteSpecHttp2RouteMatchPathPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchPathPtrOutput) ToRouteSpecHttp2RouteMatchPathPtrOutput() RouteSpecHttp2RouteMatchPathPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchPathPtrOutput) ToRouteSpecHttp2RouteMatchPathPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchPathPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchPathPtrOutput) Elem() RouteSpecHttp2RouteMatchPathOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchPath) RouteSpecHttp2RouteMatchPath {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteMatchPath
		return ret
	}).(RouteSpecHttp2RouteMatchPathOutput)
}

// Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteMatchPathPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchPath) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteMatchPathPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchPath) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

type RouteSpecHttp2RouteMatchQueryParameter struct {
	// Criteria for determining an gRPC request match.
	Match *RouteSpecHttp2RouteMatchQueryParameterMatch `pulumi:"match"`
	// Name to use for the route. Must be between 1 and 255 characters in length.
	Name string `pulumi:"name"`
}

// RouteSpecHttp2RouteMatchQueryParameterInput is an input type that accepts RouteSpecHttp2RouteMatchQueryParameterArgs and RouteSpecHttp2RouteMatchQueryParameterOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchQueryParameterInput` via:
//
//	RouteSpecHttp2RouteMatchQueryParameterArgs{...}
type RouteSpecHttp2RouteMatchQueryParameterInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchQueryParameterOutput() RouteSpecHttp2RouteMatchQueryParameterOutput
	ToRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(context.Context) RouteSpecHttp2RouteMatchQueryParameterOutput
}

type RouteSpecHttp2RouteMatchQueryParameterArgs struct {
	// Criteria for determining an gRPC request match.
	Match RouteSpecHttp2RouteMatchQueryParameterMatchPtrInput `pulumi:"match"`
	// Name to use for the route. Must be between 1 and 255 characters in length.
	Name pulumi.StringInput `pulumi:"name"`
}

func (RouteSpecHttp2RouteMatchQueryParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (i RouteSpecHttp2RouteMatchQueryParameterArgs) ToRouteSpecHttp2RouteMatchQueryParameterOutput() RouteSpecHttp2RouteMatchQueryParameterOutput {
	return i.ToRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchQueryParameterArgs) ToRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchQueryParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchQueryParameterOutput)
}

// RouteSpecHttp2RouteMatchQueryParameterArrayInput is an input type that accepts RouteSpecHttp2RouteMatchQueryParameterArray and RouteSpecHttp2RouteMatchQueryParameterArrayOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchQueryParameterArrayInput` via:
//
//	RouteSpecHttp2RouteMatchQueryParameterArray{ RouteSpecHttp2RouteMatchQueryParameterArgs{...} }
type RouteSpecHttp2RouteMatchQueryParameterArrayInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchQueryParameterArrayOutput() RouteSpecHttp2RouteMatchQueryParameterArrayOutput
	ToRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(context.Context) RouteSpecHttp2RouteMatchQueryParameterArrayOutput
}

type RouteSpecHttp2RouteMatchQueryParameterArray []RouteSpecHttp2RouteMatchQueryParameterInput

func (RouteSpecHttp2RouteMatchQueryParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (i RouteSpecHttp2RouteMatchQueryParameterArray) ToRouteSpecHttp2RouteMatchQueryParameterArrayOutput() RouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return i.ToRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchQueryParameterArray) ToRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchQueryParameterArrayOutput)
}

type RouteSpecHttp2RouteMatchQueryParameterOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchQueryParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchQueryParameterOutput) ToRouteSpecHttp2RouteMatchQueryParameterOutput() RouteSpecHttp2RouteMatchQueryParameterOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchQueryParameterOutput) ToRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchQueryParameterOutput {
	return o
}

// Criteria for determining an gRPC request match.
func (o RouteSpecHttp2RouteMatchQueryParameterOutput) Match() RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchQueryParameter) *RouteSpecHttp2RouteMatchQueryParameterMatch {
		return v.Match
	}).(RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput)
}

// Name to use for the route. Must be between 1 and 255 characters in length.
func (o RouteSpecHttp2RouteMatchQueryParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchQueryParameter) string { return v.Name }).(pulumi.StringOutput)
}

type RouteSpecHttp2RouteMatchQueryParameterArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchQueryParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchQueryParameterArrayOutput) ToRouteSpecHttp2RouteMatchQueryParameterArrayOutput() RouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchQueryParameterArrayOutput) ToRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchQueryParameterArrayOutput) Index(i pulumi.IntInput) RouteSpecHttp2RouteMatchQueryParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecHttp2RouteMatchQueryParameter {
		return vs[0].([]RouteSpecHttp2RouteMatchQueryParameter)[vs[1].(int)]
	}).(RouteSpecHttp2RouteMatchQueryParameterOutput)
}

type RouteSpecHttp2RouteMatchQueryParameterMatch struct {
	// The exact path to match on.
	Exact *string `pulumi:"exact"`
}

// RouteSpecHttp2RouteMatchQueryParameterMatchInput is an input type that accepts RouteSpecHttp2RouteMatchQueryParameterMatchArgs and RouteSpecHttp2RouteMatchQueryParameterMatchOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchQueryParameterMatchInput` via:
//
//	RouteSpecHttp2RouteMatchQueryParameterMatchArgs{...}
type RouteSpecHttp2RouteMatchQueryParameterMatchInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchQueryParameterMatchOutput() RouteSpecHttp2RouteMatchQueryParameterMatchOutput
	ToRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(context.Context) RouteSpecHttp2RouteMatchQueryParameterMatchOutput
}

type RouteSpecHttp2RouteMatchQueryParameterMatchArgs struct {
	// The exact path to match on.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
}

func (RouteSpecHttp2RouteMatchQueryParameterMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i RouteSpecHttp2RouteMatchQueryParameterMatchArgs) ToRouteSpecHttp2RouteMatchQueryParameterMatchOutput() RouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return i.ToRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchQueryParameterMatchArgs) ToRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchQueryParameterMatchOutput)
}

func (i RouteSpecHttp2RouteMatchQueryParameterMatchArgs) ToRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput() RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return i.ToRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteMatchQueryParameterMatchArgs) ToRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchQueryParameterMatchOutput).ToRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteMatchQueryParameterMatchPtrInput is an input type that accepts RouteSpecHttp2RouteMatchQueryParameterMatchArgs, RouteSpecHttp2RouteMatchQueryParameterMatchPtr and RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteMatchQueryParameterMatchPtrInput` via:
//
//	        RouteSpecHttp2RouteMatchQueryParameterMatchArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttp2RouteMatchQueryParameterMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput() RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput
	ToRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(context.Context) RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput
}

type routeSpecHttp2RouteMatchQueryParameterMatchPtrType RouteSpecHttp2RouteMatchQueryParameterMatchArgs

func RouteSpecHttp2RouteMatchQueryParameterMatchPtr(v *RouteSpecHttp2RouteMatchQueryParameterMatchArgs) RouteSpecHttp2RouteMatchQueryParameterMatchPtrInput {
	return (*routeSpecHttp2RouteMatchQueryParameterMatchPtrType)(v)
}

func (*routeSpecHttp2RouteMatchQueryParameterMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i *routeSpecHttp2RouteMatchQueryParameterMatchPtrType) ToRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput() RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return i.ToRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteMatchQueryParameterMatchPtrType) ToRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput)
}

type RouteSpecHttp2RouteMatchQueryParameterMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchQueryParameterMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchQueryParameterMatchOutput) ToRouteSpecHttp2RouteMatchQueryParameterMatchOutput() RouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchQueryParameterMatchOutput) ToRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchQueryParameterMatchOutput) ToRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput() RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return o.ToRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteMatchQueryParameterMatchOutput) ToRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteMatchQueryParameterMatch) *RouteSpecHttp2RouteMatchQueryParameterMatch {
		return &v
	}).(RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput)
}

// The exact path to match on.
func (o RouteSpecHttp2RouteMatchQueryParameterMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteMatchQueryParameterMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

type RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput) ToRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput() RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput) ToRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput) Elem() RouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchQueryParameterMatch) RouteSpecHttp2RouteMatchQueryParameterMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteMatchQueryParameterMatch
		return ret
	}).(RouteSpecHttp2RouteMatchQueryParameterMatchOutput)
}

// The exact path to match on.
func (o RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteMatchQueryParameterMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

type RouteSpecHttp2RouteRetryPolicy struct {
	// List of HTTP retry events.
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	HttpRetryEvents []string `pulumi:"httpRetryEvents"`
	// Maximum number of retries.
	MaxRetries int `pulumi:"maxRetries"`
	// Per-retry timeout.
	PerRetryTimeout RouteSpecHttp2RouteRetryPolicyPerRetryTimeout `pulumi:"perRetryTimeout"`
	// List of TCP retry events. The only valid value is `connection-error`.
	//
	// You must specify at least one value for `httpRetryEvents`, or at least one value for `tcpRetryEvents`.
	TcpRetryEvents []string `pulumi:"tcpRetryEvents"`
}

// RouteSpecHttp2RouteRetryPolicyInput is an input type that accepts RouteSpecHttp2RouteRetryPolicyArgs and RouteSpecHttp2RouteRetryPolicyOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteRetryPolicyInput` via:
//
//	RouteSpecHttp2RouteRetryPolicyArgs{...}
type RouteSpecHttp2RouteRetryPolicyInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteRetryPolicyOutput() RouteSpecHttp2RouteRetryPolicyOutput
	ToRouteSpecHttp2RouteRetryPolicyOutputWithContext(context.Context) RouteSpecHttp2RouteRetryPolicyOutput
}

type RouteSpecHttp2RouteRetryPolicyArgs struct {
	// List of HTTP retry events.
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	HttpRetryEvents pulumi.StringArrayInput `pulumi:"httpRetryEvents"`
	// Maximum number of retries.
	MaxRetries pulumi.IntInput `pulumi:"maxRetries"`
	// Per-retry timeout.
	PerRetryTimeout RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput `pulumi:"perRetryTimeout"`
	// List of TCP retry events. The only valid value is `connection-error`.
	//
	// You must specify at least one value for `httpRetryEvents`, or at least one value for `tcpRetryEvents`.
	TcpRetryEvents pulumi.StringArrayInput `pulumi:"tcpRetryEvents"`
}

func (RouteSpecHttp2RouteRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicy)(nil)).Elem()
}

func (i RouteSpecHttp2RouteRetryPolicyArgs) ToRouteSpecHttp2RouteRetryPolicyOutput() RouteSpecHttp2RouteRetryPolicyOutput {
	return i.ToRouteSpecHttp2RouteRetryPolicyOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteRetryPolicyArgs) ToRouteSpecHttp2RouteRetryPolicyOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteRetryPolicyOutput)
}

func (i RouteSpecHttp2RouteRetryPolicyArgs) ToRouteSpecHttp2RouteRetryPolicyPtrOutput() RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return i.ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteRetryPolicyArgs) ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteRetryPolicyOutput).ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteRetryPolicyPtrInput is an input type that accepts RouteSpecHttp2RouteRetryPolicyArgs, RouteSpecHttp2RouteRetryPolicyPtr and RouteSpecHttp2RouteRetryPolicyPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteRetryPolicyPtrInput` via:
//
//	        RouteSpecHttp2RouteRetryPolicyArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttp2RouteRetryPolicyPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteRetryPolicyPtrOutput() RouteSpecHttp2RouteRetryPolicyPtrOutput
	ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(context.Context) RouteSpecHttp2RouteRetryPolicyPtrOutput
}

type routeSpecHttp2RouteRetryPolicyPtrType RouteSpecHttp2RouteRetryPolicyArgs

func RouteSpecHttp2RouteRetryPolicyPtr(v *RouteSpecHttp2RouteRetryPolicyArgs) RouteSpecHttp2RouteRetryPolicyPtrInput {
	return (*routeSpecHttp2RouteRetryPolicyPtrType)(v)
}

func (*routeSpecHttp2RouteRetryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteRetryPolicy)(nil)).Elem()
}

func (i *routeSpecHttp2RouteRetryPolicyPtrType) ToRouteSpecHttp2RouteRetryPolicyPtrOutput() RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return i.ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteRetryPolicyPtrType) ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteRetryPolicyPtrOutput)
}

type RouteSpecHttp2RouteRetryPolicyOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicy)(nil)).Elem()
}

func (o RouteSpecHttp2RouteRetryPolicyOutput) ToRouteSpecHttp2RouteRetryPolicyOutput() RouteSpecHttp2RouteRetryPolicyOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyOutput) ToRouteSpecHttp2RouteRetryPolicyOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyOutput) ToRouteSpecHttp2RouteRetryPolicyPtrOutput() RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return o.ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteRetryPolicyOutput) ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteRetryPolicy) *RouteSpecHttp2RouteRetryPolicy {
		return &v
	}).(RouteSpecHttp2RouteRetryPolicyPtrOutput)
}

// List of HTTP retry events.
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
func (o RouteSpecHttp2RouteRetryPolicyOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteRetryPolicy) []string { return v.HttpRetryEvents }).(pulumi.StringArrayOutput)
}

// Maximum number of retries.
func (o RouteSpecHttp2RouteRetryPolicyOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteRetryPolicy) int { return v.MaxRetries }).(pulumi.IntOutput)
}

// Per-retry timeout.
func (o RouteSpecHttp2RouteRetryPolicyOutput) PerRetryTimeout() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteRetryPolicy) RouteSpecHttp2RouteRetryPolicyPerRetryTimeout {
		return v.PerRetryTimeout
	}).(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput)
}

// List of TCP retry events. The only valid value is `connection-error`.
//
// You must specify at least one value for `httpRetryEvents`, or at least one value for `tcpRetryEvents`.
func (o RouteSpecHttp2RouteRetryPolicyOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteRetryPolicy) []string { return v.TcpRetryEvents }).(pulumi.StringArrayOutput)
}

type RouteSpecHttp2RouteRetryPolicyPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteRetryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteRetryPolicy)(nil)).Elem()
}

func (o RouteSpecHttp2RouteRetryPolicyPtrOutput) ToRouteSpecHttp2RouteRetryPolicyPtrOutput() RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyPtrOutput) ToRouteSpecHttp2RouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyPtrOutput) Elem() RouteSpecHttp2RouteRetryPolicyOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicy) RouteSpecHttp2RouteRetryPolicy {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteRetryPolicy
		return ret
	}).(RouteSpecHttp2RouteRetryPolicyOutput)
}

// List of HTTP retry events.
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
func (o RouteSpecHttp2RouteRetryPolicyPtrOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.HttpRetryEvents
	}).(pulumi.StringArrayOutput)
}

// Maximum number of retries.
func (o RouteSpecHttp2RouteRetryPolicyPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// Per-retry timeout.
func (o RouteSpecHttp2RouteRetryPolicyPtrOutput) PerRetryTimeout() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicy) *RouteSpecHttp2RouteRetryPolicyPerRetryTimeout {
		if v == nil {
			return nil
		}
		return &v.PerRetryTimeout
	}).(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput)
}

// List of TCP retry events. The only valid value is `connection-error`.
//
// You must specify at least one value for `httpRetryEvents`, or at least one value for `tcpRetryEvents`.
func (o RouteSpecHttp2RouteRetryPolicyPtrOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.TcpRetryEvents
	}).(pulumi.StringArrayOutput)
}

type RouteSpecHttp2RouteRetryPolicyPerRetryTimeout struct {
	// Retry unit. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Retry value.
	Value int `pulumi:"value"`
}

// RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput is an input type that accepts RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs and RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput` via:
//
//	RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs{...}
type RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput
	ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput
}

type RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs struct {
	// Retry unit. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Retry value.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return i.ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput)
}

func (i RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return i.ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput).ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrInput is an input type that accepts RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs, RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtr and RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrInput` via:
//
//	        RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput
	ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput
}

type routeSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrType RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs

func RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtr(v *RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrInput {
	return (*routeSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrType)(v)
}

func (*routeSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i *routeSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrType) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return i.ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrType) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput)
}

type RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteRetryPolicyPerRetryTimeout) *RouteSpecHttp2RouteRetryPolicyPerRetryTimeout {
		return &v
	}).(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput)
}

// Retry unit. Valid values: `ms`, `s`.
func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteRetryPolicyPerRetryTimeout) string { return v.Unit }).(pulumi.StringOutput)
}

// Retry value.
func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteRetryPolicyPerRetryTimeout) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput) ToRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput) Elem() RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicyPerRetryTimeout) RouteSpecHttp2RouteRetryPolicyPerRetryTimeout {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteRetryPolicyPerRetryTimeout
		return ret
	}).(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput)
}

// Retry unit. Valid values: `ms`, `s`.
func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicyPerRetryTimeout) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Retry value.
func (o RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteRetryPolicyPerRetryTimeout) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttp2RouteTimeout struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *RouteSpecHttp2RouteTimeoutIdle `pulumi:"idle"`
	// Per request timeout.
	PerRequest *RouteSpecHttp2RouteTimeoutPerRequest `pulumi:"perRequest"`
}

// RouteSpecHttp2RouteTimeoutInput is an input type that accepts RouteSpecHttp2RouteTimeoutArgs and RouteSpecHttp2RouteTimeoutOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteTimeoutInput` via:
//
//	RouteSpecHttp2RouteTimeoutArgs{...}
type RouteSpecHttp2RouteTimeoutInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteTimeoutOutput() RouteSpecHttp2RouteTimeoutOutput
	ToRouteSpecHttp2RouteTimeoutOutputWithContext(context.Context) RouteSpecHttp2RouteTimeoutOutput
}

type RouteSpecHttp2RouteTimeoutArgs struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle RouteSpecHttp2RouteTimeoutIdlePtrInput `pulumi:"idle"`
	// Per request timeout.
	PerRequest RouteSpecHttp2RouteTimeoutPerRequestPtrInput `pulumi:"perRequest"`
}

func (RouteSpecHttp2RouteTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteTimeout)(nil)).Elem()
}

func (i RouteSpecHttp2RouteTimeoutArgs) ToRouteSpecHttp2RouteTimeoutOutput() RouteSpecHttp2RouteTimeoutOutput {
	return i.ToRouteSpecHttp2RouteTimeoutOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteTimeoutArgs) ToRouteSpecHttp2RouteTimeoutOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutOutput)
}

func (i RouteSpecHttp2RouteTimeoutArgs) ToRouteSpecHttp2RouteTimeoutPtrOutput() RouteSpecHttp2RouteTimeoutPtrOutput {
	return i.ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteTimeoutArgs) ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutOutput).ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteTimeoutPtrInput is an input type that accepts RouteSpecHttp2RouteTimeoutArgs, RouteSpecHttp2RouteTimeoutPtr and RouteSpecHttp2RouteTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteTimeoutPtrInput` via:
//
//	        RouteSpecHttp2RouteTimeoutArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttp2RouteTimeoutPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteTimeoutPtrOutput() RouteSpecHttp2RouteTimeoutPtrOutput
	ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(context.Context) RouteSpecHttp2RouteTimeoutPtrOutput
}

type routeSpecHttp2RouteTimeoutPtrType RouteSpecHttp2RouteTimeoutArgs

func RouteSpecHttp2RouteTimeoutPtr(v *RouteSpecHttp2RouteTimeoutArgs) RouteSpecHttp2RouteTimeoutPtrInput {
	return (*routeSpecHttp2RouteTimeoutPtrType)(v)
}

func (*routeSpecHttp2RouteTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteTimeout)(nil)).Elem()
}

func (i *routeSpecHttp2RouteTimeoutPtrType) ToRouteSpecHttp2RouteTimeoutPtrOutput() RouteSpecHttp2RouteTimeoutPtrOutput {
	return i.ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteTimeoutPtrType) ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutPtrOutput)
}

type RouteSpecHttp2RouteTimeoutOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteTimeout)(nil)).Elem()
}

func (o RouteSpecHttp2RouteTimeoutOutput) ToRouteSpecHttp2RouteTimeoutOutput() RouteSpecHttp2RouteTimeoutOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutOutput) ToRouteSpecHttp2RouteTimeoutOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutOutput) ToRouteSpecHttp2RouteTimeoutPtrOutput() RouteSpecHttp2RouteTimeoutPtrOutput {
	return o.ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteTimeoutOutput) ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteTimeout) *RouteSpecHttp2RouteTimeout {
		return &v
	}).(RouteSpecHttp2RouteTimeoutPtrOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecHttp2RouteTimeoutOutput) Idle() RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteTimeout) *RouteSpecHttp2RouteTimeoutIdle { return v.Idle }).(RouteSpecHttp2RouteTimeoutIdlePtrOutput)
}

// Per request timeout.
func (o RouteSpecHttp2RouteTimeoutOutput) PerRequest() RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteTimeout) *RouteSpecHttp2RouteTimeoutPerRequest { return v.PerRequest }).(RouteSpecHttp2RouteTimeoutPerRequestPtrOutput)
}

type RouteSpecHttp2RouteTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteTimeout)(nil)).Elem()
}

func (o RouteSpecHttp2RouteTimeoutPtrOutput) ToRouteSpecHttp2RouteTimeoutPtrOutput() RouteSpecHttp2RouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutPtrOutput) ToRouteSpecHttp2RouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutPtrOutput) Elem() RouteSpecHttp2RouteTimeoutOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeout) RouteSpecHttp2RouteTimeout {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteTimeout
		return ret
	}).(RouteSpecHttp2RouteTimeoutOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecHttp2RouteTimeoutPtrOutput) Idle() RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeout) *RouteSpecHttp2RouteTimeoutIdle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(RouteSpecHttp2RouteTimeoutIdlePtrOutput)
}

// Per request timeout.
func (o RouteSpecHttp2RouteTimeoutPtrOutput) PerRequest() RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeout) *RouteSpecHttp2RouteTimeoutPerRequest {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(RouteSpecHttp2RouteTimeoutPerRequestPtrOutput)
}

type RouteSpecHttp2RouteTimeoutIdle struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// RouteSpecHttp2RouteTimeoutIdleInput is an input type that accepts RouteSpecHttp2RouteTimeoutIdleArgs and RouteSpecHttp2RouteTimeoutIdleOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteTimeoutIdleInput` via:
//
//	RouteSpecHttp2RouteTimeoutIdleArgs{...}
type RouteSpecHttp2RouteTimeoutIdleInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteTimeoutIdleOutput() RouteSpecHttp2RouteTimeoutIdleOutput
	ToRouteSpecHttp2RouteTimeoutIdleOutputWithContext(context.Context) RouteSpecHttp2RouteTimeoutIdleOutput
}

type RouteSpecHttp2RouteTimeoutIdleArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecHttp2RouteTimeoutIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteTimeoutIdle)(nil)).Elem()
}

func (i RouteSpecHttp2RouteTimeoutIdleArgs) ToRouteSpecHttp2RouteTimeoutIdleOutput() RouteSpecHttp2RouteTimeoutIdleOutput {
	return i.ToRouteSpecHttp2RouteTimeoutIdleOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteTimeoutIdleArgs) ToRouteSpecHttp2RouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutIdleOutput)
}

func (i RouteSpecHttp2RouteTimeoutIdleArgs) ToRouteSpecHttp2RouteTimeoutIdlePtrOutput() RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteTimeoutIdleArgs) ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutIdleOutput).ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteTimeoutIdlePtrInput is an input type that accepts RouteSpecHttp2RouteTimeoutIdleArgs, RouteSpecHttp2RouteTimeoutIdlePtr and RouteSpecHttp2RouteTimeoutIdlePtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteTimeoutIdlePtrInput` via:
//
//	        RouteSpecHttp2RouteTimeoutIdleArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttp2RouteTimeoutIdlePtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteTimeoutIdlePtrOutput() RouteSpecHttp2RouteTimeoutIdlePtrOutput
	ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(context.Context) RouteSpecHttp2RouteTimeoutIdlePtrOutput
}

type routeSpecHttp2RouteTimeoutIdlePtrType RouteSpecHttp2RouteTimeoutIdleArgs

func RouteSpecHttp2RouteTimeoutIdlePtr(v *RouteSpecHttp2RouteTimeoutIdleArgs) RouteSpecHttp2RouteTimeoutIdlePtrInput {
	return (*routeSpecHttp2RouteTimeoutIdlePtrType)(v)
}

func (*routeSpecHttp2RouteTimeoutIdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteTimeoutIdle)(nil)).Elem()
}

func (i *routeSpecHttp2RouteTimeoutIdlePtrType) ToRouteSpecHttp2RouteTimeoutIdlePtrOutput() RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteTimeoutIdlePtrType) ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutIdlePtrOutput)
}

type RouteSpecHttp2RouteTimeoutIdleOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteTimeoutIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecHttp2RouteTimeoutIdleOutput) ToRouteSpecHttp2RouteTimeoutIdleOutput() RouteSpecHttp2RouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutIdleOutput) ToRouteSpecHttp2RouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutIdleOutput) ToRouteSpecHttp2RouteTimeoutIdlePtrOutput() RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return o.ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteTimeoutIdleOutput) ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteTimeoutIdle) *RouteSpecHttp2RouteTimeoutIdle {
		return &v
	}).(RouteSpecHttp2RouteTimeoutIdlePtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttp2RouteTimeoutIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteTimeoutIdle) string { return v.Unit }).(pulumi.StringOutput)
}

// Number of time units. Minimum value of `0`.
func (o RouteSpecHttp2RouteTimeoutIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteTimeoutIdle) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecHttp2RouteTimeoutIdlePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteTimeoutIdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecHttp2RouteTimeoutIdlePtrOutput) ToRouteSpecHttp2RouteTimeoutIdlePtrOutput() RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutIdlePtrOutput) ToRouteSpecHttp2RouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutIdlePtrOutput) Elem() RouteSpecHttp2RouteTimeoutIdleOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeoutIdle) RouteSpecHttp2RouteTimeoutIdle {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteTimeoutIdle
		return ret
	}).(RouteSpecHttp2RouteTimeoutIdleOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttp2RouteTimeoutIdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeoutIdle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Number of time units. Minimum value of `0`.
func (o RouteSpecHttp2RouteTimeoutIdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeoutIdle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttp2RouteTimeoutPerRequest struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// RouteSpecHttp2RouteTimeoutPerRequestInput is an input type that accepts RouteSpecHttp2RouteTimeoutPerRequestArgs and RouteSpecHttp2RouteTimeoutPerRequestOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteTimeoutPerRequestInput` via:
//
//	RouteSpecHttp2RouteTimeoutPerRequestArgs{...}
type RouteSpecHttp2RouteTimeoutPerRequestInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteTimeoutPerRequestOutput() RouteSpecHttp2RouteTimeoutPerRequestOutput
	ToRouteSpecHttp2RouteTimeoutPerRequestOutputWithContext(context.Context) RouteSpecHttp2RouteTimeoutPerRequestOutput
}

type RouteSpecHttp2RouteTimeoutPerRequestArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecHttp2RouteTimeoutPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteTimeoutPerRequest)(nil)).Elem()
}

func (i RouteSpecHttp2RouteTimeoutPerRequestArgs) ToRouteSpecHttp2RouteTimeoutPerRequestOutput() RouteSpecHttp2RouteTimeoutPerRequestOutput {
	return i.ToRouteSpecHttp2RouteTimeoutPerRequestOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteTimeoutPerRequestArgs) ToRouteSpecHttp2RouteTimeoutPerRequestOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutPerRequestOutput)
}

func (i RouteSpecHttp2RouteTimeoutPerRequestArgs) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutput() RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return i.ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttp2RouteTimeoutPerRequestArgs) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutPerRequestOutput).ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(ctx)
}

// RouteSpecHttp2RouteTimeoutPerRequestPtrInput is an input type that accepts RouteSpecHttp2RouteTimeoutPerRequestArgs, RouteSpecHttp2RouteTimeoutPerRequestPtr and RouteSpecHttp2RouteTimeoutPerRequestPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttp2RouteTimeoutPerRequestPtrInput` via:
//
//	        RouteSpecHttp2RouteTimeoutPerRequestArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttp2RouteTimeoutPerRequestPtrInput interface {
	pulumi.Input

	ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutput() RouteSpecHttp2RouteTimeoutPerRequestPtrOutput
	ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(context.Context) RouteSpecHttp2RouteTimeoutPerRequestPtrOutput
}

type routeSpecHttp2RouteTimeoutPerRequestPtrType RouteSpecHttp2RouteTimeoutPerRequestArgs

func RouteSpecHttp2RouteTimeoutPerRequestPtr(v *RouteSpecHttp2RouteTimeoutPerRequestArgs) RouteSpecHttp2RouteTimeoutPerRequestPtrInput {
	return (*routeSpecHttp2RouteTimeoutPerRequestPtrType)(v)
}

func (*routeSpecHttp2RouteTimeoutPerRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteTimeoutPerRequest)(nil)).Elem()
}

func (i *routeSpecHttp2RouteTimeoutPerRequestPtrType) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutput() RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return i.ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttp2RouteTimeoutPerRequestPtrType) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttp2RouteTimeoutPerRequestPtrOutput)
}

type RouteSpecHttp2RouteTimeoutPerRequestOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteTimeoutPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttp2RouteTimeoutPerRequest)(nil)).Elem()
}

func (o RouteSpecHttp2RouteTimeoutPerRequestOutput) ToRouteSpecHttp2RouteTimeoutPerRequestOutput() RouteSpecHttp2RouteTimeoutPerRequestOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutPerRequestOutput) ToRouteSpecHttp2RouteTimeoutPerRequestOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPerRequestOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutPerRequestOutput) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutput() RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return o.ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttp2RouteTimeoutPerRequestOutput) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttp2RouteTimeoutPerRequest) *RouteSpecHttp2RouteTimeoutPerRequest {
		return &v
	}).(RouteSpecHttp2RouteTimeoutPerRequestPtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttp2RouteTimeoutPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteTimeoutPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

// Number of time units. Minimum value of `0`.
func (o RouteSpecHttp2RouteTimeoutPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttp2RouteTimeoutPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecHttp2RouteTimeoutPerRequestPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttp2RouteTimeoutPerRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttp2RouteTimeoutPerRequest)(nil)).Elem()
}

func (o RouteSpecHttp2RouteTimeoutPerRequestPtrOutput) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutput() RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutPerRequestPtrOutput) ToRouteSpecHttp2RouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttp2RouteTimeoutPerRequestPtrOutput {
	return o
}

func (o RouteSpecHttp2RouteTimeoutPerRequestPtrOutput) Elem() RouteSpecHttp2RouteTimeoutPerRequestOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeoutPerRequest) RouteSpecHttp2RouteTimeoutPerRequest {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttp2RouteTimeoutPerRequest
		return ret
	}).(RouteSpecHttp2RouteTimeoutPerRequestOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttp2RouteTimeoutPerRequestPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeoutPerRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Number of time units. Minimum value of `0`.
func (o RouteSpecHttp2RouteTimeoutPerRequestPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttp2RouteTimeoutPerRequest) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttpRoute struct {
	// Action to take if a match is determined.
	Action RouteSpecHttpRouteAction `pulumi:"action"`
	// Criteria for determining an HTTP request match.
	Match RouteSpecHttpRouteMatch `pulumi:"match"`
	// Retry policy.
	RetryPolicy *RouteSpecHttpRouteRetryPolicy `pulumi:"retryPolicy"`
	// Types of timeouts.
	Timeout *RouteSpecHttpRouteTimeout `pulumi:"timeout"`
}

// RouteSpecHttpRouteInput is an input type that accepts RouteSpecHttpRouteArgs and RouteSpecHttpRouteOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteInput` via:
//
//	RouteSpecHttpRouteArgs{...}
type RouteSpecHttpRouteInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteOutput() RouteSpecHttpRouteOutput
	ToRouteSpecHttpRouteOutputWithContext(context.Context) RouteSpecHttpRouteOutput
}

type RouteSpecHttpRouteArgs struct {
	// Action to take if a match is determined.
	Action RouteSpecHttpRouteActionInput `pulumi:"action"`
	// Criteria for determining an HTTP request match.
	Match RouteSpecHttpRouteMatchInput `pulumi:"match"`
	// Retry policy.
	RetryPolicy RouteSpecHttpRouteRetryPolicyPtrInput `pulumi:"retryPolicy"`
	// Types of timeouts.
	Timeout RouteSpecHttpRouteTimeoutPtrInput `pulumi:"timeout"`
}

func (RouteSpecHttpRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRoute)(nil)).Elem()
}

func (i RouteSpecHttpRouteArgs) ToRouteSpecHttpRouteOutput() RouteSpecHttpRouteOutput {
	return i.ToRouteSpecHttpRouteOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteArgs) ToRouteSpecHttpRouteOutputWithContext(ctx context.Context) RouteSpecHttpRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteOutput)
}

func (i RouteSpecHttpRouteArgs) ToRouteSpecHttpRoutePtrOutput() RouteSpecHttpRoutePtrOutput {
	return i.ToRouteSpecHttpRoutePtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteArgs) ToRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) RouteSpecHttpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteOutput).ToRouteSpecHttpRoutePtrOutputWithContext(ctx)
}

// RouteSpecHttpRoutePtrInput is an input type that accepts RouteSpecHttpRouteArgs, RouteSpecHttpRoutePtr and RouteSpecHttpRoutePtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRoutePtrInput` via:
//
//	        RouteSpecHttpRouteArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttpRoutePtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRoutePtrOutput() RouteSpecHttpRoutePtrOutput
	ToRouteSpecHttpRoutePtrOutputWithContext(context.Context) RouteSpecHttpRoutePtrOutput
}

type routeSpecHttpRoutePtrType RouteSpecHttpRouteArgs

func RouteSpecHttpRoutePtr(v *RouteSpecHttpRouteArgs) RouteSpecHttpRoutePtrInput {
	return (*routeSpecHttpRoutePtrType)(v)
}

func (*routeSpecHttpRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRoute)(nil)).Elem()
}

func (i *routeSpecHttpRoutePtrType) ToRouteSpecHttpRoutePtrOutput() RouteSpecHttpRoutePtrOutput {
	return i.ToRouteSpecHttpRoutePtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRoutePtrType) ToRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) RouteSpecHttpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRoutePtrOutput)
}

type RouteSpecHttpRouteOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRoute)(nil)).Elem()
}

func (o RouteSpecHttpRouteOutput) ToRouteSpecHttpRouteOutput() RouteSpecHttpRouteOutput {
	return o
}

func (o RouteSpecHttpRouteOutput) ToRouteSpecHttpRouteOutputWithContext(ctx context.Context) RouteSpecHttpRouteOutput {
	return o
}

func (o RouteSpecHttpRouteOutput) ToRouteSpecHttpRoutePtrOutput() RouteSpecHttpRoutePtrOutput {
	return o.ToRouteSpecHttpRoutePtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteOutput) ToRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) RouteSpecHttpRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRoute) *RouteSpecHttpRoute {
		return &v
	}).(RouteSpecHttpRoutePtrOutput)
}

// Action to take if a match is determined.
func (o RouteSpecHttpRouteOutput) Action() RouteSpecHttpRouteActionOutput {
	return o.ApplyT(func(v RouteSpecHttpRoute) RouteSpecHttpRouteAction { return v.Action }).(RouteSpecHttpRouteActionOutput)
}

// Criteria for determining an HTTP request match.
func (o RouteSpecHttpRouteOutput) Match() RouteSpecHttpRouteMatchOutput {
	return o.ApplyT(func(v RouteSpecHttpRoute) RouteSpecHttpRouteMatch { return v.Match }).(RouteSpecHttpRouteMatchOutput)
}

// Retry policy.
func (o RouteSpecHttpRouteOutput) RetryPolicy() RouteSpecHttpRouteRetryPolicyPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRoute) *RouteSpecHttpRouteRetryPolicy { return v.RetryPolicy }).(RouteSpecHttpRouteRetryPolicyPtrOutput)
}

// Types of timeouts.
func (o RouteSpecHttpRouteOutput) Timeout() RouteSpecHttpRouteTimeoutPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRoute) *RouteSpecHttpRouteTimeout { return v.Timeout }).(RouteSpecHttpRouteTimeoutPtrOutput)
}

type RouteSpecHttpRoutePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRoute)(nil)).Elem()
}

func (o RouteSpecHttpRoutePtrOutput) ToRouteSpecHttpRoutePtrOutput() RouteSpecHttpRoutePtrOutput {
	return o
}

func (o RouteSpecHttpRoutePtrOutput) ToRouteSpecHttpRoutePtrOutputWithContext(ctx context.Context) RouteSpecHttpRoutePtrOutput {
	return o
}

func (o RouteSpecHttpRoutePtrOutput) Elem() RouteSpecHttpRouteOutput {
	return o.ApplyT(func(v *RouteSpecHttpRoute) RouteSpecHttpRoute {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRoute
		return ret
	}).(RouteSpecHttpRouteOutput)
}

// Action to take if a match is determined.
func (o RouteSpecHttpRoutePtrOutput) Action() RouteSpecHttpRouteActionPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRoute) *RouteSpecHttpRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(RouteSpecHttpRouteActionPtrOutput)
}

// Criteria for determining an HTTP request match.
func (o RouteSpecHttpRoutePtrOutput) Match() RouteSpecHttpRouteMatchPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRoute) *RouteSpecHttpRouteMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(RouteSpecHttpRouteMatchPtrOutput)
}

// Retry policy.
func (o RouteSpecHttpRoutePtrOutput) RetryPolicy() RouteSpecHttpRouteRetryPolicyPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRoute) *RouteSpecHttpRouteRetryPolicy {
		if v == nil {
			return nil
		}
		return v.RetryPolicy
	}).(RouteSpecHttpRouteRetryPolicyPtrOutput)
}

// Types of timeouts.
func (o RouteSpecHttpRoutePtrOutput) Timeout() RouteSpecHttpRouteTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRoute) *RouteSpecHttpRouteTimeout {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(RouteSpecHttpRouteTimeoutPtrOutput)
}

type RouteSpecHttpRouteAction struct {
	// Targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets []RouteSpecHttpRouteActionWeightedTarget `pulumi:"weightedTargets"`
}

// RouteSpecHttpRouteActionInput is an input type that accepts RouteSpecHttpRouteActionArgs and RouteSpecHttpRouteActionOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteActionInput` via:
//
//	RouteSpecHttpRouteActionArgs{...}
type RouteSpecHttpRouteActionInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteActionOutput() RouteSpecHttpRouteActionOutput
	ToRouteSpecHttpRouteActionOutputWithContext(context.Context) RouteSpecHttpRouteActionOutput
}

type RouteSpecHttpRouteActionArgs struct {
	// Targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets RouteSpecHttpRouteActionWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (RouteSpecHttpRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteAction)(nil)).Elem()
}

func (i RouteSpecHttpRouteActionArgs) ToRouteSpecHttpRouteActionOutput() RouteSpecHttpRouteActionOutput {
	return i.ToRouteSpecHttpRouteActionOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteActionArgs) ToRouteSpecHttpRouteActionOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteActionOutput)
}

func (i RouteSpecHttpRouteActionArgs) ToRouteSpecHttpRouteActionPtrOutput() RouteSpecHttpRouteActionPtrOutput {
	return i.ToRouteSpecHttpRouteActionPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteActionArgs) ToRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteActionOutput).ToRouteSpecHttpRouteActionPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteActionPtrInput is an input type that accepts RouteSpecHttpRouteActionArgs, RouteSpecHttpRouteActionPtr and RouteSpecHttpRouteActionPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteActionPtrInput` via:
//
//	        RouteSpecHttpRouteActionArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttpRouteActionPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteActionPtrOutput() RouteSpecHttpRouteActionPtrOutput
	ToRouteSpecHttpRouteActionPtrOutputWithContext(context.Context) RouteSpecHttpRouteActionPtrOutput
}

type routeSpecHttpRouteActionPtrType RouteSpecHttpRouteActionArgs

func RouteSpecHttpRouteActionPtr(v *RouteSpecHttpRouteActionArgs) RouteSpecHttpRouteActionPtrInput {
	return (*routeSpecHttpRouteActionPtrType)(v)
}

func (*routeSpecHttpRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteAction)(nil)).Elem()
}

func (i *routeSpecHttpRouteActionPtrType) ToRouteSpecHttpRouteActionPtrOutput() RouteSpecHttpRouteActionPtrOutput {
	return i.ToRouteSpecHttpRouteActionPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteActionPtrType) ToRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteActionPtrOutput)
}

type RouteSpecHttpRouteActionOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteAction)(nil)).Elem()
}

func (o RouteSpecHttpRouteActionOutput) ToRouteSpecHttpRouteActionOutput() RouteSpecHttpRouteActionOutput {
	return o
}

func (o RouteSpecHttpRouteActionOutput) ToRouteSpecHttpRouteActionOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionOutput {
	return o
}

func (o RouteSpecHttpRouteActionOutput) ToRouteSpecHttpRouteActionPtrOutput() RouteSpecHttpRouteActionPtrOutput {
	return o.ToRouteSpecHttpRouteActionPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteActionOutput) ToRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteAction) *RouteSpecHttpRouteAction {
		return &v
	}).(RouteSpecHttpRouteActionPtrOutput)
}

// Targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecHttpRouteActionOutput) WeightedTargets() RouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteAction) []RouteSpecHttpRouteActionWeightedTarget { return v.WeightedTargets }).(RouteSpecHttpRouteActionWeightedTargetArrayOutput)
}

type RouteSpecHttpRouteActionPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteAction)(nil)).Elem()
}

func (o RouteSpecHttpRouteActionPtrOutput) ToRouteSpecHttpRouteActionPtrOutput() RouteSpecHttpRouteActionPtrOutput {
	return o
}

func (o RouteSpecHttpRouteActionPtrOutput) ToRouteSpecHttpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionPtrOutput {
	return o
}

func (o RouteSpecHttpRouteActionPtrOutput) Elem() RouteSpecHttpRouteActionOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteAction) RouteSpecHttpRouteAction {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteAction
		return ret
	}).(RouteSpecHttpRouteActionOutput)
}

// Targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecHttpRouteActionPtrOutput) WeightedTargets() RouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteAction) []RouteSpecHttpRouteActionWeightedTarget {
		if v == nil {
			return nil
		}
		return v.WeightedTargets
	}).(RouteSpecHttpRouteActionWeightedTargetArrayOutput)
}

type RouteSpecHttpRouteActionWeightedTarget struct {
	// The targeted port of the weighted object.
	Port *int `pulumi:"port"`
	// Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode string `pulumi:"virtualNode"`
	// Relative weight of the weighted target. An integer between 0 and 100.
	Weight int `pulumi:"weight"`
}

// RouteSpecHttpRouteActionWeightedTargetInput is an input type that accepts RouteSpecHttpRouteActionWeightedTargetArgs and RouteSpecHttpRouteActionWeightedTargetOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteActionWeightedTargetInput` via:
//
//	RouteSpecHttpRouteActionWeightedTargetArgs{...}
type RouteSpecHttpRouteActionWeightedTargetInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteActionWeightedTargetOutput() RouteSpecHttpRouteActionWeightedTargetOutput
	ToRouteSpecHttpRouteActionWeightedTargetOutputWithContext(context.Context) RouteSpecHttpRouteActionWeightedTargetOutput
}

type RouteSpecHttpRouteActionWeightedTargetArgs struct {
	// The targeted port of the weighted object.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode pulumi.StringInput `pulumi:"virtualNode"`
	// Relative weight of the weighted target. An integer between 0 and 100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (RouteSpecHttpRouteActionWeightedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecHttpRouteActionWeightedTargetArgs) ToRouteSpecHttpRouteActionWeightedTargetOutput() RouteSpecHttpRouteActionWeightedTargetOutput {
	return i.ToRouteSpecHttpRouteActionWeightedTargetOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteActionWeightedTargetArgs) ToRouteSpecHttpRouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionWeightedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteActionWeightedTargetOutput)
}

// RouteSpecHttpRouteActionWeightedTargetArrayInput is an input type that accepts RouteSpecHttpRouteActionWeightedTargetArray and RouteSpecHttpRouteActionWeightedTargetArrayOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteActionWeightedTargetArrayInput` via:
//
//	RouteSpecHttpRouteActionWeightedTargetArray{ RouteSpecHttpRouteActionWeightedTargetArgs{...} }
type RouteSpecHttpRouteActionWeightedTargetArrayInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteActionWeightedTargetArrayOutput() RouteSpecHttpRouteActionWeightedTargetArrayOutput
	ToRouteSpecHttpRouteActionWeightedTargetArrayOutputWithContext(context.Context) RouteSpecHttpRouteActionWeightedTargetArrayOutput
}

type RouteSpecHttpRouteActionWeightedTargetArray []RouteSpecHttpRouteActionWeightedTargetInput

func (RouteSpecHttpRouteActionWeightedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttpRouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecHttpRouteActionWeightedTargetArray) ToRouteSpecHttpRouteActionWeightedTargetArrayOutput() RouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return i.ToRouteSpecHttpRouteActionWeightedTargetArrayOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteActionWeightedTargetArray) ToRouteSpecHttpRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteActionWeightedTargetArrayOutput)
}

type RouteSpecHttpRouteActionWeightedTargetOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteActionWeightedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecHttpRouteActionWeightedTargetOutput) ToRouteSpecHttpRouteActionWeightedTargetOutput() RouteSpecHttpRouteActionWeightedTargetOutput {
	return o
}

func (o RouteSpecHttpRouteActionWeightedTargetOutput) ToRouteSpecHttpRouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionWeightedTargetOutput {
	return o
}

// The targeted port of the weighted object.
func (o RouteSpecHttpRouteActionWeightedTargetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteActionWeightedTarget) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteActionWeightedTargetOutput) VirtualNode() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteActionWeightedTarget) string { return v.VirtualNode }).(pulumi.StringOutput)
}

// Relative weight of the weighted target. An integer between 0 and 100.
func (o RouteSpecHttpRouteActionWeightedTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteActionWeightedTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type RouteSpecHttpRouteActionWeightedTargetArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteActionWeightedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttpRouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecHttpRouteActionWeightedTargetArrayOutput) ToRouteSpecHttpRouteActionWeightedTargetArrayOutput() RouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecHttpRouteActionWeightedTargetArrayOutput) ToRouteSpecHttpRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecHttpRouteActionWeightedTargetArrayOutput) Index(i pulumi.IntInput) RouteSpecHttpRouteActionWeightedTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecHttpRouteActionWeightedTarget {
		return vs[0].([]RouteSpecHttpRouteActionWeightedTarget)[vs[1].(int)]
	}).(RouteSpecHttpRouteActionWeightedTargetOutput)
}

type RouteSpecHttpRouteMatch struct {
	// Client request headers to match on.
	Headers []RouteSpecHttpRouteMatchHeader `pulumi:"headers"`
	// Client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
	Method *string `pulumi:"method"`
	// Client request path to match on.
	Path *RouteSpecHttpRouteMatchPath `pulumi:"path"`
	// The port number to match from the request.
	Port *int `pulumi:"port"`
	// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix *string `pulumi:"prefix"`
	// Client request query parameters to match on.
	QueryParameters []RouteSpecHttpRouteMatchQueryParameter `pulumi:"queryParameters"`
	// Client request header scheme to match on. Valid values: `http`, `https`.
	Scheme *string `pulumi:"scheme"`
}

// RouteSpecHttpRouteMatchInput is an input type that accepts RouteSpecHttpRouteMatchArgs and RouteSpecHttpRouteMatchOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchInput` via:
//
//	RouteSpecHttpRouteMatchArgs{...}
type RouteSpecHttpRouteMatchInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchOutput() RouteSpecHttpRouteMatchOutput
	ToRouteSpecHttpRouteMatchOutputWithContext(context.Context) RouteSpecHttpRouteMatchOutput
}

type RouteSpecHttpRouteMatchArgs struct {
	// Client request headers to match on.
	Headers RouteSpecHttpRouteMatchHeaderArrayInput `pulumi:"headers"`
	// Client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Client request path to match on.
	Path RouteSpecHttpRouteMatchPathPtrInput `pulumi:"path"`
	// The port number to match from the request.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Client request query parameters to match on.
	QueryParameters RouteSpecHttpRouteMatchQueryParameterArrayInput `pulumi:"queryParameters"`
	// Client request header scheme to match on. Valid values: `http`, `https`.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (RouteSpecHttpRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatch)(nil)).Elem()
}

func (i RouteSpecHttpRouteMatchArgs) ToRouteSpecHttpRouteMatchOutput() RouteSpecHttpRouteMatchOutput {
	return i.ToRouteSpecHttpRouteMatchOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchArgs) ToRouteSpecHttpRouteMatchOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchOutput)
}

func (i RouteSpecHttpRouteMatchArgs) ToRouteSpecHttpRouteMatchPtrOutput() RouteSpecHttpRouteMatchPtrOutput {
	return i.ToRouteSpecHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchArgs) ToRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchOutput).ToRouteSpecHttpRouteMatchPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteMatchPtrInput is an input type that accepts RouteSpecHttpRouteMatchArgs, RouteSpecHttpRouteMatchPtr and RouteSpecHttpRouteMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchPtrInput` via:
//
//	        RouteSpecHttpRouteMatchArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttpRouteMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchPtrOutput() RouteSpecHttpRouteMatchPtrOutput
	ToRouteSpecHttpRouteMatchPtrOutputWithContext(context.Context) RouteSpecHttpRouteMatchPtrOutput
}

type routeSpecHttpRouteMatchPtrType RouteSpecHttpRouteMatchArgs

func RouteSpecHttpRouteMatchPtr(v *RouteSpecHttpRouteMatchArgs) RouteSpecHttpRouteMatchPtrInput {
	return (*routeSpecHttpRouteMatchPtrType)(v)
}

func (*routeSpecHttpRouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatch)(nil)).Elem()
}

func (i *routeSpecHttpRouteMatchPtrType) ToRouteSpecHttpRouteMatchPtrOutput() RouteSpecHttpRouteMatchPtrOutput {
	return i.ToRouteSpecHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteMatchPtrType) ToRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchPtrOutput)
}

type RouteSpecHttpRouteMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatch)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchOutput) ToRouteSpecHttpRouteMatchOutput() RouteSpecHttpRouteMatchOutput {
	return o
}

func (o RouteSpecHttpRouteMatchOutput) ToRouteSpecHttpRouteMatchOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchOutput {
	return o
}

func (o RouteSpecHttpRouteMatchOutput) ToRouteSpecHttpRouteMatchPtrOutput() RouteSpecHttpRouteMatchPtrOutput {
	return o.ToRouteSpecHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteMatchOutput) ToRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteMatch) *RouteSpecHttpRouteMatch {
		return &v
	}).(RouteSpecHttpRouteMatchPtrOutput)
}

// Client request headers to match on.
func (o RouteSpecHttpRouteMatchOutput) Headers() RouteSpecHttpRouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatch) []RouteSpecHttpRouteMatchHeader { return v.Headers }).(RouteSpecHttpRouteMatchHeaderArrayOutput)
}

// Client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
func (o RouteSpecHttpRouteMatchOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatch) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Client request path to match on.
func (o RouteSpecHttpRouteMatchOutput) Path() RouteSpecHttpRouteMatchPathPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatch) *RouteSpecHttpRouteMatchPath { return v.Path }).(RouteSpecHttpRouteMatchPathPtrOutput)
}

// The port number to match from the request.
func (o RouteSpecHttpRouteMatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttpRouteMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Client request query parameters to match on.
func (o RouteSpecHttpRouteMatchOutput) QueryParameters() RouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatch) []RouteSpecHttpRouteMatchQueryParameter { return v.QueryParameters }).(RouteSpecHttpRouteMatchQueryParameterArrayOutput)
}

// Client request header scheme to match on. Valid values: `http`, `https`.
func (o RouteSpecHttpRouteMatchOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatch) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type RouteSpecHttpRouteMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatch)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchPtrOutput) ToRouteSpecHttpRouteMatchPtrOutput() RouteSpecHttpRouteMatchPtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchPtrOutput) ToRouteSpecHttpRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchPtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchPtrOutput) Elem() RouteSpecHttpRouteMatchOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatch) RouteSpecHttpRouteMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteMatch
		return ret
	}).(RouteSpecHttpRouteMatchOutput)
}

// Client request headers to match on.
func (o RouteSpecHttpRouteMatchPtrOutput) Headers() RouteSpecHttpRouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatch) []RouteSpecHttpRouteMatchHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(RouteSpecHttpRouteMatchHeaderArrayOutput)
}

// Client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
func (o RouteSpecHttpRouteMatchPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Client request path to match on.
func (o RouteSpecHttpRouteMatchPtrOutput) Path() RouteSpecHttpRouteMatchPathPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatch) *RouteSpecHttpRouteMatchPath {
		if v == nil {
			return nil
		}
		return v.Path
	}).(RouteSpecHttpRouteMatchPathPtrOutput)
}

// The port number to match from the request.
func (o RouteSpecHttpRouteMatchPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatch) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttpRouteMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Client request query parameters to match on.
func (o RouteSpecHttpRouteMatchPtrOutput) QueryParameters() RouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatch) []RouteSpecHttpRouteMatchQueryParameter {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(RouteSpecHttpRouteMatchQueryParameterArrayOutput)
}

// Client request header scheme to match on. Valid values: `http`, `https`.
func (o RouteSpecHttpRouteMatchPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

type RouteSpecHttpRouteMatchHeader struct {
	// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
	Invert *bool `pulumi:"invert"`
	// Method and value to match the header value sent with a request. Specify one match method.
	Match *RouteSpecHttpRouteMatchHeaderMatch `pulumi:"match"`
	// Name for the HTTP header in the client request that will be matched on.
	Name string `pulumi:"name"`
}

// RouteSpecHttpRouteMatchHeaderInput is an input type that accepts RouteSpecHttpRouteMatchHeaderArgs and RouteSpecHttpRouteMatchHeaderOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchHeaderInput` via:
//
//	RouteSpecHttpRouteMatchHeaderArgs{...}
type RouteSpecHttpRouteMatchHeaderInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchHeaderOutput() RouteSpecHttpRouteMatchHeaderOutput
	ToRouteSpecHttpRouteMatchHeaderOutputWithContext(context.Context) RouteSpecHttpRouteMatchHeaderOutput
}

type RouteSpecHttpRouteMatchHeaderArgs struct {
	// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
	Invert pulumi.BoolPtrInput `pulumi:"invert"`
	// Method and value to match the header value sent with a request. Specify one match method.
	Match RouteSpecHttpRouteMatchHeaderMatchPtrInput `pulumi:"match"`
	// Name for the HTTP header in the client request that will be matched on.
	Name pulumi.StringInput `pulumi:"name"`
}

func (RouteSpecHttpRouteMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (i RouteSpecHttpRouteMatchHeaderArgs) ToRouteSpecHttpRouteMatchHeaderOutput() RouteSpecHttpRouteMatchHeaderOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchHeaderArgs) ToRouteSpecHttpRouteMatchHeaderOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderOutput)
}

// RouteSpecHttpRouteMatchHeaderArrayInput is an input type that accepts RouteSpecHttpRouteMatchHeaderArray and RouteSpecHttpRouteMatchHeaderArrayOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchHeaderArrayInput` via:
//
//	RouteSpecHttpRouteMatchHeaderArray{ RouteSpecHttpRouteMatchHeaderArgs{...} }
type RouteSpecHttpRouteMatchHeaderArrayInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchHeaderArrayOutput() RouteSpecHttpRouteMatchHeaderArrayOutput
	ToRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(context.Context) RouteSpecHttpRouteMatchHeaderArrayOutput
}

type RouteSpecHttpRouteMatchHeaderArray []RouteSpecHttpRouteMatchHeaderInput

func (RouteSpecHttpRouteMatchHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (i RouteSpecHttpRouteMatchHeaderArray) ToRouteSpecHttpRouteMatchHeaderArrayOutput() RouteSpecHttpRouteMatchHeaderArrayOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchHeaderArray) ToRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderArrayOutput)
}

type RouteSpecHttpRouteMatchHeaderOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchHeaderOutput) ToRouteSpecHttpRouteMatchHeaderOutput() RouteSpecHttpRouteMatchHeaderOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderOutput) ToRouteSpecHttpRouteMatchHeaderOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderOutput {
	return o
}

// If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
func (o RouteSpecHttpRouteMatchHeaderOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeader) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

// Method and value to match the header value sent with a request. Specify one match method.
func (o RouteSpecHttpRouteMatchHeaderOutput) Match() RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeader) *RouteSpecHttpRouteMatchHeaderMatch { return v.Match }).(RouteSpecHttpRouteMatchHeaderMatchPtrOutput)
}

// Name for the HTTP header in the client request that will be matched on.
func (o RouteSpecHttpRouteMatchHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeader) string { return v.Name }).(pulumi.StringOutput)
}

type RouteSpecHttpRouteMatchHeaderArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchHeaderArrayOutput) ToRouteSpecHttpRouteMatchHeaderArrayOutput() RouteSpecHttpRouteMatchHeaderArrayOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderArrayOutput) ToRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderArrayOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderArrayOutput) Index(i pulumi.IntInput) RouteSpecHttpRouteMatchHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecHttpRouteMatchHeader {
		return vs[0].([]RouteSpecHttpRouteMatchHeader)[vs[1].(int)]
	}).(RouteSpecHttpRouteMatchHeaderOutput)
}

type RouteSpecHttpRouteMatchHeaderMatch struct {
	// The exact path to match on.
	Exact *string `pulumi:"exact"`
	// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix *string `pulumi:"prefix"`
	// Object that specifies the range of numbers that the value sent by the client must be included in.
	Range *RouteSpecHttpRouteMatchHeaderMatchRange `pulumi:"range"`
	// The regex used to match the path.
	Regex *string `pulumi:"regex"`
	// Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
	Suffix *string `pulumi:"suffix"`
}

// RouteSpecHttpRouteMatchHeaderMatchInput is an input type that accepts RouteSpecHttpRouteMatchHeaderMatchArgs and RouteSpecHttpRouteMatchHeaderMatchOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchHeaderMatchInput` via:
//
//	RouteSpecHttpRouteMatchHeaderMatchArgs{...}
type RouteSpecHttpRouteMatchHeaderMatchInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchHeaderMatchOutput() RouteSpecHttpRouteMatchHeaderMatchOutput
	ToRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(context.Context) RouteSpecHttpRouteMatchHeaderMatchOutput
}

type RouteSpecHttpRouteMatchHeaderMatchArgs struct {
	// The exact path to match on.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
	// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Object that specifies the range of numbers that the value sent by the client must be included in.
	Range RouteSpecHttpRouteMatchHeaderMatchRangePtrInput `pulumi:"range"`
	// The regex used to match the path.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (RouteSpecHttpRouteMatchHeaderMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (i RouteSpecHttpRouteMatchHeaderMatchArgs) ToRouteSpecHttpRouteMatchHeaderMatchOutput() RouteSpecHttpRouteMatchHeaderMatchOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchHeaderMatchArgs) ToRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderMatchOutput)
}

func (i RouteSpecHttpRouteMatchHeaderMatchArgs) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutput() RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchHeaderMatchArgs) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderMatchOutput).ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteMatchHeaderMatchPtrInput is an input type that accepts RouteSpecHttpRouteMatchHeaderMatchArgs, RouteSpecHttpRouteMatchHeaderMatchPtr and RouteSpecHttpRouteMatchHeaderMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchHeaderMatchPtrInput` via:
//
//	        RouteSpecHttpRouteMatchHeaderMatchArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttpRouteMatchHeaderMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchHeaderMatchPtrOutput() RouteSpecHttpRouteMatchHeaderMatchPtrOutput
	ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(context.Context) RouteSpecHttpRouteMatchHeaderMatchPtrOutput
}

type routeSpecHttpRouteMatchHeaderMatchPtrType RouteSpecHttpRouteMatchHeaderMatchArgs

func RouteSpecHttpRouteMatchHeaderMatchPtr(v *RouteSpecHttpRouteMatchHeaderMatchArgs) RouteSpecHttpRouteMatchHeaderMatchPtrInput {
	return (*routeSpecHttpRouteMatchHeaderMatchPtrType)(v)
}

func (*routeSpecHttpRouteMatchHeaderMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (i *routeSpecHttpRouteMatchHeaderMatchPtrType) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutput() RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteMatchHeaderMatchPtrType) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderMatchPtrOutput)
}

type RouteSpecHttpRouteMatchHeaderMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchHeaderMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchHeaderMatchOutput) ToRouteSpecHttpRouteMatchHeaderMatchOutput() RouteSpecHttpRouteMatchHeaderMatchOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchOutput) ToRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchOutput) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutput() RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o.ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteMatchHeaderMatchOutput) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteMatchHeaderMatch) *RouteSpecHttpRouteMatchHeaderMatch {
		return &v
	}).(RouteSpecHttpRouteMatchHeaderMatchPtrOutput)
}

// The exact path to match on.
func (o RouteSpecHttpRouteMatchHeaderMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeaderMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttpRouteMatchHeaderMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeaderMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Object that specifies the range of numbers that the value sent by the client must be included in.
func (o RouteSpecHttpRouteMatchHeaderMatchOutput) Range() RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeaderMatch) *RouteSpecHttpRouteMatchHeaderMatchRange { return v.Range }).(RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput)
}

// The regex used to match the path.
func (o RouteSpecHttpRouteMatchHeaderMatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeaderMatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteMatchHeaderMatchOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeaderMatch) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type RouteSpecHttpRouteMatchHeaderMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchHeaderMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutput() RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) ToRouteSpecHttpRouteMatchHeaderMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchPtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) Elem() RouteSpecHttpRouteMatchHeaderMatchOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatch) RouteSpecHttpRouteMatchHeaderMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteMatchHeaderMatch
		return ret
	}).(RouteSpecHttpRouteMatchHeaderMatchOutput)
}

// The exact path to match on.
func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Object that specifies the range of numbers that the value sent by the client must be included in.
func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) Range() RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatch) *RouteSpecHttpRouteMatchHeaderMatchRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput)
}

// The regex used to match the path.
func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteMatchHeaderMatchPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type RouteSpecHttpRouteMatchHeaderMatchRange struct {
	// End of the range.
	End int `pulumi:"end"`
	// Start of the range.
	Start int `pulumi:"start"`
}

// RouteSpecHttpRouteMatchHeaderMatchRangeInput is an input type that accepts RouteSpecHttpRouteMatchHeaderMatchRangeArgs and RouteSpecHttpRouteMatchHeaderMatchRangeOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchHeaderMatchRangeInput` via:
//
//	RouteSpecHttpRouteMatchHeaderMatchRangeArgs{...}
type RouteSpecHttpRouteMatchHeaderMatchRangeInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchHeaderMatchRangeOutput() RouteSpecHttpRouteMatchHeaderMatchRangeOutput
	ToRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(context.Context) RouteSpecHttpRouteMatchHeaderMatchRangeOutput
}

type RouteSpecHttpRouteMatchHeaderMatchRangeArgs struct {
	// End of the range.
	End pulumi.IntInput `pulumi:"end"`
	// Start of the range.
	Start pulumi.IntInput `pulumi:"start"`
}

func (RouteSpecHttpRouteMatchHeaderMatchRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i RouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToRouteSpecHttpRouteMatchHeaderMatchRangeOutput() RouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderMatchRangeOutput)
}

func (i RouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderMatchRangeOutput).ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteMatchHeaderMatchRangePtrInput is an input type that accepts RouteSpecHttpRouteMatchHeaderMatchRangeArgs, RouteSpecHttpRouteMatchHeaderMatchRangePtr and RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchHeaderMatchRangePtrInput` via:
//
//	        RouteSpecHttpRouteMatchHeaderMatchRangeArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttpRouteMatchHeaderMatchRangePtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput
	ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(context.Context) RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput
}

type routeSpecHttpRouteMatchHeaderMatchRangePtrType RouteSpecHttpRouteMatchHeaderMatchRangeArgs

func RouteSpecHttpRouteMatchHeaderMatchRangePtr(v *RouteSpecHttpRouteMatchHeaderMatchRangeArgs) RouteSpecHttpRouteMatchHeaderMatchRangePtrInput {
	return (*routeSpecHttpRouteMatchHeaderMatchRangePtrType)(v)
}

func (*routeSpecHttpRouteMatchHeaderMatchRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i *routeSpecHttpRouteMatchHeaderMatchRangePtrType) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return i.ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteMatchHeaderMatchRangePtrType) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput)
}

type RouteSpecHttpRouteMatchHeaderMatchRangeOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchHeaderMatchRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToRouteSpecHttpRouteMatchHeaderMatchRangeOutput() RouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o.ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteMatchHeaderMatchRange) *RouteSpecHttpRouteMatchHeaderMatchRange {
		return &v
	}).(RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput)
}

// End of the range.
func (o RouteSpecHttpRouteMatchHeaderMatchRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeaderMatchRange) int { return v.End }).(pulumi.IntOutput)
}

// Start of the range.
func (o RouteSpecHttpRouteMatchHeaderMatchRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchHeaderMatchRange) int { return v.Start }).(pulumi.IntOutput)
}

type RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput() RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) ToRouteSpecHttpRouteMatchHeaderMatchRangePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) Elem() RouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatchRange) RouteSpecHttpRouteMatchHeaderMatchRange {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteMatchHeaderMatchRange
		return ret
	}).(RouteSpecHttpRouteMatchHeaderMatchRangeOutput)
}

// End of the range.
func (o RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.IntPtrOutput)
}

// Start of the range.
func (o RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchHeaderMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttpRouteMatchPath struct {
	// Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
	Exact *string `pulumi:"exact"`
	// Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
	Regex *string `pulumi:"regex"`
}

// RouteSpecHttpRouteMatchPathInput is an input type that accepts RouteSpecHttpRouteMatchPathArgs and RouteSpecHttpRouteMatchPathOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchPathInput` via:
//
//	RouteSpecHttpRouteMatchPathArgs{...}
type RouteSpecHttpRouteMatchPathInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchPathOutput() RouteSpecHttpRouteMatchPathOutput
	ToRouteSpecHttpRouteMatchPathOutputWithContext(context.Context) RouteSpecHttpRouteMatchPathOutput
}

type RouteSpecHttpRouteMatchPathArgs struct {
	// Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (RouteSpecHttpRouteMatchPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (i RouteSpecHttpRouteMatchPathArgs) ToRouteSpecHttpRouteMatchPathOutput() RouteSpecHttpRouteMatchPathOutput {
	return i.ToRouteSpecHttpRouteMatchPathOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchPathArgs) ToRouteSpecHttpRouteMatchPathOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchPathOutput)
}

func (i RouteSpecHttpRouteMatchPathArgs) ToRouteSpecHttpRouteMatchPathPtrOutput() RouteSpecHttpRouteMatchPathPtrOutput {
	return i.ToRouteSpecHttpRouteMatchPathPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchPathArgs) ToRouteSpecHttpRouteMatchPathPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchPathOutput).ToRouteSpecHttpRouteMatchPathPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteMatchPathPtrInput is an input type that accepts RouteSpecHttpRouteMatchPathArgs, RouteSpecHttpRouteMatchPathPtr and RouteSpecHttpRouteMatchPathPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchPathPtrInput` via:
//
//	        RouteSpecHttpRouteMatchPathArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttpRouteMatchPathPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchPathPtrOutput() RouteSpecHttpRouteMatchPathPtrOutput
	ToRouteSpecHttpRouteMatchPathPtrOutputWithContext(context.Context) RouteSpecHttpRouteMatchPathPtrOutput
}

type routeSpecHttpRouteMatchPathPtrType RouteSpecHttpRouteMatchPathArgs

func RouteSpecHttpRouteMatchPathPtr(v *RouteSpecHttpRouteMatchPathArgs) RouteSpecHttpRouteMatchPathPtrInput {
	return (*routeSpecHttpRouteMatchPathPtrType)(v)
}

func (*routeSpecHttpRouteMatchPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (i *routeSpecHttpRouteMatchPathPtrType) ToRouteSpecHttpRouteMatchPathPtrOutput() RouteSpecHttpRouteMatchPathPtrOutput {
	return i.ToRouteSpecHttpRouteMatchPathPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteMatchPathPtrType) ToRouteSpecHttpRouteMatchPathPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchPathPtrOutput)
}

type RouteSpecHttpRouteMatchPathOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchPathOutput) ToRouteSpecHttpRouteMatchPathOutput() RouteSpecHttpRouteMatchPathOutput {
	return o
}

func (o RouteSpecHttpRouteMatchPathOutput) ToRouteSpecHttpRouteMatchPathOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchPathOutput {
	return o
}

func (o RouteSpecHttpRouteMatchPathOutput) ToRouteSpecHttpRouteMatchPathPtrOutput() RouteSpecHttpRouteMatchPathPtrOutput {
	return o.ToRouteSpecHttpRouteMatchPathPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteMatchPathOutput) ToRouteSpecHttpRouteMatchPathPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteMatchPath) *RouteSpecHttpRouteMatchPath {
		return &v
	}).(RouteSpecHttpRouteMatchPathPtrOutput)
}

// Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteMatchPathOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchPath) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteMatchPathOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchPath) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type RouteSpecHttpRouteMatchPathPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchPathPtrOutput) ToRouteSpecHttpRouteMatchPathPtrOutput() RouteSpecHttpRouteMatchPathPtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchPathPtrOutput) ToRouteSpecHttpRouteMatchPathPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchPathPtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchPathPtrOutput) Elem() RouteSpecHttpRouteMatchPathOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchPath) RouteSpecHttpRouteMatchPath {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteMatchPath
		return ret
	}).(RouteSpecHttpRouteMatchPathOutput)
}

// Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteMatchPathPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchPath) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteMatchPathPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchPath) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

type RouteSpecHttpRouteMatchQueryParameter struct {
	// Criteria for determining an gRPC request match.
	Match *RouteSpecHttpRouteMatchQueryParameterMatch `pulumi:"match"`
	// Name to use for the route. Must be between 1 and 255 characters in length.
	Name string `pulumi:"name"`
}

// RouteSpecHttpRouteMatchQueryParameterInput is an input type that accepts RouteSpecHttpRouteMatchQueryParameterArgs and RouteSpecHttpRouteMatchQueryParameterOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchQueryParameterInput` via:
//
//	RouteSpecHttpRouteMatchQueryParameterArgs{...}
type RouteSpecHttpRouteMatchQueryParameterInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchQueryParameterOutput() RouteSpecHttpRouteMatchQueryParameterOutput
	ToRouteSpecHttpRouteMatchQueryParameterOutputWithContext(context.Context) RouteSpecHttpRouteMatchQueryParameterOutput
}

type RouteSpecHttpRouteMatchQueryParameterArgs struct {
	// Criteria for determining an gRPC request match.
	Match RouteSpecHttpRouteMatchQueryParameterMatchPtrInput `pulumi:"match"`
	// Name to use for the route. Must be between 1 and 255 characters in length.
	Name pulumi.StringInput `pulumi:"name"`
}

func (RouteSpecHttpRouteMatchQueryParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (i RouteSpecHttpRouteMatchQueryParameterArgs) ToRouteSpecHttpRouteMatchQueryParameterOutput() RouteSpecHttpRouteMatchQueryParameterOutput {
	return i.ToRouteSpecHttpRouteMatchQueryParameterOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchQueryParameterArgs) ToRouteSpecHttpRouteMatchQueryParameterOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchQueryParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchQueryParameterOutput)
}

// RouteSpecHttpRouteMatchQueryParameterArrayInput is an input type that accepts RouteSpecHttpRouteMatchQueryParameterArray and RouteSpecHttpRouteMatchQueryParameterArrayOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchQueryParameterArrayInput` via:
//
//	RouteSpecHttpRouteMatchQueryParameterArray{ RouteSpecHttpRouteMatchQueryParameterArgs{...} }
type RouteSpecHttpRouteMatchQueryParameterArrayInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchQueryParameterArrayOutput() RouteSpecHttpRouteMatchQueryParameterArrayOutput
	ToRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(context.Context) RouteSpecHttpRouteMatchQueryParameterArrayOutput
}

type RouteSpecHttpRouteMatchQueryParameterArray []RouteSpecHttpRouteMatchQueryParameterInput

func (RouteSpecHttpRouteMatchQueryParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (i RouteSpecHttpRouteMatchQueryParameterArray) ToRouteSpecHttpRouteMatchQueryParameterArrayOutput() RouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return i.ToRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchQueryParameterArray) ToRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchQueryParameterArrayOutput)
}

type RouteSpecHttpRouteMatchQueryParameterOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchQueryParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchQueryParameterOutput) ToRouteSpecHttpRouteMatchQueryParameterOutput() RouteSpecHttpRouteMatchQueryParameterOutput {
	return o
}

func (o RouteSpecHttpRouteMatchQueryParameterOutput) ToRouteSpecHttpRouteMatchQueryParameterOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchQueryParameterOutput {
	return o
}

// Criteria for determining an gRPC request match.
func (o RouteSpecHttpRouteMatchQueryParameterOutput) Match() RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchQueryParameter) *RouteSpecHttpRouteMatchQueryParameterMatch {
		return v.Match
	}).(RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput)
}

// Name to use for the route. Must be between 1 and 255 characters in length.
func (o RouteSpecHttpRouteMatchQueryParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchQueryParameter) string { return v.Name }).(pulumi.StringOutput)
}

type RouteSpecHttpRouteMatchQueryParameterArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchQueryParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchQueryParameterArrayOutput) ToRouteSpecHttpRouteMatchQueryParameterArrayOutput() RouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return o
}

func (o RouteSpecHttpRouteMatchQueryParameterArrayOutput) ToRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return o
}

func (o RouteSpecHttpRouteMatchQueryParameterArrayOutput) Index(i pulumi.IntInput) RouteSpecHttpRouteMatchQueryParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecHttpRouteMatchQueryParameter {
		return vs[0].([]RouteSpecHttpRouteMatchQueryParameter)[vs[1].(int)]
	}).(RouteSpecHttpRouteMatchQueryParameterOutput)
}

type RouteSpecHttpRouteMatchQueryParameterMatch struct {
	// The exact path to match on.
	Exact *string `pulumi:"exact"`
}

// RouteSpecHttpRouteMatchQueryParameterMatchInput is an input type that accepts RouteSpecHttpRouteMatchQueryParameterMatchArgs and RouteSpecHttpRouteMatchQueryParameterMatchOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchQueryParameterMatchInput` via:
//
//	RouteSpecHttpRouteMatchQueryParameterMatchArgs{...}
type RouteSpecHttpRouteMatchQueryParameterMatchInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchQueryParameterMatchOutput() RouteSpecHttpRouteMatchQueryParameterMatchOutput
	ToRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(context.Context) RouteSpecHttpRouteMatchQueryParameterMatchOutput
}

type RouteSpecHttpRouteMatchQueryParameterMatchArgs struct {
	// The exact path to match on.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
}

func (RouteSpecHttpRouteMatchQueryParameterMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i RouteSpecHttpRouteMatchQueryParameterMatchArgs) ToRouteSpecHttpRouteMatchQueryParameterMatchOutput() RouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return i.ToRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchQueryParameterMatchArgs) ToRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchQueryParameterMatchOutput)
}

func (i RouteSpecHttpRouteMatchQueryParameterMatchArgs) ToRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput() RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return i.ToRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteMatchQueryParameterMatchArgs) ToRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchQueryParameterMatchOutput).ToRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteMatchQueryParameterMatchPtrInput is an input type that accepts RouteSpecHttpRouteMatchQueryParameterMatchArgs, RouteSpecHttpRouteMatchQueryParameterMatchPtr and RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteMatchQueryParameterMatchPtrInput` via:
//
//	        RouteSpecHttpRouteMatchQueryParameterMatchArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttpRouteMatchQueryParameterMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput() RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput
	ToRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(context.Context) RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput
}

type routeSpecHttpRouteMatchQueryParameterMatchPtrType RouteSpecHttpRouteMatchQueryParameterMatchArgs

func RouteSpecHttpRouteMatchQueryParameterMatchPtr(v *RouteSpecHttpRouteMatchQueryParameterMatchArgs) RouteSpecHttpRouteMatchQueryParameterMatchPtrInput {
	return (*routeSpecHttpRouteMatchQueryParameterMatchPtrType)(v)
}

func (*routeSpecHttpRouteMatchQueryParameterMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i *routeSpecHttpRouteMatchQueryParameterMatchPtrType) ToRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput() RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return i.ToRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteMatchQueryParameterMatchPtrType) ToRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput)
}

type RouteSpecHttpRouteMatchQueryParameterMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchQueryParameterMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchQueryParameterMatchOutput) ToRouteSpecHttpRouteMatchQueryParameterMatchOutput() RouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return o
}

func (o RouteSpecHttpRouteMatchQueryParameterMatchOutput) ToRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return o
}

func (o RouteSpecHttpRouteMatchQueryParameterMatchOutput) ToRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput() RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return o.ToRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteMatchQueryParameterMatchOutput) ToRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteMatchQueryParameterMatch) *RouteSpecHttpRouteMatchQueryParameterMatch {
		return &v
	}).(RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput)
}

// The exact path to match on.
func (o RouteSpecHttpRouteMatchQueryParameterMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteMatchQueryParameterMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

type RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput) ToRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput() RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput) ToRouteSpecHttpRouteMatchQueryParameterMatchPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput {
	return o
}

func (o RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput) Elem() RouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchQueryParameterMatch) RouteSpecHttpRouteMatchQueryParameterMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteMatchQueryParameterMatch
		return ret
	}).(RouteSpecHttpRouteMatchQueryParameterMatchOutput)
}

// The exact path to match on.
func (o RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteMatchQueryParameterMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

type RouteSpecHttpRouteRetryPolicy struct {
	// List of HTTP retry events.
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	HttpRetryEvents []string `pulumi:"httpRetryEvents"`
	// Maximum number of retries.
	MaxRetries int `pulumi:"maxRetries"`
	// Per-retry timeout.
	PerRetryTimeout RouteSpecHttpRouteRetryPolicyPerRetryTimeout `pulumi:"perRetryTimeout"`
	// List of TCP retry events. The only valid value is `connection-error`.
	//
	// You must specify at least one value for `httpRetryEvents`, or at least one value for `tcpRetryEvents`.
	TcpRetryEvents []string `pulumi:"tcpRetryEvents"`
}

// RouteSpecHttpRouteRetryPolicyInput is an input type that accepts RouteSpecHttpRouteRetryPolicyArgs and RouteSpecHttpRouteRetryPolicyOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteRetryPolicyInput` via:
//
//	RouteSpecHttpRouteRetryPolicyArgs{...}
type RouteSpecHttpRouteRetryPolicyInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteRetryPolicyOutput() RouteSpecHttpRouteRetryPolicyOutput
	ToRouteSpecHttpRouteRetryPolicyOutputWithContext(context.Context) RouteSpecHttpRouteRetryPolicyOutput
}

type RouteSpecHttpRouteRetryPolicyArgs struct {
	// List of HTTP retry events.
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
	HttpRetryEvents pulumi.StringArrayInput `pulumi:"httpRetryEvents"`
	// Maximum number of retries.
	MaxRetries pulumi.IntInput `pulumi:"maxRetries"`
	// Per-retry timeout.
	PerRetryTimeout RouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput `pulumi:"perRetryTimeout"`
	// List of TCP retry events. The only valid value is `connection-error`.
	//
	// You must specify at least one value for `httpRetryEvents`, or at least one value for `tcpRetryEvents`.
	TcpRetryEvents pulumi.StringArrayInput `pulumi:"tcpRetryEvents"`
}

func (RouteSpecHttpRouteRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteRetryPolicy)(nil)).Elem()
}

func (i RouteSpecHttpRouteRetryPolicyArgs) ToRouteSpecHttpRouteRetryPolicyOutput() RouteSpecHttpRouteRetryPolicyOutput {
	return i.ToRouteSpecHttpRouteRetryPolicyOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteRetryPolicyArgs) ToRouteSpecHttpRouteRetryPolicyOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteRetryPolicyOutput)
}

func (i RouteSpecHttpRouteRetryPolicyArgs) ToRouteSpecHttpRouteRetryPolicyPtrOutput() RouteSpecHttpRouteRetryPolicyPtrOutput {
	return i.ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteRetryPolicyArgs) ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteRetryPolicyOutput).ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteRetryPolicyPtrInput is an input type that accepts RouteSpecHttpRouteRetryPolicyArgs, RouteSpecHttpRouteRetryPolicyPtr and RouteSpecHttpRouteRetryPolicyPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteRetryPolicyPtrInput` via:
//
//	        RouteSpecHttpRouteRetryPolicyArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttpRouteRetryPolicyPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteRetryPolicyPtrOutput() RouteSpecHttpRouteRetryPolicyPtrOutput
	ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(context.Context) RouteSpecHttpRouteRetryPolicyPtrOutput
}

type routeSpecHttpRouteRetryPolicyPtrType RouteSpecHttpRouteRetryPolicyArgs

func RouteSpecHttpRouteRetryPolicyPtr(v *RouteSpecHttpRouteRetryPolicyArgs) RouteSpecHttpRouteRetryPolicyPtrInput {
	return (*routeSpecHttpRouteRetryPolicyPtrType)(v)
}

func (*routeSpecHttpRouteRetryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteRetryPolicy)(nil)).Elem()
}

func (i *routeSpecHttpRouteRetryPolicyPtrType) ToRouteSpecHttpRouteRetryPolicyPtrOutput() RouteSpecHttpRouteRetryPolicyPtrOutput {
	return i.ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteRetryPolicyPtrType) ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteRetryPolicyPtrOutput)
}

type RouteSpecHttpRouteRetryPolicyOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteRetryPolicy)(nil)).Elem()
}

func (o RouteSpecHttpRouteRetryPolicyOutput) ToRouteSpecHttpRouteRetryPolicyOutput() RouteSpecHttpRouteRetryPolicyOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyOutput) ToRouteSpecHttpRouteRetryPolicyOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyOutput) ToRouteSpecHttpRouteRetryPolicyPtrOutput() RouteSpecHttpRouteRetryPolicyPtrOutput {
	return o.ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteRetryPolicyOutput) ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteRetryPolicy) *RouteSpecHttpRouteRetryPolicy {
		return &v
	}).(RouteSpecHttpRouteRetryPolicyPtrOutput)
}

// List of HTTP retry events.
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
func (o RouteSpecHttpRouteRetryPolicyOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteRetryPolicy) []string { return v.HttpRetryEvents }).(pulumi.StringArrayOutput)
}

// Maximum number of retries.
func (o RouteSpecHttpRouteRetryPolicyOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteRetryPolicy) int { return v.MaxRetries }).(pulumi.IntOutput)
}

// Per-retry timeout.
func (o RouteSpecHttpRouteRetryPolicyOutput) PerRetryTimeout() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteRetryPolicy) RouteSpecHttpRouteRetryPolicyPerRetryTimeout {
		return v.PerRetryTimeout
	}).(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput)
}

// List of TCP retry events. The only valid value is `connection-error`.
//
// You must specify at least one value for `httpRetryEvents`, or at least one value for `tcpRetryEvents`.
func (o RouteSpecHttpRouteRetryPolicyOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteRetryPolicy) []string { return v.TcpRetryEvents }).(pulumi.StringArrayOutput)
}

type RouteSpecHttpRouteRetryPolicyPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteRetryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteRetryPolicy)(nil)).Elem()
}

func (o RouteSpecHttpRouteRetryPolicyPtrOutput) ToRouteSpecHttpRouteRetryPolicyPtrOutput() RouteSpecHttpRouteRetryPolicyPtrOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyPtrOutput) ToRouteSpecHttpRouteRetryPolicyPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPtrOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyPtrOutput) Elem() RouteSpecHttpRouteRetryPolicyOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicy) RouteSpecHttpRouteRetryPolicy {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteRetryPolicy
		return ret
	}).(RouteSpecHttpRouteRetryPolicyOutput)
}

// List of HTTP retry events.
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
func (o RouteSpecHttpRouteRetryPolicyPtrOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.HttpRetryEvents
	}).(pulumi.StringArrayOutput)
}

// Maximum number of retries.
func (o RouteSpecHttpRouteRetryPolicyPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// Per-retry timeout.
func (o RouteSpecHttpRouteRetryPolicyPtrOutput) PerRetryTimeout() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicy) *RouteSpecHttpRouteRetryPolicyPerRetryTimeout {
		if v == nil {
			return nil
		}
		return &v.PerRetryTimeout
	}).(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput)
}

// List of TCP retry events. The only valid value is `connection-error`.
//
// You must specify at least one value for `httpRetryEvents`, or at least one value for `tcpRetryEvents`.
func (o RouteSpecHttpRouteRetryPolicyPtrOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.TcpRetryEvents
	}).(pulumi.StringArrayOutput)
}

type RouteSpecHttpRouteRetryPolicyPerRetryTimeout struct {
	// Retry unit. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Retry value.
	Value int `pulumi:"value"`
}

// RouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput is an input type that accepts RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs and RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput` via:
//
//	RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs{...}
type RouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput
	ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput
}

type RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs struct {
	// Retry unit. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Retry value.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return i.ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput)
}

func (i RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return i.ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput).ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrInput is an input type that accepts RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs, RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtr and RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrInput` via:
//
//	        RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput
	ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput
}

type routeSpecHttpRouteRetryPolicyPerRetryTimeoutPtrType RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs

func RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtr(v *RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrInput {
	return (*routeSpecHttpRouteRetryPolicyPerRetryTimeoutPtrType)(v)
}

func (*routeSpecHttpRouteRetryPolicyPerRetryTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i *routeSpecHttpRouteRetryPolicyPerRetryTimeoutPtrType) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return i.ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteRetryPolicyPerRetryTimeoutPtrType) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput)
}

type RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteRetryPolicyPerRetryTimeout) *RouteSpecHttpRouteRetryPolicyPerRetryTimeout {
		return &v
	}).(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput)
}

// Retry unit. Valid values: `ms`, `s`.
func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteRetryPolicyPerRetryTimeout) string { return v.Unit }).(pulumi.StringOutput)
}

// Retry value.
func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteRetryPolicyPerRetryTimeout) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput) ToRouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput) Elem() RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicyPerRetryTimeout) RouteSpecHttpRouteRetryPolicyPerRetryTimeout {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteRetryPolicyPerRetryTimeout
		return ret
	}).(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput)
}

// Retry unit. Valid values: `ms`, `s`.
func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicyPerRetryTimeout) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Retry value.
func (o RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteRetryPolicyPerRetryTimeout) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttpRouteTimeout struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *RouteSpecHttpRouteTimeoutIdle `pulumi:"idle"`
	// Per request timeout.
	PerRequest *RouteSpecHttpRouteTimeoutPerRequest `pulumi:"perRequest"`
}

// RouteSpecHttpRouteTimeoutInput is an input type that accepts RouteSpecHttpRouteTimeoutArgs and RouteSpecHttpRouteTimeoutOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteTimeoutInput` via:
//
//	RouteSpecHttpRouteTimeoutArgs{...}
type RouteSpecHttpRouteTimeoutInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteTimeoutOutput() RouteSpecHttpRouteTimeoutOutput
	ToRouteSpecHttpRouteTimeoutOutputWithContext(context.Context) RouteSpecHttpRouteTimeoutOutput
}

type RouteSpecHttpRouteTimeoutArgs struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle RouteSpecHttpRouteTimeoutIdlePtrInput `pulumi:"idle"`
	// Per request timeout.
	PerRequest RouteSpecHttpRouteTimeoutPerRequestPtrInput `pulumi:"perRequest"`
}

func (RouteSpecHttpRouteTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteTimeout)(nil)).Elem()
}

func (i RouteSpecHttpRouteTimeoutArgs) ToRouteSpecHttpRouteTimeoutOutput() RouteSpecHttpRouteTimeoutOutput {
	return i.ToRouteSpecHttpRouteTimeoutOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteTimeoutArgs) ToRouteSpecHttpRouteTimeoutOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutOutput)
}

func (i RouteSpecHttpRouteTimeoutArgs) ToRouteSpecHttpRouteTimeoutPtrOutput() RouteSpecHttpRouteTimeoutPtrOutput {
	return i.ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteTimeoutArgs) ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutOutput).ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteTimeoutPtrInput is an input type that accepts RouteSpecHttpRouteTimeoutArgs, RouteSpecHttpRouteTimeoutPtr and RouteSpecHttpRouteTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteTimeoutPtrInput` via:
//
//	        RouteSpecHttpRouteTimeoutArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttpRouteTimeoutPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteTimeoutPtrOutput() RouteSpecHttpRouteTimeoutPtrOutput
	ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(context.Context) RouteSpecHttpRouteTimeoutPtrOutput
}

type routeSpecHttpRouteTimeoutPtrType RouteSpecHttpRouteTimeoutArgs

func RouteSpecHttpRouteTimeoutPtr(v *RouteSpecHttpRouteTimeoutArgs) RouteSpecHttpRouteTimeoutPtrInput {
	return (*routeSpecHttpRouteTimeoutPtrType)(v)
}

func (*routeSpecHttpRouteTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteTimeout)(nil)).Elem()
}

func (i *routeSpecHttpRouteTimeoutPtrType) ToRouteSpecHttpRouteTimeoutPtrOutput() RouteSpecHttpRouteTimeoutPtrOutput {
	return i.ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteTimeoutPtrType) ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutPtrOutput)
}

type RouteSpecHttpRouteTimeoutOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteTimeout)(nil)).Elem()
}

func (o RouteSpecHttpRouteTimeoutOutput) ToRouteSpecHttpRouteTimeoutOutput() RouteSpecHttpRouteTimeoutOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutOutput) ToRouteSpecHttpRouteTimeoutOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutOutput) ToRouteSpecHttpRouteTimeoutPtrOutput() RouteSpecHttpRouteTimeoutPtrOutput {
	return o.ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteTimeoutOutput) ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteTimeout) *RouteSpecHttpRouteTimeout {
		return &v
	}).(RouteSpecHttpRouteTimeoutPtrOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecHttpRouteTimeoutOutput) Idle() RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteTimeout) *RouteSpecHttpRouteTimeoutIdle { return v.Idle }).(RouteSpecHttpRouteTimeoutIdlePtrOutput)
}

// Per request timeout.
func (o RouteSpecHttpRouteTimeoutOutput) PerRequest() RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteTimeout) *RouteSpecHttpRouteTimeoutPerRequest { return v.PerRequest }).(RouteSpecHttpRouteTimeoutPerRequestPtrOutput)
}

type RouteSpecHttpRouteTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteTimeout)(nil)).Elem()
}

func (o RouteSpecHttpRouteTimeoutPtrOutput) ToRouteSpecHttpRouteTimeoutPtrOutput() RouteSpecHttpRouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutPtrOutput) ToRouteSpecHttpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutPtrOutput) Elem() RouteSpecHttpRouteTimeoutOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeout) RouteSpecHttpRouteTimeout {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteTimeout
		return ret
	}).(RouteSpecHttpRouteTimeoutOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecHttpRouteTimeoutPtrOutput) Idle() RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeout) *RouteSpecHttpRouteTimeoutIdle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(RouteSpecHttpRouteTimeoutIdlePtrOutput)
}

// Per request timeout.
func (o RouteSpecHttpRouteTimeoutPtrOutput) PerRequest() RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeout) *RouteSpecHttpRouteTimeoutPerRequest {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(RouteSpecHttpRouteTimeoutPerRequestPtrOutput)
}

type RouteSpecHttpRouteTimeoutIdle struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// RouteSpecHttpRouteTimeoutIdleInput is an input type that accepts RouteSpecHttpRouteTimeoutIdleArgs and RouteSpecHttpRouteTimeoutIdleOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteTimeoutIdleInput` via:
//
//	RouteSpecHttpRouteTimeoutIdleArgs{...}
type RouteSpecHttpRouteTimeoutIdleInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteTimeoutIdleOutput() RouteSpecHttpRouteTimeoutIdleOutput
	ToRouteSpecHttpRouteTimeoutIdleOutputWithContext(context.Context) RouteSpecHttpRouteTimeoutIdleOutput
}

type RouteSpecHttpRouteTimeoutIdleArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecHttpRouteTimeoutIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteTimeoutIdle)(nil)).Elem()
}

func (i RouteSpecHttpRouteTimeoutIdleArgs) ToRouteSpecHttpRouteTimeoutIdleOutput() RouteSpecHttpRouteTimeoutIdleOutput {
	return i.ToRouteSpecHttpRouteTimeoutIdleOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteTimeoutIdleArgs) ToRouteSpecHttpRouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutIdleOutput)
}

func (i RouteSpecHttpRouteTimeoutIdleArgs) ToRouteSpecHttpRouteTimeoutIdlePtrOutput() RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteTimeoutIdleArgs) ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutIdleOutput).ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteTimeoutIdlePtrInput is an input type that accepts RouteSpecHttpRouteTimeoutIdleArgs, RouteSpecHttpRouteTimeoutIdlePtr and RouteSpecHttpRouteTimeoutIdlePtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteTimeoutIdlePtrInput` via:
//
//	        RouteSpecHttpRouteTimeoutIdleArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttpRouteTimeoutIdlePtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteTimeoutIdlePtrOutput() RouteSpecHttpRouteTimeoutIdlePtrOutput
	ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(context.Context) RouteSpecHttpRouteTimeoutIdlePtrOutput
}

type routeSpecHttpRouteTimeoutIdlePtrType RouteSpecHttpRouteTimeoutIdleArgs

func RouteSpecHttpRouteTimeoutIdlePtr(v *RouteSpecHttpRouteTimeoutIdleArgs) RouteSpecHttpRouteTimeoutIdlePtrInput {
	return (*routeSpecHttpRouteTimeoutIdlePtrType)(v)
}

func (*routeSpecHttpRouteTimeoutIdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteTimeoutIdle)(nil)).Elem()
}

func (i *routeSpecHttpRouteTimeoutIdlePtrType) ToRouteSpecHttpRouteTimeoutIdlePtrOutput() RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteTimeoutIdlePtrType) ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutIdlePtrOutput)
}

type RouteSpecHttpRouteTimeoutIdleOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteTimeoutIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecHttpRouteTimeoutIdleOutput) ToRouteSpecHttpRouteTimeoutIdleOutput() RouteSpecHttpRouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutIdleOutput) ToRouteSpecHttpRouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutIdleOutput) ToRouteSpecHttpRouteTimeoutIdlePtrOutput() RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return o.ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteTimeoutIdleOutput) ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteTimeoutIdle) *RouteSpecHttpRouteTimeoutIdle {
		return &v
	}).(RouteSpecHttpRouteTimeoutIdlePtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttpRouteTimeoutIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteTimeoutIdle) string { return v.Unit }).(pulumi.StringOutput)
}

// Number of time units. Minimum value of `0`.
func (o RouteSpecHttpRouteTimeoutIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteTimeoutIdle) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecHttpRouteTimeoutIdlePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteTimeoutIdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecHttpRouteTimeoutIdlePtrOutput) ToRouteSpecHttpRouteTimeoutIdlePtrOutput() RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutIdlePtrOutput) ToRouteSpecHttpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutIdlePtrOutput) Elem() RouteSpecHttpRouteTimeoutIdleOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeoutIdle) RouteSpecHttpRouteTimeoutIdle {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteTimeoutIdle
		return ret
	}).(RouteSpecHttpRouteTimeoutIdleOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttpRouteTimeoutIdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeoutIdle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Number of time units. Minimum value of `0`.
func (o RouteSpecHttpRouteTimeoutIdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeoutIdle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecHttpRouteTimeoutPerRequest struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// RouteSpecHttpRouteTimeoutPerRequestInput is an input type that accepts RouteSpecHttpRouteTimeoutPerRequestArgs and RouteSpecHttpRouteTimeoutPerRequestOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteTimeoutPerRequestInput` via:
//
//	RouteSpecHttpRouteTimeoutPerRequestArgs{...}
type RouteSpecHttpRouteTimeoutPerRequestInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteTimeoutPerRequestOutput() RouteSpecHttpRouteTimeoutPerRequestOutput
	ToRouteSpecHttpRouteTimeoutPerRequestOutputWithContext(context.Context) RouteSpecHttpRouteTimeoutPerRequestOutput
}

type RouteSpecHttpRouteTimeoutPerRequestArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecHttpRouteTimeoutPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteTimeoutPerRequest)(nil)).Elem()
}

func (i RouteSpecHttpRouteTimeoutPerRequestArgs) ToRouteSpecHttpRouteTimeoutPerRequestOutput() RouteSpecHttpRouteTimeoutPerRequestOutput {
	return i.ToRouteSpecHttpRouteTimeoutPerRequestOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteTimeoutPerRequestArgs) ToRouteSpecHttpRouteTimeoutPerRequestOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutPerRequestOutput)
}

func (i RouteSpecHttpRouteTimeoutPerRequestArgs) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutput() RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return i.ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (i RouteSpecHttpRouteTimeoutPerRequestArgs) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutPerRequestOutput).ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(ctx)
}

// RouteSpecHttpRouteTimeoutPerRequestPtrInput is an input type that accepts RouteSpecHttpRouteTimeoutPerRequestArgs, RouteSpecHttpRouteTimeoutPerRequestPtr and RouteSpecHttpRouteTimeoutPerRequestPtrOutput values.
// You can construct a concrete instance of `RouteSpecHttpRouteTimeoutPerRequestPtrInput` via:
//
//	        RouteSpecHttpRouteTimeoutPerRequestArgs{...}
//
//	or:
//
//	        nil
type RouteSpecHttpRouteTimeoutPerRequestPtrInput interface {
	pulumi.Input

	ToRouteSpecHttpRouteTimeoutPerRequestPtrOutput() RouteSpecHttpRouteTimeoutPerRequestPtrOutput
	ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(context.Context) RouteSpecHttpRouteTimeoutPerRequestPtrOutput
}

type routeSpecHttpRouteTimeoutPerRequestPtrType RouteSpecHttpRouteTimeoutPerRequestArgs

func RouteSpecHttpRouteTimeoutPerRequestPtr(v *RouteSpecHttpRouteTimeoutPerRequestArgs) RouteSpecHttpRouteTimeoutPerRequestPtrInput {
	return (*routeSpecHttpRouteTimeoutPerRequestPtrType)(v)
}

func (*routeSpecHttpRouteTimeoutPerRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteTimeoutPerRequest)(nil)).Elem()
}

func (i *routeSpecHttpRouteTimeoutPerRequestPtrType) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutput() RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return i.ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (i *routeSpecHttpRouteTimeoutPerRequestPtrType) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecHttpRouteTimeoutPerRequestPtrOutput)
}

type RouteSpecHttpRouteTimeoutPerRequestOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteTimeoutPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecHttpRouteTimeoutPerRequest)(nil)).Elem()
}

func (o RouteSpecHttpRouteTimeoutPerRequestOutput) ToRouteSpecHttpRouteTimeoutPerRequestOutput() RouteSpecHttpRouteTimeoutPerRequestOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutPerRequestOutput) ToRouteSpecHttpRouteTimeoutPerRequestOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPerRequestOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutPerRequestOutput) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutput() RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return o.ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(context.Background())
}

func (o RouteSpecHttpRouteTimeoutPerRequestOutput) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecHttpRouteTimeoutPerRequest) *RouteSpecHttpRouteTimeoutPerRequest {
		return &v
	}).(RouteSpecHttpRouteTimeoutPerRequestPtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttpRouteTimeoutPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteTimeoutPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

// Number of time units. Minimum value of `0`.
func (o RouteSpecHttpRouteTimeoutPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecHttpRouteTimeoutPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecHttpRouteTimeoutPerRequestPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecHttpRouteTimeoutPerRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecHttpRouteTimeoutPerRequest)(nil)).Elem()
}

func (o RouteSpecHttpRouteTimeoutPerRequestPtrOutput) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutput() RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutPerRequestPtrOutput) ToRouteSpecHttpRouteTimeoutPerRequestPtrOutputWithContext(ctx context.Context) RouteSpecHttpRouteTimeoutPerRequestPtrOutput {
	return o
}

func (o RouteSpecHttpRouteTimeoutPerRequestPtrOutput) Elem() RouteSpecHttpRouteTimeoutPerRequestOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeoutPerRequest) RouteSpecHttpRouteTimeoutPerRequest {
		if v != nil {
			return *v
		}
		var ret RouteSpecHttpRouteTimeoutPerRequest
		return ret
	}).(RouteSpecHttpRouteTimeoutPerRequestOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o RouteSpecHttpRouteTimeoutPerRequestPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeoutPerRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Number of time units. Minimum value of `0`.
func (o RouteSpecHttpRouteTimeoutPerRequestPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecHttpRouteTimeoutPerRequest) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteSpecTcpRoute struct {
	// Action to take if a match is determined.
	Action RouteSpecTcpRouteAction `pulumi:"action"`
	// Criteria for determining an gRPC request match.
	Match *RouteSpecTcpRouteMatch `pulumi:"match"`
	// Types of timeouts.
	Timeout *RouteSpecTcpRouteTimeout `pulumi:"timeout"`
}

// RouteSpecTcpRouteInput is an input type that accepts RouteSpecTcpRouteArgs and RouteSpecTcpRouteOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteInput` via:
//
//	RouteSpecTcpRouteArgs{...}
type RouteSpecTcpRouteInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteOutput() RouteSpecTcpRouteOutput
	ToRouteSpecTcpRouteOutputWithContext(context.Context) RouteSpecTcpRouteOutput
}

type RouteSpecTcpRouteArgs struct {
	// Action to take if a match is determined.
	Action RouteSpecTcpRouteActionInput `pulumi:"action"`
	// Criteria for determining an gRPC request match.
	Match RouteSpecTcpRouteMatchPtrInput `pulumi:"match"`
	// Types of timeouts.
	Timeout RouteSpecTcpRouteTimeoutPtrInput `pulumi:"timeout"`
}

func (RouteSpecTcpRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRoute)(nil)).Elem()
}

func (i RouteSpecTcpRouteArgs) ToRouteSpecTcpRouteOutput() RouteSpecTcpRouteOutput {
	return i.ToRouteSpecTcpRouteOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteArgs) ToRouteSpecTcpRouteOutputWithContext(ctx context.Context) RouteSpecTcpRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteOutput)
}

func (i RouteSpecTcpRouteArgs) ToRouteSpecTcpRoutePtrOutput() RouteSpecTcpRoutePtrOutput {
	return i.ToRouteSpecTcpRoutePtrOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteArgs) ToRouteSpecTcpRoutePtrOutputWithContext(ctx context.Context) RouteSpecTcpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteOutput).ToRouteSpecTcpRoutePtrOutputWithContext(ctx)
}

// RouteSpecTcpRoutePtrInput is an input type that accepts RouteSpecTcpRouteArgs, RouteSpecTcpRoutePtr and RouteSpecTcpRoutePtrOutput values.
// You can construct a concrete instance of `RouteSpecTcpRoutePtrInput` via:
//
//	        RouteSpecTcpRouteArgs{...}
//
//	or:
//
//	        nil
type RouteSpecTcpRoutePtrInput interface {
	pulumi.Input

	ToRouteSpecTcpRoutePtrOutput() RouteSpecTcpRoutePtrOutput
	ToRouteSpecTcpRoutePtrOutputWithContext(context.Context) RouteSpecTcpRoutePtrOutput
}

type routeSpecTcpRoutePtrType RouteSpecTcpRouteArgs

func RouteSpecTcpRoutePtr(v *RouteSpecTcpRouteArgs) RouteSpecTcpRoutePtrInput {
	return (*routeSpecTcpRoutePtrType)(v)
}

func (*routeSpecTcpRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRoute)(nil)).Elem()
}

func (i *routeSpecTcpRoutePtrType) ToRouteSpecTcpRoutePtrOutput() RouteSpecTcpRoutePtrOutput {
	return i.ToRouteSpecTcpRoutePtrOutputWithContext(context.Background())
}

func (i *routeSpecTcpRoutePtrType) ToRouteSpecTcpRoutePtrOutputWithContext(ctx context.Context) RouteSpecTcpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRoutePtrOutput)
}

type RouteSpecTcpRouteOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRoute)(nil)).Elem()
}

func (o RouteSpecTcpRouteOutput) ToRouteSpecTcpRouteOutput() RouteSpecTcpRouteOutput {
	return o
}

func (o RouteSpecTcpRouteOutput) ToRouteSpecTcpRouteOutputWithContext(ctx context.Context) RouteSpecTcpRouteOutput {
	return o
}

func (o RouteSpecTcpRouteOutput) ToRouteSpecTcpRoutePtrOutput() RouteSpecTcpRoutePtrOutput {
	return o.ToRouteSpecTcpRoutePtrOutputWithContext(context.Background())
}

func (o RouteSpecTcpRouteOutput) ToRouteSpecTcpRoutePtrOutputWithContext(ctx context.Context) RouteSpecTcpRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecTcpRoute) *RouteSpecTcpRoute {
		return &v
	}).(RouteSpecTcpRoutePtrOutput)
}

// Action to take if a match is determined.
func (o RouteSpecTcpRouteOutput) Action() RouteSpecTcpRouteActionOutput {
	return o.ApplyT(func(v RouteSpecTcpRoute) RouteSpecTcpRouteAction { return v.Action }).(RouteSpecTcpRouteActionOutput)
}

// Criteria for determining an gRPC request match.
func (o RouteSpecTcpRouteOutput) Match() RouteSpecTcpRouteMatchPtrOutput {
	return o.ApplyT(func(v RouteSpecTcpRoute) *RouteSpecTcpRouteMatch { return v.Match }).(RouteSpecTcpRouteMatchPtrOutput)
}

// Types of timeouts.
func (o RouteSpecTcpRouteOutput) Timeout() RouteSpecTcpRouteTimeoutPtrOutput {
	return o.ApplyT(func(v RouteSpecTcpRoute) *RouteSpecTcpRouteTimeout { return v.Timeout }).(RouteSpecTcpRouteTimeoutPtrOutput)
}

type RouteSpecTcpRoutePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRoute)(nil)).Elem()
}

func (o RouteSpecTcpRoutePtrOutput) ToRouteSpecTcpRoutePtrOutput() RouteSpecTcpRoutePtrOutput {
	return o
}

func (o RouteSpecTcpRoutePtrOutput) ToRouteSpecTcpRoutePtrOutputWithContext(ctx context.Context) RouteSpecTcpRoutePtrOutput {
	return o
}

func (o RouteSpecTcpRoutePtrOutput) Elem() RouteSpecTcpRouteOutput {
	return o.ApplyT(func(v *RouteSpecTcpRoute) RouteSpecTcpRoute {
		if v != nil {
			return *v
		}
		var ret RouteSpecTcpRoute
		return ret
	}).(RouteSpecTcpRouteOutput)
}

// Action to take if a match is determined.
func (o RouteSpecTcpRoutePtrOutput) Action() RouteSpecTcpRouteActionPtrOutput {
	return o.ApplyT(func(v *RouteSpecTcpRoute) *RouteSpecTcpRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(RouteSpecTcpRouteActionPtrOutput)
}

// Criteria for determining an gRPC request match.
func (o RouteSpecTcpRoutePtrOutput) Match() RouteSpecTcpRouteMatchPtrOutput {
	return o.ApplyT(func(v *RouteSpecTcpRoute) *RouteSpecTcpRouteMatch {
		if v == nil {
			return nil
		}
		return v.Match
	}).(RouteSpecTcpRouteMatchPtrOutput)
}

// Types of timeouts.
func (o RouteSpecTcpRoutePtrOutput) Timeout() RouteSpecTcpRouteTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteSpecTcpRoute) *RouteSpecTcpRouteTimeout {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(RouteSpecTcpRouteTimeoutPtrOutput)
}

type RouteSpecTcpRouteAction struct {
	// Targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets []RouteSpecTcpRouteActionWeightedTarget `pulumi:"weightedTargets"`
}

// RouteSpecTcpRouteActionInput is an input type that accepts RouteSpecTcpRouteActionArgs and RouteSpecTcpRouteActionOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteActionInput` via:
//
//	RouteSpecTcpRouteActionArgs{...}
type RouteSpecTcpRouteActionInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteActionOutput() RouteSpecTcpRouteActionOutput
	ToRouteSpecTcpRouteActionOutputWithContext(context.Context) RouteSpecTcpRouteActionOutput
}

type RouteSpecTcpRouteActionArgs struct {
	// Targets that traffic is routed to when a request matches the route.
	// You can specify one or more targets and their relative weights with which to distribute traffic.
	WeightedTargets RouteSpecTcpRouteActionWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (RouteSpecTcpRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteAction)(nil)).Elem()
}

func (i RouteSpecTcpRouteActionArgs) ToRouteSpecTcpRouteActionOutput() RouteSpecTcpRouteActionOutput {
	return i.ToRouteSpecTcpRouteActionOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteActionArgs) ToRouteSpecTcpRouteActionOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteActionOutput)
}

func (i RouteSpecTcpRouteActionArgs) ToRouteSpecTcpRouteActionPtrOutput() RouteSpecTcpRouteActionPtrOutput {
	return i.ToRouteSpecTcpRouteActionPtrOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteActionArgs) ToRouteSpecTcpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteActionOutput).ToRouteSpecTcpRouteActionPtrOutputWithContext(ctx)
}

// RouteSpecTcpRouteActionPtrInput is an input type that accepts RouteSpecTcpRouteActionArgs, RouteSpecTcpRouteActionPtr and RouteSpecTcpRouteActionPtrOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteActionPtrInput` via:
//
//	        RouteSpecTcpRouteActionArgs{...}
//
//	or:
//
//	        nil
type RouteSpecTcpRouteActionPtrInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteActionPtrOutput() RouteSpecTcpRouteActionPtrOutput
	ToRouteSpecTcpRouteActionPtrOutputWithContext(context.Context) RouteSpecTcpRouteActionPtrOutput
}

type routeSpecTcpRouteActionPtrType RouteSpecTcpRouteActionArgs

func RouteSpecTcpRouteActionPtr(v *RouteSpecTcpRouteActionArgs) RouteSpecTcpRouteActionPtrInput {
	return (*routeSpecTcpRouteActionPtrType)(v)
}

func (*routeSpecTcpRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRouteAction)(nil)).Elem()
}

func (i *routeSpecTcpRouteActionPtrType) ToRouteSpecTcpRouteActionPtrOutput() RouteSpecTcpRouteActionPtrOutput {
	return i.ToRouteSpecTcpRouteActionPtrOutputWithContext(context.Background())
}

func (i *routeSpecTcpRouteActionPtrType) ToRouteSpecTcpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteActionPtrOutput)
}

type RouteSpecTcpRouteActionOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteAction)(nil)).Elem()
}

func (o RouteSpecTcpRouteActionOutput) ToRouteSpecTcpRouteActionOutput() RouteSpecTcpRouteActionOutput {
	return o
}

func (o RouteSpecTcpRouteActionOutput) ToRouteSpecTcpRouteActionOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionOutput {
	return o
}

func (o RouteSpecTcpRouteActionOutput) ToRouteSpecTcpRouteActionPtrOutput() RouteSpecTcpRouteActionPtrOutput {
	return o.ToRouteSpecTcpRouteActionPtrOutputWithContext(context.Background())
}

func (o RouteSpecTcpRouteActionOutput) ToRouteSpecTcpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecTcpRouteAction) *RouteSpecTcpRouteAction {
		return &v
	}).(RouteSpecTcpRouteActionPtrOutput)
}

// Targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecTcpRouteActionOutput) WeightedTargets() RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v RouteSpecTcpRouteAction) []RouteSpecTcpRouteActionWeightedTarget { return v.WeightedTargets }).(RouteSpecTcpRouteActionWeightedTargetArrayOutput)
}

type RouteSpecTcpRouteActionPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRouteAction)(nil)).Elem()
}

func (o RouteSpecTcpRouteActionPtrOutput) ToRouteSpecTcpRouteActionPtrOutput() RouteSpecTcpRouteActionPtrOutput {
	return o
}

func (o RouteSpecTcpRouteActionPtrOutput) ToRouteSpecTcpRouteActionPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionPtrOutput {
	return o
}

func (o RouteSpecTcpRouteActionPtrOutput) Elem() RouteSpecTcpRouteActionOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteAction) RouteSpecTcpRouteAction {
		if v != nil {
			return *v
		}
		var ret RouteSpecTcpRouteAction
		return ret
	}).(RouteSpecTcpRouteActionOutput)
}

// Targets that traffic is routed to when a request matches the route.
// You can specify one or more targets and their relative weights with which to distribute traffic.
func (o RouteSpecTcpRouteActionPtrOutput) WeightedTargets() RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteAction) []RouteSpecTcpRouteActionWeightedTarget {
		if v == nil {
			return nil
		}
		return v.WeightedTargets
	}).(RouteSpecTcpRouteActionWeightedTargetArrayOutput)
}

type RouteSpecTcpRouteActionWeightedTarget struct {
	// The targeted port of the weighted object.
	Port *int `pulumi:"port"`
	// Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode string `pulumi:"virtualNode"`
	// Relative weight of the weighted target. An integer between 0 and 100.
	Weight int `pulumi:"weight"`
}

// RouteSpecTcpRouteActionWeightedTargetInput is an input type that accepts RouteSpecTcpRouteActionWeightedTargetArgs and RouteSpecTcpRouteActionWeightedTargetOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteActionWeightedTargetInput` via:
//
//	RouteSpecTcpRouteActionWeightedTargetArgs{...}
type RouteSpecTcpRouteActionWeightedTargetInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteActionWeightedTargetOutput() RouteSpecTcpRouteActionWeightedTargetOutput
	ToRouteSpecTcpRouteActionWeightedTargetOutputWithContext(context.Context) RouteSpecTcpRouteActionWeightedTargetOutput
}

type RouteSpecTcpRouteActionWeightedTargetArgs struct {
	// The targeted port of the weighted object.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
	VirtualNode pulumi.StringInput `pulumi:"virtualNode"`
	// Relative weight of the weighted target. An integer between 0 and 100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (RouteSpecTcpRouteActionWeightedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecTcpRouteActionWeightedTargetArgs) ToRouteSpecTcpRouteActionWeightedTargetOutput() RouteSpecTcpRouteActionWeightedTargetOutput {
	return i.ToRouteSpecTcpRouteActionWeightedTargetOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteActionWeightedTargetArgs) ToRouteSpecTcpRouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionWeightedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteActionWeightedTargetOutput)
}

// RouteSpecTcpRouteActionWeightedTargetArrayInput is an input type that accepts RouteSpecTcpRouteActionWeightedTargetArray and RouteSpecTcpRouteActionWeightedTargetArrayOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteActionWeightedTargetArrayInput` via:
//
//	RouteSpecTcpRouteActionWeightedTargetArray{ RouteSpecTcpRouteActionWeightedTargetArgs{...} }
type RouteSpecTcpRouteActionWeightedTargetArrayInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteActionWeightedTargetArrayOutput() RouteSpecTcpRouteActionWeightedTargetArrayOutput
	ToRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(context.Context) RouteSpecTcpRouteActionWeightedTargetArrayOutput
}

type RouteSpecTcpRouteActionWeightedTargetArray []RouteSpecTcpRouteActionWeightedTargetInput

func (RouteSpecTcpRouteActionWeightedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecTcpRouteActionWeightedTargetArray) ToRouteSpecTcpRouteActionWeightedTargetArrayOutput() RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return i.ToRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteActionWeightedTargetArray) ToRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteActionWeightedTargetArrayOutput)
}

type RouteSpecTcpRouteActionWeightedTargetOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteActionWeightedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecTcpRouteActionWeightedTargetOutput) ToRouteSpecTcpRouteActionWeightedTargetOutput() RouteSpecTcpRouteActionWeightedTargetOutput {
	return o
}

func (o RouteSpecTcpRouteActionWeightedTargetOutput) ToRouteSpecTcpRouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionWeightedTargetOutput {
	return o
}

// The targeted port of the weighted object.
func (o RouteSpecTcpRouteActionWeightedTargetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouteSpecTcpRouteActionWeightedTarget) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
func (o RouteSpecTcpRouteActionWeightedTargetOutput) VirtualNode() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecTcpRouteActionWeightedTarget) string { return v.VirtualNode }).(pulumi.StringOutput)
}

// Relative weight of the weighted target. An integer between 0 and 100.
func (o RouteSpecTcpRouteActionWeightedTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecTcpRouteActionWeightedTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type RouteSpecTcpRouteActionWeightedTargetArrayOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteActionWeightedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecTcpRouteActionWeightedTargetArrayOutput) ToRouteSpecTcpRouteActionWeightedTargetArrayOutput() RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecTcpRouteActionWeightedTargetArrayOutput) ToRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecTcpRouteActionWeightedTargetArrayOutput) Index(i pulumi.IntInput) RouteSpecTcpRouteActionWeightedTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSpecTcpRouteActionWeightedTarget {
		return vs[0].([]RouteSpecTcpRouteActionWeightedTarget)[vs[1].(int)]
	}).(RouteSpecTcpRouteActionWeightedTargetOutput)
}

type RouteSpecTcpRouteMatch struct {
	// The port number to match from the request.
	Port *int `pulumi:"port"`
}

// RouteSpecTcpRouteMatchInput is an input type that accepts RouteSpecTcpRouteMatchArgs and RouteSpecTcpRouteMatchOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteMatchInput` via:
//
//	RouteSpecTcpRouteMatchArgs{...}
type RouteSpecTcpRouteMatchInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteMatchOutput() RouteSpecTcpRouteMatchOutput
	ToRouteSpecTcpRouteMatchOutputWithContext(context.Context) RouteSpecTcpRouteMatchOutput
}

type RouteSpecTcpRouteMatchArgs struct {
	// The port number to match from the request.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (RouteSpecTcpRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteMatch)(nil)).Elem()
}

func (i RouteSpecTcpRouteMatchArgs) ToRouteSpecTcpRouteMatchOutput() RouteSpecTcpRouteMatchOutput {
	return i.ToRouteSpecTcpRouteMatchOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteMatchArgs) ToRouteSpecTcpRouteMatchOutputWithContext(ctx context.Context) RouteSpecTcpRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteMatchOutput)
}

func (i RouteSpecTcpRouteMatchArgs) ToRouteSpecTcpRouteMatchPtrOutput() RouteSpecTcpRouteMatchPtrOutput {
	return i.ToRouteSpecTcpRouteMatchPtrOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteMatchArgs) ToRouteSpecTcpRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteMatchOutput).ToRouteSpecTcpRouteMatchPtrOutputWithContext(ctx)
}

// RouteSpecTcpRouteMatchPtrInput is an input type that accepts RouteSpecTcpRouteMatchArgs, RouteSpecTcpRouteMatchPtr and RouteSpecTcpRouteMatchPtrOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteMatchPtrInput` via:
//
//	        RouteSpecTcpRouteMatchArgs{...}
//
//	or:
//
//	        nil
type RouteSpecTcpRouteMatchPtrInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteMatchPtrOutput() RouteSpecTcpRouteMatchPtrOutput
	ToRouteSpecTcpRouteMatchPtrOutputWithContext(context.Context) RouteSpecTcpRouteMatchPtrOutput
}

type routeSpecTcpRouteMatchPtrType RouteSpecTcpRouteMatchArgs

func RouteSpecTcpRouteMatchPtr(v *RouteSpecTcpRouteMatchArgs) RouteSpecTcpRouteMatchPtrInput {
	return (*routeSpecTcpRouteMatchPtrType)(v)
}

func (*routeSpecTcpRouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRouteMatch)(nil)).Elem()
}

func (i *routeSpecTcpRouteMatchPtrType) ToRouteSpecTcpRouteMatchPtrOutput() RouteSpecTcpRouteMatchPtrOutput {
	return i.ToRouteSpecTcpRouteMatchPtrOutputWithContext(context.Background())
}

func (i *routeSpecTcpRouteMatchPtrType) ToRouteSpecTcpRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteMatchPtrOutput)
}

type RouteSpecTcpRouteMatchOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteMatch)(nil)).Elem()
}

func (o RouteSpecTcpRouteMatchOutput) ToRouteSpecTcpRouteMatchOutput() RouteSpecTcpRouteMatchOutput {
	return o
}

func (o RouteSpecTcpRouteMatchOutput) ToRouteSpecTcpRouteMatchOutputWithContext(ctx context.Context) RouteSpecTcpRouteMatchOutput {
	return o
}

func (o RouteSpecTcpRouteMatchOutput) ToRouteSpecTcpRouteMatchPtrOutput() RouteSpecTcpRouteMatchPtrOutput {
	return o.ToRouteSpecTcpRouteMatchPtrOutputWithContext(context.Background())
}

func (o RouteSpecTcpRouteMatchOutput) ToRouteSpecTcpRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecTcpRouteMatch) *RouteSpecTcpRouteMatch {
		return &v
	}).(RouteSpecTcpRouteMatchPtrOutput)
}

// The port number to match from the request.
func (o RouteSpecTcpRouteMatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouteSpecTcpRouteMatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type RouteSpecTcpRouteMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRouteMatch)(nil)).Elem()
}

func (o RouteSpecTcpRouteMatchPtrOutput) ToRouteSpecTcpRouteMatchPtrOutput() RouteSpecTcpRouteMatchPtrOutput {
	return o
}

func (o RouteSpecTcpRouteMatchPtrOutput) ToRouteSpecTcpRouteMatchPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteMatchPtrOutput {
	return o
}

func (o RouteSpecTcpRouteMatchPtrOutput) Elem() RouteSpecTcpRouteMatchOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteMatch) RouteSpecTcpRouteMatch {
		if v != nil {
			return *v
		}
		var ret RouteSpecTcpRouteMatch
		return ret
	}).(RouteSpecTcpRouteMatchOutput)
}

// The port number to match from the request.
func (o RouteSpecTcpRouteMatchPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteMatch) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type RouteSpecTcpRouteTimeout struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *RouteSpecTcpRouteTimeoutIdle `pulumi:"idle"`
}

// RouteSpecTcpRouteTimeoutInput is an input type that accepts RouteSpecTcpRouteTimeoutArgs and RouteSpecTcpRouteTimeoutOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteTimeoutInput` via:
//
//	RouteSpecTcpRouteTimeoutArgs{...}
type RouteSpecTcpRouteTimeoutInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteTimeoutOutput() RouteSpecTcpRouteTimeoutOutput
	ToRouteSpecTcpRouteTimeoutOutputWithContext(context.Context) RouteSpecTcpRouteTimeoutOutput
}

type RouteSpecTcpRouteTimeoutArgs struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle RouteSpecTcpRouteTimeoutIdlePtrInput `pulumi:"idle"`
}

func (RouteSpecTcpRouteTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteTimeout)(nil)).Elem()
}

func (i RouteSpecTcpRouteTimeoutArgs) ToRouteSpecTcpRouteTimeoutOutput() RouteSpecTcpRouteTimeoutOutput {
	return i.ToRouteSpecTcpRouteTimeoutOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteTimeoutArgs) ToRouteSpecTcpRouteTimeoutOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteTimeoutOutput)
}

func (i RouteSpecTcpRouteTimeoutArgs) ToRouteSpecTcpRouteTimeoutPtrOutput() RouteSpecTcpRouteTimeoutPtrOutput {
	return i.ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteTimeoutArgs) ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteTimeoutOutput).ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(ctx)
}

// RouteSpecTcpRouteTimeoutPtrInput is an input type that accepts RouteSpecTcpRouteTimeoutArgs, RouteSpecTcpRouteTimeoutPtr and RouteSpecTcpRouteTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteTimeoutPtrInput` via:
//
//	        RouteSpecTcpRouteTimeoutArgs{...}
//
//	or:
//
//	        nil
type RouteSpecTcpRouteTimeoutPtrInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteTimeoutPtrOutput() RouteSpecTcpRouteTimeoutPtrOutput
	ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(context.Context) RouteSpecTcpRouteTimeoutPtrOutput
}

type routeSpecTcpRouteTimeoutPtrType RouteSpecTcpRouteTimeoutArgs

func RouteSpecTcpRouteTimeoutPtr(v *RouteSpecTcpRouteTimeoutArgs) RouteSpecTcpRouteTimeoutPtrInput {
	return (*routeSpecTcpRouteTimeoutPtrType)(v)
}

func (*routeSpecTcpRouteTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRouteTimeout)(nil)).Elem()
}

func (i *routeSpecTcpRouteTimeoutPtrType) ToRouteSpecTcpRouteTimeoutPtrOutput() RouteSpecTcpRouteTimeoutPtrOutput {
	return i.ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeSpecTcpRouteTimeoutPtrType) ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteTimeoutPtrOutput)
}

type RouteSpecTcpRouteTimeoutOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteTimeout)(nil)).Elem()
}

func (o RouteSpecTcpRouteTimeoutOutput) ToRouteSpecTcpRouteTimeoutOutput() RouteSpecTcpRouteTimeoutOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutOutput) ToRouteSpecTcpRouteTimeoutOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutOutput) ToRouteSpecTcpRouteTimeoutPtrOutput() RouteSpecTcpRouteTimeoutPtrOutput {
	return o.ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteSpecTcpRouteTimeoutOutput) ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecTcpRouteTimeout) *RouteSpecTcpRouteTimeout {
		return &v
	}).(RouteSpecTcpRouteTimeoutPtrOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecTcpRouteTimeoutOutput) Idle() RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v RouteSpecTcpRouteTimeout) *RouteSpecTcpRouteTimeoutIdle { return v.Idle }).(RouteSpecTcpRouteTimeoutIdlePtrOutput)
}

type RouteSpecTcpRouteTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRouteTimeout)(nil)).Elem()
}

func (o RouteSpecTcpRouteTimeoutPtrOutput) ToRouteSpecTcpRouteTimeoutPtrOutput() RouteSpecTcpRouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutPtrOutput) ToRouteSpecTcpRouteTimeoutPtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutPtrOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutPtrOutput) Elem() RouteSpecTcpRouteTimeoutOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteTimeout) RouteSpecTcpRouteTimeout {
		if v != nil {
			return *v
		}
		var ret RouteSpecTcpRouteTimeout
		return ret
	}).(RouteSpecTcpRouteTimeoutOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o RouteSpecTcpRouteTimeoutPtrOutput) Idle() RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteTimeout) *RouteSpecTcpRouteTimeoutIdle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(RouteSpecTcpRouteTimeoutIdlePtrOutput)
}

type RouteSpecTcpRouteTimeoutIdle struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// RouteSpecTcpRouteTimeoutIdleInput is an input type that accepts RouteSpecTcpRouteTimeoutIdleArgs and RouteSpecTcpRouteTimeoutIdleOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteTimeoutIdleInput` via:
//
//	RouteSpecTcpRouteTimeoutIdleArgs{...}
type RouteSpecTcpRouteTimeoutIdleInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteTimeoutIdleOutput() RouteSpecTcpRouteTimeoutIdleOutput
	ToRouteSpecTcpRouteTimeoutIdleOutputWithContext(context.Context) RouteSpecTcpRouteTimeoutIdleOutput
}

type RouteSpecTcpRouteTimeoutIdleArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (RouteSpecTcpRouteTimeoutIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteTimeoutIdle)(nil)).Elem()
}

func (i RouteSpecTcpRouteTimeoutIdleArgs) ToRouteSpecTcpRouteTimeoutIdleOutput() RouteSpecTcpRouteTimeoutIdleOutput {
	return i.ToRouteSpecTcpRouteTimeoutIdleOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteTimeoutIdleArgs) ToRouteSpecTcpRouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteTimeoutIdleOutput)
}

func (i RouteSpecTcpRouteTimeoutIdleArgs) ToRouteSpecTcpRouteTimeoutIdlePtrOutput() RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteTimeoutIdleArgs) ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteTimeoutIdleOutput).ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(ctx)
}

// RouteSpecTcpRouteTimeoutIdlePtrInput is an input type that accepts RouteSpecTcpRouteTimeoutIdleArgs, RouteSpecTcpRouteTimeoutIdlePtr and RouteSpecTcpRouteTimeoutIdlePtrOutput values.
// You can construct a concrete instance of `RouteSpecTcpRouteTimeoutIdlePtrInput` via:
//
//	        RouteSpecTcpRouteTimeoutIdleArgs{...}
//
//	or:
//
//	        nil
type RouteSpecTcpRouteTimeoutIdlePtrInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteTimeoutIdlePtrOutput() RouteSpecTcpRouteTimeoutIdlePtrOutput
	ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(context.Context) RouteSpecTcpRouteTimeoutIdlePtrOutput
}

type routeSpecTcpRouteTimeoutIdlePtrType RouteSpecTcpRouteTimeoutIdleArgs

func RouteSpecTcpRouteTimeoutIdlePtr(v *RouteSpecTcpRouteTimeoutIdleArgs) RouteSpecTcpRouteTimeoutIdlePtrInput {
	return (*routeSpecTcpRouteTimeoutIdlePtrType)(v)
}

func (*routeSpecTcpRouteTimeoutIdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRouteTimeoutIdle)(nil)).Elem()
}

func (i *routeSpecTcpRouteTimeoutIdlePtrType) ToRouteSpecTcpRouteTimeoutIdlePtrOutput() RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return i.ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (i *routeSpecTcpRouteTimeoutIdlePtrType) ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteTimeoutIdlePtrOutput)
}

type RouteSpecTcpRouteTimeoutIdleOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteTimeoutIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecTcpRouteTimeoutIdleOutput) ToRouteSpecTcpRouteTimeoutIdleOutput() RouteSpecTcpRouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutIdleOutput) ToRouteSpecTcpRouteTimeoutIdleOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutIdleOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutIdleOutput) ToRouteSpecTcpRouteTimeoutIdlePtrOutput() RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return o.ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(context.Background())
}

func (o RouteSpecTcpRouteTimeoutIdleOutput) ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpecTcpRouteTimeoutIdle) *RouteSpecTcpRouteTimeoutIdle {
		return &v
	}).(RouteSpecTcpRouteTimeoutIdlePtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o RouteSpecTcpRouteTimeoutIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteSpecTcpRouteTimeoutIdle) string { return v.Unit }).(pulumi.StringOutput)
}

// Number of time units. Minimum value of `0`.
func (o RouteSpecTcpRouteTimeoutIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteSpecTcpRouteTimeoutIdle) int { return v.Value }).(pulumi.IntOutput)
}

type RouteSpecTcpRouteTimeoutIdlePtrOutput struct{ *pulumi.OutputState }

func (RouteSpecTcpRouteTimeoutIdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpecTcpRouteTimeoutIdle)(nil)).Elem()
}

func (o RouteSpecTcpRouteTimeoutIdlePtrOutput) ToRouteSpecTcpRouteTimeoutIdlePtrOutput() RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutIdlePtrOutput) ToRouteSpecTcpRouteTimeoutIdlePtrOutputWithContext(ctx context.Context) RouteSpecTcpRouteTimeoutIdlePtrOutput {
	return o
}

func (o RouteSpecTcpRouteTimeoutIdlePtrOutput) Elem() RouteSpecTcpRouteTimeoutIdleOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteTimeoutIdle) RouteSpecTcpRouteTimeoutIdle {
		if v != nil {
			return *v
		}
		var ret RouteSpecTcpRouteTimeoutIdle
		return ret
	}).(RouteSpecTcpRouteTimeoutIdleOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o RouteSpecTcpRouteTimeoutIdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteTimeoutIdle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Number of time units. Minimum value of `0`.
func (o RouteSpecTcpRouteTimeoutIdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpecTcpRouteTimeoutIdle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualGatewaySpec struct {
	// Defaults for backends.
	BackendDefaults *VirtualGatewaySpecBackendDefaults `pulumi:"backendDefaults"`
	// Listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.
	Listeners []VirtualGatewaySpecListener `pulumi:"listeners"`
	// Inbound and outbound access logging information for the virtual gateway.
	Logging *VirtualGatewaySpecLogging `pulumi:"logging"`
}

// VirtualGatewaySpecInput is an input type that accepts VirtualGatewaySpecArgs and VirtualGatewaySpecOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecInput` via:
//
//	VirtualGatewaySpecArgs{...}
type VirtualGatewaySpecInput interface {
	pulumi.Input

	ToVirtualGatewaySpecOutput() VirtualGatewaySpecOutput
	ToVirtualGatewaySpecOutputWithContext(context.Context) VirtualGatewaySpecOutput
}

type VirtualGatewaySpecArgs struct {
	// Defaults for backends.
	BackendDefaults VirtualGatewaySpecBackendDefaultsPtrInput `pulumi:"backendDefaults"`
	// Listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.
	Listeners VirtualGatewaySpecListenerArrayInput `pulumi:"listeners"`
	// Inbound and outbound access logging information for the virtual gateway.
	Logging VirtualGatewaySpecLoggingPtrInput `pulumi:"logging"`
}

func (VirtualGatewaySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpec)(nil)).Elem()
}

func (i VirtualGatewaySpecArgs) ToVirtualGatewaySpecOutput() VirtualGatewaySpecOutput {
	return i.ToVirtualGatewaySpecOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecArgs) ToVirtualGatewaySpecOutputWithContext(ctx context.Context) VirtualGatewaySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecOutput)
}

func (i VirtualGatewaySpecArgs) ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput {
	return i.ToVirtualGatewaySpecPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecArgs) ToVirtualGatewaySpecPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecOutput).ToVirtualGatewaySpecPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecPtrInput is an input type that accepts VirtualGatewaySpecArgs, VirtualGatewaySpecPtr and VirtualGatewaySpecPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecPtrInput` via:
//
//	        VirtualGatewaySpecArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput
	ToVirtualGatewaySpecPtrOutputWithContext(context.Context) VirtualGatewaySpecPtrOutput
}

type virtualGatewaySpecPtrType VirtualGatewaySpecArgs

func VirtualGatewaySpecPtr(v *VirtualGatewaySpecArgs) VirtualGatewaySpecPtrInput {
	return (*virtualGatewaySpecPtrType)(v)
}

func (*virtualGatewaySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpec)(nil)).Elem()
}

func (i *virtualGatewaySpecPtrType) ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput {
	return i.ToVirtualGatewaySpecPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecPtrType) ToVirtualGatewaySpecPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecPtrOutput)
}

type VirtualGatewaySpecOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpec)(nil)).Elem()
}

func (o VirtualGatewaySpecOutput) ToVirtualGatewaySpecOutput() VirtualGatewaySpecOutput {
	return o
}

func (o VirtualGatewaySpecOutput) ToVirtualGatewaySpecOutputWithContext(ctx context.Context) VirtualGatewaySpecOutput {
	return o
}

func (o VirtualGatewaySpecOutput) ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput {
	return o.ToVirtualGatewaySpecPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecOutput) ToVirtualGatewaySpecPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpec) *VirtualGatewaySpec {
		return &v
	}).(VirtualGatewaySpecPtrOutput)
}

// Defaults for backends.
func (o VirtualGatewaySpecOutput) BackendDefaults() VirtualGatewaySpecBackendDefaultsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpec) *VirtualGatewaySpecBackendDefaults { return v.BackendDefaults }).(VirtualGatewaySpecBackendDefaultsPtrOutput)
}

// Listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.
func (o VirtualGatewaySpecOutput) Listeners() VirtualGatewaySpecListenerArrayOutput {
	return o.ApplyT(func(v VirtualGatewaySpec) []VirtualGatewaySpecListener { return v.Listeners }).(VirtualGatewaySpecListenerArrayOutput)
}

// Inbound and outbound access logging information for the virtual gateway.
func (o VirtualGatewaySpecOutput) Logging() VirtualGatewaySpecLoggingPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpec) *VirtualGatewaySpecLogging { return v.Logging }).(VirtualGatewaySpecLoggingPtrOutput)
}

type VirtualGatewaySpecPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpec)(nil)).Elem()
}

func (o VirtualGatewaySpecPtrOutput) ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput {
	return o
}

func (o VirtualGatewaySpecPtrOutput) ToVirtualGatewaySpecPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecPtrOutput {
	return o
}

func (o VirtualGatewaySpecPtrOutput) Elem() VirtualGatewaySpecOutput {
	return o.ApplyT(func(v *VirtualGatewaySpec) VirtualGatewaySpec {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpec
		return ret
	}).(VirtualGatewaySpecOutput)
}

// Defaults for backends.
func (o VirtualGatewaySpecPtrOutput) BackendDefaults() VirtualGatewaySpecBackendDefaultsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpec) *VirtualGatewaySpecBackendDefaults {
		if v == nil {
			return nil
		}
		return v.BackendDefaults
	}).(VirtualGatewaySpecBackendDefaultsPtrOutput)
}

// Listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.
func (o VirtualGatewaySpecPtrOutput) Listeners() VirtualGatewaySpecListenerArrayOutput {
	return o.ApplyT(func(v *VirtualGatewaySpec) []VirtualGatewaySpecListener {
		if v == nil {
			return nil
		}
		return v.Listeners
	}).(VirtualGatewaySpecListenerArrayOutput)
}

// Inbound and outbound access logging information for the virtual gateway.
func (o VirtualGatewaySpecPtrOutput) Logging() VirtualGatewaySpecLoggingPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpec) *VirtualGatewaySpecLogging {
		if v == nil {
			return nil
		}
		return v.Logging
	}).(VirtualGatewaySpecLoggingPtrOutput)
}

type VirtualGatewaySpecBackendDefaults struct {
	// Default client policy for virtual gateway backends.
	ClientPolicy *VirtualGatewaySpecBackendDefaultsClientPolicy `pulumi:"clientPolicy"`
}

// VirtualGatewaySpecBackendDefaultsInput is an input type that accepts VirtualGatewaySpecBackendDefaultsArgs and VirtualGatewaySpecBackendDefaultsOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsInput` via:
//
//	VirtualGatewaySpecBackendDefaultsArgs{...}
type VirtualGatewaySpecBackendDefaultsInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsOutput() VirtualGatewaySpecBackendDefaultsOutput
	ToVirtualGatewaySpecBackendDefaultsOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsOutput
}

type VirtualGatewaySpecBackendDefaultsArgs struct {
	// Default client policy for virtual gateway backends.
	ClientPolicy VirtualGatewaySpecBackendDefaultsClientPolicyPtrInput `pulumi:"clientPolicy"`
}

func (VirtualGatewaySpecBackendDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaults)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsArgs) ToVirtualGatewaySpecBackendDefaultsOutput() VirtualGatewaySpecBackendDefaultsOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsArgs) ToVirtualGatewaySpecBackendDefaultsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsOutput)
}

func (i VirtualGatewaySpecBackendDefaultsArgs) ToVirtualGatewaySpecBackendDefaultsPtrOutput() VirtualGatewaySpecBackendDefaultsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsArgs) ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsOutput).ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsArgs, VirtualGatewaySpecBackendDefaultsPtr and VirtualGatewaySpecBackendDefaultsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsPtrInput` via:
//
//	        VirtualGatewaySpecBackendDefaultsArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecBackendDefaultsPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsPtrOutput() VirtualGatewaySpecBackendDefaultsPtrOutput
	ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsPtrOutput
}

type virtualGatewaySpecBackendDefaultsPtrType VirtualGatewaySpecBackendDefaultsArgs

func VirtualGatewaySpecBackendDefaultsPtr(v *VirtualGatewaySpecBackendDefaultsArgs) VirtualGatewaySpecBackendDefaultsPtrInput {
	return (*virtualGatewaySpecBackendDefaultsPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaults)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsPtrType) ToVirtualGatewaySpecBackendDefaultsPtrOutput() VirtualGatewaySpecBackendDefaultsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsPtrType) ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaults)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsOutput) ToVirtualGatewaySpecBackendDefaultsOutput() VirtualGatewaySpecBackendDefaultsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsOutput) ToVirtualGatewaySpecBackendDefaultsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsOutput) ToVirtualGatewaySpecBackendDefaultsPtrOutput() VirtualGatewaySpecBackendDefaultsPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsOutput) ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaults) *VirtualGatewaySpecBackendDefaults {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsPtrOutput)
}

// Default client policy for virtual gateway backends.
func (o VirtualGatewaySpecBackendDefaultsOutput) ClientPolicy() VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaults) *VirtualGatewaySpecBackendDefaultsClientPolicy {
		return v.ClientPolicy
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaults)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsPtrOutput) ToVirtualGatewaySpecBackendDefaultsPtrOutput() VirtualGatewaySpecBackendDefaultsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsPtrOutput) ToVirtualGatewaySpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaults) VirtualGatewaySpecBackendDefaults {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaults
		return ret
	}).(VirtualGatewaySpecBackendDefaultsOutput)
}

// Default client policy for virtual gateway backends.
func (o VirtualGatewaySpecBackendDefaultsPtrOutput) ClientPolicy() VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaults) *VirtualGatewaySpecBackendDefaultsClientPolicy {
		if v == nil {
			return nil
		}
		return v.ClientPolicy
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicy struct {
	// Transport Layer Security (TLS) client policy.
	Tls *VirtualGatewaySpecBackendDefaultsClientPolicyTls `pulumi:"tls"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyArgs and VirtualGatewaySpecBackendDefaultsClientPolicyOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyInput` via:
//
//	VirtualGatewaySpecBackendDefaultsClientPolicyArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyOutput() VirtualGatewaySpecBackendDefaultsClientPolicyOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyArgs struct {
	// Transport Layer Security (TLS) client policy.
	Tls VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrInput `pulumi:"tls"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyOutput() VirtualGatewaySpecBackendDefaultsClientPolicyOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyArgs, VirtualGatewaySpecBackendDefaultsClientPolicyPtr and VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyPtrInput` via:
//
//	        VirtualGatewaySpecBackendDefaultsClientPolicyArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecBackendDefaultsClientPolicyPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyPtrType VirtualGatewaySpecBackendDefaultsClientPolicyArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyArgs) VirtualGatewaySpecBackendDefaultsClientPolicyPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyOutput() VirtualGatewaySpecBackendDefaultsClientPolicyOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicy) *VirtualGatewaySpecBackendDefaultsClientPolicy {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput)
}

// Transport Layer Security (TLS) client policy.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyOutput) Tls() VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicy) *VirtualGatewaySpecBackendDefaultsClientPolicyTls {
		return v.Tls
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicy) VirtualGatewaySpecBackendDefaultsClientPolicy {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicy
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyOutput)
}

// Transport Layer Security (TLS) client policy.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput) Tls() VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicy) *VirtualGatewaySpecBackendDefaultsClientPolicyTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTls struct {
	// Listener's TLS certificate.
	Certificate *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate `pulumi:"certificate"`
	// Whether the policy is enforced. Default is `true`.
	Enforce *bool `pulumi:"enforce"`
	// One or more ports that the policy is enforced for.
	Ports []int `pulumi:"ports"`
	// Listener's Transport Layer Security (TLS) validation context.
	Validation VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation `pulumi:"validation"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsInput` via:
//
//	VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs struct {
	// Listener's TLS certificate.
	Certificate VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrInput `pulumi:"certificate"`
	// Whether the policy is enforced. Default is `true`.
	Enforce pulumi.BoolPtrInput `pulumi:"enforce"`
	// One or more ports that the policy is enforced for.
	Ports pulumi.IntArrayInput `pulumi:"ports"`
	// Listener's Transport Layer Security (TLS) validation context.
	Validation VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationInput `pulumi:"validation"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrInput` via:
//
//	        VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTls) *VirtualGatewaySpecBackendDefaultsClientPolicyTls {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput)
}

// Listener's TLS certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) Certificate() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTls) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate {
		return v.Certificate
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

// Whether the policy is enforced. Default is `true`.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTls) *bool { return v.Enforce }).(pulumi.BoolPtrOutput)
}

// One or more ports that the policy is enforced for.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTls) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

// Listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput) Validation() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTls) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation {
		return v.Validation
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTls) VirtualGatewaySpecBackendDefaultsClientPolicyTls {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTls
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput)
}

// Listener's TLS certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) Certificate() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTls) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

// Whether the policy is enforced. Default is `true`.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTls) *bool {
		if v == nil {
			return nil
		}
		return v.Enforce
	}).(pulumi.BoolPtrOutput)
}

// One or more ports that the policy is enforced for.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTls) []int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntArrayOutput)
}

// Listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput) Validation() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTls) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation {
		if v == nil {
			return nil
		}
		return &v.Validation
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate struct {
	// Local file certificate.
	File *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds `pulumi:"sds"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateInput` via:
//
//	VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs struct {
	// Local file certificate.
	File VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput `pulumi:"sds"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrInput` via:
//
//	        VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

// Local file certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput) File() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile {
		return v.File
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput) Sds() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds {
		return v.Sds
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput)
}

// Local file certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) File() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) Sds() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificate) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
	// Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey string `pulumi:"privateKey"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileInput` via:
//
//	VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	// Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput` via:
//
//	        VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

// Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

// Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds struct {
	// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsInput` via:
//
//	VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs struct {
	// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput` via:
//
//	        VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds) VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput)
}

// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation struct {
	// SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
	SubjectAlternativeNames *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames `pulumi:"subjectAlternativeNames"`
	// TLS validation context trust.
	Trust VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust `pulumi:"trust"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationInput` via:
//
//	VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs struct {
	// SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
	SubjectAlternativeNames VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput `pulumi:"subjectAlternativeNames"`
	// TLS validation context trust.
	Trust VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustInput `pulumi:"trust"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrInput` via:
//
//	        VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput)
}

// SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput) SubjectAlternativeNames() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		return v.SubjectAlternativeNames
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// TLS validation context trust.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput) Trust() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust {
		return v.Trust
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput)
}

// SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput) SubjectAlternativeNames() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// TLS validation context trust.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput) Trust() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidation) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust {
		if v == nil {
			return nil
		}
		return &v.Trust
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames struct {
	// Criteria for determining a SAN's match.
	Match VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch `pulumi:"match"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput` via:
//
//	VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs struct {
	// Criteria for determining a SAN's match.
	Match VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput `pulumi:"match"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput` via:
//
//	        VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// Criteria for determining a SAN's match.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) Match() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		return v.Match
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput)
}

// Criteria for determining a SAN's match.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) Match() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch struct {
	// Values sent must match the specified values exactly.
	Exacts []string `pulumi:"exacts"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput` via:
//
//	VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs struct {
	// Values sent must match the specified values exactly.
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput` via:
//
//	        VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

// Values sent must match the specified values exactly.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) []string {
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

// Values sent must match the specified values exactly.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) []string {
		if v == nil {
			return nil
		}
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust struct {
	// TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
	Acm *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm `pulumi:"acm"`
	// TLS validation context trust for a local file certificate.
	File *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile `pulumi:"file"`
	// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds `pulumi:"sds"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustInput` via:
//
//	VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs struct {
	// TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
	Acm VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput `pulumi:"acm"`
	// TLS validation context trust for a local file certificate.
	File VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput `pulumi:"file"`
	// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput `pulumi:"sds"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput` via:
//
//	        VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput)
}

// TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) Acm() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		return v.Acm
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

// TLS validation context trust for a local file certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) File() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		return v.File
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput) Sds() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		return v.Sds
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput)
}

// TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) Acm() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		if v == nil {
			return nil
		}
		return v.Acm
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

// TLS validation context trust for a local file certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) File() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) Sds() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm struct {
	// One or more ACM ARNs.
	CertificateAuthorityArns []string `pulumi:"certificateAuthorityArns"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput` via:
//
//	VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs struct {
	// One or more ACM ARNs.
	CertificateAuthorityArns pulumi.StringArrayInput `pulumi:"certificateAuthorityArns"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput` via:
//
//	        VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

// One or more ACM ARNs.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm) []string {
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput)
}

// One or more ACM ARNs.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcm) []string {
		if v == nil {
			return nil
		}
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileInput` via:
//
//	VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput` via:
//
//	        VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds struct {
	// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput` via:
//
//	VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{...}
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs struct {
	// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput)
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput).ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput is an input type that accepts VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs, VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtr and VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput` via:
//
//	        VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput
	ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput
}

type virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs

func VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtr(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput {
	return (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType)(v)
}

func (*virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds) *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		return &v
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) ToVirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) Elem() VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds) VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds
		return ret
	}).(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput)
}

// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecListener struct {
	// Connection pool information for the listener.
	ConnectionPool *VirtualGatewaySpecListenerConnectionPool `pulumi:"connectionPool"`
	// Health check information for the listener.
	HealthCheck *VirtualGatewaySpecListenerHealthCheck `pulumi:"healthCheck"`
	// Port mapping information for the listener.
	PortMapping VirtualGatewaySpecListenerPortMapping `pulumi:"portMapping"`
	// Transport Layer Security (TLS) properties for the listener
	Tls *VirtualGatewaySpecListenerTls `pulumi:"tls"`
}

// VirtualGatewaySpecListenerInput is an input type that accepts VirtualGatewaySpecListenerArgs and VirtualGatewaySpecListenerOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerInput` via:
//
//	VirtualGatewaySpecListenerArgs{...}
type VirtualGatewaySpecListenerInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerOutput() VirtualGatewaySpecListenerOutput
	ToVirtualGatewaySpecListenerOutputWithContext(context.Context) VirtualGatewaySpecListenerOutput
}

type VirtualGatewaySpecListenerArgs struct {
	// Connection pool information for the listener.
	ConnectionPool VirtualGatewaySpecListenerConnectionPoolPtrInput `pulumi:"connectionPool"`
	// Health check information for the listener.
	HealthCheck VirtualGatewaySpecListenerHealthCheckPtrInput `pulumi:"healthCheck"`
	// Port mapping information for the listener.
	PortMapping VirtualGatewaySpecListenerPortMappingInput `pulumi:"portMapping"`
	// Transport Layer Security (TLS) properties for the listener
	Tls VirtualGatewaySpecListenerTlsPtrInput `pulumi:"tls"`
}

func (VirtualGatewaySpecListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListener)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerArgs) ToVirtualGatewaySpecListenerOutput() VirtualGatewaySpecListenerOutput {
	return i.ToVirtualGatewaySpecListenerOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerArgs) ToVirtualGatewaySpecListenerOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerOutput)
}

// VirtualGatewaySpecListenerArrayInput is an input type that accepts VirtualGatewaySpecListenerArray and VirtualGatewaySpecListenerArrayOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerArrayInput` via:
//
//	VirtualGatewaySpecListenerArray{ VirtualGatewaySpecListenerArgs{...} }
type VirtualGatewaySpecListenerArrayInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerArrayOutput() VirtualGatewaySpecListenerArrayOutput
	ToVirtualGatewaySpecListenerArrayOutputWithContext(context.Context) VirtualGatewaySpecListenerArrayOutput
}

type VirtualGatewaySpecListenerArray []VirtualGatewaySpecListenerInput

func (VirtualGatewaySpecListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualGatewaySpecListener)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerArray) ToVirtualGatewaySpecListenerArrayOutput() VirtualGatewaySpecListenerArrayOutput {
	return i.ToVirtualGatewaySpecListenerArrayOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerArray) ToVirtualGatewaySpecListenerArrayOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerArrayOutput)
}

type VirtualGatewaySpecListenerOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListener)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerOutput) ToVirtualGatewaySpecListenerOutput() VirtualGatewaySpecListenerOutput {
	return o
}

func (o VirtualGatewaySpecListenerOutput) ToVirtualGatewaySpecListenerOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerOutput {
	return o
}

// Connection pool information for the listener.
func (o VirtualGatewaySpecListenerOutput) ConnectionPool() VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListener) *VirtualGatewaySpecListenerConnectionPool { return v.ConnectionPool }).(VirtualGatewaySpecListenerConnectionPoolPtrOutput)
}

// Health check information for the listener.
func (o VirtualGatewaySpecListenerOutput) HealthCheck() VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListener) *VirtualGatewaySpecListenerHealthCheck { return v.HealthCheck }).(VirtualGatewaySpecListenerHealthCheckPtrOutput)
}

// Port mapping information for the listener.
func (o VirtualGatewaySpecListenerOutput) PortMapping() VirtualGatewaySpecListenerPortMappingOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListener) VirtualGatewaySpecListenerPortMapping { return v.PortMapping }).(VirtualGatewaySpecListenerPortMappingOutput)
}

// Transport Layer Security (TLS) properties for the listener
func (o VirtualGatewaySpecListenerOutput) Tls() VirtualGatewaySpecListenerTlsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListener) *VirtualGatewaySpecListenerTls { return v.Tls }).(VirtualGatewaySpecListenerTlsPtrOutput)
}

type VirtualGatewaySpecListenerArrayOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualGatewaySpecListener)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerArrayOutput) ToVirtualGatewaySpecListenerArrayOutput() VirtualGatewaySpecListenerArrayOutput {
	return o
}

func (o VirtualGatewaySpecListenerArrayOutput) ToVirtualGatewaySpecListenerArrayOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerArrayOutput {
	return o
}

func (o VirtualGatewaySpecListenerArrayOutput) Index(i pulumi.IntInput) VirtualGatewaySpecListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualGatewaySpecListener {
		return vs[0].([]VirtualGatewaySpecListener)[vs[1].(int)]
	}).(VirtualGatewaySpecListenerOutput)
}

type VirtualGatewaySpecListenerConnectionPool struct {
	// Connection pool information for gRPC listeners.
	Grpc *VirtualGatewaySpecListenerConnectionPoolGrpc `pulumi:"grpc"`
	// Connection pool information for HTTP listeners.
	Http *VirtualGatewaySpecListenerConnectionPoolHttp `pulumi:"http"`
	// Connection pool information for HTTP2 listeners.
	Http2 *VirtualGatewaySpecListenerConnectionPoolHttp2 `pulumi:"http2"`
}

// VirtualGatewaySpecListenerConnectionPoolInput is an input type that accepts VirtualGatewaySpecListenerConnectionPoolArgs and VirtualGatewaySpecListenerConnectionPoolOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolInput` via:
//
//	VirtualGatewaySpecListenerConnectionPoolArgs{...}
type VirtualGatewaySpecListenerConnectionPoolInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolOutput() VirtualGatewaySpecListenerConnectionPoolOutput
	ToVirtualGatewaySpecListenerConnectionPoolOutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolOutput
}

type VirtualGatewaySpecListenerConnectionPoolArgs struct {
	// Connection pool information for gRPC listeners.
	Grpc VirtualGatewaySpecListenerConnectionPoolGrpcPtrInput `pulumi:"grpc"`
	// Connection pool information for HTTP listeners.
	Http VirtualGatewaySpecListenerConnectionPoolHttpPtrInput `pulumi:"http"`
	// Connection pool information for HTTP2 listeners.
	Http2 VirtualGatewaySpecListenerConnectionPoolHttp2PtrInput `pulumi:"http2"`
}

func (VirtualGatewaySpecListenerConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPool)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerConnectionPoolArgs) ToVirtualGatewaySpecListenerConnectionPoolOutput() VirtualGatewaySpecListenerConnectionPoolOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolArgs) ToVirtualGatewaySpecListenerConnectionPoolOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolOutput)
}

func (i VirtualGatewaySpecListenerConnectionPoolArgs) ToVirtualGatewaySpecListenerConnectionPoolPtrOutput() VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolArgs) ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolOutput).ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerConnectionPoolPtrInput is an input type that accepts VirtualGatewaySpecListenerConnectionPoolArgs, VirtualGatewaySpecListenerConnectionPoolPtr and VirtualGatewaySpecListenerConnectionPoolPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolPtrInput` via:
//
//	        VirtualGatewaySpecListenerConnectionPoolArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerConnectionPoolPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolPtrOutput() VirtualGatewaySpecListenerConnectionPoolPtrOutput
	ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolPtrOutput
}

type virtualGatewaySpecListenerConnectionPoolPtrType VirtualGatewaySpecListenerConnectionPoolArgs

func VirtualGatewaySpecListenerConnectionPoolPtr(v *VirtualGatewaySpecListenerConnectionPoolArgs) VirtualGatewaySpecListenerConnectionPoolPtrInput {
	return (*virtualGatewaySpecListenerConnectionPoolPtrType)(v)
}

func (*virtualGatewaySpecListenerConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPool)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerConnectionPoolPtrType) ToVirtualGatewaySpecListenerConnectionPoolPtrOutput() VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerConnectionPoolPtrType) ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolPtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPool)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolOutput) ToVirtualGatewaySpecListenerConnectionPoolOutput() VirtualGatewaySpecListenerConnectionPoolOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolOutput) ToVirtualGatewaySpecListenerConnectionPoolOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolOutput) ToVirtualGatewaySpecListenerConnectionPoolPtrOutput() VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return o.ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerConnectionPoolOutput) ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerConnectionPool) *VirtualGatewaySpecListenerConnectionPool {
		return &v
	}).(VirtualGatewaySpecListenerConnectionPoolPtrOutput)
}

// Connection pool information for gRPC listeners.
func (o VirtualGatewaySpecListenerConnectionPoolOutput) Grpc() VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerConnectionPool) *VirtualGatewaySpecListenerConnectionPoolGrpc {
		return v.Grpc
	}).(VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput)
}

// Connection pool information for HTTP listeners.
func (o VirtualGatewaySpecListenerConnectionPoolOutput) Http() VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerConnectionPool) *VirtualGatewaySpecListenerConnectionPoolHttp {
		return v.Http
	}).(VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput)
}

// Connection pool information for HTTP2 listeners.
func (o VirtualGatewaySpecListenerConnectionPoolOutput) Http2() VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerConnectionPool) *VirtualGatewaySpecListenerConnectionPoolHttp2 {
		return v.Http2
	}).(VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPool)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolPtrOutput) ToVirtualGatewaySpecListenerConnectionPoolPtrOutput() VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolPtrOutput) ToVirtualGatewaySpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolPtrOutput) Elem() VirtualGatewaySpecListenerConnectionPoolOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPool) VirtualGatewaySpecListenerConnectionPool {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerConnectionPool
		return ret
	}).(VirtualGatewaySpecListenerConnectionPoolOutput)
}

// Connection pool information for gRPC listeners.
func (o VirtualGatewaySpecListenerConnectionPoolPtrOutput) Grpc() VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPool) *VirtualGatewaySpecListenerConnectionPoolGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput)
}

// Connection pool information for HTTP listeners.
func (o VirtualGatewaySpecListenerConnectionPoolPtrOutput) Http() VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPool) *VirtualGatewaySpecListenerConnectionPoolHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput)
}

// Connection pool information for HTTP2 listeners.
func (o VirtualGatewaySpecListenerConnectionPoolPtrOutput) Http2() VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPool) *VirtualGatewaySpecListenerConnectionPoolHttp2 {
		if v == nil {
			return nil
		}
		return v.Http2
	}).(VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolGrpc struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests int `pulumi:"maxRequests"`
}

// VirtualGatewaySpecListenerConnectionPoolGrpcInput is an input type that accepts VirtualGatewaySpecListenerConnectionPoolGrpcArgs and VirtualGatewaySpecListenerConnectionPoolGrpcOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolGrpcInput` via:
//
//	VirtualGatewaySpecListenerConnectionPoolGrpcArgs{...}
type VirtualGatewaySpecListenerConnectionPoolGrpcInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolGrpcOutput() VirtualGatewaySpecListenerConnectionPoolGrpcOutput
	ToVirtualGatewaySpecListenerConnectionPoolGrpcOutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcOutput
}

type VirtualGatewaySpecListenerConnectionPoolGrpcArgs struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (VirtualGatewaySpecListenerConnectionPoolGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerConnectionPoolGrpcArgs) ToVirtualGatewaySpecListenerConnectionPoolGrpcOutput() VirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolGrpcOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolGrpcArgs) ToVirtualGatewaySpecListenerConnectionPoolGrpcOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolGrpcOutput)
}

func (i VirtualGatewaySpecListenerConnectionPoolGrpcArgs) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput() VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolGrpcArgs) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolGrpcOutput).ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerConnectionPoolGrpcPtrInput is an input type that accepts VirtualGatewaySpecListenerConnectionPoolGrpcArgs, VirtualGatewaySpecListenerConnectionPoolGrpcPtr and VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolGrpcPtrInput` via:
//
//	        VirtualGatewaySpecListenerConnectionPoolGrpcArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerConnectionPoolGrpcPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput() VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput
	ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput
}

type virtualGatewaySpecListenerConnectionPoolGrpcPtrType VirtualGatewaySpecListenerConnectionPoolGrpcArgs

func VirtualGatewaySpecListenerConnectionPoolGrpcPtr(v *VirtualGatewaySpecListenerConnectionPoolGrpcArgs) VirtualGatewaySpecListenerConnectionPoolGrpcPtrInput {
	return (*virtualGatewaySpecListenerConnectionPoolGrpcPtrType)(v)
}

func (*virtualGatewaySpecListenerConnectionPoolGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerConnectionPoolGrpcPtrType) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput() VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerConnectionPoolGrpcPtrType) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolGrpcOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolGrpcOutput) ToVirtualGatewaySpecListenerConnectionPoolGrpcOutput() VirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolGrpcOutput) ToVirtualGatewaySpecListenerConnectionPoolGrpcOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolGrpcOutput) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput() VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return o.ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerConnectionPoolGrpcOutput) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerConnectionPoolGrpc) *VirtualGatewaySpecListenerConnectionPoolGrpc {
		return &v
	}).(VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput)
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualGatewaySpecListenerConnectionPoolGrpcOutput) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerConnectionPoolGrpc) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput() VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput) ToVirtualGatewaySpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput) Elem() VirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPoolGrpc) VirtualGatewaySpecListenerConnectionPoolGrpc {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerConnectionPoolGrpc
		return ret
	}).(VirtualGatewaySpecListenerConnectionPoolGrpcOutput)
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput) MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPoolGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolHttp2 struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests int `pulumi:"maxRequests"`
}

// VirtualGatewaySpecListenerConnectionPoolHttp2Input is an input type that accepts VirtualGatewaySpecListenerConnectionPoolHttp2Args and VirtualGatewaySpecListenerConnectionPoolHttp2Output values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolHttp2Input` via:
//
//	VirtualGatewaySpecListenerConnectionPoolHttp2Args{...}
type VirtualGatewaySpecListenerConnectionPoolHttp2Input interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolHttp2Output() VirtualGatewaySpecListenerConnectionPoolHttp2Output
	ToVirtualGatewaySpecListenerConnectionPoolHttp2OutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2Output
}

type VirtualGatewaySpecListenerConnectionPoolHttp2Args struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (VirtualGatewaySpecListenerConnectionPoolHttp2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerConnectionPoolHttp2Args) ToVirtualGatewaySpecListenerConnectionPoolHttp2Output() VirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return i.ToVirtualGatewaySpecListenerConnectionPoolHttp2OutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolHttp2Args) ToVirtualGatewaySpecListenerConnectionPoolHttp2OutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolHttp2Output)
}

func (i VirtualGatewaySpecListenerConnectionPoolHttp2Args) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput() VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolHttp2Args) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolHttp2Output).ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerConnectionPoolHttp2PtrInput is an input type that accepts VirtualGatewaySpecListenerConnectionPoolHttp2Args, VirtualGatewaySpecListenerConnectionPoolHttp2Ptr and VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolHttp2PtrInput` via:
//
//	        VirtualGatewaySpecListenerConnectionPoolHttp2Args{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerConnectionPoolHttp2PtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput() VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput
	ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput
}

type virtualGatewaySpecListenerConnectionPoolHttp2PtrType VirtualGatewaySpecListenerConnectionPoolHttp2Args

func VirtualGatewaySpecListenerConnectionPoolHttp2Ptr(v *VirtualGatewaySpecListenerConnectionPoolHttp2Args) VirtualGatewaySpecListenerConnectionPoolHttp2PtrInput {
	return (*virtualGatewaySpecListenerConnectionPoolHttp2PtrType)(v)
}

func (*virtualGatewaySpecListenerConnectionPoolHttp2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerConnectionPoolHttp2PtrType) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput() VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerConnectionPoolHttp2PtrType) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolHttp2Output struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolHttp2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolHttp2Output) ToVirtualGatewaySpecListenerConnectionPoolHttp2Output() VirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttp2Output) ToVirtualGatewaySpecListenerConnectionPoolHttp2OutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttp2Output) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput() VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return o.ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerConnectionPoolHttp2Output) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerConnectionPoolHttp2) *VirtualGatewaySpecListenerConnectionPoolHttp2 {
		return &v
	}).(VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput)
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualGatewaySpecListenerConnectionPoolHttp2Output) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerConnectionPoolHttp2) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput() VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput) ToVirtualGatewaySpecListenerConnectionPoolHttp2PtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput) Elem() VirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPoolHttp2) VirtualGatewaySpecListenerConnectionPoolHttp2 {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerConnectionPoolHttp2
		return ret
	}).(VirtualGatewaySpecListenerConnectionPoolHttp2Output)
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput) MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPoolHttp2) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolHttp struct {
	// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
	MaxConnections int `pulumi:"maxConnections"`
	// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
	//
	// The `http2` connection pool object supports the following:
	MaxPendingRequests *int `pulumi:"maxPendingRequests"`
}

// VirtualGatewaySpecListenerConnectionPoolHttpInput is an input type that accepts VirtualGatewaySpecListenerConnectionPoolHttpArgs and VirtualGatewaySpecListenerConnectionPoolHttpOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolHttpInput` via:
//
//	VirtualGatewaySpecListenerConnectionPoolHttpArgs{...}
type VirtualGatewaySpecListenerConnectionPoolHttpInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolHttpOutput() VirtualGatewaySpecListenerConnectionPoolHttpOutput
	ToVirtualGatewaySpecListenerConnectionPoolHttpOutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolHttpOutput
}

type VirtualGatewaySpecListenerConnectionPoolHttpArgs struct {
	// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
	//
	// The `http2` connection pool object supports the following:
	MaxPendingRequests pulumi.IntPtrInput `pulumi:"maxPendingRequests"`
}

func (VirtualGatewaySpecListenerConnectionPoolHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerConnectionPoolHttpArgs) ToVirtualGatewaySpecListenerConnectionPoolHttpOutput() VirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolHttpOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolHttpArgs) ToVirtualGatewaySpecListenerConnectionPoolHttpOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolHttpOutput)
}

func (i VirtualGatewaySpecListenerConnectionPoolHttpArgs) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutput() VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerConnectionPoolHttpArgs) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolHttpOutput).ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerConnectionPoolHttpPtrInput is an input type that accepts VirtualGatewaySpecListenerConnectionPoolHttpArgs, VirtualGatewaySpecListenerConnectionPoolHttpPtr and VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerConnectionPoolHttpPtrInput` via:
//
//	        VirtualGatewaySpecListenerConnectionPoolHttpArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerConnectionPoolHttpPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutput() VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput
	ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput
}

type virtualGatewaySpecListenerConnectionPoolHttpPtrType VirtualGatewaySpecListenerConnectionPoolHttpArgs

func VirtualGatewaySpecListenerConnectionPoolHttpPtr(v *VirtualGatewaySpecListenerConnectionPoolHttpArgs) VirtualGatewaySpecListenerConnectionPoolHttpPtrInput {
	return (*virtualGatewaySpecListenerConnectionPoolHttpPtrType)(v)
}

func (*virtualGatewaySpecListenerConnectionPoolHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerConnectionPoolHttpPtrType) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutput() VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return i.ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerConnectionPoolHttpPtrType) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolHttpOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolHttpOutput) ToVirtualGatewaySpecListenerConnectionPoolHttpOutput() VirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttpOutput) ToVirtualGatewaySpecListenerConnectionPoolHttpOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttpOutput) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutput() VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return o.ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerConnectionPoolHttpOutput) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerConnectionPoolHttp) *VirtualGatewaySpecListenerConnectionPoolHttp {
		return &v
	}).(VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput)
}

// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
func (o VirtualGatewaySpecListenerConnectionPoolHttpOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerConnectionPoolHttp) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
//
// The `http2` connection pool object supports the following:
func (o VirtualGatewaySpecListenerConnectionPoolHttpOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerConnectionPoolHttp) *int { return v.MaxPendingRequests }).(pulumi.IntPtrOutput)
}

type VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutput() VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput) ToVirtualGatewaySpecListenerConnectionPoolHttpPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput) Elem() VirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPoolHttp) VirtualGatewaySpecListenerConnectionPoolHttp {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerConnectionPoolHttp
		return ret
	}).(VirtualGatewaySpecListenerConnectionPoolHttpOutput)
}

// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
func (o VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return &v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
//
// The `http2` connection pool object supports the following:
func (o VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerConnectionPoolHttp) *int {
		if v == nil {
			return nil
		}
		return v.MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualGatewaySpecListenerHealthCheck struct {
	// Number of consecutive successful health checks that must occur before declaring listener healthy.
	HealthyThreshold int `pulumi:"healthyThreshold"`
	// Time period in milliseconds between each health check execution.
	IntervalMillis int `pulumi:"intervalMillis"`
	// Destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
	Path *string `pulumi:"path"`
	// Destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
	Port *int `pulumi:"port"`
	// Protocol for the health check request. Valid values are `http`, `http2`, and `grpc`.
	Protocol string `pulumi:"protocol"`
	// Amount of time to wait when receiving a response from the health check, in milliseconds.
	TimeoutMillis int `pulumi:"timeoutMillis"`
	// Number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.
	UnhealthyThreshold int `pulumi:"unhealthyThreshold"`
}

// VirtualGatewaySpecListenerHealthCheckInput is an input type that accepts VirtualGatewaySpecListenerHealthCheckArgs and VirtualGatewaySpecListenerHealthCheckOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerHealthCheckInput` via:
//
//	VirtualGatewaySpecListenerHealthCheckArgs{...}
type VirtualGatewaySpecListenerHealthCheckInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerHealthCheckOutput() VirtualGatewaySpecListenerHealthCheckOutput
	ToVirtualGatewaySpecListenerHealthCheckOutputWithContext(context.Context) VirtualGatewaySpecListenerHealthCheckOutput
}

type VirtualGatewaySpecListenerHealthCheckArgs struct {
	// Number of consecutive successful health checks that must occur before declaring listener healthy.
	HealthyThreshold pulumi.IntInput `pulumi:"healthyThreshold"`
	// Time period in milliseconds between each health check execution.
	IntervalMillis pulumi.IntInput `pulumi:"intervalMillis"`
	// Destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol for the health check request. Valid values are `http`, `http2`, and `grpc`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Amount of time to wait when receiving a response from the health check, in milliseconds.
	TimeoutMillis pulumi.IntInput `pulumi:"timeoutMillis"`
	// Number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.
	UnhealthyThreshold pulumi.IntInput `pulumi:"unhealthyThreshold"`
}

func (VirtualGatewaySpecListenerHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerHealthCheck)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerHealthCheckArgs) ToVirtualGatewaySpecListenerHealthCheckOutput() VirtualGatewaySpecListenerHealthCheckOutput {
	return i.ToVirtualGatewaySpecListenerHealthCheckOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerHealthCheckArgs) ToVirtualGatewaySpecListenerHealthCheckOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerHealthCheckOutput)
}

func (i VirtualGatewaySpecListenerHealthCheckArgs) ToVirtualGatewaySpecListenerHealthCheckPtrOutput() VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return i.ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerHealthCheckArgs) ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerHealthCheckOutput).ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerHealthCheckPtrInput is an input type that accepts VirtualGatewaySpecListenerHealthCheckArgs, VirtualGatewaySpecListenerHealthCheckPtr and VirtualGatewaySpecListenerHealthCheckPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerHealthCheckPtrInput` via:
//
//	        VirtualGatewaySpecListenerHealthCheckArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerHealthCheckPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerHealthCheckPtrOutput() VirtualGatewaySpecListenerHealthCheckPtrOutput
	ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerHealthCheckPtrOutput
}

type virtualGatewaySpecListenerHealthCheckPtrType VirtualGatewaySpecListenerHealthCheckArgs

func VirtualGatewaySpecListenerHealthCheckPtr(v *VirtualGatewaySpecListenerHealthCheckArgs) VirtualGatewaySpecListenerHealthCheckPtrInput {
	return (*virtualGatewaySpecListenerHealthCheckPtrType)(v)
}

func (*virtualGatewaySpecListenerHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerHealthCheck)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerHealthCheckPtrType) ToVirtualGatewaySpecListenerHealthCheckPtrOutput() VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return i.ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerHealthCheckPtrType) ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerHealthCheckPtrOutput)
}

type VirtualGatewaySpecListenerHealthCheckOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerHealthCheck)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerHealthCheckOutput) ToVirtualGatewaySpecListenerHealthCheckOutput() VirtualGatewaySpecListenerHealthCheckOutput {
	return o
}

func (o VirtualGatewaySpecListenerHealthCheckOutput) ToVirtualGatewaySpecListenerHealthCheckOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerHealthCheckOutput {
	return o
}

func (o VirtualGatewaySpecListenerHealthCheckOutput) ToVirtualGatewaySpecListenerHealthCheckPtrOutput() VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return o.ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerHealthCheckOutput) ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerHealthCheck) *VirtualGatewaySpecListenerHealthCheck {
		return &v
	}).(VirtualGatewaySpecListenerHealthCheckPtrOutput)
}

// Number of consecutive successful health checks that must occur before declaring listener healthy.
func (o VirtualGatewaySpecListenerHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

// Time period in milliseconds between each health check execution.
func (o VirtualGatewaySpecListenerHealthCheckOutput) IntervalMillis() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerHealthCheck) int { return v.IntervalMillis }).(pulumi.IntOutput)
}

// Destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
func (o VirtualGatewaySpecListenerHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
func (o VirtualGatewaySpecListenerHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol for the health check request. Valid values are `http`, `http2`, and `grpc`.
func (o VirtualGatewaySpecListenerHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

// Amount of time to wait when receiving a response from the health check, in milliseconds.
func (o VirtualGatewaySpecListenerHealthCheckOutput) TimeoutMillis() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerHealthCheck) int { return v.TimeoutMillis }).(pulumi.IntOutput)
}

// Number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.
func (o VirtualGatewaySpecListenerHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type VirtualGatewaySpecListenerHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerHealthCheck)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) ToVirtualGatewaySpecListenerHealthCheckPtrOutput() VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) ToVirtualGatewaySpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerHealthCheckPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) Elem() VirtualGatewaySpecListenerHealthCheckOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) VirtualGatewaySpecListenerHealthCheck {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerHealthCheck
		return ret
	}).(VirtualGatewaySpecListenerHealthCheckOutput)
}

// Number of consecutive successful health checks that must occur before declaring listener healthy.
func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// Time period in milliseconds between each health check execution.
func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) IntervalMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.IntervalMillis
	}).(pulumi.IntPtrOutput)
}

// Destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Protocol for the health check request. Valid values are `http`, `http2`, and `grpc`.
func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Amount of time to wait when receiving a response from the health check, in milliseconds.
func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) TimeoutMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutMillis
	}).(pulumi.IntPtrOutput)
}

// Number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.
func (o VirtualGatewaySpecListenerHealthCheckPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

type VirtualGatewaySpecListenerPortMapping struct {
	// Port used for the port mapping.
	Port int `pulumi:"port"`
	// Protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
	Protocol string `pulumi:"protocol"`
}

// VirtualGatewaySpecListenerPortMappingInput is an input type that accepts VirtualGatewaySpecListenerPortMappingArgs and VirtualGatewaySpecListenerPortMappingOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerPortMappingInput` via:
//
//	VirtualGatewaySpecListenerPortMappingArgs{...}
type VirtualGatewaySpecListenerPortMappingInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerPortMappingOutput() VirtualGatewaySpecListenerPortMappingOutput
	ToVirtualGatewaySpecListenerPortMappingOutputWithContext(context.Context) VirtualGatewaySpecListenerPortMappingOutput
}

type VirtualGatewaySpecListenerPortMappingArgs struct {
	// Port used for the port mapping.
	Port pulumi.IntInput `pulumi:"port"`
	// Protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (VirtualGatewaySpecListenerPortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerPortMapping)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerPortMappingArgs) ToVirtualGatewaySpecListenerPortMappingOutput() VirtualGatewaySpecListenerPortMappingOutput {
	return i.ToVirtualGatewaySpecListenerPortMappingOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerPortMappingArgs) ToVirtualGatewaySpecListenerPortMappingOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerPortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerPortMappingOutput)
}

type VirtualGatewaySpecListenerPortMappingOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerPortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerPortMapping)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerPortMappingOutput) ToVirtualGatewaySpecListenerPortMappingOutput() VirtualGatewaySpecListenerPortMappingOutput {
	return o
}

func (o VirtualGatewaySpecListenerPortMappingOutput) ToVirtualGatewaySpecListenerPortMappingOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerPortMappingOutput {
	return o
}

// Port used for the port mapping.
func (o VirtualGatewaySpecListenerPortMappingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerPortMapping) int { return v.Port }).(pulumi.IntOutput)
}

// Protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
func (o VirtualGatewaySpecListenerPortMappingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerPortMapping) string { return v.Protocol }).(pulumi.StringOutput)
}

type VirtualGatewaySpecListenerTls struct {
	// Listener's TLS certificate.
	Certificate VirtualGatewaySpecListenerTlsCertificate `pulumi:"certificate"`
	// Listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
	Mode string `pulumi:"mode"`
	// Listener's Transport Layer Security (TLS) validation context.
	Validation *VirtualGatewaySpecListenerTlsValidation `pulumi:"validation"`
}

// VirtualGatewaySpecListenerTlsInput is an input type that accepts VirtualGatewaySpecListenerTlsArgs and VirtualGatewaySpecListenerTlsOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsInput` via:
//
//	VirtualGatewaySpecListenerTlsArgs{...}
type VirtualGatewaySpecListenerTlsInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsOutput() VirtualGatewaySpecListenerTlsOutput
	ToVirtualGatewaySpecListenerTlsOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsOutput
}

type VirtualGatewaySpecListenerTlsArgs struct {
	// Listener's TLS certificate.
	Certificate VirtualGatewaySpecListenerTlsCertificateInput `pulumi:"certificate"`
	// Listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Listener's Transport Layer Security (TLS) validation context.
	Validation VirtualGatewaySpecListenerTlsValidationPtrInput `pulumi:"validation"`
}

func (VirtualGatewaySpecListenerTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTls)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsArgs) ToVirtualGatewaySpecListenerTlsOutput() VirtualGatewaySpecListenerTlsOutput {
	return i.ToVirtualGatewaySpecListenerTlsOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsArgs) ToVirtualGatewaySpecListenerTlsOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsOutput)
}

func (i VirtualGatewaySpecListenerTlsArgs) ToVirtualGatewaySpecListenerTlsPtrOutput() VirtualGatewaySpecListenerTlsPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsArgs) ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsOutput).ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsArgs, VirtualGatewaySpecListenerTlsPtr and VirtualGatewaySpecListenerTlsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsPtrInput` via:
//
//	        VirtualGatewaySpecListenerTlsArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerTlsPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsPtrOutput() VirtualGatewaySpecListenerTlsPtrOutput
	ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsPtrOutput
}

type virtualGatewaySpecListenerTlsPtrType VirtualGatewaySpecListenerTlsArgs

func VirtualGatewaySpecListenerTlsPtr(v *VirtualGatewaySpecListenerTlsArgs) VirtualGatewaySpecListenerTlsPtrInput {
	return (*virtualGatewaySpecListenerTlsPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTls)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsPtrType) ToVirtualGatewaySpecListenerTlsPtrOutput() VirtualGatewaySpecListenerTlsPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsPtrType) ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsPtrOutput)
}

type VirtualGatewaySpecListenerTlsOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTls)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsOutput) ToVirtualGatewaySpecListenerTlsOutput() VirtualGatewaySpecListenerTlsOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsOutput) ToVirtualGatewaySpecListenerTlsOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsOutput) ToVirtualGatewaySpecListenerTlsPtrOutput() VirtualGatewaySpecListenerTlsPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsOutput) ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTls) *VirtualGatewaySpecListenerTls {
		return &v
	}).(VirtualGatewaySpecListenerTlsPtrOutput)
}

// Listener's TLS certificate.
func (o VirtualGatewaySpecListenerTlsOutput) Certificate() VirtualGatewaySpecListenerTlsCertificateOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTls) VirtualGatewaySpecListenerTlsCertificate { return v.Certificate }).(VirtualGatewaySpecListenerTlsCertificateOutput)
}

// Listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
func (o VirtualGatewaySpecListenerTlsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTls) string { return v.Mode }).(pulumi.StringOutput)
}

// Listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecListenerTlsOutput) Validation() VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTls) *VirtualGatewaySpecListenerTlsValidation { return v.Validation }).(VirtualGatewaySpecListenerTlsValidationPtrOutput)
}

type VirtualGatewaySpecListenerTlsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTls)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsPtrOutput) ToVirtualGatewaySpecListenerTlsPtrOutput() VirtualGatewaySpecListenerTlsPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsPtrOutput) ToVirtualGatewaySpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsPtrOutput) Elem() VirtualGatewaySpecListenerTlsOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTls) VirtualGatewaySpecListenerTls {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTls
		return ret
	}).(VirtualGatewaySpecListenerTlsOutput)
}

// Listener's TLS certificate.
func (o VirtualGatewaySpecListenerTlsPtrOutput) Certificate() VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTls) *VirtualGatewaySpecListenerTlsCertificate {
		if v == nil {
			return nil
		}
		return &v.Certificate
	}).(VirtualGatewaySpecListenerTlsCertificatePtrOutput)
}

// Listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
func (o VirtualGatewaySpecListenerTlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTls) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// Listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecListenerTlsPtrOutput) Validation() VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTls) *VirtualGatewaySpecListenerTlsValidation {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(VirtualGatewaySpecListenerTlsValidationPtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificate struct {
	// An AWS Certificate Manager (ACM) certificate.
	Acm *VirtualGatewaySpecListenerTlsCertificateAcm `pulumi:"acm"`
	// Local file certificate.
	File *VirtualGatewaySpecListenerTlsCertificateFile `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualGatewaySpecListenerTlsCertificateSds `pulumi:"sds"`
}

// VirtualGatewaySpecListenerTlsCertificateInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateArgs and VirtualGatewaySpecListenerTlsCertificateOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificateInput` via:
//
//	VirtualGatewaySpecListenerTlsCertificateArgs{...}
type VirtualGatewaySpecListenerTlsCertificateInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificateOutput() VirtualGatewaySpecListenerTlsCertificateOutput
	ToVirtualGatewaySpecListenerTlsCertificateOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificateOutput
}

type VirtualGatewaySpecListenerTlsCertificateArgs struct {
	// An AWS Certificate Manager (ACM) certificate.
	Acm VirtualGatewaySpecListenerTlsCertificateAcmPtrInput `pulumi:"acm"`
	// Local file certificate.
	File VirtualGatewaySpecListenerTlsCertificateFilePtrInput `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualGatewaySpecListenerTlsCertificateSdsPtrInput `pulumi:"sds"`
}

func (VirtualGatewaySpecListenerTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificate)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsCertificateArgs) ToVirtualGatewaySpecListenerTlsCertificateOutput() VirtualGatewaySpecListenerTlsCertificateOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateArgs) ToVirtualGatewaySpecListenerTlsCertificateOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateOutput)
}

func (i VirtualGatewaySpecListenerTlsCertificateArgs) ToVirtualGatewaySpecListenerTlsCertificatePtrOutput() VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateArgs) ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateOutput).ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsCertificatePtrInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateArgs, VirtualGatewaySpecListenerTlsCertificatePtr and VirtualGatewaySpecListenerTlsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificatePtrInput` via:
//
//	        VirtualGatewaySpecListenerTlsCertificateArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerTlsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificatePtrOutput() VirtualGatewaySpecListenerTlsCertificatePtrOutput
	ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificatePtrOutput
}

type virtualGatewaySpecListenerTlsCertificatePtrType VirtualGatewaySpecListenerTlsCertificateArgs

func VirtualGatewaySpecListenerTlsCertificatePtr(v *VirtualGatewaySpecListenerTlsCertificateArgs) VirtualGatewaySpecListenerTlsCertificatePtrInput {
	return (*virtualGatewaySpecListenerTlsCertificatePtrType)(v)
}

func (*virtualGatewaySpecListenerTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificate)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsCertificatePtrType) ToVirtualGatewaySpecListenerTlsCertificatePtrOutput() VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsCertificatePtrType) ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificatePtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificate)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificateOutput) ToVirtualGatewaySpecListenerTlsCertificateOutput() VirtualGatewaySpecListenerTlsCertificateOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateOutput) ToVirtualGatewaySpecListenerTlsCertificateOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateOutput) ToVirtualGatewaySpecListenerTlsCertificatePtrOutput() VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsCertificateOutput) ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsCertificate) *VirtualGatewaySpecListenerTlsCertificate {
		return &v
	}).(VirtualGatewaySpecListenerTlsCertificatePtrOutput)
}

// An AWS Certificate Manager (ACM) certificate.
func (o VirtualGatewaySpecListenerTlsCertificateOutput) Acm() VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsCertificate) *VirtualGatewaySpecListenerTlsCertificateAcm {
		return v.Acm
	}).(VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput)
}

// Local file certificate.
func (o VirtualGatewaySpecListenerTlsCertificateOutput) File() VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsCertificate) *VirtualGatewaySpecListenerTlsCertificateFile {
		return v.File
	}).(VirtualGatewaySpecListenerTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecListenerTlsCertificateOutput) Sds() VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsCertificate) *VirtualGatewaySpecListenerTlsCertificateSds {
		return v.Sds
	}).(VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificate)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificatePtrOutput) ToVirtualGatewaySpecListenerTlsCertificatePtrOutput() VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificatePtrOutput) ToVirtualGatewaySpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificatePtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificatePtrOutput) Elem() VirtualGatewaySpecListenerTlsCertificateOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificate) VirtualGatewaySpecListenerTlsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsCertificate
		return ret
	}).(VirtualGatewaySpecListenerTlsCertificateOutput)
}

// An AWS Certificate Manager (ACM) certificate.
func (o VirtualGatewaySpecListenerTlsCertificatePtrOutput) Acm() VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificate) *VirtualGatewaySpecListenerTlsCertificateAcm {
		if v == nil {
			return nil
		}
		return v.Acm
	}).(VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput)
}

// Local file certificate.
func (o VirtualGatewaySpecListenerTlsCertificatePtrOutput) File() VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificate) *VirtualGatewaySpecListenerTlsCertificateFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewaySpecListenerTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecListenerTlsCertificatePtrOutput) Sds() VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificate) *VirtualGatewaySpecListenerTlsCertificateSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificateAcm struct {
	// ARN for the certificate.
	CertificateArn string `pulumi:"certificateArn"`
}

// VirtualGatewaySpecListenerTlsCertificateAcmInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateAcmArgs and VirtualGatewaySpecListenerTlsCertificateAcmOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificateAcmInput` via:
//
//	VirtualGatewaySpecListenerTlsCertificateAcmArgs{...}
type VirtualGatewaySpecListenerTlsCertificateAcmInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificateAcmOutput() VirtualGatewaySpecListenerTlsCertificateAcmOutput
	ToVirtualGatewaySpecListenerTlsCertificateAcmOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificateAcmOutput
}

type VirtualGatewaySpecListenerTlsCertificateAcmArgs struct {
	// ARN for the certificate.
	CertificateArn pulumi.StringInput `pulumi:"certificateArn"`
}

func (VirtualGatewaySpecListenerTlsCertificateAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsCertificateAcmArgs) ToVirtualGatewaySpecListenerTlsCertificateAcmOutput() VirtualGatewaySpecListenerTlsCertificateAcmOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateAcmOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateAcmArgs) ToVirtualGatewaySpecListenerTlsCertificateAcmOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateAcmOutput)
}

func (i VirtualGatewaySpecListenerTlsCertificateAcmArgs) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutput() VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateAcmArgs) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateAcmOutput).ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsCertificateAcmPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateAcmArgs, VirtualGatewaySpecListenerTlsCertificateAcmPtr and VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificateAcmPtrInput` via:
//
//	        VirtualGatewaySpecListenerTlsCertificateAcmArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerTlsCertificateAcmPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutput() VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput
	ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput
}

type virtualGatewaySpecListenerTlsCertificateAcmPtrType VirtualGatewaySpecListenerTlsCertificateAcmArgs

func VirtualGatewaySpecListenerTlsCertificateAcmPtr(v *VirtualGatewaySpecListenerTlsCertificateAcmArgs) VirtualGatewaySpecListenerTlsCertificateAcmPtrInput {
	return (*virtualGatewaySpecListenerTlsCertificateAcmPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsCertificateAcmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsCertificateAcmPtrType) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutput() VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsCertificateAcmPtrType) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificateAcmOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificateAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificateAcmOutput) ToVirtualGatewaySpecListenerTlsCertificateAcmOutput() VirtualGatewaySpecListenerTlsCertificateAcmOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateAcmOutput) ToVirtualGatewaySpecListenerTlsCertificateAcmOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateAcmOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateAcmOutput) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutput() VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsCertificateAcmOutput) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsCertificateAcm) *VirtualGatewaySpecListenerTlsCertificateAcm {
		return &v
	}).(VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput)
}

// ARN for the certificate.
func (o VirtualGatewaySpecListenerTlsCertificateAcmOutput) CertificateArn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsCertificateAcm) string { return v.CertificateArn }).(pulumi.StringOutput)
}

type VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutput() VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput) ToVirtualGatewaySpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput) Elem() VirtualGatewaySpecListenerTlsCertificateAcmOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificateAcm) VirtualGatewaySpecListenerTlsCertificateAcm {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsCertificateAcm
		return ret
	}).(VirtualGatewaySpecListenerTlsCertificateAcmOutput)
}

// ARN for the certificate.
func (o VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificateAcm) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificateFile struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
	// Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey string `pulumi:"privateKey"`
}

// VirtualGatewaySpecListenerTlsCertificateFileInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateFileArgs and VirtualGatewaySpecListenerTlsCertificateFileOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificateFileInput` via:
//
//	VirtualGatewaySpecListenerTlsCertificateFileArgs{...}
type VirtualGatewaySpecListenerTlsCertificateFileInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificateFileOutput() VirtualGatewaySpecListenerTlsCertificateFileOutput
	ToVirtualGatewaySpecListenerTlsCertificateFileOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificateFileOutput
}

type VirtualGatewaySpecListenerTlsCertificateFileArgs struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	// Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (VirtualGatewaySpecListenerTlsCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateFile)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsCertificateFileArgs) ToVirtualGatewaySpecListenerTlsCertificateFileOutput() VirtualGatewaySpecListenerTlsCertificateFileOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateFileOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateFileArgs) ToVirtualGatewaySpecListenerTlsCertificateFileOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateFileOutput)
}

func (i VirtualGatewaySpecListenerTlsCertificateFileArgs) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutput() VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateFileArgs) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateFileOutput).ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsCertificateFilePtrInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateFileArgs, VirtualGatewaySpecListenerTlsCertificateFilePtr and VirtualGatewaySpecListenerTlsCertificateFilePtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificateFilePtrInput` via:
//
//	        VirtualGatewaySpecListenerTlsCertificateFileArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerTlsCertificateFilePtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutput() VirtualGatewaySpecListenerTlsCertificateFilePtrOutput
	ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificateFilePtrOutput
}

type virtualGatewaySpecListenerTlsCertificateFilePtrType VirtualGatewaySpecListenerTlsCertificateFileArgs

func VirtualGatewaySpecListenerTlsCertificateFilePtr(v *VirtualGatewaySpecListenerTlsCertificateFileArgs) VirtualGatewaySpecListenerTlsCertificateFilePtrInput {
	return (*virtualGatewaySpecListenerTlsCertificateFilePtrType)(v)
}

func (*virtualGatewaySpecListenerTlsCertificateFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificateFile)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsCertificateFilePtrType) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutput() VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsCertificateFilePtrType) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateFilePtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificateFileOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateFile)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificateFileOutput) ToVirtualGatewaySpecListenerTlsCertificateFileOutput() VirtualGatewaySpecListenerTlsCertificateFileOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateFileOutput) ToVirtualGatewaySpecListenerTlsCertificateFileOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateFileOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateFileOutput) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutput() VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsCertificateFileOutput) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsCertificateFile) *VirtualGatewaySpecListenerTlsCertificateFile {
		return &v
	}).(VirtualGatewaySpecListenerTlsCertificateFilePtrOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecListenerTlsCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsCertificateFile) string { return v.CertificateChain }).(pulumi.StringOutput)
}

// Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecListenerTlsCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsCertificateFile) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type VirtualGatewaySpecListenerTlsCertificateFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificateFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificateFile)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificateFilePtrOutput) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutput() VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateFilePtrOutput) ToVirtualGatewaySpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateFilePtrOutput) Elem() VirtualGatewaySpecListenerTlsCertificateFileOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificateFile) VirtualGatewaySpecListenerTlsCertificateFile {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsCertificateFile
		return ret
	}).(VirtualGatewaySpecListenerTlsCertificateFileOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecListenerTlsCertificateFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

// Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecListenerTlsCertificateFilePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificateSds struct {
	// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualGatewaySpecListenerTlsCertificateSdsInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateSdsArgs and VirtualGatewaySpecListenerTlsCertificateSdsOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificateSdsInput` via:
//
//	VirtualGatewaySpecListenerTlsCertificateSdsArgs{...}
type VirtualGatewaySpecListenerTlsCertificateSdsInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificateSdsOutput() VirtualGatewaySpecListenerTlsCertificateSdsOutput
	ToVirtualGatewaySpecListenerTlsCertificateSdsOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificateSdsOutput
}

type VirtualGatewaySpecListenerTlsCertificateSdsArgs struct {
	// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualGatewaySpecListenerTlsCertificateSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateSds)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsCertificateSdsArgs) ToVirtualGatewaySpecListenerTlsCertificateSdsOutput() VirtualGatewaySpecListenerTlsCertificateSdsOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateSdsOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateSdsArgs) ToVirtualGatewaySpecListenerTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateSdsOutput)
}

func (i VirtualGatewaySpecListenerTlsCertificateSdsArgs) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutput() VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsCertificateSdsArgs) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateSdsOutput).ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsCertificateSdsPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsCertificateSdsArgs, VirtualGatewaySpecListenerTlsCertificateSdsPtr and VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsCertificateSdsPtrInput` via:
//
//	        VirtualGatewaySpecListenerTlsCertificateSdsArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerTlsCertificateSdsPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutput() VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput
	ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput
}

type virtualGatewaySpecListenerTlsCertificateSdsPtrType VirtualGatewaySpecListenerTlsCertificateSdsArgs

func VirtualGatewaySpecListenerTlsCertificateSdsPtr(v *VirtualGatewaySpecListenerTlsCertificateSdsArgs) VirtualGatewaySpecListenerTlsCertificateSdsPtrInput {
	return (*virtualGatewaySpecListenerTlsCertificateSdsPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsCertificateSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificateSds)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsCertificateSdsPtrType) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutput() VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsCertificateSdsPtrType) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput)
}

type VirtualGatewaySpecListenerTlsCertificateSdsOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificateSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateSds)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificateSdsOutput) ToVirtualGatewaySpecListenerTlsCertificateSdsOutput() VirtualGatewaySpecListenerTlsCertificateSdsOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateSdsOutput) ToVirtualGatewaySpecListenerTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateSdsOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateSdsOutput) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutput() VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsCertificateSdsOutput) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsCertificateSds) *VirtualGatewaySpecListenerTlsCertificateSds {
		return &v
	}).(VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput)
}

// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecListenerTlsCertificateSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsCertificateSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsCertificateSds)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutput() VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput) ToVirtualGatewaySpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput) Elem() VirtualGatewaySpecListenerTlsCertificateSdsOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificateSds) VirtualGatewaySpecListenerTlsCertificateSds {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsCertificateSds
		return ret
	}).(VirtualGatewaySpecListenerTlsCertificateSdsOutput)
}

// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsCertificateSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidation struct {
	// SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
	SubjectAlternativeNames *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames `pulumi:"subjectAlternativeNames"`
	// TLS validation context trust.
	Trust VirtualGatewaySpecListenerTlsValidationTrust `pulumi:"trust"`
}

// VirtualGatewaySpecListenerTlsValidationInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationArgs and VirtualGatewaySpecListenerTlsValidationOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationInput` via:
//
//	VirtualGatewaySpecListenerTlsValidationArgs{...}
type VirtualGatewaySpecListenerTlsValidationInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationOutput() VirtualGatewaySpecListenerTlsValidationOutput
	ToVirtualGatewaySpecListenerTlsValidationOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationOutput
}

type VirtualGatewaySpecListenerTlsValidationArgs struct {
	// SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
	SubjectAlternativeNames VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrInput `pulumi:"subjectAlternativeNames"`
	// TLS validation context trust.
	Trust VirtualGatewaySpecListenerTlsValidationTrustInput `pulumi:"trust"`
}

func (VirtualGatewaySpecListenerTlsValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidation)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsValidationArgs) ToVirtualGatewaySpecListenerTlsValidationOutput() VirtualGatewaySpecListenerTlsValidationOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationArgs) ToVirtualGatewaySpecListenerTlsValidationOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationOutput)
}

func (i VirtualGatewaySpecListenerTlsValidationArgs) ToVirtualGatewaySpecListenerTlsValidationPtrOutput() VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationArgs) ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationOutput).ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsValidationPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationArgs, VirtualGatewaySpecListenerTlsValidationPtr and VirtualGatewaySpecListenerTlsValidationPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationPtrInput` via:
//
//	        VirtualGatewaySpecListenerTlsValidationArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerTlsValidationPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationPtrOutput() VirtualGatewaySpecListenerTlsValidationPtrOutput
	ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationPtrOutput
}

type virtualGatewaySpecListenerTlsValidationPtrType VirtualGatewaySpecListenerTlsValidationArgs

func VirtualGatewaySpecListenerTlsValidationPtr(v *VirtualGatewaySpecListenerTlsValidationArgs) VirtualGatewaySpecListenerTlsValidationPtrInput {
	return (*virtualGatewaySpecListenerTlsValidationPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidation)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsValidationPtrType) ToVirtualGatewaySpecListenerTlsValidationPtrOutput() VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsValidationPtrType) ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidation)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationOutput) ToVirtualGatewaySpecListenerTlsValidationOutput() VirtualGatewaySpecListenerTlsValidationOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationOutput) ToVirtualGatewaySpecListenerTlsValidationOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationOutput) ToVirtualGatewaySpecListenerTlsValidationPtrOutput() VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsValidationOutput) ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsValidation) *VirtualGatewaySpecListenerTlsValidation {
		return &v
	}).(VirtualGatewaySpecListenerTlsValidationPtrOutput)
}

// SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecListenerTlsValidationOutput) SubjectAlternativeNames() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidation) *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames {
		return v.SubjectAlternativeNames
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

// TLS validation context trust.
func (o VirtualGatewaySpecListenerTlsValidationOutput) Trust() VirtualGatewaySpecListenerTlsValidationTrustOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidation) VirtualGatewaySpecListenerTlsValidationTrust {
		return v.Trust
	}).(VirtualGatewaySpecListenerTlsValidationTrustOutput)
}

type VirtualGatewaySpecListenerTlsValidationPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidation)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationPtrOutput) ToVirtualGatewaySpecListenerTlsValidationPtrOutput() VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationPtrOutput) ToVirtualGatewaySpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationPtrOutput) Elem() VirtualGatewaySpecListenerTlsValidationOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidation) VirtualGatewaySpecListenerTlsValidation {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsValidation
		return ret
	}).(VirtualGatewaySpecListenerTlsValidationOutput)
}

// SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
func (o VirtualGatewaySpecListenerTlsValidationPtrOutput) SubjectAlternativeNames() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidation) *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

// TLS validation context trust.
func (o VirtualGatewaySpecListenerTlsValidationPtrOutput) Trust() VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidation) *VirtualGatewaySpecListenerTlsValidationTrust {
		if v == nil {
			return nil
		}
		return &v.Trust
	}).(VirtualGatewaySpecListenerTlsValidationTrustPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames struct {
	// Criteria for determining a SAN's match.
	Match VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch `pulumi:"match"`
}

// VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs and VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesInput` via:
//
//	VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs{...}
type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput
	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs struct {
	// Criteria for determining a SAN's match.
	Match VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchInput `pulumi:"match"`
}

func (VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput)
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput).ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs, VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtr and VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrInput` via:
//
//	        VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput
	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput
}

type virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrType VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs

func VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtr(v *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrInput {
	return (*virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrType) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrType) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames) *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames {
		return &v
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

// Criteria for determining a SAN's match.
func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput) Match() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch {
		return v.Match
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput)
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) Elem() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames
		return ret
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput)
}

// Criteria for determining a SAN's match.
func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) Match() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNames) *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch struct {
	// Values sent must match the specified values exactly.
	Exacts []string `pulumi:"exacts"`
}

// VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs and VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchInput` via:
//
//	VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{...}
type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput
	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs struct {
	// Values sent must match the specified values exactly.
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput)
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput).ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs, VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtr and VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput` via:
//
//	        VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput
	ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput
}

type virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs

func VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtr(v *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput {
	return (*virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch) *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch {
		return &v
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

// Values sent must match the specified values exactly.
func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch) []string { return v.Exacts }).(pulumi.StringArrayOutput)
}

type VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) Elem() VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch) VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch
		return ret
	}).(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput)
}

// Values sent must match the specified values exactly.
func (o VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatch) []string {
		if v == nil {
			return nil
		}
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrust struct {
	// TLS validation context trust for a local file certificate.
	File *VirtualGatewaySpecListenerTlsValidationTrustFile `pulumi:"file"`
	// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualGatewaySpecListenerTlsValidationTrustSds `pulumi:"sds"`
}

// VirtualGatewaySpecListenerTlsValidationTrustInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationTrustArgs and VirtualGatewaySpecListenerTlsValidationTrustOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationTrustInput` via:
//
//	VirtualGatewaySpecListenerTlsValidationTrustArgs{...}
type VirtualGatewaySpecListenerTlsValidationTrustInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationTrustOutput() VirtualGatewaySpecListenerTlsValidationTrustOutput
	ToVirtualGatewaySpecListenerTlsValidationTrustOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationTrustOutput
}

type VirtualGatewaySpecListenerTlsValidationTrustArgs struct {
	// TLS validation context trust for a local file certificate.
	File VirtualGatewaySpecListenerTlsValidationTrustFilePtrInput `pulumi:"file"`
	// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualGatewaySpecListenerTlsValidationTrustSdsPtrInput `pulumi:"sds"`
}

func (VirtualGatewaySpecListenerTlsValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrust)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsValidationTrustArgs) ToVirtualGatewaySpecListenerTlsValidationTrustOutput() VirtualGatewaySpecListenerTlsValidationTrustOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationTrustArgs) ToVirtualGatewaySpecListenerTlsValidationTrustOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustOutput)
}

func (i VirtualGatewaySpecListenerTlsValidationTrustArgs) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationTrustArgs) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustOutput).ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsValidationTrustPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationTrustArgs, VirtualGatewaySpecListenerTlsValidationTrustPtr and VirtualGatewaySpecListenerTlsValidationTrustPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationTrustPtrInput` via:
//
//	        VirtualGatewaySpecListenerTlsValidationTrustArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerTlsValidationTrustPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustPtrOutput
	ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationTrustPtrOutput
}

type virtualGatewaySpecListenerTlsValidationTrustPtrType VirtualGatewaySpecListenerTlsValidationTrustArgs

func VirtualGatewaySpecListenerTlsValidationTrustPtr(v *VirtualGatewaySpecListenerTlsValidationTrustArgs) VirtualGatewaySpecListenerTlsValidationTrustPtrInput {
	return (*virtualGatewaySpecListenerTlsValidationTrustPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsValidationTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationTrust)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsValidationTrustPtrType) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsValidationTrustPtrType) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrust)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationTrustOutput) ToVirtualGatewaySpecListenerTlsValidationTrustOutput() VirtualGatewaySpecListenerTlsValidationTrustOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustOutput) ToVirtualGatewaySpecListenerTlsValidationTrustOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustOutput) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsValidationTrustOutput) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsValidationTrust) *VirtualGatewaySpecListenerTlsValidationTrust {
		return &v
	}).(VirtualGatewaySpecListenerTlsValidationTrustPtrOutput)
}

// TLS validation context trust for a local file certificate.
func (o VirtualGatewaySpecListenerTlsValidationTrustOutput) File() VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidationTrust) *VirtualGatewaySpecListenerTlsValidationTrustFile {
		return v.File
	}).(VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput)
}

// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecListenerTlsValidationTrustOutput) Sds() VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidationTrust) *VirtualGatewaySpecListenerTlsValidationTrustSds {
		return v.Sds
	}).(VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationTrust)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationTrustPtrOutput) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustPtrOutput) ToVirtualGatewaySpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustPtrOutput) Elem() VirtualGatewaySpecListenerTlsValidationTrustOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationTrust) VirtualGatewaySpecListenerTlsValidationTrust {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsValidationTrust
		return ret
	}).(VirtualGatewaySpecListenerTlsValidationTrustOutput)
}

// TLS validation context trust for a local file certificate.
func (o VirtualGatewaySpecListenerTlsValidationTrustPtrOutput) File() VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationTrust) *VirtualGatewaySpecListenerTlsValidationTrustFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput)
}

// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualGatewaySpecListenerTlsValidationTrustPtrOutput) Sds() VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationTrust) *VirtualGatewaySpecListenerTlsValidationTrustSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustFile struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
}

// VirtualGatewaySpecListenerTlsValidationTrustFileInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationTrustFileArgs and VirtualGatewaySpecListenerTlsValidationTrustFileOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationTrustFileInput` via:
//
//	VirtualGatewaySpecListenerTlsValidationTrustFileArgs{...}
type VirtualGatewaySpecListenerTlsValidationTrustFileInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationTrustFileOutput() VirtualGatewaySpecListenerTlsValidationTrustFileOutput
	ToVirtualGatewaySpecListenerTlsValidationTrustFileOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationTrustFileOutput
}

type VirtualGatewaySpecListenerTlsValidationTrustFileArgs struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (VirtualGatewaySpecListenerTlsValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsValidationTrustFileArgs) ToVirtualGatewaySpecListenerTlsValidationTrustFileOutput() VirtualGatewaySpecListenerTlsValidationTrustFileOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustFileOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationTrustFileArgs) ToVirtualGatewaySpecListenerTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustFileOutput)
}

func (i VirtualGatewaySpecListenerTlsValidationTrustFileArgs) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput() VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationTrustFileArgs) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustFileOutput).ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsValidationTrustFilePtrInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationTrustFileArgs, VirtualGatewaySpecListenerTlsValidationTrustFilePtr and VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationTrustFilePtrInput` via:
//
//	        VirtualGatewaySpecListenerTlsValidationTrustFileArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerTlsValidationTrustFilePtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput() VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput
	ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput
}

type virtualGatewaySpecListenerTlsValidationTrustFilePtrType VirtualGatewaySpecListenerTlsValidationTrustFileArgs

func VirtualGatewaySpecListenerTlsValidationTrustFilePtr(v *VirtualGatewaySpecListenerTlsValidationTrustFileArgs) VirtualGatewaySpecListenerTlsValidationTrustFilePtrInput {
	return (*virtualGatewaySpecListenerTlsValidationTrustFilePtrType)(v)
}

func (*virtualGatewaySpecListenerTlsValidationTrustFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsValidationTrustFilePtrType) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput() VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsValidationTrustFilePtrType) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustFileOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationTrustFileOutput) ToVirtualGatewaySpecListenerTlsValidationTrustFileOutput() VirtualGatewaySpecListenerTlsValidationTrustFileOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustFileOutput) ToVirtualGatewaySpecListenerTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustFileOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustFileOutput) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput() VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsValidationTrustFileOutput) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsValidationTrustFile) *VirtualGatewaySpecListenerTlsValidationTrustFile {
		return &v
	}).(VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecListenerTlsValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidationTrustFile) string { return v.CertificateChain }).(pulumi.StringOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput() VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput) ToVirtualGatewaySpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput) Elem() VirtualGatewaySpecListenerTlsValidationTrustFileOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationTrustFile) VirtualGatewaySpecListenerTlsValidationTrustFile {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsValidationTrustFile
		return ret
	}).(VirtualGatewaySpecListenerTlsValidationTrustFileOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationTrustFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustSds struct {
	// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualGatewaySpecListenerTlsValidationTrustSdsInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationTrustSdsArgs and VirtualGatewaySpecListenerTlsValidationTrustSdsOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationTrustSdsInput` via:
//
//	VirtualGatewaySpecListenerTlsValidationTrustSdsArgs{...}
type VirtualGatewaySpecListenerTlsValidationTrustSdsInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationTrustSdsOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsOutput
	ToVirtualGatewaySpecListenerTlsValidationTrustSdsOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsOutput
}

type VirtualGatewaySpecListenerTlsValidationTrustSdsArgs struct {
	// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualGatewaySpecListenerTlsValidationTrustSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (i VirtualGatewaySpecListenerTlsValidationTrustSdsArgs) ToVirtualGatewaySpecListenerTlsValidationTrustSdsOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustSdsOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationTrustSdsArgs) ToVirtualGatewaySpecListenerTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustSdsOutput)
}

func (i VirtualGatewaySpecListenerTlsValidationTrustSdsArgs) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecListenerTlsValidationTrustSdsArgs) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustSdsOutput).ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecListenerTlsValidationTrustSdsPtrInput is an input type that accepts VirtualGatewaySpecListenerTlsValidationTrustSdsArgs, VirtualGatewaySpecListenerTlsValidationTrustSdsPtr and VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecListenerTlsValidationTrustSdsPtrInput` via:
//
//	        VirtualGatewaySpecListenerTlsValidationTrustSdsArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecListenerTlsValidationTrustSdsPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput
	ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput
}

type virtualGatewaySpecListenerTlsValidationTrustSdsPtrType VirtualGatewaySpecListenerTlsValidationTrustSdsArgs

func VirtualGatewaySpecListenerTlsValidationTrustSdsPtr(v *VirtualGatewaySpecListenerTlsValidationTrustSdsArgs) VirtualGatewaySpecListenerTlsValidationTrustSdsPtrInput {
	return (*virtualGatewaySpecListenerTlsValidationTrustSdsPtrType)(v)
}

func (*virtualGatewaySpecListenerTlsValidationTrustSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (i *virtualGatewaySpecListenerTlsValidationTrustSdsPtrType) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecListenerTlsValidationTrustSdsPtrType) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustSdsOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationTrustSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationTrustSdsOutput) ToVirtualGatewaySpecListenerTlsValidationTrustSdsOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustSdsOutput) ToVirtualGatewaySpecListenerTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustSdsOutput) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecListenerTlsValidationTrustSdsOutput) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecListenerTlsValidationTrustSds) *VirtualGatewaySpecListenerTlsValidationTrustSds {
		return &v
	}).(VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput)
}

// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecListenerTlsValidationTrustSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecListenerTlsValidationTrustSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput() VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput) ToVirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput) Elem() VirtualGatewaySpecListenerTlsValidationTrustSdsOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationTrustSds) VirtualGatewaySpecListenerTlsValidationTrustSds {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecListenerTlsValidationTrustSds
		return ret
	}).(VirtualGatewaySpecListenerTlsValidationTrustSdsOutput)
}

// Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecListenerTlsValidationTrustSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecLogging struct {
	// Access log configuration for a virtual gateway.
	AccessLog *VirtualGatewaySpecLoggingAccessLog `pulumi:"accessLog"`
}

// VirtualGatewaySpecLoggingInput is an input type that accepts VirtualGatewaySpecLoggingArgs and VirtualGatewaySpecLoggingOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingInput` via:
//
//	VirtualGatewaySpecLoggingArgs{...}
type VirtualGatewaySpecLoggingInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingOutput() VirtualGatewaySpecLoggingOutput
	ToVirtualGatewaySpecLoggingOutputWithContext(context.Context) VirtualGatewaySpecLoggingOutput
}

type VirtualGatewaySpecLoggingArgs struct {
	// Access log configuration for a virtual gateway.
	AccessLog VirtualGatewaySpecLoggingAccessLogPtrInput `pulumi:"accessLog"`
}

func (VirtualGatewaySpecLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLogging)(nil)).Elem()
}

func (i VirtualGatewaySpecLoggingArgs) ToVirtualGatewaySpecLoggingOutput() VirtualGatewaySpecLoggingOutput {
	return i.ToVirtualGatewaySpecLoggingOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingArgs) ToVirtualGatewaySpecLoggingOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingOutput)
}

func (i VirtualGatewaySpecLoggingArgs) ToVirtualGatewaySpecLoggingPtrOutput() VirtualGatewaySpecLoggingPtrOutput {
	return i.ToVirtualGatewaySpecLoggingPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingArgs) ToVirtualGatewaySpecLoggingPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingOutput).ToVirtualGatewaySpecLoggingPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecLoggingPtrInput is an input type that accepts VirtualGatewaySpecLoggingArgs, VirtualGatewaySpecLoggingPtr and VirtualGatewaySpecLoggingPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingPtrInput` via:
//
//	        VirtualGatewaySpecLoggingArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecLoggingPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingPtrOutput() VirtualGatewaySpecLoggingPtrOutput
	ToVirtualGatewaySpecLoggingPtrOutputWithContext(context.Context) VirtualGatewaySpecLoggingPtrOutput
}

type virtualGatewaySpecLoggingPtrType VirtualGatewaySpecLoggingArgs

func VirtualGatewaySpecLoggingPtr(v *VirtualGatewaySpecLoggingArgs) VirtualGatewaySpecLoggingPtrInput {
	return (*virtualGatewaySpecLoggingPtrType)(v)
}

func (*virtualGatewaySpecLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecLogging)(nil)).Elem()
}

func (i *virtualGatewaySpecLoggingPtrType) ToVirtualGatewaySpecLoggingPtrOutput() VirtualGatewaySpecLoggingPtrOutput {
	return i.ToVirtualGatewaySpecLoggingPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecLoggingPtrType) ToVirtualGatewaySpecLoggingPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingPtrOutput)
}

type VirtualGatewaySpecLoggingOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLogging)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingOutput) ToVirtualGatewaySpecLoggingOutput() VirtualGatewaySpecLoggingOutput {
	return o
}

func (o VirtualGatewaySpecLoggingOutput) ToVirtualGatewaySpecLoggingOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingOutput {
	return o
}

func (o VirtualGatewaySpecLoggingOutput) ToVirtualGatewaySpecLoggingPtrOutput() VirtualGatewaySpecLoggingPtrOutput {
	return o.ToVirtualGatewaySpecLoggingPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecLoggingOutput) ToVirtualGatewaySpecLoggingPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecLogging) *VirtualGatewaySpecLogging {
		return &v
	}).(VirtualGatewaySpecLoggingPtrOutput)
}

// Access log configuration for a virtual gateway.
func (o VirtualGatewaySpecLoggingOutput) AccessLog() VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecLogging) *VirtualGatewaySpecLoggingAccessLog { return v.AccessLog }).(VirtualGatewaySpecLoggingAccessLogPtrOutput)
}

type VirtualGatewaySpecLoggingPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecLogging)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingPtrOutput) ToVirtualGatewaySpecLoggingPtrOutput() VirtualGatewaySpecLoggingPtrOutput {
	return o
}

func (o VirtualGatewaySpecLoggingPtrOutput) ToVirtualGatewaySpecLoggingPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingPtrOutput {
	return o
}

func (o VirtualGatewaySpecLoggingPtrOutput) Elem() VirtualGatewaySpecLoggingOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLogging) VirtualGatewaySpecLogging {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecLogging
		return ret
	}).(VirtualGatewaySpecLoggingOutput)
}

// Access log configuration for a virtual gateway.
func (o VirtualGatewaySpecLoggingPtrOutput) AccessLog() VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLogging) *VirtualGatewaySpecLoggingAccessLog {
		if v == nil {
			return nil
		}
		return v.AccessLog
	}).(VirtualGatewaySpecLoggingAccessLogPtrOutput)
}

type VirtualGatewaySpecLoggingAccessLog struct {
	// File object to send virtual gateway access logs to.
	File *VirtualGatewaySpecLoggingAccessLogFile `pulumi:"file"`
}

// VirtualGatewaySpecLoggingAccessLogInput is an input type that accepts VirtualGatewaySpecLoggingAccessLogArgs and VirtualGatewaySpecLoggingAccessLogOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingAccessLogInput` via:
//
//	VirtualGatewaySpecLoggingAccessLogArgs{...}
type VirtualGatewaySpecLoggingAccessLogInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingAccessLogOutput() VirtualGatewaySpecLoggingAccessLogOutput
	ToVirtualGatewaySpecLoggingAccessLogOutputWithContext(context.Context) VirtualGatewaySpecLoggingAccessLogOutput
}

type VirtualGatewaySpecLoggingAccessLogArgs struct {
	// File object to send virtual gateway access logs to.
	File VirtualGatewaySpecLoggingAccessLogFilePtrInput `pulumi:"file"`
}

func (VirtualGatewaySpecLoggingAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLog)(nil)).Elem()
}

func (i VirtualGatewaySpecLoggingAccessLogArgs) ToVirtualGatewaySpecLoggingAccessLogOutput() VirtualGatewaySpecLoggingAccessLogOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingAccessLogArgs) ToVirtualGatewaySpecLoggingAccessLogOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogOutput)
}

func (i VirtualGatewaySpecLoggingAccessLogArgs) ToVirtualGatewaySpecLoggingAccessLogPtrOutput() VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingAccessLogArgs) ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogOutput).ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecLoggingAccessLogPtrInput is an input type that accepts VirtualGatewaySpecLoggingAccessLogArgs, VirtualGatewaySpecLoggingAccessLogPtr and VirtualGatewaySpecLoggingAccessLogPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingAccessLogPtrInput` via:
//
//	        VirtualGatewaySpecLoggingAccessLogArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecLoggingAccessLogPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingAccessLogPtrOutput() VirtualGatewaySpecLoggingAccessLogPtrOutput
	ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(context.Context) VirtualGatewaySpecLoggingAccessLogPtrOutput
}

type virtualGatewaySpecLoggingAccessLogPtrType VirtualGatewaySpecLoggingAccessLogArgs

func VirtualGatewaySpecLoggingAccessLogPtr(v *VirtualGatewaySpecLoggingAccessLogArgs) VirtualGatewaySpecLoggingAccessLogPtrInput {
	return (*virtualGatewaySpecLoggingAccessLogPtrType)(v)
}

func (*virtualGatewaySpecLoggingAccessLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecLoggingAccessLog)(nil)).Elem()
}

func (i *virtualGatewaySpecLoggingAccessLogPtrType) ToVirtualGatewaySpecLoggingAccessLogPtrOutput() VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecLoggingAccessLogPtrType) ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogPtrOutput)
}

type VirtualGatewaySpecLoggingAccessLogOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLog)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingAccessLogOutput) ToVirtualGatewaySpecLoggingAccessLogOutput() VirtualGatewaySpecLoggingAccessLogOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogOutput) ToVirtualGatewaySpecLoggingAccessLogOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogOutput) ToVirtualGatewaySpecLoggingAccessLogPtrOutput() VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return o.ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecLoggingAccessLogOutput) ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecLoggingAccessLog) *VirtualGatewaySpecLoggingAccessLog {
		return &v
	}).(VirtualGatewaySpecLoggingAccessLogPtrOutput)
}

// File object to send virtual gateway access logs to.
func (o VirtualGatewaySpecLoggingAccessLogOutput) File() VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecLoggingAccessLog) *VirtualGatewaySpecLoggingAccessLogFile { return v.File }).(VirtualGatewaySpecLoggingAccessLogFilePtrOutput)
}

type VirtualGatewaySpecLoggingAccessLogPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingAccessLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecLoggingAccessLog)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingAccessLogPtrOutput) ToVirtualGatewaySpecLoggingAccessLogPtrOutput() VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogPtrOutput) ToVirtualGatewaySpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogPtrOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogPtrOutput) Elem() VirtualGatewaySpecLoggingAccessLogOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLoggingAccessLog) VirtualGatewaySpecLoggingAccessLog {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecLoggingAccessLog
		return ret
	}).(VirtualGatewaySpecLoggingAccessLogOutput)
}

// File object to send virtual gateway access logs to.
func (o VirtualGatewaySpecLoggingAccessLogPtrOutput) File() VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLoggingAccessLog) *VirtualGatewaySpecLoggingAccessLogFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewaySpecLoggingAccessLogFilePtrOutput)
}

type VirtualGatewaySpecLoggingAccessLogFile struct {
	// The specified format for the logs.
	Format *VirtualGatewaySpecLoggingAccessLogFileFormat `pulumi:"format"`
	// File path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
	Path string `pulumi:"path"`
}

// VirtualGatewaySpecLoggingAccessLogFileInput is an input type that accepts VirtualGatewaySpecLoggingAccessLogFileArgs and VirtualGatewaySpecLoggingAccessLogFileOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingAccessLogFileInput` via:
//
//	VirtualGatewaySpecLoggingAccessLogFileArgs{...}
type VirtualGatewaySpecLoggingAccessLogFileInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingAccessLogFileOutput() VirtualGatewaySpecLoggingAccessLogFileOutput
	ToVirtualGatewaySpecLoggingAccessLogFileOutputWithContext(context.Context) VirtualGatewaySpecLoggingAccessLogFileOutput
}

type VirtualGatewaySpecLoggingAccessLogFileArgs struct {
	// The specified format for the logs.
	Format VirtualGatewaySpecLoggingAccessLogFileFormatPtrInput `pulumi:"format"`
	// File path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
	Path pulumi.StringInput `pulumi:"path"`
}

func (VirtualGatewaySpecLoggingAccessLogFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFile)(nil)).Elem()
}

func (i VirtualGatewaySpecLoggingAccessLogFileArgs) ToVirtualGatewaySpecLoggingAccessLogFileOutput() VirtualGatewaySpecLoggingAccessLogFileOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogFileOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingAccessLogFileArgs) ToVirtualGatewaySpecLoggingAccessLogFileOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogFileOutput)
}

func (i VirtualGatewaySpecLoggingAccessLogFileArgs) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutput() VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingAccessLogFileArgs) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogFileOutput).ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(ctx)
}

// VirtualGatewaySpecLoggingAccessLogFilePtrInput is an input type that accepts VirtualGatewaySpecLoggingAccessLogFileArgs, VirtualGatewaySpecLoggingAccessLogFilePtr and VirtualGatewaySpecLoggingAccessLogFilePtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingAccessLogFilePtrInput` via:
//
//	        VirtualGatewaySpecLoggingAccessLogFileArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecLoggingAccessLogFilePtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingAccessLogFilePtrOutput() VirtualGatewaySpecLoggingAccessLogFilePtrOutput
	ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(context.Context) VirtualGatewaySpecLoggingAccessLogFilePtrOutput
}

type virtualGatewaySpecLoggingAccessLogFilePtrType VirtualGatewaySpecLoggingAccessLogFileArgs

func VirtualGatewaySpecLoggingAccessLogFilePtr(v *VirtualGatewaySpecLoggingAccessLogFileArgs) VirtualGatewaySpecLoggingAccessLogFilePtrInput {
	return (*virtualGatewaySpecLoggingAccessLogFilePtrType)(v)
}

func (*virtualGatewaySpecLoggingAccessLogFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecLoggingAccessLogFile)(nil)).Elem()
}

func (i *virtualGatewaySpecLoggingAccessLogFilePtrType) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutput() VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecLoggingAccessLogFilePtrType) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogFilePtrOutput)
}

type VirtualGatewaySpecLoggingAccessLogFileOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingAccessLogFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFile)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingAccessLogFileOutput) ToVirtualGatewaySpecLoggingAccessLogFileOutput() VirtualGatewaySpecLoggingAccessLogFileOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFileOutput) ToVirtualGatewaySpecLoggingAccessLogFileOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFileOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFileOutput) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutput() VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return o.ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecLoggingAccessLogFileOutput) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecLoggingAccessLogFile) *VirtualGatewaySpecLoggingAccessLogFile {
		return &v
	}).(VirtualGatewaySpecLoggingAccessLogFilePtrOutput)
}

// The specified format for the logs.
func (o VirtualGatewaySpecLoggingAccessLogFileOutput) Format() VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecLoggingAccessLogFile) *VirtualGatewaySpecLoggingAccessLogFileFormat {
		return v.Format
	}).(VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput)
}

// File path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecLoggingAccessLogFileOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecLoggingAccessLogFile) string { return v.Path }).(pulumi.StringOutput)
}

type VirtualGatewaySpecLoggingAccessLogFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingAccessLogFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecLoggingAccessLogFile)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingAccessLogFilePtrOutput) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutput() VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFilePtrOutput) ToVirtualGatewaySpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFilePtrOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFilePtrOutput) Elem() VirtualGatewaySpecLoggingAccessLogFileOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLoggingAccessLogFile) VirtualGatewaySpecLoggingAccessLogFile {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecLoggingAccessLogFile
		return ret
	}).(VirtualGatewaySpecLoggingAccessLogFileOutput)
}

// The specified format for the logs.
func (o VirtualGatewaySpecLoggingAccessLogFilePtrOutput) Format() VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLoggingAccessLogFile) *VirtualGatewaySpecLoggingAccessLogFileFormat {
		if v == nil {
			return nil
		}
		return v.Format
	}).(VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput)
}

// File path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
func (o VirtualGatewaySpecLoggingAccessLogFilePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLoggingAccessLogFile) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecLoggingAccessLogFileFormat struct {
	// The logging format for JSON.
	Jsons []VirtualGatewaySpecLoggingAccessLogFileFormatJson `pulumi:"jsons"`
	// The logging format for text. Must be between 1 and 1000 characters in length.
	Text *string `pulumi:"text"`
}

// VirtualGatewaySpecLoggingAccessLogFileFormatInput is an input type that accepts VirtualGatewaySpecLoggingAccessLogFileFormatArgs and VirtualGatewaySpecLoggingAccessLogFileFormatOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingAccessLogFileFormatInput` via:
//
//	VirtualGatewaySpecLoggingAccessLogFileFormatArgs{...}
type VirtualGatewaySpecLoggingAccessLogFileFormatInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingAccessLogFileFormatOutput() VirtualGatewaySpecLoggingAccessLogFileFormatOutput
	ToVirtualGatewaySpecLoggingAccessLogFileFormatOutputWithContext(context.Context) VirtualGatewaySpecLoggingAccessLogFileFormatOutput
}

type VirtualGatewaySpecLoggingAccessLogFileFormatArgs struct {
	// The logging format for JSON.
	Jsons VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayInput `pulumi:"jsons"`
	// The logging format for text. Must be between 1 and 1000 characters in length.
	Text pulumi.StringPtrInput `pulumi:"text"`
}

func (VirtualGatewaySpecLoggingAccessLogFileFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (i VirtualGatewaySpecLoggingAccessLogFileFormatArgs) ToVirtualGatewaySpecLoggingAccessLogFileFormatOutput() VirtualGatewaySpecLoggingAccessLogFileFormatOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogFileFormatOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingAccessLogFileFormatArgs) ToVirtualGatewaySpecLoggingAccessLogFileFormatOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFileFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogFileFormatOutput)
}

func (i VirtualGatewaySpecLoggingAccessLogFileFormatArgs) ToVirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput() VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogFileFormatPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingAccessLogFileFormatArgs) ToVirtualGatewaySpecLoggingAccessLogFileFormatPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogFileFormatOutput).ToVirtualGatewaySpecLoggingAccessLogFileFormatPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecLoggingAccessLogFileFormatPtrInput is an input type that accepts VirtualGatewaySpecLoggingAccessLogFileFormatArgs, VirtualGatewaySpecLoggingAccessLogFileFormatPtr and VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingAccessLogFileFormatPtrInput` via:
//
//	        VirtualGatewaySpecLoggingAccessLogFileFormatArgs{...}
//
//	or:
//
//	        nil
type VirtualGatewaySpecLoggingAccessLogFileFormatPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput() VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput
	ToVirtualGatewaySpecLoggingAccessLogFileFormatPtrOutputWithContext(context.Context) VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput
}

type virtualGatewaySpecLoggingAccessLogFileFormatPtrType VirtualGatewaySpecLoggingAccessLogFileFormatArgs

func VirtualGatewaySpecLoggingAccessLogFileFormatPtr(v *VirtualGatewaySpecLoggingAccessLogFileFormatArgs) VirtualGatewaySpecLoggingAccessLogFileFormatPtrInput {
	return (*virtualGatewaySpecLoggingAccessLogFileFormatPtrType)(v)
}

func (*virtualGatewaySpecLoggingAccessLogFileFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (i *virtualGatewaySpecLoggingAccessLogFileFormatPtrType) ToVirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput() VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogFileFormatPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecLoggingAccessLogFileFormatPtrType) ToVirtualGatewaySpecLoggingAccessLogFileFormatPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput)
}

type VirtualGatewaySpecLoggingAccessLogFileFormatOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingAccessLogFileFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingAccessLogFileFormatOutput) ToVirtualGatewaySpecLoggingAccessLogFileFormatOutput() VirtualGatewaySpecLoggingAccessLogFileFormatOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFileFormatOutput) ToVirtualGatewaySpecLoggingAccessLogFileFormatOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFileFormatOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFileFormatOutput) ToVirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput() VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput {
	return o.ToVirtualGatewaySpecLoggingAccessLogFileFormatPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecLoggingAccessLogFileFormatOutput) ToVirtualGatewaySpecLoggingAccessLogFileFormatPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpecLoggingAccessLogFileFormat) *VirtualGatewaySpecLoggingAccessLogFileFormat {
		return &v
	}).(VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput)
}

// The logging format for JSON.
func (o VirtualGatewaySpecLoggingAccessLogFileFormatOutput) Jsons() VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput {
	return o.ApplyT(func(v VirtualGatewaySpecLoggingAccessLogFileFormat) []VirtualGatewaySpecLoggingAccessLogFileFormatJson {
		return v.Jsons
	}).(VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput)
}

// The logging format for text. Must be between 1 and 1000 characters in length.
func (o VirtualGatewaySpecLoggingAccessLogFileFormatOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpecLoggingAccessLogFileFormat) *string { return v.Text }).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput) ToVirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput() VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput) ToVirtualGatewaySpecLoggingAccessLogFileFormatPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput) Elem() VirtualGatewaySpecLoggingAccessLogFileFormatOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLoggingAccessLogFileFormat) VirtualGatewaySpecLoggingAccessLogFileFormat {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpecLoggingAccessLogFileFormat
		return ret
	}).(VirtualGatewaySpecLoggingAccessLogFileFormatOutput)
}

// The logging format for JSON.
func (o VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput) Jsons() VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLoggingAccessLogFileFormat) []VirtualGatewaySpecLoggingAccessLogFileFormatJson {
		if v == nil {
			return nil
		}
		return v.Jsons
	}).(VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput)
}

// The logging format for text. Must be between 1 and 1000 characters in length.
func (o VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpecLoggingAccessLogFileFormat) *string {
		if v == nil {
			return nil
		}
		return v.Text
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewaySpecLoggingAccessLogFileFormatJson struct {
	// The specified key for the JSON. Must be between 1 and 100 characters in length.
	Key string `pulumi:"key"`
	// The specified value for the JSON. Must be between 1 and 100 characters in length.
	Value string `pulumi:"value"`
}

// VirtualGatewaySpecLoggingAccessLogFileFormatJsonInput is an input type that accepts VirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs and VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingAccessLogFileFormatJsonInput` via:
//
//	VirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs{...}
type VirtualGatewaySpecLoggingAccessLogFileFormatJsonInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput() VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput
	ToVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutputWithContext(context.Context) VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput
}

type VirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs struct {
	// The specified key for the JSON. Must be between 1 and 100 characters in length.
	Key pulumi.StringInput `pulumi:"key"`
	// The specified value for the JSON. Must be between 1 and 100 characters in length.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (i VirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs) ToVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput() VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs) ToVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput)
}

// VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayInput is an input type that accepts VirtualGatewaySpecLoggingAccessLogFileFormatJsonArray and VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayInput` via:
//
//	VirtualGatewaySpecLoggingAccessLogFileFormatJsonArray{ VirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs{...} }
type VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayInput interface {
	pulumi.Input

	ToVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput() VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput
	ToVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(context.Context) VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput
}

type VirtualGatewaySpecLoggingAccessLogFileFormatJsonArray []VirtualGatewaySpecLoggingAccessLogFileFormatJsonInput

func (VirtualGatewaySpecLoggingAccessLogFileFormatJsonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualGatewaySpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (i VirtualGatewaySpecLoggingAccessLogFileFormatJsonArray) ToVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput() VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput {
	return i.ToVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecLoggingAccessLogFileFormatJsonArray) ToVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput)
}

type VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput) ToVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput() VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput) ToVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput {
	return o
}

// The specified key for the JSON. Must be between 1 and 100 characters in length.
func (o VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecLoggingAccessLogFileFormatJson) string { return v.Key }).(pulumi.StringOutput)
}

// The specified value for the JSON. Must be between 1 and 100 characters in length.
func (o VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewaySpecLoggingAccessLogFileFormatJson) string { return v.Value }).(pulumi.StringOutput)
}

type VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualGatewaySpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (o VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput) ToVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput() VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput) ToVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(ctx context.Context) VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput {
	return o
}

func (o VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput) Index(i pulumi.IntInput) VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualGatewaySpecLoggingAccessLogFileFormatJson {
		return vs[0].([]VirtualGatewaySpecLoggingAccessLogFileFormatJson)[vs[1].(int)]
	}).(VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput)
}

type VirtualNodeSpec struct {
	// Defaults for backends.
	BackendDefaults *VirtualNodeSpecBackendDefaults `pulumi:"backendDefaults"`
	// Backends to which the virtual node is expected to send outbound traffic.
	Backends []VirtualNodeSpecBackend `pulumi:"backends"`
	// Listeners from which the virtual node is expected to receive inbound traffic.
	Listeners []VirtualNodeSpecListener `pulumi:"listeners"`
	// Inbound and outbound access logging information for the virtual node.
	Logging *VirtualNodeSpecLogging `pulumi:"logging"`
	// Service discovery information for the virtual node.
	ServiceDiscovery *VirtualNodeSpecServiceDiscovery `pulumi:"serviceDiscovery"`
}

// VirtualNodeSpecInput is an input type that accepts VirtualNodeSpecArgs and VirtualNodeSpecOutput values.
// You can construct a concrete instance of `VirtualNodeSpecInput` via:
//
//	VirtualNodeSpecArgs{...}
type VirtualNodeSpecInput interface {
	pulumi.Input

	ToVirtualNodeSpecOutput() VirtualNodeSpecOutput
	ToVirtualNodeSpecOutputWithContext(context.Context) VirtualNodeSpecOutput
}

type VirtualNodeSpecArgs struct {
	// Defaults for backends.
	BackendDefaults VirtualNodeSpecBackendDefaultsPtrInput `pulumi:"backendDefaults"`
	// Backends to which the virtual node is expected to send outbound traffic.
	Backends VirtualNodeSpecBackendArrayInput `pulumi:"backends"`
	// Listeners from which the virtual node is expected to receive inbound traffic.
	Listeners VirtualNodeSpecListenerArrayInput `pulumi:"listeners"`
	// Inbound and outbound access logging information for the virtual node.
	Logging VirtualNodeSpecLoggingPtrInput `pulumi:"logging"`
	// Service discovery information for the virtual node.
	ServiceDiscovery VirtualNodeSpecServiceDiscoveryPtrInput `pulumi:"serviceDiscovery"`
}

func (VirtualNodeSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpec)(nil)).Elem()
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecOutput() VirtualNodeSpecOutput {
	return i.ToVirtualNodeSpecOutputWithContext(context.Background())
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecOutputWithContext(ctx context.Context) VirtualNodeSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecOutput)
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return i.ToVirtualNodeSpecPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecOutput).ToVirtualNodeSpecPtrOutputWithContext(ctx)
}

// VirtualNodeSpecPtrInput is an input type that accepts VirtualNodeSpecArgs, VirtualNodeSpecPtr and VirtualNodeSpecPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecPtrInput` via:
//
//	        VirtualNodeSpecArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput
	ToVirtualNodeSpecPtrOutputWithContext(context.Context) VirtualNodeSpecPtrOutput
}

type virtualNodeSpecPtrType VirtualNodeSpecArgs

func VirtualNodeSpecPtr(v *VirtualNodeSpecArgs) VirtualNodeSpecPtrInput {
	return (*virtualNodeSpecPtrType)(v)
}

func (*virtualNodeSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpec)(nil)).Elem()
}

func (i *virtualNodeSpecPtrType) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return i.ToVirtualNodeSpecPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecPtrType) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecPtrOutput)
}

type VirtualNodeSpecOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpec)(nil)).Elem()
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecOutput() VirtualNodeSpecOutput {
	return o
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecOutputWithContext(ctx context.Context) VirtualNodeSpecOutput {
	return o
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return o.ToVirtualNodeSpecPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpec) *VirtualNodeSpec {
		return &v
	}).(VirtualNodeSpecPtrOutput)
}

// Defaults for backends.
func (o VirtualNodeSpecOutput) BackendDefaults() VirtualNodeSpecBackendDefaultsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpec) *VirtualNodeSpecBackendDefaults { return v.BackendDefaults }).(VirtualNodeSpecBackendDefaultsPtrOutput)
}

// Backends to which the virtual node is expected to send outbound traffic.
func (o VirtualNodeSpecOutput) Backends() VirtualNodeSpecBackendArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpec) []VirtualNodeSpecBackend { return v.Backends }).(VirtualNodeSpecBackendArrayOutput)
}

// Listeners from which the virtual node is expected to receive inbound traffic.
func (o VirtualNodeSpecOutput) Listeners() VirtualNodeSpecListenerArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpec) []VirtualNodeSpecListener { return v.Listeners }).(VirtualNodeSpecListenerArrayOutput)
}

// Inbound and outbound access logging information for the virtual node.
func (o VirtualNodeSpecOutput) Logging() VirtualNodeSpecLoggingPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpec) *VirtualNodeSpecLogging { return v.Logging }).(VirtualNodeSpecLoggingPtrOutput)
}

// Service discovery information for the virtual node.
func (o VirtualNodeSpecOutput) ServiceDiscovery() VirtualNodeSpecServiceDiscoveryPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpec) *VirtualNodeSpecServiceDiscovery { return v.ServiceDiscovery }).(VirtualNodeSpecServiceDiscoveryPtrOutput)
}

type VirtualNodeSpecPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpec)(nil)).Elem()
}

func (o VirtualNodeSpecPtrOutput) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return o
}

func (o VirtualNodeSpecPtrOutput) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return o
}

func (o VirtualNodeSpecPtrOutput) Elem() VirtualNodeSpecOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) VirtualNodeSpec {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpec
		return ret
	}).(VirtualNodeSpecOutput)
}

// Defaults for backends.
func (o VirtualNodeSpecPtrOutput) BackendDefaults() VirtualNodeSpecBackendDefaultsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) *VirtualNodeSpecBackendDefaults {
		if v == nil {
			return nil
		}
		return v.BackendDefaults
	}).(VirtualNodeSpecBackendDefaultsPtrOutput)
}

// Backends to which the virtual node is expected to send outbound traffic.
func (o VirtualNodeSpecPtrOutput) Backends() VirtualNodeSpecBackendArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) []VirtualNodeSpecBackend {
		if v == nil {
			return nil
		}
		return v.Backends
	}).(VirtualNodeSpecBackendArrayOutput)
}

// Listeners from which the virtual node is expected to receive inbound traffic.
func (o VirtualNodeSpecPtrOutput) Listeners() VirtualNodeSpecListenerArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) []VirtualNodeSpecListener {
		if v == nil {
			return nil
		}
		return v.Listeners
	}).(VirtualNodeSpecListenerArrayOutput)
}

// Inbound and outbound access logging information for the virtual node.
func (o VirtualNodeSpecPtrOutput) Logging() VirtualNodeSpecLoggingPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) *VirtualNodeSpecLogging {
		if v == nil {
			return nil
		}
		return v.Logging
	}).(VirtualNodeSpecLoggingPtrOutput)
}

// Service discovery information for the virtual node.
func (o VirtualNodeSpecPtrOutput) ServiceDiscovery() VirtualNodeSpecServiceDiscoveryPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) *VirtualNodeSpecServiceDiscovery {
		if v == nil {
			return nil
		}
		return v.ServiceDiscovery
	}).(VirtualNodeSpecServiceDiscoveryPtrOutput)
}

type VirtualNodeSpecBackend struct {
	// Virtual service to use as a backend for a virtual node.
	VirtualService VirtualNodeSpecBackendVirtualService `pulumi:"virtualService"`
}

// VirtualNodeSpecBackendInput is an input type that accepts VirtualNodeSpecBackendArgs and VirtualNodeSpecBackendOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendInput` via:
//
//	VirtualNodeSpecBackendArgs{...}
type VirtualNodeSpecBackendInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendOutput() VirtualNodeSpecBackendOutput
	ToVirtualNodeSpecBackendOutputWithContext(context.Context) VirtualNodeSpecBackendOutput
}

type VirtualNodeSpecBackendArgs struct {
	// Virtual service to use as a backend for a virtual node.
	VirtualService VirtualNodeSpecBackendVirtualServiceInput `pulumi:"virtualService"`
}

func (VirtualNodeSpecBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackend)(nil)).Elem()
}

func (i VirtualNodeSpecBackendArgs) ToVirtualNodeSpecBackendOutput() VirtualNodeSpecBackendOutput {
	return i.ToVirtualNodeSpecBackendOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendArgs) ToVirtualNodeSpecBackendOutputWithContext(ctx context.Context) VirtualNodeSpecBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendOutput)
}

// VirtualNodeSpecBackendArrayInput is an input type that accepts VirtualNodeSpecBackendArray and VirtualNodeSpecBackendArrayOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendArrayInput` via:
//
//	VirtualNodeSpecBackendArray{ VirtualNodeSpecBackendArgs{...} }
type VirtualNodeSpecBackendArrayInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendArrayOutput() VirtualNodeSpecBackendArrayOutput
	ToVirtualNodeSpecBackendArrayOutputWithContext(context.Context) VirtualNodeSpecBackendArrayOutput
}

type VirtualNodeSpecBackendArray []VirtualNodeSpecBackendInput

func (VirtualNodeSpecBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeSpecBackend)(nil)).Elem()
}

func (i VirtualNodeSpecBackendArray) ToVirtualNodeSpecBackendArrayOutput() VirtualNodeSpecBackendArrayOutput {
	return i.ToVirtualNodeSpecBackendArrayOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendArray) ToVirtualNodeSpecBackendArrayOutputWithContext(ctx context.Context) VirtualNodeSpecBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendArrayOutput)
}

type VirtualNodeSpecBackendOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackend)(nil)).Elem()
}

func (o VirtualNodeSpecBackendOutput) ToVirtualNodeSpecBackendOutput() VirtualNodeSpecBackendOutput {
	return o
}

func (o VirtualNodeSpecBackendOutput) ToVirtualNodeSpecBackendOutputWithContext(ctx context.Context) VirtualNodeSpecBackendOutput {
	return o
}

// Virtual service to use as a backend for a virtual node.
func (o VirtualNodeSpecBackendOutput) VirtualService() VirtualNodeSpecBackendVirtualServiceOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackend) VirtualNodeSpecBackendVirtualService { return v.VirtualService }).(VirtualNodeSpecBackendVirtualServiceOutput)
}

type VirtualNodeSpecBackendArrayOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeSpecBackend)(nil)).Elem()
}

func (o VirtualNodeSpecBackendArrayOutput) ToVirtualNodeSpecBackendArrayOutput() VirtualNodeSpecBackendArrayOutput {
	return o
}

func (o VirtualNodeSpecBackendArrayOutput) ToVirtualNodeSpecBackendArrayOutputWithContext(ctx context.Context) VirtualNodeSpecBackendArrayOutput {
	return o
}

func (o VirtualNodeSpecBackendArrayOutput) Index(i pulumi.IntInput) VirtualNodeSpecBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNodeSpecBackend {
		return vs[0].([]VirtualNodeSpecBackend)[vs[1].(int)]
	}).(VirtualNodeSpecBackendOutput)
}

type VirtualNodeSpecBackendDefaults struct {
	// Default client policy for virtual service backends. See above for details.
	ClientPolicy *VirtualNodeSpecBackendDefaultsClientPolicy `pulumi:"clientPolicy"`
}

// VirtualNodeSpecBackendDefaultsInput is an input type that accepts VirtualNodeSpecBackendDefaultsArgs and VirtualNodeSpecBackendDefaultsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsInput` via:
//
//	VirtualNodeSpecBackendDefaultsArgs{...}
type VirtualNodeSpecBackendDefaultsInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsOutput() VirtualNodeSpecBackendDefaultsOutput
	ToVirtualNodeSpecBackendDefaultsOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsOutput
}

type VirtualNodeSpecBackendDefaultsArgs struct {
	// Default client policy for virtual service backends. See above for details.
	ClientPolicy VirtualNodeSpecBackendDefaultsClientPolicyPtrInput `pulumi:"clientPolicy"`
}

func (VirtualNodeSpecBackendDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaults)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsArgs) ToVirtualNodeSpecBackendDefaultsOutput() VirtualNodeSpecBackendDefaultsOutput {
	return i.ToVirtualNodeSpecBackendDefaultsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsArgs) ToVirtualNodeSpecBackendDefaultsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsOutput)
}

func (i VirtualNodeSpecBackendDefaultsArgs) ToVirtualNodeSpecBackendDefaultsPtrOutput() VirtualNodeSpecBackendDefaultsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsArgs) ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsOutput).ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsArgs, VirtualNodeSpecBackendDefaultsPtr and VirtualNodeSpecBackendDefaultsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsPtrInput` via:
//
//	        VirtualNodeSpecBackendDefaultsArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendDefaultsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsPtrOutput() VirtualNodeSpecBackendDefaultsPtrOutput
	ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsPtrOutput
}

type virtualNodeSpecBackendDefaultsPtrType VirtualNodeSpecBackendDefaultsArgs

func VirtualNodeSpecBackendDefaultsPtr(v *VirtualNodeSpecBackendDefaultsArgs) VirtualNodeSpecBackendDefaultsPtrInput {
	return (*virtualNodeSpecBackendDefaultsPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaults)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsPtrType) ToVirtualNodeSpecBackendDefaultsPtrOutput() VirtualNodeSpecBackendDefaultsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsPtrType) ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaults)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsOutput) ToVirtualNodeSpecBackendDefaultsOutput() VirtualNodeSpecBackendDefaultsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsOutput) ToVirtualNodeSpecBackendDefaultsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsOutput) ToVirtualNodeSpecBackendDefaultsPtrOutput() VirtualNodeSpecBackendDefaultsPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsOutput) ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaults) *VirtualNodeSpecBackendDefaults {
		return &v
	}).(VirtualNodeSpecBackendDefaultsPtrOutput)
}

// Default client policy for virtual service backends. See above for details.
func (o VirtualNodeSpecBackendDefaultsOutput) ClientPolicy() VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaults) *VirtualNodeSpecBackendDefaultsClientPolicy {
		return v.ClientPolicy
	}).(VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput)
}

type VirtualNodeSpecBackendDefaultsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaults)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsPtrOutput) ToVirtualNodeSpecBackendDefaultsPtrOutput() VirtualNodeSpecBackendDefaultsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsPtrOutput) ToVirtualNodeSpecBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsPtrOutput) Elem() VirtualNodeSpecBackendDefaultsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaults) VirtualNodeSpecBackendDefaults {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaults
		return ret
	}).(VirtualNodeSpecBackendDefaultsOutput)
}

// Default client policy for virtual service backends. See above for details.
func (o VirtualNodeSpecBackendDefaultsPtrOutput) ClientPolicy() VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaults) *VirtualNodeSpecBackendDefaultsClientPolicy {
		if v == nil {
			return nil
		}
		return v.ClientPolicy
	}).(VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicy struct {
	// Transport Layer Security (TLS) client policy.
	Tls *VirtualNodeSpecBackendDefaultsClientPolicyTls `pulumi:"tls"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyArgs and VirtualNodeSpecBackendDefaultsClientPolicyOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyInput` via:
//
//	VirtualNodeSpecBackendDefaultsClientPolicyArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyOutput() VirtualNodeSpecBackendDefaultsClientPolicyOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyArgs struct {
	// Transport Layer Security (TLS) client policy.
	Tls VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrInput `pulumi:"tls"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyOutput() VirtualNodeSpecBackendDefaultsClientPolicyOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyArgs, VirtualNodeSpecBackendDefaultsClientPolicyPtr and VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyPtrInput` via:
//
//	        VirtualNodeSpecBackendDefaultsClientPolicyArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendDefaultsClientPolicyPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyPtrType VirtualNodeSpecBackendDefaultsClientPolicyArgs

func VirtualNodeSpecBackendDefaultsClientPolicyPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyArgs) VirtualNodeSpecBackendDefaultsClientPolicyPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyOutput() VirtualNodeSpecBackendDefaultsClientPolicyOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicy) *VirtualNodeSpecBackendDefaultsClientPolicy {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput)
}

// Transport Layer Security (TLS) client policy.
func (o VirtualNodeSpecBackendDefaultsClientPolicyOutput) Tls() VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicy) *VirtualNodeSpecBackendDefaultsClientPolicyTls {
		return v.Tls
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicy)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicy) VirtualNodeSpecBackendDefaultsClientPolicy {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicy
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyOutput)
}

// Transport Layer Security (TLS) client policy.
func (o VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput) Tls() VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicy) *VirtualNodeSpecBackendDefaultsClientPolicyTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTls struct {
	// Listener's TLS certificate.
	Certificate *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate `pulumi:"certificate"`
	// Whether the policy is enforced. Default is `true`.
	Enforce *bool `pulumi:"enforce"`
	// One or more ports that the policy is enforced for.
	Ports []int `pulumi:"ports"`
	// Listener's Transport Layer Security (TLS) validation context.
	Validation VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation `pulumi:"validation"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsInput` via:
//
//	VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs struct {
	// Listener's TLS certificate.
	Certificate VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrInput `pulumi:"certificate"`
	// Whether the policy is enforced. Default is `true`.
	Enforce pulumi.BoolPtrInput `pulumi:"enforce"`
	// One or more ports that the policy is enforced for.
	Ports pulumi.IntArrayInput `pulumi:"ports"`
	// Listener's Transport Layer Security (TLS) validation context.
	Validation VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationInput `pulumi:"validation"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrInput` via:
//
//	        VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTls) *VirtualNodeSpecBackendDefaultsClientPolicyTls {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput)
}

// Listener's TLS certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) Certificate() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTls) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate {
		return v.Certificate
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

// Whether the policy is enforced. Default is `true`.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTls) *bool { return v.Enforce }).(pulumi.BoolPtrOutput)
}

// One or more ports that the policy is enforced for.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTls) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

// Listener's Transport Layer Security (TLS) validation context.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput) Validation() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTls) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation {
		return v.Validation
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTls)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTls) VirtualNodeSpecBackendDefaultsClientPolicyTls {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTls
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput)
}

// Listener's TLS certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) Certificate() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTls) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

// Whether the policy is enforced. Default is `true`.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTls) *bool {
		if v == nil {
			return nil
		}
		return v.Enforce
	}).(pulumi.BoolPtrOutput)
}

// One or more ports that the policy is enforced for.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTls) []int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntArrayOutput)
}

// Listener's Transport Layer Security (TLS) validation context.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput) Validation() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTls) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation {
		if v == nil {
			return nil
		}
		return &v.Validation
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate struct {
	// Local file certificate.
	File *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds `pulumi:"sds"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateInput` via:
//
//	VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs struct {
	// Local file certificate.
	File VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput `pulumi:"sds"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrInput` via:
//
//	        VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput)
}

// Local file certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput) File() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile {
		return v.File
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput) Sds() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds {
		return v.Sds
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput)
}

// Local file certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) File() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput) Sds() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificate) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
	// Private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey string `pulumi:"privateKey"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileInput` via:
//
//	VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	// Private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput` via:
//
//	        VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile) string { return v.CertificateChain }).(pulumi.StringOutput)
}

// Private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

// Private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds struct {
	// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsInput` via:
//
//	VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs struct {
	// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput` via:
//
//	        VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds) *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput)
}

// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds) VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput)
}

// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation struct {
	// SANs for a TLS validation context.
	SubjectAlternativeNames *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames `pulumi:"subjectAlternativeNames"`
	// TLS validation context trust.
	Trust VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust `pulumi:"trust"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationInput` via:
//
//	VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs struct {
	// SANs for a TLS validation context.
	SubjectAlternativeNames VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput `pulumi:"subjectAlternativeNames"`
	// TLS validation context trust.
	Trust VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustInput `pulumi:"trust"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrInput` via:
//
//	        VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput)
}

// SANs for a TLS validation context.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput) SubjectAlternativeNames() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		return v.SubjectAlternativeNames
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// TLS validation context trust.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput) Trust() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust {
		return v.Trust
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput)
}

// SANs for a TLS validation context.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput) SubjectAlternativeNames() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// TLS validation context trust.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput) Trust() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidation) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust {
		if v == nil {
			return nil
		}
		return &v.Trust
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames struct {
	// Criteria for determining a SAN's match.
	Match VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch `pulumi:"match"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput` via:
//
//	VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs struct {
	// Criteria for determining a SAN's match.
	Match VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput `pulumi:"match"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput` via:
//
//	        VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// Criteria for determining a SAN's match.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput) Match() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		return v.Match
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput)
}

// Criteria for determining a SAN's match.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) Match() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNames) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch struct {
	// Values sent must match the specified values exactly.
	Exacts []string `pulumi:"exacts"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput` via:
//
//	VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs struct {
	// Values sent must match the specified values exactly.
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput` via:
//
//	        VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

// Values sent must match the specified values exactly.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) []string {
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

// Values sent must match the specified values exactly.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatch) []string {
		if v == nil {
			return nil
		}
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust struct {
	// TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
	Acm *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm `pulumi:"acm"`
	// TLS validation context trust for a local file certificate.
	File *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile `pulumi:"file"`
	// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds `pulumi:"sds"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustInput` via:
//
//	VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs struct {
	// TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
	Acm VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput `pulumi:"acm"`
	// TLS validation context trust for a local file certificate.
	File VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput `pulumi:"file"`
	// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput `pulumi:"sds"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput` via:
//
//	        VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput)
}

// TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) Acm() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		return v.Acm
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

// TLS validation context trust for a local file certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) File() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		return v.File
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput) Sds() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		return v.Sds
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput)
}

// TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) Acm() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		if v == nil {
			return nil
		}
		return v.Acm
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

// TLS validation context trust for a local file certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) File() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput) Sds() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm struct {
	// One or more ACM ARNs.
	CertificateAuthorityArns []string `pulumi:"certificateAuthorityArns"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput` via:
//
//	VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs struct {
	// One or more ACM ARNs.
	CertificateAuthorityArns pulumi.StringArrayInput `pulumi:"certificateAuthorityArns"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput` via:
//
//	        VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput)
}

// One or more ACM ARNs.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm) []string {
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput)
}

// One or more ACM ARNs.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcm) []string {
		if v == nil {
			return nil
		}
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileInput` via:
//
//	VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput` via:
//
//	        VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds struct {
	// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput` via:
//
//	VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{...}
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs struct {
	// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput)
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput).ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput is an input type that accepts VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs, VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtr and VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput` via:
//
//	        VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput
	ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput
}

type virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs

func VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtr(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput {
	return (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType)(v)
}

func (*virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrType) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds) *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		return &v
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput)
}

// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) ToVirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) Elem() VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds) VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds
		return ret
	}).(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput)
}

// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecBackendVirtualService struct {
	// Client policy for the backend.
	ClientPolicy *VirtualNodeSpecBackendVirtualServiceClientPolicy `pulumi:"clientPolicy"`
	// Name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.
	VirtualServiceName string `pulumi:"virtualServiceName"`
}

// VirtualNodeSpecBackendVirtualServiceInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceArgs and VirtualNodeSpecBackendVirtualServiceOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceInput` via:
//
//	VirtualNodeSpecBackendVirtualServiceArgs{...}
type VirtualNodeSpecBackendVirtualServiceInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceOutput() VirtualNodeSpecBackendVirtualServiceOutput
	ToVirtualNodeSpecBackendVirtualServiceOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceOutput
}

type VirtualNodeSpecBackendVirtualServiceArgs struct {
	// Client policy for the backend.
	ClientPolicy VirtualNodeSpecBackendVirtualServiceClientPolicyPtrInput `pulumi:"clientPolicy"`
	// Name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.
	VirtualServiceName pulumi.StringInput `pulumi:"virtualServiceName"`
}

func (VirtualNodeSpecBackendVirtualServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualService)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceArgs) ToVirtualNodeSpecBackendVirtualServiceOutput() VirtualNodeSpecBackendVirtualServiceOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceArgs) ToVirtualNodeSpecBackendVirtualServiceOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceOutput)
}

type VirtualNodeSpecBackendVirtualServiceOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualService)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceOutput) ToVirtualNodeSpecBackendVirtualServiceOutput() VirtualNodeSpecBackendVirtualServiceOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceOutput) ToVirtualNodeSpecBackendVirtualServiceOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceOutput {
	return o
}

// Client policy for the backend.
func (o VirtualNodeSpecBackendVirtualServiceOutput) ClientPolicy() VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualService) *VirtualNodeSpecBackendVirtualServiceClientPolicy {
		return v.ClientPolicy
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput)
}

// Name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendVirtualServiceOutput) VirtualServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualService) string { return v.VirtualServiceName }).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicy struct {
	// Transport Layer Security (TLS) client policy.
	Tls *VirtualNodeSpecBackendVirtualServiceClientPolicyTls `pulumi:"tls"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyInput` via:
//
//	VirtualNodeSpecBackendVirtualServiceClientPolicyArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyArgs struct {
	// Transport Layer Security (TLS) client policy.
	Tls VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrInput `pulumi:"tls"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicy)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyPtrInput` via:
//
//	        VirtualNodeSpecBackendVirtualServiceClientPolicyArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicy)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicy)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicy) *VirtualNodeSpecBackendVirtualServiceClientPolicy {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput)
}

// Transport Layer Security (TLS) client policy.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyOutput) Tls() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicy) *VirtualNodeSpecBackendVirtualServiceClientPolicyTls {
		return v.Tls
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicy)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicy) VirtualNodeSpecBackendVirtualServiceClientPolicy {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicy
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyOutput)
}

// Transport Layer Security (TLS) client policy.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput) Tls() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicy) *VirtualNodeSpecBackendVirtualServiceClientPolicyTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTls struct {
	// Listener's TLS certificate.
	Certificate *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate `pulumi:"certificate"`
	// Whether the policy is enforced. Default is `true`.
	Enforce *bool `pulumi:"enforce"`
	// One or more ports that the policy is enforced for.
	Ports []int `pulumi:"ports"`
	// Listener's Transport Layer Security (TLS) validation context.
	Validation VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation `pulumi:"validation"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsInput` via:
//
//	VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs struct {
	// Listener's TLS certificate.
	Certificate VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrInput `pulumi:"certificate"`
	// Whether the policy is enforced. Default is `true`.
	Enforce pulumi.BoolPtrInput `pulumi:"enforce"`
	// One or more ports that the policy is enforced for.
	Ports pulumi.IntArrayInput `pulumi:"ports"`
	// Listener's Transport Layer Security (TLS) validation context.
	Validation VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationInput `pulumi:"validation"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTls)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrInput` via:
//
//	        VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTls)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTls)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTls) *VirtualNodeSpecBackendVirtualServiceClientPolicyTls {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput)
}

// Listener's TLS certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) Certificate() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTls) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate {
		return v.Certificate
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput)
}

// Whether the policy is enforced. Default is `true`.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTls) *bool { return v.Enforce }).(pulumi.BoolPtrOutput)
}

// One or more ports that the policy is enforced for.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTls) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

// Listener's Transport Layer Security (TLS) validation context.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput) Validation() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTls) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation {
		return v.Validation
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTls)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTls) VirtualNodeSpecBackendVirtualServiceClientPolicyTls {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTls
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput)
}

// Listener's TLS certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) Certificate() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTls) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput)
}

// Whether the policy is enforced. Default is `true`.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTls) *bool {
		if v == nil {
			return nil
		}
		return v.Enforce
	}).(pulumi.BoolPtrOutput)
}

// One or more ports that the policy is enforced for.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTls) []int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntArrayOutput)
}

// Listener's Transport Layer Security (TLS) validation context.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput) Validation() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTls) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation {
		if v == nil {
			return nil
		}
		return &v.Validation
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate struct {
	// Local file certificate.
	File *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds `pulumi:"sds"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateInput` via:
//
//	VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs struct {
	// Local file certificate.
	File VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrInput `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrInput `pulumi:"sds"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrInput` via:
//
//	        VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput)
}

// Local file certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput) File() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile {
		return v.File
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput) Sds() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds {
		return v.Sds
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput)
}

// Local file certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput) File() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput) Sds() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificate) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
	// Private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey string `pulumi:"privateKey"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileInput` via:
//
//	VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	// Private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrInput` via:
//
//	        VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

// Private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

// Private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds struct {
	// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsInput` via:
//
//	VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs struct {
	// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrInput` via:
//
//	        VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput)
}

// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput)
}

// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation struct {
	// SANs for a TLS validation context.
	SubjectAlternativeNames *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames `pulumi:"subjectAlternativeNames"`
	// TLS validation context trust.
	Trust VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust `pulumi:"trust"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationInput` via:
//
//	VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs struct {
	// SANs for a TLS validation context.
	SubjectAlternativeNames VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrInput `pulumi:"subjectAlternativeNames"`
	// TLS validation context trust.
	Trust VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustInput `pulumi:"trust"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrInput` via:
//
//	        VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput)
}

// SANs for a TLS validation context.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput) SubjectAlternativeNames() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames {
		return v.SubjectAlternativeNames
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// TLS validation context trust.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput) Trust() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust {
		return v.Trust
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput)
}

// SANs for a TLS validation context.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput) SubjectAlternativeNames() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// TLS validation context trust.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput) Trust() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidation) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust {
		if v == nil {
			return nil
		}
		return &v.Trust
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames struct {
	// Criteria for determining a SAN's match.
	Match VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch `pulumi:"match"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesInput` via:
//
//	VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs struct {
	// Criteria for determining a SAN's match.
	Match VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchInput `pulumi:"match"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrInput` via:
//
//	        VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput)
}

// Criteria for determining a SAN's match.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput) Match() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		return v.Match
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput)
}

// Criteria for determining a SAN's match.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput) Match() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNames) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch struct {
	// Values sent must match the specified values exactly.
	Exacts []string `pulumi:"exacts"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchInput` via:
//
//	VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs struct {
	// Values sent must match the specified values exactly.
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput` via:
//
//	        VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

// Values sent must match the specified values exactly.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch) []string {
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput)
}

// Values sent must match the specified values exactly.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatch) []string {
		if v == nil {
			return nil
		}
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust struct {
	// TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
	Acm *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm `pulumi:"acm"`
	// TLS validation context trust for a local file certificate.
	File *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile `pulumi:"file"`
	// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds `pulumi:"sds"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustInput` via:
//
//	VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs struct {
	// TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
	Acm VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrInput `pulumi:"acm"`
	// TLS validation context trust for a local file certificate.
	File VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrInput `pulumi:"file"`
	// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrInput `pulumi:"sds"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrInput` via:
//
//	        VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput)
}

// TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) Acm() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm {
		return v.Acm
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput)
}

// TLS validation context trust for a local file certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) File() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile {
		return v.File
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput)
}

// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput) Sds() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds {
		return v.Sds
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput)
}

// TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput) Acm() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm {
		if v == nil {
			return nil
		}
		return v.Acm
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput)
}

// TLS validation context trust for a local file certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput) File() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput)
}

// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput) Sds() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrust) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm struct {
	// One or more ACM ARNs.
	CertificateAuthorityArns []string `pulumi:"certificateAuthorityArns"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmInput` via:
//
//	VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs struct {
	// One or more ACM ARNs.
	CertificateAuthorityArns pulumi.StringArrayInput `pulumi:"certificateAuthorityArns"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrInput` via:
//
//	        VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput)
}

// One or more ACM ARNs.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm) []string {
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput)
}

// One or more ACM ARNs.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcm) []string {
		if v == nil {
			return nil
		}
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileInput` via:
//
//	VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrInput` via:
//
//	        VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds struct {
	// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsInput` via:
//
//	VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs{...}
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs struct {
	// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput)
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput).ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrInput is an input type that accepts VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs, VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtr and VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrInput` via:
//
//	        VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput
	ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput
}

type virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrType VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs

func VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtr(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrInput {
	return (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrType)(v)
}

func (*virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrType) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds) *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds {
		return &v
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput)
}

// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds) string {
		return v.SecretName
	}).(pulumi.StringOutput)
}

type VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput) ToVirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput) Elem() VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds) VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds
		return ret
	}).(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput)
}

// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecListener struct {
	// Connection pool information for the listener.
	ConnectionPool *VirtualNodeSpecListenerConnectionPool `pulumi:"connectionPool"`
	// Health check information for the listener.
	HealthCheck *VirtualNodeSpecListenerHealthCheck `pulumi:"healthCheck"`
	// Outlier detection information for the listener.
	OutlierDetection *VirtualNodeSpecListenerOutlierDetection `pulumi:"outlierDetection"`
	// Port mapping information for the listener.
	PortMapping VirtualNodeSpecListenerPortMapping `pulumi:"portMapping"`
	// Timeouts for different protocols.
	Timeout *VirtualNodeSpecListenerTimeout `pulumi:"timeout"`
	// Transport Layer Security (TLS) properties for the listener
	Tls *VirtualNodeSpecListenerTls `pulumi:"tls"`
}

// VirtualNodeSpecListenerInput is an input type that accepts VirtualNodeSpecListenerArgs and VirtualNodeSpecListenerOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerInput` via:
//
//	VirtualNodeSpecListenerArgs{...}
type VirtualNodeSpecListenerInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerOutput() VirtualNodeSpecListenerOutput
	ToVirtualNodeSpecListenerOutputWithContext(context.Context) VirtualNodeSpecListenerOutput
}

type VirtualNodeSpecListenerArgs struct {
	// Connection pool information for the listener.
	ConnectionPool VirtualNodeSpecListenerConnectionPoolPtrInput `pulumi:"connectionPool"`
	// Health check information for the listener.
	HealthCheck VirtualNodeSpecListenerHealthCheckPtrInput `pulumi:"healthCheck"`
	// Outlier detection information for the listener.
	OutlierDetection VirtualNodeSpecListenerOutlierDetectionPtrInput `pulumi:"outlierDetection"`
	// Port mapping information for the listener.
	PortMapping VirtualNodeSpecListenerPortMappingInput `pulumi:"portMapping"`
	// Timeouts for different protocols.
	Timeout VirtualNodeSpecListenerTimeoutPtrInput `pulumi:"timeout"`
	// Transport Layer Security (TLS) properties for the listener
	Tls VirtualNodeSpecListenerTlsPtrInput `pulumi:"tls"`
}

func (VirtualNodeSpecListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListener)(nil)).Elem()
}

func (i VirtualNodeSpecListenerArgs) ToVirtualNodeSpecListenerOutput() VirtualNodeSpecListenerOutput {
	return i.ToVirtualNodeSpecListenerOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerArgs) ToVirtualNodeSpecListenerOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutput)
}

// VirtualNodeSpecListenerArrayInput is an input type that accepts VirtualNodeSpecListenerArray and VirtualNodeSpecListenerArrayOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerArrayInput` via:
//
//	VirtualNodeSpecListenerArray{ VirtualNodeSpecListenerArgs{...} }
type VirtualNodeSpecListenerArrayInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerArrayOutput() VirtualNodeSpecListenerArrayOutput
	ToVirtualNodeSpecListenerArrayOutputWithContext(context.Context) VirtualNodeSpecListenerArrayOutput
}

type VirtualNodeSpecListenerArray []VirtualNodeSpecListenerInput

func (VirtualNodeSpecListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeSpecListener)(nil)).Elem()
}

func (i VirtualNodeSpecListenerArray) ToVirtualNodeSpecListenerArrayOutput() VirtualNodeSpecListenerArrayOutput {
	return i.ToVirtualNodeSpecListenerArrayOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerArray) ToVirtualNodeSpecListenerArrayOutputWithContext(ctx context.Context) VirtualNodeSpecListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerArrayOutput)
}

type VirtualNodeSpecListenerOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListener)(nil)).Elem()
}

func (o VirtualNodeSpecListenerOutput) ToVirtualNodeSpecListenerOutput() VirtualNodeSpecListenerOutput {
	return o
}

func (o VirtualNodeSpecListenerOutput) ToVirtualNodeSpecListenerOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutput {
	return o
}

// Connection pool information for the listener.
func (o VirtualNodeSpecListenerOutput) ConnectionPool() VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListener) *VirtualNodeSpecListenerConnectionPool { return v.ConnectionPool }).(VirtualNodeSpecListenerConnectionPoolPtrOutput)
}

// Health check information for the listener.
func (o VirtualNodeSpecListenerOutput) HealthCheck() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListener) *VirtualNodeSpecListenerHealthCheck { return v.HealthCheck }).(VirtualNodeSpecListenerHealthCheckPtrOutput)
}

// Outlier detection information for the listener.
func (o VirtualNodeSpecListenerOutput) OutlierDetection() VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListener) *VirtualNodeSpecListenerOutlierDetection { return v.OutlierDetection }).(VirtualNodeSpecListenerOutlierDetectionPtrOutput)
}

// Port mapping information for the listener.
func (o VirtualNodeSpecListenerOutput) PortMapping() VirtualNodeSpecListenerPortMappingOutput {
	return o.ApplyT(func(v VirtualNodeSpecListener) VirtualNodeSpecListenerPortMapping { return v.PortMapping }).(VirtualNodeSpecListenerPortMappingOutput)
}

// Timeouts for different protocols.
func (o VirtualNodeSpecListenerOutput) Timeout() VirtualNodeSpecListenerTimeoutPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListener) *VirtualNodeSpecListenerTimeout { return v.Timeout }).(VirtualNodeSpecListenerTimeoutPtrOutput)
}

// Transport Layer Security (TLS) properties for the listener
func (o VirtualNodeSpecListenerOutput) Tls() VirtualNodeSpecListenerTlsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListener) *VirtualNodeSpecListenerTls { return v.Tls }).(VirtualNodeSpecListenerTlsPtrOutput)
}

type VirtualNodeSpecListenerArrayOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeSpecListener)(nil)).Elem()
}

func (o VirtualNodeSpecListenerArrayOutput) ToVirtualNodeSpecListenerArrayOutput() VirtualNodeSpecListenerArrayOutput {
	return o
}

func (o VirtualNodeSpecListenerArrayOutput) ToVirtualNodeSpecListenerArrayOutputWithContext(ctx context.Context) VirtualNodeSpecListenerArrayOutput {
	return o
}

func (o VirtualNodeSpecListenerArrayOutput) Index(i pulumi.IntInput) VirtualNodeSpecListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNodeSpecListener {
		return vs[0].([]VirtualNodeSpecListener)[vs[1].(int)]
	}).(VirtualNodeSpecListenerOutput)
}

type VirtualNodeSpecListenerConnectionPool struct {
	// Connection pool information for gRPC listeners.
	Grpc *VirtualNodeSpecListenerConnectionPoolGrpc `pulumi:"grpc"`
	// Connection pool information for HTTP2 listeners.
	Http2s []VirtualNodeSpecListenerConnectionPoolHttp2 `pulumi:"http2s"`
	// Connection pool information for HTTP listeners.
	Https []VirtualNodeSpecListenerConnectionPoolHttp `pulumi:"https"`
	// Connection pool information for TCP listeners.
	Tcps []VirtualNodeSpecListenerConnectionPoolTcp `pulumi:"tcps"`
}

// VirtualNodeSpecListenerConnectionPoolInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolArgs and VirtualNodeSpecListenerConnectionPoolOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolInput` via:
//
//	VirtualNodeSpecListenerConnectionPoolArgs{...}
type VirtualNodeSpecListenerConnectionPoolInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolOutput() VirtualNodeSpecListenerConnectionPoolOutput
	ToVirtualNodeSpecListenerConnectionPoolOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolOutput
}

type VirtualNodeSpecListenerConnectionPoolArgs struct {
	// Connection pool information for gRPC listeners.
	Grpc VirtualNodeSpecListenerConnectionPoolGrpcPtrInput `pulumi:"grpc"`
	// Connection pool information for HTTP2 listeners.
	Http2s VirtualNodeSpecListenerConnectionPoolHttp2ArrayInput `pulumi:"http2s"`
	// Connection pool information for HTTP listeners.
	Https VirtualNodeSpecListenerConnectionPoolHttpArrayInput `pulumi:"https"`
	// Connection pool information for TCP listeners.
	Tcps VirtualNodeSpecListenerConnectionPoolTcpArrayInput `pulumi:"tcps"`
}

func (VirtualNodeSpecListenerConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPool)(nil)).Elem()
}

func (i VirtualNodeSpecListenerConnectionPoolArgs) ToVirtualNodeSpecListenerConnectionPoolOutput() VirtualNodeSpecListenerConnectionPoolOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolArgs) ToVirtualNodeSpecListenerConnectionPoolOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolOutput)
}

func (i VirtualNodeSpecListenerConnectionPoolArgs) ToVirtualNodeSpecListenerConnectionPoolPtrOutput() VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolArgs) ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolOutput).ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerConnectionPoolPtrInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolArgs, VirtualNodeSpecListenerConnectionPoolPtr and VirtualNodeSpecListenerConnectionPoolPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolPtrInput` via:
//
//	        VirtualNodeSpecListenerConnectionPoolArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerConnectionPoolPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolPtrOutput() VirtualNodeSpecListenerConnectionPoolPtrOutput
	ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolPtrOutput
}

type virtualNodeSpecListenerConnectionPoolPtrType VirtualNodeSpecListenerConnectionPoolArgs

func VirtualNodeSpecListenerConnectionPoolPtr(v *VirtualNodeSpecListenerConnectionPoolArgs) VirtualNodeSpecListenerConnectionPoolPtrInput {
	return (*virtualNodeSpecListenerConnectionPoolPtrType)(v)
}

func (*virtualNodeSpecListenerConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerConnectionPool)(nil)).Elem()
}

func (i *virtualNodeSpecListenerConnectionPoolPtrType) ToVirtualNodeSpecListenerConnectionPoolPtrOutput() VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerConnectionPoolPtrType) ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolPtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPool)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolOutput) ToVirtualNodeSpecListenerConnectionPoolOutput() VirtualNodeSpecListenerConnectionPoolOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolOutput) ToVirtualNodeSpecListenerConnectionPoolOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolOutput) ToVirtualNodeSpecListenerConnectionPoolPtrOutput() VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return o.ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerConnectionPoolOutput) ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerConnectionPool) *VirtualNodeSpecListenerConnectionPool {
		return &v
	}).(VirtualNodeSpecListenerConnectionPoolPtrOutput)
}

// Connection pool information for gRPC listeners.
func (o VirtualNodeSpecListenerConnectionPoolOutput) Grpc() VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPool) *VirtualNodeSpecListenerConnectionPoolGrpc {
		return v.Grpc
	}).(VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput)
}

// Connection pool information for HTTP2 listeners.
func (o VirtualNodeSpecListenerConnectionPoolOutput) Http2s() VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPool) []VirtualNodeSpecListenerConnectionPoolHttp2 {
		return v.Http2s
	}).(VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput)
}

// Connection pool information for HTTP listeners.
func (o VirtualNodeSpecListenerConnectionPoolOutput) Https() VirtualNodeSpecListenerConnectionPoolHttpArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPool) []VirtualNodeSpecListenerConnectionPoolHttp {
		return v.Https
	}).(VirtualNodeSpecListenerConnectionPoolHttpArrayOutput)
}

// Connection pool information for TCP listeners.
func (o VirtualNodeSpecListenerConnectionPoolOutput) Tcps() VirtualNodeSpecListenerConnectionPoolTcpArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPool) []VirtualNodeSpecListenerConnectionPoolTcp {
		return v.Tcps
	}).(VirtualNodeSpecListenerConnectionPoolTcpArrayOutput)
}

type VirtualNodeSpecListenerConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerConnectionPool)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolPtrOutput) ToVirtualNodeSpecListenerConnectionPoolPtrOutput() VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolPtrOutput) ToVirtualNodeSpecListenerConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolPtrOutput) Elem() VirtualNodeSpecListenerConnectionPoolOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPool) VirtualNodeSpecListenerConnectionPool {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerConnectionPool
		return ret
	}).(VirtualNodeSpecListenerConnectionPoolOutput)
}

// Connection pool information for gRPC listeners.
func (o VirtualNodeSpecListenerConnectionPoolPtrOutput) Grpc() VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPool) *VirtualNodeSpecListenerConnectionPoolGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput)
}

// Connection pool information for HTTP2 listeners.
func (o VirtualNodeSpecListenerConnectionPoolPtrOutput) Http2s() VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPool) []VirtualNodeSpecListenerConnectionPoolHttp2 {
		if v == nil {
			return nil
		}
		return v.Http2s
	}).(VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput)
}

// Connection pool information for HTTP listeners.
func (o VirtualNodeSpecListenerConnectionPoolPtrOutput) Https() VirtualNodeSpecListenerConnectionPoolHttpArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPool) []VirtualNodeSpecListenerConnectionPoolHttp {
		if v == nil {
			return nil
		}
		return v.Https
	}).(VirtualNodeSpecListenerConnectionPoolHttpArrayOutput)
}

// Connection pool information for TCP listeners.
func (o VirtualNodeSpecListenerConnectionPoolPtrOutput) Tcps() VirtualNodeSpecListenerConnectionPoolTcpArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPool) []VirtualNodeSpecListenerConnectionPoolTcp {
		if v == nil {
			return nil
		}
		return v.Tcps
	}).(VirtualNodeSpecListenerConnectionPoolTcpArrayOutput)
}

type VirtualNodeSpecListenerConnectionPoolGrpc struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests int `pulumi:"maxRequests"`
}

// VirtualNodeSpecListenerConnectionPoolGrpcInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolGrpcArgs and VirtualNodeSpecListenerConnectionPoolGrpcOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolGrpcInput` via:
//
//	VirtualNodeSpecListenerConnectionPoolGrpcArgs{...}
type VirtualNodeSpecListenerConnectionPoolGrpcInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolGrpcOutput() VirtualNodeSpecListenerConnectionPoolGrpcOutput
	ToVirtualNodeSpecListenerConnectionPoolGrpcOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolGrpcOutput
}

type VirtualNodeSpecListenerConnectionPoolGrpcArgs struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (VirtualNodeSpecListenerConnectionPoolGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (i VirtualNodeSpecListenerConnectionPoolGrpcArgs) ToVirtualNodeSpecListenerConnectionPoolGrpcOutput() VirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolGrpcOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolGrpcArgs) ToVirtualNodeSpecListenerConnectionPoolGrpcOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolGrpcOutput)
}

func (i VirtualNodeSpecListenerConnectionPoolGrpcArgs) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutput() VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolGrpcArgs) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolGrpcOutput).ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerConnectionPoolGrpcPtrInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolGrpcArgs, VirtualNodeSpecListenerConnectionPoolGrpcPtr and VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolGrpcPtrInput` via:
//
//	        VirtualNodeSpecListenerConnectionPoolGrpcArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerConnectionPoolGrpcPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutput() VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput
	ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput
}

type virtualNodeSpecListenerConnectionPoolGrpcPtrType VirtualNodeSpecListenerConnectionPoolGrpcArgs

func VirtualNodeSpecListenerConnectionPoolGrpcPtr(v *VirtualNodeSpecListenerConnectionPoolGrpcArgs) VirtualNodeSpecListenerConnectionPoolGrpcPtrInput {
	return (*virtualNodeSpecListenerConnectionPoolGrpcPtrType)(v)
}

func (*virtualNodeSpecListenerConnectionPoolGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (i *virtualNodeSpecListenerConnectionPoolGrpcPtrType) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutput() VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerConnectionPoolGrpcPtrType) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolGrpcOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolGrpcOutput) ToVirtualNodeSpecListenerConnectionPoolGrpcOutput() VirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolGrpcOutput) ToVirtualNodeSpecListenerConnectionPoolGrpcOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolGrpcOutput) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutput() VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return o.ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerConnectionPoolGrpcOutput) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerConnectionPoolGrpc) *VirtualNodeSpecListenerConnectionPoolGrpc {
		return &v
	}).(VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput)
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolGrpcOutput) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPoolGrpc) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutput() VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput) ToVirtualNodeSpecListenerConnectionPoolGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput) Elem() VirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPoolGrpc) VirtualNodeSpecListenerConnectionPoolGrpc {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerConnectionPoolGrpc
		return ret
	}).(VirtualNodeSpecListenerConnectionPoolGrpcOutput)
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput) MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerConnectionPoolGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolHttp2 struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests int `pulumi:"maxRequests"`
}

// VirtualNodeSpecListenerConnectionPoolHttp2Input is an input type that accepts VirtualNodeSpecListenerConnectionPoolHttp2Args and VirtualNodeSpecListenerConnectionPoolHttp2Output values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolHttp2Input` via:
//
//	VirtualNodeSpecListenerConnectionPoolHttp2Args{...}
type VirtualNodeSpecListenerConnectionPoolHttp2Input interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolHttp2Output() VirtualNodeSpecListenerConnectionPoolHttp2Output
	ToVirtualNodeSpecListenerConnectionPoolHttp2OutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolHttp2Output
}

type VirtualNodeSpecListenerConnectionPoolHttp2Args struct {
	// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (VirtualNodeSpecListenerConnectionPoolHttp2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (i VirtualNodeSpecListenerConnectionPoolHttp2Args) ToVirtualNodeSpecListenerConnectionPoolHttp2Output() VirtualNodeSpecListenerConnectionPoolHttp2Output {
	return i.ToVirtualNodeSpecListenerConnectionPoolHttp2OutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolHttp2Args) ToVirtualNodeSpecListenerConnectionPoolHttp2OutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttp2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolHttp2Output)
}

// VirtualNodeSpecListenerConnectionPoolHttp2ArrayInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolHttp2Array and VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolHttp2ArrayInput` via:
//
//	VirtualNodeSpecListenerConnectionPoolHttp2Array{ VirtualNodeSpecListenerConnectionPoolHttp2Args{...} }
type VirtualNodeSpecListenerConnectionPoolHttp2ArrayInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput() VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput
	ToVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput
}

type VirtualNodeSpecListenerConnectionPoolHttp2Array []VirtualNodeSpecListenerConnectionPoolHttp2Input

func (VirtualNodeSpecListenerConnectionPoolHttp2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeSpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (i VirtualNodeSpecListenerConnectionPoolHttp2Array) ToVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput() VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolHttp2Array) ToVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput)
}

type VirtualNodeSpecListenerConnectionPoolHttp2Output struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolHttp2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolHttp2Output) ToVirtualNodeSpecListenerConnectionPoolHttp2Output() VirtualNodeSpecListenerConnectionPoolHttp2Output {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolHttp2Output) ToVirtualNodeSpecListenerConnectionPoolHttp2OutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttp2Output {
	return o
}

// Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolHttp2Output) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPoolHttp2) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeSpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput) ToVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput() VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput) ToVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput) Index(i pulumi.IntInput) VirtualNodeSpecListenerConnectionPoolHttp2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNodeSpecListenerConnectionPoolHttp2 {
		return vs[0].([]VirtualNodeSpecListenerConnectionPoolHttp2)[vs[1].(int)]
	}).(VirtualNodeSpecListenerConnectionPoolHttp2Output)
}

type VirtualNodeSpecListenerConnectionPoolHttp struct {
	// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
	MaxConnections int `pulumi:"maxConnections"`
	// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
	//
	// The `http2` connection pool object supports the following:
	MaxPendingRequests *int `pulumi:"maxPendingRequests"`
}

// VirtualNodeSpecListenerConnectionPoolHttpInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolHttpArgs and VirtualNodeSpecListenerConnectionPoolHttpOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolHttpInput` via:
//
//	VirtualNodeSpecListenerConnectionPoolHttpArgs{...}
type VirtualNodeSpecListenerConnectionPoolHttpInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolHttpOutput() VirtualNodeSpecListenerConnectionPoolHttpOutput
	ToVirtualNodeSpecListenerConnectionPoolHttpOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolHttpOutput
}

type VirtualNodeSpecListenerConnectionPoolHttpArgs struct {
	// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
	//
	// The `http2` connection pool object supports the following:
	MaxPendingRequests pulumi.IntPtrInput `pulumi:"maxPendingRequests"`
}

func (VirtualNodeSpecListenerConnectionPoolHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (i VirtualNodeSpecListenerConnectionPoolHttpArgs) ToVirtualNodeSpecListenerConnectionPoolHttpOutput() VirtualNodeSpecListenerConnectionPoolHttpOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolHttpOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolHttpArgs) ToVirtualNodeSpecListenerConnectionPoolHttpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolHttpOutput)
}

// VirtualNodeSpecListenerConnectionPoolHttpArrayInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolHttpArray and VirtualNodeSpecListenerConnectionPoolHttpArrayOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolHttpArrayInput` via:
//
//	VirtualNodeSpecListenerConnectionPoolHttpArray{ VirtualNodeSpecListenerConnectionPoolHttpArgs{...} }
type VirtualNodeSpecListenerConnectionPoolHttpArrayInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolHttpArrayOutput() VirtualNodeSpecListenerConnectionPoolHttpArrayOutput
	ToVirtualNodeSpecListenerConnectionPoolHttpArrayOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolHttpArrayOutput
}

type VirtualNodeSpecListenerConnectionPoolHttpArray []VirtualNodeSpecListenerConnectionPoolHttpInput

func (VirtualNodeSpecListenerConnectionPoolHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeSpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (i VirtualNodeSpecListenerConnectionPoolHttpArray) ToVirtualNodeSpecListenerConnectionPoolHttpArrayOutput() VirtualNodeSpecListenerConnectionPoolHttpArrayOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolHttpArrayOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolHttpArray) ToVirtualNodeSpecListenerConnectionPoolHttpArrayOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolHttpArrayOutput)
}

type VirtualNodeSpecListenerConnectionPoolHttpOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolHttpOutput) ToVirtualNodeSpecListenerConnectionPoolHttpOutput() VirtualNodeSpecListenerConnectionPoolHttpOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolHttpOutput) ToVirtualNodeSpecListenerConnectionPoolHttpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttpOutput {
	return o
}

// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolHttpOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPoolHttp) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// Number of overflowing requests after `maxConnections` Envoy will queue to upstream cluster. Minimum value of `1`.
//
// The `http2` connection pool object supports the following:
func (o VirtualNodeSpecListenerConnectionPoolHttpOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPoolHttp) *int { return v.MaxPendingRequests }).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerConnectionPoolHttpArrayOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeSpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolHttpArrayOutput) ToVirtualNodeSpecListenerConnectionPoolHttpArrayOutput() VirtualNodeSpecListenerConnectionPoolHttpArrayOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolHttpArrayOutput) ToVirtualNodeSpecListenerConnectionPoolHttpArrayOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolHttpArrayOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolHttpArrayOutput) Index(i pulumi.IntInput) VirtualNodeSpecListenerConnectionPoolHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNodeSpecListenerConnectionPoolHttp {
		return vs[0].([]VirtualNodeSpecListenerConnectionPoolHttp)[vs[1].(int)]
	}).(VirtualNodeSpecListenerConnectionPoolHttpOutput)
}

type VirtualNodeSpecListenerConnectionPoolTcp struct {
	// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
	MaxConnections int `pulumi:"maxConnections"`
}

// VirtualNodeSpecListenerConnectionPoolTcpInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolTcpArgs and VirtualNodeSpecListenerConnectionPoolTcpOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolTcpInput` via:
//
//	VirtualNodeSpecListenerConnectionPoolTcpArgs{...}
type VirtualNodeSpecListenerConnectionPoolTcpInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolTcpOutput() VirtualNodeSpecListenerConnectionPoolTcpOutput
	ToVirtualNodeSpecListenerConnectionPoolTcpOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolTcpOutput
}

type VirtualNodeSpecListenerConnectionPoolTcpArgs struct {
	// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
}

func (VirtualNodeSpecListenerConnectionPoolTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolTcp)(nil)).Elem()
}

func (i VirtualNodeSpecListenerConnectionPoolTcpArgs) ToVirtualNodeSpecListenerConnectionPoolTcpOutput() VirtualNodeSpecListenerConnectionPoolTcpOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolTcpOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolTcpArgs) ToVirtualNodeSpecListenerConnectionPoolTcpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolTcpOutput)
}

// VirtualNodeSpecListenerConnectionPoolTcpArrayInput is an input type that accepts VirtualNodeSpecListenerConnectionPoolTcpArray and VirtualNodeSpecListenerConnectionPoolTcpArrayOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerConnectionPoolTcpArrayInput` via:
//
//	VirtualNodeSpecListenerConnectionPoolTcpArray{ VirtualNodeSpecListenerConnectionPoolTcpArgs{...} }
type VirtualNodeSpecListenerConnectionPoolTcpArrayInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerConnectionPoolTcpArrayOutput() VirtualNodeSpecListenerConnectionPoolTcpArrayOutput
	ToVirtualNodeSpecListenerConnectionPoolTcpArrayOutputWithContext(context.Context) VirtualNodeSpecListenerConnectionPoolTcpArrayOutput
}

type VirtualNodeSpecListenerConnectionPoolTcpArray []VirtualNodeSpecListenerConnectionPoolTcpInput

func (VirtualNodeSpecListenerConnectionPoolTcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeSpecListenerConnectionPoolTcp)(nil)).Elem()
}

func (i VirtualNodeSpecListenerConnectionPoolTcpArray) ToVirtualNodeSpecListenerConnectionPoolTcpArrayOutput() VirtualNodeSpecListenerConnectionPoolTcpArrayOutput {
	return i.ToVirtualNodeSpecListenerConnectionPoolTcpArrayOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerConnectionPoolTcpArray) ToVirtualNodeSpecListenerConnectionPoolTcpArrayOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolTcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerConnectionPoolTcpArrayOutput)
}

type VirtualNodeSpecListenerConnectionPoolTcpOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolTcp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolTcpOutput) ToVirtualNodeSpecListenerConnectionPoolTcpOutput() VirtualNodeSpecListenerConnectionPoolTcpOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolTcpOutput) ToVirtualNodeSpecListenerConnectionPoolTcpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolTcpOutput {
	return o
}

// Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.
func (o VirtualNodeSpecListenerConnectionPoolTcpOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerConnectionPoolTcp) int { return v.MaxConnections }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerConnectionPoolTcpArrayOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerConnectionPoolTcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeSpecListenerConnectionPoolTcp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerConnectionPoolTcpArrayOutput) ToVirtualNodeSpecListenerConnectionPoolTcpArrayOutput() VirtualNodeSpecListenerConnectionPoolTcpArrayOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolTcpArrayOutput) ToVirtualNodeSpecListenerConnectionPoolTcpArrayOutputWithContext(ctx context.Context) VirtualNodeSpecListenerConnectionPoolTcpArrayOutput {
	return o
}

func (o VirtualNodeSpecListenerConnectionPoolTcpArrayOutput) Index(i pulumi.IntInput) VirtualNodeSpecListenerConnectionPoolTcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNodeSpecListenerConnectionPoolTcp {
		return vs[0].([]VirtualNodeSpecListenerConnectionPoolTcp)[vs[1].(int)]
	}).(VirtualNodeSpecListenerConnectionPoolTcpOutput)
}

type VirtualNodeSpecListenerHealthCheck struct {
	// Number of consecutive successful health checks that must occur before declaring listener healthy.
	HealthyThreshold int `pulumi:"healthyThreshold"`
	// Time period in milliseconds between each health check execution.
	IntervalMillis int `pulumi:"intervalMillis"`
	// Destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
	Path *string `pulumi:"path"`
	// Destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
	Port *int `pulumi:"port"`
	// Protocol for the health check request. Valid values are `http`, `http2`, `tcp` and `grpc`.
	Protocol string `pulumi:"protocol"`
	// Amount of time to wait when receiving a response from the health check, in milliseconds.
	TimeoutMillis int `pulumi:"timeoutMillis"`
	// Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
	UnhealthyThreshold int `pulumi:"unhealthyThreshold"`
}

// VirtualNodeSpecListenerHealthCheckInput is an input type that accepts VirtualNodeSpecListenerHealthCheckArgs and VirtualNodeSpecListenerHealthCheckOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerHealthCheckInput` via:
//
//	VirtualNodeSpecListenerHealthCheckArgs{...}
type VirtualNodeSpecListenerHealthCheckInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerHealthCheckOutput() VirtualNodeSpecListenerHealthCheckOutput
	ToVirtualNodeSpecListenerHealthCheckOutputWithContext(context.Context) VirtualNodeSpecListenerHealthCheckOutput
}

type VirtualNodeSpecListenerHealthCheckArgs struct {
	// Number of consecutive successful health checks that must occur before declaring listener healthy.
	HealthyThreshold pulumi.IntInput `pulumi:"healthyThreshold"`
	// Time period in milliseconds between each health check execution.
	IntervalMillis pulumi.IntInput `pulumi:"intervalMillis"`
	// Destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol for the health check request. Valid values are `http`, `http2`, `tcp` and `grpc`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Amount of time to wait when receiving a response from the health check, in milliseconds.
	TimeoutMillis pulumi.IntInput `pulumi:"timeoutMillis"`
	// Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
	UnhealthyThreshold pulumi.IntInput `pulumi:"unhealthyThreshold"`
}

func (VirtualNodeSpecListenerHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (i VirtualNodeSpecListenerHealthCheckArgs) ToVirtualNodeSpecListenerHealthCheckOutput() VirtualNodeSpecListenerHealthCheckOutput {
	return i.ToVirtualNodeSpecListenerHealthCheckOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerHealthCheckArgs) ToVirtualNodeSpecListenerHealthCheckOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerHealthCheckOutput)
}

func (i VirtualNodeSpecListenerHealthCheckArgs) ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return i.ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerHealthCheckArgs) ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerHealthCheckOutput).ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerHealthCheckPtrInput is an input type that accepts VirtualNodeSpecListenerHealthCheckArgs, VirtualNodeSpecListenerHealthCheckPtr and VirtualNodeSpecListenerHealthCheckPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerHealthCheckPtrInput` via:
//
//	        VirtualNodeSpecListenerHealthCheckArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerHealthCheckPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput
	ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput
}

type virtualNodeSpecListenerHealthCheckPtrType VirtualNodeSpecListenerHealthCheckArgs

func VirtualNodeSpecListenerHealthCheckPtr(v *VirtualNodeSpecListenerHealthCheckArgs) VirtualNodeSpecListenerHealthCheckPtrInput {
	return (*virtualNodeSpecListenerHealthCheckPtrType)(v)
}

func (*virtualNodeSpecListenerHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (i *virtualNodeSpecListenerHealthCheckPtrType) ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return i.ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerHealthCheckPtrType) ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerHealthCheckPtrOutput)
}

type VirtualNodeSpecListenerHealthCheckOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (o VirtualNodeSpecListenerHealthCheckOutput) ToVirtualNodeSpecListenerHealthCheckOutput() VirtualNodeSpecListenerHealthCheckOutput {
	return o
}

func (o VirtualNodeSpecListenerHealthCheckOutput) ToVirtualNodeSpecListenerHealthCheckOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckOutput {
	return o
}

func (o VirtualNodeSpecListenerHealthCheckOutput) ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o.ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerHealthCheckOutput) ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerHealthCheck) *VirtualNodeSpecListenerHealthCheck {
		return &v
	}).(VirtualNodeSpecListenerHealthCheckPtrOutput)
}

// Number of consecutive successful health checks that must occur before declaring listener healthy.
func (o VirtualNodeSpecListenerHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

// Time period in milliseconds between each health check execution.
func (o VirtualNodeSpecListenerHealthCheckOutput) IntervalMillis() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) int { return v.IntervalMillis }).(pulumi.IntOutput)
}

// Destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
func (o VirtualNodeSpecListenerHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
func (o VirtualNodeSpecListenerHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol for the health check request. Valid values are `http`, `http2`, `tcp` and `grpc`.
func (o VirtualNodeSpecListenerHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

// Amount of time to wait when receiving a response from the health check, in milliseconds.
func (o VirtualNodeSpecListenerHealthCheckOutput) TimeoutMillis() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) int { return v.TimeoutMillis }).(pulumi.IntOutput)
}

// Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
func (o VirtualNodeSpecListenerHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (o VirtualNodeSpecListenerHealthCheckPtrOutput) ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerHealthCheckPtrOutput) ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerHealthCheckPtrOutput) Elem() VirtualNodeSpecListenerHealthCheckOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) VirtualNodeSpecListenerHealthCheck {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerHealthCheck
		return ret
	}).(VirtualNodeSpecListenerHealthCheckOutput)
}

// Number of consecutive successful health checks that must occur before declaring listener healthy.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// Time period in milliseconds between each health check execution.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) IntervalMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.IntervalMillis
	}).(pulumi.IntPtrOutput)
}

// Destination path for the health check request. This is only required if the specified protocol is `http` or `http2`.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Protocol for the health check request. Valid values are `http`, `http2`, `tcp` and `grpc`.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Amount of time to wait when receiving a response from the health check, in milliseconds.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) TimeoutMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutMillis
	}).(pulumi.IntPtrOutput)
}

// Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerOutlierDetection struct {
	// Base amount of time for which a host is ejected.
	BaseEjectionDuration VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration `pulumi:"baseEjectionDuration"`
	// Time interval between ejection sweep analysis.
	Interval VirtualNodeSpecListenerOutlierDetectionInterval `pulumi:"interval"`
	// Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
	// Minimum value of `0`. Maximum value of `100`.
	MaxEjectionPercent int `pulumi:"maxEjectionPercent"`
	// Number of consecutive `5xx` errors required for ejection. Minimum value of `1`.
	MaxServerErrors int `pulumi:"maxServerErrors"`
}

// VirtualNodeSpecListenerOutlierDetectionInput is an input type that accepts VirtualNodeSpecListenerOutlierDetectionArgs and VirtualNodeSpecListenerOutlierDetectionOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerOutlierDetectionInput` via:
//
//	VirtualNodeSpecListenerOutlierDetectionArgs{...}
type VirtualNodeSpecListenerOutlierDetectionInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerOutlierDetectionOutput() VirtualNodeSpecListenerOutlierDetectionOutput
	ToVirtualNodeSpecListenerOutlierDetectionOutputWithContext(context.Context) VirtualNodeSpecListenerOutlierDetectionOutput
}

type VirtualNodeSpecListenerOutlierDetectionArgs struct {
	// Base amount of time for which a host is ejected.
	BaseEjectionDuration VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput `pulumi:"baseEjectionDuration"`
	// Time interval between ejection sweep analysis.
	Interval VirtualNodeSpecListenerOutlierDetectionIntervalInput `pulumi:"interval"`
	// Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
	// Minimum value of `0`. Maximum value of `100`.
	MaxEjectionPercent pulumi.IntInput `pulumi:"maxEjectionPercent"`
	// Number of consecutive `5xx` errors required for ejection. Minimum value of `1`.
	MaxServerErrors pulumi.IntInput `pulumi:"maxServerErrors"`
}

func (VirtualNodeSpecListenerOutlierDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetection)(nil)).Elem()
}

func (i VirtualNodeSpecListenerOutlierDetectionArgs) ToVirtualNodeSpecListenerOutlierDetectionOutput() VirtualNodeSpecListenerOutlierDetectionOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerOutlierDetectionArgs) ToVirtualNodeSpecListenerOutlierDetectionOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionOutput)
}

func (i VirtualNodeSpecListenerOutlierDetectionArgs) ToVirtualNodeSpecListenerOutlierDetectionPtrOutput() VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerOutlierDetectionArgs) ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionOutput).ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerOutlierDetectionPtrInput is an input type that accepts VirtualNodeSpecListenerOutlierDetectionArgs, VirtualNodeSpecListenerOutlierDetectionPtr and VirtualNodeSpecListenerOutlierDetectionPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerOutlierDetectionPtrInput` via:
//
//	        VirtualNodeSpecListenerOutlierDetectionArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerOutlierDetectionPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerOutlierDetectionPtrOutput() VirtualNodeSpecListenerOutlierDetectionPtrOutput
	ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(context.Context) VirtualNodeSpecListenerOutlierDetectionPtrOutput
}

type virtualNodeSpecListenerOutlierDetectionPtrType VirtualNodeSpecListenerOutlierDetectionArgs

func VirtualNodeSpecListenerOutlierDetectionPtr(v *VirtualNodeSpecListenerOutlierDetectionArgs) VirtualNodeSpecListenerOutlierDetectionPtrInput {
	return (*virtualNodeSpecListenerOutlierDetectionPtrType)(v)
}

func (*virtualNodeSpecListenerOutlierDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerOutlierDetection)(nil)).Elem()
}

func (i *virtualNodeSpecListenerOutlierDetectionPtrType) ToVirtualNodeSpecListenerOutlierDetectionPtrOutput() VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerOutlierDetectionPtrType) ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionPtrOutput)
}

type VirtualNodeSpecListenerOutlierDetectionOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerOutlierDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetection)(nil)).Elem()
}

func (o VirtualNodeSpecListenerOutlierDetectionOutput) ToVirtualNodeSpecListenerOutlierDetectionOutput() VirtualNodeSpecListenerOutlierDetectionOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionOutput) ToVirtualNodeSpecListenerOutlierDetectionOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionOutput) ToVirtualNodeSpecListenerOutlierDetectionPtrOutput() VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return o.ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerOutlierDetectionOutput) ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerOutlierDetection) *VirtualNodeSpecListenerOutlierDetection {
		return &v
	}).(VirtualNodeSpecListenerOutlierDetectionPtrOutput)
}

// Base amount of time for which a host is ejected.
func (o VirtualNodeSpecListenerOutlierDetectionOutput) BaseEjectionDuration() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetection) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration {
		return v.BaseEjectionDuration
	}).(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput)
}

// Time interval between ejection sweep analysis.
func (o VirtualNodeSpecListenerOutlierDetectionOutput) Interval() VirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetection) VirtualNodeSpecListenerOutlierDetectionInterval {
		return v.Interval
	}).(VirtualNodeSpecListenerOutlierDetectionIntervalOutput)
}

// Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
// Minimum value of `0`. Maximum value of `100`.
func (o VirtualNodeSpecListenerOutlierDetectionOutput) MaxEjectionPercent() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetection) int { return v.MaxEjectionPercent }).(pulumi.IntOutput)
}

// Number of consecutive `5xx` errors required for ejection. Minimum value of `1`.
func (o VirtualNodeSpecListenerOutlierDetectionOutput) MaxServerErrors() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetection) int { return v.MaxServerErrors }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerOutlierDetectionPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerOutlierDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerOutlierDetection)(nil)).Elem()
}

func (o VirtualNodeSpecListenerOutlierDetectionPtrOutput) ToVirtualNodeSpecListenerOutlierDetectionPtrOutput() VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionPtrOutput) ToVirtualNodeSpecListenerOutlierDetectionPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionPtrOutput) Elem() VirtualNodeSpecListenerOutlierDetectionOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetection) VirtualNodeSpecListenerOutlierDetection {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerOutlierDetection
		return ret
	}).(VirtualNodeSpecListenerOutlierDetectionOutput)
}

// Base amount of time for which a host is ejected.
func (o VirtualNodeSpecListenerOutlierDetectionPtrOutput) BaseEjectionDuration() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetection) *VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration {
		if v == nil {
			return nil
		}
		return &v.BaseEjectionDuration
	}).(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput)
}

// Time interval between ejection sweep analysis.
func (o VirtualNodeSpecListenerOutlierDetectionPtrOutput) Interval() VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetection) *VirtualNodeSpecListenerOutlierDetectionInterval {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput)
}

// Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
// Minimum value of `0`. Maximum value of `100`.
func (o VirtualNodeSpecListenerOutlierDetectionPtrOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return &v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Number of consecutive `5xx` errors required for ejection. Minimum value of `1`.
func (o VirtualNodeSpecListenerOutlierDetectionPtrOutput) MaxServerErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return &v.MaxServerErrors
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput is an input type that accepts VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs and VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput` via:
//
//	VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs{...}
type VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput
	ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutputWithContext(context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput
}

type VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration)(nil)).Elem()
}

func (i VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput)
}

func (i VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput).ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrInput is an input type that accepts VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs, VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtr and VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrInput` via:
//
//	        VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput
	ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput
}

type virtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrType VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs

func VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtr(v *VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrInput {
	return (*virtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrType)(v)
}

func (*virtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration)(nil)).Elem()
}

func (i *virtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrType) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrType) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput)
}

type VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration)(nil)).Elem()
}

func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return o.ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration) *VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration {
		return &v
	}).(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration)(nil)).Elem()
}

func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput) ToVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput) Elem() VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration) VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration
		return ret
	}).(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerOutlierDetectionInterval struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The specified value for the JSON. Must be between 1 and 100 characters in length.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerOutlierDetectionIntervalInput is an input type that accepts VirtualNodeSpecListenerOutlierDetectionIntervalArgs and VirtualNodeSpecListenerOutlierDetectionIntervalOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerOutlierDetectionIntervalInput` via:
//
//	VirtualNodeSpecListenerOutlierDetectionIntervalArgs{...}
type VirtualNodeSpecListenerOutlierDetectionIntervalInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerOutlierDetectionIntervalOutput() VirtualNodeSpecListenerOutlierDetectionIntervalOutput
	ToVirtualNodeSpecListenerOutlierDetectionIntervalOutputWithContext(context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalOutput
}

type VirtualNodeSpecListenerOutlierDetectionIntervalArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The specified value for the JSON. Must be between 1 and 100 characters in length.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerOutlierDetectionIntervalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionInterval)(nil)).Elem()
}

func (i VirtualNodeSpecListenerOutlierDetectionIntervalArgs) ToVirtualNodeSpecListenerOutlierDetectionIntervalOutput() VirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionIntervalOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerOutlierDetectionIntervalArgs) ToVirtualNodeSpecListenerOutlierDetectionIntervalOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionIntervalOutput)
}

func (i VirtualNodeSpecListenerOutlierDetectionIntervalArgs) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput() VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerOutlierDetectionIntervalArgs) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionIntervalOutput).ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerOutlierDetectionIntervalPtrInput is an input type that accepts VirtualNodeSpecListenerOutlierDetectionIntervalArgs, VirtualNodeSpecListenerOutlierDetectionIntervalPtr and VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerOutlierDetectionIntervalPtrInput` via:
//
//	        VirtualNodeSpecListenerOutlierDetectionIntervalArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerOutlierDetectionIntervalPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput() VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput
	ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput
}

type virtualNodeSpecListenerOutlierDetectionIntervalPtrType VirtualNodeSpecListenerOutlierDetectionIntervalArgs

func VirtualNodeSpecListenerOutlierDetectionIntervalPtr(v *VirtualNodeSpecListenerOutlierDetectionIntervalArgs) VirtualNodeSpecListenerOutlierDetectionIntervalPtrInput {
	return (*virtualNodeSpecListenerOutlierDetectionIntervalPtrType)(v)
}

func (*virtualNodeSpecListenerOutlierDetectionIntervalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerOutlierDetectionInterval)(nil)).Elem()
}

func (i *virtualNodeSpecListenerOutlierDetectionIntervalPtrType) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput() VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return i.ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerOutlierDetectionIntervalPtrType) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput)
}

type VirtualNodeSpecListenerOutlierDetectionIntervalOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerOutlierDetectionIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionInterval)(nil)).Elem()
}

func (o VirtualNodeSpecListenerOutlierDetectionIntervalOutput) ToVirtualNodeSpecListenerOutlierDetectionIntervalOutput() VirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionIntervalOutput) ToVirtualNodeSpecListenerOutlierDetectionIntervalOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionIntervalOutput) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput() VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return o.ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerOutlierDetectionIntervalOutput) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerOutlierDetectionInterval) *VirtualNodeSpecListenerOutlierDetectionInterval {
		return &v
	}).(VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerOutlierDetectionIntervalOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetectionInterval) string { return v.Unit }).(pulumi.StringOutput)
}

// The specified value for the JSON. Must be between 1 and 100 characters in length.
func (o VirtualNodeSpecListenerOutlierDetectionIntervalOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerOutlierDetectionInterval) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerOutlierDetectionInterval)(nil)).Elem()
}

func (o VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput() VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput) ToVirtualNodeSpecListenerOutlierDetectionIntervalPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput) Elem() VirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetectionInterval) VirtualNodeSpecListenerOutlierDetectionInterval {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerOutlierDetectionInterval
		return ret
	}).(VirtualNodeSpecListenerOutlierDetectionIntervalOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetectionInterval) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The specified value for the JSON. Must be between 1 and 100 characters in length.
func (o VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerOutlierDetectionInterval) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerPortMapping struct {
	// Port used for the port mapping.
	Port int `pulumi:"port"`
	// Protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
	Protocol string `pulumi:"protocol"`
}

// VirtualNodeSpecListenerPortMappingInput is an input type that accepts VirtualNodeSpecListenerPortMappingArgs and VirtualNodeSpecListenerPortMappingOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerPortMappingInput` via:
//
//	VirtualNodeSpecListenerPortMappingArgs{...}
type VirtualNodeSpecListenerPortMappingInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerPortMappingOutput() VirtualNodeSpecListenerPortMappingOutput
	ToVirtualNodeSpecListenerPortMappingOutputWithContext(context.Context) VirtualNodeSpecListenerPortMappingOutput
}

type VirtualNodeSpecListenerPortMappingArgs struct {
	// Port used for the port mapping.
	Port pulumi.IntInput `pulumi:"port"`
	// Protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (VirtualNodeSpecListenerPortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerPortMapping)(nil)).Elem()
}

func (i VirtualNodeSpecListenerPortMappingArgs) ToVirtualNodeSpecListenerPortMappingOutput() VirtualNodeSpecListenerPortMappingOutput {
	return i.ToVirtualNodeSpecListenerPortMappingOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerPortMappingArgs) ToVirtualNodeSpecListenerPortMappingOutputWithContext(ctx context.Context) VirtualNodeSpecListenerPortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerPortMappingOutput)
}

type VirtualNodeSpecListenerPortMappingOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerPortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerPortMapping)(nil)).Elem()
}

func (o VirtualNodeSpecListenerPortMappingOutput) ToVirtualNodeSpecListenerPortMappingOutput() VirtualNodeSpecListenerPortMappingOutput {
	return o
}

func (o VirtualNodeSpecListenerPortMappingOutput) ToVirtualNodeSpecListenerPortMappingOutputWithContext(ctx context.Context) VirtualNodeSpecListenerPortMappingOutput {
	return o
}

// Port used for the port mapping.
func (o VirtualNodeSpecListenerPortMappingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerPortMapping) int { return v.Port }).(pulumi.IntOutput)
}

// Protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
func (o VirtualNodeSpecListenerPortMappingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerPortMapping) string { return v.Protocol }).(pulumi.StringOutput)
}

type VirtualNodeSpecListenerTimeout struct {
	// Timeouts for gRPC listeners.
	Grpc *VirtualNodeSpecListenerTimeoutGrpc `pulumi:"grpc"`
	// Timeouts for HTTP listeners.
	Http *VirtualNodeSpecListenerTimeoutHttp `pulumi:"http"`
	// Timeouts for HTTP2 listeners.
	Http2 *VirtualNodeSpecListenerTimeoutHttp2 `pulumi:"http2"`
	// Timeouts for TCP listeners.
	Tcp *VirtualNodeSpecListenerTimeoutTcp `pulumi:"tcp"`
}

// VirtualNodeSpecListenerTimeoutInput is an input type that accepts VirtualNodeSpecListenerTimeoutArgs and VirtualNodeSpecListenerTimeoutOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutInput` via:
//
//	VirtualNodeSpecListenerTimeoutArgs{...}
type VirtualNodeSpecListenerTimeoutInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutOutput() VirtualNodeSpecListenerTimeoutOutput
	ToVirtualNodeSpecListenerTimeoutOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutOutput
}

type VirtualNodeSpecListenerTimeoutArgs struct {
	// Timeouts for gRPC listeners.
	Grpc VirtualNodeSpecListenerTimeoutGrpcPtrInput `pulumi:"grpc"`
	// Timeouts for HTTP listeners.
	Http VirtualNodeSpecListenerTimeoutHttpPtrInput `pulumi:"http"`
	// Timeouts for HTTP2 listeners.
	Http2 VirtualNodeSpecListenerTimeoutHttp2PtrInput `pulumi:"http2"`
	// Timeouts for TCP listeners.
	Tcp VirtualNodeSpecListenerTimeoutTcpPtrInput `pulumi:"tcp"`
}

func (VirtualNodeSpecListenerTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeout)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutArgs) ToVirtualNodeSpecListenerTimeoutOutput() VirtualNodeSpecListenerTimeoutOutput {
	return i.ToVirtualNodeSpecListenerTimeoutOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutArgs) ToVirtualNodeSpecListenerTimeoutOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutOutput)
}

func (i VirtualNodeSpecListenerTimeoutArgs) ToVirtualNodeSpecListenerTimeoutPtrOutput() VirtualNodeSpecListenerTimeoutPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutArgs) ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutOutput).ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutPtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutArgs, VirtualNodeSpecListenerTimeoutPtr and VirtualNodeSpecListenerTimeoutPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutPtrInput` via:
//
//	        VirtualNodeSpecListenerTimeoutArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTimeoutPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutPtrOutput() VirtualNodeSpecListenerTimeoutPtrOutput
	ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutPtrOutput
}

type virtualNodeSpecListenerTimeoutPtrType VirtualNodeSpecListenerTimeoutArgs

func VirtualNodeSpecListenerTimeoutPtr(v *VirtualNodeSpecListenerTimeoutArgs) VirtualNodeSpecListenerTimeoutPtrInput {
	return (*virtualNodeSpecListenerTimeoutPtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeout)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutPtrType) ToVirtualNodeSpecListenerTimeoutPtrOutput() VirtualNodeSpecListenerTimeoutPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutPtrType) ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutPtrOutput)
}

type VirtualNodeSpecListenerTimeoutOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeout)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutOutput) ToVirtualNodeSpecListenerTimeoutOutput() VirtualNodeSpecListenerTimeoutOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutOutput) ToVirtualNodeSpecListenerTimeoutOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutOutput) ToVirtualNodeSpecListenerTimeoutPtrOutput() VirtualNodeSpecListenerTimeoutPtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutOutput) ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeout {
		return &v
	}).(VirtualNodeSpecListenerTimeoutPtrOutput)
}

// Timeouts for gRPC listeners.
func (o VirtualNodeSpecListenerTimeoutOutput) Grpc() VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutGrpc { return v.Grpc }).(VirtualNodeSpecListenerTimeoutGrpcPtrOutput)
}

// Timeouts for HTTP listeners.
func (o VirtualNodeSpecListenerTimeoutOutput) Http() VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutHttp { return v.Http }).(VirtualNodeSpecListenerTimeoutHttpPtrOutput)
}

// Timeouts for HTTP2 listeners.
func (o VirtualNodeSpecListenerTimeoutOutput) Http2() VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutHttp2 { return v.Http2 }).(VirtualNodeSpecListenerTimeoutHttp2PtrOutput)
}

// Timeouts for TCP listeners.
func (o VirtualNodeSpecListenerTimeoutOutput) Tcp() VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutTcp { return v.Tcp }).(VirtualNodeSpecListenerTimeoutTcpPtrOutput)
}

type VirtualNodeSpecListenerTimeoutPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeout)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutPtrOutput) ToVirtualNodeSpecListenerTimeoutPtrOutput() VirtualNodeSpecListenerTimeoutPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutPtrOutput) ToVirtualNodeSpecListenerTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutPtrOutput) Elem() VirtualNodeSpecListenerTimeoutOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeout) VirtualNodeSpecListenerTimeout {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeout
		return ret
	}).(VirtualNodeSpecListenerTimeoutOutput)
}

// Timeouts for gRPC listeners.
func (o VirtualNodeSpecListenerTimeoutPtrOutput) Grpc() VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(VirtualNodeSpecListenerTimeoutGrpcPtrOutput)
}

// Timeouts for HTTP listeners.
func (o VirtualNodeSpecListenerTimeoutPtrOutput) Http() VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(VirtualNodeSpecListenerTimeoutHttpPtrOutput)
}

// Timeouts for HTTP2 listeners.
func (o VirtualNodeSpecListenerTimeoutPtrOutput) Http2() VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutHttp2 {
		if v == nil {
			return nil
		}
		return v.Http2
	}).(VirtualNodeSpecListenerTimeoutHttp2PtrOutput)
}

// Timeouts for TCP listeners.
func (o VirtualNodeSpecListenerTimeoutPtrOutput) Tcp() VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeout) *VirtualNodeSpecListenerTimeoutTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(VirtualNodeSpecListenerTimeoutTcpPtrOutput)
}

type VirtualNodeSpecListenerTimeoutGrpc struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *VirtualNodeSpecListenerTimeoutGrpcIdle `pulumi:"idle"`
	// Per request timeout.
	PerRequest *VirtualNodeSpecListenerTimeoutGrpcPerRequest `pulumi:"perRequest"`
}

// VirtualNodeSpecListenerTimeoutGrpcInput is an input type that accepts VirtualNodeSpecListenerTimeoutGrpcArgs and VirtualNodeSpecListenerTimeoutGrpcOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutGrpcInput` via:
//
//	VirtualNodeSpecListenerTimeoutGrpcArgs{...}
type VirtualNodeSpecListenerTimeoutGrpcInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutGrpcOutput() VirtualNodeSpecListenerTimeoutGrpcOutput
	ToVirtualNodeSpecListenerTimeoutGrpcOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutGrpcOutput
}

type VirtualNodeSpecListenerTimeoutGrpcArgs struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle VirtualNodeSpecListenerTimeoutGrpcIdlePtrInput `pulumi:"idle"`
	// Per request timeout.
	PerRequest VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrInput `pulumi:"perRequest"`
}

func (VirtualNodeSpecListenerTimeoutGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpc)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutGrpcArgs) ToVirtualNodeSpecListenerTimeoutGrpcOutput() VirtualNodeSpecListenerTimeoutGrpcOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutGrpcArgs) ToVirtualNodeSpecListenerTimeoutGrpcOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcOutput)
}

func (i VirtualNodeSpecListenerTimeoutGrpcArgs) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutGrpcArgs) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcOutput).ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutGrpcPtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutGrpcArgs, VirtualNodeSpecListenerTimeoutGrpcPtr and VirtualNodeSpecListenerTimeoutGrpcPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutGrpcPtrInput` via:
//
//	        VirtualNodeSpecListenerTimeoutGrpcArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTimeoutGrpcPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutGrpcPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPtrOutput
	ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutGrpcPtrOutput
}

type virtualNodeSpecListenerTimeoutGrpcPtrType VirtualNodeSpecListenerTimeoutGrpcArgs

func VirtualNodeSpecListenerTimeoutGrpcPtr(v *VirtualNodeSpecListenerTimeoutGrpcArgs) VirtualNodeSpecListenerTimeoutGrpcPtrInput {
	return (*virtualNodeSpecListenerTimeoutGrpcPtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutGrpc)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutGrpcPtrType) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutGrpcPtrType) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcPtrOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpc)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutGrpcOutput) ToVirtualNodeSpecListenerTimeoutGrpcOutput() VirtualNodeSpecListenerTimeoutGrpcOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcOutput) ToVirtualNodeSpecListenerTimeoutGrpcOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcOutput) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutGrpcOutput) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutGrpc) *VirtualNodeSpecListenerTimeoutGrpc {
		return &v
	}).(VirtualNodeSpecListenerTimeoutGrpcPtrOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutGrpcOutput) Idle() VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutGrpc) *VirtualNodeSpecListenerTimeoutGrpcIdle { return v.Idle }).(VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput)
}

// Per request timeout.
func (o VirtualNodeSpecListenerTimeoutGrpcOutput) PerRequest() VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutGrpc) *VirtualNodeSpecListenerTimeoutGrpcPerRequest {
		return v.PerRequest
	}).(VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutGrpc)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutGrpcPtrOutput) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcPtrOutput) ToVirtualNodeSpecListenerTimeoutGrpcPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcPtrOutput) Elem() VirtualNodeSpecListenerTimeoutGrpcOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpc) VirtualNodeSpecListenerTimeoutGrpc {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutGrpc
		return ret
	}).(VirtualNodeSpecListenerTimeoutGrpcOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutGrpcPtrOutput) Idle() VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpc) *VirtualNodeSpecListenerTimeoutGrpcIdle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput)
}

// Per request timeout.
func (o VirtualNodeSpecListenerTimeoutGrpcPtrOutput) PerRequest() VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpc) *VirtualNodeSpecListenerTimeoutGrpcPerRequest {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcIdle struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerTimeoutGrpcIdleInput is an input type that accepts VirtualNodeSpecListenerTimeoutGrpcIdleArgs and VirtualNodeSpecListenerTimeoutGrpcIdleOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutGrpcIdleInput` via:
//
//	VirtualNodeSpecListenerTimeoutGrpcIdleArgs{...}
type VirtualNodeSpecListenerTimeoutGrpcIdleInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutGrpcIdleOutput() VirtualNodeSpecListenerTimeoutGrpcIdleOutput
	ToVirtualNodeSpecListenerTimeoutGrpcIdleOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutGrpcIdleOutput
}

type VirtualNodeSpecListenerTimeoutGrpcIdleArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerTimeoutGrpcIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcIdle)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutGrpcIdleArgs) ToVirtualNodeSpecListenerTimeoutGrpcIdleOutput() VirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcIdleOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutGrpcIdleArgs) ToVirtualNodeSpecListenerTimeoutGrpcIdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcIdleOutput)
}

func (i VirtualNodeSpecListenerTimeoutGrpcIdleArgs) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput() VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutGrpcIdleArgs) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcIdleOutput).ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutGrpcIdlePtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutGrpcIdleArgs, VirtualNodeSpecListenerTimeoutGrpcIdlePtr and VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutGrpcIdlePtrInput` via:
//
//	        VirtualNodeSpecListenerTimeoutGrpcIdleArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTimeoutGrpcIdlePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput() VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput
	ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput
}

type virtualNodeSpecListenerTimeoutGrpcIdlePtrType VirtualNodeSpecListenerTimeoutGrpcIdleArgs

func VirtualNodeSpecListenerTimeoutGrpcIdlePtr(v *VirtualNodeSpecListenerTimeoutGrpcIdleArgs) VirtualNodeSpecListenerTimeoutGrpcIdlePtrInput {
	return (*virtualNodeSpecListenerTimeoutGrpcIdlePtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutGrpcIdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutGrpcIdle)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutGrpcIdlePtrType) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput() VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutGrpcIdlePtrType) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcIdleOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutGrpcIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcIdle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutGrpcIdleOutput) ToVirtualNodeSpecListenerTimeoutGrpcIdleOutput() VirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcIdleOutput) ToVirtualNodeSpecListenerTimeoutGrpcIdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcIdleOutput) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput() VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutGrpcIdleOutput) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutGrpcIdle) *VirtualNodeSpecListenerTimeoutGrpcIdle {
		return &v
	}).(VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutGrpcIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutGrpcIdle) string { return v.Unit }).(pulumi.StringOutput)
}

// Number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutGrpcIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutGrpcIdle) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutGrpcIdle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput() VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput) ToVirtualNodeSpecListenerTimeoutGrpcIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput) Elem() VirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpcIdle) VirtualNodeSpecListenerTimeoutGrpcIdle {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutGrpcIdle
		return ret
	}).(VirtualNodeSpecListenerTimeoutGrpcIdleOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpcIdle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpcIdle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcPerRequest struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The specified value for the JSON. Must be between 1 and 100 characters in length.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerTimeoutGrpcPerRequestInput is an input type that accepts VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs and VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutGrpcPerRequestInput` via:
//
//	VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs{...}
type VirtualNodeSpecListenerTimeoutGrpcPerRequestInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput
	ToVirtualNodeSpecListenerTimeoutGrpcPerRequestOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput
}

type VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The specified value for the JSON. Must be between 1 and 100 characters in length.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcPerRequest)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcPerRequestOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput)
}

func (i VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput).ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs, VirtualNodeSpecListenerTimeoutGrpcPerRequestPtr and VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrInput` via:
//
//	        VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput
	ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput
}

type virtualNodeSpecListenerTimeoutGrpcPerRequestPtrType VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs

func VirtualNodeSpecListenerTimeoutGrpcPerRequestPtr(v *VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrInput {
	return (*virtualNodeSpecListenerTimeoutGrpcPerRequestPtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutGrpcPerRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutGrpcPerRequest)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutGrpcPerRequestPtrType) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutGrpcPerRequestPtrType) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcPerRequest)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutGrpcPerRequest) *VirtualNodeSpecListenerTimeoutGrpcPerRequest {
		return &v
	}).(VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutGrpcPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

// The specified value for the JSON. Must be between 1 and 100 characters in length.
func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutGrpcPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutGrpcPerRequest)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput) ToVirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput) Elem() VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpcPerRequest) VirtualNodeSpecListenerTimeoutGrpcPerRequest {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutGrpcPerRequest
		return ret
	}).(VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpcPerRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The specified value for the JSON. Must be between 1 and 100 characters in length.
func (o VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutGrpcPerRequest) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2 struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *VirtualNodeSpecListenerTimeoutHttp2Idle `pulumi:"idle"`
	// Per request timeout.
	PerRequest *VirtualNodeSpecListenerTimeoutHttp2PerRequest `pulumi:"perRequest"`
}

// VirtualNodeSpecListenerTimeoutHttp2Input is an input type that accepts VirtualNodeSpecListenerTimeoutHttp2Args and VirtualNodeSpecListenerTimeoutHttp2Output values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttp2Input` via:
//
//	VirtualNodeSpecListenerTimeoutHttp2Args{...}
type VirtualNodeSpecListenerTimeoutHttp2Input interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttp2Output() VirtualNodeSpecListenerTimeoutHttp2Output
	ToVirtualNodeSpecListenerTimeoutHttp2OutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttp2Output
}

type VirtualNodeSpecListenerTimeoutHttp2Args struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle VirtualNodeSpecListenerTimeoutHttp2IdlePtrInput `pulumi:"idle"`
	// Per request timeout.
	PerRequest VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrInput `pulumi:"perRequest"`
}

func (VirtualNodeSpecListenerTimeoutHttp2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutHttp2Args) ToVirtualNodeSpecListenerTimeoutHttp2Output() VirtualNodeSpecListenerTimeoutHttp2Output {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2OutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttp2Args) ToVirtualNodeSpecListenerTimeoutHttp2OutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2Output)
}

func (i VirtualNodeSpecListenerTimeoutHttp2Args) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutput() VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttp2Args) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2Output).ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutHttp2PtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttp2Args, VirtualNodeSpecListenerTimeoutHttp2Ptr and VirtualNodeSpecListenerTimeoutHttp2PtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttp2PtrInput` via:
//
//	        VirtualNodeSpecListenerTimeoutHttp2Args{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTimeoutHttp2PtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttp2PtrOutput() VirtualNodeSpecListenerTimeoutHttp2PtrOutput
	ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttp2PtrOutput
}

type virtualNodeSpecListenerTimeoutHttp2PtrType VirtualNodeSpecListenerTimeoutHttp2Args

func VirtualNodeSpecListenerTimeoutHttp2Ptr(v *VirtualNodeSpecListenerTimeoutHttp2Args) VirtualNodeSpecListenerTimeoutHttp2PtrInput {
	return (*virtualNodeSpecListenerTimeoutHttp2PtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutHttp2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp2)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutHttp2PtrType) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutput() VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutHttp2PtrType) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2PtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2Output struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttp2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttp2Output) ToVirtualNodeSpecListenerTimeoutHttp2Output() VirtualNodeSpecListenerTimeoutHttp2Output {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2Output) ToVirtualNodeSpecListenerTimeoutHttp2OutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2Output {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2Output) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutput() VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutHttp2Output) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutHttp2) *VirtualNodeSpecListenerTimeoutHttp2 {
		return &v
	}).(VirtualNodeSpecListenerTimeoutHttp2PtrOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutHttp2Output) Idle() VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp2) *VirtualNodeSpecListenerTimeoutHttp2Idle { return v.Idle }).(VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput)
}

// Per request timeout.
func (o VirtualNodeSpecListenerTimeoutHttp2Output) PerRequest() VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp2) *VirtualNodeSpecListenerTimeoutHttp2PerRequest {
		return v.PerRequest
	}).(VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2PtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttp2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp2)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttp2PtrOutput) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutput() VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2PtrOutput) ToVirtualNodeSpecListenerTimeoutHttp2PtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2PtrOutput) Elem() VirtualNodeSpecListenerTimeoutHttp2Output {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2) VirtualNodeSpecListenerTimeoutHttp2 {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutHttp2
		return ret
	}).(VirtualNodeSpecListenerTimeoutHttp2Output)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutHttp2PtrOutput) Idle() VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2) *VirtualNodeSpecListenerTimeoutHttp2Idle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput)
}

// Per request timeout.
func (o VirtualNodeSpecListenerTimeoutHttp2PtrOutput) PerRequest() VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2) *VirtualNodeSpecListenerTimeoutHttp2PerRequest {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2Idle struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerTimeoutHttp2IdleInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttp2IdleArgs and VirtualNodeSpecListenerTimeoutHttp2IdleOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttp2IdleInput` via:
//
//	VirtualNodeSpecListenerTimeoutHttp2IdleArgs{...}
type VirtualNodeSpecListenerTimeoutHttp2IdleInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttp2IdleOutput() VirtualNodeSpecListenerTimeoutHttp2IdleOutput
	ToVirtualNodeSpecListenerTimeoutHttp2IdleOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttp2IdleOutput
}

type VirtualNodeSpecListenerTimeoutHttp2IdleArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerTimeoutHttp2IdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2Idle)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutHttp2IdleArgs) ToVirtualNodeSpecListenerTimeoutHttp2IdleOutput() VirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2IdleOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttp2IdleArgs) ToVirtualNodeSpecListenerTimeoutHttp2IdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2IdleOutput)
}

func (i VirtualNodeSpecListenerTimeoutHttp2IdleArgs) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput() VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttp2IdleArgs) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2IdleOutput).ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutHttp2IdlePtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttp2IdleArgs, VirtualNodeSpecListenerTimeoutHttp2IdlePtr and VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttp2IdlePtrInput` via:
//
//	        VirtualNodeSpecListenerTimeoutHttp2IdleArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTimeoutHttp2IdlePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput() VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput
	ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput
}

type virtualNodeSpecListenerTimeoutHttp2IdlePtrType VirtualNodeSpecListenerTimeoutHttp2IdleArgs

func VirtualNodeSpecListenerTimeoutHttp2IdlePtr(v *VirtualNodeSpecListenerTimeoutHttp2IdleArgs) VirtualNodeSpecListenerTimeoutHttp2IdlePtrInput {
	return (*virtualNodeSpecListenerTimeoutHttp2IdlePtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutHttp2IdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp2Idle)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutHttp2IdlePtrType) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput() VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutHttp2IdlePtrType) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2IdleOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttp2IdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2Idle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttp2IdleOutput) ToVirtualNodeSpecListenerTimeoutHttp2IdleOutput() VirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2IdleOutput) ToVirtualNodeSpecListenerTimeoutHttp2IdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2IdleOutput) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput() VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutHttp2IdleOutput) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutHttp2Idle) *VirtualNodeSpecListenerTimeoutHttp2Idle {
		return &v
	}).(VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttp2IdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp2Idle) string { return v.Unit }).(pulumi.StringOutput)
}

// Number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutHttp2IdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp2Idle) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp2Idle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput() VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput) ToVirtualNodeSpecListenerTimeoutHttp2IdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput) Elem() VirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2Idle) VirtualNodeSpecListenerTimeoutHttp2Idle {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutHttp2Idle
		return ret
	}).(VirtualNodeSpecListenerTimeoutHttp2IdleOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2Idle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2Idle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2PerRequest struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The specified value for the JSON. Must be between 1 and 100 characters in length.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerTimeoutHttp2PerRequestInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs and VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttp2PerRequestInput` via:
//
//	VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs{...}
type VirtualNodeSpecListenerTimeoutHttp2PerRequestInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput
	ToVirtualNodeSpecListenerTimeoutHttp2PerRequestOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput
}

type VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The specified value for the JSON. Must be between 1 and 100 characters in length.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2PerRequest)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2PerRequestOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput)
}

func (i VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput).ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs, VirtualNodeSpecListenerTimeoutHttp2PerRequestPtr and VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrInput` via:
//
//	        VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput
	ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput
}

type virtualNodeSpecListenerTimeoutHttp2PerRequestPtrType VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs

func VirtualNodeSpecListenerTimeoutHttp2PerRequestPtr(v *VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrInput {
	return (*virtualNodeSpecListenerTimeoutHttp2PerRequestPtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutHttp2PerRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp2PerRequest)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutHttp2PerRequestPtrType) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutHttp2PerRequestPtrType) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2PerRequest)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutHttp2PerRequest) *VirtualNodeSpecListenerTimeoutHttp2PerRequest {
		return &v
	}).(VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp2PerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

// The specified value for the JSON. Must be between 1 and 100 characters in length.
func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp2PerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp2PerRequest)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput) ToVirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput) Elem() VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2PerRequest) VirtualNodeSpecListenerTimeoutHttp2PerRequest {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutHttp2PerRequest
		return ret
	}).(VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2PerRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The specified value for the JSON. Must be between 1 and 100 characters in length.
func (o VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp2PerRequest) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttp struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *VirtualNodeSpecListenerTimeoutHttpIdle `pulumi:"idle"`
	// Per request timeout.
	PerRequest *VirtualNodeSpecListenerTimeoutHttpPerRequest `pulumi:"perRequest"`
}

// VirtualNodeSpecListenerTimeoutHttpInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttpArgs and VirtualNodeSpecListenerTimeoutHttpOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttpInput` via:
//
//	VirtualNodeSpecListenerTimeoutHttpArgs{...}
type VirtualNodeSpecListenerTimeoutHttpInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttpOutput() VirtualNodeSpecListenerTimeoutHttpOutput
	ToVirtualNodeSpecListenerTimeoutHttpOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttpOutput
}

type VirtualNodeSpecListenerTimeoutHttpArgs struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle VirtualNodeSpecListenerTimeoutHttpIdlePtrInput `pulumi:"idle"`
	// Per request timeout.
	PerRequest VirtualNodeSpecListenerTimeoutHttpPerRequestPtrInput `pulumi:"perRequest"`
}

func (VirtualNodeSpecListenerTimeoutHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutHttpArgs) ToVirtualNodeSpecListenerTimeoutHttpOutput() VirtualNodeSpecListenerTimeoutHttpOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttpArgs) ToVirtualNodeSpecListenerTimeoutHttpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpOutput)
}

func (i VirtualNodeSpecListenerTimeoutHttpArgs) ToVirtualNodeSpecListenerTimeoutHttpPtrOutput() VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttpArgs) ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpOutput).ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutHttpPtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttpArgs, VirtualNodeSpecListenerTimeoutHttpPtr and VirtualNodeSpecListenerTimeoutHttpPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttpPtrInput` via:
//
//	        VirtualNodeSpecListenerTimeoutHttpArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTimeoutHttpPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttpPtrOutput() VirtualNodeSpecListenerTimeoutHttpPtrOutput
	ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttpPtrOutput
}

type virtualNodeSpecListenerTimeoutHttpPtrType VirtualNodeSpecListenerTimeoutHttpArgs

func VirtualNodeSpecListenerTimeoutHttpPtr(v *VirtualNodeSpecListenerTimeoutHttpArgs) VirtualNodeSpecListenerTimeoutHttpPtrInput {
	return (*virtualNodeSpecListenerTimeoutHttpPtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutHttpPtrType) ToVirtualNodeSpecListenerTimeoutHttpPtrOutput() VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutHttpPtrType) ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttpOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttpOutput) ToVirtualNodeSpecListenerTimeoutHttpOutput() VirtualNodeSpecListenerTimeoutHttpOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpOutput) ToVirtualNodeSpecListenerTimeoutHttpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpOutput) ToVirtualNodeSpecListenerTimeoutHttpPtrOutput() VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutHttpOutput) ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutHttp) *VirtualNodeSpecListenerTimeoutHttp {
		return &v
	}).(VirtualNodeSpecListenerTimeoutHttpPtrOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutHttpOutput) Idle() VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp) *VirtualNodeSpecListenerTimeoutHttpIdle { return v.Idle }).(VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput)
}

// Per request timeout.
func (o VirtualNodeSpecListenerTimeoutHttpOutput) PerRequest() VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttp) *VirtualNodeSpecListenerTimeoutHttpPerRequest {
		return v.PerRequest
	}).(VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttpPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttpPtrOutput) ToVirtualNodeSpecListenerTimeoutHttpPtrOutput() VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpPtrOutput) ToVirtualNodeSpecListenerTimeoutHttpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpPtrOutput) Elem() VirtualNodeSpecListenerTimeoutHttpOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp) VirtualNodeSpecListenerTimeoutHttp {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutHttp
		return ret
	}).(VirtualNodeSpecListenerTimeoutHttpOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutHttpPtrOutput) Idle() VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp) *VirtualNodeSpecListenerTimeoutHttpIdle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput)
}

// Per request timeout.
func (o VirtualNodeSpecListenerTimeoutHttpPtrOutput) PerRequest() VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttp) *VirtualNodeSpecListenerTimeoutHttpPerRequest {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttpIdle struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerTimeoutHttpIdleInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttpIdleArgs and VirtualNodeSpecListenerTimeoutHttpIdleOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttpIdleInput` via:
//
//	VirtualNodeSpecListenerTimeoutHttpIdleArgs{...}
type VirtualNodeSpecListenerTimeoutHttpIdleInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttpIdleOutput() VirtualNodeSpecListenerTimeoutHttpIdleOutput
	ToVirtualNodeSpecListenerTimeoutHttpIdleOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttpIdleOutput
}

type VirtualNodeSpecListenerTimeoutHttpIdleArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerTimeoutHttpIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpIdle)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutHttpIdleArgs) ToVirtualNodeSpecListenerTimeoutHttpIdleOutput() VirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpIdleOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttpIdleArgs) ToVirtualNodeSpecListenerTimeoutHttpIdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpIdleOutput)
}

func (i VirtualNodeSpecListenerTimeoutHttpIdleArgs) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutput() VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttpIdleArgs) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpIdleOutput).ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutHttpIdlePtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttpIdleArgs, VirtualNodeSpecListenerTimeoutHttpIdlePtr and VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttpIdlePtrInput` via:
//
//	        VirtualNodeSpecListenerTimeoutHttpIdleArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTimeoutHttpIdlePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutput() VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput
	ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput
}

type virtualNodeSpecListenerTimeoutHttpIdlePtrType VirtualNodeSpecListenerTimeoutHttpIdleArgs

func VirtualNodeSpecListenerTimeoutHttpIdlePtr(v *VirtualNodeSpecListenerTimeoutHttpIdleArgs) VirtualNodeSpecListenerTimeoutHttpIdlePtrInput {
	return (*virtualNodeSpecListenerTimeoutHttpIdlePtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutHttpIdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttpIdle)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutHttpIdlePtrType) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutput() VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutHttpIdlePtrType) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttpIdleOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttpIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpIdle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttpIdleOutput) ToVirtualNodeSpecListenerTimeoutHttpIdleOutput() VirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpIdleOutput) ToVirtualNodeSpecListenerTimeoutHttpIdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpIdleOutput) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutput() VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutHttpIdleOutput) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutHttpIdle) *VirtualNodeSpecListenerTimeoutHttpIdle {
		return &v
	}).(VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttpIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttpIdle) string { return v.Unit }).(pulumi.StringOutput)
}

// Number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutHttpIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttpIdle) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttpIdle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutput() VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput) ToVirtualNodeSpecListenerTimeoutHttpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput) Elem() VirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttpIdle) VirtualNodeSpecListenerTimeoutHttpIdle {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutHttpIdle
		return ret
	}).(VirtualNodeSpecListenerTimeoutHttpIdleOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttpIdle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttpIdle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttpPerRequest struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// The specified value for the JSON. Must be between 1 and 100 characters in length.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerTimeoutHttpPerRequestInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttpPerRequestArgs and VirtualNodeSpecListenerTimeoutHttpPerRequestOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttpPerRequestInput` via:
//
//	VirtualNodeSpecListenerTimeoutHttpPerRequestArgs{...}
type VirtualNodeSpecListenerTimeoutHttpPerRequestInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttpPerRequestOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestOutput
	ToVirtualNodeSpecListenerTimeoutHttpPerRequestOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestOutput
}

type VirtualNodeSpecListenerTimeoutHttpPerRequestArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The specified value for the JSON. Must be between 1 and 100 characters in length.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerTimeoutHttpPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpPerRequest)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutHttpPerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttpPerRequestOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpPerRequestOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttpPerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttpPerRequestOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpPerRequestOutput)
}

func (i VirtualNodeSpecListenerTimeoutHttpPerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutHttpPerRequestArgs) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpPerRequestOutput).ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutHttpPerRequestPtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutHttpPerRequestArgs, VirtualNodeSpecListenerTimeoutHttpPerRequestPtr and VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutHttpPerRequestPtrInput` via:
//
//	        VirtualNodeSpecListenerTimeoutHttpPerRequestArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTimeoutHttpPerRequestPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput
	ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput
}

type virtualNodeSpecListenerTimeoutHttpPerRequestPtrType VirtualNodeSpecListenerTimeoutHttpPerRequestArgs

func VirtualNodeSpecListenerTimeoutHttpPerRequestPtr(v *VirtualNodeSpecListenerTimeoutHttpPerRequestArgs) VirtualNodeSpecListenerTimeoutHttpPerRequestPtrInput {
	return (*virtualNodeSpecListenerTimeoutHttpPerRequestPtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutHttpPerRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttpPerRequest)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutHttpPerRequestPtrType) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutHttpPerRequestPtrType) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput)
}

type VirtualNodeSpecListenerTimeoutHttpPerRequestOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttpPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpPerRequest)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttpPerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttpPerRequestOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpPerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttpPerRequestOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpPerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutHttpPerRequestOutput) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutHttpPerRequest) *VirtualNodeSpecListenerTimeoutHttpPerRequest {
		return &v
	}).(VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttpPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttpPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

// The specified value for the JSON. Must be between 1 and 100 characters in length.
func (o VirtualNodeSpecListenerTimeoutHttpPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutHttpPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutHttpPerRequest)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput() VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput) ToVirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput) Elem() VirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttpPerRequest) VirtualNodeSpecListenerTimeoutHttpPerRequest {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutHttpPerRequest
		return ret
	}).(VirtualNodeSpecListenerTimeoutHttpPerRequestOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttpPerRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// The specified value for the JSON. Must be between 1 and 100 characters in length.
func (o VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutHttpPerRequest) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerTimeoutTcp struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle *VirtualNodeSpecListenerTimeoutTcpIdle `pulumi:"idle"`
}

// VirtualNodeSpecListenerTimeoutTcpInput is an input type that accepts VirtualNodeSpecListenerTimeoutTcpArgs and VirtualNodeSpecListenerTimeoutTcpOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutTcpInput` via:
//
//	VirtualNodeSpecListenerTimeoutTcpArgs{...}
type VirtualNodeSpecListenerTimeoutTcpInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutTcpOutput() VirtualNodeSpecListenerTimeoutTcpOutput
	ToVirtualNodeSpecListenerTimeoutTcpOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutTcpOutput
}

type VirtualNodeSpecListenerTimeoutTcpArgs struct {
	// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
	Idle VirtualNodeSpecListenerTimeoutTcpIdlePtrInput `pulumi:"idle"`
}

func (VirtualNodeSpecListenerTimeoutTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcp)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutTcpArgs) ToVirtualNodeSpecListenerTimeoutTcpOutput() VirtualNodeSpecListenerTimeoutTcpOutput {
	return i.ToVirtualNodeSpecListenerTimeoutTcpOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutTcpArgs) ToVirtualNodeSpecListenerTimeoutTcpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutTcpOutput)
}

func (i VirtualNodeSpecListenerTimeoutTcpArgs) ToVirtualNodeSpecListenerTimeoutTcpPtrOutput() VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutTcpArgs) ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutTcpOutput).ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutTcpPtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutTcpArgs, VirtualNodeSpecListenerTimeoutTcpPtr and VirtualNodeSpecListenerTimeoutTcpPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutTcpPtrInput` via:
//
//	        VirtualNodeSpecListenerTimeoutTcpArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTimeoutTcpPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutTcpPtrOutput() VirtualNodeSpecListenerTimeoutTcpPtrOutput
	ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutTcpPtrOutput
}

type virtualNodeSpecListenerTimeoutTcpPtrType VirtualNodeSpecListenerTimeoutTcpArgs

func VirtualNodeSpecListenerTimeoutTcpPtr(v *VirtualNodeSpecListenerTimeoutTcpArgs) VirtualNodeSpecListenerTimeoutTcpPtrInput {
	return (*virtualNodeSpecListenerTimeoutTcpPtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutTcp)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutTcpPtrType) ToVirtualNodeSpecListenerTimeoutTcpPtrOutput() VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutTcpPtrType) ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutTcpPtrOutput)
}

type VirtualNodeSpecListenerTimeoutTcpOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutTcpOutput) ToVirtualNodeSpecListenerTimeoutTcpOutput() VirtualNodeSpecListenerTimeoutTcpOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpOutput) ToVirtualNodeSpecListenerTimeoutTcpOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpOutput) ToVirtualNodeSpecListenerTimeoutTcpPtrOutput() VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutTcpOutput) ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutTcp) *VirtualNodeSpecListenerTimeoutTcp {
		return &v
	}).(VirtualNodeSpecListenerTimeoutTcpPtrOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutTcpOutput) Idle() VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutTcp) *VirtualNodeSpecListenerTimeoutTcpIdle { return v.Idle }).(VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput)
}

type VirtualNodeSpecListenerTimeoutTcpPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutTcp)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutTcpPtrOutput) ToVirtualNodeSpecListenerTimeoutTcpPtrOutput() VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpPtrOutput) ToVirtualNodeSpecListenerTimeoutTcpPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpPtrOutput) Elem() VirtualNodeSpecListenerTimeoutTcpOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutTcp) VirtualNodeSpecListenerTimeoutTcp {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutTcp
		return ret
	}).(VirtualNodeSpecListenerTimeoutTcpOutput)
}

// Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
func (o VirtualNodeSpecListenerTimeoutTcpPtrOutput) Idle() VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutTcp) *VirtualNodeSpecListenerTimeoutTcpIdle {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput)
}

type VirtualNodeSpecListenerTimeoutTcpIdle struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit string `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value int `pulumi:"value"`
}

// VirtualNodeSpecListenerTimeoutTcpIdleInput is an input type that accepts VirtualNodeSpecListenerTimeoutTcpIdleArgs and VirtualNodeSpecListenerTimeoutTcpIdleOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutTcpIdleInput` via:
//
//	VirtualNodeSpecListenerTimeoutTcpIdleArgs{...}
type VirtualNodeSpecListenerTimeoutTcpIdleInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutTcpIdleOutput() VirtualNodeSpecListenerTimeoutTcpIdleOutput
	ToVirtualNodeSpecListenerTimeoutTcpIdleOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutTcpIdleOutput
}

type VirtualNodeSpecListenerTimeoutTcpIdleArgs struct {
	// Unit of time. Valid values: `ms`, `s`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Number of time units. Minimum value of `0`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (VirtualNodeSpecListenerTimeoutTcpIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcpIdle)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTimeoutTcpIdleArgs) ToVirtualNodeSpecListenerTimeoutTcpIdleOutput() VirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return i.ToVirtualNodeSpecListenerTimeoutTcpIdleOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutTcpIdleArgs) ToVirtualNodeSpecListenerTimeoutTcpIdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutTcpIdleOutput)
}

func (i VirtualNodeSpecListenerTimeoutTcpIdleArgs) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutput() VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTimeoutTcpIdleArgs) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutTcpIdleOutput).ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTimeoutTcpIdlePtrInput is an input type that accepts VirtualNodeSpecListenerTimeoutTcpIdleArgs, VirtualNodeSpecListenerTimeoutTcpIdlePtr and VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTimeoutTcpIdlePtrInput` via:
//
//	        VirtualNodeSpecListenerTimeoutTcpIdleArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTimeoutTcpIdlePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutput() VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput
	ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(context.Context) VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput
}

type virtualNodeSpecListenerTimeoutTcpIdlePtrType VirtualNodeSpecListenerTimeoutTcpIdleArgs

func VirtualNodeSpecListenerTimeoutTcpIdlePtr(v *VirtualNodeSpecListenerTimeoutTcpIdleArgs) VirtualNodeSpecListenerTimeoutTcpIdlePtrInput {
	return (*virtualNodeSpecListenerTimeoutTcpIdlePtrType)(v)
}

func (*virtualNodeSpecListenerTimeoutTcpIdlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutTcpIdle)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTimeoutTcpIdlePtrType) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutput() VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return i.ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTimeoutTcpIdlePtrType) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput)
}

type VirtualNodeSpecListenerTimeoutTcpIdleOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutTcpIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcpIdle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutTcpIdleOutput) ToVirtualNodeSpecListenerTimeoutTcpIdleOutput() VirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpIdleOutput) ToVirtualNodeSpecListenerTimeoutTcpIdleOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpIdleOutput) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutput() VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return o.ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTimeoutTcpIdleOutput) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTimeoutTcpIdle) *VirtualNodeSpecListenerTimeoutTcpIdle {
		return &v
	}).(VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutTcpIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutTcpIdle) string { return v.Unit }).(pulumi.StringOutput)
}

// Number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutTcpIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTimeoutTcpIdle) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTimeoutTcpIdle)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutput() VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput) ToVirtualNodeSpecListenerTimeoutTcpIdlePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput) Elem() VirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutTcpIdle) VirtualNodeSpecListenerTimeoutTcpIdle {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTimeoutTcpIdle
		return ret
	}).(VirtualNodeSpecListenerTimeoutTcpIdleOutput)
}

// Unit of time. Valid values: `ms`, `s`.
func (o VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutTcpIdle) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Number of time units. Minimum value of `0`.
func (o VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTimeoutTcpIdle) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeSpecListenerTls struct {
	// Listener's TLS certificate.
	Certificate VirtualNodeSpecListenerTlsCertificate `pulumi:"certificate"`
	// Listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
	Mode string `pulumi:"mode"`
	// Listener's Transport Layer Security (TLS) validation context.
	Validation *VirtualNodeSpecListenerTlsValidation `pulumi:"validation"`
}

// VirtualNodeSpecListenerTlsInput is an input type that accepts VirtualNodeSpecListenerTlsArgs and VirtualNodeSpecListenerTlsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsInput` via:
//
//	VirtualNodeSpecListenerTlsArgs{...}
type VirtualNodeSpecListenerTlsInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsOutput() VirtualNodeSpecListenerTlsOutput
	ToVirtualNodeSpecListenerTlsOutputWithContext(context.Context) VirtualNodeSpecListenerTlsOutput
}

type VirtualNodeSpecListenerTlsArgs struct {
	// Listener's TLS certificate.
	Certificate VirtualNodeSpecListenerTlsCertificateInput `pulumi:"certificate"`
	// Listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Listener's Transport Layer Security (TLS) validation context.
	Validation VirtualNodeSpecListenerTlsValidationPtrInput `pulumi:"validation"`
}

func (VirtualNodeSpecListenerTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTls)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsArgs) ToVirtualNodeSpecListenerTlsOutput() VirtualNodeSpecListenerTlsOutput {
	return i.ToVirtualNodeSpecListenerTlsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsArgs) ToVirtualNodeSpecListenerTlsOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsOutput)
}

func (i VirtualNodeSpecListenerTlsArgs) ToVirtualNodeSpecListenerTlsPtrOutput() VirtualNodeSpecListenerTlsPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsArgs) ToVirtualNodeSpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsOutput).ToVirtualNodeSpecListenerTlsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsPtrInput is an input type that accepts VirtualNodeSpecListenerTlsArgs, VirtualNodeSpecListenerTlsPtr and VirtualNodeSpecListenerTlsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsPtrInput` via:
//
//	        VirtualNodeSpecListenerTlsArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTlsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsPtrOutput() VirtualNodeSpecListenerTlsPtrOutput
	ToVirtualNodeSpecListenerTlsPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsPtrOutput
}

type virtualNodeSpecListenerTlsPtrType VirtualNodeSpecListenerTlsArgs

func VirtualNodeSpecListenerTlsPtr(v *VirtualNodeSpecListenerTlsArgs) VirtualNodeSpecListenerTlsPtrInput {
	return (*virtualNodeSpecListenerTlsPtrType)(v)
}

func (*virtualNodeSpecListenerTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTls)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsPtrType) ToVirtualNodeSpecListenerTlsPtrOutput() VirtualNodeSpecListenerTlsPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsPtrType) ToVirtualNodeSpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsPtrOutput)
}

type VirtualNodeSpecListenerTlsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTls)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsOutput) ToVirtualNodeSpecListenerTlsOutput() VirtualNodeSpecListenerTlsOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsOutput) ToVirtualNodeSpecListenerTlsOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsOutput) ToVirtualNodeSpecListenerTlsPtrOutput() VirtualNodeSpecListenerTlsPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsOutput) ToVirtualNodeSpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTls) *VirtualNodeSpecListenerTls {
		return &v
	}).(VirtualNodeSpecListenerTlsPtrOutput)
}

// Listener's TLS certificate.
func (o VirtualNodeSpecListenerTlsOutput) Certificate() VirtualNodeSpecListenerTlsCertificateOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTls) VirtualNodeSpecListenerTlsCertificate { return v.Certificate }).(VirtualNodeSpecListenerTlsCertificateOutput)
}

// Listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
func (o VirtualNodeSpecListenerTlsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTls) string { return v.Mode }).(pulumi.StringOutput)
}

// Listener's Transport Layer Security (TLS) validation context.
func (o VirtualNodeSpecListenerTlsOutput) Validation() VirtualNodeSpecListenerTlsValidationPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTls) *VirtualNodeSpecListenerTlsValidation { return v.Validation }).(VirtualNodeSpecListenerTlsValidationPtrOutput)
}

type VirtualNodeSpecListenerTlsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTls)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsPtrOutput) ToVirtualNodeSpecListenerTlsPtrOutput() VirtualNodeSpecListenerTlsPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsPtrOutput) ToVirtualNodeSpecListenerTlsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsPtrOutput) Elem() VirtualNodeSpecListenerTlsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTls) VirtualNodeSpecListenerTls {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTls
		return ret
	}).(VirtualNodeSpecListenerTlsOutput)
}

// Listener's TLS certificate.
func (o VirtualNodeSpecListenerTlsPtrOutput) Certificate() VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTls) *VirtualNodeSpecListenerTlsCertificate {
		if v == nil {
			return nil
		}
		return &v.Certificate
	}).(VirtualNodeSpecListenerTlsCertificatePtrOutput)
}

// Listener's TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
func (o VirtualNodeSpecListenerTlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTls) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// Listener's Transport Layer Security (TLS) validation context.
func (o VirtualNodeSpecListenerTlsPtrOutput) Validation() VirtualNodeSpecListenerTlsValidationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTls) *VirtualNodeSpecListenerTlsValidation {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(VirtualNodeSpecListenerTlsValidationPtrOutput)
}

type VirtualNodeSpecListenerTlsCertificate struct {
	// An AWS Certificate Manager (ACM) certificate.
	Acm *VirtualNodeSpecListenerTlsCertificateAcm `pulumi:"acm"`
	// Local file certificate.
	File *VirtualNodeSpecListenerTlsCertificateFile `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualNodeSpecListenerTlsCertificateSds `pulumi:"sds"`
}

// VirtualNodeSpecListenerTlsCertificateInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateArgs and VirtualNodeSpecListenerTlsCertificateOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificateInput` via:
//
//	VirtualNodeSpecListenerTlsCertificateArgs{...}
type VirtualNodeSpecListenerTlsCertificateInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificateOutput() VirtualNodeSpecListenerTlsCertificateOutput
	ToVirtualNodeSpecListenerTlsCertificateOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificateOutput
}

type VirtualNodeSpecListenerTlsCertificateArgs struct {
	// An AWS Certificate Manager (ACM) certificate.
	Acm VirtualNodeSpecListenerTlsCertificateAcmPtrInput `pulumi:"acm"`
	// Local file certificate.
	File VirtualNodeSpecListenerTlsCertificateFilePtrInput `pulumi:"file"`
	// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualNodeSpecListenerTlsCertificateSdsPtrInput `pulumi:"sds"`
}

func (VirtualNodeSpecListenerTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificate)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsCertificateArgs) ToVirtualNodeSpecListenerTlsCertificateOutput() VirtualNodeSpecListenerTlsCertificateOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateArgs) ToVirtualNodeSpecListenerTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateOutput)
}

func (i VirtualNodeSpecListenerTlsCertificateArgs) ToVirtualNodeSpecListenerTlsCertificatePtrOutput() VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateArgs) ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateOutput).ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsCertificatePtrInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateArgs, VirtualNodeSpecListenerTlsCertificatePtr and VirtualNodeSpecListenerTlsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificatePtrInput` via:
//
//	        VirtualNodeSpecListenerTlsCertificateArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTlsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificatePtrOutput() VirtualNodeSpecListenerTlsCertificatePtrOutput
	ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificatePtrOutput
}

type virtualNodeSpecListenerTlsCertificatePtrType VirtualNodeSpecListenerTlsCertificateArgs

func VirtualNodeSpecListenerTlsCertificatePtr(v *VirtualNodeSpecListenerTlsCertificateArgs) VirtualNodeSpecListenerTlsCertificatePtrInput {
	return (*virtualNodeSpecListenerTlsCertificatePtrType)(v)
}

func (*virtualNodeSpecListenerTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificate)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsCertificatePtrType) ToVirtualNodeSpecListenerTlsCertificatePtrOutput() VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsCertificatePtrType) ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificatePtrOutput)
}

type VirtualNodeSpecListenerTlsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificateOutput) ToVirtualNodeSpecListenerTlsCertificateOutput() VirtualNodeSpecListenerTlsCertificateOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateOutput) ToVirtualNodeSpecListenerTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateOutput) ToVirtualNodeSpecListenerTlsCertificatePtrOutput() VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return o.ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsCertificateOutput) ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsCertificate) *VirtualNodeSpecListenerTlsCertificate {
		return &v
	}).(VirtualNodeSpecListenerTlsCertificatePtrOutput)
}

// An AWS Certificate Manager (ACM) certificate.
func (o VirtualNodeSpecListenerTlsCertificateOutput) Acm() VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsCertificate) *VirtualNodeSpecListenerTlsCertificateAcm { return v.Acm }).(VirtualNodeSpecListenerTlsCertificateAcmPtrOutput)
}

// Local file certificate.
func (o VirtualNodeSpecListenerTlsCertificateOutput) File() VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsCertificate) *VirtualNodeSpecListenerTlsCertificateFile {
		return v.File
	}).(VirtualNodeSpecListenerTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecListenerTlsCertificateOutput) Sds() VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsCertificate) *VirtualNodeSpecListenerTlsCertificateSds { return v.Sds }).(VirtualNodeSpecListenerTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecListenerTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificatePtrOutput) ToVirtualNodeSpecListenerTlsCertificatePtrOutput() VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificatePtrOutput) ToVirtualNodeSpecListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificatePtrOutput) Elem() VirtualNodeSpecListenerTlsCertificateOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificate) VirtualNodeSpecListenerTlsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsCertificate
		return ret
	}).(VirtualNodeSpecListenerTlsCertificateOutput)
}

// An AWS Certificate Manager (ACM) certificate.
func (o VirtualNodeSpecListenerTlsCertificatePtrOutput) Acm() VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificate) *VirtualNodeSpecListenerTlsCertificateAcm {
		if v == nil {
			return nil
		}
		return v.Acm
	}).(VirtualNodeSpecListenerTlsCertificateAcmPtrOutput)
}

// Local file certificate.
func (o VirtualNodeSpecListenerTlsCertificatePtrOutput) File() VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificate) *VirtualNodeSpecListenerTlsCertificateFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeSpecListenerTlsCertificateFilePtrOutput)
}

// A [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecListenerTlsCertificatePtrOutput) Sds() VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificate) *VirtualNodeSpecListenerTlsCertificateSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualNodeSpecListenerTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecListenerTlsCertificateAcm struct {
	// ARN for the certificate.
	CertificateArn string `pulumi:"certificateArn"`
}

// VirtualNodeSpecListenerTlsCertificateAcmInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateAcmArgs and VirtualNodeSpecListenerTlsCertificateAcmOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificateAcmInput` via:
//
//	VirtualNodeSpecListenerTlsCertificateAcmArgs{...}
type VirtualNodeSpecListenerTlsCertificateAcmInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificateAcmOutput() VirtualNodeSpecListenerTlsCertificateAcmOutput
	ToVirtualNodeSpecListenerTlsCertificateAcmOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificateAcmOutput
}

type VirtualNodeSpecListenerTlsCertificateAcmArgs struct {
	// ARN for the certificate.
	CertificateArn pulumi.StringInput `pulumi:"certificateArn"`
}

func (VirtualNodeSpecListenerTlsCertificateAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsCertificateAcmArgs) ToVirtualNodeSpecListenerTlsCertificateAcmOutput() VirtualNodeSpecListenerTlsCertificateAcmOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateAcmOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateAcmArgs) ToVirtualNodeSpecListenerTlsCertificateAcmOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateAcmOutput)
}

func (i VirtualNodeSpecListenerTlsCertificateAcmArgs) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutput() VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateAcmArgs) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateAcmOutput).ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsCertificateAcmPtrInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateAcmArgs, VirtualNodeSpecListenerTlsCertificateAcmPtr and VirtualNodeSpecListenerTlsCertificateAcmPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificateAcmPtrInput` via:
//
//	        VirtualNodeSpecListenerTlsCertificateAcmArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTlsCertificateAcmPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutput() VirtualNodeSpecListenerTlsCertificateAcmPtrOutput
	ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificateAcmPtrOutput
}

type virtualNodeSpecListenerTlsCertificateAcmPtrType VirtualNodeSpecListenerTlsCertificateAcmArgs

func VirtualNodeSpecListenerTlsCertificateAcmPtr(v *VirtualNodeSpecListenerTlsCertificateAcmArgs) VirtualNodeSpecListenerTlsCertificateAcmPtrInput {
	return (*virtualNodeSpecListenerTlsCertificateAcmPtrType)(v)
}

func (*virtualNodeSpecListenerTlsCertificateAcmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsCertificateAcmPtrType) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutput() VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsCertificateAcmPtrType) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateAcmPtrOutput)
}

type VirtualNodeSpecListenerTlsCertificateAcmOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificateAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificateAcmOutput) ToVirtualNodeSpecListenerTlsCertificateAcmOutput() VirtualNodeSpecListenerTlsCertificateAcmOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateAcmOutput) ToVirtualNodeSpecListenerTlsCertificateAcmOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateAcmOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateAcmOutput) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutput() VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsCertificateAcmOutput) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsCertificateAcm) *VirtualNodeSpecListenerTlsCertificateAcm {
		return &v
	}).(VirtualNodeSpecListenerTlsCertificateAcmPtrOutput)
}

// ARN for the certificate.
func (o VirtualNodeSpecListenerTlsCertificateAcmOutput) CertificateArn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsCertificateAcm) string { return v.CertificateArn }).(pulumi.StringOutput)
}

type VirtualNodeSpecListenerTlsCertificateAcmPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificateAcmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificateAcm)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificateAcmPtrOutput) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutput() VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateAcmPtrOutput) ToVirtualNodeSpecListenerTlsCertificateAcmPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateAcmPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateAcmPtrOutput) Elem() VirtualNodeSpecListenerTlsCertificateAcmOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificateAcm) VirtualNodeSpecListenerTlsCertificateAcm {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsCertificateAcm
		return ret
	}).(VirtualNodeSpecListenerTlsCertificateAcmOutput)
}

// ARN for the certificate.
func (o VirtualNodeSpecListenerTlsCertificateAcmPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificateAcm) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecListenerTlsCertificateFile struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
	// Private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey string `pulumi:"privateKey"`
}

// VirtualNodeSpecListenerTlsCertificateFileInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateFileArgs and VirtualNodeSpecListenerTlsCertificateFileOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificateFileInput` via:
//
//	VirtualNodeSpecListenerTlsCertificateFileArgs{...}
type VirtualNodeSpecListenerTlsCertificateFileInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificateFileOutput() VirtualNodeSpecListenerTlsCertificateFileOutput
	ToVirtualNodeSpecListenerTlsCertificateFileOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificateFileOutput
}

type VirtualNodeSpecListenerTlsCertificateFileArgs struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	// Private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (VirtualNodeSpecListenerTlsCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateFile)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsCertificateFileArgs) ToVirtualNodeSpecListenerTlsCertificateFileOutput() VirtualNodeSpecListenerTlsCertificateFileOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateFileOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateFileArgs) ToVirtualNodeSpecListenerTlsCertificateFileOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateFileOutput)
}

func (i VirtualNodeSpecListenerTlsCertificateFileArgs) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutput() VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateFileArgs) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateFileOutput).ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsCertificateFilePtrInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateFileArgs, VirtualNodeSpecListenerTlsCertificateFilePtr and VirtualNodeSpecListenerTlsCertificateFilePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificateFilePtrInput` via:
//
//	        VirtualNodeSpecListenerTlsCertificateFileArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTlsCertificateFilePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificateFilePtrOutput() VirtualNodeSpecListenerTlsCertificateFilePtrOutput
	ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificateFilePtrOutput
}

type virtualNodeSpecListenerTlsCertificateFilePtrType VirtualNodeSpecListenerTlsCertificateFileArgs

func VirtualNodeSpecListenerTlsCertificateFilePtr(v *VirtualNodeSpecListenerTlsCertificateFileArgs) VirtualNodeSpecListenerTlsCertificateFilePtrInput {
	return (*virtualNodeSpecListenerTlsCertificateFilePtrType)(v)
}

func (*virtualNodeSpecListenerTlsCertificateFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificateFile)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsCertificateFilePtrType) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutput() VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsCertificateFilePtrType) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateFilePtrOutput)
}

type VirtualNodeSpecListenerTlsCertificateFileOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateFile)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificateFileOutput) ToVirtualNodeSpecListenerTlsCertificateFileOutput() VirtualNodeSpecListenerTlsCertificateFileOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateFileOutput) ToVirtualNodeSpecListenerTlsCertificateFileOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateFileOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateFileOutput) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutput() VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return o.ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsCertificateFileOutput) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsCertificateFile) *VirtualNodeSpecListenerTlsCertificateFile {
		return &v
	}).(VirtualNodeSpecListenerTlsCertificateFilePtrOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecListenerTlsCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsCertificateFile) string { return v.CertificateChain }).(pulumi.StringOutput)
}

// Private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecListenerTlsCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsCertificateFile) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type VirtualNodeSpecListenerTlsCertificateFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificateFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificateFile)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificateFilePtrOutput) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutput() VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateFilePtrOutput) ToVirtualNodeSpecListenerTlsCertificateFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateFilePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateFilePtrOutput) Elem() VirtualNodeSpecListenerTlsCertificateFileOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificateFile) VirtualNodeSpecListenerTlsCertificateFile {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsCertificateFile
		return ret
	}).(VirtualNodeSpecListenerTlsCertificateFileOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecListenerTlsCertificateFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

// Private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecListenerTlsCertificateFilePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificateFile) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecListenerTlsCertificateSds struct {
	// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualNodeSpecListenerTlsCertificateSdsInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateSdsArgs and VirtualNodeSpecListenerTlsCertificateSdsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificateSdsInput` via:
//
//	VirtualNodeSpecListenerTlsCertificateSdsArgs{...}
type VirtualNodeSpecListenerTlsCertificateSdsInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificateSdsOutput() VirtualNodeSpecListenerTlsCertificateSdsOutput
	ToVirtualNodeSpecListenerTlsCertificateSdsOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificateSdsOutput
}

type VirtualNodeSpecListenerTlsCertificateSdsArgs struct {
	// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualNodeSpecListenerTlsCertificateSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateSds)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsCertificateSdsArgs) ToVirtualNodeSpecListenerTlsCertificateSdsOutput() VirtualNodeSpecListenerTlsCertificateSdsOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateSdsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateSdsArgs) ToVirtualNodeSpecListenerTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateSdsOutput)
}

func (i VirtualNodeSpecListenerTlsCertificateSdsArgs) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutput() VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsCertificateSdsArgs) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateSdsOutput).ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsCertificateSdsPtrInput is an input type that accepts VirtualNodeSpecListenerTlsCertificateSdsArgs, VirtualNodeSpecListenerTlsCertificateSdsPtr and VirtualNodeSpecListenerTlsCertificateSdsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsCertificateSdsPtrInput` via:
//
//	        VirtualNodeSpecListenerTlsCertificateSdsArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTlsCertificateSdsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutput() VirtualNodeSpecListenerTlsCertificateSdsPtrOutput
	ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsCertificateSdsPtrOutput
}

type virtualNodeSpecListenerTlsCertificateSdsPtrType VirtualNodeSpecListenerTlsCertificateSdsArgs

func VirtualNodeSpecListenerTlsCertificateSdsPtr(v *VirtualNodeSpecListenerTlsCertificateSdsArgs) VirtualNodeSpecListenerTlsCertificateSdsPtrInput {
	return (*virtualNodeSpecListenerTlsCertificateSdsPtrType)(v)
}

func (*virtualNodeSpecListenerTlsCertificateSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificateSds)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsCertificateSdsPtrType) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutput() VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsCertificateSdsPtrType) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsCertificateSdsPtrOutput)
}

type VirtualNodeSpecListenerTlsCertificateSdsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificateSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateSds)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificateSdsOutput) ToVirtualNodeSpecListenerTlsCertificateSdsOutput() VirtualNodeSpecListenerTlsCertificateSdsOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateSdsOutput) ToVirtualNodeSpecListenerTlsCertificateSdsOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateSdsOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateSdsOutput) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutput() VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsCertificateSdsOutput) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsCertificateSds) *VirtualNodeSpecListenerTlsCertificateSds {
		return &v
	}).(VirtualNodeSpecListenerTlsCertificateSdsPtrOutput)
}

// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecListenerTlsCertificateSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsCertificateSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualNodeSpecListenerTlsCertificateSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsCertificateSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsCertificateSds)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsCertificateSdsPtrOutput) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutput() VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateSdsPtrOutput) ToVirtualNodeSpecListenerTlsCertificateSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsCertificateSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsCertificateSdsPtrOutput) Elem() VirtualNodeSpecListenerTlsCertificateSdsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificateSds) VirtualNodeSpecListenerTlsCertificateSds {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsCertificateSds
		return ret
	}).(VirtualNodeSpecListenerTlsCertificateSdsOutput)
}

// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecListenerTlsCertificateSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsCertificateSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecListenerTlsValidation struct {
	// SANs for a TLS validation context.
	SubjectAlternativeNames *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames `pulumi:"subjectAlternativeNames"`
	// TLS validation context trust.
	Trust VirtualNodeSpecListenerTlsValidationTrust `pulumi:"trust"`
}

// VirtualNodeSpecListenerTlsValidationInput is an input type that accepts VirtualNodeSpecListenerTlsValidationArgs and VirtualNodeSpecListenerTlsValidationOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationInput` via:
//
//	VirtualNodeSpecListenerTlsValidationArgs{...}
type VirtualNodeSpecListenerTlsValidationInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationOutput() VirtualNodeSpecListenerTlsValidationOutput
	ToVirtualNodeSpecListenerTlsValidationOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationOutput
}

type VirtualNodeSpecListenerTlsValidationArgs struct {
	// SANs for a TLS validation context.
	SubjectAlternativeNames VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrInput `pulumi:"subjectAlternativeNames"`
	// TLS validation context trust.
	Trust VirtualNodeSpecListenerTlsValidationTrustInput `pulumi:"trust"`
}

func (VirtualNodeSpecListenerTlsValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidation)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsValidationArgs) ToVirtualNodeSpecListenerTlsValidationOutput() VirtualNodeSpecListenerTlsValidationOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationArgs) ToVirtualNodeSpecListenerTlsValidationOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationOutput)
}

func (i VirtualNodeSpecListenerTlsValidationArgs) ToVirtualNodeSpecListenerTlsValidationPtrOutput() VirtualNodeSpecListenerTlsValidationPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationArgs) ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationOutput).ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsValidationPtrInput is an input type that accepts VirtualNodeSpecListenerTlsValidationArgs, VirtualNodeSpecListenerTlsValidationPtr and VirtualNodeSpecListenerTlsValidationPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationPtrInput` via:
//
//	        VirtualNodeSpecListenerTlsValidationArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTlsValidationPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationPtrOutput() VirtualNodeSpecListenerTlsValidationPtrOutput
	ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationPtrOutput
}

type virtualNodeSpecListenerTlsValidationPtrType VirtualNodeSpecListenerTlsValidationArgs

func VirtualNodeSpecListenerTlsValidationPtr(v *VirtualNodeSpecListenerTlsValidationArgs) VirtualNodeSpecListenerTlsValidationPtrInput {
	return (*virtualNodeSpecListenerTlsValidationPtrType)(v)
}

func (*virtualNodeSpecListenerTlsValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidation)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsValidationPtrType) ToVirtualNodeSpecListenerTlsValidationPtrOutput() VirtualNodeSpecListenerTlsValidationPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsValidationPtrType) ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidation)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationOutput) ToVirtualNodeSpecListenerTlsValidationOutput() VirtualNodeSpecListenerTlsValidationOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationOutput) ToVirtualNodeSpecListenerTlsValidationOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationOutput) ToVirtualNodeSpecListenerTlsValidationPtrOutput() VirtualNodeSpecListenerTlsValidationPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsValidationOutput) ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsValidation) *VirtualNodeSpecListenerTlsValidation {
		return &v
	}).(VirtualNodeSpecListenerTlsValidationPtrOutput)
}

// SANs for a TLS validation context.
func (o VirtualNodeSpecListenerTlsValidationOutput) SubjectAlternativeNames() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidation) *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames {
		return v.SubjectAlternativeNames
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

// TLS validation context trust.
func (o VirtualNodeSpecListenerTlsValidationOutput) Trust() VirtualNodeSpecListenerTlsValidationTrustOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidation) VirtualNodeSpecListenerTlsValidationTrust { return v.Trust }).(VirtualNodeSpecListenerTlsValidationTrustOutput)
}

type VirtualNodeSpecListenerTlsValidationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidation)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationPtrOutput) ToVirtualNodeSpecListenerTlsValidationPtrOutput() VirtualNodeSpecListenerTlsValidationPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationPtrOutput) ToVirtualNodeSpecListenerTlsValidationPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationPtrOutput) Elem() VirtualNodeSpecListenerTlsValidationOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidation) VirtualNodeSpecListenerTlsValidation {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsValidation
		return ret
	}).(VirtualNodeSpecListenerTlsValidationOutput)
}

// SANs for a TLS validation context.
func (o VirtualNodeSpecListenerTlsValidationPtrOutput) SubjectAlternativeNames() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidation) *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

// TLS validation context trust.
func (o VirtualNodeSpecListenerTlsValidationPtrOutput) Trust() VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidation) *VirtualNodeSpecListenerTlsValidationTrust {
		if v == nil {
			return nil
		}
		return &v.Trust
	}).(VirtualNodeSpecListenerTlsValidationTrustPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames struct {
	// Criteria for determining a SAN's match.
	Match VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch `pulumi:"match"`
}

// VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesInput is an input type that accepts VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs and VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesInput` via:
//
//	VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs{...}
type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput
	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs struct {
	// Criteria for determining a SAN's match.
	Match VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchInput `pulumi:"match"`
}

func (VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput)
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput).ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrInput is an input type that accepts VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs, VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtr and VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrInput` via:
//
//	        VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput
	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput
}

type virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrType VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs

func VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtr(v *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrInput {
	return (*virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrType)(v)
}

func (*virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrType) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrType) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames) *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames {
		return &v
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput)
}

// Criteria for determining a SAN's match.
func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput) Match() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch {
		return v.Match
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput)
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) Elem() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames
		return ret
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput)
}

// Criteria for determining a SAN's match.
func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput) Match() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNames) *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch struct {
	// Values sent must match the specified values exactly.
	Exacts []string `pulumi:"exacts"`
}

// VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchInput is an input type that accepts VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs and VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchInput` via:
//
//	VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{...}
type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput
	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs struct {
	// Values sent must match the specified values exactly.
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput)
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput).ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput is an input type that accepts VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs, VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtr and VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput` via:
//
//	        VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput
	ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput
}

type virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs

func VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtr(v *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput {
	return (*virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType)(v)
}

func (*virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrType) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch) *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch {
		return &v
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput)
}

// Values sent must match the specified values exactly.
func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch) []string { return v.Exacts }).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) ToVirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) Elem() VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch) VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch
		return ret
	}).(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput)
}

// Values sent must match the specified values exactly.
func (o VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatch) []string {
		if v == nil {
			return nil
		}
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSpecListenerTlsValidationTrust struct {
	// TLS validation context trust for a local file certificate.
	File *VirtualNodeSpecListenerTlsValidationTrustFile `pulumi:"file"`
	// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds *VirtualNodeSpecListenerTlsValidationTrustSds `pulumi:"sds"`
}

// VirtualNodeSpecListenerTlsValidationTrustInput is an input type that accepts VirtualNodeSpecListenerTlsValidationTrustArgs and VirtualNodeSpecListenerTlsValidationTrustOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationTrustInput` via:
//
//	VirtualNodeSpecListenerTlsValidationTrustArgs{...}
type VirtualNodeSpecListenerTlsValidationTrustInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationTrustOutput() VirtualNodeSpecListenerTlsValidationTrustOutput
	ToVirtualNodeSpecListenerTlsValidationTrustOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationTrustOutput
}

type VirtualNodeSpecListenerTlsValidationTrustArgs struct {
	// TLS validation context trust for a local file certificate.
	File VirtualNodeSpecListenerTlsValidationTrustFilePtrInput `pulumi:"file"`
	// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
	Sds VirtualNodeSpecListenerTlsValidationTrustSdsPtrInput `pulumi:"sds"`
}

func (VirtualNodeSpecListenerTlsValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrust)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsValidationTrustArgs) ToVirtualNodeSpecListenerTlsValidationTrustOutput() VirtualNodeSpecListenerTlsValidationTrustOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationTrustArgs) ToVirtualNodeSpecListenerTlsValidationTrustOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustOutput)
}

func (i VirtualNodeSpecListenerTlsValidationTrustArgs) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutput() VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationTrustArgs) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustOutput).ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsValidationTrustPtrInput is an input type that accepts VirtualNodeSpecListenerTlsValidationTrustArgs, VirtualNodeSpecListenerTlsValidationTrustPtr and VirtualNodeSpecListenerTlsValidationTrustPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationTrustPtrInput` via:
//
//	        VirtualNodeSpecListenerTlsValidationTrustArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTlsValidationTrustPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationTrustPtrOutput() VirtualNodeSpecListenerTlsValidationTrustPtrOutput
	ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationTrustPtrOutput
}

type virtualNodeSpecListenerTlsValidationTrustPtrType VirtualNodeSpecListenerTlsValidationTrustArgs

func VirtualNodeSpecListenerTlsValidationTrustPtr(v *VirtualNodeSpecListenerTlsValidationTrustArgs) VirtualNodeSpecListenerTlsValidationTrustPtrInput {
	return (*virtualNodeSpecListenerTlsValidationTrustPtrType)(v)
}

func (*virtualNodeSpecListenerTlsValidationTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationTrust)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsValidationTrustPtrType) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutput() VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsValidationTrustPtrType) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrust)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationTrustOutput) ToVirtualNodeSpecListenerTlsValidationTrustOutput() VirtualNodeSpecListenerTlsValidationTrustOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustOutput) ToVirtualNodeSpecListenerTlsValidationTrustOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustOutput) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutput() VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsValidationTrustOutput) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsValidationTrust) *VirtualNodeSpecListenerTlsValidationTrust {
		return &v
	}).(VirtualNodeSpecListenerTlsValidationTrustPtrOutput)
}

// TLS validation context trust for a local file certificate.
func (o VirtualNodeSpecListenerTlsValidationTrustOutput) File() VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidationTrust) *VirtualNodeSpecListenerTlsValidationTrustFile {
		return v.File
	}).(VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput)
}

// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecListenerTlsValidationTrustOutput) Sds() VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidationTrust) *VirtualNodeSpecListenerTlsValidationTrustSds {
		return v.Sds
	}).(VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationTrust)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationTrustPtrOutput) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutput() VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustPtrOutput) ToVirtualNodeSpecListenerTlsValidationTrustPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustPtrOutput) Elem() VirtualNodeSpecListenerTlsValidationTrustOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationTrust) VirtualNodeSpecListenerTlsValidationTrust {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsValidationTrust
		return ret
	}).(VirtualNodeSpecListenerTlsValidationTrustOutput)
}

// TLS validation context trust for a local file certificate.
func (o VirtualNodeSpecListenerTlsValidationTrustPtrOutput) File() VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationTrust) *VirtualNodeSpecListenerTlsValidationTrustFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput)
}

// TLS validation context trust for a [Secret Discovery Service](https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds) certificate.
func (o VirtualNodeSpecListenerTlsValidationTrustPtrOutput) Sds() VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationTrust) *VirtualNodeSpecListenerTlsValidationTrustSds {
		if v == nil {
			return nil
		}
		return v.Sds
	}).(VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustFile struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain string `pulumi:"certificateChain"`
}

// VirtualNodeSpecListenerTlsValidationTrustFileInput is an input type that accepts VirtualNodeSpecListenerTlsValidationTrustFileArgs and VirtualNodeSpecListenerTlsValidationTrustFileOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationTrustFileInput` via:
//
//	VirtualNodeSpecListenerTlsValidationTrustFileArgs{...}
type VirtualNodeSpecListenerTlsValidationTrustFileInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationTrustFileOutput() VirtualNodeSpecListenerTlsValidationTrustFileOutput
	ToVirtualNodeSpecListenerTlsValidationTrustFileOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationTrustFileOutput
}

type VirtualNodeSpecListenerTlsValidationTrustFileArgs struct {
	// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (VirtualNodeSpecListenerTlsValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsValidationTrustFileArgs) ToVirtualNodeSpecListenerTlsValidationTrustFileOutput() VirtualNodeSpecListenerTlsValidationTrustFileOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustFileOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationTrustFileArgs) ToVirtualNodeSpecListenerTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustFileOutput)
}

func (i VirtualNodeSpecListenerTlsValidationTrustFileArgs) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutput() VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationTrustFileArgs) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustFileOutput).ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsValidationTrustFilePtrInput is an input type that accepts VirtualNodeSpecListenerTlsValidationTrustFileArgs, VirtualNodeSpecListenerTlsValidationTrustFilePtr and VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationTrustFilePtrInput` via:
//
//	        VirtualNodeSpecListenerTlsValidationTrustFileArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTlsValidationTrustFilePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutput() VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput
	ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput
}

type virtualNodeSpecListenerTlsValidationTrustFilePtrType VirtualNodeSpecListenerTlsValidationTrustFileArgs

func VirtualNodeSpecListenerTlsValidationTrustFilePtr(v *VirtualNodeSpecListenerTlsValidationTrustFileArgs) VirtualNodeSpecListenerTlsValidationTrustFilePtrInput {
	return (*virtualNodeSpecListenerTlsValidationTrustFilePtrType)(v)
}

func (*virtualNodeSpecListenerTlsValidationTrustFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsValidationTrustFilePtrType) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutput() VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsValidationTrustFilePtrType) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustFileOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationTrustFileOutput) ToVirtualNodeSpecListenerTlsValidationTrustFileOutput() VirtualNodeSpecListenerTlsValidationTrustFileOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustFileOutput) ToVirtualNodeSpecListenerTlsValidationTrustFileOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustFileOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustFileOutput) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutput() VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return o.ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsValidationTrustFileOutput) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsValidationTrustFile) *VirtualNodeSpecListenerTlsValidationTrustFile {
		return &v
	}).(VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecListenerTlsValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidationTrustFile) string { return v.CertificateChain }).(pulumi.StringOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationTrustFile)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutput() VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput) ToVirtualNodeSpecListenerTlsValidationTrustFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput) Elem() VirtualNodeSpecListenerTlsValidationTrustFileOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationTrustFile) VirtualNodeSpecListenerTlsValidationTrustFile {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsValidationTrustFile
		return ret
	}).(VirtualNodeSpecListenerTlsValidationTrustFileOutput)
}

// Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationTrustFile) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustSds struct {
	// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName string `pulumi:"secretName"`
}

// VirtualNodeSpecListenerTlsValidationTrustSdsInput is an input type that accepts VirtualNodeSpecListenerTlsValidationTrustSdsArgs and VirtualNodeSpecListenerTlsValidationTrustSdsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationTrustSdsInput` via:
//
//	VirtualNodeSpecListenerTlsValidationTrustSdsArgs{...}
type VirtualNodeSpecListenerTlsValidationTrustSdsInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationTrustSdsOutput() VirtualNodeSpecListenerTlsValidationTrustSdsOutput
	ToVirtualNodeSpecListenerTlsValidationTrustSdsOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsOutput
}

type VirtualNodeSpecListenerTlsValidationTrustSdsArgs struct {
	// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualNodeSpecListenerTlsValidationTrustSdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (i VirtualNodeSpecListenerTlsValidationTrustSdsArgs) ToVirtualNodeSpecListenerTlsValidationTrustSdsOutput() VirtualNodeSpecListenerTlsValidationTrustSdsOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustSdsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationTrustSdsArgs) ToVirtualNodeSpecListenerTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustSdsOutput)
}

func (i VirtualNodeSpecListenerTlsValidationTrustSdsArgs) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput() VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerTlsValidationTrustSdsArgs) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustSdsOutput).ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecListenerTlsValidationTrustSdsPtrInput is an input type that accepts VirtualNodeSpecListenerTlsValidationTrustSdsArgs, VirtualNodeSpecListenerTlsValidationTrustSdsPtr and VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecListenerTlsValidationTrustSdsPtrInput` via:
//
//	        VirtualNodeSpecListenerTlsValidationTrustSdsArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecListenerTlsValidationTrustSdsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput() VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput
	ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput
}

type virtualNodeSpecListenerTlsValidationTrustSdsPtrType VirtualNodeSpecListenerTlsValidationTrustSdsArgs

func VirtualNodeSpecListenerTlsValidationTrustSdsPtr(v *VirtualNodeSpecListenerTlsValidationTrustSdsArgs) VirtualNodeSpecListenerTlsValidationTrustSdsPtrInput {
	return (*virtualNodeSpecListenerTlsValidationTrustSdsPtrType)(v)
}

func (*virtualNodeSpecListenerTlsValidationTrustSdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (i *virtualNodeSpecListenerTlsValidationTrustSdsPtrType) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput() VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return i.ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerTlsValidationTrustSdsPtrType) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustSdsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationTrustSdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationTrustSdsOutput) ToVirtualNodeSpecListenerTlsValidationTrustSdsOutput() VirtualNodeSpecListenerTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustSdsOutput) ToVirtualNodeSpecListenerTlsValidationTrustSdsOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustSdsOutput) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput() VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerTlsValidationTrustSdsOutput) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecListenerTlsValidationTrustSds) *VirtualNodeSpecListenerTlsValidationTrustSds {
		return &v
	}).(VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput)
}

// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecListenerTlsValidationTrustSdsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerTlsValidationTrustSds) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerTlsValidationTrustSds)(nil)).Elem()
}

func (o VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput() VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput) ToVirtualNodeSpecListenerTlsValidationTrustSdsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput) Elem() VirtualNodeSpecListenerTlsValidationTrustSdsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationTrustSds) VirtualNodeSpecListenerTlsValidationTrustSds {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecListenerTlsValidationTrustSds
		return ret
	}).(VirtualNodeSpecListenerTlsValidationTrustSdsOutput)
}

// Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
func (o VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecListenerTlsValidationTrustSds) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecLogging struct {
	// Access log configuration for a virtual node.
	AccessLog *VirtualNodeSpecLoggingAccessLog `pulumi:"accessLog"`
}

// VirtualNodeSpecLoggingInput is an input type that accepts VirtualNodeSpecLoggingArgs and VirtualNodeSpecLoggingOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingInput` via:
//
//	VirtualNodeSpecLoggingArgs{...}
type VirtualNodeSpecLoggingInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingOutput() VirtualNodeSpecLoggingOutput
	ToVirtualNodeSpecLoggingOutputWithContext(context.Context) VirtualNodeSpecLoggingOutput
}

type VirtualNodeSpecLoggingArgs struct {
	// Access log configuration for a virtual node.
	AccessLog VirtualNodeSpecLoggingAccessLogPtrInput `pulumi:"accessLog"`
}

func (VirtualNodeSpecLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLogging)(nil)).Elem()
}

func (i VirtualNodeSpecLoggingArgs) ToVirtualNodeSpecLoggingOutput() VirtualNodeSpecLoggingOutput {
	return i.ToVirtualNodeSpecLoggingOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingArgs) ToVirtualNodeSpecLoggingOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingOutput)
}

func (i VirtualNodeSpecLoggingArgs) ToVirtualNodeSpecLoggingPtrOutput() VirtualNodeSpecLoggingPtrOutput {
	return i.ToVirtualNodeSpecLoggingPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingArgs) ToVirtualNodeSpecLoggingPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingOutput).ToVirtualNodeSpecLoggingPtrOutputWithContext(ctx)
}

// VirtualNodeSpecLoggingPtrInput is an input type that accepts VirtualNodeSpecLoggingArgs, VirtualNodeSpecLoggingPtr and VirtualNodeSpecLoggingPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingPtrInput` via:
//
//	        VirtualNodeSpecLoggingArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecLoggingPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingPtrOutput() VirtualNodeSpecLoggingPtrOutput
	ToVirtualNodeSpecLoggingPtrOutputWithContext(context.Context) VirtualNodeSpecLoggingPtrOutput
}

type virtualNodeSpecLoggingPtrType VirtualNodeSpecLoggingArgs

func VirtualNodeSpecLoggingPtr(v *VirtualNodeSpecLoggingArgs) VirtualNodeSpecLoggingPtrInput {
	return (*virtualNodeSpecLoggingPtrType)(v)
}

func (*virtualNodeSpecLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecLogging)(nil)).Elem()
}

func (i *virtualNodeSpecLoggingPtrType) ToVirtualNodeSpecLoggingPtrOutput() VirtualNodeSpecLoggingPtrOutput {
	return i.ToVirtualNodeSpecLoggingPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecLoggingPtrType) ToVirtualNodeSpecLoggingPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingPtrOutput)
}

type VirtualNodeSpecLoggingOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLogging)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingOutput) ToVirtualNodeSpecLoggingOutput() VirtualNodeSpecLoggingOutput {
	return o
}

func (o VirtualNodeSpecLoggingOutput) ToVirtualNodeSpecLoggingOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingOutput {
	return o
}

func (o VirtualNodeSpecLoggingOutput) ToVirtualNodeSpecLoggingPtrOutput() VirtualNodeSpecLoggingPtrOutput {
	return o.ToVirtualNodeSpecLoggingPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecLoggingOutput) ToVirtualNodeSpecLoggingPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecLogging) *VirtualNodeSpecLogging {
		return &v
	}).(VirtualNodeSpecLoggingPtrOutput)
}

// Access log configuration for a virtual node.
func (o VirtualNodeSpecLoggingOutput) AccessLog() VirtualNodeSpecLoggingAccessLogPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecLogging) *VirtualNodeSpecLoggingAccessLog { return v.AccessLog }).(VirtualNodeSpecLoggingAccessLogPtrOutput)
}

type VirtualNodeSpecLoggingPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecLogging)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingPtrOutput) ToVirtualNodeSpecLoggingPtrOutput() VirtualNodeSpecLoggingPtrOutput {
	return o
}

func (o VirtualNodeSpecLoggingPtrOutput) ToVirtualNodeSpecLoggingPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingPtrOutput {
	return o
}

func (o VirtualNodeSpecLoggingPtrOutput) Elem() VirtualNodeSpecLoggingOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLogging) VirtualNodeSpecLogging {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecLogging
		return ret
	}).(VirtualNodeSpecLoggingOutput)
}

// Access log configuration for a virtual node.
func (o VirtualNodeSpecLoggingPtrOutput) AccessLog() VirtualNodeSpecLoggingAccessLogPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLogging) *VirtualNodeSpecLoggingAccessLog {
		if v == nil {
			return nil
		}
		return v.AccessLog
	}).(VirtualNodeSpecLoggingAccessLogPtrOutput)
}

type VirtualNodeSpecLoggingAccessLog struct {
	// File object to send virtual node access logs to.
	File *VirtualNodeSpecLoggingAccessLogFile `pulumi:"file"`
}

// VirtualNodeSpecLoggingAccessLogInput is an input type that accepts VirtualNodeSpecLoggingAccessLogArgs and VirtualNodeSpecLoggingAccessLogOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingAccessLogInput` via:
//
//	VirtualNodeSpecLoggingAccessLogArgs{...}
type VirtualNodeSpecLoggingAccessLogInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingAccessLogOutput() VirtualNodeSpecLoggingAccessLogOutput
	ToVirtualNodeSpecLoggingAccessLogOutputWithContext(context.Context) VirtualNodeSpecLoggingAccessLogOutput
}

type VirtualNodeSpecLoggingAccessLogArgs struct {
	// File object to send virtual node access logs to.
	File VirtualNodeSpecLoggingAccessLogFilePtrInput `pulumi:"file"`
}

func (VirtualNodeSpecLoggingAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLoggingAccessLog)(nil)).Elem()
}

func (i VirtualNodeSpecLoggingAccessLogArgs) ToVirtualNodeSpecLoggingAccessLogOutput() VirtualNodeSpecLoggingAccessLogOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingAccessLogArgs) ToVirtualNodeSpecLoggingAccessLogOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogOutput)
}

func (i VirtualNodeSpecLoggingAccessLogArgs) ToVirtualNodeSpecLoggingAccessLogPtrOutput() VirtualNodeSpecLoggingAccessLogPtrOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingAccessLogArgs) ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogOutput).ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(ctx)
}

// VirtualNodeSpecLoggingAccessLogPtrInput is an input type that accepts VirtualNodeSpecLoggingAccessLogArgs, VirtualNodeSpecLoggingAccessLogPtr and VirtualNodeSpecLoggingAccessLogPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingAccessLogPtrInput` via:
//
//	        VirtualNodeSpecLoggingAccessLogArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecLoggingAccessLogPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingAccessLogPtrOutput() VirtualNodeSpecLoggingAccessLogPtrOutput
	ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(context.Context) VirtualNodeSpecLoggingAccessLogPtrOutput
}

type virtualNodeSpecLoggingAccessLogPtrType VirtualNodeSpecLoggingAccessLogArgs

func VirtualNodeSpecLoggingAccessLogPtr(v *VirtualNodeSpecLoggingAccessLogArgs) VirtualNodeSpecLoggingAccessLogPtrInput {
	return (*virtualNodeSpecLoggingAccessLogPtrType)(v)
}

func (*virtualNodeSpecLoggingAccessLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecLoggingAccessLog)(nil)).Elem()
}

func (i *virtualNodeSpecLoggingAccessLogPtrType) ToVirtualNodeSpecLoggingAccessLogPtrOutput() VirtualNodeSpecLoggingAccessLogPtrOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecLoggingAccessLogPtrType) ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogPtrOutput)
}

type VirtualNodeSpecLoggingAccessLogOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLoggingAccessLog)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingAccessLogOutput) ToVirtualNodeSpecLoggingAccessLogOutput() VirtualNodeSpecLoggingAccessLogOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogOutput) ToVirtualNodeSpecLoggingAccessLogOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogOutput) ToVirtualNodeSpecLoggingAccessLogPtrOutput() VirtualNodeSpecLoggingAccessLogPtrOutput {
	return o.ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecLoggingAccessLogOutput) ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecLoggingAccessLog) *VirtualNodeSpecLoggingAccessLog {
		return &v
	}).(VirtualNodeSpecLoggingAccessLogPtrOutput)
}

// File object to send virtual node access logs to.
func (o VirtualNodeSpecLoggingAccessLogOutput) File() VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecLoggingAccessLog) *VirtualNodeSpecLoggingAccessLogFile { return v.File }).(VirtualNodeSpecLoggingAccessLogFilePtrOutput)
}

type VirtualNodeSpecLoggingAccessLogPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingAccessLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecLoggingAccessLog)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingAccessLogPtrOutput) ToVirtualNodeSpecLoggingAccessLogPtrOutput() VirtualNodeSpecLoggingAccessLogPtrOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogPtrOutput) ToVirtualNodeSpecLoggingAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogPtrOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogPtrOutput) Elem() VirtualNodeSpecLoggingAccessLogOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLoggingAccessLog) VirtualNodeSpecLoggingAccessLog {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecLoggingAccessLog
		return ret
	}).(VirtualNodeSpecLoggingAccessLogOutput)
}

// File object to send virtual node access logs to.
func (o VirtualNodeSpecLoggingAccessLogPtrOutput) File() VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLoggingAccessLog) *VirtualNodeSpecLoggingAccessLogFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeSpecLoggingAccessLogFilePtrOutput)
}

type VirtualNodeSpecLoggingAccessLogFile struct {
	// The specified format for the logs.
	Format *VirtualNodeSpecLoggingAccessLogFileFormat `pulumi:"format"`
	// File path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
	Path string `pulumi:"path"`
}

// VirtualNodeSpecLoggingAccessLogFileInput is an input type that accepts VirtualNodeSpecLoggingAccessLogFileArgs and VirtualNodeSpecLoggingAccessLogFileOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingAccessLogFileInput` via:
//
//	VirtualNodeSpecLoggingAccessLogFileArgs{...}
type VirtualNodeSpecLoggingAccessLogFileInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingAccessLogFileOutput() VirtualNodeSpecLoggingAccessLogFileOutput
	ToVirtualNodeSpecLoggingAccessLogFileOutputWithContext(context.Context) VirtualNodeSpecLoggingAccessLogFileOutput
}

type VirtualNodeSpecLoggingAccessLogFileArgs struct {
	// The specified format for the logs.
	Format VirtualNodeSpecLoggingAccessLogFileFormatPtrInput `pulumi:"format"`
	// File path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
	Path pulumi.StringInput `pulumi:"path"`
}

func (VirtualNodeSpecLoggingAccessLogFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFile)(nil)).Elem()
}

func (i VirtualNodeSpecLoggingAccessLogFileArgs) ToVirtualNodeSpecLoggingAccessLogFileOutput() VirtualNodeSpecLoggingAccessLogFileOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogFileOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingAccessLogFileArgs) ToVirtualNodeSpecLoggingAccessLogFileOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogFileOutput)
}

func (i VirtualNodeSpecLoggingAccessLogFileArgs) ToVirtualNodeSpecLoggingAccessLogFilePtrOutput() VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingAccessLogFileArgs) ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogFileOutput).ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(ctx)
}

// VirtualNodeSpecLoggingAccessLogFilePtrInput is an input type that accepts VirtualNodeSpecLoggingAccessLogFileArgs, VirtualNodeSpecLoggingAccessLogFilePtr and VirtualNodeSpecLoggingAccessLogFilePtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingAccessLogFilePtrInput` via:
//
//	        VirtualNodeSpecLoggingAccessLogFileArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecLoggingAccessLogFilePtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingAccessLogFilePtrOutput() VirtualNodeSpecLoggingAccessLogFilePtrOutput
	ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(context.Context) VirtualNodeSpecLoggingAccessLogFilePtrOutput
}

type virtualNodeSpecLoggingAccessLogFilePtrType VirtualNodeSpecLoggingAccessLogFileArgs

func VirtualNodeSpecLoggingAccessLogFilePtr(v *VirtualNodeSpecLoggingAccessLogFileArgs) VirtualNodeSpecLoggingAccessLogFilePtrInput {
	return (*virtualNodeSpecLoggingAccessLogFilePtrType)(v)
}

func (*virtualNodeSpecLoggingAccessLogFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecLoggingAccessLogFile)(nil)).Elem()
}

func (i *virtualNodeSpecLoggingAccessLogFilePtrType) ToVirtualNodeSpecLoggingAccessLogFilePtrOutput() VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecLoggingAccessLogFilePtrType) ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogFilePtrOutput)
}

type VirtualNodeSpecLoggingAccessLogFileOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingAccessLogFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFile)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingAccessLogFileOutput) ToVirtualNodeSpecLoggingAccessLogFileOutput() VirtualNodeSpecLoggingAccessLogFileOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFileOutput) ToVirtualNodeSpecLoggingAccessLogFileOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFileOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFileOutput) ToVirtualNodeSpecLoggingAccessLogFilePtrOutput() VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return o.ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecLoggingAccessLogFileOutput) ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecLoggingAccessLogFile) *VirtualNodeSpecLoggingAccessLogFile {
		return &v
	}).(VirtualNodeSpecLoggingAccessLogFilePtrOutput)
}

// The specified format for the logs.
func (o VirtualNodeSpecLoggingAccessLogFileOutput) Format() VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecLoggingAccessLogFile) *VirtualNodeSpecLoggingAccessLogFileFormat {
		return v.Format
	}).(VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput)
}

// File path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecLoggingAccessLogFileOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecLoggingAccessLogFile) string { return v.Path }).(pulumi.StringOutput)
}

type VirtualNodeSpecLoggingAccessLogFilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingAccessLogFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecLoggingAccessLogFile)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingAccessLogFilePtrOutput) ToVirtualNodeSpecLoggingAccessLogFilePtrOutput() VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFilePtrOutput) ToVirtualNodeSpecLoggingAccessLogFilePtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFilePtrOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFilePtrOutput) Elem() VirtualNodeSpecLoggingAccessLogFileOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLoggingAccessLogFile) VirtualNodeSpecLoggingAccessLogFile {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecLoggingAccessLogFile
		return ret
	}).(VirtualNodeSpecLoggingAccessLogFileOutput)
}

// The specified format for the logs.
func (o VirtualNodeSpecLoggingAccessLogFilePtrOutput) Format() VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLoggingAccessLogFile) *VirtualNodeSpecLoggingAccessLogFileFormat {
		if v == nil {
			return nil
		}
		return v.Format
	}).(VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput)
}

// File path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.
func (o VirtualNodeSpecLoggingAccessLogFilePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLoggingAccessLogFile) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecLoggingAccessLogFileFormat struct {
	// The logging format for JSON.
	Jsons []VirtualNodeSpecLoggingAccessLogFileFormatJson `pulumi:"jsons"`
	// The logging format for text. Must be between 1 and 1000 characters in length.
	Text *string `pulumi:"text"`
}

// VirtualNodeSpecLoggingAccessLogFileFormatInput is an input type that accepts VirtualNodeSpecLoggingAccessLogFileFormatArgs and VirtualNodeSpecLoggingAccessLogFileFormatOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingAccessLogFileFormatInput` via:
//
//	VirtualNodeSpecLoggingAccessLogFileFormatArgs{...}
type VirtualNodeSpecLoggingAccessLogFileFormatInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingAccessLogFileFormatOutput() VirtualNodeSpecLoggingAccessLogFileFormatOutput
	ToVirtualNodeSpecLoggingAccessLogFileFormatOutputWithContext(context.Context) VirtualNodeSpecLoggingAccessLogFileFormatOutput
}

type VirtualNodeSpecLoggingAccessLogFileFormatArgs struct {
	// The logging format for JSON.
	Jsons VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayInput `pulumi:"jsons"`
	// The logging format for text. Must be between 1 and 1000 characters in length.
	Text pulumi.StringPtrInput `pulumi:"text"`
}

func (VirtualNodeSpecLoggingAccessLogFileFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (i VirtualNodeSpecLoggingAccessLogFileFormatArgs) ToVirtualNodeSpecLoggingAccessLogFileFormatOutput() VirtualNodeSpecLoggingAccessLogFileFormatOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogFileFormatOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingAccessLogFileFormatArgs) ToVirtualNodeSpecLoggingAccessLogFileFormatOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFileFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogFileFormatOutput)
}

func (i VirtualNodeSpecLoggingAccessLogFileFormatArgs) ToVirtualNodeSpecLoggingAccessLogFileFormatPtrOutput() VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogFileFormatPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingAccessLogFileFormatArgs) ToVirtualNodeSpecLoggingAccessLogFileFormatPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogFileFormatOutput).ToVirtualNodeSpecLoggingAccessLogFileFormatPtrOutputWithContext(ctx)
}

// VirtualNodeSpecLoggingAccessLogFileFormatPtrInput is an input type that accepts VirtualNodeSpecLoggingAccessLogFileFormatArgs, VirtualNodeSpecLoggingAccessLogFileFormatPtr and VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingAccessLogFileFormatPtrInput` via:
//
//	        VirtualNodeSpecLoggingAccessLogFileFormatArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecLoggingAccessLogFileFormatPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingAccessLogFileFormatPtrOutput() VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput
	ToVirtualNodeSpecLoggingAccessLogFileFormatPtrOutputWithContext(context.Context) VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput
}

type virtualNodeSpecLoggingAccessLogFileFormatPtrType VirtualNodeSpecLoggingAccessLogFileFormatArgs

func VirtualNodeSpecLoggingAccessLogFileFormatPtr(v *VirtualNodeSpecLoggingAccessLogFileFormatArgs) VirtualNodeSpecLoggingAccessLogFileFormatPtrInput {
	return (*virtualNodeSpecLoggingAccessLogFileFormatPtrType)(v)
}

func (*virtualNodeSpecLoggingAccessLogFileFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (i *virtualNodeSpecLoggingAccessLogFileFormatPtrType) ToVirtualNodeSpecLoggingAccessLogFileFormatPtrOutput() VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogFileFormatPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecLoggingAccessLogFileFormatPtrType) ToVirtualNodeSpecLoggingAccessLogFileFormatPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput)
}

type VirtualNodeSpecLoggingAccessLogFileFormatOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingAccessLogFileFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingAccessLogFileFormatOutput) ToVirtualNodeSpecLoggingAccessLogFileFormatOutput() VirtualNodeSpecLoggingAccessLogFileFormatOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFileFormatOutput) ToVirtualNodeSpecLoggingAccessLogFileFormatOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFileFormatOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFileFormatOutput) ToVirtualNodeSpecLoggingAccessLogFileFormatPtrOutput() VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput {
	return o.ToVirtualNodeSpecLoggingAccessLogFileFormatPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecLoggingAccessLogFileFormatOutput) ToVirtualNodeSpecLoggingAccessLogFileFormatPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecLoggingAccessLogFileFormat) *VirtualNodeSpecLoggingAccessLogFileFormat {
		return &v
	}).(VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput)
}

// The logging format for JSON.
func (o VirtualNodeSpecLoggingAccessLogFileFormatOutput) Jsons() VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpecLoggingAccessLogFileFormat) []VirtualNodeSpecLoggingAccessLogFileFormatJson {
		return v.Jsons
	}).(VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput)
}

// The logging format for text. Must be between 1 and 1000 characters in length.
func (o VirtualNodeSpecLoggingAccessLogFileFormatOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecLoggingAccessLogFileFormat) *string { return v.Text }).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput) ToVirtualNodeSpecLoggingAccessLogFileFormatPtrOutput() VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput) ToVirtualNodeSpecLoggingAccessLogFileFormatPtrOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput) Elem() VirtualNodeSpecLoggingAccessLogFileFormatOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLoggingAccessLogFileFormat) VirtualNodeSpecLoggingAccessLogFileFormat {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecLoggingAccessLogFileFormat
		return ret
	}).(VirtualNodeSpecLoggingAccessLogFileFormatOutput)
}

// The logging format for JSON.
func (o VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput) Jsons() VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLoggingAccessLogFileFormat) []VirtualNodeSpecLoggingAccessLogFileFormatJson {
		if v == nil {
			return nil
		}
		return v.Jsons
	}).(VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput)
}

// The logging format for text. Must be between 1 and 1000 characters in length.
func (o VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecLoggingAccessLogFileFormat) *string {
		if v == nil {
			return nil
		}
		return v.Text
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecLoggingAccessLogFileFormatJson struct {
	// The specified key for the JSON. Must be between 1 and 100 characters in length.
	Key string `pulumi:"key"`
	// The specified value for the JSON. Must be between 1 and 100 characters in length.
	Value string `pulumi:"value"`
}

// VirtualNodeSpecLoggingAccessLogFileFormatJsonInput is an input type that accepts VirtualNodeSpecLoggingAccessLogFileFormatJsonArgs and VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingAccessLogFileFormatJsonInput` via:
//
//	VirtualNodeSpecLoggingAccessLogFileFormatJsonArgs{...}
type VirtualNodeSpecLoggingAccessLogFileFormatJsonInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput() VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput
	ToVirtualNodeSpecLoggingAccessLogFileFormatJsonOutputWithContext(context.Context) VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput
}

type VirtualNodeSpecLoggingAccessLogFileFormatJsonArgs struct {
	// The specified key for the JSON. Must be between 1 and 100 characters in length.
	Key pulumi.StringInput `pulumi:"key"`
	// The specified value for the JSON. Must be between 1 and 100 characters in length.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VirtualNodeSpecLoggingAccessLogFileFormatJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (i VirtualNodeSpecLoggingAccessLogFileFormatJsonArgs) ToVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput() VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogFileFormatJsonOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingAccessLogFileFormatJsonArgs) ToVirtualNodeSpecLoggingAccessLogFileFormatJsonOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput)
}

// VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayInput is an input type that accepts VirtualNodeSpecLoggingAccessLogFileFormatJsonArray and VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput values.
// You can construct a concrete instance of `VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayInput` via:
//
//	VirtualNodeSpecLoggingAccessLogFileFormatJsonArray{ VirtualNodeSpecLoggingAccessLogFileFormatJsonArgs{...} }
type VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayInput interface {
	pulumi.Input

	ToVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput() VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput
	ToVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(context.Context) VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput
}

type VirtualNodeSpecLoggingAccessLogFileFormatJsonArray []VirtualNodeSpecLoggingAccessLogFileFormatJsonInput

func (VirtualNodeSpecLoggingAccessLogFileFormatJsonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeSpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (i VirtualNodeSpecLoggingAccessLogFileFormatJsonArray) ToVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput() VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput {
	return i.ToVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(context.Background())
}

func (i VirtualNodeSpecLoggingAccessLogFileFormatJsonArray) ToVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput)
}

type VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput) ToVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput() VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput) ToVirtualNodeSpecLoggingAccessLogFileFormatJsonOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput {
	return o
}

// The specified key for the JSON. Must be between 1 and 100 characters in length.
func (o VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecLoggingAccessLogFileFormatJson) string { return v.Key }).(pulumi.StringOutput)
}

// The specified value for the JSON. Must be between 1 and 100 characters in length.
func (o VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecLoggingAccessLogFileFormatJson) string { return v.Value }).(pulumi.StringOutput)
}

type VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeSpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (o VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput) ToVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput() VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput) ToVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(ctx context.Context) VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput {
	return o
}

func (o VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput) Index(i pulumi.IntInput) VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNodeSpecLoggingAccessLogFileFormatJson {
		return vs[0].([]VirtualNodeSpecLoggingAccessLogFileFormatJson)[vs[1].(int)]
	}).(VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput)
}

type VirtualNodeSpecServiceDiscovery struct {
	// Any AWS Cloud Map information for the virtual node.
	AwsCloudMap *VirtualNodeSpecServiceDiscoveryAwsCloudMap `pulumi:"awsCloudMap"`
	// DNS service name for the virtual node.
	Dns *VirtualNodeSpecServiceDiscoveryDns `pulumi:"dns"`
}

// VirtualNodeSpecServiceDiscoveryInput is an input type that accepts VirtualNodeSpecServiceDiscoveryArgs and VirtualNodeSpecServiceDiscoveryOutput values.
// You can construct a concrete instance of `VirtualNodeSpecServiceDiscoveryInput` via:
//
//	VirtualNodeSpecServiceDiscoveryArgs{...}
type VirtualNodeSpecServiceDiscoveryInput interface {
	pulumi.Input

	ToVirtualNodeSpecServiceDiscoveryOutput() VirtualNodeSpecServiceDiscoveryOutput
	ToVirtualNodeSpecServiceDiscoveryOutputWithContext(context.Context) VirtualNodeSpecServiceDiscoveryOutput
}

type VirtualNodeSpecServiceDiscoveryArgs struct {
	// Any AWS Cloud Map information for the virtual node.
	AwsCloudMap VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrInput `pulumi:"awsCloudMap"`
	// DNS service name for the virtual node.
	Dns VirtualNodeSpecServiceDiscoveryDnsPtrInput `pulumi:"dns"`
}

func (VirtualNodeSpecServiceDiscoveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecServiceDiscovery)(nil)).Elem()
}

func (i VirtualNodeSpecServiceDiscoveryArgs) ToVirtualNodeSpecServiceDiscoveryOutput() VirtualNodeSpecServiceDiscoveryOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryOutputWithContext(context.Background())
}

func (i VirtualNodeSpecServiceDiscoveryArgs) ToVirtualNodeSpecServiceDiscoveryOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryOutput)
}

func (i VirtualNodeSpecServiceDiscoveryArgs) ToVirtualNodeSpecServiceDiscoveryPtrOutput() VirtualNodeSpecServiceDiscoveryPtrOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecServiceDiscoveryArgs) ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryOutput).ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(ctx)
}

// VirtualNodeSpecServiceDiscoveryPtrInput is an input type that accepts VirtualNodeSpecServiceDiscoveryArgs, VirtualNodeSpecServiceDiscoveryPtr and VirtualNodeSpecServiceDiscoveryPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecServiceDiscoveryPtrInput` via:
//
//	        VirtualNodeSpecServiceDiscoveryArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecServiceDiscoveryPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecServiceDiscoveryPtrOutput() VirtualNodeSpecServiceDiscoveryPtrOutput
	ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(context.Context) VirtualNodeSpecServiceDiscoveryPtrOutput
}

type virtualNodeSpecServiceDiscoveryPtrType VirtualNodeSpecServiceDiscoveryArgs

func VirtualNodeSpecServiceDiscoveryPtr(v *VirtualNodeSpecServiceDiscoveryArgs) VirtualNodeSpecServiceDiscoveryPtrInput {
	return (*virtualNodeSpecServiceDiscoveryPtrType)(v)
}

func (*virtualNodeSpecServiceDiscoveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecServiceDiscovery)(nil)).Elem()
}

func (i *virtualNodeSpecServiceDiscoveryPtrType) ToVirtualNodeSpecServiceDiscoveryPtrOutput() VirtualNodeSpecServiceDiscoveryPtrOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecServiceDiscoveryPtrType) ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryPtrOutput)
}

type VirtualNodeSpecServiceDiscoveryOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecServiceDiscoveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecServiceDiscovery)(nil)).Elem()
}

func (o VirtualNodeSpecServiceDiscoveryOutput) ToVirtualNodeSpecServiceDiscoveryOutput() VirtualNodeSpecServiceDiscoveryOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryOutput) ToVirtualNodeSpecServiceDiscoveryOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryOutput) ToVirtualNodeSpecServiceDiscoveryPtrOutput() VirtualNodeSpecServiceDiscoveryPtrOutput {
	return o.ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecServiceDiscoveryOutput) ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecServiceDiscovery) *VirtualNodeSpecServiceDiscovery {
		return &v
	}).(VirtualNodeSpecServiceDiscoveryPtrOutput)
}

// Any AWS Cloud Map information for the virtual node.
func (o VirtualNodeSpecServiceDiscoveryOutput) AwsCloudMap() VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecServiceDiscovery) *VirtualNodeSpecServiceDiscoveryAwsCloudMap {
		return v.AwsCloudMap
	}).(VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput)
}

// DNS service name for the virtual node.
func (o VirtualNodeSpecServiceDiscoveryOutput) Dns() VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecServiceDiscovery) *VirtualNodeSpecServiceDiscoveryDns { return v.Dns }).(VirtualNodeSpecServiceDiscoveryDnsPtrOutput)
}

type VirtualNodeSpecServiceDiscoveryPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecServiceDiscoveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecServiceDiscovery)(nil)).Elem()
}

func (o VirtualNodeSpecServiceDiscoveryPtrOutput) ToVirtualNodeSpecServiceDiscoveryPtrOutput() VirtualNodeSpecServiceDiscoveryPtrOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryPtrOutput) ToVirtualNodeSpecServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryPtrOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryPtrOutput) Elem() VirtualNodeSpecServiceDiscoveryOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscovery) VirtualNodeSpecServiceDiscovery {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecServiceDiscovery
		return ret
	}).(VirtualNodeSpecServiceDiscoveryOutput)
}

// Any AWS Cloud Map information for the virtual node.
func (o VirtualNodeSpecServiceDiscoveryPtrOutput) AwsCloudMap() VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscovery) *VirtualNodeSpecServiceDiscoveryAwsCloudMap {
		if v == nil {
			return nil
		}
		return v.AwsCloudMap
	}).(VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput)
}

// DNS service name for the virtual node.
func (o VirtualNodeSpecServiceDiscoveryPtrOutput) Dns() VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscovery) *VirtualNodeSpecServiceDiscoveryDns {
		if v == nil {
			return nil
		}
		return v.Dns
	}).(VirtualNodeSpecServiceDiscoveryDnsPtrOutput)
}

type VirtualNodeSpecServiceDiscoveryAwsCloudMap struct {
	// String map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
	Attributes map[string]string `pulumi:"attributes"`
	// Name of the AWS Cloud Map namespace to use.
	// Use the `servicediscovery.HttpNamespace` resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
	NamespaceName string `pulumi:"namespaceName"`
	// Name of the AWS Cloud Map service to use. Use the `servicediscovery.Service` resource to configure a Cloud Map service. Must be between 1 and 1024 characters in length.
	ServiceName string `pulumi:"serviceName"`
}

// VirtualNodeSpecServiceDiscoveryAwsCloudMapInput is an input type that accepts VirtualNodeSpecServiceDiscoveryAwsCloudMap and VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput values.
// You can construct a concrete instance of `VirtualNodeSpecServiceDiscoveryAwsCloudMapInput` via:
//
//	VirtualNodeSpecServiceDiscoveryAwsCloudMap{ "key": VirtualNodeSpecServiceDiscoveryAwsCloudArgs{...} }
type VirtualNodeSpecServiceDiscoveryAwsCloudMapInput interface {
	pulumi.Input

	ToVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput
	ToVirtualNodeSpecServiceDiscoveryAwsCloudMapOutputWithContext(context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput
}

type VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs struct {
	// String map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
	Attributes pulumi.StringMapInput `pulumi:"attributes"`
	// Name of the AWS Cloud Map namespace to use.
	// Use the `servicediscovery.HttpNamespace` resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// Name of the AWS Cloud Map service to use. Use the `servicediscovery.Service` resource to configure a Cloud Map service. Must be between 1 and 1024 characters in length.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryAwsCloudMap)(nil)).Elem()
}

func (i VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryAwsCloudMapOutputWithContext(context.Background())
}

func (i VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput)
}

func (i VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput).ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(ctx)
}

// VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrInput is an input type that accepts VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs, VirtualNodeSpecServiceDiscoveryAwsCloudMapPtr and VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrInput` via:
//
//	        VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput
	ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput
}

type virtualNodeSpecServiceDiscoveryAwsCloudMapPtrType VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs

func VirtualNodeSpecServiceDiscoveryAwsCloudMapPtr(v *VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrInput {
	return (*virtualNodeSpecServiceDiscoveryAwsCloudMapPtrType)(v)
}

func (*virtualNodeSpecServiceDiscoveryAwsCloudMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecServiceDiscoveryAwsCloudMap)(nil)).Elem()
}

func (i *virtualNodeSpecServiceDiscoveryAwsCloudMapPtrType) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecServiceDiscoveryAwsCloudMapPtrType) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput)
}

type VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryAwsCloudMap)(nil)).Elem()
}

func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return o.ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecServiceDiscoveryAwsCloudMap) *VirtualNodeSpecServiceDiscoveryAwsCloudMap {
		return &v
	}).(VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput)
}

// String map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNodeSpecServiceDiscoveryAwsCloudMap) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

// Name of the AWS Cloud Map namespace to use.
// Use the `servicediscovery.HttpNamespace` resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecServiceDiscoveryAwsCloudMap) string { return v.NamespaceName }).(pulumi.StringOutput)
}

// Name of the AWS Cloud Map service to use. Use the `servicediscovery.Service` resource to configure a Cloud Map service. Must be between 1 and 1024 characters in length.
func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecServiceDiscoveryAwsCloudMap) string { return v.ServiceName }).(pulumi.StringOutput)
}

type VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecServiceDiscoveryAwsCloudMap)(nil)).Elem()
}

func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput() VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput) ToVirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput) Elem() VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscoveryAwsCloudMap) VirtualNodeSpecServiceDiscoveryAwsCloudMap {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecServiceDiscoveryAwsCloudMap
		return ret
	}).(VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput)
}

// String map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscoveryAwsCloudMap) map[string]string {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.StringMapOutput)
}

// Name of the AWS Cloud Map namespace to use.
// Use the `servicediscovery.HttpNamespace` resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput) NamespaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscoveryAwsCloudMap) *string {
		if v == nil {
			return nil
		}
		return &v.NamespaceName
	}).(pulumi.StringPtrOutput)
}

// Name of the AWS Cloud Map service to use. Use the `servicediscovery.Service` resource to configure a Cloud Map service. Must be between 1 and 1024 characters in length.
func (o VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscoveryAwsCloudMap) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecServiceDiscoveryDns struct {
	// DNS host name for your virtual node.
	Hostname string `pulumi:"hostname"`
	// The preferred IP version that this virtual node uses. Valid values: `IPv6_PREFERRED`, `IPv4_PREFERRED`, `IPv4_ONLY`, `IPv6_ONLY`.
	IpPreference *string `pulumi:"ipPreference"`
	// The DNS response type for the virtual node. Valid values: `LOADBALANCER`, `ENDPOINTS`.
	ResponseType *string `pulumi:"responseType"`
}

// VirtualNodeSpecServiceDiscoveryDnsInput is an input type that accepts VirtualNodeSpecServiceDiscoveryDnsArgs and VirtualNodeSpecServiceDiscoveryDnsOutput values.
// You can construct a concrete instance of `VirtualNodeSpecServiceDiscoveryDnsInput` via:
//
//	VirtualNodeSpecServiceDiscoveryDnsArgs{...}
type VirtualNodeSpecServiceDiscoveryDnsInput interface {
	pulumi.Input

	ToVirtualNodeSpecServiceDiscoveryDnsOutput() VirtualNodeSpecServiceDiscoveryDnsOutput
	ToVirtualNodeSpecServiceDiscoveryDnsOutputWithContext(context.Context) VirtualNodeSpecServiceDiscoveryDnsOutput
}

type VirtualNodeSpecServiceDiscoveryDnsArgs struct {
	// DNS host name for your virtual node.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The preferred IP version that this virtual node uses. Valid values: `IPv6_PREFERRED`, `IPv4_PREFERRED`, `IPv4_ONLY`, `IPv6_ONLY`.
	IpPreference pulumi.StringPtrInput `pulumi:"ipPreference"`
	// The DNS response type for the virtual node. Valid values: `LOADBALANCER`, `ENDPOINTS`.
	ResponseType pulumi.StringPtrInput `pulumi:"responseType"`
}

func (VirtualNodeSpecServiceDiscoveryDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryDns)(nil)).Elem()
}

func (i VirtualNodeSpecServiceDiscoveryDnsArgs) ToVirtualNodeSpecServiceDiscoveryDnsOutput() VirtualNodeSpecServiceDiscoveryDnsOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryDnsOutputWithContext(context.Background())
}

func (i VirtualNodeSpecServiceDiscoveryDnsArgs) ToVirtualNodeSpecServiceDiscoveryDnsOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryDnsOutput)
}

func (i VirtualNodeSpecServiceDiscoveryDnsArgs) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutput() VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecServiceDiscoveryDnsArgs) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryDnsOutput).ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(ctx)
}

// VirtualNodeSpecServiceDiscoveryDnsPtrInput is an input type that accepts VirtualNodeSpecServiceDiscoveryDnsArgs, VirtualNodeSpecServiceDiscoveryDnsPtr and VirtualNodeSpecServiceDiscoveryDnsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecServiceDiscoveryDnsPtrInput` via:
//
//	        VirtualNodeSpecServiceDiscoveryDnsArgs{...}
//
//	or:
//
//	        nil
type VirtualNodeSpecServiceDiscoveryDnsPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecServiceDiscoveryDnsPtrOutput() VirtualNodeSpecServiceDiscoveryDnsPtrOutput
	ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(context.Context) VirtualNodeSpecServiceDiscoveryDnsPtrOutput
}

type virtualNodeSpecServiceDiscoveryDnsPtrType VirtualNodeSpecServiceDiscoveryDnsArgs

func VirtualNodeSpecServiceDiscoveryDnsPtr(v *VirtualNodeSpecServiceDiscoveryDnsArgs) VirtualNodeSpecServiceDiscoveryDnsPtrInput {
	return (*virtualNodeSpecServiceDiscoveryDnsPtrType)(v)
}

func (*virtualNodeSpecServiceDiscoveryDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecServiceDiscoveryDns)(nil)).Elem()
}

func (i *virtualNodeSpecServiceDiscoveryDnsPtrType) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutput() VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return i.ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecServiceDiscoveryDnsPtrType) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecServiceDiscoveryDnsPtrOutput)
}

type VirtualNodeSpecServiceDiscoveryDnsOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecServiceDiscoveryDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryDns)(nil)).Elem()
}

func (o VirtualNodeSpecServiceDiscoveryDnsOutput) ToVirtualNodeSpecServiceDiscoveryDnsOutput() VirtualNodeSpecServiceDiscoveryDnsOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryDnsOutput) ToVirtualNodeSpecServiceDiscoveryDnsOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryDnsOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryDnsOutput) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutput() VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return o.ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecServiceDiscoveryDnsOutput) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpecServiceDiscoveryDns) *VirtualNodeSpecServiceDiscoveryDns {
		return &v
	}).(VirtualNodeSpecServiceDiscoveryDnsPtrOutput)
}

// DNS host name for your virtual node.
func (o VirtualNodeSpecServiceDiscoveryDnsOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeSpecServiceDiscoveryDns) string { return v.Hostname }).(pulumi.StringOutput)
}

// The preferred IP version that this virtual node uses. Valid values: `IPv6_PREFERRED`, `IPv4_PREFERRED`, `IPv4_ONLY`, `IPv6_ONLY`.
func (o VirtualNodeSpecServiceDiscoveryDnsOutput) IpPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecServiceDiscoveryDns) *string { return v.IpPreference }).(pulumi.StringPtrOutput)
}

// The DNS response type for the virtual node. Valid values: `LOADBALANCER`, `ENDPOINTS`.
func (o VirtualNodeSpecServiceDiscoveryDnsOutput) ResponseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecServiceDiscoveryDns) *string { return v.ResponseType }).(pulumi.StringPtrOutput)
}

type VirtualNodeSpecServiceDiscoveryDnsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecServiceDiscoveryDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecServiceDiscoveryDns)(nil)).Elem()
}

func (o VirtualNodeSpecServiceDiscoveryDnsPtrOutput) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutput() VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryDnsPtrOutput) ToVirtualNodeSpecServiceDiscoveryDnsPtrOutputWithContext(ctx context.Context) VirtualNodeSpecServiceDiscoveryDnsPtrOutput {
	return o
}

func (o VirtualNodeSpecServiceDiscoveryDnsPtrOutput) Elem() VirtualNodeSpecServiceDiscoveryDnsOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscoveryDns) VirtualNodeSpecServiceDiscoveryDns {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpecServiceDiscoveryDns
		return ret
	}).(VirtualNodeSpecServiceDiscoveryDnsOutput)
}

// DNS host name for your virtual node.
func (o VirtualNodeSpecServiceDiscoveryDnsPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscoveryDns) *string {
		if v == nil {
			return nil
		}
		return &v.Hostname
	}).(pulumi.StringPtrOutput)
}

// The preferred IP version that this virtual node uses. Valid values: `IPv6_PREFERRED`, `IPv4_PREFERRED`, `IPv4_ONLY`, `IPv6_ONLY`.
func (o VirtualNodeSpecServiceDiscoveryDnsPtrOutput) IpPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscoveryDns) *string {
		if v == nil {
			return nil
		}
		return v.IpPreference
	}).(pulumi.StringPtrOutput)
}

// The DNS response type for the virtual node. Valid values: `LOADBALANCER`, `ENDPOINTS`.
func (o VirtualNodeSpecServiceDiscoveryDnsPtrOutput) ResponseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpecServiceDiscoveryDns) *string {
		if v == nil {
			return nil
		}
		return v.ResponseType
	}).(pulumi.StringPtrOutput)
}

type VirtualRouterSpec struct {
	// Listeners that the virtual router is expected to receive inbound traffic from.
	// Currently only one listener is supported per virtual router.
	Listeners []VirtualRouterSpecListener `pulumi:"listeners"`
}

// VirtualRouterSpecInput is an input type that accepts VirtualRouterSpecArgs and VirtualRouterSpecOutput values.
// You can construct a concrete instance of `VirtualRouterSpecInput` via:
//
//	VirtualRouterSpecArgs{...}
type VirtualRouterSpecInput interface {
	pulumi.Input

	ToVirtualRouterSpecOutput() VirtualRouterSpecOutput
	ToVirtualRouterSpecOutputWithContext(context.Context) VirtualRouterSpecOutput
}

type VirtualRouterSpecArgs struct {
	// Listeners that the virtual router is expected to receive inbound traffic from.
	// Currently only one listener is supported per virtual router.
	Listeners VirtualRouterSpecListenerArrayInput `pulumi:"listeners"`
}

func (VirtualRouterSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterSpec)(nil)).Elem()
}

func (i VirtualRouterSpecArgs) ToVirtualRouterSpecOutput() VirtualRouterSpecOutput {
	return i.ToVirtualRouterSpecOutputWithContext(context.Background())
}

func (i VirtualRouterSpecArgs) ToVirtualRouterSpecOutputWithContext(ctx context.Context) VirtualRouterSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecOutput)
}

func (i VirtualRouterSpecArgs) ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput {
	return i.ToVirtualRouterSpecPtrOutputWithContext(context.Background())
}

func (i VirtualRouterSpecArgs) ToVirtualRouterSpecPtrOutputWithContext(ctx context.Context) VirtualRouterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecOutput).ToVirtualRouterSpecPtrOutputWithContext(ctx)
}

// VirtualRouterSpecPtrInput is an input type that accepts VirtualRouterSpecArgs, VirtualRouterSpecPtr and VirtualRouterSpecPtrOutput values.
// You can construct a concrete instance of `VirtualRouterSpecPtrInput` via:
//
//	        VirtualRouterSpecArgs{...}
//
//	or:
//
//	        nil
type VirtualRouterSpecPtrInput interface {
	pulumi.Input

	ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput
	ToVirtualRouterSpecPtrOutputWithContext(context.Context) VirtualRouterSpecPtrOutput
}

type virtualRouterSpecPtrType VirtualRouterSpecArgs

func VirtualRouterSpecPtr(v *VirtualRouterSpecArgs) VirtualRouterSpecPtrInput {
	return (*virtualRouterSpecPtrType)(v)
}

func (*virtualRouterSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterSpec)(nil)).Elem()
}

func (i *virtualRouterSpecPtrType) ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput {
	return i.ToVirtualRouterSpecPtrOutputWithContext(context.Background())
}

func (i *virtualRouterSpecPtrType) ToVirtualRouterSpecPtrOutputWithContext(ctx context.Context) VirtualRouterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecPtrOutput)
}

type VirtualRouterSpecOutput struct{ *pulumi.OutputState }

func (VirtualRouterSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterSpec)(nil)).Elem()
}

func (o VirtualRouterSpecOutput) ToVirtualRouterSpecOutput() VirtualRouterSpecOutput {
	return o
}

func (o VirtualRouterSpecOutput) ToVirtualRouterSpecOutputWithContext(ctx context.Context) VirtualRouterSpecOutput {
	return o
}

func (o VirtualRouterSpecOutput) ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput {
	return o.ToVirtualRouterSpecPtrOutputWithContext(context.Background())
}

func (o VirtualRouterSpecOutput) ToVirtualRouterSpecPtrOutputWithContext(ctx context.Context) VirtualRouterSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualRouterSpec) *VirtualRouterSpec {
		return &v
	}).(VirtualRouterSpecPtrOutput)
}

// Listeners that the virtual router is expected to receive inbound traffic from.
// Currently only one listener is supported per virtual router.
func (o VirtualRouterSpecOutput) Listeners() VirtualRouterSpecListenerArrayOutput {
	return o.ApplyT(func(v VirtualRouterSpec) []VirtualRouterSpecListener { return v.Listeners }).(VirtualRouterSpecListenerArrayOutput)
}

type VirtualRouterSpecPtrOutput struct{ *pulumi.OutputState }

func (VirtualRouterSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterSpec)(nil)).Elem()
}

func (o VirtualRouterSpecPtrOutput) ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput {
	return o
}

func (o VirtualRouterSpecPtrOutput) ToVirtualRouterSpecPtrOutputWithContext(ctx context.Context) VirtualRouterSpecPtrOutput {
	return o
}

func (o VirtualRouterSpecPtrOutput) Elem() VirtualRouterSpecOutput {
	return o.ApplyT(func(v *VirtualRouterSpec) VirtualRouterSpec {
		if v != nil {
			return *v
		}
		var ret VirtualRouterSpec
		return ret
	}).(VirtualRouterSpecOutput)
}

// Listeners that the virtual router is expected to receive inbound traffic from.
// Currently only one listener is supported per virtual router.
func (o VirtualRouterSpecPtrOutput) Listeners() VirtualRouterSpecListenerArrayOutput {
	return o.ApplyT(func(v *VirtualRouterSpec) []VirtualRouterSpecListener {
		if v == nil {
			return nil
		}
		return v.Listeners
	}).(VirtualRouterSpecListenerArrayOutput)
}

type VirtualRouterSpecListener struct {
	// Port mapping information for the listener.
	PortMapping VirtualRouterSpecListenerPortMapping `pulumi:"portMapping"`
}

// VirtualRouterSpecListenerInput is an input type that accepts VirtualRouterSpecListenerArgs and VirtualRouterSpecListenerOutput values.
// You can construct a concrete instance of `VirtualRouterSpecListenerInput` via:
//
//	VirtualRouterSpecListenerArgs{...}
type VirtualRouterSpecListenerInput interface {
	pulumi.Input

	ToVirtualRouterSpecListenerOutput() VirtualRouterSpecListenerOutput
	ToVirtualRouterSpecListenerOutputWithContext(context.Context) VirtualRouterSpecListenerOutput
}

type VirtualRouterSpecListenerArgs struct {
	// Port mapping information for the listener.
	PortMapping VirtualRouterSpecListenerPortMappingInput `pulumi:"portMapping"`
}

func (VirtualRouterSpecListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterSpecListener)(nil)).Elem()
}

func (i VirtualRouterSpecListenerArgs) ToVirtualRouterSpecListenerOutput() VirtualRouterSpecListenerOutput {
	return i.ToVirtualRouterSpecListenerOutputWithContext(context.Background())
}

func (i VirtualRouterSpecListenerArgs) ToVirtualRouterSpecListenerOutputWithContext(ctx context.Context) VirtualRouterSpecListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecListenerOutput)
}

// VirtualRouterSpecListenerArrayInput is an input type that accepts VirtualRouterSpecListenerArray and VirtualRouterSpecListenerArrayOutput values.
// You can construct a concrete instance of `VirtualRouterSpecListenerArrayInput` via:
//
//	VirtualRouterSpecListenerArray{ VirtualRouterSpecListenerArgs{...} }
type VirtualRouterSpecListenerArrayInput interface {
	pulumi.Input

	ToVirtualRouterSpecListenerArrayOutput() VirtualRouterSpecListenerArrayOutput
	ToVirtualRouterSpecListenerArrayOutputWithContext(context.Context) VirtualRouterSpecListenerArrayOutput
}

type VirtualRouterSpecListenerArray []VirtualRouterSpecListenerInput

func (VirtualRouterSpecListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualRouterSpecListener)(nil)).Elem()
}

func (i VirtualRouterSpecListenerArray) ToVirtualRouterSpecListenerArrayOutput() VirtualRouterSpecListenerArrayOutput {
	return i.ToVirtualRouterSpecListenerArrayOutputWithContext(context.Background())
}

func (i VirtualRouterSpecListenerArray) ToVirtualRouterSpecListenerArrayOutputWithContext(ctx context.Context) VirtualRouterSpecListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecListenerArrayOutput)
}

type VirtualRouterSpecListenerOutput struct{ *pulumi.OutputState }

func (VirtualRouterSpecListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterSpecListener)(nil)).Elem()
}

func (o VirtualRouterSpecListenerOutput) ToVirtualRouterSpecListenerOutput() VirtualRouterSpecListenerOutput {
	return o
}

func (o VirtualRouterSpecListenerOutput) ToVirtualRouterSpecListenerOutputWithContext(ctx context.Context) VirtualRouterSpecListenerOutput {
	return o
}

// Port mapping information for the listener.
func (o VirtualRouterSpecListenerOutput) PortMapping() VirtualRouterSpecListenerPortMappingOutput {
	return o.ApplyT(func(v VirtualRouterSpecListener) VirtualRouterSpecListenerPortMapping { return v.PortMapping }).(VirtualRouterSpecListenerPortMappingOutput)
}

type VirtualRouterSpecListenerArrayOutput struct{ *pulumi.OutputState }

func (VirtualRouterSpecListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualRouterSpecListener)(nil)).Elem()
}

func (o VirtualRouterSpecListenerArrayOutput) ToVirtualRouterSpecListenerArrayOutput() VirtualRouterSpecListenerArrayOutput {
	return o
}

func (o VirtualRouterSpecListenerArrayOutput) ToVirtualRouterSpecListenerArrayOutputWithContext(ctx context.Context) VirtualRouterSpecListenerArrayOutput {
	return o
}

func (o VirtualRouterSpecListenerArrayOutput) Index(i pulumi.IntInput) VirtualRouterSpecListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualRouterSpecListener {
		return vs[0].([]VirtualRouterSpecListener)[vs[1].(int)]
	}).(VirtualRouterSpecListenerOutput)
}

type VirtualRouterSpecListenerPortMapping struct {
	// Port used for the port mapping.
	Port int `pulumi:"port"`
	// Protocol used for the port mapping. Valid values are `http`,`http2`, `tcp` and `grpc`.
	Protocol string `pulumi:"protocol"`
}

// VirtualRouterSpecListenerPortMappingInput is an input type that accepts VirtualRouterSpecListenerPortMappingArgs and VirtualRouterSpecListenerPortMappingOutput values.
// You can construct a concrete instance of `VirtualRouterSpecListenerPortMappingInput` via:
//
//	VirtualRouterSpecListenerPortMappingArgs{...}
type VirtualRouterSpecListenerPortMappingInput interface {
	pulumi.Input

	ToVirtualRouterSpecListenerPortMappingOutput() VirtualRouterSpecListenerPortMappingOutput
	ToVirtualRouterSpecListenerPortMappingOutputWithContext(context.Context) VirtualRouterSpecListenerPortMappingOutput
}

type VirtualRouterSpecListenerPortMappingArgs struct {
	// Port used for the port mapping.
	Port pulumi.IntInput `pulumi:"port"`
	// Protocol used for the port mapping. Valid values are `http`,`http2`, `tcp` and `grpc`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (VirtualRouterSpecListenerPortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterSpecListenerPortMapping)(nil)).Elem()
}

func (i VirtualRouterSpecListenerPortMappingArgs) ToVirtualRouterSpecListenerPortMappingOutput() VirtualRouterSpecListenerPortMappingOutput {
	return i.ToVirtualRouterSpecListenerPortMappingOutputWithContext(context.Background())
}

func (i VirtualRouterSpecListenerPortMappingArgs) ToVirtualRouterSpecListenerPortMappingOutputWithContext(ctx context.Context) VirtualRouterSpecListenerPortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecListenerPortMappingOutput)
}

type VirtualRouterSpecListenerPortMappingOutput struct{ *pulumi.OutputState }

func (VirtualRouterSpecListenerPortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterSpecListenerPortMapping)(nil)).Elem()
}

func (o VirtualRouterSpecListenerPortMappingOutput) ToVirtualRouterSpecListenerPortMappingOutput() VirtualRouterSpecListenerPortMappingOutput {
	return o
}

func (o VirtualRouterSpecListenerPortMappingOutput) ToVirtualRouterSpecListenerPortMappingOutputWithContext(ctx context.Context) VirtualRouterSpecListenerPortMappingOutput {
	return o
}

// Port used for the port mapping.
func (o VirtualRouterSpecListenerPortMappingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualRouterSpecListenerPortMapping) int { return v.Port }).(pulumi.IntOutput)
}

// Protocol used for the port mapping. Valid values are `http`,`http2`, `tcp` and `grpc`.
func (o VirtualRouterSpecListenerPortMappingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualRouterSpecListenerPortMapping) string { return v.Protocol }).(pulumi.StringOutput)
}

type VirtualServiceSpec struct {
	// App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.
	Provider *VirtualServiceSpecProvider `pulumi:"provider"`
}

// VirtualServiceSpecInput is an input type that accepts VirtualServiceSpecArgs and VirtualServiceSpecOutput values.
// You can construct a concrete instance of `VirtualServiceSpecInput` via:
//
//	VirtualServiceSpecArgs{...}
type VirtualServiceSpecInput interface {
	pulumi.Input

	ToVirtualServiceSpecOutput() VirtualServiceSpecOutput
	ToVirtualServiceSpecOutputWithContext(context.Context) VirtualServiceSpecOutput
}

type VirtualServiceSpecArgs struct {
	// App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.
	Provider VirtualServiceSpecProviderPtrInput `pulumi:"provider"`
}

func (VirtualServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpec)(nil)).Elem()
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecOutput() VirtualServiceSpecOutput {
	return i.ToVirtualServiceSpecOutputWithContext(context.Background())
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecOutputWithContext(ctx context.Context) VirtualServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecOutput)
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return i.ToVirtualServiceSpecPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecOutput).ToVirtualServiceSpecPtrOutputWithContext(ctx)
}

// VirtualServiceSpecPtrInput is an input type that accepts VirtualServiceSpecArgs, VirtualServiceSpecPtr and VirtualServiceSpecPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecPtrInput` via:
//
//	        VirtualServiceSpecArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput
	ToVirtualServiceSpecPtrOutputWithContext(context.Context) VirtualServiceSpecPtrOutput
}

type virtualServiceSpecPtrType VirtualServiceSpecArgs

func VirtualServiceSpecPtr(v *VirtualServiceSpecArgs) VirtualServiceSpecPtrInput {
	return (*virtualServiceSpecPtrType)(v)
}

func (*virtualServiceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpec)(nil)).Elem()
}

func (i *virtualServiceSpecPtrType) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return i.ToVirtualServiceSpecPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecPtrType) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecPtrOutput)
}

type VirtualServiceSpecOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpec)(nil)).Elem()
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecOutput() VirtualServiceSpecOutput {
	return o
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecOutputWithContext(ctx context.Context) VirtualServiceSpecOutput {
	return o
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return o.ToVirtualServiceSpecPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpec) *VirtualServiceSpec {
		return &v
	}).(VirtualServiceSpecPtrOutput)
}

// App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.
func (o VirtualServiceSpecOutput) Provider() VirtualServiceSpecProviderPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpec) *VirtualServiceSpecProvider { return v.Provider }).(VirtualServiceSpecProviderPtrOutput)
}

type VirtualServiceSpecPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpec)(nil)).Elem()
}

func (o VirtualServiceSpecPtrOutput) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return o
}

func (o VirtualServiceSpecPtrOutput) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return o
}

func (o VirtualServiceSpecPtrOutput) Elem() VirtualServiceSpecOutput {
	return o.ApplyT(func(v *VirtualServiceSpec) VirtualServiceSpec {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpec
		return ret
	}).(VirtualServiceSpecOutput)
}

// App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router.
func (o VirtualServiceSpecPtrOutput) Provider() VirtualServiceSpecProviderPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpec) *VirtualServiceSpecProvider {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(VirtualServiceSpecProviderPtrOutput)
}

type VirtualServiceSpecProvider struct {
	// Virtual node associated with a virtual service.
	VirtualNode *VirtualServiceSpecProviderVirtualNode `pulumi:"virtualNode"`
	// Virtual router associated with a virtual service.
	VirtualRouter *VirtualServiceSpecProviderVirtualRouter `pulumi:"virtualRouter"`
}

// VirtualServiceSpecProviderInput is an input type that accepts VirtualServiceSpecProviderArgs and VirtualServiceSpecProviderOutput values.
// You can construct a concrete instance of `VirtualServiceSpecProviderInput` via:
//
//	VirtualServiceSpecProviderArgs{...}
type VirtualServiceSpecProviderInput interface {
	pulumi.Input

	ToVirtualServiceSpecProviderOutput() VirtualServiceSpecProviderOutput
	ToVirtualServiceSpecProviderOutputWithContext(context.Context) VirtualServiceSpecProviderOutput
}

type VirtualServiceSpecProviderArgs struct {
	// Virtual node associated with a virtual service.
	VirtualNode VirtualServiceSpecProviderVirtualNodePtrInput `pulumi:"virtualNode"`
	// Virtual router associated with a virtual service.
	VirtualRouter VirtualServiceSpecProviderVirtualRouterPtrInput `pulumi:"virtualRouter"`
}

func (VirtualServiceSpecProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecProvider)(nil)).Elem()
}

func (i VirtualServiceSpecProviderArgs) ToVirtualServiceSpecProviderOutput() VirtualServiceSpecProviderOutput {
	return i.ToVirtualServiceSpecProviderOutputWithContext(context.Background())
}

func (i VirtualServiceSpecProviderArgs) ToVirtualServiceSpecProviderOutputWithContext(ctx context.Context) VirtualServiceSpecProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderOutput)
}

func (i VirtualServiceSpecProviderArgs) ToVirtualServiceSpecProviderPtrOutput() VirtualServiceSpecProviderPtrOutput {
	return i.ToVirtualServiceSpecProviderPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecProviderArgs) ToVirtualServiceSpecProviderPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderOutput).ToVirtualServiceSpecProviderPtrOutputWithContext(ctx)
}

// VirtualServiceSpecProviderPtrInput is an input type that accepts VirtualServiceSpecProviderArgs, VirtualServiceSpecProviderPtr and VirtualServiceSpecProviderPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecProviderPtrInput` via:
//
//	        VirtualServiceSpecProviderArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecProviderPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecProviderPtrOutput() VirtualServiceSpecProviderPtrOutput
	ToVirtualServiceSpecProviderPtrOutputWithContext(context.Context) VirtualServiceSpecProviderPtrOutput
}

type virtualServiceSpecProviderPtrType VirtualServiceSpecProviderArgs

func VirtualServiceSpecProviderPtr(v *VirtualServiceSpecProviderArgs) VirtualServiceSpecProviderPtrInput {
	return (*virtualServiceSpecProviderPtrType)(v)
}

func (*virtualServiceSpecProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecProvider)(nil)).Elem()
}

func (i *virtualServiceSpecProviderPtrType) ToVirtualServiceSpecProviderPtrOutput() VirtualServiceSpecProviderPtrOutput {
	return i.ToVirtualServiceSpecProviderPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecProviderPtrType) ToVirtualServiceSpecProviderPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderPtrOutput)
}

type VirtualServiceSpecProviderOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecProvider)(nil)).Elem()
}

func (o VirtualServiceSpecProviderOutput) ToVirtualServiceSpecProviderOutput() VirtualServiceSpecProviderOutput {
	return o
}

func (o VirtualServiceSpecProviderOutput) ToVirtualServiceSpecProviderOutputWithContext(ctx context.Context) VirtualServiceSpecProviderOutput {
	return o
}

func (o VirtualServiceSpecProviderOutput) ToVirtualServiceSpecProviderPtrOutput() VirtualServiceSpecProviderPtrOutput {
	return o.ToVirtualServiceSpecProviderPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecProviderOutput) ToVirtualServiceSpecProviderPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecProvider) *VirtualServiceSpecProvider {
		return &v
	}).(VirtualServiceSpecProviderPtrOutput)
}

// Virtual node associated with a virtual service.
func (o VirtualServiceSpecProviderOutput) VirtualNode() VirtualServiceSpecProviderVirtualNodePtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecProvider) *VirtualServiceSpecProviderVirtualNode { return v.VirtualNode }).(VirtualServiceSpecProviderVirtualNodePtrOutput)
}

// Virtual router associated with a virtual service.
func (o VirtualServiceSpecProviderOutput) VirtualRouter() VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpecProvider) *VirtualServiceSpecProviderVirtualRouter { return v.VirtualRouter }).(VirtualServiceSpecProviderVirtualRouterPtrOutput)
}

type VirtualServiceSpecProviderPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecProvider)(nil)).Elem()
}

func (o VirtualServiceSpecProviderPtrOutput) ToVirtualServiceSpecProviderPtrOutput() VirtualServiceSpecProviderPtrOutput {
	return o
}

func (o VirtualServiceSpecProviderPtrOutput) ToVirtualServiceSpecProviderPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderPtrOutput {
	return o
}

func (o VirtualServiceSpecProviderPtrOutput) Elem() VirtualServiceSpecProviderOutput {
	return o.ApplyT(func(v *VirtualServiceSpecProvider) VirtualServiceSpecProvider {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecProvider
		return ret
	}).(VirtualServiceSpecProviderOutput)
}

// Virtual node associated with a virtual service.
func (o VirtualServiceSpecProviderPtrOutput) VirtualNode() VirtualServiceSpecProviderVirtualNodePtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecProvider) *VirtualServiceSpecProviderVirtualNode {
		if v == nil {
			return nil
		}
		return v.VirtualNode
	}).(VirtualServiceSpecProviderVirtualNodePtrOutput)
}

// Virtual router associated with a virtual service.
func (o VirtualServiceSpecProviderPtrOutput) VirtualRouter() VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecProvider) *VirtualServiceSpecProviderVirtualRouter {
		if v == nil {
			return nil
		}
		return v.VirtualRouter
	}).(VirtualServiceSpecProviderVirtualRouterPtrOutput)
}

type VirtualServiceSpecProviderVirtualNode struct {
	// Name of the virtual node that is acting as a service provider. Must be between 1 and 255 characters in length.
	VirtualNodeName string `pulumi:"virtualNodeName"`
}

// VirtualServiceSpecProviderVirtualNodeInput is an input type that accepts VirtualServiceSpecProviderVirtualNodeArgs and VirtualServiceSpecProviderVirtualNodeOutput values.
// You can construct a concrete instance of `VirtualServiceSpecProviderVirtualNodeInput` via:
//
//	VirtualServiceSpecProviderVirtualNodeArgs{...}
type VirtualServiceSpecProviderVirtualNodeInput interface {
	pulumi.Input

	ToVirtualServiceSpecProviderVirtualNodeOutput() VirtualServiceSpecProviderVirtualNodeOutput
	ToVirtualServiceSpecProviderVirtualNodeOutputWithContext(context.Context) VirtualServiceSpecProviderVirtualNodeOutput
}

type VirtualServiceSpecProviderVirtualNodeArgs struct {
	// Name of the virtual node that is acting as a service provider. Must be between 1 and 255 characters in length.
	VirtualNodeName pulumi.StringInput `pulumi:"virtualNodeName"`
}

func (VirtualServiceSpecProviderVirtualNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (i VirtualServiceSpecProviderVirtualNodeArgs) ToVirtualServiceSpecProviderVirtualNodeOutput() VirtualServiceSpecProviderVirtualNodeOutput {
	return i.ToVirtualServiceSpecProviderVirtualNodeOutputWithContext(context.Background())
}

func (i VirtualServiceSpecProviderVirtualNodeArgs) ToVirtualServiceSpecProviderVirtualNodeOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderVirtualNodeOutput)
}

func (i VirtualServiceSpecProviderVirtualNodeArgs) ToVirtualServiceSpecProviderVirtualNodePtrOutput() VirtualServiceSpecProviderVirtualNodePtrOutput {
	return i.ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecProviderVirtualNodeArgs) ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualNodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderVirtualNodeOutput).ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(ctx)
}

// VirtualServiceSpecProviderVirtualNodePtrInput is an input type that accepts VirtualServiceSpecProviderVirtualNodeArgs, VirtualServiceSpecProviderVirtualNodePtr and VirtualServiceSpecProviderVirtualNodePtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecProviderVirtualNodePtrInput` via:
//
//	        VirtualServiceSpecProviderVirtualNodeArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecProviderVirtualNodePtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecProviderVirtualNodePtrOutput() VirtualServiceSpecProviderVirtualNodePtrOutput
	ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(context.Context) VirtualServiceSpecProviderVirtualNodePtrOutput
}

type virtualServiceSpecProviderVirtualNodePtrType VirtualServiceSpecProviderVirtualNodeArgs

func VirtualServiceSpecProviderVirtualNodePtr(v *VirtualServiceSpecProviderVirtualNodeArgs) VirtualServiceSpecProviderVirtualNodePtrInput {
	return (*virtualServiceSpecProviderVirtualNodePtrType)(v)
}

func (*virtualServiceSpecProviderVirtualNodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (i *virtualServiceSpecProviderVirtualNodePtrType) ToVirtualServiceSpecProviderVirtualNodePtrOutput() VirtualServiceSpecProviderVirtualNodePtrOutput {
	return i.ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecProviderVirtualNodePtrType) ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualNodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderVirtualNodePtrOutput)
}

type VirtualServiceSpecProviderVirtualNodeOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecProviderVirtualNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (o VirtualServiceSpecProviderVirtualNodeOutput) ToVirtualServiceSpecProviderVirtualNodeOutput() VirtualServiceSpecProviderVirtualNodeOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualNodeOutput) ToVirtualServiceSpecProviderVirtualNodeOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualNodeOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualNodeOutput) ToVirtualServiceSpecProviderVirtualNodePtrOutput() VirtualServiceSpecProviderVirtualNodePtrOutput {
	return o.ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecProviderVirtualNodeOutput) ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualNodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecProviderVirtualNode) *VirtualServiceSpecProviderVirtualNode {
		return &v
	}).(VirtualServiceSpecProviderVirtualNodePtrOutput)
}

// Name of the virtual node that is acting as a service provider. Must be between 1 and 255 characters in length.
func (o VirtualServiceSpecProviderVirtualNodeOutput) VirtualNodeName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualServiceSpecProviderVirtualNode) string { return v.VirtualNodeName }).(pulumi.StringOutput)
}

type VirtualServiceSpecProviderVirtualNodePtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecProviderVirtualNodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (o VirtualServiceSpecProviderVirtualNodePtrOutput) ToVirtualServiceSpecProviderVirtualNodePtrOutput() VirtualServiceSpecProviderVirtualNodePtrOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualNodePtrOutput) ToVirtualServiceSpecProviderVirtualNodePtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualNodePtrOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualNodePtrOutput) Elem() VirtualServiceSpecProviderVirtualNodeOutput {
	return o.ApplyT(func(v *VirtualServiceSpecProviderVirtualNode) VirtualServiceSpecProviderVirtualNode {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecProviderVirtualNode
		return ret
	}).(VirtualServiceSpecProviderVirtualNodeOutput)
}

// Name of the virtual node that is acting as a service provider. Must be between 1 and 255 characters in length.
func (o VirtualServiceSpecProviderVirtualNodePtrOutput) VirtualNodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecProviderVirtualNode) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualNodeName
	}).(pulumi.StringPtrOutput)
}

type VirtualServiceSpecProviderVirtualRouter struct {
	// Name of the virtual router that is acting as a service provider. Must be between 1 and 255 characters in length.
	VirtualRouterName string `pulumi:"virtualRouterName"`
}

// VirtualServiceSpecProviderVirtualRouterInput is an input type that accepts VirtualServiceSpecProviderVirtualRouterArgs and VirtualServiceSpecProviderVirtualRouterOutput values.
// You can construct a concrete instance of `VirtualServiceSpecProviderVirtualRouterInput` via:
//
//	VirtualServiceSpecProviderVirtualRouterArgs{...}
type VirtualServiceSpecProviderVirtualRouterInput interface {
	pulumi.Input

	ToVirtualServiceSpecProviderVirtualRouterOutput() VirtualServiceSpecProviderVirtualRouterOutput
	ToVirtualServiceSpecProviderVirtualRouterOutputWithContext(context.Context) VirtualServiceSpecProviderVirtualRouterOutput
}

type VirtualServiceSpecProviderVirtualRouterArgs struct {
	// Name of the virtual router that is acting as a service provider. Must be between 1 and 255 characters in length.
	VirtualRouterName pulumi.StringInput `pulumi:"virtualRouterName"`
}

func (VirtualServiceSpecProviderVirtualRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (i VirtualServiceSpecProviderVirtualRouterArgs) ToVirtualServiceSpecProviderVirtualRouterOutput() VirtualServiceSpecProviderVirtualRouterOutput {
	return i.ToVirtualServiceSpecProviderVirtualRouterOutputWithContext(context.Background())
}

func (i VirtualServiceSpecProviderVirtualRouterArgs) ToVirtualServiceSpecProviderVirtualRouterOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderVirtualRouterOutput)
}

func (i VirtualServiceSpecProviderVirtualRouterArgs) ToVirtualServiceSpecProviderVirtualRouterPtrOutput() VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return i.ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecProviderVirtualRouterArgs) ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderVirtualRouterOutput).ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(ctx)
}

// VirtualServiceSpecProviderVirtualRouterPtrInput is an input type that accepts VirtualServiceSpecProviderVirtualRouterArgs, VirtualServiceSpecProviderVirtualRouterPtr and VirtualServiceSpecProviderVirtualRouterPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecProviderVirtualRouterPtrInput` via:
//
//	        VirtualServiceSpecProviderVirtualRouterArgs{...}
//
//	or:
//
//	        nil
type VirtualServiceSpecProviderVirtualRouterPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecProviderVirtualRouterPtrOutput() VirtualServiceSpecProviderVirtualRouterPtrOutput
	ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(context.Context) VirtualServiceSpecProviderVirtualRouterPtrOutput
}

type virtualServiceSpecProviderVirtualRouterPtrType VirtualServiceSpecProviderVirtualRouterArgs

func VirtualServiceSpecProviderVirtualRouterPtr(v *VirtualServiceSpecProviderVirtualRouterArgs) VirtualServiceSpecProviderVirtualRouterPtrInput {
	return (*virtualServiceSpecProviderVirtualRouterPtrType)(v)
}

func (*virtualServiceSpecProviderVirtualRouterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (i *virtualServiceSpecProviderVirtualRouterPtrType) ToVirtualServiceSpecProviderVirtualRouterPtrOutput() VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return i.ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecProviderVirtualRouterPtrType) ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecProviderVirtualRouterPtrOutput)
}

type VirtualServiceSpecProviderVirtualRouterOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecProviderVirtualRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (o VirtualServiceSpecProviderVirtualRouterOutput) ToVirtualServiceSpecProviderVirtualRouterOutput() VirtualServiceSpecProviderVirtualRouterOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualRouterOutput) ToVirtualServiceSpecProviderVirtualRouterOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualRouterOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualRouterOutput) ToVirtualServiceSpecProviderVirtualRouterPtrOutput() VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return o.ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecProviderVirtualRouterOutput) ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpecProviderVirtualRouter) *VirtualServiceSpecProviderVirtualRouter {
		return &v
	}).(VirtualServiceSpecProviderVirtualRouterPtrOutput)
}

// Name of the virtual router that is acting as a service provider. Must be between 1 and 255 characters in length.
func (o VirtualServiceSpecProviderVirtualRouterOutput) VirtualRouterName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualServiceSpecProviderVirtualRouter) string { return v.VirtualRouterName }).(pulumi.StringOutput)
}

type VirtualServiceSpecProviderVirtualRouterPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecProviderVirtualRouterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (o VirtualServiceSpecProviderVirtualRouterPtrOutput) ToVirtualServiceSpecProviderVirtualRouterPtrOutput() VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualRouterPtrOutput) ToVirtualServiceSpecProviderVirtualRouterPtrOutputWithContext(ctx context.Context) VirtualServiceSpecProviderVirtualRouterPtrOutput {
	return o
}

func (o VirtualServiceSpecProviderVirtualRouterPtrOutput) Elem() VirtualServiceSpecProviderVirtualRouterOutput {
	return o.ApplyT(func(v *VirtualServiceSpecProviderVirtualRouter) VirtualServiceSpecProviderVirtualRouter {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpecProviderVirtualRouter
		return ret
	}).(VirtualServiceSpecProviderVirtualRouterOutput)
}

// Name of the virtual router that is acting as a service provider. Must be between 1 and 255 characters in length.
func (o VirtualServiceSpecProviderVirtualRouterPtrOutput) VirtualRouterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpecProviderVirtualRouter) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualRouterName
	}).(pulumi.StringPtrOutput)
}

type GetGatewayRouteSpec struct {
	GrpcRoutes  []GetGatewayRouteSpecGrpcRoute  `pulumi:"grpcRoutes"`
	Http2Routes []GetGatewayRouteSpecHttp2Route `pulumi:"http2Routes"`
	HttpRoutes  []GetGatewayRouteSpecHttpRoute  `pulumi:"httpRoutes"`
	Priority    int                             `pulumi:"priority"`
}

// GetGatewayRouteSpecInput is an input type that accepts GetGatewayRouteSpecArgs and GetGatewayRouteSpecOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecInput` via:
//
//	GetGatewayRouteSpecArgs{...}
type GetGatewayRouteSpecInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecOutput() GetGatewayRouteSpecOutput
	ToGetGatewayRouteSpecOutputWithContext(context.Context) GetGatewayRouteSpecOutput
}

type GetGatewayRouteSpecArgs struct {
	GrpcRoutes  GetGatewayRouteSpecGrpcRouteArrayInput  `pulumi:"grpcRoutes"`
	Http2Routes GetGatewayRouteSpecHttp2RouteArrayInput `pulumi:"http2Routes"`
	HttpRoutes  GetGatewayRouteSpecHttpRouteArrayInput  `pulumi:"httpRoutes"`
	Priority    pulumi.IntInput                         `pulumi:"priority"`
}

func (GetGatewayRouteSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpec)(nil)).Elem()
}

func (i GetGatewayRouteSpecArgs) ToGetGatewayRouteSpecOutput() GetGatewayRouteSpecOutput {
	return i.ToGetGatewayRouteSpecOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecArgs) ToGetGatewayRouteSpecOutputWithContext(ctx context.Context) GetGatewayRouteSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecOutput)
}

// GetGatewayRouteSpecArrayInput is an input type that accepts GetGatewayRouteSpecArray and GetGatewayRouteSpecArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecArrayInput` via:
//
//	GetGatewayRouteSpecArray{ GetGatewayRouteSpecArgs{...} }
type GetGatewayRouteSpecArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecArrayOutput() GetGatewayRouteSpecArrayOutput
	ToGetGatewayRouteSpecArrayOutputWithContext(context.Context) GetGatewayRouteSpecArrayOutput
}

type GetGatewayRouteSpecArray []GetGatewayRouteSpecInput

func (GetGatewayRouteSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpec)(nil)).Elem()
}

func (i GetGatewayRouteSpecArray) ToGetGatewayRouteSpecArrayOutput() GetGatewayRouteSpecArrayOutput {
	return i.ToGetGatewayRouteSpecArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecArray) ToGetGatewayRouteSpecArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecArrayOutput)
}

type GetGatewayRouteSpecOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpec)(nil)).Elem()
}

func (o GetGatewayRouteSpecOutput) ToGetGatewayRouteSpecOutput() GetGatewayRouteSpecOutput {
	return o
}

func (o GetGatewayRouteSpecOutput) ToGetGatewayRouteSpecOutputWithContext(ctx context.Context) GetGatewayRouteSpecOutput {
	return o
}

func (o GetGatewayRouteSpecOutput) GrpcRoutes() GetGatewayRouteSpecGrpcRouteArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpec) []GetGatewayRouteSpecGrpcRoute { return v.GrpcRoutes }).(GetGatewayRouteSpecGrpcRouteArrayOutput)
}

func (o GetGatewayRouteSpecOutput) Http2Routes() GetGatewayRouteSpecHttp2RouteArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpec) []GetGatewayRouteSpecHttp2Route { return v.Http2Routes }).(GetGatewayRouteSpecHttp2RouteArrayOutput)
}

func (o GetGatewayRouteSpecOutput) HttpRoutes() GetGatewayRouteSpecHttpRouteArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpec) []GetGatewayRouteSpecHttpRoute { return v.HttpRoutes }).(GetGatewayRouteSpecHttpRouteArrayOutput)
}

func (o GetGatewayRouteSpecOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayRouteSpec) int { return v.Priority }).(pulumi.IntOutput)
}

type GetGatewayRouteSpecArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpec)(nil)).Elem()
}

func (o GetGatewayRouteSpecArrayOutput) ToGetGatewayRouteSpecArrayOutput() GetGatewayRouteSpecArrayOutput {
	return o
}

func (o GetGatewayRouteSpecArrayOutput) ToGetGatewayRouteSpecArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecArrayOutput {
	return o
}

func (o GetGatewayRouteSpecArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpec {
		return vs[0].([]GetGatewayRouteSpec)[vs[1].(int)]
	}).(GetGatewayRouteSpecOutput)
}

type GetGatewayRouteSpecGrpcRoute struct {
	Actions []GetGatewayRouteSpecGrpcRouteAction `pulumi:"actions"`
	Matches []GetGatewayRouteSpecGrpcRouteMatch  `pulumi:"matches"`
}

// GetGatewayRouteSpecGrpcRouteInput is an input type that accepts GetGatewayRouteSpecGrpcRouteArgs and GetGatewayRouteSpecGrpcRouteOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecGrpcRouteInput` via:
//
//	GetGatewayRouteSpecGrpcRouteArgs{...}
type GetGatewayRouteSpecGrpcRouteInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecGrpcRouteOutput() GetGatewayRouteSpecGrpcRouteOutput
	ToGetGatewayRouteSpecGrpcRouteOutputWithContext(context.Context) GetGatewayRouteSpecGrpcRouteOutput
}

type GetGatewayRouteSpecGrpcRouteArgs struct {
	Actions GetGatewayRouteSpecGrpcRouteActionArrayInput `pulumi:"actions"`
	Matches GetGatewayRouteSpecGrpcRouteMatchArrayInput  `pulumi:"matches"`
}

func (GetGatewayRouteSpecGrpcRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecGrpcRoute)(nil)).Elem()
}

func (i GetGatewayRouteSpecGrpcRouteArgs) ToGetGatewayRouteSpecGrpcRouteOutput() GetGatewayRouteSpecGrpcRouteOutput {
	return i.ToGetGatewayRouteSpecGrpcRouteOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecGrpcRouteArgs) ToGetGatewayRouteSpecGrpcRouteOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecGrpcRouteOutput)
}

// GetGatewayRouteSpecGrpcRouteArrayInput is an input type that accepts GetGatewayRouteSpecGrpcRouteArray and GetGatewayRouteSpecGrpcRouteArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecGrpcRouteArrayInput` via:
//
//	GetGatewayRouteSpecGrpcRouteArray{ GetGatewayRouteSpecGrpcRouteArgs{...} }
type GetGatewayRouteSpecGrpcRouteArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecGrpcRouteArrayOutput() GetGatewayRouteSpecGrpcRouteArrayOutput
	ToGetGatewayRouteSpecGrpcRouteArrayOutputWithContext(context.Context) GetGatewayRouteSpecGrpcRouteArrayOutput
}

type GetGatewayRouteSpecGrpcRouteArray []GetGatewayRouteSpecGrpcRouteInput

func (GetGatewayRouteSpecGrpcRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecGrpcRoute)(nil)).Elem()
}

func (i GetGatewayRouteSpecGrpcRouteArray) ToGetGatewayRouteSpecGrpcRouteArrayOutput() GetGatewayRouteSpecGrpcRouteArrayOutput {
	return i.ToGetGatewayRouteSpecGrpcRouteArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecGrpcRouteArray) ToGetGatewayRouteSpecGrpcRouteArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecGrpcRouteArrayOutput)
}

type GetGatewayRouteSpecGrpcRouteOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecGrpcRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecGrpcRoute)(nil)).Elem()
}

func (o GetGatewayRouteSpecGrpcRouteOutput) ToGetGatewayRouteSpecGrpcRouteOutput() GetGatewayRouteSpecGrpcRouteOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteOutput) ToGetGatewayRouteSpecGrpcRouteOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteOutput) Actions() GetGatewayRouteSpecGrpcRouteActionArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecGrpcRoute) []GetGatewayRouteSpecGrpcRouteAction { return v.Actions }).(GetGatewayRouteSpecGrpcRouteActionArrayOutput)
}

func (o GetGatewayRouteSpecGrpcRouteOutput) Matches() GetGatewayRouteSpecGrpcRouteMatchArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecGrpcRoute) []GetGatewayRouteSpecGrpcRouteMatch { return v.Matches }).(GetGatewayRouteSpecGrpcRouteMatchArrayOutput)
}

type GetGatewayRouteSpecGrpcRouteArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecGrpcRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecGrpcRoute)(nil)).Elem()
}

func (o GetGatewayRouteSpecGrpcRouteArrayOutput) ToGetGatewayRouteSpecGrpcRouteArrayOutput() GetGatewayRouteSpecGrpcRouteArrayOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteArrayOutput) ToGetGatewayRouteSpecGrpcRouteArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteArrayOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecGrpcRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecGrpcRoute {
		return vs[0].([]GetGatewayRouteSpecGrpcRoute)[vs[1].(int)]
	}).(GetGatewayRouteSpecGrpcRouteOutput)
}

type GetGatewayRouteSpecGrpcRouteAction struct {
	Targets []GetGatewayRouteSpecGrpcRouteActionTarget `pulumi:"targets"`
}

// GetGatewayRouteSpecGrpcRouteActionInput is an input type that accepts GetGatewayRouteSpecGrpcRouteActionArgs and GetGatewayRouteSpecGrpcRouteActionOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecGrpcRouteActionInput` via:
//
//	GetGatewayRouteSpecGrpcRouteActionArgs{...}
type GetGatewayRouteSpecGrpcRouteActionInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecGrpcRouteActionOutput() GetGatewayRouteSpecGrpcRouteActionOutput
	ToGetGatewayRouteSpecGrpcRouteActionOutputWithContext(context.Context) GetGatewayRouteSpecGrpcRouteActionOutput
}

type GetGatewayRouteSpecGrpcRouteActionArgs struct {
	Targets GetGatewayRouteSpecGrpcRouteActionTargetArrayInput `pulumi:"targets"`
}

func (GetGatewayRouteSpecGrpcRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (i GetGatewayRouteSpecGrpcRouteActionArgs) ToGetGatewayRouteSpecGrpcRouteActionOutput() GetGatewayRouteSpecGrpcRouteActionOutput {
	return i.ToGetGatewayRouteSpecGrpcRouteActionOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecGrpcRouteActionArgs) ToGetGatewayRouteSpecGrpcRouteActionOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecGrpcRouteActionOutput)
}

// GetGatewayRouteSpecGrpcRouteActionArrayInput is an input type that accepts GetGatewayRouteSpecGrpcRouteActionArray and GetGatewayRouteSpecGrpcRouteActionArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecGrpcRouteActionArrayInput` via:
//
//	GetGatewayRouteSpecGrpcRouteActionArray{ GetGatewayRouteSpecGrpcRouteActionArgs{...} }
type GetGatewayRouteSpecGrpcRouteActionArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecGrpcRouteActionArrayOutput() GetGatewayRouteSpecGrpcRouteActionArrayOutput
	ToGetGatewayRouteSpecGrpcRouteActionArrayOutputWithContext(context.Context) GetGatewayRouteSpecGrpcRouteActionArrayOutput
}

type GetGatewayRouteSpecGrpcRouteActionArray []GetGatewayRouteSpecGrpcRouteActionInput

func (GetGatewayRouteSpecGrpcRouteActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (i GetGatewayRouteSpecGrpcRouteActionArray) ToGetGatewayRouteSpecGrpcRouteActionArrayOutput() GetGatewayRouteSpecGrpcRouteActionArrayOutput {
	return i.ToGetGatewayRouteSpecGrpcRouteActionArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecGrpcRouteActionArray) ToGetGatewayRouteSpecGrpcRouteActionArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecGrpcRouteActionArrayOutput)
}

type GetGatewayRouteSpecGrpcRouteActionOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecGrpcRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (o GetGatewayRouteSpecGrpcRouteActionOutput) ToGetGatewayRouteSpecGrpcRouteActionOutput() GetGatewayRouteSpecGrpcRouteActionOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteActionOutput) ToGetGatewayRouteSpecGrpcRouteActionOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteActionOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteActionOutput) Targets() GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecGrpcRouteAction) []GetGatewayRouteSpecGrpcRouteActionTarget {
		return v.Targets
	}).(GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput)
}

type GetGatewayRouteSpecGrpcRouteActionArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecGrpcRouteActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (o GetGatewayRouteSpecGrpcRouteActionArrayOutput) ToGetGatewayRouteSpecGrpcRouteActionArrayOutput() GetGatewayRouteSpecGrpcRouteActionArrayOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteActionArrayOutput) ToGetGatewayRouteSpecGrpcRouteActionArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteActionArrayOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteActionArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecGrpcRouteActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecGrpcRouteAction {
		return vs[0].([]GetGatewayRouteSpecGrpcRouteAction)[vs[1].(int)]
	}).(GetGatewayRouteSpecGrpcRouteActionOutput)
}

type GetGatewayRouteSpecGrpcRouteActionTarget struct {
	Port            int                                                      `pulumi:"port"`
	VirtualServices []GetGatewayRouteSpecGrpcRouteActionTargetVirtualService `pulumi:"virtualServices"`
}

// GetGatewayRouteSpecGrpcRouteActionTargetInput is an input type that accepts GetGatewayRouteSpecGrpcRouteActionTargetArgs and GetGatewayRouteSpecGrpcRouteActionTargetOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecGrpcRouteActionTargetInput` via:
//
//	GetGatewayRouteSpecGrpcRouteActionTargetArgs{...}
type GetGatewayRouteSpecGrpcRouteActionTargetInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecGrpcRouteActionTargetOutput() GetGatewayRouteSpecGrpcRouteActionTargetOutput
	ToGetGatewayRouteSpecGrpcRouteActionTargetOutputWithContext(context.Context) GetGatewayRouteSpecGrpcRouteActionTargetOutput
}

type GetGatewayRouteSpecGrpcRouteActionTargetArgs struct {
	Port            pulumi.IntInput                                                  `pulumi:"port"`
	VirtualServices GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayInput `pulumi:"virtualServices"`
}

func (GetGatewayRouteSpecGrpcRouteActionTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteActionTarget)(nil)).Elem()
}

func (i GetGatewayRouteSpecGrpcRouteActionTargetArgs) ToGetGatewayRouteSpecGrpcRouteActionTargetOutput() GetGatewayRouteSpecGrpcRouteActionTargetOutput {
	return i.ToGetGatewayRouteSpecGrpcRouteActionTargetOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecGrpcRouteActionTargetArgs) ToGetGatewayRouteSpecGrpcRouteActionTargetOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteActionTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecGrpcRouteActionTargetOutput)
}

// GetGatewayRouteSpecGrpcRouteActionTargetArrayInput is an input type that accepts GetGatewayRouteSpecGrpcRouteActionTargetArray and GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecGrpcRouteActionTargetArrayInput` via:
//
//	GetGatewayRouteSpecGrpcRouteActionTargetArray{ GetGatewayRouteSpecGrpcRouteActionTargetArgs{...} }
type GetGatewayRouteSpecGrpcRouteActionTargetArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecGrpcRouteActionTargetArrayOutput() GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput
	ToGetGatewayRouteSpecGrpcRouteActionTargetArrayOutputWithContext(context.Context) GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput
}

type GetGatewayRouteSpecGrpcRouteActionTargetArray []GetGatewayRouteSpecGrpcRouteActionTargetInput

func (GetGatewayRouteSpecGrpcRouteActionTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecGrpcRouteActionTarget)(nil)).Elem()
}

func (i GetGatewayRouteSpecGrpcRouteActionTargetArray) ToGetGatewayRouteSpecGrpcRouteActionTargetArrayOutput() GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput {
	return i.ToGetGatewayRouteSpecGrpcRouteActionTargetArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecGrpcRouteActionTargetArray) ToGetGatewayRouteSpecGrpcRouteActionTargetArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput)
}

type GetGatewayRouteSpecGrpcRouteActionTargetOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecGrpcRouteActionTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteActionTarget)(nil)).Elem()
}

func (o GetGatewayRouteSpecGrpcRouteActionTargetOutput) ToGetGatewayRouteSpecGrpcRouteActionTargetOutput() GetGatewayRouteSpecGrpcRouteActionTargetOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteActionTargetOutput) ToGetGatewayRouteSpecGrpcRouteActionTargetOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteActionTargetOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteActionTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecGrpcRouteActionTarget) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetGatewayRouteSpecGrpcRouteActionTargetOutput) VirtualServices() GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecGrpcRouteActionTarget) []GetGatewayRouteSpecGrpcRouteActionTargetVirtualService {
		return v.VirtualServices
	}).(GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput)
}

type GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecGrpcRouteActionTarget)(nil)).Elem()
}

func (o GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput) ToGetGatewayRouteSpecGrpcRouteActionTargetArrayOutput() GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput) ToGetGatewayRouteSpecGrpcRouteActionTargetArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecGrpcRouteActionTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecGrpcRouteActionTarget {
		return vs[0].([]GetGatewayRouteSpecGrpcRouteActionTarget)[vs[1].(int)]
	}).(GetGatewayRouteSpecGrpcRouteActionTargetOutput)
}

type GetGatewayRouteSpecGrpcRouteActionTargetVirtualService struct {
	VirtualServiceName string `pulumi:"virtualServiceName"`
}

// GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput is an input type that accepts GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs and GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput` via:
//
//	GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs{...}
type GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput() GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput
	ToGetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutputWithContext(context.Context) GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput
}

type GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs struct {
	VirtualServiceName pulumi.StringInput `pulumi:"virtualServiceName"`
}

func (GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteActionTargetVirtualService)(nil)).Elem()
}

func (i GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) ToGetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput() GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return i.ToGetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs) ToGetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput)
}

// GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayInput is an input type that accepts GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArray and GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayInput` via:
//
//	GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArray{ GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs{...} }
type GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput() GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput
	ToGetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutputWithContext(context.Context) GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput
}

type GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArray []GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput

func (GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecGrpcRouteActionTargetVirtualService)(nil)).Elem()
}

func (i GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArray) ToGetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput() GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput {
	return i.ToGetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArray) ToGetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput)
}

type GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteActionTargetVirtualService)(nil)).Elem()
}

func (o GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) ToGetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput() GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) ToGetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput) VirtualServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecGrpcRouteActionTargetVirtualService) string { return v.VirtualServiceName }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecGrpcRouteActionTargetVirtualService)(nil)).Elem()
}

func (o GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput) ToGetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput() GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput) ToGetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecGrpcRouteActionTargetVirtualService {
		return vs[0].([]GetGatewayRouteSpecGrpcRouteActionTargetVirtualService)[vs[1].(int)]
	}).(GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput)
}

type GetGatewayRouteSpecGrpcRouteMatch struct {
	Port        int    `pulumi:"port"`
	ServiceName string `pulumi:"serviceName"`
}

// GetGatewayRouteSpecGrpcRouteMatchInput is an input type that accepts GetGatewayRouteSpecGrpcRouteMatchArgs and GetGatewayRouteSpecGrpcRouteMatchOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecGrpcRouteMatchInput` via:
//
//	GetGatewayRouteSpecGrpcRouteMatchArgs{...}
type GetGatewayRouteSpecGrpcRouteMatchInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecGrpcRouteMatchOutput() GetGatewayRouteSpecGrpcRouteMatchOutput
	ToGetGatewayRouteSpecGrpcRouteMatchOutputWithContext(context.Context) GetGatewayRouteSpecGrpcRouteMatchOutput
}

type GetGatewayRouteSpecGrpcRouteMatchArgs struct {
	Port        pulumi.IntInput    `pulumi:"port"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetGatewayRouteSpecGrpcRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (i GetGatewayRouteSpecGrpcRouteMatchArgs) ToGetGatewayRouteSpecGrpcRouteMatchOutput() GetGatewayRouteSpecGrpcRouteMatchOutput {
	return i.ToGetGatewayRouteSpecGrpcRouteMatchOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecGrpcRouteMatchArgs) ToGetGatewayRouteSpecGrpcRouteMatchOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecGrpcRouteMatchOutput)
}

// GetGatewayRouteSpecGrpcRouteMatchArrayInput is an input type that accepts GetGatewayRouteSpecGrpcRouteMatchArray and GetGatewayRouteSpecGrpcRouteMatchArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecGrpcRouteMatchArrayInput` via:
//
//	GetGatewayRouteSpecGrpcRouteMatchArray{ GetGatewayRouteSpecGrpcRouteMatchArgs{...} }
type GetGatewayRouteSpecGrpcRouteMatchArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecGrpcRouteMatchArrayOutput() GetGatewayRouteSpecGrpcRouteMatchArrayOutput
	ToGetGatewayRouteSpecGrpcRouteMatchArrayOutputWithContext(context.Context) GetGatewayRouteSpecGrpcRouteMatchArrayOutput
}

type GetGatewayRouteSpecGrpcRouteMatchArray []GetGatewayRouteSpecGrpcRouteMatchInput

func (GetGatewayRouteSpecGrpcRouteMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (i GetGatewayRouteSpecGrpcRouteMatchArray) ToGetGatewayRouteSpecGrpcRouteMatchArrayOutput() GetGatewayRouteSpecGrpcRouteMatchArrayOutput {
	return i.ToGetGatewayRouteSpecGrpcRouteMatchArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecGrpcRouteMatchArray) ToGetGatewayRouteSpecGrpcRouteMatchArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecGrpcRouteMatchArrayOutput)
}

type GetGatewayRouteSpecGrpcRouteMatchOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecGrpcRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (o GetGatewayRouteSpecGrpcRouteMatchOutput) ToGetGatewayRouteSpecGrpcRouteMatchOutput() GetGatewayRouteSpecGrpcRouteMatchOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteMatchOutput) ToGetGatewayRouteSpecGrpcRouteMatchOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteMatchOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteMatchOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecGrpcRouteMatch) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetGatewayRouteSpecGrpcRouteMatchOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecGrpcRouteMatch) string { return v.ServiceName }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecGrpcRouteMatchArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecGrpcRouteMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (o GetGatewayRouteSpecGrpcRouteMatchArrayOutput) ToGetGatewayRouteSpecGrpcRouteMatchArrayOutput() GetGatewayRouteSpecGrpcRouteMatchArrayOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteMatchArrayOutput) ToGetGatewayRouteSpecGrpcRouteMatchArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecGrpcRouteMatchArrayOutput {
	return o
}

func (o GetGatewayRouteSpecGrpcRouteMatchArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecGrpcRouteMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecGrpcRouteMatch {
		return vs[0].([]GetGatewayRouteSpecGrpcRouteMatch)[vs[1].(int)]
	}).(GetGatewayRouteSpecGrpcRouteMatchOutput)
}

type GetGatewayRouteSpecHttp2Route struct {
	Actions []GetGatewayRouteSpecHttp2RouteAction `pulumi:"actions"`
	Matches []GetGatewayRouteSpecHttp2RouteMatch  `pulumi:"matches"`
}

// GetGatewayRouteSpecHttp2RouteInput is an input type that accepts GetGatewayRouteSpecHttp2RouteArgs and GetGatewayRouteSpecHttp2RouteOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteInput` via:
//
//	GetGatewayRouteSpecHttp2RouteArgs{...}
type GetGatewayRouteSpecHttp2RouteInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteOutput() GetGatewayRouteSpecHttp2RouteOutput
	ToGetGatewayRouteSpecHttp2RouteOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteOutput
}

type GetGatewayRouteSpecHttp2RouteArgs struct {
	Actions GetGatewayRouteSpecHttp2RouteActionArrayInput `pulumi:"actions"`
	Matches GetGatewayRouteSpecHttp2RouteMatchArrayInput  `pulumi:"matches"`
}

func (GetGatewayRouteSpecHttp2RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2Route)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteArgs) ToGetGatewayRouteSpecHttp2RouteOutput() GetGatewayRouteSpecHttp2RouteOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteArgs) ToGetGatewayRouteSpecHttp2RouteOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteOutput)
}

// GetGatewayRouteSpecHttp2RouteArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteArray and GetGatewayRouteSpecHttp2RouteArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteArray{ GetGatewayRouteSpecHttp2RouteArgs{...} }
type GetGatewayRouteSpecHttp2RouteArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteArrayOutput() GetGatewayRouteSpecHttp2RouteArrayOutput
	ToGetGatewayRouteSpecHttp2RouteArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteArrayOutput
}

type GetGatewayRouteSpecHttp2RouteArray []GetGatewayRouteSpecHttp2RouteInput

func (GetGatewayRouteSpecHttp2RouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2Route)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteArray) ToGetGatewayRouteSpecHttp2RouteArrayOutput() GetGatewayRouteSpecHttp2RouteArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteArray) ToGetGatewayRouteSpecHttp2RouteArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2Route)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteOutput) ToGetGatewayRouteSpecHttp2RouteOutput() GetGatewayRouteSpecHttp2RouteOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteOutput) ToGetGatewayRouteSpecHttp2RouteOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteOutput) Actions() GetGatewayRouteSpecHttp2RouteActionArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2Route) []GetGatewayRouteSpecHttp2RouteAction { return v.Actions }).(GetGatewayRouteSpecHttp2RouteActionArrayOutput)
}

func (o GetGatewayRouteSpecHttp2RouteOutput) Matches() GetGatewayRouteSpecHttp2RouteMatchArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2Route) []GetGatewayRouteSpecHttp2RouteMatch { return v.Matches }).(GetGatewayRouteSpecHttp2RouteMatchArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2Route)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteArrayOutput) ToGetGatewayRouteSpecHttp2RouteArrayOutput() GetGatewayRouteSpecHttp2RouteArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteArrayOutput) ToGetGatewayRouteSpecHttp2RouteArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2Route {
		return vs[0].([]GetGatewayRouteSpecHttp2Route)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteOutput)
}

type GetGatewayRouteSpecHttp2RouteAction struct {
	Rewrites []GetGatewayRouteSpecHttp2RouteActionRewrite `pulumi:"rewrites"`
	Targets  []GetGatewayRouteSpecHttp2RouteActionTarget  `pulumi:"targets"`
}

// GetGatewayRouteSpecHttp2RouteActionInput is an input type that accepts GetGatewayRouteSpecHttp2RouteActionArgs and GetGatewayRouteSpecHttp2RouteActionOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteActionInput` via:
//
//	GetGatewayRouteSpecHttp2RouteActionArgs{...}
type GetGatewayRouteSpecHttp2RouteActionInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteActionOutput() GetGatewayRouteSpecHttp2RouteActionOutput
	ToGetGatewayRouteSpecHttp2RouteActionOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteActionOutput
}

type GetGatewayRouteSpecHttp2RouteActionArgs struct {
	Rewrites GetGatewayRouteSpecHttp2RouteActionRewriteArrayInput `pulumi:"rewrites"`
	Targets  GetGatewayRouteSpecHttp2RouteActionTargetArrayInput  `pulumi:"targets"`
}

func (GetGatewayRouteSpecHttp2RouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteActionArgs) ToGetGatewayRouteSpecHttp2RouteActionOutput() GetGatewayRouteSpecHttp2RouteActionOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteActionOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteActionArgs) ToGetGatewayRouteSpecHttp2RouteActionOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteActionOutput)
}

// GetGatewayRouteSpecHttp2RouteActionArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteActionArray and GetGatewayRouteSpecHttp2RouteActionArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteActionArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteActionArray{ GetGatewayRouteSpecHttp2RouteActionArgs{...} }
type GetGatewayRouteSpecHttp2RouteActionArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteActionArrayOutput() GetGatewayRouteSpecHttp2RouteActionArrayOutput
	ToGetGatewayRouteSpecHttp2RouteActionArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteActionArrayOutput
}

type GetGatewayRouteSpecHttp2RouteActionArray []GetGatewayRouteSpecHttp2RouteActionInput

func (GetGatewayRouteSpecHttp2RouteActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteActionArray) ToGetGatewayRouteSpecHttp2RouteActionArrayOutput() GetGatewayRouteSpecHttp2RouteActionArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteActionArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteActionArray) ToGetGatewayRouteSpecHttp2RouteActionArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteActionArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteActionOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteActionOutput) ToGetGatewayRouteSpecHttp2RouteActionOutput() GetGatewayRouteSpecHttp2RouteActionOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionOutput) ToGetGatewayRouteSpecHttp2RouteActionOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionOutput) Rewrites() GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteAction) []GetGatewayRouteSpecHttp2RouteActionRewrite {
		return v.Rewrites
	}).(GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput)
}

func (o GetGatewayRouteSpecHttp2RouteActionOutput) Targets() GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteAction) []GetGatewayRouteSpecHttp2RouteActionTarget {
		return v.Targets
	}).(GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteActionArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteActionArrayOutput) ToGetGatewayRouteSpecHttp2RouteActionArrayOutput() GetGatewayRouteSpecHttp2RouteActionArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionArrayOutput) ToGetGatewayRouteSpecHttp2RouteActionArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteAction {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteAction)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteActionOutput)
}

type GetGatewayRouteSpecHttp2RouteActionRewrite struct {
	Hostnames []GetGatewayRouteSpecHttp2RouteActionRewriteHostname `pulumi:"hostnames"`
	Paths     []GetGatewayRouteSpecHttp2RouteActionRewritePath     `pulumi:"paths"`
	Prefixes  []GetGatewayRouteSpecHttp2RouteActionRewritePrefix   `pulumi:"prefixes"`
}

// GetGatewayRouteSpecHttp2RouteActionRewriteInput is an input type that accepts GetGatewayRouteSpecHttp2RouteActionRewriteArgs and GetGatewayRouteSpecHttp2RouteActionRewriteOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteActionRewriteInput` via:
//
//	GetGatewayRouteSpecHttp2RouteActionRewriteArgs{...}
type GetGatewayRouteSpecHttp2RouteActionRewriteInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteActionRewriteOutput() GetGatewayRouteSpecHttp2RouteActionRewriteOutput
	ToGetGatewayRouteSpecHttp2RouteActionRewriteOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteActionRewriteOutput
}

type GetGatewayRouteSpecHttp2RouteActionRewriteArgs struct {
	Hostnames GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayInput `pulumi:"hostnames"`
	Paths     GetGatewayRouteSpecHttp2RouteActionRewritePathArrayInput     `pulumi:"paths"`
	Prefixes  GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayInput   `pulumi:"prefixes"`
}

func (GetGatewayRouteSpecHttp2RouteActionRewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewrite)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteActionRewriteArgs) ToGetGatewayRouteSpecHttp2RouteActionRewriteOutput() GetGatewayRouteSpecHttp2RouteActionRewriteOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteActionRewriteOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteActionRewriteArgs) ToGetGatewayRouteSpecHttp2RouteActionRewriteOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteActionRewriteOutput)
}

// GetGatewayRouteSpecHttp2RouteActionRewriteArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteActionRewriteArray and GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteActionRewriteArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteActionRewriteArray{ GetGatewayRouteSpecHttp2RouteActionRewriteArgs{...} }
type GetGatewayRouteSpecHttp2RouteActionRewriteArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput() GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput
	ToGetGatewayRouteSpecHttp2RouteActionRewriteArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput
}

type GetGatewayRouteSpecHttp2RouteActionRewriteArray []GetGatewayRouteSpecHttp2RouteActionRewriteInput

func (GetGatewayRouteSpecHttp2RouteActionRewriteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteActionRewrite)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteActionRewriteArray) ToGetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput() GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteActionRewriteArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteActionRewriteArray) ToGetGatewayRouteSpecHttp2RouteActionRewriteArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteActionRewriteOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteActionRewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewrite)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteActionRewriteOutput) ToGetGatewayRouteSpecHttp2RouteActionRewriteOutput() GetGatewayRouteSpecHttp2RouteActionRewriteOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewriteOutput) ToGetGatewayRouteSpecHttp2RouteActionRewriteOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewriteOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewriteOutput) Hostnames() GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteActionRewrite) []GetGatewayRouteSpecHttp2RouteActionRewriteHostname {
		return v.Hostnames
	}).(GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput)
}

func (o GetGatewayRouteSpecHttp2RouteActionRewriteOutput) Paths() GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteActionRewrite) []GetGatewayRouteSpecHttp2RouteActionRewritePath {
		return v.Paths
	}).(GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput)
}

func (o GetGatewayRouteSpecHttp2RouteActionRewriteOutput) Prefixes() GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteActionRewrite) []GetGatewayRouteSpecHttp2RouteActionRewritePrefix {
		return v.Prefixes
	}).(GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteActionRewrite)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput) ToGetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput() GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput) ToGetGatewayRouteSpecHttp2RouteActionRewriteArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteActionRewriteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteActionRewrite {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteActionRewrite)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteActionRewriteOutput)
}

type GetGatewayRouteSpecHttp2RouteActionRewriteHostname struct {
	DefaultTargetHostname string `pulumi:"defaultTargetHostname"`
}

// GetGatewayRouteSpecHttp2RouteActionRewriteHostnameInput is an input type that accepts GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArgs and GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteActionRewriteHostnameInput` via:
//
//	GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArgs{...}
type GetGatewayRouteSpecHttp2RouteActionRewriteHostnameInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput() GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput
	ToGetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput
}

type GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArgs struct {
	DefaultTargetHostname pulumi.StringInput `pulumi:"defaultTargetHostname"`
}

func (GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewriteHostname)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArgs) ToGetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput() GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArgs) ToGetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput)
}

// GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArray and GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArray{ GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArgs{...} }
type GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput() GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput
	ToGetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput
}

type GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArray []GetGatewayRouteSpecHttp2RouteActionRewriteHostnameInput

func (GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteActionRewriteHostname)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArray) ToGetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput() GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArray) ToGetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewriteHostname)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput) ToGetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput() GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput) ToGetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput) DefaultTargetHostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteActionRewriteHostname) string { return v.DefaultTargetHostname }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteActionRewriteHostname)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput) ToGetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput() GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput) ToGetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteActionRewriteHostname {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteActionRewriteHostname)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput)
}

type GetGatewayRouteSpecHttp2RouteActionRewritePath struct {
	Exact string `pulumi:"exact"`
}

// GetGatewayRouteSpecHttp2RouteActionRewritePathInput is an input type that accepts GetGatewayRouteSpecHttp2RouteActionRewritePathArgs and GetGatewayRouteSpecHttp2RouteActionRewritePathOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteActionRewritePathInput` via:
//
//	GetGatewayRouteSpecHttp2RouteActionRewritePathArgs{...}
type GetGatewayRouteSpecHttp2RouteActionRewritePathInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteActionRewritePathOutput() GetGatewayRouteSpecHttp2RouteActionRewritePathOutput
	ToGetGatewayRouteSpecHttp2RouteActionRewritePathOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteActionRewritePathOutput
}

type GetGatewayRouteSpecHttp2RouteActionRewritePathArgs struct {
	Exact pulumi.StringInput `pulumi:"exact"`
}

func (GetGatewayRouteSpecHttp2RouteActionRewritePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewritePath)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteActionRewritePathArgs) ToGetGatewayRouteSpecHttp2RouteActionRewritePathOutput() GetGatewayRouteSpecHttp2RouteActionRewritePathOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteActionRewritePathOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteActionRewritePathArgs) ToGetGatewayRouteSpecHttp2RouteActionRewritePathOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewritePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteActionRewritePathOutput)
}

// GetGatewayRouteSpecHttp2RouteActionRewritePathArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteActionRewritePathArray and GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteActionRewritePathArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteActionRewritePathArray{ GetGatewayRouteSpecHttp2RouteActionRewritePathArgs{...} }
type GetGatewayRouteSpecHttp2RouteActionRewritePathArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput() GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput
	ToGetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput
}

type GetGatewayRouteSpecHttp2RouteActionRewritePathArray []GetGatewayRouteSpecHttp2RouteActionRewritePathInput

func (GetGatewayRouteSpecHttp2RouteActionRewritePathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteActionRewritePath)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteActionRewritePathArray) ToGetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput() GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteActionRewritePathArray) ToGetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteActionRewritePathOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteActionRewritePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewritePath)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteActionRewritePathOutput) ToGetGatewayRouteSpecHttp2RouteActionRewritePathOutput() GetGatewayRouteSpecHttp2RouteActionRewritePathOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewritePathOutput) ToGetGatewayRouteSpecHttp2RouteActionRewritePathOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewritePathOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewritePathOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteActionRewritePath) string { return v.Exact }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteActionRewritePath)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput) ToGetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput() GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput) ToGetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteActionRewritePathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteActionRewritePath {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteActionRewritePath)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteActionRewritePathOutput)
}

type GetGatewayRouteSpecHttp2RouteActionRewritePrefix struct {
	DefaultPrefix string `pulumi:"defaultPrefix"`
	Value         string `pulumi:"value"`
}

// GetGatewayRouteSpecHttp2RouteActionRewritePrefixInput is an input type that accepts GetGatewayRouteSpecHttp2RouteActionRewritePrefixArgs and GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteActionRewritePrefixInput` via:
//
//	GetGatewayRouteSpecHttp2RouteActionRewritePrefixArgs{...}
type GetGatewayRouteSpecHttp2RouteActionRewritePrefixInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput() GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput
	ToGetGatewayRouteSpecHttp2RouteActionRewritePrefixOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput
}

type GetGatewayRouteSpecHttp2RouteActionRewritePrefixArgs struct {
	DefaultPrefix pulumi.StringInput `pulumi:"defaultPrefix"`
	Value         pulumi.StringInput `pulumi:"value"`
}

func (GetGatewayRouteSpecHttp2RouteActionRewritePrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewritePrefix)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteActionRewritePrefixArgs) ToGetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput() GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteActionRewritePrefixOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteActionRewritePrefixArgs) ToGetGatewayRouteSpecHttp2RouteActionRewritePrefixOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput)
}

// GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteActionRewritePrefixArray and GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteActionRewritePrefixArray{ GetGatewayRouteSpecHttp2RouteActionRewritePrefixArgs{...} }
type GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput() GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput
	ToGetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput
}

type GetGatewayRouteSpecHttp2RouteActionRewritePrefixArray []GetGatewayRouteSpecHttp2RouteActionRewritePrefixInput

func (GetGatewayRouteSpecHttp2RouteActionRewritePrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteActionRewritePrefix)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteActionRewritePrefixArray) ToGetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput() GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteActionRewritePrefixArray) ToGetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewritePrefix)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput) ToGetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput() GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput) ToGetGatewayRouteSpecHttp2RouteActionRewritePrefixOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput) DefaultPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteActionRewritePrefix) string { return v.DefaultPrefix }).(pulumi.StringOutput)
}

func (o GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteActionRewritePrefix) string { return v.Value }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteActionRewritePrefix)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput) ToGetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput() GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput) ToGetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteActionRewritePrefix {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteActionRewritePrefix)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput)
}

type GetGatewayRouteSpecHttp2RouteActionTarget struct {
	Port            int                                                       `pulumi:"port"`
	VirtualServices []GetGatewayRouteSpecHttp2RouteActionTargetVirtualService `pulumi:"virtualServices"`
}

// GetGatewayRouteSpecHttp2RouteActionTargetInput is an input type that accepts GetGatewayRouteSpecHttp2RouteActionTargetArgs and GetGatewayRouteSpecHttp2RouteActionTargetOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteActionTargetInput` via:
//
//	GetGatewayRouteSpecHttp2RouteActionTargetArgs{...}
type GetGatewayRouteSpecHttp2RouteActionTargetInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteActionTargetOutput() GetGatewayRouteSpecHttp2RouteActionTargetOutput
	ToGetGatewayRouteSpecHttp2RouteActionTargetOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteActionTargetOutput
}

type GetGatewayRouteSpecHttp2RouteActionTargetArgs struct {
	Port            pulumi.IntInput                                                   `pulumi:"port"`
	VirtualServices GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayInput `pulumi:"virtualServices"`
}

func (GetGatewayRouteSpecHttp2RouteActionTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionTarget)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteActionTargetArgs) ToGetGatewayRouteSpecHttp2RouteActionTargetOutput() GetGatewayRouteSpecHttp2RouteActionTargetOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteActionTargetOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteActionTargetArgs) ToGetGatewayRouteSpecHttp2RouteActionTargetOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteActionTargetOutput)
}

// GetGatewayRouteSpecHttp2RouteActionTargetArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteActionTargetArray and GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteActionTargetArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteActionTargetArray{ GetGatewayRouteSpecHttp2RouteActionTargetArgs{...} }
type GetGatewayRouteSpecHttp2RouteActionTargetArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteActionTargetArrayOutput() GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput
	ToGetGatewayRouteSpecHttp2RouteActionTargetArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput
}

type GetGatewayRouteSpecHttp2RouteActionTargetArray []GetGatewayRouteSpecHttp2RouteActionTargetInput

func (GetGatewayRouteSpecHttp2RouteActionTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteActionTarget)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteActionTargetArray) ToGetGatewayRouteSpecHttp2RouteActionTargetArrayOutput() GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteActionTargetArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteActionTargetArray) ToGetGatewayRouteSpecHttp2RouteActionTargetArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteActionTargetOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteActionTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionTarget)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteActionTargetOutput) ToGetGatewayRouteSpecHttp2RouteActionTargetOutput() GetGatewayRouteSpecHttp2RouteActionTargetOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionTargetOutput) ToGetGatewayRouteSpecHttp2RouteActionTargetOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionTargetOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteActionTarget) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetGatewayRouteSpecHttp2RouteActionTargetOutput) VirtualServices() GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteActionTarget) []GetGatewayRouteSpecHttp2RouteActionTargetVirtualService {
		return v.VirtualServices
	}).(GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteActionTarget)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput) ToGetGatewayRouteSpecHttp2RouteActionTargetArrayOutput() GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput) ToGetGatewayRouteSpecHttp2RouteActionTargetArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteActionTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteActionTarget {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteActionTarget)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteActionTargetOutput)
}

type GetGatewayRouteSpecHttp2RouteActionTargetVirtualService struct {
	VirtualServiceName string `pulumi:"virtualServiceName"`
}

// GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput is an input type that accepts GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs and GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput` via:
//
//	GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs{...}
type GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput() GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput
	ToGetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput
}

type GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs struct {
	VirtualServiceName pulumi.StringInput `pulumi:"virtualServiceName"`
}

func (GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionTargetVirtualService)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) ToGetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput() GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs) ToGetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput)
}

// GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArray and GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArray{ GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs{...} }
type GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput() GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput
	ToGetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput
}

type GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArray []GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput

func (GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteActionTargetVirtualService)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArray) ToGetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput() GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArray) ToGetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionTargetVirtualService)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) ToGetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput() GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) ToGetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput) VirtualServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteActionTargetVirtualService) string { return v.VirtualServiceName }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteActionTargetVirtualService)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput) ToGetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput() GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput) ToGetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteActionTargetVirtualService {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteActionTargetVirtualService)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput)
}

type GetGatewayRouteSpecHttp2RouteMatch struct {
	Headers         []GetGatewayRouteSpecHttp2RouteMatchHeader         `pulumi:"headers"`
	Hostnames       []GetGatewayRouteSpecHttp2RouteMatchHostname       `pulumi:"hostnames"`
	Paths           []GetGatewayRouteSpecHttp2RouteMatchPath           `pulumi:"paths"`
	Port            int                                                `pulumi:"port"`
	Prefix          string                                             `pulumi:"prefix"`
	QueryParameters []GetGatewayRouteSpecHttp2RouteMatchQueryParameter `pulumi:"queryParameters"`
}

// GetGatewayRouteSpecHttp2RouteMatchInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchArgs and GetGatewayRouteSpecHttp2RouteMatchOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchArgs{...}
type GetGatewayRouteSpecHttp2RouteMatchInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchOutput() GetGatewayRouteSpecHttp2RouteMatchOutput
	ToGetGatewayRouteSpecHttp2RouteMatchOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchOutput
}

type GetGatewayRouteSpecHttp2RouteMatchArgs struct {
	Headers         GetGatewayRouteSpecHttp2RouteMatchHeaderArrayInput         `pulumi:"headers"`
	Hostnames       GetGatewayRouteSpecHttp2RouteMatchHostnameArrayInput       `pulumi:"hostnames"`
	Paths           GetGatewayRouteSpecHttp2RouteMatchPathArrayInput           `pulumi:"paths"`
	Port            pulumi.IntInput                                            `pulumi:"port"`
	Prefix          pulumi.StringInput                                         `pulumi:"prefix"`
	QueryParameters GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayInput `pulumi:"queryParameters"`
}

func (GetGatewayRouteSpecHttp2RouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchArgs) ToGetGatewayRouteSpecHttp2RouteMatchOutput() GetGatewayRouteSpecHttp2RouteMatchOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchArgs) ToGetGatewayRouteSpecHttp2RouteMatchOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchOutput)
}

// GetGatewayRouteSpecHttp2RouteMatchArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchArray and GetGatewayRouteSpecHttp2RouteMatchArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchArray{ GetGatewayRouteSpecHttp2RouteMatchArgs{...} }
type GetGatewayRouteSpecHttp2RouteMatchArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchArrayOutput() GetGatewayRouteSpecHttp2RouteMatchArrayOutput
	ToGetGatewayRouteSpecHttp2RouteMatchArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchArrayOutput
}

type GetGatewayRouteSpecHttp2RouteMatchArray []GetGatewayRouteSpecHttp2RouteMatchInput

func (GetGatewayRouteSpecHttp2RouteMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchArray) ToGetGatewayRouteSpecHttp2RouteMatchArrayOutput() GetGatewayRouteSpecHttp2RouteMatchArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchArray) ToGetGatewayRouteSpecHttp2RouteMatchArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchOutput) ToGetGatewayRouteSpecHttp2RouteMatchOutput() GetGatewayRouteSpecHttp2RouteMatchOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchOutput) ToGetGatewayRouteSpecHttp2RouteMatchOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchOutput) Headers() GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatch) []GetGatewayRouteSpecHttp2RouteMatchHeader {
		return v.Headers
	}).(GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput)
}

func (o GetGatewayRouteSpecHttp2RouteMatchOutput) Hostnames() GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatch) []GetGatewayRouteSpecHttp2RouteMatchHostname {
		return v.Hostnames
	}).(GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput)
}

func (o GetGatewayRouteSpecHttp2RouteMatchOutput) Paths() GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatch) []GetGatewayRouteSpecHttp2RouteMatchPath { return v.Paths }).(GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput)
}

func (o GetGatewayRouteSpecHttp2RouteMatchOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatch) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetGatewayRouteSpecHttp2RouteMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetGatewayRouteSpecHttp2RouteMatchOutput) QueryParameters() GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatch) []GetGatewayRouteSpecHttp2RouteMatchQueryParameter {
		return v.QueryParameters
	}).(GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchArrayOutput() GetGatewayRouteSpecHttp2RouteMatchArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteMatch {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteMatch)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteMatchOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchHeader struct {
	Invert  bool                                            `pulumi:"invert"`
	Matches []GetGatewayRouteSpecHttp2RouteMatchHeaderMatch `pulumi:"matches"`
	// Name of the gateway route.
	Name string `pulumi:"name"`
}

// GetGatewayRouteSpecHttp2RouteMatchHeaderInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchHeaderArgs and GetGatewayRouteSpecHttp2RouteMatchHeaderOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchHeaderInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchHeaderArgs{...}
type GetGatewayRouteSpecHttp2RouteMatchHeaderInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchHeaderOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderOutput
	ToGetGatewayRouteSpecHttp2RouteMatchHeaderOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderOutput
}

type GetGatewayRouteSpecHttp2RouteMatchHeaderArgs struct {
	Invert  pulumi.BoolInput                                        `pulumi:"invert"`
	Matches GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayInput `pulumi:"matches"`
	// Name of the gateway route.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetGatewayRouteSpecHttp2RouteMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchHeaderArgs) ToGetGatewayRouteSpecHttp2RouteMatchHeaderOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchHeaderOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchHeaderArgs) ToGetGatewayRouteSpecHttp2RouteMatchHeaderOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchHeaderOutput)
}

// GetGatewayRouteSpecHttp2RouteMatchHeaderArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchHeaderArray and GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchHeaderArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchHeaderArray{ GetGatewayRouteSpecHttp2RouteMatchHeaderArgs{...} }
type GetGatewayRouteSpecHttp2RouteMatchHeaderArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput
	ToGetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput
}

type GetGatewayRouteSpecHttp2RouteMatchHeaderArray []GetGatewayRouteSpecHttp2RouteMatchHeaderInput

func (GetGatewayRouteSpecHttp2RouteMatchHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchHeaderArray) ToGetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchHeaderArray) ToGetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchHeaderOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderOutput) ToGetGatewayRouteSpecHttp2RouteMatchHeaderOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderOutput) ToGetGatewayRouteSpecHttp2RouteMatchHeaderOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderOutput) Invert() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchHeader) bool { return v.Invert }).(pulumi.BoolOutput)
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderOutput) Matches() GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchHeader) []GetGatewayRouteSpecHttp2RouteMatchHeaderMatch {
		return v.Matches
	}).(GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput)
}

// Name of the gateway route.
func (o GetGatewayRouteSpecHttp2RouteMatchHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchHeader) string { return v.Name }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteMatchHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteMatchHeader {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteMatchHeader)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteMatchHeaderOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchHeaderMatch struct {
	Exact  string                                               `pulumi:"exact"`
	Prefix string                                               `pulumi:"prefix"`
	Ranges []GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRange `pulumi:"ranges"`
	Regex  string                                               `pulumi:"regex"`
	Suffix string                                               `pulumi:"suffix"`
}

// GetGatewayRouteSpecHttp2RouteMatchHeaderMatchInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArgs and GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchHeaderMatchInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArgs{...}
type GetGatewayRouteSpecHttp2RouteMatchHeaderMatchInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput
	ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput
}

type GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArgs struct {
	Exact  pulumi.StringInput                                           `pulumi:"exact"`
	Prefix pulumi.StringInput                                           `pulumi:"prefix"`
	Ranges GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayInput `pulumi:"ranges"`
	Regex  pulumi.StringInput                                           `pulumi:"regex"`
	Suffix pulumi.StringInput                                           `pulumi:"suffix"`
}

func (GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArgs) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArgs) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput)
}

// GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArray and GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArray{ GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArgs{...} }
type GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput
	ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput
}

type GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArray []GetGatewayRouteSpecHttp2RouteMatchHeaderMatchInput

func (GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArray) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArray) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchHeaderMatch) string { return v.Exact }).(pulumi.StringOutput)
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchHeaderMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) Ranges() GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchHeaderMatch) []GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRange {
		return v.Ranges
	}).(GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput)
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchHeaderMatch) string { return v.Regex }).(pulumi.StringOutput)
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput) Suffix() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchHeaderMatch) string { return v.Suffix }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteMatchHeaderMatch {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteMatchHeaderMatch)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRange struct {
	End   int `pulumi:"end"`
	Start int `pulumi:"start"`
}

// GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs and GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs{...}
type GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput
	ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput
}

type GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs struct {
	End   pulumi.IntInput `pulumi:"end"`
	Start pulumi.IntInput `pulumi:"start"`
}

func (GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput)
}

// GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArray and GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArray{ GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs{...} }
type GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput
	ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput
}

type GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArray []GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeInput

func (GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArray) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArray) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRange) int { return v.End }).(pulumi.IntOutput)
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRange) int { return v.Start }).(pulumi.IntOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput() GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRange {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRange)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchHostname struct {
	Exact  string `pulumi:"exact"`
	Suffix string `pulumi:"suffix"`
}

// GetGatewayRouteSpecHttp2RouteMatchHostnameInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchHostnameArgs and GetGatewayRouteSpecHttp2RouteMatchHostnameOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchHostnameInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchHostnameArgs{...}
type GetGatewayRouteSpecHttp2RouteMatchHostnameInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchHostnameOutput() GetGatewayRouteSpecHttp2RouteMatchHostnameOutput
	ToGetGatewayRouteSpecHttp2RouteMatchHostnameOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchHostnameOutput
}

type GetGatewayRouteSpecHttp2RouteMatchHostnameArgs struct {
	Exact  pulumi.StringInput `pulumi:"exact"`
	Suffix pulumi.StringInput `pulumi:"suffix"`
}

func (GetGatewayRouteSpecHttp2RouteMatchHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHostname)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchHostnameArgs) ToGetGatewayRouteSpecHttp2RouteMatchHostnameOutput() GetGatewayRouteSpecHttp2RouteMatchHostnameOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchHostnameOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchHostnameArgs) ToGetGatewayRouteSpecHttp2RouteMatchHostnameOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchHostnameOutput)
}

// GetGatewayRouteSpecHttp2RouteMatchHostnameArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchHostnameArray and GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchHostnameArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchHostnameArray{ GetGatewayRouteSpecHttp2RouteMatchHostnameArgs{...} }
type GetGatewayRouteSpecHttp2RouteMatchHostnameArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput() GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput
	ToGetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput
}

type GetGatewayRouteSpecHttp2RouteMatchHostnameArray []GetGatewayRouteSpecHttp2RouteMatchHostnameInput

func (GetGatewayRouteSpecHttp2RouteMatchHostnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatchHostname)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchHostnameArray) ToGetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput() GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchHostnameArray) ToGetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchHostnameOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHostname)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchHostnameOutput) ToGetGatewayRouteSpecHttp2RouteMatchHostnameOutput() GetGatewayRouteSpecHttp2RouteMatchHostnameOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHostnameOutput) ToGetGatewayRouteSpecHttp2RouteMatchHostnameOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHostnameOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHostnameOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchHostname) string { return v.Exact }).(pulumi.StringOutput)
}

func (o GetGatewayRouteSpecHttp2RouteMatchHostnameOutput) Suffix() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchHostname) string { return v.Suffix }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatchHostname)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput() GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteMatchHostnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteMatchHostname {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteMatchHostname)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteMatchHostnameOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchPath struct {
	Exact string `pulumi:"exact"`
	Regex string `pulumi:"regex"`
}

// GetGatewayRouteSpecHttp2RouteMatchPathInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchPathArgs and GetGatewayRouteSpecHttp2RouteMatchPathOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchPathInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchPathArgs{...}
type GetGatewayRouteSpecHttp2RouteMatchPathInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchPathOutput() GetGatewayRouteSpecHttp2RouteMatchPathOutput
	ToGetGatewayRouteSpecHttp2RouteMatchPathOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchPathOutput
}

type GetGatewayRouteSpecHttp2RouteMatchPathArgs struct {
	Exact pulumi.StringInput `pulumi:"exact"`
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (GetGatewayRouteSpecHttp2RouteMatchPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchPathArgs) ToGetGatewayRouteSpecHttp2RouteMatchPathOutput() GetGatewayRouteSpecHttp2RouteMatchPathOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchPathOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchPathArgs) ToGetGatewayRouteSpecHttp2RouteMatchPathOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchPathOutput)
}

// GetGatewayRouteSpecHttp2RouteMatchPathArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchPathArray and GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchPathArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchPathArray{ GetGatewayRouteSpecHttp2RouteMatchPathArgs{...} }
type GetGatewayRouteSpecHttp2RouteMatchPathArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchPathArrayOutput() GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput
	ToGetGatewayRouteSpecHttp2RouteMatchPathArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput
}

type GetGatewayRouteSpecHttp2RouteMatchPathArray []GetGatewayRouteSpecHttp2RouteMatchPathInput

func (GetGatewayRouteSpecHttp2RouteMatchPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchPathArray) ToGetGatewayRouteSpecHttp2RouteMatchPathArrayOutput() GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchPathArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchPathArray) ToGetGatewayRouteSpecHttp2RouteMatchPathArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchPathOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchPathOutput) ToGetGatewayRouteSpecHttp2RouteMatchPathOutput() GetGatewayRouteSpecHttp2RouteMatchPathOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchPathOutput) ToGetGatewayRouteSpecHttp2RouteMatchPathOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchPathOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchPathOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchPath) string { return v.Exact }).(pulumi.StringOutput)
}

func (o GetGatewayRouteSpecHttp2RouteMatchPathOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchPath) string { return v.Regex }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchPathArrayOutput() GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchPathArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteMatchPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteMatchPath {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteMatchPath)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteMatchPathOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchQueryParameter struct {
	Matches []GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatch `pulumi:"matches"`
	// Name of the gateway route.
	Name string `pulumi:"name"`
}

// GetGatewayRouteSpecHttp2RouteMatchQueryParameterInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchQueryParameterArgs and GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchQueryParameterInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchQueryParameterArgs{...}
type GetGatewayRouteSpecHttp2RouteMatchQueryParameterInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput() GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput
	ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput
}

type GetGatewayRouteSpecHttp2RouteMatchQueryParameterArgs struct {
	Matches GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayInput `pulumi:"matches"`
	// Name of the gateway route.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetGatewayRouteSpecHttp2RouteMatchQueryParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchQueryParameterArgs) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput() GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchQueryParameterArgs) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput)
}

// GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchQueryParameterArray and GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchQueryParameterArray{ GetGatewayRouteSpecHttp2RouteMatchQueryParameterArgs{...} }
type GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput() GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput
	ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput
}

type GetGatewayRouteSpecHttp2RouteMatchQueryParameterArray []GetGatewayRouteSpecHttp2RouteMatchQueryParameterInput

func (GetGatewayRouteSpecHttp2RouteMatchQueryParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchQueryParameterArray) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput() GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchQueryParameterArray) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput() GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput) Matches() GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchQueryParameter) []GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatch {
		return v.Matches
	}).(GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput)
}

// Name of the gateway route.
func (o GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchQueryParameter) string { return v.Name }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput() GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteMatchQueryParameter {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteMatchQueryParameter)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatch struct {
	Exact string `pulumi:"exact"`
}

// GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs and GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs{...}
type GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput() GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput
	ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput
}

type GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs struct {
	Exact pulumi.StringInput `pulumi:"exact"`
}

func (GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput() GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput)
}

// GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayInput is an input type that accepts GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArray and GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayInput` via:
//
//	GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArray{ GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs{...} }
type GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput() GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput
	ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput
}

type GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArray []GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchInput

func (GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArray) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput() GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput {
	return i.ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArray) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput() GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatch) string { return v.Exact }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput() GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput) ToGetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatch {
		return vs[0].([]GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatch)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput)
}

type GetGatewayRouteSpecHttpRoute struct {
	Actions []GetGatewayRouteSpecHttpRouteAction `pulumi:"actions"`
	Matches []GetGatewayRouteSpecHttpRouteMatch  `pulumi:"matches"`
}

// GetGatewayRouteSpecHttpRouteInput is an input type that accepts GetGatewayRouteSpecHttpRouteArgs and GetGatewayRouteSpecHttpRouteOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteInput` via:
//
//	GetGatewayRouteSpecHttpRouteArgs{...}
type GetGatewayRouteSpecHttpRouteInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteOutput() GetGatewayRouteSpecHttpRouteOutput
	ToGetGatewayRouteSpecHttpRouteOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteOutput
}

type GetGatewayRouteSpecHttpRouteArgs struct {
	Actions GetGatewayRouteSpecHttpRouteActionArrayInput `pulumi:"actions"`
	Matches GetGatewayRouteSpecHttpRouteMatchArrayInput  `pulumi:"matches"`
}

func (GetGatewayRouteSpecHttpRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRoute)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteArgs) ToGetGatewayRouteSpecHttpRouteOutput() GetGatewayRouteSpecHttpRouteOutput {
	return i.ToGetGatewayRouteSpecHttpRouteOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteArgs) ToGetGatewayRouteSpecHttpRouteOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteOutput)
}

// GetGatewayRouteSpecHttpRouteArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteArray and GetGatewayRouteSpecHttpRouteArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteArray{ GetGatewayRouteSpecHttpRouteArgs{...} }
type GetGatewayRouteSpecHttpRouteArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteArrayOutput() GetGatewayRouteSpecHttpRouteArrayOutput
	ToGetGatewayRouteSpecHttpRouteArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteArrayOutput
}

type GetGatewayRouteSpecHttpRouteArray []GetGatewayRouteSpecHttpRouteInput

func (GetGatewayRouteSpecHttpRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRoute)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteArray) ToGetGatewayRouteSpecHttpRouteArrayOutput() GetGatewayRouteSpecHttpRouteArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteArray) ToGetGatewayRouteSpecHttpRouteArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteArrayOutput)
}

type GetGatewayRouteSpecHttpRouteOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRoute)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteOutput) ToGetGatewayRouteSpecHttpRouteOutput() GetGatewayRouteSpecHttpRouteOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteOutput) ToGetGatewayRouteSpecHttpRouteOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteOutput) Actions() GetGatewayRouteSpecHttpRouteActionArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRoute) []GetGatewayRouteSpecHttpRouteAction { return v.Actions }).(GetGatewayRouteSpecHttpRouteActionArrayOutput)
}

func (o GetGatewayRouteSpecHttpRouteOutput) Matches() GetGatewayRouteSpecHttpRouteMatchArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRoute) []GetGatewayRouteSpecHttpRouteMatch { return v.Matches }).(GetGatewayRouteSpecHttpRouteMatchArrayOutput)
}

type GetGatewayRouteSpecHttpRouteArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRoute)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteArrayOutput) ToGetGatewayRouteSpecHttpRouteArrayOutput() GetGatewayRouteSpecHttpRouteArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteArrayOutput) ToGetGatewayRouteSpecHttpRouteArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRoute {
		return vs[0].([]GetGatewayRouteSpecHttpRoute)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteOutput)
}

type GetGatewayRouteSpecHttpRouteAction struct {
	Rewrites []GetGatewayRouteSpecHttpRouteActionRewrite `pulumi:"rewrites"`
	Targets  []GetGatewayRouteSpecHttpRouteActionTarget  `pulumi:"targets"`
}

// GetGatewayRouteSpecHttpRouteActionInput is an input type that accepts GetGatewayRouteSpecHttpRouteActionArgs and GetGatewayRouteSpecHttpRouteActionOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteActionInput` via:
//
//	GetGatewayRouteSpecHttpRouteActionArgs{...}
type GetGatewayRouteSpecHttpRouteActionInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteActionOutput() GetGatewayRouteSpecHttpRouteActionOutput
	ToGetGatewayRouteSpecHttpRouteActionOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteActionOutput
}

type GetGatewayRouteSpecHttpRouteActionArgs struct {
	Rewrites GetGatewayRouteSpecHttpRouteActionRewriteArrayInput `pulumi:"rewrites"`
	Targets  GetGatewayRouteSpecHttpRouteActionTargetArrayInput  `pulumi:"targets"`
}

func (GetGatewayRouteSpecHttpRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteAction)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteActionArgs) ToGetGatewayRouteSpecHttpRouteActionOutput() GetGatewayRouteSpecHttpRouteActionOutput {
	return i.ToGetGatewayRouteSpecHttpRouteActionOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteActionArgs) ToGetGatewayRouteSpecHttpRouteActionOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteActionOutput)
}

// GetGatewayRouteSpecHttpRouteActionArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteActionArray and GetGatewayRouteSpecHttpRouteActionArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteActionArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteActionArray{ GetGatewayRouteSpecHttpRouteActionArgs{...} }
type GetGatewayRouteSpecHttpRouteActionArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteActionArrayOutput() GetGatewayRouteSpecHttpRouteActionArrayOutput
	ToGetGatewayRouteSpecHttpRouteActionArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteActionArrayOutput
}

type GetGatewayRouteSpecHttpRouteActionArray []GetGatewayRouteSpecHttpRouteActionInput

func (GetGatewayRouteSpecHttpRouteActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteAction)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteActionArray) ToGetGatewayRouteSpecHttpRouteActionArrayOutput() GetGatewayRouteSpecHttpRouteActionArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteActionArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteActionArray) ToGetGatewayRouteSpecHttpRouteActionArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteActionArrayOutput)
}

type GetGatewayRouteSpecHttpRouteActionOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteAction)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteActionOutput) ToGetGatewayRouteSpecHttpRouteActionOutput() GetGatewayRouteSpecHttpRouteActionOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionOutput) ToGetGatewayRouteSpecHttpRouteActionOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionOutput) Rewrites() GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteAction) []GetGatewayRouteSpecHttpRouteActionRewrite {
		return v.Rewrites
	}).(GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput)
}

func (o GetGatewayRouteSpecHttpRouteActionOutput) Targets() GetGatewayRouteSpecHttpRouteActionTargetArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteAction) []GetGatewayRouteSpecHttpRouteActionTarget {
		return v.Targets
	}).(GetGatewayRouteSpecHttpRouteActionTargetArrayOutput)
}

type GetGatewayRouteSpecHttpRouteActionArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteAction)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteActionArrayOutput) ToGetGatewayRouteSpecHttpRouteActionArrayOutput() GetGatewayRouteSpecHttpRouteActionArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionArrayOutput) ToGetGatewayRouteSpecHttpRouteActionArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteAction {
		return vs[0].([]GetGatewayRouteSpecHttpRouteAction)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteActionOutput)
}

type GetGatewayRouteSpecHttpRouteActionRewrite struct {
	Hostnames []GetGatewayRouteSpecHttpRouteActionRewriteHostname `pulumi:"hostnames"`
	Paths     []GetGatewayRouteSpecHttpRouteActionRewritePath     `pulumi:"paths"`
	Prefixes  []GetGatewayRouteSpecHttpRouteActionRewritePrefix   `pulumi:"prefixes"`
}

// GetGatewayRouteSpecHttpRouteActionRewriteInput is an input type that accepts GetGatewayRouteSpecHttpRouteActionRewriteArgs and GetGatewayRouteSpecHttpRouteActionRewriteOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteActionRewriteInput` via:
//
//	GetGatewayRouteSpecHttpRouteActionRewriteArgs{...}
type GetGatewayRouteSpecHttpRouteActionRewriteInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteActionRewriteOutput() GetGatewayRouteSpecHttpRouteActionRewriteOutput
	ToGetGatewayRouteSpecHttpRouteActionRewriteOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteActionRewriteOutput
}

type GetGatewayRouteSpecHttpRouteActionRewriteArgs struct {
	Hostnames GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayInput `pulumi:"hostnames"`
	Paths     GetGatewayRouteSpecHttpRouteActionRewritePathArrayInput     `pulumi:"paths"`
	Prefixes  GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayInput   `pulumi:"prefixes"`
}

func (GetGatewayRouteSpecHttpRouteActionRewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewrite)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteActionRewriteArgs) ToGetGatewayRouteSpecHttpRouteActionRewriteOutput() GetGatewayRouteSpecHttpRouteActionRewriteOutput {
	return i.ToGetGatewayRouteSpecHttpRouteActionRewriteOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteActionRewriteArgs) ToGetGatewayRouteSpecHttpRouteActionRewriteOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteActionRewriteOutput)
}

// GetGatewayRouteSpecHttpRouteActionRewriteArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteActionRewriteArray and GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteActionRewriteArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteActionRewriteArray{ GetGatewayRouteSpecHttpRouteActionRewriteArgs{...} }
type GetGatewayRouteSpecHttpRouteActionRewriteArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteActionRewriteArrayOutput() GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput
	ToGetGatewayRouteSpecHttpRouteActionRewriteArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput
}

type GetGatewayRouteSpecHttpRouteActionRewriteArray []GetGatewayRouteSpecHttpRouteActionRewriteInput

func (GetGatewayRouteSpecHttpRouteActionRewriteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteActionRewrite)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteActionRewriteArray) ToGetGatewayRouteSpecHttpRouteActionRewriteArrayOutput() GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteActionRewriteArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteActionRewriteArray) ToGetGatewayRouteSpecHttpRouteActionRewriteArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput)
}

type GetGatewayRouteSpecHttpRouteActionRewriteOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteActionRewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewrite)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteActionRewriteOutput) ToGetGatewayRouteSpecHttpRouteActionRewriteOutput() GetGatewayRouteSpecHttpRouteActionRewriteOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewriteOutput) ToGetGatewayRouteSpecHttpRouteActionRewriteOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewriteOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewriteOutput) Hostnames() GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteActionRewrite) []GetGatewayRouteSpecHttpRouteActionRewriteHostname {
		return v.Hostnames
	}).(GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput)
}

func (o GetGatewayRouteSpecHttpRouteActionRewriteOutput) Paths() GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteActionRewrite) []GetGatewayRouteSpecHttpRouteActionRewritePath {
		return v.Paths
	}).(GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput)
}

func (o GetGatewayRouteSpecHttpRouteActionRewriteOutput) Prefixes() GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteActionRewrite) []GetGatewayRouteSpecHttpRouteActionRewritePrefix {
		return v.Prefixes
	}).(GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput)
}

type GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteActionRewrite)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput) ToGetGatewayRouteSpecHttpRouteActionRewriteArrayOutput() GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput) ToGetGatewayRouteSpecHttpRouteActionRewriteArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteActionRewriteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteActionRewrite {
		return vs[0].([]GetGatewayRouteSpecHttpRouteActionRewrite)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteActionRewriteOutput)
}

type GetGatewayRouteSpecHttpRouteActionRewriteHostname struct {
	DefaultTargetHostname string `pulumi:"defaultTargetHostname"`
}

// GetGatewayRouteSpecHttpRouteActionRewriteHostnameInput is an input type that accepts GetGatewayRouteSpecHttpRouteActionRewriteHostnameArgs and GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteActionRewriteHostnameInput` via:
//
//	GetGatewayRouteSpecHttpRouteActionRewriteHostnameArgs{...}
type GetGatewayRouteSpecHttpRouteActionRewriteHostnameInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput() GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput
	ToGetGatewayRouteSpecHttpRouteActionRewriteHostnameOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput
}

type GetGatewayRouteSpecHttpRouteActionRewriteHostnameArgs struct {
	DefaultTargetHostname pulumi.StringInput `pulumi:"defaultTargetHostname"`
}

func (GetGatewayRouteSpecHttpRouteActionRewriteHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewriteHostname)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteActionRewriteHostnameArgs) ToGetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput() GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput {
	return i.ToGetGatewayRouteSpecHttpRouteActionRewriteHostnameOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteActionRewriteHostnameArgs) ToGetGatewayRouteSpecHttpRouteActionRewriteHostnameOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput)
}

// GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteActionRewriteHostnameArray and GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteActionRewriteHostnameArray{ GetGatewayRouteSpecHttpRouteActionRewriteHostnameArgs{...} }
type GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput() GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput
	ToGetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput
}

type GetGatewayRouteSpecHttpRouteActionRewriteHostnameArray []GetGatewayRouteSpecHttpRouteActionRewriteHostnameInput

func (GetGatewayRouteSpecHttpRouteActionRewriteHostnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteActionRewriteHostname)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteActionRewriteHostnameArray) ToGetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput() GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteActionRewriteHostnameArray) ToGetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput)
}

type GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewriteHostname)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput) ToGetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput() GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput) ToGetGatewayRouteSpecHttpRouteActionRewriteHostnameOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput) DefaultTargetHostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteActionRewriteHostname) string { return v.DefaultTargetHostname }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteActionRewriteHostname)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput) ToGetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput() GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput) ToGetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteActionRewriteHostname {
		return vs[0].([]GetGatewayRouteSpecHttpRouteActionRewriteHostname)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput)
}

type GetGatewayRouteSpecHttpRouteActionRewritePath struct {
	Exact string `pulumi:"exact"`
}

// GetGatewayRouteSpecHttpRouteActionRewritePathInput is an input type that accepts GetGatewayRouteSpecHttpRouteActionRewritePathArgs and GetGatewayRouteSpecHttpRouteActionRewritePathOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteActionRewritePathInput` via:
//
//	GetGatewayRouteSpecHttpRouteActionRewritePathArgs{...}
type GetGatewayRouteSpecHttpRouteActionRewritePathInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteActionRewritePathOutput() GetGatewayRouteSpecHttpRouteActionRewritePathOutput
	ToGetGatewayRouteSpecHttpRouteActionRewritePathOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteActionRewritePathOutput
}

type GetGatewayRouteSpecHttpRouteActionRewritePathArgs struct {
	Exact pulumi.StringInput `pulumi:"exact"`
}

func (GetGatewayRouteSpecHttpRouteActionRewritePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewritePath)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteActionRewritePathArgs) ToGetGatewayRouteSpecHttpRouteActionRewritePathOutput() GetGatewayRouteSpecHttpRouteActionRewritePathOutput {
	return i.ToGetGatewayRouteSpecHttpRouteActionRewritePathOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteActionRewritePathArgs) ToGetGatewayRouteSpecHttpRouteActionRewritePathOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewritePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteActionRewritePathOutput)
}

// GetGatewayRouteSpecHttpRouteActionRewritePathArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteActionRewritePathArray and GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteActionRewritePathArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteActionRewritePathArray{ GetGatewayRouteSpecHttpRouteActionRewritePathArgs{...} }
type GetGatewayRouteSpecHttpRouteActionRewritePathArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput() GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput
	ToGetGatewayRouteSpecHttpRouteActionRewritePathArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput
}

type GetGatewayRouteSpecHttpRouteActionRewritePathArray []GetGatewayRouteSpecHttpRouteActionRewritePathInput

func (GetGatewayRouteSpecHttpRouteActionRewritePathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteActionRewritePath)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteActionRewritePathArray) ToGetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput() GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteActionRewritePathArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteActionRewritePathArray) ToGetGatewayRouteSpecHttpRouteActionRewritePathArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput)
}

type GetGatewayRouteSpecHttpRouteActionRewritePathOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteActionRewritePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewritePath)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteActionRewritePathOutput) ToGetGatewayRouteSpecHttpRouteActionRewritePathOutput() GetGatewayRouteSpecHttpRouteActionRewritePathOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewritePathOutput) ToGetGatewayRouteSpecHttpRouteActionRewritePathOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewritePathOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewritePathOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteActionRewritePath) string { return v.Exact }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteActionRewritePath)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput) ToGetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput() GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput) ToGetGatewayRouteSpecHttpRouteActionRewritePathArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteActionRewritePathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteActionRewritePath {
		return vs[0].([]GetGatewayRouteSpecHttpRouteActionRewritePath)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteActionRewritePathOutput)
}

type GetGatewayRouteSpecHttpRouteActionRewritePrefix struct {
	DefaultPrefix string `pulumi:"defaultPrefix"`
	Value         string `pulumi:"value"`
}

// GetGatewayRouteSpecHttpRouteActionRewritePrefixInput is an input type that accepts GetGatewayRouteSpecHttpRouteActionRewritePrefixArgs and GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteActionRewritePrefixInput` via:
//
//	GetGatewayRouteSpecHttpRouteActionRewritePrefixArgs{...}
type GetGatewayRouteSpecHttpRouteActionRewritePrefixInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteActionRewritePrefixOutput() GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput
	ToGetGatewayRouteSpecHttpRouteActionRewritePrefixOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput
}

type GetGatewayRouteSpecHttpRouteActionRewritePrefixArgs struct {
	DefaultPrefix pulumi.StringInput `pulumi:"defaultPrefix"`
	Value         pulumi.StringInput `pulumi:"value"`
}

func (GetGatewayRouteSpecHttpRouteActionRewritePrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewritePrefix)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteActionRewritePrefixArgs) ToGetGatewayRouteSpecHttpRouteActionRewritePrefixOutput() GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput {
	return i.ToGetGatewayRouteSpecHttpRouteActionRewritePrefixOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteActionRewritePrefixArgs) ToGetGatewayRouteSpecHttpRouteActionRewritePrefixOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput)
}

// GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteActionRewritePrefixArray and GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteActionRewritePrefixArray{ GetGatewayRouteSpecHttpRouteActionRewritePrefixArgs{...} }
type GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput() GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput
	ToGetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput
}

type GetGatewayRouteSpecHttpRouteActionRewritePrefixArray []GetGatewayRouteSpecHttpRouteActionRewritePrefixInput

func (GetGatewayRouteSpecHttpRouteActionRewritePrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteActionRewritePrefix)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteActionRewritePrefixArray) ToGetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput() GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteActionRewritePrefixArray) ToGetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput)
}

type GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewritePrefix)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput) ToGetGatewayRouteSpecHttpRouteActionRewritePrefixOutput() GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput) ToGetGatewayRouteSpecHttpRouteActionRewritePrefixOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput) DefaultPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteActionRewritePrefix) string { return v.DefaultPrefix }).(pulumi.StringOutput)
}

func (o GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteActionRewritePrefix) string { return v.Value }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteActionRewritePrefix)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput) ToGetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput() GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput) ToGetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteActionRewritePrefix {
		return vs[0].([]GetGatewayRouteSpecHttpRouteActionRewritePrefix)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput)
}

type GetGatewayRouteSpecHttpRouteActionTarget struct {
	Port            int                                                      `pulumi:"port"`
	VirtualServices []GetGatewayRouteSpecHttpRouteActionTargetVirtualService `pulumi:"virtualServices"`
}

// GetGatewayRouteSpecHttpRouteActionTargetInput is an input type that accepts GetGatewayRouteSpecHttpRouteActionTargetArgs and GetGatewayRouteSpecHttpRouteActionTargetOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteActionTargetInput` via:
//
//	GetGatewayRouteSpecHttpRouteActionTargetArgs{...}
type GetGatewayRouteSpecHttpRouteActionTargetInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteActionTargetOutput() GetGatewayRouteSpecHttpRouteActionTargetOutput
	ToGetGatewayRouteSpecHttpRouteActionTargetOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteActionTargetOutput
}

type GetGatewayRouteSpecHttpRouteActionTargetArgs struct {
	Port            pulumi.IntInput                                                  `pulumi:"port"`
	VirtualServices GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayInput `pulumi:"virtualServices"`
}

func (GetGatewayRouteSpecHttpRouteActionTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionTarget)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteActionTargetArgs) ToGetGatewayRouteSpecHttpRouteActionTargetOutput() GetGatewayRouteSpecHttpRouteActionTargetOutput {
	return i.ToGetGatewayRouteSpecHttpRouteActionTargetOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteActionTargetArgs) ToGetGatewayRouteSpecHttpRouteActionTargetOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteActionTargetOutput)
}

// GetGatewayRouteSpecHttpRouteActionTargetArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteActionTargetArray and GetGatewayRouteSpecHttpRouteActionTargetArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteActionTargetArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteActionTargetArray{ GetGatewayRouteSpecHttpRouteActionTargetArgs{...} }
type GetGatewayRouteSpecHttpRouteActionTargetArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteActionTargetArrayOutput() GetGatewayRouteSpecHttpRouteActionTargetArrayOutput
	ToGetGatewayRouteSpecHttpRouteActionTargetArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteActionTargetArrayOutput
}

type GetGatewayRouteSpecHttpRouteActionTargetArray []GetGatewayRouteSpecHttpRouteActionTargetInput

func (GetGatewayRouteSpecHttpRouteActionTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteActionTarget)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteActionTargetArray) ToGetGatewayRouteSpecHttpRouteActionTargetArrayOutput() GetGatewayRouteSpecHttpRouteActionTargetArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteActionTargetArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteActionTargetArray) ToGetGatewayRouteSpecHttpRouteActionTargetArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteActionTargetArrayOutput)
}

type GetGatewayRouteSpecHttpRouteActionTargetOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteActionTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionTarget)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteActionTargetOutput) ToGetGatewayRouteSpecHttpRouteActionTargetOutput() GetGatewayRouteSpecHttpRouteActionTargetOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionTargetOutput) ToGetGatewayRouteSpecHttpRouteActionTargetOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionTargetOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteActionTarget) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetGatewayRouteSpecHttpRouteActionTargetOutput) VirtualServices() GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteActionTarget) []GetGatewayRouteSpecHttpRouteActionTargetVirtualService {
		return v.VirtualServices
	}).(GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput)
}

type GetGatewayRouteSpecHttpRouteActionTargetArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteActionTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteActionTarget)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteActionTargetArrayOutput) ToGetGatewayRouteSpecHttpRouteActionTargetArrayOutput() GetGatewayRouteSpecHttpRouteActionTargetArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionTargetArrayOutput) ToGetGatewayRouteSpecHttpRouteActionTargetArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionTargetArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionTargetArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteActionTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteActionTarget {
		return vs[0].([]GetGatewayRouteSpecHttpRouteActionTarget)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteActionTargetOutput)
}

type GetGatewayRouteSpecHttpRouteActionTargetVirtualService struct {
	VirtualServiceName string `pulumi:"virtualServiceName"`
}

// GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceInput is an input type that accepts GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs and GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceInput` via:
//
//	GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs{...}
type GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput() GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput
	ToGetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput
}

type GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs struct {
	VirtualServiceName pulumi.StringInput `pulumi:"virtualServiceName"`
}

func (GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionTargetVirtualService)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) ToGetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput() GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return i.ToGetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs) ToGetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput)
}

// GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArray and GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArray{ GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs{...} }
type GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput() GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput
	ToGetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput
}

type GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArray []GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceInput

func (GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteActionTargetVirtualService)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArray) ToGetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput() GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArray) ToGetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput)
}

type GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionTargetVirtualService)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) ToGetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput() GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) ToGetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput) VirtualServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteActionTargetVirtualService) string { return v.VirtualServiceName }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteActionTargetVirtualService)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput) ToGetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput() GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput) ToGetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteActionTargetVirtualService {
		return vs[0].([]GetGatewayRouteSpecHttpRouteActionTargetVirtualService)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput)
}

type GetGatewayRouteSpecHttpRouteMatch struct {
	Headers         []GetGatewayRouteSpecHttpRouteMatchHeader         `pulumi:"headers"`
	Hostnames       []GetGatewayRouteSpecHttpRouteMatchHostname       `pulumi:"hostnames"`
	Paths           []GetGatewayRouteSpecHttpRouteMatchPath           `pulumi:"paths"`
	Port            int                                               `pulumi:"port"`
	Prefix          string                                            `pulumi:"prefix"`
	QueryParameters []GetGatewayRouteSpecHttpRouteMatchQueryParameter `pulumi:"queryParameters"`
}

// GetGatewayRouteSpecHttpRouteMatchInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchArgs and GetGatewayRouteSpecHttpRouteMatchOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchArgs{...}
type GetGatewayRouteSpecHttpRouteMatchInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchOutput() GetGatewayRouteSpecHttpRouteMatchOutput
	ToGetGatewayRouteSpecHttpRouteMatchOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchOutput
}

type GetGatewayRouteSpecHttpRouteMatchArgs struct {
	Headers         GetGatewayRouteSpecHttpRouteMatchHeaderArrayInput         `pulumi:"headers"`
	Hostnames       GetGatewayRouteSpecHttpRouteMatchHostnameArrayInput       `pulumi:"hostnames"`
	Paths           GetGatewayRouteSpecHttpRouteMatchPathArrayInput           `pulumi:"paths"`
	Port            pulumi.IntInput                                           `pulumi:"port"`
	Prefix          pulumi.StringInput                                        `pulumi:"prefix"`
	QueryParameters GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayInput `pulumi:"queryParameters"`
}

func (GetGatewayRouteSpecHttpRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchArgs) ToGetGatewayRouteSpecHttpRouteMatchOutput() GetGatewayRouteSpecHttpRouteMatchOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchArgs) ToGetGatewayRouteSpecHttpRouteMatchOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchOutput)
}

// GetGatewayRouteSpecHttpRouteMatchArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchArray and GetGatewayRouteSpecHttpRouteMatchArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchArray{ GetGatewayRouteSpecHttpRouteMatchArgs{...} }
type GetGatewayRouteSpecHttpRouteMatchArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchArrayOutput() GetGatewayRouteSpecHttpRouteMatchArrayOutput
	ToGetGatewayRouteSpecHttpRouteMatchArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchArrayOutput
}

type GetGatewayRouteSpecHttpRouteMatchArray []GetGatewayRouteSpecHttpRouteMatchInput

func (GetGatewayRouteSpecHttpRouteMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchArray) ToGetGatewayRouteSpecHttpRouteMatchArrayOutput() GetGatewayRouteSpecHttpRouteMatchArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchArray) ToGetGatewayRouteSpecHttpRouteMatchArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchArrayOutput)
}

type GetGatewayRouteSpecHttpRouteMatchOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchOutput) ToGetGatewayRouteSpecHttpRouteMatchOutput() GetGatewayRouteSpecHttpRouteMatchOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchOutput) ToGetGatewayRouteSpecHttpRouteMatchOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchOutput) Headers() GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatch) []GetGatewayRouteSpecHttpRouteMatchHeader { return v.Headers }).(GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput)
}

func (o GetGatewayRouteSpecHttpRouteMatchOutput) Hostnames() GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatch) []GetGatewayRouteSpecHttpRouteMatchHostname {
		return v.Hostnames
	}).(GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput)
}

func (o GetGatewayRouteSpecHttpRouteMatchOutput) Paths() GetGatewayRouteSpecHttpRouteMatchPathArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatch) []GetGatewayRouteSpecHttpRouteMatchPath { return v.Paths }).(GetGatewayRouteSpecHttpRouteMatchPathArrayOutput)
}

func (o GetGatewayRouteSpecHttpRouteMatchOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatch) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetGatewayRouteSpecHttpRouteMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetGatewayRouteSpecHttpRouteMatchOutput) QueryParameters() GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatch) []GetGatewayRouteSpecHttpRouteMatchQueryParameter {
		return v.QueryParameters
	}).(GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput)
}

type GetGatewayRouteSpecHttpRouteMatchArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchArrayOutput() GetGatewayRouteSpecHttpRouteMatchArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteMatch {
		return vs[0].([]GetGatewayRouteSpecHttpRouteMatch)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteMatchOutput)
}

type GetGatewayRouteSpecHttpRouteMatchHeader struct {
	Invert  bool                                           `pulumi:"invert"`
	Matches []GetGatewayRouteSpecHttpRouteMatchHeaderMatch `pulumi:"matches"`
	// Name of the gateway route.
	Name string `pulumi:"name"`
}

// GetGatewayRouteSpecHttpRouteMatchHeaderInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchHeaderArgs and GetGatewayRouteSpecHttpRouteMatchHeaderOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchHeaderInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchHeaderArgs{...}
type GetGatewayRouteSpecHttpRouteMatchHeaderInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchHeaderOutput() GetGatewayRouteSpecHttpRouteMatchHeaderOutput
	ToGetGatewayRouteSpecHttpRouteMatchHeaderOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderOutput
}

type GetGatewayRouteSpecHttpRouteMatchHeaderArgs struct {
	Invert  pulumi.BoolInput                                       `pulumi:"invert"`
	Matches GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayInput `pulumi:"matches"`
	// Name of the gateway route.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetGatewayRouteSpecHttpRouteMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchHeaderArgs) ToGetGatewayRouteSpecHttpRouteMatchHeaderOutput() GetGatewayRouteSpecHttpRouteMatchHeaderOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchHeaderOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchHeaderArgs) ToGetGatewayRouteSpecHttpRouteMatchHeaderOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchHeaderOutput)
}

// GetGatewayRouteSpecHttpRouteMatchHeaderArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchHeaderArray and GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchHeaderArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchHeaderArray{ GetGatewayRouteSpecHttpRouteMatchHeaderArgs{...} }
type GetGatewayRouteSpecHttpRouteMatchHeaderArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput() GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput
	ToGetGatewayRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput
}

type GetGatewayRouteSpecHttpRouteMatchHeaderArray []GetGatewayRouteSpecHttpRouteMatchHeaderInput

func (GetGatewayRouteSpecHttpRouteMatchHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchHeaderArray) ToGetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput() GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchHeaderArray) ToGetGatewayRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput)
}

type GetGatewayRouteSpecHttpRouteMatchHeaderOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderOutput) ToGetGatewayRouteSpecHttpRouteMatchHeaderOutput() GetGatewayRouteSpecHttpRouteMatchHeaderOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderOutput) ToGetGatewayRouteSpecHttpRouteMatchHeaderOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderOutput) Invert() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchHeader) bool { return v.Invert }).(pulumi.BoolOutput)
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderOutput) Matches() GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchHeader) []GetGatewayRouteSpecHttpRouteMatchHeaderMatch {
		return v.Matches
	}).(GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput)
}

// Name of the gateway route.
func (o GetGatewayRouteSpecHttpRouteMatchHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchHeader) string { return v.Name }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput() GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteMatchHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteMatchHeader {
		return vs[0].([]GetGatewayRouteSpecHttpRouteMatchHeader)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteMatchHeaderOutput)
}

type GetGatewayRouteSpecHttpRouteMatchHeaderMatch struct {
	Exact  string                                              `pulumi:"exact"`
	Prefix string                                              `pulumi:"prefix"`
	Ranges []GetGatewayRouteSpecHttpRouteMatchHeaderMatchRange `pulumi:"ranges"`
	Regex  string                                              `pulumi:"regex"`
	Suffix string                                              `pulumi:"suffix"`
}

// GetGatewayRouteSpecHttpRouteMatchHeaderMatchInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchHeaderMatchArgs and GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchHeaderMatchInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchHeaderMatchArgs{...}
type GetGatewayRouteSpecHttpRouteMatchHeaderMatchInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput() GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput
	ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput
}

type GetGatewayRouteSpecHttpRouteMatchHeaderMatchArgs struct {
	Exact  pulumi.StringInput                                          `pulumi:"exact"`
	Prefix pulumi.StringInput                                          `pulumi:"prefix"`
	Ranges GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayInput `pulumi:"ranges"`
	Regex  pulumi.StringInput                                          `pulumi:"regex"`
	Suffix pulumi.StringInput                                          `pulumi:"suffix"`
}

func (GetGatewayRouteSpecHttpRouteMatchHeaderMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchHeaderMatchArgs) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput() GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchHeaderMatchArgs) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput)
}

// GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchHeaderMatchArray and GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchHeaderMatchArray{ GetGatewayRouteSpecHttpRouteMatchHeaderMatchArgs{...} }
type GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput() GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput
	ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput
}

type GetGatewayRouteSpecHttpRouteMatchHeaderMatchArray []GetGatewayRouteSpecHttpRouteMatchHeaderMatchInput

func (GetGatewayRouteSpecHttpRouteMatchHeaderMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchHeaderMatchArray) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput() GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchHeaderMatchArray) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput)
}

type GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput() GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchHeaderMatch) string { return v.Exact }).(pulumi.StringOutput)
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchHeaderMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput) Ranges() GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchHeaderMatch) []GetGatewayRouteSpecHttpRouteMatchHeaderMatchRange {
		return v.Ranges
	}).(GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput)
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchHeaderMatch) string { return v.Regex }).(pulumi.StringOutput)
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput) Suffix() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchHeaderMatch) string { return v.Suffix }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput() GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteMatchHeaderMatch {
		return vs[0].([]GetGatewayRouteSpecHttpRouteMatchHeaderMatch)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput)
}

type GetGatewayRouteSpecHttpRouteMatchHeaderMatchRange struct {
	End   int `pulumi:"end"`
	Start int `pulumi:"start"`
}

// GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs and GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs{...}
type GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput() GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput
	ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput
}

type GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs struct {
	End   pulumi.IntInput `pulumi:"end"`
	Start pulumi.IntInput `pulumi:"start"`
}

func (GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput() GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput)
}

// GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArray and GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArray{ GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs{...} }
type GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput() GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput
	ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput
}

type GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArray []GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeInput

func (GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArray) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput() GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArray) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput)
}

type GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput() GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchHeaderMatchRange) int { return v.End }).(pulumi.IntOutput)
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchHeaderMatchRange) int { return v.Start }).(pulumi.IntOutput)
}

type GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput() GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteMatchHeaderMatchRange {
		return vs[0].([]GetGatewayRouteSpecHttpRouteMatchHeaderMatchRange)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput)
}

type GetGatewayRouteSpecHttpRouteMatchHostname struct {
	Exact  string `pulumi:"exact"`
	Suffix string `pulumi:"suffix"`
}

// GetGatewayRouteSpecHttpRouteMatchHostnameInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchHostnameArgs and GetGatewayRouteSpecHttpRouteMatchHostnameOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchHostnameInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchHostnameArgs{...}
type GetGatewayRouteSpecHttpRouteMatchHostnameInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchHostnameOutput() GetGatewayRouteSpecHttpRouteMatchHostnameOutput
	ToGetGatewayRouteSpecHttpRouteMatchHostnameOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchHostnameOutput
}

type GetGatewayRouteSpecHttpRouteMatchHostnameArgs struct {
	Exact  pulumi.StringInput `pulumi:"exact"`
	Suffix pulumi.StringInput `pulumi:"suffix"`
}

func (GetGatewayRouteSpecHttpRouteMatchHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHostname)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchHostnameArgs) ToGetGatewayRouteSpecHttpRouteMatchHostnameOutput() GetGatewayRouteSpecHttpRouteMatchHostnameOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchHostnameOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchHostnameArgs) ToGetGatewayRouteSpecHttpRouteMatchHostnameOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchHostnameOutput)
}

// GetGatewayRouteSpecHttpRouteMatchHostnameArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchHostnameArray and GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchHostnameArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchHostnameArray{ GetGatewayRouteSpecHttpRouteMatchHostnameArgs{...} }
type GetGatewayRouteSpecHttpRouteMatchHostnameArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput() GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput
	ToGetGatewayRouteSpecHttpRouteMatchHostnameArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput
}

type GetGatewayRouteSpecHttpRouteMatchHostnameArray []GetGatewayRouteSpecHttpRouteMatchHostnameInput

func (GetGatewayRouteSpecHttpRouteMatchHostnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatchHostname)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchHostnameArray) ToGetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput() GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchHostnameArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchHostnameArray) ToGetGatewayRouteSpecHttpRouteMatchHostnameArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput)
}

type GetGatewayRouteSpecHttpRouteMatchHostnameOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHostname)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchHostnameOutput) ToGetGatewayRouteSpecHttpRouteMatchHostnameOutput() GetGatewayRouteSpecHttpRouteMatchHostnameOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHostnameOutput) ToGetGatewayRouteSpecHttpRouteMatchHostnameOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHostnameOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHostnameOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchHostname) string { return v.Exact }).(pulumi.StringOutput)
}

func (o GetGatewayRouteSpecHttpRouteMatchHostnameOutput) Suffix() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchHostname) string { return v.Suffix }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatchHostname)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput() GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchHostnameArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteMatchHostnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteMatchHostname {
		return vs[0].([]GetGatewayRouteSpecHttpRouteMatchHostname)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteMatchHostnameOutput)
}

type GetGatewayRouteSpecHttpRouteMatchPath struct {
	Exact string `pulumi:"exact"`
	Regex string `pulumi:"regex"`
}

// GetGatewayRouteSpecHttpRouteMatchPathInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchPathArgs and GetGatewayRouteSpecHttpRouteMatchPathOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchPathInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchPathArgs{...}
type GetGatewayRouteSpecHttpRouteMatchPathInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchPathOutput() GetGatewayRouteSpecHttpRouteMatchPathOutput
	ToGetGatewayRouteSpecHttpRouteMatchPathOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchPathOutput
}

type GetGatewayRouteSpecHttpRouteMatchPathArgs struct {
	Exact pulumi.StringInput `pulumi:"exact"`
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (GetGatewayRouteSpecHttpRouteMatchPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchPathArgs) ToGetGatewayRouteSpecHttpRouteMatchPathOutput() GetGatewayRouteSpecHttpRouteMatchPathOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchPathOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchPathArgs) ToGetGatewayRouteSpecHttpRouteMatchPathOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchPathOutput)
}

// GetGatewayRouteSpecHttpRouteMatchPathArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchPathArray and GetGatewayRouteSpecHttpRouteMatchPathArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchPathArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchPathArray{ GetGatewayRouteSpecHttpRouteMatchPathArgs{...} }
type GetGatewayRouteSpecHttpRouteMatchPathArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchPathArrayOutput() GetGatewayRouteSpecHttpRouteMatchPathArrayOutput
	ToGetGatewayRouteSpecHttpRouteMatchPathArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchPathArrayOutput
}

type GetGatewayRouteSpecHttpRouteMatchPathArray []GetGatewayRouteSpecHttpRouteMatchPathInput

func (GetGatewayRouteSpecHttpRouteMatchPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchPathArray) ToGetGatewayRouteSpecHttpRouteMatchPathArrayOutput() GetGatewayRouteSpecHttpRouteMatchPathArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchPathArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchPathArray) ToGetGatewayRouteSpecHttpRouteMatchPathArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchPathArrayOutput)
}

type GetGatewayRouteSpecHttpRouteMatchPathOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchPathOutput) ToGetGatewayRouteSpecHttpRouteMatchPathOutput() GetGatewayRouteSpecHttpRouteMatchPathOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchPathOutput) ToGetGatewayRouteSpecHttpRouteMatchPathOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchPathOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchPathOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchPath) string { return v.Exact }).(pulumi.StringOutput)
}

func (o GetGatewayRouteSpecHttpRouteMatchPathOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchPath) string { return v.Regex }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttpRouteMatchPathArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchPathArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchPathArrayOutput() GetGatewayRouteSpecHttpRouteMatchPathArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchPathArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchPathArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchPathArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchPathArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteMatchPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteMatchPath {
		return vs[0].([]GetGatewayRouteSpecHttpRouteMatchPath)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteMatchPathOutput)
}

type GetGatewayRouteSpecHttpRouteMatchQueryParameter struct {
	Matches []GetGatewayRouteSpecHttpRouteMatchQueryParameterMatch `pulumi:"matches"`
	// Name of the gateway route.
	Name string `pulumi:"name"`
}

// GetGatewayRouteSpecHttpRouteMatchQueryParameterInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchQueryParameterArgs and GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchQueryParameterInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchQueryParameterArgs{...}
type GetGatewayRouteSpecHttpRouteMatchQueryParameterInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchQueryParameterOutput() GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput
	ToGetGatewayRouteSpecHttpRouteMatchQueryParameterOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput
}

type GetGatewayRouteSpecHttpRouteMatchQueryParameterArgs struct {
	Matches GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayInput `pulumi:"matches"`
	// Name of the gateway route.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetGatewayRouteSpecHttpRouteMatchQueryParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchQueryParameterArgs) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterOutput() GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchQueryParameterOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchQueryParameterArgs) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput)
}

// GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchQueryParameterArray and GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchQueryParameterArray{ GetGatewayRouteSpecHttpRouteMatchQueryParameterArgs{...} }
type GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput() GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput
	ToGetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput
}

type GetGatewayRouteSpecHttpRouteMatchQueryParameterArray []GetGatewayRouteSpecHttpRouteMatchQueryParameterInput

func (GetGatewayRouteSpecHttpRouteMatchQueryParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchQueryParameterArray) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput() GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchQueryParameterArray) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput)
}

type GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterOutput() GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput) Matches() GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchQueryParameter) []GetGatewayRouteSpecHttpRouteMatchQueryParameterMatch {
		return v.Matches
	}).(GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput)
}

// Name of the gateway route.
func (o GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchQueryParameter) string { return v.Name }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput() GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteMatchQueryParameter {
		return vs[0].([]GetGatewayRouteSpecHttpRouteMatchQueryParameter)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput)
}

type GetGatewayRouteSpecHttpRouteMatchQueryParameterMatch struct {
	Exact string `pulumi:"exact"`
}

// GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs and GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs{...}
type GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput() GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput
	ToGetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput
}

type GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs struct {
	Exact pulumi.StringInput `pulumi:"exact"`
}

func (GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput() GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput)
}

// GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayInput is an input type that accepts GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArray and GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput values.
// You can construct a concrete instance of `GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayInput` via:
//
//	GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArray{ GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs{...} }
type GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayInput interface {
	pulumi.Input

	ToGetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput() GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput
	ToGetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutputWithContext(context.Context) GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput
}

type GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArray []GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchInput

func (GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArray) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput() GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput {
	return i.ToGetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutputWithContext(context.Background())
}

func (i GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArray) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput)
}

type GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput() GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayRouteSpecHttpRouteMatchQueryParameterMatch) string { return v.Exact }).(pulumi.StringOutput)
}

type GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayRouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput() GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput) ToGetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutputWithContext(ctx context.Context) GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput {
	return o
}

func (o GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput) Index(i pulumi.IntInput) GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayRouteSpecHttpRouteMatchQueryParameterMatch {
		return vs[0].([]GetGatewayRouteSpecHttpRouteMatchQueryParameterMatch)[vs[1].(int)]
	}).(GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput)
}

type GetMeshSpec struct {
	EgressFilters []GetMeshSpecEgressFilter `pulumi:"egressFilters"`
}

// GetMeshSpecInput is an input type that accepts GetMeshSpecArgs and GetMeshSpecOutput values.
// You can construct a concrete instance of `GetMeshSpecInput` via:
//
//	GetMeshSpecArgs{...}
type GetMeshSpecInput interface {
	pulumi.Input

	ToGetMeshSpecOutput() GetMeshSpecOutput
	ToGetMeshSpecOutputWithContext(context.Context) GetMeshSpecOutput
}

type GetMeshSpecArgs struct {
	EgressFilters GetMeshSpecEgressFilterArrayInput `pulumi:"egressFilters"`
}

func (GetMeshSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMeshSpec)(nil)).Elem()
}

func (i GetMeshSpecArgs) ToGetMeshSpecOutput() GetMeshSpecOutput {
	return i.ToGetMeshSpecOutputWithContext(context.Background())
}

func (i GetMeshSpecArgs) ToGetMeshSpecOutputWithContext(ctx context.Context) GetMeshSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMeshSpecOutput)
}

// GetMeshSpecArrayInput is an input type that accepts GetMeshSpecArray and GetMeshSpecArrayOutput values.
// You can construct a concrete instance of `GetMeshSpecArrayInput` via:
//
//	GetMeshSpecArray{ GetMeshSpecArgs{...} }
type GetMeshSpecArrayInput interface {
	pulumi.Input

	ToGetMeshSpecArrayOutput() GetMeshSpecArrayOutput
	ToGetMeshSpecArrayOutputWithContext(context.Context) GetMeshSpecArrayOutput
}

type GetMeshSpecArray []GetMeshSpecInput

func (GetMeshSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMeshSpec)(nil)).Elem()
}

func (i GetMeshSpecArray) ToGetMeshSpecArrayOutput() GetMeshSpecArrayOutput {
	return i.ToGetMeshSpecArrayOutputWithContext(context.Background())
}

func (i GetMeshSpecArray) ToGetMeshSpecArrayOutputWithContext(ctx context.Context) GetMeshSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMeshSpecArrayOutput)
}

type GetMeshSpecOutput struct{ *pulumi.OutputState }

func (GetMeshSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMeshSpec)(nil)).Elem()
}

func (o GetMeshSpecOutput) ToGetMeshSpecOutput() GetMeshSpecOutput {
	return o
}

func (o GetMeshSpecOutput) ToGetMeshSpecOutputWithContext(ctx context.Context) GetMeshSpecOutput {
	return o
}

func (o GetMeshSpecOutput) EgressFilters() GetMeshSpecEgressFilterArrayOutput {
	return o.ApplyT(func(v GetMeshSpec) []GetMeshSpecEgressFilter { return v.EgressFilters }).(GetMeshSpecEgressFilterArrayOutput)
}

type GetMeshSpecArrayOutput struct{ *pulumi.OutputState }

func (GetMeshSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMeshSpec)(nil)).Elem()
}

func (o GetMeshSpecArrayOutput) ToGetMeshSpecArrayOutput() GetMeshSpecArrayOutput {
	return o
}

func (o GetMeshSpecArrayOutput) ToGetMeshSpecArrayOutputWithContext(ctx context.Context) GetMeshSpecArrayOutput {
	return o
}

func (o GetMeshSpecArrayOutput) Index(i pulumi.IntInput) GetMeshSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMeshSpec {
		return vs[0].([]GetMeshSpec)[vs[1].(int)]
	}).(GetMeshSpecOutput)
}

type GetMeshSpecEgressFilter struct {
	Type string `pulumi:"type"`
}

// GetMeshSpecEgressFilterInput is an input type that accepts GetMeshSpecEgressFilterArgs and GetMeshSpecEgressFilterOutput values.
// You can construct a concrete instance of `GetMeshSpecEgressFilterInput` via:
//
//	GetMeshSpecEgressFilterArgs{...}
type GetMeshSpecEgressFilterInput interface {
	pulumi.Input

	ToGetMeshSpecEgressFilterOutput() GetMeshSpecEgressFilterOutput
	ToGetMeshSpecEgressFilterOutputWithContext(context.Context) GetMeshSpecEgressFilterOutput
}

type GetMeshSpecEgressFilterArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMeshSpecEgressFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMeshSpecEgressFilter)(nil)).Elem()
}

func (i GetMeshSpecEgressFilterArgs) ToGetMeshSpecEgressFilterOutput() GetMeshSpecEgressFilterOutput {
	return i.ToGetMeshSpecEgressFilterOutputWithContext(context.Background())
}

func (i GetMeshSpecEgressFilterArgs) ToGetMeshSpecEgressFilterOutputWithContext(ctx context.Context) GetMeshSpecEgressFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMeshSpecEgressFilterOutput)
}

// GetMeshSpecEgressFilterArrayInput is an input type that accepts GetMeshSpecEgressFilterArray and GetMeshSpecEgressFilterArrayOutput values.
// You can construct a concrete instance of `GetMeshSpecEgressFilterArrayInput` via:
//
//	GetMeshSpecEgressFilterArray{ GetMeshSpecEgressFilterArgs{...} }
type GetMeshSpecEgressFilterArrayInput interface {
	pulumi.Input

	ToGetMeshSpecEgressFilterArrayOutput() GetMeshSpecEgressFilterArrayOutput
	ToGetMeshSpecEgressFilterArrayOutputWithContext(context.Context) GetMeshSpecEgressFilterArrayOutput
}

type GetMeshSpecEgressFilterArray []GetMeshSpecEgressFilterInput

func (GetMeshSpecEgressFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMeshSpecEgressFilter)(nil)).Elem()
}

func (i GetMeshSpecEgressFilterArray) ToGetMeshSpecEgressFilterArrayOutput() GetMeshSpecEgressFilterArrayOutput {
	return i.ToGetMeshSpecEgressFilterArrayOutputWithContext(context.Background())
}

func (i GetMeshSpecEgressFilterArray) ToGetMeshSpecEgressFilterArrayOutputWithContext(ctx context.Context) GetMeshSpecEgressFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMeshSpecEgressFilterArrayOutput)
}

type GetMeshSpecEgressFilterOutput struct{ *pulumi.OutputState }

func (GetMeshSpecEgressFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMeshSpecEgressFilter)(nil)).Elem()
}

func (o GetMeshSpecEgressFilterOutput) ToGetMeshSpecEgressFilterOutput() GetMeshSpecEgressFilterOutput {
	return o
}

func (o GetMeshSpecEgressFilterOutput) ToGetMeshSpecEgressFilterOutputWithContext(ctx context.Context) GetMeshSpecEgressFilterOutput {
	return o
}

func (o GetMeshSpecEgressFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMeshSpecEgressFilter) string { return v.Type }).(pulumi.StringOutput)
}

type GetMeshSpecEgressFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMeshSpecEgressFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMeshSpecEgressFilter)(nil)).Elem()
}

func (o GetMeshSpecEgressFilterArrayOutput) ToGetMeshSpecEgressFilterArrayOutput() GetMeshSpecEgressFilterArrayOutput {
	return o
}

func (o GetMeshSpecEgressFilterArrayOutput) ToGetMeshSpecEgressFilterArrayOutputWithContext(ctx context.Context) GetMeshSpecEgressFilterArrayOutput {
	return o
}

func (o GetMeshSpecEgressFilterArrayOutput) Index(i pulumi.IntInput) GetMeshSpecEgressFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMeshSpecEgressFilter {
		return vs[0].([]GetMeshSpecEgressFilter)[vs[1].(int)]
	}).(GetMeshSpecEgressFilterOutput)
}

type GetRouteSpec struct {
	GrpcRoutes  []GetRouteSpecGrpcRoute  `pulumi:"grpcRoutes"`
	Http2Routes []GetRouteSpecHttp2Route `pulumi:"http2Routes"`
	HttpRoutes  []GetRouteSpecHttpRoute  `pulumi:"httpRoutes"`
	Priority    int                      `pulumi:"priority"`
	TcpRoutes   []GetRouteSpecTcpRoute   `pulumi:"tcpRoutes"`
}

// GetRouteSpecInput is an input type that accepts GetRouteSpecArgs and GetRouteSpecOutput values.
// You can construct a concrete instance of `GetRouteSpecInput` via:
//
//	GetRouteSpecArgs{...}
type GetRouteSpecInput interface {
	pulumi.Input

	ToGetRouteSpecOutput() GetRouteSpecOutput
	ToGetRouteSpecOutputWithContext(context.Context) GetRouteSpecOutput
}

type GetRouteSpecArgs struct {
	GrpcRoutes  GetRouteSpecGrpcRouteArrayInput  `pulumi:"grpcRoutes"`
	Http2Routes GetRouteSpecHttp2RouteArrayInput `pulumi:"http2Routes"`
	HttpRoutes  GetRouteSpecHttpRouteArrayInput  `pulumi:"httpRoutes"`
	Priority    pulumi.IntInput                  `pulumi:"priority"`
	TcpRoutes   GetRouteSpecTcpRouteArrayInput   `pulumi:"tcpRoutes"`
}

func (GetRouteSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpec)(nil)).Elem()
}

func (i GetRouteSpecArgs) ToGetRouteSpecOutput() GetRouteSpecOutput {
	return i.ToGetRouteSpecOutputWithContext(context.Background())
}

func (i GetRouteSpecArgs) ToGetRouteSpecOutputWithContext(ctx context.Context) GetRouteSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecOutput)
}

// GetRouteSpecArrayInput is an input type that accepts GetRouteSpecArray and GetRouteSpecArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecArrayInput` via:
//
//	GetRouteSpecArray{ GetRouteSpecArgs{...} }
type GetRouteSpecArrayInput interface {
	pulumi.Input

	ToGetRouteSpecArrayOutput() GetRouteSpecArrayOutput
	ToGetRouteSpecArrayOutputWithContext(context.Context) GetRouteSpecArrayOutput
}

type GetRouteSpecArray []GetRouteSpecInput

func (GetRouteSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpec)(nil)).Elem()
}

func (i GetRouteSpecArray) ToGetRouteSpecArrayOutput() GetRouteSpecArrayOutput {
	return i.ToGetRouteSpecArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecArray) ToGetRouteSpecArrayOutputWithContext(ctx context.Context) GetRouteSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecArrayOutput)
}

type GetRouteSpecOutput struct{ *pulumi.OutputState }

func (GetRouteSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpec)(nil)).Elem()
}

func (o GetRouteSpecOutput) ToGetRouteSpecOutput() GetRouteSpecOutput {
	return o
}

func (o GetRouteSpecOutput) ToGetRouteSpecOutputWithContext(ctx context.Context) GetRouteSpecOutput {
	return o
}

func (o GetRouteSpecOutput) GrpcRoutes() GetRouteSpecGrpcRouteArrayOutput {
	return o.ApplyT(func(v GetRouteSpec) []GetRouteSpecGrpcRoute { return v.GrpcRoutes }).(GetRouteSpecGrpcRouteArrayOutput)
}

func (o GetRouteSpecOutput) Http2Routes() GetRouteSpecHttp2RouteArrayOutput {
	return o.ApplyT(func(v GetRouteSpec) []GetRouteSpecHttp2Route { return v.Http2Routes }).(GetRouteSpecHttp2RouteArrayOutput)
}

func (o GetRouteSpecOutput) HttpRoutes() GetRouteSpecHttpRouteArrayOutput {
	return o.ApplyT(func(v GetRouteSpec) []GetRouteSpecHttpRoute { return v.HttpRoutes }).(GetRouteSpecHttpRouteArrayOutput)
}

func (o GetRouteSpecOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpec) int { return v.Priority }).(pulumi.IntOutput)
}

func (o GetRouteSpecOutput) TcpRoutes() GetRouteSpecTcpRouteArrayOutput {
	return o.ApplyT(func(v GetRouteSpec) []GetRouteSpecTcpRoute { return v.TcpRoutes }).(GetRouteSpecTcpRouteArrayOutput)
}

type GetRouteSpecArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpec)(nil)).Elem()
}

func (o GetRouteSpecArrayOutput) ToGetRouteSpecArrayOutput() GetRouteSpecArrayOutput {
	return o
}

func (o GetRouteSpecArrayOutput) ToGetRouteSpecArrayOutputWithContext(ctx context.Context) GetRouteSpecArrayOutput {
	return o
}

func (o GetRouteSpecArrayOutput) Index(i pulumi.IntInput) GetRouteSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpec {
		return vs[0].([]GetRouteSpec)[vs[1].(int)]
	}).(GetRouteSpecOutput)
}

type GetRouteSpecGrpcRoute struct {
	Actions       []GetRouteSpecGrpcRouteAction      `pulumi:"actions"`
	Matches       []GetRouteSpecGrpcRouteMatch       `pulumi:"matches"`
	RetryPolicies []GetRouteSpecGrpcRouteRetryPolicy `pulumi:"retryPolicies"`
	Timeouts      []GetRouteSpecGrpcRouteTimeout     `pulumi:"timeouts"`
}

// GetRouteSpecGrpcRouteInput is an input type that accepts GetRouteSpecGrpcRouteArgs and GetRouteSpecGrpcRouteOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteInput` via:
//
//	GetRouteSpecGrpcRouteArgs{...}
type GetRouteSpecGrpcRouteInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteOutput() GetRouteSpecGrpcRouteOutput
	ToGetRouteSpecGrpcRouteOutputWithContext(context.Context) GetRouteSpecGrpcRouteOutput
}

type GetRouteSpecGrpcRouteArgs struct {
	Actions       GetRouteSpecGrpcRouteActionArrayInput      `pulumi:"actions"`
	Matches       GetRouteSpecGrpcRouteMatchArrayInput       `pulumi:"matches"`
	RetryPolicies GetRouteSpecGrpcRouteRetryPolicyArrayInput `pulumi:"retryPolicies"`
	Timeouts      GetRouteSpecGrpcRouteTimeoutArrayInput     `pulumi:"timeouts"`
}

func (GetRouteSpecGrpcRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRoute)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteArgs) ToGetRouteSpecGrpcRouteOutput() GetRouteSpecGrpcRouteOutput {
	return i.ToGetRouteSpecGrpcRouteOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteArgs) ToGetRouteSpecGrpcRouteOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteOutput)
}

// GetRouteSpecGrpcRouteArrayInput is an input type that accepts GetRouteSpecGrpcRouteArray and GetRouteSpecGrpcRouteArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteArrayInput` via:
//
//	GetRouteSpecGrpcRouteArray{ GetRouteSpecGrpcRouteArgs{...} }
type GetRouteSpecGrpcRouteArrayInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteArrayOutput() GetRouteSpecGrpcRouteArrayOutput
	ToGetRouteSpecGrpcRouteArrayOutputWithContext(context.Context) GetRouteSpecGrpcRouteArrayOutput
}

type GetRouteSpecGrpcRouteArray []GetRouteSpecGrpcRouteInput

func (GetRouteSpecGrpcRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRoute)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteArray) ToGetRouteSpecGrpcRouteArrayOutput() GetRouteSpecGrpcRouteArrayOutput {
	return i.ToGetRouteSpecGrpcRouteArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteArray) ToGetRouteSpecGrpcRouteArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteArrayOutput)
}

type GetRouteSpecGrpcRouteOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRoute)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteOutput) ToGetRouteSpecGrpcRouteOutput() GetRouteSpecGrpcRouteOutput {
	return o
}

func (o GetRouteSpecGrpcRouteOutput) ToGetRouteSpecGrpcRouteOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteOutput {
	return o
}

func (o GetRouteSpecGrpcRouteOutput) Actions() GetRouteSpecGrpcRouteActionArrayOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRoute) []GetRouteSpecGrpcRouteAction { return v.Actions }).(GetRouteSpecGrpcRouteActionArrayOutput)
}

func (o GetRouteSpecGrpcRouteOutput) Matches() GetRouteSpecGrpcRouteMatchArrayOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRoute) []GetRouteSpecGrpcRouteMatch { return v.Matches }).(GetRouteSpecGrpcRouteMatchArrayOutput)
}

func (o GetRouteSpecGrpcRouteOutput) RetryPolicies() GetRouteSpecGrpcRouteRetryPolicyArrayOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRoute) []GetRouteSpecGrpcRouteRetryPolicy { return v.RetryPolicies }).(GetRouteSpecGrpcRouteRetryPolicyArrayOutput)
}

func (o GetRouteSpecGrpcRouteOutput) Timeouts() GetRouteSpecGrpcRouteTimeoutArrayOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRoute) []GetRouteSpecGrpcRouteTimeout { return v.Timeouts }).(GetRouteSpecGrpcRouteTimeoutArrayOutput)
}

type GetRouteSpecGrpcRouteArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRoute)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteArrayOutput) ToGetRouteSpecGrpcRouteArrayOutput() GetRouteSpecGrpcRouteArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteArrayOutput) ToGetRouteSpecGrpcRouteArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteArrayOutput) Index(i pulumi.IntInput) GetRouteSpecGrpcRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecGrpcRoute {
		return vs[0].([]GetRouteSpecGrpcRoute)[vs[1].(int)]
	}).(GetRouteSpecGrpcRouteOutput)
}

type GetRouteSpecGrpcRouteAction struct {
	WeightedTargets []GetRouteSpecGrpcRouteActionWeightedTarget `pulumi:"weightedTargets"`
}

// GetRouteSpecGrpcRouteActionInput is an input type that accepts GetRouteSpecGrpcRouteActionArgs and GetRouteSpecGrpcRouteActionOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteActionInput` via:
//
//	GetRouteSpecGrpcRouteActionArgs{...}
type GetRouteSpecGrpcRouteActionInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteActionOutput() GetRouteSpecGrpcRouteActionOutput
	ToGetRouteSpecGrpcRouteActionOutputWithContext(context.Context) GetRouteSpecGrpcRouteActionOutput
}

type GetRouteSpecGrpcRouteActionArgs struct {
	WeightedTargets GetRouteSpecGrpcRouteActionWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (GetRouteSpecGrpcRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteActionArgs) ToGetRouteSpecGrpcRouteActionOutput() GetRouteSpecGrpcRouteActionOutput {
	return i.ToGetRouteSpecGrpcRouteActionOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteActionArgs) ToGetRouteSpecGrpcRouteActionOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteActionOutput)
}

// GetRouteSpecGrpcRouteActionArrayInput is an input type that accepts GetRouteSpecGrpcRouteActionArray and GetRouteSpecGrpcRouteActionArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteActionArrayInput` via:
//
//	GetRouteSpecGrpcRouteActionArray{ GetRouteSpecGrpcRouteActionArgs{...} }
type GetRouteSpecGrpcRouteActionArrayInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteActionArrayOutput() GetRouteSpecGrpcRouteActionArrayOutput
	ToGetRouteSpecGrpcRouteActionArrayOutputWithContext(context.Context) GetRouteSpecGrpcRouteActionArrayOutput
}

type GetRouteSpecGrpcRouteActionArray []GetRouteSpecGrpcRouteActionInput

func (GetRouteSpecGrpcRouteActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteActionArray) ToGetRouteSpecGrpcRouteActionArrayOutput() GetRouteSpecGrpcRouteActionArrayOutput {
	return i.ToGetRouteSpecGrpcRouteActionArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteActionArray) ToGetRouteSpecGrpcRouteActionArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteActionArrayOutput)
}

type GetRouteSpecGrpcRouteActionOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteActionOutput) ToGetRouteSpecGrpcRouteActionOutput() GetRouteSpecGrpcRouteActionOutput {
	return o
}

func (o GetRouteSpecGrpcRouteActionOutput) ToGetRouteSpecGrpcRouteActionOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteActionOutput {
	return o
}

func (o GetRouteSpecGrpcRouteActionOutput) WeightedTargets() GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteAction) []GetRouteSpecGrpcRouteActionWeightedTarget {
		return v.WeightedTargets
	}).(GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput)
}

type GetRouteSpecGrpcRouteActionArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteAction)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteActionArrayOutput) ToGetRouteSpecGrpcRouteActionArrayOutput() GetRouteSpecGrpcRouteActionArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteActionArrayOutput) ToGetRouteSpecGrpcRouteActionArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteActionArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteActionArrayOutput) Index(i pulumi.IntInput) GetRouteSpecGrpcRouteActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecGrpcRouteAction {
		return vs[0].([]GetRouteSpecGrpcRouteAction)[vs[1].(int)]
	}).(GetRouteSpecGrpcRouteActionOutput)
}

type GetRouteSpecGrpcRouteActionWeightedTarget struct {
	Port        int    `pulumi:"port"`
	VirtualNode string `pulumi:"virtualNode"`
	Weight      int    `pulumi:"weight"`
}

// GetRouteSpecGrpcRouteActionWeightedTargetInput is an input type that accepts GetRouteSpecGrpcRouteActionWeightedTargetArgs and GetRouteSpecGrpcRouteActionWeightedTargetOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteActionWeightedTargetInput` via:
//
//	GetRouteSpecGrpcRouteActionWeightedTargetArgs{...}
type GetRouteSpecGrpcRouteActionWeightedTargetInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteActionWeightedTargetOutput() GetRouteSpecGrpcRouteActionWeightedTargetOutput
	ToGetRouteSpecGrpcRouteActionWeightedTargetOutputWithContext(context.Context) GetRouteSpecGrpcRouteActionWeightedTargetOutput
}

type GetRouteSpecGrpcRouteActionWeightedTargetArgs struct {
	Port        pulumi.IntInput    `pulumi:"port"`
	VirtualNode pulumi.StringInput `pulumi:"virtualNode"`
	Weight      pulumi.IntInput    `pulumi:"weight"`
}

func (GetRouteSpecGrpcRouteActionWeightedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteActionWeightedTarget)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteActionWeightedTargetArgs) ToGetRouteSpecGrpcRouteActionWeightedTargetOutput() GetRouteSpecGrpcRouteActionWeightedTargetOutput {
	return i.ToGetRouteSpecGrpcRouteActionWeightedTargetOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteActionWeightedTargetArgs) ToGetRouteSpecGrpcRouteActionWeightedTargetOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteActionWeightedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteActionWeightedTargetOutput)
}

// GetRouteSpecGrpcRouteActionWeightedTargetArrayInput is an input type that accepts GetRouteSpecGrpcRouteActionWeightedTargetArray and GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteActionWeightedTargetArrayInput` via:
//
//	GetRouteSpecGrpcRouteActionWeightedTargetArray{ GetRouteSpecGrpcRouteActionWeightedTargetArgs{...} }
type GetRouteSpecGrpcRouteActionWeightedTargetArrayInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteActionWeightedTargetArrayOutput() GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput
	ToGetRouteSpecGrpcRouteActionWeightedTargetArrayOutputWithContext(context.Context) GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput
}

type GetRouteSpecGrpcRouteActionWeightedTargetArray []GetRouteSpecGrpcRouteActionWeightedTargetInput

func (GetRouteSpecGrpcRouteActionWeightedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteActionWeightedTarget)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteActionWeightedTargetArray) ToGetRouteSpecGrpcRouteActionWeightedTargetArrayOutput() GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return i.ToGetRouteSpecGrpcRouteActionWeightedTargetArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteActionWeightedTargetArray) ToGetRouteSpecGrpcRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput)
}

type GetRouteSpecGrpcRouteActionWeightedTargetOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteActionWeightedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteActionWeightedTarget)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteActionWeightedTargetOutput) ToGetRouteSpecGrpcRouteActionWeightedTargetOutput() GetRouteSpecGrpcRouteActionWeightedTargetOutput {
	return o
}

func (o GetRouteSpecGrpcRouteActionWeightedTargetOutput) ToGetRouteSpecGrpcRouteActionWeightedTargetOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteActionWeightedTargetOutput {
	return o
}

func (o GetRouteSpecGrpcRouteActionWeightedTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteActionWeightedTarget) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetRouteSpecGrpcRouteActionWeightedTargetOutput) VirtualNode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteActionWeightedTarget) string { return v.VirtualNode }).(pulumi.StringOutput)
}

func (o GetRouteSpecGrpcRouteActionWeightedTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteActionWeightedTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteActionWeightedTarget)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput) ToGetRouteSpecGrpcRouteActionWeightedTargetArrayOutput() GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput) ToGetRouteSpecGrpcRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput) Index(i pulumi.IntInput) GetRouteSpecGrpcRouteActionWeightedTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecGrpcRouteActionWeightedTarget {
		return vs[0].([]GetRouteSpecGrpcRouteActionWeightedTarget)[vs[1].(int)]
	}).(GetRouteSpecGrpcRouteActionWeightedTargetOutput)
}

type GetRouteSpecGrpcRouteMatch struct {
	Metadatas   []GetRouteSpecGrpcRouteMatchMetadata `pulumi:"metadatas"`
	MethodName  string                               `pulumi:"methodName"`
	Port        int                                  `pulumi:"port"`
	Prefix      string                               `pulumi:"prefix"`
	ServiceName string                               `pulumi:"serviceName"`
}

// GetRouteSpecGrpcRouteMatchInput is an input type that accepts GetRouteSpecGrpcRouteMatchArgs and GetRouteSpecGrpcRouteMatchOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteMatchInput` via:
//
//	GetRouteSpecGrpcRouteMatchArgs{...}
type GetRouteSpecGrpcRouteMatchInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteMatchOutput() GetRouteSpecGrpcRouteMatchOutput
	ToGetRouteSpecGrpcRouteMatchOutputWithContext(context.Context) GetRouteSpecGrpcRouteMatchOutput
}

type GetRouteSpecGrpcRouteMatchArgs struct {
	Metadatas   GetRouteSpecGrpcRouteMatchMetadataArrayInput `pulumi:"metadatas"`
	MethodName  pulumi.StringInput                           `pulumi:"methodName"`
	Port        pulumi.IntInput                              `pulumi:"port"`
	Prefix      pulumi.StringInput                           `pulumi:"prefix"`
	ServiceName pulumi.StringInput                           `pulumi:"serviceName"`
}

func (GetRouteSpecGrpcRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteMatchArgs) ToGetRouteSpecGrpcRouteMatchOutput() GetRouteSpecGrpcRouteMatchOutput {
	return i.ToGetRouteSpecGrpcRouteMatchOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteMatchArgs) ToGetRouteSpecGrpcRouteMatchOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteMatchOutput)
}

// GetRouteSpecGrpcRouteMatchArrayInput is an input type that accepts GetRouteSpecGrpcRouteMatchArray and GetRouteSpecGrpcRouteMatchArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteMatchArrayInput` via:
//
//	GetRouteSpecGrpcRouteMatchArray{ GetRouteSpecGrpcRouteMatchArgs{...} }
type GetRouteSpecGrpcRouteMatchArrayInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteMatchArrayOutput() GetRouteSpecGrpcRouteMatchArrayOutput
	ToGetRouteSpecGrpcRouteMatchArrayOutputWithContext(context.Context) GetRouteSpecGrpcRouteMatchArrayOutput
}

type GetRouteSpecGrpcRouteMatchArray []GetRouteSpecGrpcRouteMatchInput

func (GetRouteSpecGrpcRouteMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteMatchArray) ToGetRouteSpecGrpcRouteMatchArrayOutput() GetRouteSpecGrpcRouteMatchArrayOutput {
	return i.ToGetRouteSpecGrpcRouteMatchArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteMatchArray) ToGetRouteSpecGrpcRouteMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteMatchArrayOutput)
}

type GetRouteSpecGrpcRouteMatchOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteMatchOutput) ToGetRouteSpecGrpcRouteMatchOutput() GetRouteSpecGrpcRouteMatchOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchOutput) ToGetRouteSpecGrpcRouteMatchOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchOutput) Metadatas() GetRouteSpecGrpcRouteMatchMetadataArrayOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatch) []GetRouteSpecGrpcRouteMatchMetadata { return v.Metadatas }).(GetRouteSpecGrpcRouteMatchMetadataArrayOutput)
}

func (o GetRouteSpecGrpcRouteMatchOutput) MethodName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatch) string { return v.MethodName }).(pulumi.StringOutput)
}

func (o GetRouteSpecGrpcRouteMatchOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatch) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetRouteSpecGrpcRouteMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetRouteSpecGrpcRouteMatchOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatch) string { return v.ServiceName }).(pulumi.StringOutput)
}

type GetRouteSpecGrpcRouteMatchArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteMatch)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteMatchArrayOutput) ToGetRouteSpecGrpcRouteMatchArrayOutput() GetRouteSpecGrpcRouteMatchArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchArrayOutput) ToGetRouteSpecGrpcRouteMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchArrayOutput) Index(i pulumi.IntInput) GetRouteSpecGrpcRouteMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecGrpcRouteMatch {
		return vs[0].([]GetRouteSpecGrpcRouteMatch)[vs[1].(int)]
	}).(GetRouteSpecGrpcRouteMatchOutput)
}

type GetRouteSpecGrpcRouteMatchMetadata struct {
	Invert  bool                                      `pulumi:"invert"`
	Matches []GetRouteSpecGrpcRouteMatchMetadataMatch `pulumi:"matches"`
	// Name of the route.
	Name string `pulumi:"name"`
}

// GetRouteSpecGrpcRouteMatchMetadataInput is an input type that accepts GetRouteSpecGrpcRouteMatchMetadataArgs and GetRouteSpecGrpcRouteMatchMetadataOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteMatchMetadataInput` via:
//
//	GetRouteSpecGrpcRouteMatchMetadataArgs{...}
type GetRouteSpecGrpcRouteMatchMetadataInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteMatchMetadataOutput() GetRouteSpecGrpcRouteMatchMetadataOutput
	ToGetRouteSpecGrpcRouteMatchMetadataOutputWithContext(context.Context) GetRouteSpecGrpcRouteMatchMetadataOutput
}

type GetRouteSpecGrpcRouteMatchMetadataArgs struct {
	Invert  pulumi.BoolInput                                  `pulumi:"invert"`
	Matches GetRouteSpecGrpcRouteMatchMetadataMatchArrayInput `pulumi:"matches"`
	// Name of the route.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouteSpecGrpcRouteMatchMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteMatchMetadata)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteMatchMetadataArgs) ToGetRouteSpecGrpcRouteMatchMetadataOutput() GetRouteSpecGrpcRouteMatchMetadataOutput {
	return i.ToGetRouteSpecGrpcRouteMatchMetadataOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteMatchMetadataArgs) ToGetRouteSpecGrpcRouteMatchMetadataOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteMatchMetadataOutput)
}

// GetRouteSpecGrpcRouteMatchMetadataArrayInput is an input type that accepts GetRouteSpecGrpcRouteMatchMetadataArray and GetRouteSpecGrpcRouteMatchMetadataArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteMatchMetadataArrayInput` via:
//
//	GetRouteSpecGrpcRouteMatchMetadataArray{ GetRouteSpecGrpcRouteMatchMetadataArgs{...} }
type GetRouteSpecGrpcRouteMatchMetadataArrayInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteMatchMetadataArrayOutput() GetRouteSpecGrpcRouteMatchMetadataArrayOutput
	ToGetRouteSpecGrpcRouteMatchMetadataArrayOutputWithContext(context.Context) GetRouteSpecGrpcRouteMatchMetadataArrayOutput
}

type GetRouteSpecGrpcRouteMatchMetadataArray []GetRouteSpecGrpcRouteMatchMetadataInput

func (GetRouteSpecGrpcRouteMatchMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteMatchMetadata)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteMatchMetadataArray) ToGetRouteSpecGrpcRouteMatchMetadataArrayOutput() GetRouteSpecGrpcRouteMatchMetadataArrayOutput {
	return i.ToGetRouteSpecGrpcRouteMatchMetadataArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteMatchMetadataArray) ToGetRouteSpecGrpcRouteMatchMetadataArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteMatchMetadataArrayOutput)
}

type GetRouteSpecGrpcRouteMatchMetadataOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteMatchMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteMatchMetadata)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteMatchMetadataOutput) ToGetRouteSpecGrpcRouteMatchMetadataOutput() GetRouteSpecGrpcRouteMatchMetadataOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchMetadataOutput) ToGetRouteSpecGrpcRouteMatchMetadataOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchMetadataOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchMetadataOutput) Invert() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatchMetadata) bool { return v.Invert }).(pulumi.BoolOutput)
}

func (o GetRouteSpecGrpcRouteMatchMetadataOutput) Matches() GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatchMetadata) []GetRouteSpecGrpcRouteMatchMetadataMatch { return v.Matches }).(GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput)
}

// Name of the route.
func (o GetRouteSpecGrpcRouteMatchMetadataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatchMetadata) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouteSpecGrpcRouteMatchMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteMatchMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteMatchMetadata)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteMatchMetadataArrayOutput) ToGetRouteSpecGrpcRouteMatchMetadataArrayOutput() GetRouteSpecGrpcRouteMatchMetadataArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchMetadataArrayOutput) ToGetRouteSpecGrpcRouteMatchMetadataArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchMetadataArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchMetadataArrayOutput) Index(i pulumi.IntInput) GetRouteSpecGrpcRouteMatchMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecGrpcRouteMatchMetadata {
		return vs[0].([]GetRouteSpecGrpcRouteMatchMetadata)[vs[1].(int)]
	}).(GetRouteSpecGrpcRouteMatchMetadataOutput)
}

type GetRouteSpecGrpcRouteMatchMetadataMatch struct {
	Exact  string                                         `pulumi:"exact"`
	Prefix string                                         `pulumi:"prefix"`
	Ranges []GetRouteSpecGrpcRouteMatchMetadataMatchRange `pulumi:"ranges"`
	Regex  string                                         `pulumi:"regex"`
	Suffix string                                         `pulumi:"suffix"`
}

// GetRouteSpecGrpcRouteMatchMetadataMatchInput is an input type that accepts GetRouteSpecGrpcRouteMatchMetadataMatchArgs and GetRouteSpecGrpcRouteMatchMetadataMatchOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteMatchMetadataMatchInput` via:
//
//	GetRouteSpecGrpcRouteMatchMetadataMatchArgs{...}
type GetRouteSpecGrpcRouteMatchMetadataMatchInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteMatchMetadataMatchOutput() GetRouteSpecGrpcRouteMatchMetadataMatchOutput
	ToGetRouteSpecGrpcRouteMatchMetadataMatchOutputWithContext(context.Context) GetRouteSpecGrpcRouteMatchMetadataMatchOutput
}

type GetRouteSpecGrpcRouteMatchMetadataMatchArgs struct {
	Exact  pulumi.StringInput                                     `pulumi:"exact"`
	Prefix pulumi.StringInput                                     `pulumi:"prefix"`
	Ranges GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayInput `pulumi:"ranges"`
	Regex  pulumi.StringInput                                     `pulumi:"regex"`
	Suffix pulumi.StringInput                                     `pulumi:"suffix"`
}

func (GetRouteSpecGrpcRouteMatchMetadataMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteMatchMetadataMatch)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteMatchMetadataMatchArgs) ToGetRouteSpecGrpcRouteMatchMetadataMatchOutput() GetRouteSpecGrpcRouteMatchMetadataMatchOutput {
	return i.ToGetRouteSpecGrpcRouteMatchMetadataMatchOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteMatchMetadataMatchArgs) ToGetRouteSpecGrpcRouteMatchMetadataMatchOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchMetadataMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteMatchMetadataMatchOutput)
}

// GetRouteSpecGrpcRouteMatchMetadataMatchArrayInput is an input type that accepts GetRouteSpecGrpcRouteMatchMetadataMatchArray and GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteMatchMetadataMatchArrayInput` via:
//
//	GetRouteSpecGrpcRouteMatchMetadataMatchArray{ GetRouteSpecGrpcRouteMatchMetadataMatchArgs{...} }
type GetRouteSpecGrpcRouteMatchMetadataMatchArrayInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput() GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput
	ToGetRouteSpecGrpcRouteMatchMetadataMatchArrayOutputWithContext(context.Context) GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput
}

type GetRouteSpecGrpcRouteMatchMetadataMatchArray []GetRouteSpecGrpcRouteMatchMetadataMatchInput

func (GetRouteSpecGrpcRouteMatchMetadataMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteMatchMetadataMatch)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteMatchMetadataMatchArray) ToGetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput() GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput {
	return i.ToGetRouteSpecGrpcRouteMatchMetadataMatchArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteMatchMetadataMatchArray) ToGetRouteSpecGrpcRouteMatchMetadataMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput)
}

type GetRouteSpecGrpcRouteMatchMetadataMatchOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteMatchMetadataMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteMatchMetadataMatch)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchOutput) ToGetRouteSpecGrpcRouteMatchMetadataMatchOutput() GetRouteSpecGrpcRouteMatchMetadataMatchOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchOutput) ToGetRouteSpecGrpcRouteMatchMetadataMatchOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchMetadataMatchOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatchMetadataMatch) string { return v.Exact }).(pulumi.StringOutput)
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatchMetadataMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchOutput) Ranges() GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatchMetadataMatch) []GetRouteSpecGrpcRouteMatchMetadataMatchRange {
		return v.Ranges
	}).(GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput)
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatchMetadataMatch) string { return v.Regex }).(pulumi.StringOutput)
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchOutput) Suffix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatchMetadataMatch) string { return v.Suffix }).(pulumi.StringOutput)
}

type GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteMatchMetadataMatch)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput) ToGetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput() GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput) ToGetRouteSpecGrpcRouteMatchMetadataMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput) Index(i pulumi.IntInput) GetRouteSpecGrpcRouteMatchMetadataMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecGrpcRouteMatchMetadataMatch {
		return vs[0].([]GetRouteSpecGrpcRouteMatchMetadataMatch)[vs[1].(int)]
	}).(GetRouteSpecGrpcRouteMatchMetadataMatchOutput)
}

type GetRouteSpecGrpcRouteMatchMetadataMatchRange struct {
	End   int `pulumi:"end"`
	Start int `pulumi:"start"`
}

// GetRouteSpecGrpcRouteMatchMetadataMatchRangeInput is an input type that accepts GetRouteSpecGrpcRouteMatchMetadataMatchRangeArgs and GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteMatchMetadataMatchRangeInput` via:
//
//	GetRouteSpecGrpcRouteMatchMetadataMatchRangeArgs{...}
type GetRouteSpecGrpcRouteMatchMetadataMatchRangeInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput() GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput
	ToGetRouteSpecGrpcRouteMatchMetadataMatchRangeOutputWithContext(context.Context) GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput
}

type GetRouteSpecGrpcRouteMatchMetadataMatchRangeArgs struct {
	End   pulumi.IntInput `pulumi:"end"`
	Start pulumi.IntInput `pulumi:"start"`
}

func (GetRouteSpecGrpcRouteMatchMetadataMatchRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteMatchMetadataMatchRange)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteMatchMetadataMatchRangeArgs) ToGetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput() GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return i.ToGetRouteSpecGrpcRouteMatchMetadataMatchRangeOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteMatchMetadataMatchRangeArgs) ToGetRouteSpecGrpcRouteMatchMetadataMatchRangeOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput)
}

// GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayInput is an input type that accepts GetRouteSpecGrpcRouteMatchMetadataMatchRangeArray and GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayInput` via:
//
//	GetRouteSpecGrpcRouteMatchMetadataMatchRangeArray{ GetRouteSpecGrpcRouteMatchMetadataMatchRangeArgs{...} }
type GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput() GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput
	ToGetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutputWithContext(context.Context) GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput
}

type GetRouteSpecGrpcRouteMatchMetadataMatchRangeArray []GetRouteSpecGrpcRouteMatchMetadataMatchRangeInput

func (GetRouteSpecGrpcRouteMatchMetadataMatchRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteMatchMetadataMatchRange)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteMatchMetadataMatchRangeArray) ToGetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput() GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput {
	return i.ToGetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteMatchMetadataMatchRangeArray) ToGetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput)
}

type GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteMatchMetadataMatchRange)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput) ToGetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput() GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput) ToGetRouteSpecGrpcRouteMatchMetadataMatchRangeOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatchMetadataMatchRange) int { return v.End }).(pulumi.IntOutput)
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteMatchMetadataMatchRange) int { return v.Start }).(pulumi.IntOutput)
}

type GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteMatchMetadataMatchRange)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput) ToGetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput() GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput) ToGetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput) Index(i pulumi.IntInput) GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecGrpcRouteMatchMetadataMatchRange {
		return vs[0].([]GetRouteSpecGrpcRouteMatchMetadataMatchRange)[vs[1].(int)]
	}).(GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput)
}

type GetRouteSpecGrpcRouteRetryPolicy struct {
	GrpcRetryEvents  []string                                          `pulumi:"grpcRetryEvents"`
	HttpRetryEvents  []string                                          `pulumi:"httpRetryEvents"`
	MaxRetries       int                                               `pulumi:"maxRetries"`
	PerRetryTimeouts []GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout `pulumi:"perRetryTimeouts"`
	TcpRetryEvents   []string                                          `pulumi:"tcpRetryEvents"`
}

// GetRouteSpecGrpcRouteRetryPolicyInput is an input type that accepts GetRouteSpecGrpcRouteRetryPolicyArgs and GetRouteSpecGrpcRouteRetryPolicyOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteRetryPolicyInput` via:
//
//	GetRouteSpecGrpcRouteRetryPolicyArgs{...}
type GetRouteSpecGrpcRouteRetryPolicyInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteRetryPolicyOutput() GetRouteSpecGrpcRouteRetryPolicyOutput
	ToGetRouteSpecGrpcRouteRetryPolicyOutputWithContext(context.Context) GetRouteSpecGrpcRouteRetryPolicyOutput
}

type GetRouteSpecGrpcRouteRetryPolicyArgs struct {
	GrpcRetryEvents  pulumi.StringArrayInput                                   `pulumi:"grpcRetryEvents"`
	HttpRetryEvents  pulumi.StringArrayInput                                   `pulumi:"httpRetryEvents"`
	MaxRetries       pulumi.IntInput                                           `pulumi:"maxRetries"`
	PerRetryTimeouts GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayInput `pulumi:"perRetryTimeouts"`
	TcpRetryEvents   pulumi.StringArrayInput                                   `pulumi:"tcpRetryEvents"`
}

func (GetRouteSpecGrpcRouteRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteRetryPolicy)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteRetryPolicyArgs) ToGetRouteSpecGrpcRouteRetryPolicyOutput() GetRouteSpecGrpcRouteRetryPolicyOutput {
	return i.ToGetRouteSpecGrpcRouteRetryPolicyOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteRetryPolicyArgs) ToGetRouteSpecGrpcRouteRetryPolicyOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteRetryPolicyOutput)
}

// GetRouteSpecGrpcRouteRetryPolicyArrayInput is an input type that accepts GetRouteSpecGrpcRouteRetryPolicyArray and GetRouteSpecGrpcRouteRetryPolicyArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteRetryPolicyArrayInput` via:
//
//	GetRouteSpecGrpcRouteRetryPolicyArray{ GetRouteSpecGrpcRouteRetryPolicyArgs{...} }
type GetRouteSpecGrpcRouteRetryPolicyArrayInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteRetryPolicyArrayOutput() GetRouteSpecGrpcRouteRetryPolicyArrayOutput
	ToGetRouteSpecGrpcRouteRetryPolicyArrayOutputWithContext(context.Context) GetRouteSpecGrpcRouteRetryPolicyArrayOutput
}

type GetRouteSpecGrpcRouteRetryPolicyArray []GetRouteSpecGrpcRouteRetryPolicyInput

func (GetRouteSpecGrpcRouteRetryPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteRetryPolicy)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteRetryPolicyArray) ToGetRouteSpecGrpcRouteRetryPolicyArrayOutput() GetRouteSpecGrpcRouteRetryPolicyArrayOutput {
	return i.ToGetRouteSpecGrpcRouteRetryPolicyArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteRetryPolicyArray) ToGetRouteSpecGrpcRouteRetryPolicyArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteRetryPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteRetryPolicyArrayOutput)
}

type GetRouteSpecGrpcRouteRetryPolicyOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteRetryPolicy)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteRetryPolicyOutput) ToGetRouteSpecGrpcRouteRetryPolicyOutput() GetRouteSpecGrpcRouteRetryPolicyOutput {
	return o
}

func (o GetRouteSpecGrpcRouteRetryPolicyOutput) ToGetRouteSpecGrpcRouteRetryPolicyOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteRetryPolicyOutput {
	return o
}

func (o GetRouteSpecGrpcRouteRetryPolicyOutput) GrpcRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteRetryPolicy) []string { return v.GrpcRetryEvents }).(pulumi.StringArrayOutput)
}

func (o GetRouteSpecGrpcRouteRetryPolicyOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteRetryPolicy) []string { return v.HttpRetryEvents }).(pulumi.StringArrayOutput)
}

func (o GetRouteSpecGrpcRouteRetryPolicyOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteRetryPolicy) int { return v.MaxRetries }).(pulumi.IntOutput)
}

func (o GetRouteSpecGrpcRouteRetryPolicyOutput) PerRetryTimeouts() GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteRetryPolicy) []GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout {
		return v.PerRetryTimeouts
	}).(GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput)
}

func (o GetRouteSpecGrpcRouteRetryPolicyOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteRetryPolicy) []string { return v.TcpRetryEvents }).(pulumi.StringArrayOutput)
}

type GetRouteSpecGrpcRouteRetryPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteRetryPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteRetryPolicy)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteRetryPolicyArrayOutput) ToGetRouteSpecGrpcRouteRetryPolicyArrayOutput() GetRouteSpecGrpcRouteRetryPolicyArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteRetryPolicyArrayOutput) ToGetRouteSpecGrpcRouteRetryPolicyArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteRetryPolicyArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteRetryPolicyArrayOutput) Index(i pulumi.IntInput) GetRouteSpecGrpcRouteRetryPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecGrpcRouteRetryPolicy {
		return vs[0].([]GetRouteSpecGrpcRouteRetryPolicy)[vs[1].(int)]
	}).(GetRouteSpecGrpcRouteRetryPolicyOutput)
}

type GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput is an input type that accepts GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs and GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput` via:
//
//	GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs{...}
type GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput() GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput
	ToGetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Context) GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput
}

type GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) ToGetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput() GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return i.ToGetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs) ToGetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput)
}

// GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayInput is an input type that accepts GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArray and GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayInput` via:
//
//	GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArray{ GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs{...} }
type GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput() GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput
	ToGetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutputWithContext(context.Context) GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput
}

type GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArray []GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput

func (GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArray) ToGetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput() GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput {
	return i.ToGetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArray) ToGetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput)
}

type GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) ToGetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput() GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) ToGetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout) int { return v.Value }).(pulumi.IntOutput)
}

type GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput) ToGetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput() GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput) ToGetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput) Index(i pulumi.IntInput) GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout {
		return vs[0].([]GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeout)[vs[1].(int)]
	}).(GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput)
}

type GetRouteSpecGrpcRouteTimeout struct {
	Idles       []GetRouteSpecGrpcRouteTimeoutIdle       `pulumi:"idles"`
	PerRequests []GetRouteSpecGrpcRouteTimeoutPerRequest `pulumi:"perRequests"`
}

// GetRouteSpecGrpcRouteTimeoutInput is an input type that accepts GetRouteSpecGrpcRouteTimeoutArgs and GetRouteSpecGrpcRouteTimeoutOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteTimeoutInput` via:
//
//	GetRouteSpecGrpcRouteTimeoutArgs{...}
type GetRouteSpecGrpcRouteTimeoutInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteTimeoutOutput() GetRouteSpecGrpcRouteTimeoutOutput
	ToGetRouteSpecGrpcRouteTimeoutOutputWithContext(context.Context) GetRouteSpecGrpcRouteTimeoutOutput
}

type GetRouteSpecGrpcRouteTimeoutArgs struct {
	Idles       GetRouteSpecGrpcRouteTimeoutIdleArrayInput       `pulumi:"idles"`
	PerRequests GetRouteSpecGrpcRouteTimeoutPerRequestArrayInput `pulumi:"perRequests"`
}

func (GetRouteSpecGrpcRouteTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteTimeout)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteTimeoutArgs) ToGetRouteSpecGrpcRouteTimeoutOutput() GetRouteSpecGrpcRouteTimeoutOutput {
	return i.ToGetRouteSpecGrpcRouteTimeoutOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteTimeoutArgs) ToGetRouteSpecGrpcRouteTimeoutOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteTimeoutOutput)
}

// GetRouteSpecGrpcRouteTimeoutArrayInput is an input type that accepts GetRouteSpecGrpcRouteTimeoutArray and GetRouteSpecGrpcRouteTimeoutArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteTimeoutArrayInput` via:
//
//	GetRouteSpecGrpcRouteTimeoutArray{ GetRouteSpecGrpcRouteTimeoutArgs{...} }
type GetRouteSpecGrpcRouteTimeoutArrayInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteTimeoutArrayOutput() GetRouteSpecGrpcRouteTimeoutArrayOutput
	ToGetRouteSpecGrpcRouteTimeoutArrayOutputWithContext(context.Context) GetRouteSpecGrpcRouteTimeoutArrayOutput
}

type GetRouteSpecGrpcRouteTimeoutArray []GetRouteSpecGrpcRouteTimeoutInput

func (GetRouteSpecGrpcRouteTimeoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteTimeout)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteTimeoutArray) ToGetRouteSpecGrpcRouteTimeoutArrayOutput() GetRouteSpecGrpcRouteTimeoutArrayOutput {
	return i.ToGetRouteSpecGrpcRouteTimeoutArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteTimeoutArray) ToGetRouteSpecGrpcRouteTimeoutArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteTimeoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteTimeoutArrayOutput)
}

type GetRouteSpecGrpcRouteTimeoutOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteTimeout)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteTimeoutOutput) ToGetRouteSpecGrpcRouteTimeoutOutput() GetRouteSpecGrpcRouteTimeoutOutput {
	return o
}

func (o GetRouteSpecGrpcRouteTimeoutOutput) ToGetRouteSpecGrpcRouteTimeoutOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteTimeoutOutput {
	return o
}

func (o GetRouteSpecGrpcRouteTimeoutOutput) Idles() GetRouteSpecGrpcRouteTimeoutIdleArrayOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteTimeout) []GetRouteSpecGrpcRouteTimeoutIdle { return v.Idles }).(GetRouteSpecGrpcRouteTimeoutIdleArrayOutput)
}

func (o GetRouteSpecGrpcRouteTimeoutOutput) PerRequests() GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteTimeout) []GetRouteSpecGrpcRouteTimeoutPerRequest { return v.PerRequests }).(GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput)
}

type GetRouteSpecGrpcRouteTimeoutArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteTimeoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteTimeout)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteTimeoutArrayOutput) ToGetRouteSpecGrpcRouteTimeoutArrayOutput() GetRouteSpecGrpcRouteTimeoutArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteTimeoutArrayOutput) ToGetRouteSpecGrpcRouteTimeoutArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteTimeoutArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteTimeoutArrayOutput) Index(i pulumi.IntInput) GetRouteSpecGrpcRouteTimeoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecGrpcRouteTimeout {
		return vs[0].([]GetRouteSpecGrpcRouteTimeout)[vs[1].(int)]
	}).(GetRouteSpecGrpcRouteTimeoutOutput)
}

type GetRouteSpecGrpcRouteTimeoutIdle struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetRouteSpecGrpcRouteTimeoutIdleInput is an input type that accepts GetRouteSpecGrpcRouteTimeoutIdleArgs and GetRouteSpecGrpcRouteTimeoutIdleOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteTimeoutIdleInput` via:
//
//	GetRouteSpecGrpcRouteTimeoutIdleArgs{...}
type GetRouteSpecGrpcRouteTimeoutIdleInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteTimeoutIdleOutput() GetRouteSpecGrpcRouteTimeoutIdleOutput
	ToGetRouteSpecGrpcRouteTimeoutIdleOutputWithContext(context.Context) GetRouteSpecGrpcRouteTimeoutIdleOutput
}

type GetRouteSpecGrpcRouteTimeoutIdleArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetRouteSpecGrpcRouteTimeoutIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteTimeoutIdle)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteTimeoutIdleArgs) ToGetRouteSpecGrpcRouteTimeoutIdleOutput() GetRouteSpecGrpcRouteTimeoutIdleOutput {
	return i.ToGetRouteSpecGrpcRouteTimeoutIdleOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteTimeoutIdleArgs) ToGetRouteSpecGrpcRouteTimeoutIdleOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteTimeoutIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteTimeoutIdleOutput)
}

// GetRouteSpecGrpcRouteTimeoutIdleArrayInput is an input type that accepts GetRouteSpecGrpcRouteTimeoutIdleArray and GetRouteSpecGrpcRouteTimeoutIdleArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteTimeoutIdleArrayInput` via:
//
//	GetRouteSpecGrpcRouteTimeoutIdleArray{ GetRouteSpecGrpcRouteTimeoutIdleArgs{...} }
type GetRouteSpecGrpcRouteTimeoutIdleArrayInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteTimeoutIdleArrayOutput() GetRouteSpecGrpcRouteTimeoutIdleArrayOutput
	ToGetRouteSpecGrpcRouteTimeoutIdleArrayOutputWithContext(context.Context) GetRouteSpecGrpcRouteTimeoutIdleArrayOutput
}

type GetRouteSpecGrpcRouteTimeoutIdleArray []GetRouteSpecGrpcRouteTimeoutIdleInput

func (GetRouteSpecGrpcRouteTimeoutIdleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteTimeoutIdle)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteTimeoutIdleArray) ToGetRouteSpecGrpcRouteTimeoutIdleArrayOutput() GetRouteSpecGrpcRouteTimeoutIdleArrayOutput {
	return i.ToGetRouteSpecGrpcRouteTimeoutIdleArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteTimeoutIdleArray) ToGetRouteSpecGrpcRouteTimeoutIdleArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteTimeoutIdleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteTimeoutIdleArrayOutput)
}

type GetRouteSpecGrpcRouteTimeoutIdleOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteTimeoutIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteTimeoutIdle)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteTimeoutIdleOutput) ToGetRouteSpecGrpcRouteTimeoutIdleOutput() GetRouteSpecGrpcRouteTimeoutIdleOutput {
	return o
}

func (o GetRouteSpecGrpcRouteTimeoutIdleOutput) ToGetRouteSpecGrpcRouteTimeoutIdleOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteTimeoutIdleOutput {
	return o
}

func (o GetRouteSpecGrpcRouteTimeoutIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteTimeoutIdle) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetRouteSpecGrpcRouteTimeoutIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteTimeoutIdle) int { return v.Value }).(pulumi.IntOutput)
}

type GetRouteSpecGrpcRouteTimeoutIdleArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteTimeoutIdleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteTimeoutIdle)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteTimeoutIdleArrayOutput) ToGetRouteSpecGrpcRouteTimeoutIdleArrayOutput() GetRouteSpecGrpcRouteTimeoutIdleArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteTimeoutIdleArrayOutput) ToGetRouteSpecGrpcRouteTimeoutIdleArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteTimeoutIdleArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteTimeoutIdleArrayOutput) Index(i pulumi.IntInput) GetRouteSpecGrpcRouteTimeoutIdleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecGrpcRouteTimeoutIdle {
		return vs[0].([]GetRouteSpecGrpcRouteTimeoutIdle)[vs[1].(int)]
	}).(GetRouteSpecGrpcRouteTimeoutIdleOutput)
}

type GetRouteSpecGrpcRouteTimeoutPerRequest struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetRouteSpecGrpcRouteTimeoutPerRequestInput is an input type that accepts GetRouteSpecGrpcRouteTimeoutPerRequestArgs and GetRouteSpecGrpcRouteTimeoutPerRequestOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteTimeoutPerRequestInput` via:
//
//	GetRouteSpecGrpcRouteTimeoutPerRequestArgs{...}
type GetRouteSpecGrpcRouteTimeoutPerRequestInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteTimeoutPerRequestOutput() GetRouteSpecGrpcRouteTimeoutPerRequestOutput
	ToGetRouteSpecGrpcRouteTimeoutPerRequestOutputWithContext(context.Context) GetRouteSpecGrpcRouteTimeoutPerRequestOutput
}

type GetRouteSpecGrpcRouteTimeoutPerRequestArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetRouteSpecGrpcRouteTimeoutPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteTimeoutPerRequest)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteTimeoutPerRequestArgs) ToGetRouteSpecGrpcRouteTimeoutPerRequestOutput() GetRouteSpecGrpcRouteTimeoutPerRequestOutput {
	return i.ToGetRouteSpecGrpcRouteTimeoutPerRequestOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteTimeoutPerRequestArgs) ToGetRouteSpecGrpcRouteTimeoutPerRequestOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteTimeoutPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteTimeoutPerRequestOutput)
}

// GetRouteSpecGrpcRouteTimeoutPerRequestArrayInput is an input type that accepts GetRouteSpecGrpcRouteTimeoutPerRequestArray and GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecGrpcRouteTimeoutPerRequestArrayInput` via:
//
//	GetRouteSpecGrpcRouteTimeoutPerRequestArray{ GetRouteSpecGrpcRouteTimeoutPerRequestArgs{...} }
type GetRouteSpecGrpcRouteTimeoutPerRequestArrayInput interface {
	pulumi.Input

	ToGetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput() GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput
	ToGetRouteSpecGrpcRouteTimeoutPerRequestArrayOutputWithContext(context.Context) GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput
}

type GetRouteSpecGrpcRouteTimeoutPerRequestArray []GetRouteSpecGrpcRouteTimeoutPerRequestInput

func (GetRouteSpecGrpcRouteTimeoutPerRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteTimeoutPerRequest)(nil)).Elem()
}

func (i GetRouteSpecGrpcRouteTimeoutPerRequestArray) ToGetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput() GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput {
	return i.ToGetRouteSpecGrpcRouteTimeoutPerRequestArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecGrpcRouteTimeoutPerRequestArray) ToGetRouteSpecGrpcRouteTimeoutPerRequestArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput)
}

type GetRouteSpecGrpcRouteTimeoutPerRequestOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteTimeoutPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecGrpcRouteTimeoutPerRequest)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteTimeoutPerRequestOutput) ToGetRouteSpecGrpcRouteTimeoutPerRequestOutput() GetRouteSpecGrpcRouteTimeoutPerRequestOutput {
	return o
}

func (o GetRouteSpecGrpcRouteTimeoutPerRequestOutput) ToGetRouteSpecGrpcRouteTimeoutPerRequestOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteTimeoutPerRequestOutput {
	return o
}

func (o GetRouteSpecGrpcRouteTimeoutPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteTimeoutPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetRouteSpecGrpcRouteTimeoutPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecGrpcRouteTimeoutPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecGrpcRouteTimeoutPerRequest)(nil)).Elem()
}

func (o GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput) ToGetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput() GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput) ToGetRouteSpecGrpcRouteTimeoutPerRequestArrayOutputWithContext(ctx context.Context) GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput {
	return o
}

func (o GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput) Index(i pulumi.IntInput) GetRouteSpecGrpcRouteTimeoutPerRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecGrpcRouteTimeoutPerRequest {
		return vs[0].([]GetRouteSpecGrpcRouteTimeoutPerRequest)[vs[1].(int)]
	}).(GetRouteSpecGrpcRouteTimeoutPerRequestOutput)
}

type GetRouteSpecHttp2Route struct {
	Actions       []GetRouteSpecHttp2RouteAction      `pulumi:"actions"`
	Matches       []GetRouteSpecHttp2RouteMatch       `pulumi:"matches"`
	RetryPolicies []GetRouteSpecHttp2RouteRetryPolicy `pulumi:"retryPolicies"`
	Timeouts      []GetRouteSpecHttp2RouteTimeout     `pulumi:"timeouts"`
}

// GetRouteSpecHttp2RouteInput is an input type that accepts GetRouteSpecHttp2RouteArgs and GetRouteSpecHttp2RouteOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteInput` via:
//
//	GetRouteSpecHttp2RouteArgs{...}
type GetRouteSpecHttp2RouteInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteOutput() GetRouteSpecHttp2RouteOutput
	ToGetRouteSpecHttp2RouteOutputWithContext(context.Context) GetRouteSpecHttp2RouteOutput
}

type GetRouteSpecHttp2RouteArgs struct {
	Actions       GetRouteSpecHttp2RouteActionArrayInput      `pulumi:"actions"`
	Matches       GetRouteSpecHttp2RouteMatchArrayInput       `pulumi:"matches"`
	RetryPolicies GetRouteSpecHttp2RouteRetryPolicyArrayInput `pulumi:"retryPolicies"`
	Timeouts      GetRouteSpecHttp2RouteTimeoutArrayInput     `pulumi:"timeouts"`
}

func (GetRouteSpecHttp2RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2Route)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteArgs) ToGetRouteSpecHttp2RouteOutput() GetRouteSpecHttp2RouteOutput {
	return i.ToGetRouteSpecHttp2RouteOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteArgs) ToGetRouteSpecHttp2RouteOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteOutput)
}

// GetRouteSpecHttp2RouteArrayInput is an input type that accepts GetRouteSpecHttp2RouteArray and GetRouteSpecHttp2RouteArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteArrayInput` via:
//
//	GetRouteSpecHttp2RouteArray{ GetRouteSpecHttp2RouteArgs{...} }
type GetRouteSpecHttp2RouteArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteArrayOutput() GetRouteSpecHttp2RouteArrayOutput
	ToGetRouteSpecHttp2RouteArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteArrayOutput
}

type GetRouteSpecHttp2RouteArray []GetRouteSpecHttp2RouteInput

func (GetRouteSpecHttp2RouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2Route)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteArray) ToGetRouteSpecHttp2RouteArrayOutput() GetRouteSpecHttp2RouteArrayOutput {
	return i.ToGetRouteSpecHttp2RouteArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteArray) ToGetRouteSpecHttp2RouteArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteArrayOutput)
}

type GetRouteSpecHttp2RouteOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2Route)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteOutput) ToGetRouteSpecHttp2RouteOutput() GetRouteSpecHttp2RouteOutput {
	return o
}

func (o GetRouteSpecHttp2RouteOutput) ToGetRouteSpecHttp2RouteOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteOutput {
	return o
}

func (o GetRouteSpecHttp2RouteOutput) Actions() GetRouteSpecHttp2RouteActionArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2Route) []GetRouteSpecHttp2RouteAction { return v.Actions }).(GetRouteSpecHttp2RouteActionArrayOutput)
}

func (o GetRouteSpecHttp2RouteOutput) Matches() GetRouteSpecHttp2RouteMatchArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2Route) []GetRouteSpecHttp2RouteMatch { return v.Matches }).(GetRouteSpecHttp2RouteMatchArrayOutput)
}

func (o GetRouteSpecHttp2RouteOutput) RetryPolicies() GetRouteSpecHttp2RouteRetryPolicyArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2Route) []GetRouteSpecHttp2RouteRetryPolicy { return v.RetryPolicies }).(GetRouteSpecHttp2RouteRetryPolicyArrayOutput)
}

func (o GetRouteSpecHttp2RouteOutput) Timeouts() GetRouteSpecHttp2RouteTimeoutArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2Route) []GetRouteSpecHttp2RouteTimeout { return v.Timeouts }).(GetRouteSpecHttp2RouteTimeoutArrayOutput)
}

type GetRouteSpecHttp2RouteArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2Route)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteArrayOutput) ToGetRouteSpecHttp2RouteArrayOutput() GetRouteSpecHttp2RouteArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteArrayOutput) ToGetRouteSpecHttp2RouteArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2Route {
		return vs[0].([]GetRouteSpecHttp2Route)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteOutput)
}

type GetRouteSpecHttp2RouteAction struct {
	WeightedTargets []GetRouteSpecHttp2RouteActionWeightedTarget `pulumi:"weightedTargets"`
}

// GetRouteSpecHttp2RouteActionInput is an input type that accepts GetRouteSpecHttp2RouteActionArgs and GetRouteSpecHttp2RouteActionOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteActionInput` via:
//
//	GetRouteSpecHttp2RouteActionArgs{...}
type GetRouteSpecHttp2RouteActionInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteActionOutput() GetRouteSpecHttp2RouteActionOutput
	ToGetRouteSpecHttp2RouteActionOutputWithContext(context.Context) GetRouteSpecHttp2RouteActionOutput
}

type GetRouteSpecHttp2RouteActionArgs struct {
	WeightedTargets GetRouteSpecHttp2RouteActionWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (GetRouteSpecHttp2RouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteActionArgs) ToGetRouteSpecHttp2RouteActionOutput() GetRouteSpecHttp2RouteActionOutput {
	return i.ToGetRouteSpecHttp2RouteActionOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteActionArgs) ToGetRouteSpecHttp2RouteActionOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteActionOutput)
}

// GetRouteSpecHttp2RouteActionArrayInput is an input type that accepts GetRouteSpecHttp2RouteActionArray and GetRouteSpecHttp2RouteActionArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteActionArrayInput` via:
//
//	GetRouteSpecHttp2RouteActionArray{ GetRouteSpecHttp2RouteActionArgs{...} }
type GetRouteSpecHttp2RouteActionArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteActionArrayOutput() GetRouteSpecHttp2RouteActionArrayOutput
	ToGetRouteSpecHttp2RouteActionArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteActionArrayOutput
}

type GetRouteSpecHttp2RouteActionArray []GetRouteSpecHttp2RouteActionInput

func (GetRouteSpecHttp2RouteActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteActionArray) ToGetRouteSpecHttp2RouteActionArrayOutput() GetRouteSpecHttp2RouteActionArrayOutput {
	return i.ToGetRouteSpecHttp2RouteActionArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteActionArray) ToGetRouteSpecHttp2RouteActionArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteActionArrayOutput)
}

type GetRouteSpecHttp2RouteActionOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteActionOutput) ToGetRouteSpecHttp2RouteActionOutput() GetRouteSpecHttp2RouteActionOutput {
	return o
}

func (o GetRouteSpecHttp2RouteActionOutput) ToGetRouteSpecHttp2RouteActionOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteActionOutput {
	return o
}

func (o GetRouteSpecHttp2RouteActionOutput) WeightedTargets() GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteAction) []GetRouteSpecHttp2RouteActionWeightedTarget {
		return v.WeightedTargets
	}).(GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput)
}

type GetRouteSpecHttp2RouteActionArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteAction)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteActionArrayOutput) ToGetRouteSpecHttp2RouteActionArrayOutput() GetRouteSpecHttp2RouteActionArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteActionArrayOutput) ToGetRouteSpecHttp2RouteActionArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteActionArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteActionArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2RouteAction {
		return vs[0].([]GetRouteSpecHttp2RouteAction)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteActionOutput)
}

type GetRouteSpecHttp2RouteActionWeightedTarget struct {
	Port        int    `pulumi:"port"`
	VirtualNode string `pulumi:"virtualNode"`
	Weight      int    `pulumi:"weight"`
}

// GetRouteSpecHttp2RouteActionWeightedTargetInput is an input type that accepts GetRouteSpecHttp2RouteActionWeightedTargetArgs and GetRouteSpecHttp2RouteActionWeightedTargetOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteActionWeightedTargetInput` via:
//
//	GetRouteSpecHttp2RouteActionWeightedTargetArgs{...}
type GetRouteSpecHttp2RouteActionWeightedTargetInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteActionWeightedTargetOutput() GetRouteSpecHttp2RouteActionWeightedTargetOutput
	ToGetRouteSpecHttp2RouteActionWeightedTargetOutputWithContext(context.Context) GetRouteSpecHttp2RouteActionWeightedTargetOutput
}

type GetRouteSpecHttp2RouteActionWeightedTargetArgs struct {
	Port        pulumi.IntInput    `pulumi:"port"`
	VirtualNode pulumi.StringInput `pulumi:"virtualNode"`
	Weight      pulumi.IntInput    `pulumi:"weight"`
}

func (GetRouteSpecHttp2RouteActionWeightedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteActionWeightedTarget)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteActionWeightedTargetArgs) ToGetRouteSpecHttp2RouteActionWeightedTargetOutput() GetRouteSpecHttp2RouteActionWeightedTargetOutput {
	return i.ToGetRouteSpecHttp2RouteActionWeightedTargetOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteActionWeightedTargetArgs) ToGetRouteSpecHttp2RouteActionWeightedTargetOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteActionWeightedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteActionWeightedTargetOutput)
}

// GetRouteSpecHttp2RouteActionWeightedTargetArrayInput is an input type that accepts GetRouteSpecHttp2RouteActionWeightedTargetArray and GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteActionWeightedTargetArrayInput` via:
//
//	GetRouteSpecHttp2RouteActionWeightedTargetArray{ GetRouteSpecHttp2RouteActionWeightedTargetArgs{...} }
type GetRouteSpecHttp2RouteActionWeightedTargetArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteActionWeightedTargetArrayOutput() GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput
	ToGetRouteSpecHttp2RouteActionWeightedTargetArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput
}

type GetRouteSpecHttp2RouteActionWeightedTargetArray []GetRouteSpecHttp2RouteActionWeightedTargetInput

func (GetRouteSpecHttp2RouteActionWeightedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteActionWeightedTarget)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteActionWeightedTargetArray) ToGetRouteSpecHttp2RouteActionWeightedTargetArrayOutput() GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return i.ToGetRouteSpecHttp2RouteActionWeightedTargetArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteActionWeightedTargetArray) ToGetRouteSpecHttp2RouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput)
}

type GetRouteSpecHttp2RouteActionWeightedTargetOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteActionWeightedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteActionWeightedTarget)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteActionWeightedTargetOutput) ToGetRouteSpecHttp2RouteActionWeightedTargetOutput() GetRouteSpecHttp2RouteActionWeightedTargetOutput {
	return o
}

func (o GetRouteSpecHttp2RouteActionWeightedTargetOutput) ToGetRouteSpecHttp2RouteActionWeightedTargetOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteActionWeightedTargetOutput {
	return o
}

func (o GetRouteSpecHttp2RouteActionWeightedTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteActionWeightedTarget) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetRouteSpecHttp2RouteActionWeightedTargetOutput) VirtualNode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteActionWeightedTarget) string { return v.VirtualNode }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttp2RouteActionWeightedTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteActionWeightedTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteActionWeightedTarget)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput) ToGetRouteSpecHttp2RouteActionWeightedTargetArrayOutput() GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput) ToGetRouteSpecHttp2RouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteActionWeightedTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2RouteActionWeightedTarget {
		return vs[0].([]GetRouteSpecHttp2RouteActionWeightedTarget)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteActionWeightedTargetOutput)
}

type GetRouteSpecHttp2RouteMatch struct {
	Headers         []GetRouteSpecHttp2RouteMatchHeader         `pulumi:"headers"`
	Method          string                                      `pulumi:"method"`
	Paths           []GetRouteSpecHttp2RouteMatchPath           `pulumi:"paths"`
	Port            int                                         `pulumi:"port"`
	Prefix          string                                      `pulumi:"prefix"`
	QueryParameters []GetRouteSpecHttp2RouteMatchQueryParameter `pulumi:"queryParameters"`
	Scheme          string                                      `pulumi:"scheme"`
}

// GetRouteSpecHttp2RouteMatchInput is an input type that accepts GetRouteSpecHttp2RouteMatchArgs and GetRouteSpecHttp2RouteMatchOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteMatchInput` via:
//
//	GetRouteSpecHttp2RouteMatchArgs{...}
type GetRouteSpecHttp2RouteMatchInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteMatchOutput() GetRouteSpecHttp2RouteMatchOutput
	ToGetRouteSpecHttp2RouteMatchOutputWithContext(context.Context) GetRouteSpecHttp2RouteMatchOutput
}

type GetRouteSpecHttp2RouteMatchArgs struct {
	Headers         GetRouteSpecHttp2RouteMatchHeaderArrayInput         `pulumi:"headers"`
	Method          pulumi.StringInput                                  `pulumi:"method"`
	Paths           GetRouteSpecHttp2RouteMatchPathArrayInput           `pulumi:"paths"`
	Port            pulumi.IntInput                                     `pulumi:"port"`
	Prefix          pulumi.StringInput                                  `pulumi:"prefix"`
	QueryParameters GetRouteSpecHttp2RouteMatchQueryParameterArrayInput `pulumi:"queryParameters"`
	Scheme          pulumi.StringInput                                  `pulumi:"scheme"`
}

func (GetRouteSpecHttp2RouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteMatchArgs) ToGetRouteSpecHttp2RouteMatchOutput() GetRouteSpecHttp2RouteMatchOutput {
	return i.ToGetRouteSpecHttp2RouteMatchOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteMatchArgs) ToGetRouteSpecHttp2RouteMatchOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteMatchOutput)
}

// GetRouteSpecHttp2RouteMatchArrayInput is an input type that accepts GetRouteSpecHttp2RouteMatchArray and GetRouteSpecHttp2RouteMatchArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteMatchArrayInput` via:
//
//	GetRouteSpecHttp2RouteMatchArray{ GetRouteSpecHttp2RouteMatchArgs{...} }
type GetRouteSpecHttp2RouteMatchArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteMatchArrayOutput() GetRouteSpecHttp2RouteMatchArrayOutput
	ToGetRouteSpecHttp2RouteMatchArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteMatchArrayOutput
}

type GetRouteSpecHttp2RouteMatchArray []GetRouteSpecHttp2RouteMatchInput

func (GetRouteSpecHttp2RouteMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteMatchArray) ToGetRouteSpecHttp2RouteMatchArrayOutput() GetRouteSpecHttp2RouteMatchArrayOutput {
	return i.ToGetRouteSpecHttp2RouteMatchArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteMatchArray) ToGetRouteSpecHttp2RouteMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteMatchArrayOutput)
}

type GetRouteSpecHttp2RouteMatchOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteMatchOutput) ToGetRouteSpecHttp2RouteMatchOutput() GetRouteSpecHttp2RouteMatchOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchOutput) ToGetRouteSpecHttp2RouteMatchOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchOutput) Headers() GetRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatch) []GetRouteSpecHttp2RouteMatchHeader { return v.Headers }).(GetRouteSpecHttp2RouteMatchHeaderArrayOutput)
}

func (o GetRouteSpecHttp2RouteMatchOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatch) string { return v.Method }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttp2RouteMatchOutput) Paths() GetRouteSpecHttp2RouteMatchPathArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatch) []GetRouteSpecHttp2RouteMatchPath { return v.Paths }).(GetRouteSpecHttp2RouteMatchPathArrayOutput)
}

func (o GetRouteSpecHttp2RouteMatchOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatch) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetRouteSpecHttp2RouteMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttp2RouteMatchOutput) QueryParameters() GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatch) []GetRouteSpecHttp2RouteMatchQueryParameter {
		return v.QueryParameters
	}).(GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput)
}

func (o GetRouteSpecHttp2RouteMatchOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatch) string { return v.Scheme }).(pulumi.StringOutput)
}

type GetRouteSpecHttp2RouteMatchArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteMatch)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteMatchArrayOutput) ToGetRouteSpecHttp2RouteMatchArrayOutput() GetRouteSpecHttp2RouteMatchArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchArrayOutput) ToGetRouteSpecHttp2RouteMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2RouteMatch {
		return vs[0].([]GetRouteSpecHttp2RouteMatch)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteMatchOutput)
}

type GetRouteSpecHttp2RouteMatchHeader struct {
	Invert  bool                                     `pulumi:"invert"`
	Matches []GetRouteSpecHttp2RouteMatchHeaderMatch `pulumi:"matches"`
	// Name of the route.
	Name string `pulumi:"name"`
}

// GetRouteSpecHttp2RouteMatchHeaderInput is an input type that accepts GetRouteSpecHttp2RouteMatchHeaderArgs and GetRouteSpecHttp2RouteMatchHeaderOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteMatchHeaderInput` via:
//
//	GetRouteSpecHttp2RouteMatchHeaderArgs{...}
type GetRouteSpecHttp2RouteMatchHeaderInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteMatchHeaderOutput() GetRouteSpecHttp2RouteMatchHeaderOutput
	ToGetRouteSpecHttp2RouteMatchHeaderOutputWithContext(context.Context) GetRouteSpecHttp2RouteMatchHeaderOutput
}

type GetRouteSpecHttp2RouteMatchHeaderArgs struct {
	Invert  pulumi.BoolInput                                 `pulumi:"invert"`
	Matches GetRouteSpecHttp2RouteMatchHeaderMatchArrayInput `pulumi:"matches"`
	// Name of the route.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouteSpecHttp2RouteMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteMatchHeaderArgs) ToGetRouteSpecHttp2RouteMatchHeaderOutput() GetRouteSpecHttp2RouteMatchHeaderOutput {
	return i.ToGetRouteSpecHttp2RouteMatchHeaderOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteMatchHeaderArgs) ToGetRouteSpecHttp2RouteMatchHeaderOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteMatchHeaderOutput)
}

// GetRouteSpecHttp2RouteMatchHeaderArrayInput is an input type that accepts GetRouteSpecHttp2RouteMatchHeaderArray and GetRouteSpecHttp2RouteMatchHeaderArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteMatchHeaderArrayInput` via:
//
//	GetRouteSpecHttp2RouteMatchHeaderArray{ GetRouteSpecHttp2RouteMatchHeaderArgs{...} }
type GetRouteSpecHttp2RouteMatchHeaderArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteMatchHeaderArrayOutput() GetRouteSpecHttp2RouteMatchHeaderArrayOutput
	ToGetRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteMatchHeaderArrayOutput
}

type GetRouteSpecHttp2RouteMatchHeaderArray []GetRouteSpecHttp2RouteMatchHeaderInput

func (GetRouteSpecHttp2RouteMatchHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteMatchHeaderArray) ToGetRouteSpecHttp2RouteMatchHeaderArrayOutput() GetRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return i.ToGetRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteMatchHeaderArray) ToGetRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteMatchHeaderArrayOutput)
}

type GetRouteSpecHttp2RouteMatchHeaderOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteMatchHeaderOutput) ToGetRouteSpecHttp2RouteMatchHeaderOutput() GetRouteSpecHttp2RouteMatchHeaderOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchHeaderOutput) ToGetRouteSpecHttp2RouteMatchHeaderOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchHeaderOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchHeaderOutput) Invert() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchHeader) bool { return v.Invert }).(pulumi.BoolOutput)
}

func (o GetRouteSpecHttp2RouteMatchHeaderOutput) Matches() GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchHeader) []GetRouteSpecHttp2RouteMatchHeaderMatch { return v.Matches }).(GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput)
}

// Name of the route.
func (o GetRouteSpecHttp2RouteMatchHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchHeader) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouteSpecHttp2RouteMatchHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteMatchHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteMatchHeader)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteMatchHeaderArrayOutput) ToGetRouteSpecHttp2RouteMatchHeaderArrayOutput() GetRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchHeaderArrayOutput) ToGetRouteSpecHttp2RouteMatchHeaderArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchHeaderArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchHeaderArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteMatchHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2RouteMatchHeader {
		return vs[0].([]GetRouteSpecHttp2RouteMatchHeader)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteMatchHeaderOutput)
}

type GetRouteSpecHttp2RouteMatchHeaderMatch struct {
	Exact  string                                        `pulumi:"exact"`
	Prefix string                                        `pulumi:"prefix"`
	Ranges []GetRouteSpecHttp2RouteMatchHeaderMatchRange `pulumi:"ranges"`
	Regex  string                                        `pulumi:"regex"`
	Suffix string                                        `pulumi:"suffix"`
}

// GetRouteSpecHttp2RouteMatchHeaderMatchInput is an input type that accepts GetRouteSpecHttp2RouteMatchHeaderMatchArgs and GetRouteSpecHttp2RouteMatchHeaderMatchOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteMatchHeaderMatchInput` via:
//
//	GetRouteSpecHttp2RouteMatchHeaderMatchArgs{...}
type GetRouteSpecHttp2RouteMatchHeaderMatchInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteMatchHeaderMatchOutput() GetRouteSpecHttp2RouteMatchHeaderMatchOutput
	ToGetRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(context.Context) GetRouteSpecHttp2RouteMatchHeaderMatchOutput
}

type GetRouteSpecHttp2RouteMatchHeaderMatchArgs struct {
	Exact  pulumi.StringInput                                    `pulumi:"exact"`
	Prefix pulumi.StringInput                                    `pulumi:"prefix"`
	Ranges GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayInput `pulumi:"ranges"`
	Regex  pulumi.StringInput                                    `pulumi:"regex"`
	Suffix pulumi.StringInput                                    `pulumi:"suffix"`
}

func (GetRouteSpecHttp2RouteMatchHeaderMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteMatchHeaderMatchArgs) ToGetRouteSpecHttp2RouteMatchHeaderMatchOutput() GetRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return i.ToGetRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteMatchHeaderMatchArgs) ToGetRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteMatchHeaderMatchOutput)
}

// GetRouteSpecHttp2RouteMatchHeaderMatchArrayInput is an input type that accepts GetRouteSpecHttp2RouteMatchHeaderMatchArray and GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteMatchHeaderMatchArrayInput` via:
//
//	GetRouteSpecHttp2RouteMatchHeaderMatchArray{ GetRouteSpecHttp2RouteMatchHeaderMatchArgs{...} }
type GetRouteSpecHttp2RouteMatchHeaderMatchArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput() GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput
	ToGetRouteSpecHttp2RouteMatchHeaderMatchArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput
}

type GetRouteSpecHttp2RouteMatchHeaderMatchArray []GetRouteSpecHttp2RouteMatchHeaderMatchInput

func (GetRouteSpecHttp2RouteMatchHeaderMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteMatchHeaderMatchArray) ToGetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput() GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput {
	return i.ToGetRouteSpecHttp2RouteMatchHeaderMatchArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteMatchHeaderMatchArray) ToGetRouteSpecHttp2RouteMatchHeaderMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput)
}

type GetRouteSpecHttp2RouteMatchHeaderMatchOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteMatchHeaderMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchOutput) ToGetRouteSpecHttp2RouteMatchHeaderMatchOutput() GetRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchOutput) ToGetRouteSpecHttp2RouteMatchHeaderMatchOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchHeaderMatch) string { return v.Exact }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchHeaderMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchOutput) Ranges() GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchHeaderMatch) []GetRouteSpecHttp2RouteMatchHeaderMatchRange {
		return v.Ranges
	}).(GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput)
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchHeaderMatch) string { return v.Regex }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchOutput) Suffix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchHeaderMatch) string { return v.Suffix }).(pulumi.StringOutput)
}

type GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteMatchHeaderMatch)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput) ToGetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput() GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput) ToGetRouteSpecHttp2RouteMatchHeaderMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteMatchHeaderMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2RouteMatchHeaderMatch {
		return vs[0].([]GetRouteSpecHttp2RouteMatchHeaderMatch)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteMatchHeaderMatchOutput)
}

type GetRouteSpecHttp2RouteMatchHeaderMatchRange struct {
	End   int `pulumi:"end"`
	Start int `pulumi:"start"`
}

// GetRouteSpecHttp2RouteMatchHeaderMatchRangeInput is an input type that accepts GetRouteSpecHttp2RouteMatchHeaderMatchRangeArgs and GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteMatchHeaderMatchRangeInput` via:
//
//	GetRouteSpecHttp2RouteMatchHeaderMatchRangeArgs{...}
type GetRouteSpecHttp2RouteMatchHeaderMatchRangeInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput
	ToGetRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(context.Context) GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput
}

type GetRouteSpecHttp2RouteMatchHeaderMatchRangeArgs struct {
	End   pulumi.IntInput `pulumi:"end"`
	Start pulumi.IntInput `pulumi:"start"`
}

func (GetRouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToGetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return i.ToGetRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteMatchHeaderMatchRangeArgs) ToGetRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput)
}

// GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayInput is an input type that accepts GetRouteSpecHttp2RouteMatchHeaderMatchRangeArray and GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayInput` via:
//
//	GetRouteSpecHttp2RouteMatchHeaderMatchRangeArray{ GetRouteSpecHttp2RouteMatchHeaderMatchRangeArgs{...} }
type GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput() GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput
	ToGetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput
}

type GetRouteSpecHttp2RouteMatchHeaderMatchRangeArray []GetRouteSpecHttp2RouteMatchHeaderMatchRangeInput

func (GetRouteSpecHttp2RouteMatchHeaderMatchRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteMatchHeaderMatchRangeArray) ToGetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput() GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput {
	return i.ToGetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteMatchHeaderMatchRangeArray) ToGetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput)
}

type GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToGetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput() GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) ToGetRouteSpecHttp2RouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchHeaderMatchRange) int { return v.End }).(pulumi.IntOutput)
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchHeaderMatchRange) int { return v.Start }).(pulumi.IntOutput)
}

type GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput) ToGetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput() GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput) ToGetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2RouteMatchHeaderMatchRange {
		return vs[0].([]GetRouteSpecHttp2RouteMatchHeaderMatchRange)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput)
}

type GetRouteSpecHttp2RouteMatchPath struct {
	Exact string `pulumi:"exact"`
	Regex string `pulumi:"regex"`
}

// GetRouteSpecHttp2RouteMatchPathInput is an input type that accepts GetRouteSpecHttp2RouteMatchPathArgs and GetRouteSpecHttp2RouteMatchPathOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteMatchPathInput` via:
//
//	GetRouteSpecHttp2RouteMatchPathArgs{...}
type GetRouteSpecHttp2RouteMatchPathInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteMatchPathOutput() GetRouteSpecHttp2RouteMatchPathOutput
	ToGetRouteSpecHttp2RouteMatchPathOutputWithContext(context.Context) GetRouteSpecHttp2RouteMatchPathOutput
}

type GetRouteSpecHttp2RouteMatchPathArgs struct {
	Exact pulumi.StringInput `pulumi:"exact"`
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (GetRouteSpecHttp2RouteMatchPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteMatchPathArgs) ToGetRouteSpecHttp2RouteMatchPathOutput() GetRouteSpecHttp2RouteMatchPathOutput {
	return i.ToGetRouteSpecHttp2RouteMatchPathOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteMatchPathArgs) ToGetRouteSpecHttp2RouteMatchPathOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteMatchPathOutput)
}

// GetRouteSpecHttp2RouteMatchPathArrayInput is an input type that accepts GetRouteSpecHttp2RouteMatchPathArray and GetRouteSpecHttp2RouteMatchPathArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteMatchPathArrayInput` via:
//
//	GetRouteSpecHttp2RouteMatchPathArray{ GetRouteSpecHttp2RouteMatchPathArgs{...} }
type GetRouteSpecHttp2RouteMatchPathArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteMatchPathArrayOutput() GetRouteSpecHttp2RouteMatchPathArrayOutput
	ToGetRouteSpecHttp2RouteMatchPathArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteMatchPathArrayOutput
}

type GetRouteSpecHttp2RouteMatchPathArray []GetRouteSpecHttp2RouteMatchPathInput

func (GetRouteSpecHttp2RouteMatchPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteMatchPathArray) ToGetRouteSpecHttp2RouteMatchPathArrayOutput() GetRouteSpecHttp2RouteMatchPathArrayOutput {
	return i.ToGetRouteSpecHttp2RouteMatchPathArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteMatchPathArray) ToGetRouteSpecHttp2RouteMatchPathArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteMatchPathArrayOutput)
}

type GetRouteSpecHttp2RouteMatchPathOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteMatchPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteMatchPathOutput) ToGetRouteSpecHttp2RouteMatchPathOutput() GetRouteSpecHttp2RouteMatchPathOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchPathOutput) ToGetRouteSpecHttp2RouteMatchPathOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchPathOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchPathOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchPath) string { return v.Exact }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttp2RouteMatchPathOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchPath) string { return v.Regex }).(pulumi.StringOutput)
}

type GetRouteSpecHttp2RouteMatchPathArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteMatchPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteMatchPath)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteMatchPathArrayOutput) ToGetRouteSpecHttp2RouteMatchPathArrayOutput() GetRouteSpecHttp2RouteMatchPathArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchPathArrayOutput) ToGetRouteSpecHttp2RouteMatchPathArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchPathArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchPathArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteMatchPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2RouteMatchPath {
		return vs[0].([]GetRouteSpecHttp2RouteMatchPath)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteMatchPathOutput)
}

type GetRouteSpecHttp2RouteMatchQueryParameter struct {
	Matches []GetRouteSpecHttp2RouteMatchQueryParameterMatch `pulumi:"matches"`
	// Name of the route.
	Name string `pulumi:"name"`
}

// GetRouteSpecHttp2RouteMatchQueryParameterInput is an input type that accepts GetRouteSpecHttp2RouteMatchQueryParameterArgs and GetRouteSpecHttp2RouteMatchQueryParameterOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteMatchQueryParameterInput` via:
//
//	GetRouteSpecHttp2RouteMatchQueryParameterArgs{...}
type GetRouteSpecHttp2RouteMatchQueryParameterInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteMatchQueryParameterOutput() GetRouteSpecHttp2RouteMatchQueryParameterOutput
	ToGetRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(context.Context) GetRouteSpecHttp2RouteMatchQueryParameterOutput
}

type GetRouteSpecHttp2RouteMatchQueryParameterArgs struct {
	Matches GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayInput `pulumi:"matches"`
	// Name of the route.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouteSpecHttp2RouteMatchQueryParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteMatchQueryParameterArgs) ToGetRouteSpecHttp2RouteMatchQueryParameterOutput() GetRouteSpecHttp2RouteMatchQueryParameterOutput {
	return i.ToGetRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteMatchQueryParameterArgs) ToGetRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchQueryParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteMatchQueryParameterOutput)
}

// GetRouteSpecHttp2RouteMatchQueryParameterArrayInput is an input type that accepts GetRouteSpecHttp2RouteMatchQueryParameterArray and GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteMatchQueryParameterArrayInput` via:
//
//	GetRouteSpecHttp2RouteMatchQueryParameterArray{ GetRouteSpecHttp2RouteMatchQueryParameterArgs{...} }
type GetRouteSpecHttp2RouteMatchQueryParameterArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteMatchQueryParameterArrayOutput() GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput
	ToGetRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput
}

type GetRouteSpecHttp2RouteMatchQueryParameterArray []GetRouteSpecHttp2RouteMatchQueryParameterInput

func (GetRouteSpecHttp2RouteMatchQueryParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteMatchQueryParameterArray) ToGetRouteSpecHttp2RouteMatchQueryParameterArrayOutput() GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return i.ToGetRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteMatchQueryParameterArray) ToGetRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput)
}

type GetRouteSpecHttp2RouteMatchQueryParameterOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteMatchQueryParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteMatchQueryParameterOutput) ToGetRouteSpecHttp2RouteMatchQueryParameterOutput() GetRouteSpecHttp2RouteMatchQueryParameterOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchQueryParameterOutput) ToGetRouteSpecHttp2RouteMatchQueryParameterOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchQueryParameterOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchQueryParameterOutput) Matches() GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchQueryParameter) []GetRouteSpecHttp2RouteMatchQueryParameterMatch {
		return v.Matches
	}).(GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput)
}

// Name of the route.
func (o GetRouteSpecHttp2RouteMatchQueryParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchQueryParameter) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteMatchQueryParameter)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput) ToGetRouteSpecHttp2RouteMatchQueryParameterArrayOutput() GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput) ToGetRouteSpecHttp2RouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteMatchQueryParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2RouteMatchQueryParameter {
		return vs[0].([]GetRouteSpecHttp2RouteMatchQueryParameter)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteMatchQueryParameterOutput)
}

type GetRouteSpecHttp2RouteMatchQueryParameterMatch struct {
	Exact string `pulumi:"exact"`
}

// GetRouteSpecHttp2RouteMatchQueryParameterMatchInput is an input type that accepts GetRouteSpecHttp2RouteMatchQueryParameterMatchArgs and GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteMatchQueryParameterMatchInput` via:
//
//	GetRouteSpecHttp2RouteMatchQueryParameterMatchArgs{...}
type GetRouteSpecHttp2RouteMatchQueryParameterMatchInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteMatchQueryParameterMatchOutput() GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput
	ToGetRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(context.Context) GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput
}

type GetRouteSpecHttp2RouteMatchQueryParameterMatchArgs struct {
	Exact pulumi.StringInput `pulumi:"exact"`
}

func (GetRouteSpecHttp2RouteMatchQueryParameterMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteMatchQueryParameterMatchArgs) ToGetRouteSpecHttp2RouteMatchQueryParameterMatchOutput() GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return i.ToGetRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteMatchQueryParameterMatchArgs) ToGetRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput)
}

// GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayInput is an input type that accepts GetRouteSpecHttp2RouteMatchQueryParameterMatchArray and GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayInput` via:
//
//	GetRouteSpecHttp2RouteMatchQueryParameterMatchArray{ GetRouteSpecHttp2RouteMatchQueryParameterMatchArgs{...} }
type GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput() GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput
	ToGetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput
}

type GetRouteSpecHttp2RouteMatchQueryParameterMatchArray []GetRouteSpecHttp2RouteMatchQueryParameterMatchInput

func (GetRouteSpecHttp2RouteMatchQueryParameterMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteMatchQueryParameterMatchArray) ToGetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput() GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput {
	return i.ToGetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteMatchQueryParameterMatchArray) ToGetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput)
}

type GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput) ToGetRouteSpecHttp2RouteMatchQueryParameterMatchOutput() GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput) ToGetRouteSpecHttp2RouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteMatchQueryParameterMatch) string { return v.Exact }).(pulumi.StringOutput)
}

type GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput) ToGetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput() GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput) ToGetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2RouteMatchQueryParameterMatch {
		return vs[0].([]GetRouteSpecHttp2RouteMatchQueryParameterMatch)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput)
}

type GetRouteSpecHttp2RouteRetryPolicy struct {
	HttpRetryEvents  []string                                           `pulumi:"httpRetryEvents"`
	MaxRetries       int                                                `pulumi:"maxRetries"`
	PerRetryTimeouts []GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeout `pulumi:"perRetryTimeouts"`
	TcpRetryEvents   []string                                           `pulumi:"tcpRetryEvents"`
}

// GetRouteSpecHttp2RouteRetryPolicyInput is an input type that accepts GetRouteSpecHttp2RouteRetryPolicyArgs and GetRouteSpecHttp2RouteRetryPolicyOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteRetryPolicyInput` via:
//
//	GetRouteSpecHttp2RouteRetryPolicyArgs{...}
type GetRouteSpecHttp2RouteRetryPolicyInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteRetryPolicyOutput() GetRouteSpecHttp2RouteRetryPolicyOutput
	ToGetRouteSpecHttp2RouteRetryPolicyOutputWithContext(context.Context) GetRouteSpecHttp2RouteRetryPolicyOutput
}

type GetRouteSpecHttp2RouteRetryPolicyArgs struct {
	HttpRetryEvents  pulumi.StringArrayInput                                    `pulumi:"httpRetryEvents"`
	MaxRetries       pulumi.IntInput                                            `pulumi:"maxRetries"`
	PerRetryTimeouts GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayInput `pulumi:"perRetryTimeouts"`
	TcpRetryEvents   pulumi.StringArrayInput                                    `pulumi:"tcpRetryEvents"`
}

func (GetRouteSpecHttp2RouteRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteRetryPolicy)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteRetryPolicyArgs) ToGetRouteSpecHttp2RouteRetryPolicyOutput() GetRouteSpecHttp2RouteRetryPolicyOutput {
	return i.ToGetRouteSpecHttp2RouteRetryPolicyOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteRetryPolicyArgs) ToGetRouteSpecHttp2RouteRetryPolicyOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteRetryPolicyOutput)
}

// GetRouteSpecHttp2RouteRetryPolicyArrayInput is an input type that accepts GetRouteSpecHttp2RouteRetryPolicyArray and GetRouteSpecHttp2RouteRetryPolicyArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteRetryPolicyArrayInput` via:
//
//	GetRouteSpecHttp2RouteRetryPolicyArray{ GetRouteSpecHttp2RouteRetryPolicyArgs{...} }
type GetRouteSpecHttp2RouteRetryPolicyArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteRetryPolicyArrayOutput() GetRouteSpecHttp2RouteRetryPolicyArrayOutput
	ToGetRouteSpecHttp2RouteRetryPolicyArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteRetryPolicyArrayOutput
}

type GetRouteSpecHttp2RouteRetryPolicyArray []GetRouteSpecHttp2RouteRetryPolicyInput

func (GetRouteSpecHttp2RouteRetryPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteRetryPolicy)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteRetryPolicyArray) ToGetRouteSpecHttp2RouteRetryPolicyArrayOutput() GetRouteSpecHttp2RouteRetryPolicyArrayOutput {
	return i.ToGetRouteSpecHttp2RouteRetryPolicyArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteRetryPolicyArray) ToGetRouteSpecHttp2RouteRetryPolicyArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteRetryPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteRetryPolicyArrayOutput)
}

type GetRouteSpecHttp2RouteRetryPolicyOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteRetryPolicy)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteRetryPolicyOutput) ToGetRouteSpecHttp2RouteRetryPolicyOutput() GetRouteSpecHttp2RouteRetryPolicyOutput {
	return o
}

func (o GetRouteSpecHttp2RouteRetryPolicyOutput) ToGetRouteSpecHttp2RouteRetryPolicyOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteRetryPolicyOutput {
	return o
}

func (o GetRouteSpecHttp2RouteRetryPolicyOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteRetryPolicy) []string { return v.HttpRetryEvents }).(pulumi.StringArrayOutput)
}

func (o GetRouteSpecHttp2RouteRetryPolicyOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteRetryPolicy) int { return v.MaxRetries }).(pulumi.IntOutput)
}

func (o GetRouteSpecHttp2RouteRetryPolicyOutput) PerRetryTimeouts() GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteRetryPolicy) []GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeout {
		return v.PerRetryTimeouts
	}).(GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput)
}

func (o GetRouteSpecHttp2RouteRetryPolicyOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteRetryPolicy) []string { return v.TcpRetryEvents }).(pulumi.StringArrayOutput)
}

type GetRouteSpecHttp2RouteRetryPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteRetryPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteRetryPolicy)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteRetryPolicyArrayOutput) ToGetRouteSpecHttp2RouteRetryPolicyArrayOutput() GetRouteSpecHttp2RouteRetryPolicyArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteRetryPolicyArrayOutput) ToGetRouteSpecHttp2RouteRetryPolicyArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteRetryPolicyArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteRetryPolicyArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteRetryPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2RouteRetryPolicy {
		return vs[0].([]GetRouteSpecHttp2RouteRetryPolicy)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteRetryPolicyOutput)
}

type GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeout struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput is an input type that accepts GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs and GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput` via:
//
//	GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs{...}
type GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput() GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput
	ToGetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Context) GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput
}

type GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) ToGetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput() GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return i.ToGetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs) ToGetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput)
}

// GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayInput is an input type that accepts GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArray and GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayInput` via:
//
//	GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArray{ GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs{...} }
type GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput() GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput
	ToGetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput
}

type GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArray []GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput

func (GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArray) ToGetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput() GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput {
	return i.ToGetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArray) ToGetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput)
}

type GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) ToGetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput() GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) ToGetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeout) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeout) int { return v.Value }).(pulumi.IntOutput)
}

type GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput) ToGetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput() GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput) ToGetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeout {
		return vs[0].([]GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeout)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput)
}

type GetRouteSpecHttp2RouteTimeout struct {
	Idles       []GetRouteSpecHttp2RouteTimeoutIdle       `pulumi:"idles"`
	PerRequests []GetRouteSpecHttp2RouteTimeoutPerRequest `pulumi:"perRequests"`
}

// GetRouteSpecHttp2RouteTimeoutInput is an input type that accepts GetRouteSpecHttp2RouteTimeoutArgs and GetRouteSpecHttp2RouteTimeoutOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteTimeoutInput` via:
//
//	GetRouteSpecHttp2RouteTimeoutArgs{...}
type GetRouteSpecHttp2RouteTimeoutInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteTimeoutOutput() GetRouteSpecHttp2RouteTimeoutOutput
	ToGetRouteSpecHttp2RouteTimeoutOutputWithContext(context.Context) GetRouteSpecHttp2RouteTimeoutOutput
}

type GetRouteSpecHttp2RouteTimeoutArgs struct {
	Idles       GetRouteSpecHttp2RouteTimeoutIdleArrayInput       `pulumi:"idles"`
	PerRequests GetRouteSpecHttp2RouteTimeoutPerRequestArrayInput `pulumi:"perRequests"`
}

func (GetRouteSpecHttp2RouteTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteTimeout)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteTimeoutArgs) ToGetRouteSpecHttp2RouteTimeoutOutput() GetRouteSpecHttp2RouteTimeoutOutput {
	return i.ToGetRouteSpecHttp2RouteTimeoutOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteTimeoutArgs) ToGetRouteSpecHttp2RouteTimeoutOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteTimeoutOutput)
}

// GetRouteSpecHttp2RouteTimeoutArrayInput is an input type that accepts GetRouteSpecHttp2RouteTimeoutArray and GetRouteSpecHttp2RouteTimeoutArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteTimeoutArrayInput` via:
//
//	GetRouteSpecHttp2RouteTimeoutArray{ GetRouteSpecHttp2RouteTimeoutArgs{...} }
type GetRouteSpecHttp2RouteTimeoutArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteTimeoutArrayOutput() GetRouteSpecHttp2RouteTimeoutArrayOutput
	ToGetRouteSpecHttp2RouteTimeoutArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteTimeoutArrayOutput
}

type GetRouteSpecHttp2RouteTimeoutArray []GetRouteSpecHttp2RouteTimeoutInput

func (GetRouteSpecHttp2RouteTimeoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteTimeout)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteTimeoutArray) ToGetRouteSpecHttp2RouteTimeoutArrayOutput() GetRouteSpecHttp2RouteTimeoutArrayOutput {
	return i.ToGetRouteSpecHttp2RouteTimeoutArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteTimeoutArray) ToGetRouteSpecHttp2RouteTimeoutArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteTimeoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteTimeoutArrayOutput)
}

type GetRouteSpecHttp2RouteTimeoutOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteTimeout)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteTimeoutOutput) ToGetRouteSpecHttp2RouteTimeoutOutput() GetRouteSpecHttp2RouteTimeoutOutput {
	return o
}

func (o GetRouteSpecHttp2RouteTimeoutOutput) ToGetRouteSpecHttp2RouteTimeoutOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteTimeoutOutput {
	return o
}

func (o GetRouteSpecHttp2RouteTimeoutOutput) Idles() GetRouteSpecHttp2RouteTimeoutIdleArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteTimeout) []GetRouteSpecHttp2RouteTimeoutIdle { return v.Idles }).(GetRouteSpecHttp2RouteTimeoutIdleArrayOutput)
}

func (o GetRouteSpecHttp2RouteTimeoutOutput) PerRequests() GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteTimeout) []GetRouteSpecHttp2RouteTimeoutPerRequest { return v.PerRequests }).(GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput)
}

type GetRouteSpecHttp2RouteTimeoutArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteTimeoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteTimeout)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteTimeoutArrayOutput) ToGetRouteSpecHttp2RouteTimeoutArrayOutput() GetRouteSpecHttp2RouteTimeoutArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteTimeoutArrayOutput) ToGetRouteSpecHttp2RouteTimeoutArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteTimeoutArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteTimeoutArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteTimeoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2RouteTimeout {
		return vs[0].([]GetRouteSpecHttp2RouteTimeout)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteTimeoutOutput)
}

type GetRouteSpecHttp2RouteTimeoutIdle struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetRouteSpecHttp2RouteTimeoutIdleInput is an input type that accepts GetRouteSpecHttp2RouteTimeoutIdleArgs and GetRouteSpecHttp2RouteTimeoutIdleOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteTimeoutIdleInput` via:
//
//	GetRouteSpecHttp2RouteTimeoutIdleArgs{...}
type GetRouteSpecHttp2RouteTimeoutIdleInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteTimeoutIdleOutput() GetRouteSpecHttp2RouteTimeoutIdleOutput
	ToGetRouteSpecHttp2RouteTimeoutIdleOutputWithContext(context.Context) GetRouteSpecHttp2RouteTimeoutIdleOutput
}

type GetRouteSpecHttp2RouteTimeoutIdleArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetRouteSpecHttp2RouteTimeoutIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteTimeoutIdle)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteTimeoutIdleArgs) ToGetRouteSpecHttp2RouteTimeoutIdleOutput() GetRouteSpecHttp2RouteTimeoutIdleOutput {
	return i.ToGetRouteSpecHttp2RouteTimeoutIdleOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteTimeoutIdleArgs) ToGetRouteSpecHttp2RouteTimeoutIdleOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteTimeoutIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteTimeoutIdleOutput)
}

// GetRouteSpecHttp2RouteTimeoutIdleArrayInput is an input type that accepts GetRouteSpecHttp2RouteTimeoutIdleArray and GetRouteSpecHttp2RouteTimeoutIdleArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteTimeoutIdleArrayInput` via:
//
//	GetRouteSpecHttp2RouteTimeoutIdleArray{ GetRouteSpecHttp2RouteTimeoutIdleArgs{...} }
type GetRouteSpecHttp2RouteTimeoutIdleArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteTimeoutIdleArrayOutput() GetRouteSpecHttp2RouteTimeoutIdleArrayOutput
	ToGetRouteSpecHttp2RouteTimeoutIdleArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteTimeoutIdleArrayOutput
}

type GetRouteSpecHttp2RouteTimeoutIdleArray []GetRouteSpecHttp2RouteTimeoutIdleInput

func (GetRouteSpecHttp2RouteTimeoutIdleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteTimeoutIdle)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteTimeoutIdleArray) ToGetRouteSpecHttp2RouteTimeoutIdleArrayOutput() GetRouteSpecHttp2RouteTimeoutIdleArrayOutput {
	return i.ToGetRouteSpecHttp2RouteTimeoutIdleArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteTimeoutIdleArray) ToGetRouteSpecHttp2RouteTimeoutIdleArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteTimeoutIdleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteTimeoutIdleArrayOutput)
}

type GetRouteSpecHttp2RouteTimeoutIdleOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteTimeoutIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteTimeoutIdle)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteTimeoutIdleOutput) ToGetRouteSpecHttp2RouteTimeoutIdleOutput() GetRouteSpecHttp2RouteTimeoutIdleOutput {
	return o
}

func (o GetRouteSpecHttp2RouteTimeoutIdleOutput) ToGetRouteSpecHttp2RouteTimeoutIdleOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteTimeoutIdleOutput {
	return o
}

func (o GetRouteSpecHttp2RouteTimeoutIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteTimeoutIdle) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttp2RouteTimeoutIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteTimeoutIdle) int { return v.Value }).(pulumi.IntOutput)
}

type GetRouteSpecHttp2RouteTimeoutIdleArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteTimeoutIdleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteTimeoutIdle)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteTimeoutIdleArrayOutput) ToGetRouteSpecHttp2RouteTimeoutIdleArrayOutput() GetRouteSpecHttp2RouteTimeoutIdleArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteTimeoutIdleArrayOutput) ToGetRouteSpecHttp2RouteTimeoutIdleArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteTimeoutIdleArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteTimeoutIdleArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteTimeoutIdleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2RouteTimeoutIdle {
		return vs[0].([]GetRouteSpecHttp2RouteTimeoutIdle)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteTimeoutIdleOutput)
}

type GetRouteSpecHttp2RouteTimeoutPerRequest struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetRouteSpecHttp2RouteTimeoutPerRequestInput is an input type that accepts GetRouteSpecHttp2RouteTimeoutPerRequestArgs and GetRouteSpecHttp2RouteTimeoutPerRequestOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteTimeoutPerRequestInput` via:
//
//	GetRouteSpecHttp2RouteTimeoutPerRequestArgs{...}
type GetRouteSpecHttp2RouteTimeoutPerRequestInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteTimeoutPerRequestOutput() GetRouteSpecHttp2RouteTimeoutPerRequestOutput
	ToGetRouteSpecHttp2RouteTimeoutPerRequestOutputWithContext(context.Context) GetRouteSpecHttp2RouteTimeoutPerRequestOutput
}

type GetRouteSpecHttp2RouteTimeoutPerRequestArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetRouteSpecHttp2RouteTimeoutPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteTimeoutPerRequest)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteTimeoutPerRequestArgs) ToGetRouteSpecHttp2RouteTimeoutPerRequestOutput() GetRouteSpecHttp2RouteTimeoutPerRequestOutput {
	return i.ToGetRouteSpecHttp2RouteTimeoutPerRequestOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteTimeoutPerRequestArgs) ToGetRouteSpecHttp2RouteTimeoutPerRequestOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteTimeoutPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteTimeoutPerRequestOutput)
}

// GetRouteSpecHttp2RouteTimeoutPerRequestArrayInput is an input type that accepts GetRouteSpecHttp2RouteTimeoutPerRequestArray and GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttp2RouteTimeoutPerRequestArrayInput` via:
//
//	GetRouteSpecHttp2RouteTimeoutPerRequestArray{ GetRouteSpecHttp2RouteTimeoutPerRequestArgs{...} }
type GetRouteSpecHttp2RouteTimeoutPerRequestArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput() GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput
	ToGetRouteSpecHttp2RouteTimeoutPerRequestArrayOutputWithContext(context.Context) GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput
}

type GetRouteSpecHttp2RouteTimeoutPerRequestArray []GetRouteSpecHttp2RouteTimeoutPerRequestInput

func (GetRouteSpecHttp2RouteTimeoutPerRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteTimeoutPerRequest)(nil)).Elem()
}

func (i GetRouteSpecHttp2RouteTimeoutPerRequestArray) ToGetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput() GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput {
	return i.ToGetRouteSpecHttp2RouteTimeoutPerRequestArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttp2RouteTimeoutPerRequestArray) ToGetRouteSpecHttp2RouteTimeoutPerRequestArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput)
}

type GetRouteSpecHttp2RouteTimeoutPerRequestOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteTimeoutPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttp2RouteTimeoutPerRequest)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteTimeoutPerRequestOutput) ToGetRouteSpecHttp2RouteTimeoutPerRequestOutput() GetRouteSpecHttp2RouteTimeoutPerRequestOutput {
	return o
}

func (o GetRouteSpecHttp2RouteTimeoutPerRequestOutput) ToGetRouteSpecHttp2RouteTimeoutPerRequestOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteTimeoutPerRequestOutput {
	return o
}

func (o GetRouteSpecHttp2RouteTimeoutPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteTimeoutPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttp2RouteTimeoutPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttp2RouteTimeoutPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttp2RouteTimeoutPerRequest)(nil)).Elem()
}

func (o GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput) ToGetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput() GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput) ToGetRouteSpecHttp2RouteTimeoutPerRequestArrayOutputWithContext(ctx context.Context) GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput {
	return o
}

func (o GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttp2RouteTimeoutPerRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttp2RouteTimeoutPerRequest {
		return vs[0].([]GetRouteSpecHttp2RouteTimeoutPerRequest)[vs[1].(int)]
	}).(GetRouteSpecHttp2RouteTimeoutPerRequestOutput)
}

type GetRouteSpecHttpRoute struct {
	Actions       []GetRouteSpecHttpRouteAction      `pulumi:"actions"`
	Matches       []GetRouteSpecHttpRouteMatch       `pulumi:"matches"`
	RetryPolicies []GetRouteSpecHttpRouteRetryPolicy `pulumi:"retryPolicies"`
	Timeouts      []GetRouteSpecHttpRouteTimeout     `pulumi:"timeouts"`
}

// GetRouteSpecHttpRouteInput is an input type that accepts GetRouteSpecHttpRouteArgs and GetRouteSpecHttpRouteOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteInput` via:
//
//	GetRouteSpecHttpRouteArgs{...}
type GetRouteSpecHttpRouteInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteOutput() GetRouteSpecHttpRouteOutput
	ToGetRouteSpecHttpRouteOutputWithContext(context.Context) GetRouteSpecHttpRouteOutput
}

type GetRouteSpecHttpRouteArgs struct {
	Actions       GetRouteSpecHttpRouteActionArrayInput      `pulumi:"actions"`
	Matches       GetRouteSpecHttpRouteMatchArrayInput       `pulumi:"matches"`
	RetryPolicies GetRouteSpecHttpRouteRetryPolicyArrayInput `pulumi:"retryPolicies"`
	Timeouts      GetRouteSpecHttpRouteTimeoutArrayInput     `pulumi:"timeouts"`
}

func (GetRouteSpecHttpRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRoute)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteArgs) ToGetRouteSpecHttpRouteOutput() GetRouteSpecHttpRouteOutput {
	return i.ToGetRouteSpecHttpRouteOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteArgs) ToGetRouteSpecHttpRouteOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteOutput)
}

// GetRouteSpecHttpRouteArrayInput is an input type that accepts GetRouteSpecHttpRouteArray and GetRouteSpecHttpRouteArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteArrayInput` via:
//
//	GetRouteSpecHttpRouteArray{ GetRouteSpecHttpRouteArgs{...} }
type GetRouteSpecHttpRouteArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteArrayOutput() GetRouteSpecHttpRouteArrayOutput
	ToGetRouteSpecHttpRouteArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteArrayOutput
}

type GetRouteSpecHttpRouteArray []GetRouteSpecHttpRouteInput

func (GetRouteSpecHttpRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRoute)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteArray) ToGetRouteSpecHttpRouteArrayOutput() GetRouteSpecHttpRouteArrayOutput {
	return i.ToGetRouteSpecHttpRouteArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteArray) ToGetRouteSpecHttpRouteArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteArrayOutput)
}

type GetRouteSpecHttpRouteOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRoute)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteOutput) ToGetRouteSpecHttpRouteOutput() GetRouteSpecHttpRouteOutput {
	return o
}

func (o GetRouteSpecHttpRouteOutput) ToGetRouteSpecHttpRouteOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteOutput {
	return o
}

func (o GetRouteSpecHttpRouteOutput) Actions() GetRouteSpecHttpRouteActionArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRoute) []GetRouteSpecHttpRouteAction { return v.Actions }).(GetRouteSpecHttpRouteActionArrayOutput)
}

func (o GetRouteSpecHttpRouteOutput) Matches() GetRouteSpecHttpRouteMatchArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRoute) []GetRouteSpecHttpRouteMatch { return v.Matches }).(GetRouteSpecHttpRouteMatchArrayOutput)
}

func (o GetRouteSpecHttpRouteOutput) RetryPolicies() GetRouteSpecHttpRouteRetryPolicyArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRoute) []GetRouteSpecHttpRouteRetryPolicy { return v.RetryPolicies }).(GetRouteSpecHttpRouteRetryPolicyArrayOutput)
}

func (o GetRouteSpecHttpRouteOutput) Timeouts() GetRouteSpecHttpRouteTimeoutArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRoute) []GetRouteSpecHttpRouteTimeout { return v.Timeouts }).(GetRouteSpecHttpRouteTimeoutArrayOutput)
}

type GetRouteSpecHttpRouteArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRoute)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteArrayOutput) ToGetRouteSpecHttpRouteArrayOutput() GetRouteSpecHttpRouteArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteArrayOutput) ToGetRouteSpecHttpRouteArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRoute {
		return vs[0].([]GetRouteSpecHttpRoute)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteOutput)
}

type GetRouteSpecHttpRouteAction struct {
	WeightedTargets []GetRouteSpecHttpRouteActionWeightedTarget `pulumi:"weightedTargets"`
}

// GetRouteSpecHttpRouteActionInput is an input type that accepts GetRouteSpecHttpRouteActionArgs and GetRouteSpecHttpRouteActionOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteActionInput` via:
//
//	GetRouteSpecHttpRouteActionArgs{...}
type GetRouteSpecHttpRouteActionInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteActionOutput() GetRouteSpecHttpRouteActionOutput
	ToGetRouteSpecHttpRouteActionOutputWithContext(context.Context) GetRouteSpecHttpRouteActionOutput
}

type GetRouteSpecHttpRouteActionArgs struct {
	WeightedTargets GetRouteSpecHttpRouteActionWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (GetRouteSpecHttpRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteAction)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteActionArgs) ToGetRouteSpecHttpRouteActionOutput() GetRouteSpecHttpRouteActionOutput {
	return i.ToGetRouteSpecHttpRouteActionOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteActionArgs) ToGetRouteSpecHttpRouteActionOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteActionOutput)
}

// GetRouteSpecHttpRouteActionArrayInput is an input type that accepts GetRouteSpecHttpRouteActionArray and GetRouteSpecHttpRouteActionArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteActionArrayInput` via:
//
//	GetRouteSpecHttpRouteActionArray{ GetRouteSpecHttpRouteActionArgs{...} }
type GetRouteSpecHttpRouteActionArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteActionArrayOutput() GetRouteSpecHttpRouteActionArrayOutput
	ToGetRouteSpecHttpRouteActionArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteActionArrayOutput
}

type GetRouteSpecHttpRouteActionArray []GetRouteSpecHttpRouteActionInput

func (GetRouteSpecHttpRouteActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteAction)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteActionArray) ToGetRouteSpecHttpRouteActionArrayOutput() GetRouteSpecHttpRouteActionArrayOutput {
	return i.ToGetRouteSpecHttpRouteActionArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteActionArray) ToGetRouteSpecHttpRouteActionArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteActionArrayOutput)
}

type GetRouteSpecHttpRouteActionOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteAction)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteActionOutput) ToGetRouteSpecHttpRouteActionOutput() GetRouteSpecHttpRouteActionOutput {
	return o
}

func (o GetRouteSpecHttpRouteActionOutput) ToGetRouteSpecHttpRouteActionOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteActionOutput {
	return o
}

func (o GetRouteSpecHttpRouteActionOutput) WeightedTargets() GetRouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteAction) []GetRouteSpecHttpRouteActionWeightedTarget {
		return v.WeightedTargets
	}).(GetRouteSpecHttpRouteActionWeightedTargetArrayOutput)
}

type GetRouteSpecHttpRouteActionArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteAction)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteActionArrayOutput) ToGetRouteSpecHttpRouteActionArrayOutput() GetRouteSpecHttpRouteActionArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteActionArrayOutput) ToGetRouteSpecHttpRouteActionArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteActionArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteActionArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRouteAction {
		return vs[0].([]GetRouteSpecHttpRouteAction)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteActionOutput)
}

type GetRouteSpecHttpRouteActionWeightedTarget struct {
	Port        int    `pulumi:"port"`
	VirtualNode string `pulumi:"virtualNode"`
	Weight      int    `pulumi:"weight"`
}

// GetRouteSpecHttpRouteActionWeightedTargetInput is an input type that accepts GetRouteSpecHttpRouteActionWeightedTargetArgs and GetRouteSpecHttpRouteActionWeightedTargetOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteActionWeightedTargetInput` via:
//
//	GetRouteSpecHttpRouteActionWeightedTargetArgs{...}
type GetRouteSpecHttpRouteActionWeightedTargetInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteActionWeightedTargetOutput() GetRouteSpecHttpRouteActionWeightedTargetOutput
	ToGetRouteSpecHttpRouteActionWeightedTargetOutputWithContext(context.Context) GetRouteSpecHttpRouteActionWeightedTargetOutput
}

type GetRouteSpecHttpRouteActionWeightedTargetArgs struct {
	Port        pulumi.IntInput    `pulumi:"port"`
	VirtualNode pulumi.StringInput `pulumi:"virtualNode"`
	Weight      pulumi.IntInput    `pulumi:"weight"`
}

func (GetRouteSpecHttpRouteActionWeightedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteActionWeightedTarget)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteActionWeightedTargetArgs) ToGetRouteSpecHttpRouteActionWeightedTargetOutput() GetRouteSpecHttpRouteActionWeightedTargetOutput {
	return i.ToGetRouteSpecHttpRouteActionWeightedTargetOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteActionWeightedTargetArgs) ToGetRouteSpecHttpRouteActionWeightedTargetOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteActionWeightedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteActionWeightedTargetOutput)
}

// GetRouteSpecHttpRouteActionWeightedTargetArrayInput is an input type that accepts GetRouteSpecHttpRouteActionWeightedTargetArray and GetRouteSpecHttpRouteActionWeightedTargetArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteActionWeightedTargetArrayInput` via:
//
//	GetRouteSpecHttpRouteActionWeightedTargetArray{ GetRouteSpecHttpRouteActionWeightedTargetArgs{...} }
type GetRouteSpecHttpRouteActionWeightedTargetArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteActionWeightedTargetArrayOutput() GetRouteSpecHttpRouteActionWeightedTargetArrayOutput
	ToGetRouteSpecHttpRouteActionWeightedTargetArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteActionWeightedTargetArrayOutput
}

type GetRouteSpecHttpRouteActionWeightedTargetArray []GetRouteSpecHttpRouteActionWeightedTargetInput

func (GetRouteSpecHttpRouteActionWeightedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteActionWeightedTarget)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteActionWeightedTargetArray) ToGetRouteSpecHttpRouteActionWeightedTargetArrayOutput() GetRouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return i.ToGetRouteSpecHttpRouteActionWeightedTargetArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteActionWeightedTargetArray) ToGetRouteSpecHttpRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteActionWeightedTargetArrayOutput)
}

type GetRouteSpecHttpRouteActionWeightedTargetOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteActionWeightedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteActionWeightedTarget)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteActionWeightedTargetOutput) ToGetRouteSpecHttpRouteActionWeightedTargetOutput() GetRouteSpecHttpRouteActionWeightedTargetOutput {
	return o
}

func (o GetRouteSpecHttpRouteActionWeightedTargetOutput) ToGetRouteSpecHttpRouteActionWeightedTargetOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteActionWeightedTargetOutput {
	return o
}

func (o GetRouteSpecHttpRouteActionWeightedTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteActionWeightedTarget) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetRouteSpecHttpRouteActionWeightedTargetOutput) VirtualNode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteActionWeightedTarget) string { return v.VirtualNode }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttpRouteActionWeightedTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteActionWeightedTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type GetRouteSpecHttpRouteActionWeightedTargetArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteActionWeightedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteActionWeightedTarget)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteActionWeightedTargetArrayOutput) ToGetRouteSpecHttpRouteActionWeightedTargetArrayOutput() GetRouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteActionWeightedTargetArrayOutput) ToGetRouteSpecHttpRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteActionWeightedTargetArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteActionWeightedTargetArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteActionWeightedTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRouteActionWeightedTarget {
		return vs[0].([]GetRouteSpecHttpRouteActionWeightedTarget)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteActionWeightedTargetOutput)
}

type GetRouteSpecHttpRouteMatch struct {
	Headers         []GetRouteSpecHttpRouteMatchHeader         `pulumi:"headers"`
	Method          string                                     `pulumi:"method"`
	Paths           []GetRouteSpecHttpRouteMatchPath           `pulumi:"paths"`
	Port            int                                        `pulumi:"port"`
	Prefix          string                                     `pulumi:"prefix"`
	QueryParameters []GetRouteSpecHttpRouteMatchQueryParameter `pulumi:"queryParameters"`
	Scheme          string                                     `pulumi:"scheme"`
}

// GetRouteSpecHttpRouteMatchInput is an input type that accepts GetRouteSpecHttpRouteMatchArgs and GetRouteSpecHttpRouteMatchOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteMatchInput` via:
//
//	GetRouteSpecHttpRouteMatchArgs{...}
type GetRouteSpecHttpRouteMatchInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteMatchOutput() GetRouteSpecHttpRouteMatchOutput
	ToGetRouteSpecHttpRouteMatchOutputWithContext(context.Context) GetRouteSpecHttpRouteMatchOutput
}

type GetRouteSpecHttpRouteMatchArgs struct {
	Headers         GetRouteSpecHttpRouteMatchHeaderArrayInput         `pulumi:"headers"`
	Method          pulumi.StringInput                                 `pulumi:"method"`
	Paths           GetRouteSpecHttpRouteMatchPathArrayInput           `pulumi:"paths"`
	Port            pulumi.IntInput                                    `pulumi:"port"`
	Prefix          pulumi.StringInput                                 `pulumi:"prefix"`
	QueryParameters GetRouteSpecHttpRouteMatchQueryParameterArrayInput `pulumi:"queryParameters"`
	Scheme          pulumi.StringInput                                 `pulumi:"scheme"`
}

func (GetRouteSpecHttpRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteMatchArgs) ToGetRouteSpecHttpRouteMatchOutput() GetRouteSpecHttpRouteMatchOutput {
	return i.ToGetRouteSpecHttpRouteMatchOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteMatchArgs) ToGetRouteSpecHttpRouteMatchOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteMatchOutput)
}

// GetRouteSpecHttpRouteMatchArrayInput is an input type that accepts GetRouteSpecHttpRouteMatchArray and GetRouteSpecHttpRouteMatchArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteMatchArrayInput` via:
//
//	GetRouteSpecHttpRouteMatchArray{ GetRouteSpecHttpRouteMatchArgs{...} }
type GetRouteSpecHttpRouteMatchArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteMatchArrayOutput() GetRouteSpecHttpRouteMatchArrayOutput
	ToGetRouteSpecHttpRouteMatchArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteMatchArrayOutput
}

type GetRouteSpecHttpRouteMatchArray []GetRouteSpecHttpRouteMatchInput

func (GetRouteSpecHttpRouteMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteMatchArray) ToGetRouteSpecHttpRouteMatchArrayOutput() GetRouteSpecHttpRouteMatchArrayOutput {
	return i.ToGetRouteSpecHttpRouteMatchArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteMatchArray) ToGetRouteSpecHttpRouteMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteMatchArrayOutput)
}

type GetRouteSpecHttpRouteMatchOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteMatchOutput) ToGetRouteSpecHttpRouteMatchOutput() GetRouteSpecHttpRouteMatchOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchOutput) ToGetRouteSpecHttpRouteMatchOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchOutput) Headers() GetRouteSpecHttpRouteMatchHeaderArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatch) []GetRouteSpecHttpRouteMatchHeader { return v.Headers }).(GetRouteSpecHttpRouteMatchHeaderArrayOutput)
}

func (o GetRouteSpecHttpRouteMatchOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatch) string { return v.Method }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttpRouteMatchOutput) Paths() GetRouteSpecHttpRouteMatchPathArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatch) []GetRouteSpecHttpRouteMatchPath { return v.Paths }).(GetRouteSpecHttpRouteMatchPathArrayOutput)
}

func (o GetRouteSpecHttpRouteMatchOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatch) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetRouteSpecHttpRouteMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttpRouteMatchOutput) QueryParameters() GetRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatch) []GetRouteSpecHttpRouteMatchQueryParameter {
		return v.QueryParameters
	}).(GetRouteSpecHttpRouteMatchQueryParameterArrayOutput)
}

func (o GetRouteSpecHttpRouteMatchOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatch) string { return v.Scheme }).(pulumi.StringOutput)
}

type GetRouteSpecHttpRouteMatchArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteMatch)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteMatchArrayOutput) ToGetRouteSpecHttpRouteMatchArrayOutput() GetRouteSpecHttpRouteMatchArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchArrayOutput) ToGetRouteSpecHttpRouteMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRouteMatch {
		return vs[0].([]GetRouteSpecHttpRouteMatch)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteMatchOutput)
}

type GetRouteSpecHttpRouteMatchHeader struct {
	Invert  bool                                    `pulumi:"invert"`
	Matches []GetRouteSpecHttpRouteMatchHeaderMatch `pulumi:"matches"`
	// Name of the route.
	Name string `pulumi:"name"`
}

// GetRouteSpecHttpRouteMatchHeaderInput is an input type that accepts GetRouteSpecHttpRouteMatchHeaderArgs and GetRouteSpecHttpRouteMatchHeaderOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteMatchHeaderInput` via:
//
//	GetRouteSpecHttpRouteMatchHeaderArgs{...}
type GetRouteSpecHttpRouteMatchHeaderInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteMatchHeaderOutput() GetRouteSpecHttpRouteMatchHeaderOutput
	ToGetRouteSpecHttpRouteMatchHeaderOutputWithContext(context.Context) GetRouteSpecHttpRouteMatchHeaderOutput
}

type GetRouteSpecHttpRouteMatchHeaderArgs struct {
	Invert  pulumi.BoolInput                                `pulumi:"invert"`
	Matches GetRouteSpecHttpRouteMatchHeaderMatchArrayInput `pulumi:"matches"`
	// Name of the route.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouteSpecHttpRouteMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteMatchHeaderArgs) ToGetRouteSpecHttpRouteMatchHeaderOutput() GetRouteSpecHttpRouteMatchHeaderOutput {
	return i.ToGetRouteSpecHttpRouteMatchHeaderOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteMatchHeaderArgs) ToGetRouteSpecHttpRouteMatchHeaderOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteMatchHeaderOutput)
}

// GetRouteSpecHttpRouteMatchHeaderArrayInput is an input type that accepts GetRouteSpecHttpRouteMatchHeaderArray and GetRouteSpecHttpRouteMatchHeaderArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteMatchHeaderArrayInput` via:
//
//	GetRouteSpecHttpRouteMatchHeaderArray{ GetRouteSpecHttpRouteMatchHeaderArgs{...} }
type GetRouteSpecHttpRouteMatchHeaderArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteMatchHeaderArrayOutput() GetRouteSpecHttpRouteMatchHeaderArrayOutput
	ToGetRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteMatchHeaderArrayOutput
}

type GetRouteSpecHttpRouteMatchHeaderArray []GetRouteSpecHttpRouteMatchHeaderInput

func (GetRouteSpecHttpRouteMatchHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteMatchHeaderArray) ToGetRouteSpecHttpRouteMatchHeaderArrayOutput() GetRouteSpecHttpRouteMatchHeaderArrayOutput {
	return i.ToGetRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteMatchHeaderArray) ToGetRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteMatchHeaderArrayOutput)
}

type GetRouteSpecHttpRouteMatchHeaderOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteMatchHeaderOutput) ToGetRouteSpecHttpRouteMatchHeaderOutput() GetRouteSpecHttpRouteMatchHeaderOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchHeaderOutput) ToGetRouteSpecHttpRouteMatchHeaderOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchHeaderOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchHeaderOutput) Invert() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchHeader) bool { return v.Invert }).(pulumi.BoolOutput)
}

func (o GetRouteSpecHttpRouteMatchHeaderOutput) Matches() GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchHeader) []GetRouteSpecHttpRouteMatchHeaderMatch { return v.Matches }).(GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput)
}

// Name of the route.
func (o GetRouteSpecHttpRouteMatchHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchHeader) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouteSpecHttpRouteMatchHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteMatchHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteMatchHeader)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteMatchHeaderArrayOutput) ToGetRouteSpecHttpRouteMatchHeaderArrayOutput() GetRouteSpecHttpRouteMatchHeaderArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchHeaderArrayOutput) ToGetRouteSpecHttpRouteMatchHeaderArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchHeaderArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchHeaderArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteMatchHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRouteMatchHeader {
		return vs[0].([]GetRouteSpecHttpRouteMatchHeader)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteMatchHeaderOutput)
}

type GetRouteSpecHttpRouteMatchHeaderMatch struct {
	Exact  string                                       `pulumi:"exact"`
	Prefix string                                       `pulumi:"prefix"`
	Ranges []GetRouteSpecHttpRouteMatchHeaderMatchRange `pulumi:"ranges"`
	Regex  string                                       `pulumi:"regex"`
	Suffix string                                       `pulumi:"suffix"`
}

// GetRouteSpecHttpRouteMatchHeaderMatchInput is an input type that accepts GetRouteSpecHttpRouteMatchHeaderMatchArgs and GetRouteSpecHttpRouteMatchHeaderMatchOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteMatchHeaderMatchInput` via:
//
//	GetRouteSpecHttpRouteMatchHeaderMatchArgs{...}
type GetRouteSpecHttpRouteMatchHeaderMatchInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteMatchHeaderMatchOutput() GetRouteSpecHttpRouteMatchHeaderMatchOutput
	ToGetRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(context.Context) GetRouteSpecHttpRouteMatchHeaderMatchOutput
}

type GetRouteSpecHttpRouteMatchHeaderMatchArgs struct {
	Exact  pulumi.StringInput                                   `pulumi:"exact"`
	Prefix pulumi.StringInput                                   `pulumi:"prefix"`
	Ranges GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayInput `pulumi:"ranges"`
	Regex  pulumi.StringInput                                   `pulumi:"regex"`
	Suffix pulumi.StringInput                                   `pulumi:"suffix"`
}

func (GetRouteSpecHttpRouteMatchHeaderMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteMatchHeaderMatchArgs) ToGetRouteSpecHttpRouteMatchHeaderMatchOutput() GetRouteSpecHttpRouteMatchHeaderMatchOutput {
	return i.ToGetRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteMatchHeaderMatchArgs) ToGetRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchHeaderMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteMatchHeaderMatchOutput)
}

// GetRouteSpecHttpRouteMatchHeaderMatchArrayInput is an input type that accepts GetRouteSpecHttpRouteMatchHeaderMatchArray and GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteMatchHeaderMatchArrayInput` via:
//
//	GetRouteSpecHttpRouteMatchHeaderMatchArray{ GetRouteSpecHttpRouteMatchHeaderMatchArgs{...} }
type GetRouteSpecHttpRouteMatchHeaderMatchArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteMatchHeaderMatchArrayOutput() GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput
	ToGetRouteSpecHttpRouteMatchHeaderMatchArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput
}

type GetRouteSpecHttpRouteMatchHeaderMatchArray []GetRouteSpecHttpRouteMatchHeaderMatchInput

func (GetRouteSpecHttpRouteMatchHeaderMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteMatchHeaderMatchArray) ToGetRouteSpecHttpRouteMatchHeaderMatchArrayOutput() GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput {
	return i.ToGetRouteSpecHttpRouteMatchHeaderMatchArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteMatchHeaderMatchArray) ToGetRouteSpecHttpRouteMatchHeaderMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput)
}

type GetRouteSpecHttpRouteMatchHeaderMatchOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteMatchHeaderMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchOutput) ToGetRouteSpecHttpRouteMatchHeaderMatchOutput() GetRouteSpecHttpRouteMatchHeaderMatchOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchOutput) ToGetRouteSpecHttpRouteMatchHeaderMatchOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchHeaderMatchOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchHeaderMatch) string { return v.Exact }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchHeaderMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchOutput) Ranges() GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchHeaderMatch) []GetRouteSpecHttpRouteMatchHeaderMatchRange {
		return v.Ranges
	}).(GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput)
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchHeaderMatch) string { return v.Regex }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchOutput) Suffix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchHeaderMatch) string { return v.Suffix }).(pulumi.StringOutput)
}

type GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteMatchHeaderMatch)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput) ToGetRouteSpecHttpRouteMatchHeaderMatchArrayOutput() GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput) ToGetRouteSpecHttpRouteMatchHeaderMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteMatchHeaderMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRouteMatchHeaderMatch {
		return vs[0].([]GetRouteSpecHttpRouteMatchHeaderMatch)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteMatchHeaderMatchOutput)
}

type GetRouteSpecHttpRouteMatchHeaderMatchRange struct {
	End   int `pulumi:"end"`
	Start int `pulumi:"start"`
}

// GetRouteSpecHttpRouteMatchHeaderMatchRangeInput is an input type that accepts GetRouteSpecHttpRouteMatchHeaderMatchRangeArgs and GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteMatchHeaderMatchRangeInput` via:
//
//	GetRouteSpecHttpRouteMatchHeaderMatchRangeArgs{...}
type GetRouteSpecHttpRouteMatchHeaderMatchRangeInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteMatchHeaderMatchRangeOutput() GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput
	ToGetRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(context.Context) GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput
}

type GetRouteSpecHttpRouteMatchHeaderMatchRangeArgs struct {
	End   pulumi.IntInput `pulumi:"end"`
	Start pulumi.IntInput `pulumi:"start"`
}

func (GetRouteSpecHttpRouteMatchHeaderMatchRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToGetRouteSpecHttpRouteMatchHeaderMatchRangeOutput() GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return i.ToGetRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteMatchHeaderMatchRangeArgs) ToGetRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput)
}

// GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayInput is an input type that accepts GetRouteSpecHttpRouteMatchHeaderMatchRangeArray and GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayInput` via:
//
//	GetRouteSpecHttpRouteMatchHeaderMatchRangeArray{ GetRouteSpecHttpRouteMatchHeaderMatchRangeArgs{...} }
type GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput() GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput
	ToGetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput
}

type GetRouteSpecHttpRouteMatchHeaderMatchRangeArray []GetRouteSpecHttpRouteMatchHeaderMatchRangeInput

func (GetRouteSpecHttpRouteMatchHeaderMatchRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteMatchHeaderMatchRangeArray) ToGetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput() GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput {
	return i.ToGetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteMatchHeaderMatchRangeArray) ToGetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput)
}

type GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToGetRouteSpecHttpRouteMatchHeaderMatchRangeOutput() GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput) ToGetRouteSpecHttpRouteMatchHeaderMatchRangeOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchHeaderMatchRange) int { return v.End }).(pulumi.IntOutput)
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchHeaderMatchRange) int { return v.Start }).(pulumi.IntOutput)
}

type GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteMatchHeaderMatchRange)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput) ToGetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput() GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput) ToGetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRouteMatchHeaderMatchRange {
		return vs[0].([]GetRouteSpecHttpRouteMatchHeaderMatchRange)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput)
}

type GetRouteSpecHttpRouteMatchPath struct {
	Exact string `pulumi:"exact"`
	Regex string `pulumi:"regex"`
}

// GetRouteSpecHttpRouteMatchPathInput is an input type that accepts GetRouteSpecHttpRouteMatchPathArgs and GetRouteSpecHttpRouteMatchPathOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteMatchPathInput` via:
//
//	GetRouteSpecHttpRouteMatchPathArgs{...}
type GetRouteSpecHttpRouteMatchPathInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteMatchPathOutput() GetRouteSpecHttpRouteMatchPathOutput
	ToGetRouteSpecHttpRouteMatchPathOutputWithContext(context.Context) GetRouteSpecHttpRouteMatchPathOutput
}

type GetRouteSpecHttpRouteMatchPathArgs struct {
	Exact pulumi.StringInput `pulumi:"exact"`
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (GetRouteSpecHttpRouteMatchPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteMatchPathArgs) ToGetRouteSpecHttpRouteMatchPathOutput() GetRouteSpecHttpRouteMatchPathOutput {
	return i.ToGetRouteSpecHttpRouteMatchPathOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteMatchPathArgs) ToGetRouteSpecHttpRouteMatchPathOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteMatchPathOutput)
}

// GetRouteSpecHttpRouteMatchPathArrayInput is an input type that accepts GetRouteSpecHttpRouteMatchPathArray and GetRouteSpecHttpRouteMatchPathArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteMatchPathArrayInput` via:
//
//	GetRouteSpecHttpRouteMatchPathArray{ GetRouteSpecHttpRouteMatchPathArgs{...} }
type GetRouteSpecHttpRouteMatchPathArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteMatchPathArrayOutput() GetRouteSpecHttpRouteMatchPathArrayOutput
	ToGetRouteSpecHttpRouteMatchPathArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteMatchPathArrayOutput
}

type GetRouteSpecHttpRouteMatchPathArray []GetRouteSpecHttpRouteMatchPathInput

func (GetRouteSpecHttpRouteMatchPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteMatchPathArray) ToGetRouteSpecHttpRouteMatchPathArrayOutput() GetRouteSpecHttpRouteMatchPathArrayOutput {
	return i.ToGetRouteSpecHttpRouteMatchPathArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteMatchPathArray) ToGetRouteSpecHttpRouteMatchPathArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteMatchPathArrayOutput)
}

type GetRouteSpecHttpRouteMatchPathOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteMatchPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteMatchPathOutput) ToGetRouteSpecHttpRouteMatchPathOutput() GetRouteSpecHttpRouteMatchPathOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchPathOutput) ToGetRouteSpecHttpRouteMatchPathOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchPathOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchPathOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchPath) string { return v.Exact }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttpRouteMatchPathOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchPath) string { return v.Regex }).(pulumi.StringOutput)
}

type GetRouteSpecHttpRouteMatchPathArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteMatchPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteMatchPath)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteMatchPathArrayOutput) ToGetRouteSpecHttpRouteMatchPathArrayOutput() GetRouteSpecHttpRouteMatchPathArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchPathArrayOutput) ToGetRouteSpecHttpRouteMatchPathArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchPathArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchPathArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteMatchPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRouteMatchPath {
		return vs[0].([]GetRouteSpecHttpRouteMatchPath)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteMatchPathOutput)
}

type GetRouteSpecHttpRouteMatchQueryParameter struct {
	Matches []GetRouteSpecHttpRouteMatchQueryParameterMatch `pulumi:"matches"`
	// Name of the route.
	Name string `pulumi:"name"`
}

// GetRouteSpecHttpRouteMatchQueryParameterInput is an input type that accepts GetRouteSpecHttpRouteMatchQueryParameterArgs and GetRouteSpecHttpRouteMatchQueryParameterOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteMatchQueryParameterInput` via:
//
//	GetRouteSpecHttpRouteMatchQueryParameterArgs{...}
type GetRouteSpecHttpRouteMatchQueryParameterInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteMatchQueryParameterOutput() GetRouteSpecHttpRouteMatchQueryParameterOutput
	ToGetRouteSpecHttpRouteMatchQueryParameterOutputWithContext(context.Context) GetRouteSpecHttpRouteMatchQueryParameterOutput
}

type GetRouteSpecHttpRouteMatchQueryParameterArgs struct {
	Matches GetRouteSpecHttpRouteMatchQueryParameterMatchArrayInput `pulumi:"matches"`
	// Name of the route.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRouteSpecHttpRouteMatchQueryParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteMatchQueryParameterArgs) ToGetRouteSpecHttpRouteMatchQueryParameterOutput() GetRouteSpecHttpRouteMatchQueryParameterOutput {
	return i.ToGetRouteSpecHttpRouteMatchQueryParameterOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteMatchQueryParameterArgs) ToGetRouteSpecHttpRouteMatchQueryParameterOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchQueryParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteMatchQueryParameterOutput)
}

// GetRouteSpecHttpRouteMatchQueryParameterArrayInput is an input type that accepts GetRouteSpecHttpRouteMatchQueryParameterArray and GetRouteSpecHttpRouteMatchQueryParameterArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteMatchQueryParameterArrayInput` via:
//
//	GetRouteSpecHttpRouteMatchQueryParameterArray{ GetRouteSpecHttpRouteMatchQueryParameterArgs{...} }
type GetRouteSpecHttpRouteMatchQueryParameterArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteMatchQueryParameterArrayOutput() GetRouteSpecHttpRouteMatchQueryParameterArrayOutput
	ToGetRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteMatchQueryParameterArrayOutput
}

type GetRouteSpecHttpRouteMatchQueryParameterArray []GetRouteSpecHttpRouteMatchQueryParameterInput

func (GetRouteSpecHttpRouteMatchQueryParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteMatchQueryParameterArray) ToGetRouteSpecHttpRouteMatchQueryParameterArrayOutput() GetRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return i.ToGetRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteMatchQueryParameterArray) ToGetRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteMatchQueryParameterArrayOutput)
}

type GetRouteSpecHttpRouteMatchQueryParameterOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteMatchQueryParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteMatchQueryParameterOutput) ToGetRouteSpecHttpRouteMatchQueryParameterOutput() GetRouteSpecHttpRouteMatchQueryParameterOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchQueryParameterOutput) ToGetRouteSpecHttpRouteMatchQueryParameterOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchQueryParameterOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchQueryParameterOutput) Matches() GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchQueryParameter) []GetRouteSpecHttpRouteMatchQueryParameterMatch {
		return v.Matches
	}).(GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput)
}

// Name of the route.
func (o GetRouteSpecHttpRouteMatchQueryParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchQueryParameter) string { return v.Name }).(pulumi.StringOutput)
}

type GetRouteSpecHttpRouteMatchQueryParameterArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteMatchQueryParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteMatchQueryParameter)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteMatchQueryParameterArrayOutput) ToGetRouteSpecHttpRouteMatchQueryParameterArrayOutput() GetRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchQueryParameterArrayOutput) ToGetRouteSpecHttpRouteMatchQueryParameterArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchQueryParameterArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchQueryParameterArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteMatchQueryParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRouteMatchQueryParameter {
		return vs[0].([]GetRouteSpecHttpRouteMatchQueryParameter)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteMatchQueryParameterOutput)
}

type GetRouteSpecHttpRouteMatchQueryParameterMatch struct {
	Exact string `pulumi:"exact"`
}

// GetRouteSpecHttpRouteMatchQueryParameterMatchInput is an input type that accepts GetRouteSpecHttpRouteMatchQueryParameterMatchArgs and GetRouteSpecHttpRouteMatchQueryParameterMatchOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteMatchQueryParameterMatchInput` via:
//
//	GetRouteSpecHttpRouteMatchQueryParameterMatchArgs{...}
type GetRouteSpecHttpRouteMatchQueryParameterMatchInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteMatchQueryParameterMatchOutput() GetRouteSpecHttpRouteMatchQueryParameterMatchOutput
	ToGetRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(context.Context) GetRouteSpecHttpRouteMatchQueryParameterMatchOutput
}

type GetRouteSpecHttpRouteMatchQueryParameterMatchArgs struct {
	Exact pulumi.StringInput `pulumi:"exact"`
}

func (GetRouteSpecHttpRouteMatchQueryParameterMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteMatchQueryParameterMatchArgs) ToGetRouteSpecHttpRouteMatchQueryParameterMatchOutput() GetRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return i.ToGetRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteMatchQueryParameterMatchArgs) ToGetRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteMatchQueryParameterMatchOutput)
}

// GetRouteSpecHttpRouteMatchQueryParameterMatchArrayInput is an input type that accepts GetRouteSpecHttpRouteMatchQueryParameterMatchArray and GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteMatchQueryParameterMatchArrayInput` via:
//
//	GetRouteSpecHttpRouteMatchQueryParameterMatchArray{ GetRouteSpecHttpRouteMatchQueryParameterMatchArgs{...} }
type GetRouteSpecHttpRouteMatchQueryParameterMatchArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput() GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput
	ToGetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput
}

type GetRouteSpecHttpRouteMatchQueryParameterMatchArray []GetRouteSpecHttpRouteMatchQueryParameterMatchInput

func (GetRouteSpecHttpRouteMatchQueryParameterMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteMatchQueryParameterMatchArray) ToGetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput() GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput {
	return i.ToGetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteMatchQueryParameterMatchArray) ToGetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput)
}

type GetRouteSpecHttpRouteMatchQueryParameterMatchOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteMatchQueryParameterMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteMatchQueryParameterMatchOutput) ToGetRouteSpecHttpRouteMatchQueryParameterMatchOutput() GetRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchQueryParameterMatchOutput) ToGetRouteSpecHttpRouteMatchQueryParameterMatchOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchQueryParameterMatchOutput) Exact() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteMatchQueryParameterMatch) string { return v.Exact }).(pulumi.StringOutput)
}

type GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteMatchQueryParameterMatch)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput) ToGetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput() GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput) ToGetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteMatchQueryParameterMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRouteMatchQueryParameterMatch {
		return vs[0].([]GetRouteSpecHttpRouteMatchQueryParameterMatch)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteMatchQueryParameterMatchOutput)
}

type GetRouteSpecHttpRouteRetryPolicy struct {
	HttpRetryEvents  []string                                          `pulumi:"httpRetryEvents"`
	MaxRetries       int                                               `pulumi:"maxRetries"`
	PerRetryTimeouts []GetRouteSpecHttpRouteRetryPolicyPerRetryTimeout `pulumi:"perRetryTimeouts"`
	TcpRetryEvents   []string                                          `pulumi:"tcpRetryEvents"`
}

// GetRouteSpecHttpRouteRetryPolicyInput is an input type that accepts GetRouteSpecHttpRouteRetryPolicyArgs and GetRouteSpecHttpRouteRetryPolicyOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteRetryPolicyInput` via:
//
//	GetRouteSpecHttpRouteRetryPolicyArgs{...}
type GetRouteSpecHttpRouteRetryPolicyInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteRetryPolicyOutput() GetRouteSpecHttpRouteRetryPolicyOutput
	ToGetRouteSpecHttpRouteRetryPolicyOutputWithContext(context.Context) GetRouteSpecHttpRouteRetryPolicyOutput
}

type GetRouteSpecHttpRouteRetryPolicyArgs struct {
	HttpRetryEvents  pulumi.StringArrayInput                                   `pulumi:"httpRetryEvents"`
	MaxRetries       pulumi.IntInput                                           `pulumi:"maxRetries"`
	PerRetryTimeouts GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayInput `pulumi:"perRetryTimeouts"`
	TcpRetryEvents   pulumi.StringArrayInput                                   `pulumi:"tcpRetryEvents"`
}

func (GetRouteSpecHttpRouteRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteRetryPolicy)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteRetryPolicyArgs) ToGetRouteSpecHttpRouteRetryPolicyOutput() GetRouteSpecHttpRouteRetryPolicyOutput {
	return i.ToGetRouteSpecHttpRouteRetryPolicyOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteRetryPolicyArgs) ToGetRouteSpecHttpRouteRetryPolicyOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteRetryPolicyOutput)
}

// GetRouteSpecHttpRouteRetryPolicyArrayInput is an input type that accepts GetRouteSpecHttpRouteRetryPolicyArray and GetRouteSpecHttpRouteRetryPolicyArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteRetryPolicyArrayInput` via:
//
//	GetRouteSpecHttpRouteRetryPolicyArray{ GetRouteSpecHttpRouteRetryPolicyArgs{...} }
type GetRouteSpecHttpRouteRetryPolicyArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteRetryPolicyArrayOutput() GetRouteSpecHttpRouteRetryPolicyArrayOutput
	ToGetRouteSpecHttpRouteRetryPolicyArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteRetryPolicyArrayOutput
}

type GetRouteSpecHttpRouteRetryPolicyArray []GetRouteSpecHttpRouteRetryPolicyInput

func (GetRouteSpecHttpRouteRetryPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteRetryPolicy)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteRetryPolicyArray) ToGetRouteSpecHttpRouteRetryPolicyArrayOutput() GetRouteSpecHttpRouteRetryPolicyArrayOutput {
	return i.ToGetRouteSpecHttpRouteRetryPolicyArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteRetryPolicyArray) ToGetRouteSpecHttpRouteRetryPolicyArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteRetryPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteRetryPolicyArrayOutput)
}

type GetRouteSpecHttpRouteRetryPolicyOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteRetryPolicy)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteRetryPolicyOutput) ToGetRouteSpecHttpRouteRetryPolicyOutput() GetRouteSpecHttpRouteRetryPolicyOutput {
	return o
}

func (o GetRouteSpecHttpRouteRetryPolicyOutput) ToGetRouteSpecHttpRouteRetryPolicyOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteRetryPolicyOutput {
	return o
}

func (o GetRouteSpecHttpRouteRetryPolicyOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteRetryPolicy) []string { return v.HttpRetryEvents }).(pulumi.StringArrayOutput)
}

func (o GetRouteSpecHttpRouteRetryPolicyOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteRetryPolicy) int { return v.MaxRetries }).(pulumi.IntOutput)
}

func (o GetRouteSpecHttpRouteRetryPolicyOutput) PerRetryTimeouts() GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteRetryPolicy) []GetRouteSpecHttpRouteRetryPolicyPerRetryTimeout {
		return v.PerRetryTimeouts
	}).(GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput)
}

func (o GetRouteSpecHttpRouteRetryPolicyOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteRetryPolicy) []string { return v.TcpRetryEvents }).(pulumi.StringArrayOutput)
}

type GetRouteSpecHttpRouteRetryPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteRetryPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteRetryPolicy)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteRetryPolicyArrayOutput) ToGetRouteSpecHttpRouteRetryPolicyArrayOutput() GetRouteSpecHttpRouteRetryPolicyArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteRetryPolicyArrayOutput) ToGetRouteSpecHttpRouteRetryPolicyArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteRetryPolicyArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteRetryPolicyArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteRetryPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRouteRetryPolicy {
		return vs[0].([]GetRouteSpecHttpRouteRetryPolicy)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteRetryPolicyOutput)
}

type GetRouteSpecHttpRouteRetryPolicyPerRetryTimeout struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput is an input type that accepts GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs and GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput` via:
//
//	GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs{...}
type GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput() GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput
	ToGetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Context) GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput
}

type GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) ToGetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput() GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return i.ToGetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs) ToGetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput)
}

// GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayInput is an input type that accepts GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArray and GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayInput` via:
//
//	GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArray{ GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs{...} }
type GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput() GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput
	ToGetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput
}

type GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArray []GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput

func (GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArray) ToGetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput() GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput {
	return i.ToGetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArray) ToGetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput)
}

type GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) ToGetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput() GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) ToGetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return o
}

func (o GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteRetryPolicyPerRetryTimeout) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteRetryPolicyPerRetryTimeout) int { return v.Value }).(pulumi.IntOutput)
}

type GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteRetryPolicyPerRetryTimeout)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput) ToGetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput() GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput) ToGetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRouteRetryPolicyPerRetryTimeout {
		return vs[0].([]GetRouteSpecHttpRouteRetryPolicyPerRetryTimeout)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput)
}

type GetRouteSpecHttpRouteTimeout struct {
	Idles       []GetRouteSpecHttpRouteTimeoutIdle       `pulumi:"idles"`
	PerRequests []GetRouteSpecHttpRouteTimeoutPerRequest `pulumi:"perRequests"`
}

// GetRouteSpecHttpRouteTimeoutInput is an input type that accepts GetRouteSpecHttpRouteTimeoutArgs and GetRouteSpecHttpRouteTimeoutOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteTimeoutInput` via:
//
//	GetRouteSpecHttpRouteTimeoutArgs{...}
type GetRouteSpecHttpRouteTimeoutInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteTimeoutOutput() GetRouteSpecHttpRouteTimeoutOutput
	ToGetRouteSpecHttpRouteTimeoutOutputWithContext(context.Context) GetRouteSpecHttpRouteTimeoutOutput
}

type GetRouteSpecHttpRouteTimeoutArgs struct {
	Idles       GetRouteSpecHttpRouteTimeoutIdleArrayInput       `pulumi:"idles"`
	PerRequests GetRouteSpecHttpRouteTimeoutPerRequestArrayInput `pulumi:"perRequests"`
}

func (GetRouteSpecHttpRouteTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteTimeout)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteTimeoutArgs) ToGetRouteSpecHttpRouteTimeoutOutput() GetRouteSpecHttpRouteTimeoutOutput {
	return i.ToGetRouteSpecHttpRouteTimeoutOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteTimeoutArgs) ToGetRouteSpecHttpRouteTimeoutOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteTimeoutOutput)
}

// GetRouteSpecHttpRouteTimeoutArrayInput is an input type that accepts GetRouteSpecHttpRouteTimeoutArray and GetRouteSpecHttpRouteTimeoutArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteTimeoutArrayInput` via:
//
//	GetRouteSpecHttpRouteTimeoutArray{ GetRouteSpecHttpRouteTimeoutArgs{...} }
type GetRouteSpecHttpRouteTimeoutArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteTimeoutArrayOutput() GetRouteSpecHttpRouteTimeoutArrayOutput
	ToGetRouteSpecHttpRouteTimeoutArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteTimeoutArrayOutput
}

type GetRouteSpecHttpRouteTimeoutArray []GetRouteSpecHttpRouteTimeoutInput

func (GetRouteSpecHttpRouteTimeoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteTimeout)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteTimeoutArray) ToGetRouteSpecHttpRouteTimeoutArrayOutput() GetRouteSpecHttpRouteTimeoutArrayOutput {
	return i.ToGetRouteSpecHttpRouteTimeoutArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteTimeoutArray) ToGetRouteSpecHttpRouteTimeoutArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteTimeoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteTimeoutArrayOutput)
}

type GetRouteSpecHttpRouteTimeoutOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteTimeout)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteTimeoutOutput) ToGetRouteSpecHttpRouteTimeoutOutput() GetRouteSpecHttpRouteTimeoutOutput {
	return o
}

func (o GetRouteSpecHttpRouteTimeoutOutput) ToGetRouteSpecHttpRouteTimeoutOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteTimeoutOutput {
	return o
}

func (o GetRouteSpecHttpRouteTimeoutOutput) Idles() GetRouteSpecHttpRouteTimeoutIdleArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteTimeout) []GetRouteSpecHttpRouteTimeoutIdle { return v.Idles }).(GetRouteSpecHttpRouteTimeoutIdleArrayOutput)
}

func (o GetRouteSpecHttpRouteTimeoutOutput) PerRequests() GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteTimeout) []GetRouteSpecHttpRouteTimeoutPerRequest { return v.PerRequests }).(GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput)
}

type GetRouteSpecHttpRouteTimeoutArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteTimeoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteTimeout)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteTimeoutArrayOutput) ToGetRouteSpecHttpRouteTimeoutArrayOutput() GetRouteSpecHttpRouteTimeoutArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteTimeoutArrayOutput) ToGetRouteSpecHttpRouteTimeoutArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteTimeoutArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteTimeoutArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteTimeoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRouteTimeout {
		return vs[0].([]GetRouteSpecHttpRouteTimeout)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteTimeoutOutput)
}

type GetRouteSpecHttpRouteTimeoutIdle struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetRouteSpecHttpRouteTimeoutIdleInput is an input type that accepts GetRouteSpecHttpRouteTimeoutIdleArgs and GetRouteSpecHttpRouteTimeoutIdleOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteTimeoutIdleInput` via:
//
//	GetRouteSpecHttpRouteTimeoutIdleArgs{...}
type GetRouteSpecHttpRouteTimeoutIdleInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteTimeoutIdleOutput() GetRouteSpecHttpRouteTimeoutIdleOutput
	ToGetRouteSpecHttpRouteTimeoutIdleOutputWithContext(context.Context) GetRouteSpecHttpRouteTimeoutIdleOutput
}

type GetRouteSpecHttpRouteTimeoutIdleArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetRouteSpecHttpRouteTimeoutIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteTimeoutIdle)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteTimeoutIdleArgs) ToGetRouteSpecHttpRouteTimeoutIdleOutput() GetRouteSpecHttpRouteTimeoutIdleOutput {
	return i.ToGetRouteSpecHttpRouteTimeoutIdleOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteTimeoutIdleArgs) ToGetRouteSpecHttpRouteTimeoutIdleOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteTimeoutIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteTimeoutIdleOutput)
}

// GetRouteSpecHttpRouteTimeoutIdleArrayInput is an input type that accepts GetRouteSpecHttpRouteTimeoutIdleArray and GetRouteSpecHttpRouteTimeoutIdleArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteTimeoutIdleArrayInput` via:
//
//	GetRouteSpecHttpRouteTimeoutIdleArray{ GetRouteSpecHttpRouteTimeoutIdleArgs{...} }
type GetRouteSpecHttpRouteTimeoutIdleArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteTimeoutIdleArrayOutput() GetRouteSpecHttpRouteTimeoutIdleArrayOutput
	ToGetRouteSpecHttpRouteTimeoutIdleArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteTimeoutIdleArrayOutput
}

type GetRouteSpecHttpRouteTimeoutIdleArray []GetRouteSpecHttpRouteTimeoutIdleInput

func (GetRouteSpecHttpRouteTimeoutIdleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteTimeoutIdle)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteTimeoutIdleArray) ToGetRouteSpecHttpRouteTimeoutIdleArrayOutput() GetRouteSpecHttpRouteTimeoutIdleArrayOutput {
	return i.ToGetRouteSpecHttpRouteTimeoutIdleArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteTimeoutIdleArray) ToGetRouteSpecHttpRouteTimeoutIdleArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteTimeoutIdleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteTimeoutIdleArrayOutput)
}

type GetRouteSpecHttpRouteTimeoutIdleOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteTimeoutIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteTimeoutIdle)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteTimeoutIdleOutput) ToGetRouteSpecHttpRouteTimeoutIdleOutput() GetRouteSpecHttpRouteTimeoutIdleOutput {
	return o
}

func (o GetRouteSpecHttpRouteTimeoutIdleOutput) ToGetRouteSpecHttpRouteTimeoutIdleOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteTimeoutIdleOutput {
	return o
}

func (o GetRouteSpecHttpRouteTimeoutIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteTimeoutIdle) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttpRouteTimeoutIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteTimeoutIdle) int { return v.Value }).(pulumi.IntOutput)
}

type GetRouteSpecHttpRouteTimeoutIdleArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteTimeoutIdleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteTimeoutIdle)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteTimeoutIdleArrayOutput) ToGetRouteSpecHttpRouteTimeoutIdleArrayOutput() GetRouteSpecHttpRouteTimeoutIdleArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteTimeoutIdleArrayOutput) ToGetRouteSpecHttpRouteTimeoutIdleArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteTimeoutIdleArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteTimeoutIdleArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteTimeoutIdleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRouteTimeoutIdle {
		return vs[0].([]GetRouteSpecHttpRouteTimeoutIdle)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteTimeoutIdleOutput)
}

type GetRouteSpecHttpRouteTimeoutPerRequest struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetRouteSpecHttpRouteTimeoutPerRequestInput is an input type that accepts GetRouteSpecHttpRouteTimeoutPerRequestArgs and GetRouteSpecHttpRouteTimeoutPerRequestOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteTimeoutPerRequestInput` via:
//
//	GetRouteSpecHttpRouteTimeoutPerRequestArgs{...}
type GetRouteSpecHttpRouteTimeoutPerRequestInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteTimeoutPerRequestOutput() GetRouteSpecHttpRouteTimeoutPerRequestOutput
	ToGetRouteSpecHttpRouteTimeoutPerRequestOutputWithContext(context.Context) GetRouteSpecHttpRouteTimeoutPerRequestOutput
}

type GetRouteSpecHttpRouteTimeoutPerRequestArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetRouteSpecHttpRouteTimeoutPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteTimeoutPerRequest)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteTimeoutPerRequestArgs) ToGetRouteSpecHttpRouteTimeoutPerRequestOutput() GetRouteSpecHttpRouteTimeoutPerRequestOutput {
	return i.ToGetRouteSpecHttpRouteTimeoutPerRequestOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteTimeoutPerRequestArgs) ToGetRouteSpecHttpRouteTimeoutPerRequestOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteTimeoutPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteTimeoutPerRequestOutput)
}

// GetRouteSpecHttpRouteTimeoutPerRequestArrayInput is an input type that accepts GetRouteSpecHttpRouteTimeoutPerRequestArray and GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecHttpRouteTimeoutPerRequestArrayInput` via:
//
//	GetRouteSpecHttpRouteTimeoutPerRequestArray{ GetRouteSpecHttpRouteTimeoutPerRequestArgs{...} }
type GetRouteSpecHttpRouteTimeoutPerRequestArrayInput interface {
	pulumi.Input

	ToGetRouteSpecHttpRouteTimeoutPerRequestArrayOutput() GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput
	ToGetRouteSpecHttpRouteTimeoutPerRequestArrayOutputWithContext(context.Context) GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput
}

type GetRouteSpecHttpRouteTimeoutPerRequestArray []GetRouteSpecHttpRouteTimeoutPerRequestInput

func (GetRouteSpecHttpRouteTimeoutPerRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteTimeoutPerRequest)(nil)).Elem()
}

func (i GetRouteSpecHttpRouteTimeoutPerRequestArray) ToGetRouteSpecHttpRouteTimeoutPerRequestArrayOutput() GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput {
	return i.ToGetRouteSpecHttpRouteTimeoutPerRequestArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecHttpRouteTimeoutPerRequestArray) ToGetRouteSpecHttpRouteTimeoutPerRequestArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput)
}

type GetRouteSpecHttpRouteTimeoutPerRequestOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteTimeoutPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecHttpRouteTimeoutPerRequest)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteTimeoutPerRequestOutput) ToGetRouteSpecHttpRouteTimeoutPerRequestOutput() GetRouteSpecHttpRouteTimeoutPerRequestOutput {
	return o
}

func (o GetRouteSpecHttpRouteTimeoutPerRequestOutput) ToGetRouteSpecHttpRouteTimeoutPerRequestOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteTimeoutPerRequestOutput {
	return o
}

func (o GetRouteSpecHttpRouteTimeoutPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteTimeoutPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetRouteSpecHttpRouteTimeoutPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecHttpRouteTimeoutPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecHttpRouteTimeoutPerRequest)(nil)).Elem()
}

func (o GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput) ToGetRouteSpecHttpRouteTimeoutPerRequestArrayOutput() GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput) ToGetRouteSpecHttpRouteTimeoutPerRequestArrayOutputWithContext(ctx context.Context) GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput {
	return o
}

func (o GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput) Index(i pulumi.IntInput) GetRouteSpecHttpRouteTimeoutPerRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecHttpRouteTimeoutPerRequest {
		return vs[0].([]GetRouteSpecHttpRouteTimeoutPerRequest)[vs[1].(int)]
	}).(GetRouteSpecHttpRouteTimeoutPerRequestOutput)
}

type GetRouteSpecTcpRoute struct {
	Actions  []GetRouteSpecTcpRouteAction  `pulumi:"actions"`
	Matches  []GetRouteSpecTcpRouteMatch   `pulumi:"matches"`
	Timeouts []GetRouteSpecTcpRouteTimeout `pulumi:"timeouts"`
}

// GetRouteSpecTcpRouteInput is an input type that accepts GetRouteSpecTcpRouteArgs and GetRouteSpecTcpRouteOutput values.
// You can construct a concrete instance of `GetRouteSpecTcpRouteInput` via:
//
//	GetRouteSpecTcpRouteArgs{...}
type GetRouteSpecTcpRouteInput interface {
	pulumi.Input

	ToGetRouteSpecTcpRouteOutput() GetRouteSpecTcpRouteOutput
	ToGetRouteSpecTcpRouteOutputWithContext(context.Context) GetRouteSpecTcpRouteOutput
}

type GetRouteSpecTcpRouteArgs struct {
	Actions  GetRouteSpecTcpRouteActionArrayInput  `pulumi:"actions"`
	Matches  GetRouteSpecTcpRouteMatchArrayInput   `pulumi:"matches"`
	Timeouts GetRouteSpecTcpRouteTimeoutArrayInput `pulumi:"timeouts"`
}

func (GetRouteSpecTcpRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecTcpRoute)(nil)).Elem()
}

func (i GetRouteSpecTcpRouteArgs) ToGetRouteSpecTcpRouteOutput() GetRouteSpecTcpRouteOutput {
	return i.ToGetRouteSpecTcpRouteOutputWithContext(context.Background())
}

func (i GetRouteSpecTcpRouteArgs) ToGetRouteSpecTcpRouteOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecTcpRouteOutput)
}

// GetRouteSpecTcpRouteArrayInput is an input type that accepts GetRouteSpecTcpRouteArray and GetRouteSpecTcpRouteArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecTcpRouteArrayInput` via:
//
//	GetRouteSpecTcpRouteArray{ GetRouteSpecTcpRouteArgs{...} }
type GetRouteSpecTcpRouteArrayInput interface {
	pulumi.Input

	ToGetRouteSpecTcpRouteArrayOutput() GetRouteSpecTcpRouteArrayOutput
	ToGetRouteSpecTcpRouteArrayOutputWithContext(context.Context) GetRouteSpecTcpRouteArrayOutput
}

type GetRouteSpecTcpRouteArray []GetRouteSpecTcpRouteInput

func (GetRouteSpecTcpRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecTcpRoute)(nil)).Elem()
}

func (i GetRouteSpecTcpRouteArray) ToGetRouteSpecTcpRouteArrayOutput() GetRouteSpecTcpRouteArrayOutput {
	return i.ToGetRouteSpecTcpRouteArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecTcpRouteArray) ToGetRouteSpecTcpRouteArrayOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecTcpRouteArrayOutput)
}

type GetRouteSpecTcpRouteOutput struct{ *pulumi.OutputState }

func (GetRouteSpecTcpRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecTcpRoute)(nil)).Elem()
}

func (o GetRouteSpecTcpRouteOutput) ToGetRouteSpecTcpRouteOutput() GetRouteSpecTcpRouteOutput {
	return o
}

func (o GetRouteSpecTcpRouteOutput) ToGetRouteSpecTcpRouteOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteOutput {
	return o
}

func (o GetRouteSpecTcpRouteOutput) Actions() GetRouteSpecTcpRouteActionArrayOutput {
	return o.ApplyT(func(v GetRouteSpecTcpRoute) []GetRouteSpecTcpRouteAction { return v.Actions }).(GetRouteSpecTcpRouteActionArrayOutput)
}

func (o GetRouteSpecTcpRouteOutput) Matches() GetRouteSpecTcpRouteMatchArrayOutput {
	return o.ApplyT(func(v GetRouteSpecTcpRoute) []GetRouteSpecTcpRouteMatch { return v.Matches }).(GetRouteSpecTcpRouteMatchArrayOutput)
}

func (o GetRouteSpecTcpRouteOutput) Timeouts() GetRouteSpecTcpRouteTimeoutArrayOutput {
	return o.ApplyT(func(v GetRouteSpecTcpRoute) []GetRouteSpecTcpRouteTimeout { return v.Timeouts }).(GetRouteSpecTcpRouteTimeoutArrayOutput)
}

type GetRouteSpecTcpRouteArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecTcpRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecTcpRoute)(nil)).Elem()
}

func (o GetRouteSpecTcpRouteArrayOutput) ToGetRouteSpecTcpRouteArrayOutput() GetRouteSpecTcpRouteArrayOutput {
	return o
}

func (o GetRouteSpecTcpRouteArrayOutput) ToGetRouteSpecTcpRouteArrayOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteArrayOutput {
	return o
}

func (o GetRouteSpecTcpRouteArrayOutput) Index(i pulumi.IntInput) GetRouteSpecTcpRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecTcpRoute {
		return vs[0].([]GetRouteSpecTcpRoute)[vs[1].(int)]
	}).(GetRouteSpecTcpRouteOutput)
}

type GetRouteSpecTcpRouteAction struct {
	WeightedTargets []GetRouteSpecTcpRouteActionWeightedTarget `pulumi:"weightedTargets"`
}

// GetRouteSpecTcpRouteActionInput is an input type that accepts GetRouteSpecTcpRouteActionArgs and GetRouteSpecTcpRouteActionOutput values.
// You can construct a concrete instance of `GetRouteSpecTcpRouteActionInput` via:
//
//	GetRouteSpecTcpRouteActionArgs{...}
type GetRouteSpecTcpRouteActionInput interface {
	pulumi.Input

	ToGetRouteSpecTcpRouteActionOutput() GetRouteSpecTcpRouteActionOutput
	ToGetRouteSpecTcpRouteActionOutputWithContext(context.Context) GetRouteSpecTcpRouteActionOutput
}

type GetRouteSpecTcpRouteActionArgs struct {
	WeightedTargets GetRouteSpecTcpRouteActionWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (GetRouteSpecTcpRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecTcpRouteAction)(nil)).Elem()
}

func (i GetRouteSpecTcpRouteActionArgs) ToGetRouteSpecTcpRouteActionOutput() GetRouteSpecTcpRouteActionOutput {
	return i.ToGetRouteSpecTcpRouteActionOutputWithContext(context.Background())
}

func (i GetRouteSpecTcpRouteActionArgs) ToGetRouteSpecTcpRouteActionOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecTcpRouteActionOutput)
}

// GetRouteSpecTcpRouteActionArrayInput is an input type that accepts GetRouteSpecTcpRouteActionArray and GetRouteSpecTcpRouteActionArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecTcpRouteActionArrayInput` via:
//
//	GetRouteSpecTcpRouteActionArray{ GetRouteSpecTcpRouteActionArgs{...} }
type GetRouteSpecTcpRouteActionArrayInput interface {
	pulumi.Input

	ToGetRouteSpecTcpRouteActionArrayOutput() GetRouteSpecTcpRouteActionArrayOutput
	ToGetRouteSpecTcpRouteActionArrayOutputWithContext(context.Context) GetRouteSpecTcpRouteActionArrayOutput
}

type GetRouteSpecTcpRouteActionArray []GetRouteSpecTcpRouteActionInput

func (GetRouteSpecTcpRouteActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecTcpRouteAction)(nil)).Elem()
}

func (i GetRouteSpecTcpRouteActionArray) ToGetRouteSpecTcpRouteActionArrayOutput() GetRouteSpecTcpRouteActionArrayOutput {
	return i.ToGetRouteSpecTcpRouteActionArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecTcpRouteActionArray) ToGetRouteSpecTcpRouteActionArrayOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecTcpRouteActionArrayOutput)
}

type GetRouteSpecTcpRouteActionOutput struct{ *pulumi.OutputState }

func (GetRouteSpecTcpRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecTcpRouteAction)(nil)).Elem()
}

func (o GetRouteSpecTcpRouteActionOutput) ToGetRouteSpecTcpRouteActionOutput() GetRouteSpecTcpRouteActionOutput {
	return o
}

func (o GetRouteSpecTcpRouteActionOutput) ToGetRouteSpecTcpRouteActionOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteActionOutput {
	return o
}

func (o GetRouteSpecTcpRouteActionOutput) WeightedTargets() GetRouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return o.ApplyT(func(v GetRouteSpecTcpRouteAction) []GetRouteSpecTcpRouteActionWeightedTarget {
		return v.WeightedTargets
	}).(GetRouteSpecTcpRouteActionWeightedTargetArrayOutput)
}

type GetRouteSpecTcpRouteActionArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecTcpRouteActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecTcpRouteAction)(nil)).Elem()
}

func (o GetRouteSpecTcpRouteActionArrayOutput) ToGetRouteSpecTcpRouteActionArrayOutput() GetRouteSpecTcpRouteActionArrayOutput {
	return o
}

func (o GetRouteSpecTcpRouteActionArrayOutput) ToGetRouteSpecTcpRouteActionArrayOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteActionArrayOutput {
	return o
}

func (o GetRouteSpecTcpRouteActionArrayOutput) Index(i pulumi.IntInput) GetRouteSpecTcpRouteActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecTcpRouteAction {
		return vs[0].([]GetRouteSpecTcpRouteAction)[vs[1].(int)]
	}).(GetRouteSpecTcpRouteActionOutput)
}

type GetRouteSpecTcpRouteActionWeightedTarget struct {
	Port        int    `pulumi:"port"`
	VirtualNode string `pulumi:"virtualNode"`
	Weight      int    `pulumi:"weight"`
}

// GetRouteSpecTcpRouteActionWeightedTargetInput is an input type that accepts GetRouteSpecTcpRouteActionWeightedTargetArgs and GetRouteSpecTcpRouteActionWeightedTargetOutput values.
// You can construct a concrete instance of `GetRouteSpecTcpRouteActionWeightedTargetInput` via:
//
//	GetRouteSpecTcpRouteActionWeightedTargetArgs{...}
type GetRouteSpecTcpRouteActionWeightedTargetInput interface {
	pulumi.Input

	ToGetRouteSpecTcpRouteActionWeightedTargetOutput() GetRouteSpecTcpRouteActionWeightedTargetOutput
	ToGetRouteSpecTcpRouteActionWeightedTargetOutputWithContext(context.Context) GetRouteSpecTcpRouteActionWeightedTargetOutput
}

type GetRouteSpecTcpRouteActionWeightedTargetArgs struct {
	Port        pulumi.IntInput    `pulumi:"port"`
	VirtualNode pulumi.StringInput `pulumi:"virtualNode"`
	Weight      pulumi.IntInput    `pulumi:"weight"`
}

func (GetRouteSpecTcpRouteActionWeightedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (i GetRouteSpecTcpRouteActionWeightedTargetArgs) ToGetRouteSpecTcpRouteActionWeightedTargetOutput() GetRouteSpecTcpRouteActionWeightedTargetOutput {
	return i.ToGetRouteSpecTcpRouteActionWeightedTargetOutputWithContext(context.Background())
}

func (i GetRouteSpecTcpRouteActionWeightedTargetArgs) ToGetRouteSpecTcpRouteActionWeightedTargetOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteActionWeightedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecTcpRouteActionWeightedTargetOutput)
}

// GetRouteSpecTcpRouteActionWeightedTargetArrayInput is an input type that accepts GetRouteSpecTcpRouteActionWeightedTargetArray and GetRouteSpecTcpRouteActionWeightedTargetArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecTcpRouteActionWeightedTargetArrayInput` via:
//
//	GetRouteSpecTcpRouteActionWeightedTargetArray{ GetRouteSpecTcpRouteActionWeightedTargetArgs{...} }
type GetRouteSpecTcpRouteActionWeightedTargetArrayInput interface {
	pulumi.Input

	ToGetRouteSpecTcpRouteActionWeightedTargetArrayOutput() GetRouteSpecTcpRouteActionWeightedTargetArrayOutput
	ToGetRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(context.Context) GetRouteSpecTcpRouteActionWeightedTargetArrayOutput
}

type GetRouteSpecTcpRouteActionWeightedTargetArray []GetRouteSpecTcpRouteActionWeightedTargetInput

func (GetRouteSpecTcpRouteActionWeightedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (i GetRouteSpecTcpRouteActionWeightedTargetArray) ToGetRouteSpecTcpRouteActionWeightedTargetArrayOutput() GetRouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return i.ToGetRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecTcpRouteActionWeightedTargetArray) ToGetRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecTcpRouteActionWeightedTargetArrayOutput)
}

type GetRouteSpecTcpRouteActionWeightedTargetOutput struct{ *pulumi.OutputState }

func (GetRouteSpecTcpRouteActionWeightedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (o GetRouteSpecTcpRouteActionWeightedTargetOutput) ToGetRouteSpecTcpRouteActionWeightedTargetOutput() GetRouteSpecTcpRouteActionWeightedTargetOutput {
	return o
}

func (o GetRouteSpecTcpRouteActionWeightedTargetOutput) ToGetRouteSpecTcpRouteActionWeightedTargetOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteActionWeightedTargetOutput {
	return o
}

func (o GetRouteSpecTcpRouteActionWeightedTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecTcpRouteActionWeightedTarget) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetRouteSpecTcpRouteActionWeightedTargetOutput) VirtualNode() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecTcpRouteActionWeightedTarget) string { return v.VirtualNode }).(pulumi.StringOutput)
}

func (o GetRouteSpecTcpRouteActionWeightedTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecTcpRouteActionWeightedTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type GetRouteSpecTcpRouteActionWeightedTargetArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecTcpRouteActionWeightedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (o GetRouteSpecTcpRouteActionWeightedTargetArrayOutput) ToGetRouteSpecTcpRouteActionWeightedTargetArrayOutput() GetRouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return o
}

func (o GetRouteSpecTcpRouteActionWeightedTargetArrayOutput) ToGetRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return o
}

func (o GetRouteSpecTcpRouteActionWeightedTargetArrayOutput) Index(i pulumi.IntInput) GetRouteSpecTcpRouteActionWeightedTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecTcpRouteActionWeightedTarget {
		return vs[0].([]GetRouteSpecTcpRouteActionWeightedTarget)[vs[1].(int)]
	}).(GetRouteSpecTcpRouteActionWeightedTargetOutput)
}

type GetRouteSpecTcpRouteMatch struct {
	Port int `pulumi:"port"`
}

// GetRouteSpecTcpRouteMatchInput is an input type that accepts GetRouteSpecTcpRouteMatchArgs and GetRouteSpecTcpRouteMatchOutput values.
// You can construct a concrete instance of `GetRouteSpecTcpRouteMatchInput` via:
//
//	GetRouteSpecTcpRouteMatchArgs{...}
type GetRouteSpecTcpRouteMatchInput interface {
	pulumi.Input

	ToGetRouteSpecTcpRouteMatchOutput() GetRouteSpecTcpRouteMatchOutput
	ToGetRouteSpecTcpRouteMatchOutputWithContext(context.Context) GetRouteSpecTcpRouteMatchOutput
}

type GetRouteSpecTcpRouteMatchArgs struct {
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetRouteSpecTcpRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecTcpRouteMatch)(nil)).Elem()
}

func (i GetRouteSpecTcpRouteMatchArgs) ToGetRouteSpecTcpRouteMatchOutput() GetRouteSpecTcpRouteMatchOutput {
	return i.ToGetRouteSpecTcpRouteMatchOutputWithContext(context.Background())
}

func (i GetRouteSpecTcpRouteMatchArgs) ToGetRouteSpecTcpRouteMatchOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecTcpRouteMatchOutput)
}

// GetRouteSpecTcpRouteMatchArrayInput is an input type that accepts GetRouteSpecTcpRouteMatchArray and GetRouteSpecTcpRouteMatchArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecTcpRouteMatchArrayInput` via:
//
//	GetRouteSpecTcpRouteMatchArray{ GetRouteSpecTcpRouteMatchArgs{...} }
type GetRouteSpecTcpRouteMatchArrayInput interface {
	pulumi.Input

	ToGetRouteSpecTcpRouteMatchArrayOutput() GetRouteSpecTcpRouteMatchArrayOutput
	ToGetRouteSpecTcpRouteMatchArrayOutputWithContext(context.Context) GetRouteSpecTcpRouteMatchArrayOutput
}

type GetRouteSpecTcpRouteMatchArray []GetRouteSpecTcpRouteMatchInput

func (GetRouteSpecTcpRouteMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecTcpRouteMatch)(nil)).Elem()
}

func (i GetRouteSpecTcpRouteMatchArray) ToGetRouteSpecTcpRouteMatchArrayOutput() GetRouteSpecTcpRouteMatchArrayOutput {
	return i.ToGetRouteSpecTcpRouteMatchArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecTcpRouteMatchArray) ToGetRouteSpecTcpRouteMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecTcpRouteMatchArrayOutput)
}

type GetRouteSpecTcpRouteMatchOutput struct{ *pulumi.OutputState }

func (GetRouteSpecTcpRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecTcpRouteMatch)(nil)).Elem()
}

func (o GetRouteSpecTcpRouteMatchOutput) ToGetRouteSpecTcpRouteMatchOutput() GetRouteSpecTcpRouteMatchOutput {
	return o
}

func (o GetRouteSpecTcpRouteMatchOutput) ToGetRouteSpecTcpRouteMatchOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteMatchOutput {
	return o
}

func (o GetRouteSpecTcpRouteMatchOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecTcpRouteMatch) int { return v.Port }).(pulumi.IntOutput)
}

type GetRouteSpecTcpRouteMatchArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecTcpRouteMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecTcpRouteMatch)(nil)).Elem()
}

func (o GetRouteSpecTcpRouteMatchArrayOutput) ToGetRouteSpecTcpRouteMatchArrayOutput() GetRouteSpecTcpRouteMatchArrayOutput {
	return o
}

func (o GetRouteSpecTcpRouteMatchArrayOutput) ToGetRouteSpecTcpRouteMatchArrayOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteMatchArrayOutput {
	return o
}

func (o GetRouteSpecTcpRouteMatchArrayOutput) Index(i pulumi.IntInput) GetRouteSpecTcpRouteMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecTcpRouteMatch {
		return vs[0].([]GetRouteSpecTcpRouteMatch)[vs[1].(int)]
	}).(GetRouteSpecTcpRouteMatchOutput)
}

type GetRouteSpecTcpRouteTimeout struct {
	Idles []GetRouteSpecTcpRouteTimeoutIdle `pulumi:"idles"`
}

// GetRouteSpecTcpRouteTimeoutInput is an input type that accepts GetRouteSpecTcpRouteTimeoutArgs and GetRouteSpecTcpRouteTimeoutOutput values.
// You can construct a concrete instance of `GetRouteSpecTcpRouteTimeoutInput` via:
//
//	GetRouteSpecTcpRouteTimeoutArgs{...}
type GetRouteSpecTcpRouteTimeoutInput interface {
	pulumi.Input

	ToGetRouteSpecTcpRouteTimeoutOutput() GetRouteSpecTcpRouteTimeoutOutput
	ToGetRouteSpecTcpRouteTimeoutOutputWithContext(context.Context) GetRouteSpecTcpRouteTimeoutOutput
}

type GetRouteSpecTcpRouteTimeoutArgs struct {
	Idles GetRouteSpecTcpRouteTimeoutIdleArrayInput `pulumi:"idles"`
}

func (GetRouteSpecTcpRouteTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecTcpRouteTimeout)(nil)).Elem()
}

func (i GetRouteSpecTcpRouteTimeoutArgs) ToGetRouteSpecTcpRouteTimeoutOutput() GetRouteSpecTcpRouteTimeoutOutput {
	return i.ToGetRouteSpecTcpRouteTimeoutOutputWithContext(context.Background())
}

func (i GetRouteSpecTcpRouteTimeoutArgs) ToGetRouteSpecTcpRouteTimeoutOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecTcpRouteTimeoutOutput)
}

// GetRouteSpecTcpRouteTimeoutArrayInput is an input type that accepts GetRouteSpecTcpRouteTimeoutArray and GetRouteSpecTcpRouteTimeoutArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecTcpRouteTimeoutArrayInput` via:
//
//	GetRouteSpecTcpRouteTimeoutArray{ GetRouteSpecTcpRouteTimeoutArgs{...} }
type GetRouteSpecTcpRouteTimeoutArrayInput interface {
	pulumi.Input

	ToGetRouteSpecTcpRouteTimeoutArrayOutput() GetRouteSpecTcpRouteTimeoutArrayOutput
	ToGetRouteSpecTcpRouteTimeoutArrayOutputWithContext(context.Context) GetRouteSpecTcpRouteTimeoutArrayOutput
}

type GetRouteSpecTcpRouteTimeoutArray []GetRouteSpecTcpRouteTimeoutInput

func (GetRouteSpecTcpRouteTimeoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecTcpRouteTimeout)(nil)).Elem()
}

func (i GetRouteSpecTcpRouteTimeoutArray) ToGetRouteSpecTcpRouteTimeoutArrayOutput() GetRouteSpecTcpRouteTimeoutArrayOutput {
	return i.ToGetRouteSpecTcpRouteTimeoutArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecTcpRouteTimeoutArray) ToGetRouteSpecTcpRouteTimeoutArrayOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteTimeoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecTcpRouteTimeoutArrayOutput)
}

type GetRouteSpecTcpRouteTimeoutOutput struct{ *pulumi.OutputState }

func (GetRouteSpecTcpRouteTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecTcpRouteTimeout)(nil)).Elem()
}

func (o GetRouteSpecTcpRouteTimeoutOutput) ToGetRouteSpecTcpRouteTimeoutOutput() GetRouteSpecTcpRouteTimeoutOutput {
	return o
}

func (o GetRouteSpecTcpRouteTimeoutOutput) ToGetRouteSpecTcpRouteTimeoutOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteTimeoutOutput {
	return o
}

func (o GetRouteSpecTcpRouteTimeoutOutput) Idles() GetRouteSpecTcpRouteTimeoutIdleArrayOutput {
	return o.ApplyT(func(v GetRouteSpecTcpRouteTimeout) []GetRouteSpecTcpRouteTimeoutIdle { return v.Idles }).(GetRouteSpecTcpRouteTimeoutIdleArrayOutput)
}

type GetRouteSpecTcpRouteTimeoutArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecTcpRouteTimeoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecTcpRouteTimeout)(nil)).Elem()
}

func (o GetRouteSpecTcpRouteTimeoutArrayOutput) ToGetRouteSpecTcpRouteTimeoutArrayOutput() GetRouteSpecTcpRouteTimeoutArrayOutput {
	return o
}

func (o GetRouteSpecTcpRouteTimeoutArrayOutput) ToGetRouteSpecTcpRouteTimeoutArrayOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteTimeoutArrayOutput {
	return o
}

func (o GetRouteSpecTcpRouteTimeoutArrayOutput) Index(i pulumi.IntInput) GetRouteSpecTcpRouteTimeoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecTcpRouteTimeout {
		return vs[0].([]GetRouteSpecTcpRouteTimeout)[vs[1].(int)]
	}).(GetRouteSpecTcpRouteTimeoutOutput)
}

type GetRouteSpecTcpRouteTimeoutIdle struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetRouteSpecTcpRouteTimeoutIdleInput is an input type that accepts GetRouteSpecTcpRouteTimeoutIdleArgs and GetRouteSpecTcpRouteTimeoutIdleOutput values.
// You can construct a concrete instance of `GetRouteSpecTcpRouteTimeoutIdleInput` via:
//
//	GetRouteSpecTcpRouteTimeoutIdleArgs{...}
type GetRouteSpecTcpRouteTimeoutIdleInput interface {
	pulumi.Input

	ToGetRouteSpecTcpRouteTimeoutIdleOutput() GetRouteSpecTcpRouteTimeoutIdleOutput
	ToGetRouteSpecTcpRouteTimeoutIdleOutputWithContext(context.Context) GetRouteSpecTcpRouteTimeoutIdleOutput
}

type GetRouteSpecTcpRouteTimeoutIdleArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetRouteSpecTcpRouteTimeoutIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecTcpRouteTimeoutIdle)(nil)).Elem()
}

func (i GetRouteSpecTcpRouteTimeoutIdleArgs) ToGetRouteSpecTcpRouteTimeoutIdleOutput() GetRouteSpecTcpRouteTimeoutIdleOutput {
	return i.ToGetRouteSpecTcpRouteTimeoutIdleOutputWithContext(context.Background())
}

func (i GetRouteSpecTcpRouteTimeoutIdleArgs) ToGetRouteSpecTcpRouteTimeoutIdleOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteTimeoutIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecTcpRouteTimeoutIdleOutput)
}

// GetRouteSpecTcpRouteTimeoutIdleArrayInput is an input type that accepts GetRouteSpecTcpRouteTimeoutIdleArray and GetRouteSpecTcpRouteTimeoutIdleArrayOutput values.
// You can construct a concrete instance of `GetRouteSpecTcpRouteTimeoutIdleArrayInput` via:
//
//	GetRouteSpecTcpRouteTimeoutIdleArray{ GetRouteSpecTcpRouteTimeoutIdleArgs{...} }
type GetRouteSpecTcpRouteTimeoutIdleArrayInput interface {
	pulumi.Input

	ToGetRouteSpecTcpRouteTimeoutIdleArrayOutput() GetRouteSpecTcpRouteTimeoutIdleArrayOutput
	ToGetRouteSpecTcpRouteTimeoutIdleArrayOutputWithContext(context.Context) GetRouteSpecTcpRouteTimeoutIdleArrayOutput
}

type GetRouteSpecTcpRouteTimeoutIdleArray []GetRouteSpecTcpRouteTimeoutIdleInput

func (GetRouteSpecTcpRouteTimeoutIdleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecTcpRouteTimeoutIdle)(nil)).Elem()
}

func (i GetRouteSpecTcpRouteTimeoutIdleArray) ToGetRouteSpecTcpRouteTimeoutIdleArrayOutput() GetRouteSpecTcpRouteTimeoutIdleArrayOutput {
	return i.ToGetRouteSpecTcpRouteTimeoutIdleArrayOutputWithContext(context.Background())
}

func (i GetRouteSpecTcpRouteTimeoutIdleArray) ToGetRouteSpecTcpRouteTimeoutIdleArrayOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteTimeoutIdleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteSpecTcpRouteTimeoutIdleArrayOutput)
}

type GetRouteSpecTcpRouteTimeoutIdleOutput struct{ *pulumi.OutputState }

func (GetRouteSpecTcpRouteTimeoutIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteSpecTcpRouteTimeoutIdle)(nil)).Elem()
}

func (o GetRouteSpecTcpRouteTimeoutIdleOutput) ToGetRouteSpecTcpRouteTimeoutIdleOutput() GetRouteSpecTcpRouteTimeoutIdleOutput {
	return o
}

func (o GetRouteSpecTcpRouteTimeoutIdleOutput) ToGetRouteSpecTcpRouteTimeoutIdleOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteTimeoutIdleOutput {
	return o
}

func (o GetRouteSpecTcpRouteTimeoutIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteSpecTcpRouteTimeoutIdle) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetRouteSpecTcpRouteTimeoutIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetRouteSpecTcpRouteTimeoutIdle) int { return v.Value }).(pulumi.IntOutput)
}

type GetRouteSpecTcpRouteTimeoutIdleArrayOutput struct{ *pulumi.OutputState }

func (GetRouteSpecTcpRouteTimeoutIdleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteSpecTcpRouteTimeoutIdle)(nil)).Elem()
}

func (o GetRouteSpecTcpRouteTimeoutIdleArrayOutput) ToGetRouteSpecTcpRouteTimeoutIdleArrayOutput() GetRouteSpecTcpRouteTimeoutIdleArrayOutput {
	return o
}

func (o GetRouteSpecTcpRouteTimeoutIdleArrayOutput) ToGetRouteSpecTcpRouteTimeoutIdleArrayOutputWithContext(ctx context.Context) GetRouteSpecTcpRouteTimeoutIdleArrayOutput {
	return o
}

func (o GetRouteSpecTcpRouteTimeoutIdleArrayOutput) Index(i pulumi.IntInput) GetRouteSpecTcpRouteTimeoutIdleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteSpecTcpRouteTimeoutIdle {
		return vs[0].([]GetRouteSpecTcpRouteTimeoutIdle)[vs[1].(int)]
	}).(GetRouteSpecTcpRouteTimeoutIdleOutput)
}

type GetVirtualGatewaySpec struct {
	BackendDefaults []GetVirtualGatewaySpecBackendDefault `pulumi:"backendDefaults"`
	Listeners       []GetVirtualGatewaySpecListener       `pulumi:"listeners"`
	Loggings        []GetVirtualGatewaySpecLogging        `pulumi:"loggings"`
}

// GetVirtualGatewaySpecInput is an input type that accepts GetVirtualGatewaySpecArgs and GetVirtualGatewaySpecOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecInput` via:
//
//	GetVirtualGatewaySpecArgs{...}
type GetVirtualGatewaySpecInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecOutput() GetVirtualGatewaySpecOutput
	ToGetVirtualGatewaySpecOutputWithContext(context.Context) GetVirtualGatewaySpecOutput
}

type GetVirtualGatewaySpecArgs struct {
	BackendDefaults GetVirtualGatewaySpecBackendDefaultArrayInput `pulumi:"backendDefaults"`
	Listeners       GetVirtualGatewaySpecListenerArrayInput       `pulumi:"listeners"`
	Loggings        GetVirtualGatewaySpecLoggingArrayInput        `pulumi:"loggings"`
}

func (GetVirtualGatewaySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpec)(nil)).Elem()
}

func (i GetVirtualGatewaySpecArgs) ToGetVirtualGatewaySpecOutput() GetVirtualGatewaySpecOutput {
	return i.ToGetVirtualGatewaySpecOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecArgs) ToGetVirtualGatewaySpecOutputWithContext(ctx context.Context) GetVirtualGatewaySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecOutput)
}

// GetVirtualGatewaySpecArrayInput is an input type that accepts GetVirtualGatewaySpecArray and GetVirtualGatewaySpecArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecArrayInput` via:
//
//	GetVirtualGatewaySpecArray{ GetVirtualGatewaySpecArgs{...} }
type GetVirtualGatewaySpecArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecArrayOutput() GetVirtualGatewaySpecArrayOutput
	ToGetVirtualGatewaySpecArrayOutputWithContext(context.Context) GetVirtualGatewaySpecArrayOutput
}

type GetVirtualGatewaySpecArray []GetVirtualGatewaySpecInput

func (GetVirtualGatewaySpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpec)(nil)).Elem()
}

func (i GetVirtualGatewaySpecArray) ToGetVirtualGatewaySpecArrayOutput() GetVirtualGatewaySpecArrayOutput {
	return i.ToGetVirtualGatewaySpecArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecArray) ToGetVirtualGatewaySpecArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecArrayOutput)
}

type GetVirtualGatewaySpecOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpec)(nil)).Elem()
}

func (o GetVirtualGatewaySpecOutput) ToGetVirtualGatewaySpecOutput() GetVirtualGatewaySpecOutput {
	return o
}

func (o GetVirtualGatewaySpecOutput) ToGetVirtualGatewaySpecOutputWithContext(ctx context.Context) GetVirtualGatewaySpecOutput {
	return o
}

func (o GetVirtualGatewaySpecOutput) BackendDefaults() GetVirtualGatewaySpecBackendDefaultArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpec) []GetVirtualGatewaySpecBackendDefault { return v.BackendDefaults }).(GetVirtualGatewaySpecBackendDefaultArrayOutput)
}

func (o GetVirtualGatewaySpecOutput) Listeners() GetVirtualGatewaySpecListenerArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpec) []GetVirtualGatewaySpecListener { return v.Listeners }).(GetVirtualGatewaySpecListenerArrayOutput)
}

func (o GetVirtualGatewaySpecOutput) Loggings() GetVirtualGatewaySpecLoggingArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpec) []GetVirtualGatewaySpecLogging { return v.Loggings }).(GetVirtualGatewaySpecLoggingArrayOutput)
}

type GetVirtualGatewaySpecArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpec)(nil)).Elem()
}

func (o GetVirtualGatewaySpecArrayOutput) ToGetVirtualGatewaySpecArrayOutput() GetVirtualGatewaySpecArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecArrayOutput) ToGetVirtualGatewaySpecArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpec {
		return vs[0].([]GetVirtualGatewaySpec)[vs[1].(int)]
	}).(GetVirtualGatewaySpecOutput)
}

type GetVirtualGatewaySpecBackendDefault struct {
	ClientPolicies []GetVirtualGatewaySpecBackendDefaultClientPolicy `pulumi:"clientPolicies"`
}

// GetVirtualGatewaySpecBackendDefaultInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultArgs and GetVirtualGatewaySpecBackendDefaultOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultArgs{...}
type GetVirtualGatewaySpecBackendDefaultInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultOutput() GetVirtualGatewaySpecBackendDefaultOutput
	ToGetVirtualGatewaySpecBackendDefaultOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultOutput
}

type GetVirtualGatewaySpecBackendDefaultArgs struct {
	ClientPolicies GetVirtualGatewaySpecBackendDefaultClientPolicyArrayInput `pulumi:"clientPolicies"`
}

func (GetVirtualGatewaySpecBackendDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefault)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultArgs) ToGetVirtualGatewaySpecBackendDefaultOutput() GetVirtualGatewaySpecBackendDefaultOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultArgs) ToGetVirtualGatewaySpecBackendDefaultOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultOutput)
}

// GetVirtualGatewaySpecBackendDefaultArrayInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultArray and GetVirtualGatewaySpecBackendDefaultArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultArrayInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultArray{ GetVirtualGatewaySpecBackendDefaultArgs{...} }
type GetVirtualGatewaySpecBackendDefaultArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultArrayOutput() GetVirtualGatewaySpecBackendDefaultArrayOutput
	ToGetVirtualGatewaySpecBackendDefaultArrayOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultArrayOutput
}

type GetVirtualGatewaySpecBackendDefaultArray []GetVirtualGatewaySpecBackendDefaultInput

func (GetVirtualGatewaySpecBackendDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefault)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultArray) ToGetVirtualGatewaySpecBackendDefaultArrayOutput() GetVirtualGatewaySpecBackendDefaultArrayOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultArray) ToGetVirtualGatewaySpecBackendDefaultArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefault)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultOutput) ToGetVirtualGatewaySpecBackendDefaultOutput() GetVirtualGatewaySpecBackendDefaultOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultOutput) ToGetVirtualGatewaySpecBackendDefaultOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultOutput) ClientPolicies() GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefault) []GetVirtualGatewaySpecBackendDefaultClientPolicy {
		return v.ClientPolicies
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefault)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultArrayOutput) ToGetVirtualGatewaySpecBackendDefaultArrayOutput() GetVirtualGatewaySpecBackendDefaultArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultArrayOutput) ToGetVirtualGatewaySpecBackendDefaultArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecBackendDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecBackendDefault {
		return vs[0].([]GetVirtualGatewaySpecBackendDefault)[vs[1].(int)]
	}).(GetVirtualGatewaySpecBackendDefaultOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicy struct {
	Tls []GetVirtualGatewaySpecBackendDefaultClientPolicyTl `pulumi:"tls"`
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyArgs and GetVirtualGatewaySpecBackendDefaultClientPolicyOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyArgs{...}
type GetVirtualGatewaySpecBackendDefaultClientPolicyInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyArgs struct {
	Tls GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayInput `pulumi:"tls"`
}

func (GetVirtualGatewaySpecBackendDefaultClientPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicy)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyOutput)
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyArrayInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyArray and GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyArrayInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyArray{ GetVirtualGatewaySpecBackendDefaultClientPolicyArgs{...} }
type GetVirtualGatewaySpecBackendDefaultClientPolicyArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyArray []GetVirtualGatewaySpecBackendDefaultClientPolicyInput

func (GetVirtualGatewaySpecBackendDefaultClientPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicy)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicy)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyOutput) Tls() GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicy) []GetVirtualGatewaySpecBackendDefaultClientPolicyTl {
		return v.Tls
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicy)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecBackendDefaultClientPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecBackendDefaultClientPolicy {
		return vs[0].([]GetVirtualGatewaySpecBackendDefaultClientPolicy)[vs[1].(int)]
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTl struct {
	Certificates []GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificate `pulumi:"certificates"`
	Enforce      bool                                                           `pulumi:"enforce"`
	Ports        []int                                                          `pulumi:"ports"`
	Validations  []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidation  `pulumi:"validations"`
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlArgs and GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlArgs{...}
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlArgs struct {
	Certificates GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayInput `pulumi:"certificates"`
	Enforce      pulumi.BoolInput                                                       `pulumi:"enforce"`
	Ports        pulumi.IntArrayInput                                                   `pulumi:"ports"`
	Validations  GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayInput  `pulumi:"validations"`
}

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTl)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput)
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlArray and GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlArray{ GetVirtualGatewaySpecBackendDefaultClientPolicyTlArgs{...} }
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlArray []GetVirtualGatewaySpecBackendDefaultClientPolicyTlInput

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTl)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTl)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput) Certificates() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTl) []GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificate {
		return v.Certificates
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput)
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput) Enforce() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTl) bool { return v.Enforce }).(pulumi.BoolOutput)
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTl) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput) Validations() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTl) []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidation {
		return v.Validations
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTl)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecBackendDefaultClientPolicyTl {
		return vs[0].([]GetVirtualGatewaySpecBackendDefaultClientPolicyTl)[vs[1].(int)]
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificate struct {
	Files []GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFile `pulumi:"files"`
	Sds   []GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSd   `pulumi:"sds"`
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArgs and GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArgs{...}
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArgs struct {
	Files GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayInput `pulumi:"files"`
	Sds   GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayInput   `pulumi:"sds"`
}

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificate)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput)
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArray and GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArray{ GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArgs{...} }
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArray []GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateInput

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificate)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificate)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput) Files() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificate) []GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFile {
		return v.Files
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput)
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput) Sds() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificate) []GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSd {
		return v.Sds
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificate)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificate {
		return vs[0].([]GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificate)[vs[1].(int)]
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFile struct {
	CertificateChain string `pulumi:"certificateChain"`
	PrivateKey       string `pulumi:"privateKey"`
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArgs and GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArgs{...}
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArgs struct {
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	PrivateKey       pulumi.StringInput `pulumi:"privateKey"`
}

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFile)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput)
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArray and GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArray{ GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArgs{...} }
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArray []GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileInput

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFile)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFile)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFile) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFile)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFile {
		return vs[0].([]GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFile)[vs[1].(int)]
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSd struct {
	SecretName string `pulumi:"secretName"`
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArgs and GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArgs{...}
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArgs struct {
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSd)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput)
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArray and GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArray{ GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArgs{...} }
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArray []GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdInput

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSd)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSd)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSd) string { return v.SecretName }).(pulumi.StringOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSd)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSd {
		return vs[0].([]GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSd)[vs[1].(int)]
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidation struct {
	SubjectAlternativeNames []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName `pulumi:"subjectAlternativeNames"`
	Trusts                  []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrust                  `pulumi:"trusts"`
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArgs and GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArgs{...}
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArgs struct {
	SubjectAlternativeNames GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayInput `pulumi:"subjectAlternativeNames"`
	Trusts                  GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayInput                  `pulumi:"trusts"`
}

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidation)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput)
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArray and GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArray{ GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArgs{...} }
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArray []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationInput

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidation)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidation)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput) SubjectAlternativeNames() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidation) []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName {
		return v.SubjectAlternativeNames
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput)
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput) Trusts() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidation) []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrust {
		return v.Trusts
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidation)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidation {
		return vs[0].([]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidation)[vs[1].(int)]
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName struct {
	Matches []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch `pulumi:"matches"`
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs and GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs{...}
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs struct {
	Matches GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput `pulumi:"matches"`
}

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput)
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArray and GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArray{ GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs{...} }
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArray []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameInput

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput) Matches() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName) []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch {
		return v.Matches
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName {
		return vs[0].([]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName)[vs[1].(int)]
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch struct {
	Exacts []string `pulumi:"exacts"`
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs and GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs{...}
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs struct {
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput)
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArray and GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArray{ GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs{...} }
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArray []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchInput

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch) []string {
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch {
		return vs[0].([]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch)[vs[1].(int)]
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrust struct {
	Acms  []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcm  `pulumi:"acms"`
	Files []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFile `pulumi:"files"`
	Sds   []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSd   `pulumi:"sds"`
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArgs and GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArgs{...}
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArgs struct {
	Acms  GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayInput  `pulumi:"acms"`
	Files GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayInput `pulumi:"files"`
	Sds   GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayInput   `pulumi:"sds"`
}

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrust)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput)
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArray and GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArray{ GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArgs{...} }
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArray []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustInput

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrust)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrust)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput) Acms() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrust) []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcm {
		return v.Acms
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput)
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput) Files() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrust) []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFile {
		return v.Files
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput)
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput) Sds() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrust) []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSd {
		return v.Sds
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrust)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrust {
		return vs[0].([]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrust)[vs[1].(int)]
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcm struct {
	CertificateAuthorityArns []string `pulumi:"certificateAuthorityArns"`
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArgs and GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArgs{...}
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArgs struct {
	CertificateAuthorityArns pulumi.StringArrayInput `pulumi:"certificateAuthorityArns"`
}

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcm)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput)
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArray and GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArray{ GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArgs{...} }
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArray []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmInput

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcm)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcm)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcm) []string {
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcm)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcm {
		return vs[0].([]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcm)[vs[1].(int)]
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFile struct {
	CertificateChain string `pulumi:"certificateChain"`
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArgs and GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArgs{...}
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArgs struct {
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFile)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput)
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArray and GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArray{ GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArgs{...} }
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArray []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileInput

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFile)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFile)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFile)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFile {
		return vs[0].([]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFile)[vs[1].(int)]
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSd struct {
	SecretName string `pulumi:"secretName"`
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArgs and GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArgs{...}
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArgs struct {
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSd)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArgs) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput)
}

// GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayInput is an input type that accepts GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArray and GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayInput` via:
//
//	GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArray{ GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArgs{...} }
type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput
	ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutputWithContext(context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArray []GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdInput

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSd)(nil)).Elem()
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput {
	return i.ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArray) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSd)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSd) string { return v.SecretName }).(pulumi.StringOutput)
}

type GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSd)(nil)).Elem()
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput() GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput) ToGetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSd {
		return vs[0].([]GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSd)[vs[1].(int)]
	}).(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput)
}

type GetVirtualGatewaySpecListener struct {
	ConnectionPools []GetVirtualGatewaySpecListenerConnectionPool `pulumi:"connectionPools"`
	HealthChecks    []GetVirtualGatewaySpecListenerHealthCheck    `pulumi:"healthChecks"`
	PortMappings    []GetVirtualGatewaySpecListenerPortMapping    `pulumi:"portMappings"`
	Tls             []GetVirtualGatewaySpecListenerTl             `pulumi:"tls"`
}

// GetVirtualGatewaySpecListenerInput is an input type that accepts GetVirtualGatewaySpecListenerArgs and GetVirtualGatewaySpecListenerOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerInput` via:
//
//	GetVirtualGatewaySpecListenerArgs{...}
type GetVirtualGatewaySpecListenerInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerOutput() GetVirtualGatewaySpecListenerOutput
	ToGetVirtualGatewaySpecListenerOutputWithContext(context.Context) GetVirtualGatewaySpecListenerOutput
}

type GetVirtualGatewaySpecListenerArgs struct {
	ConnectionPools GetVirtualGatewaySpecListenerConnectionPoolArrayInput `pulumi:"connectionPools"`
	HealthChecks    GetVirtualGatewaySpecListenerHealthCheckArrayInput    `pulumi:"healthChecks"`
	PortMappings    GetVirtualGatewaySpecListenerPortMappingArrayInput    `pulumi:"portMappings"`
	Tls             GetVirtualGatewaySpecListenerTlArrayInput             `pulumi:"tls"`
}

func (GetVirtualGatewaySpecListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListener)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerArgs) ToGetVirtualGatewaySpecListenerOutput() GetVirtualGatewaySpecListenerOutput {
	return i.ToGetVirtualGatewaySpecListenerOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerArgs) ToGetVirtualGatewaySpecListenerOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerOutput)
}

// GetVirtualGatewaySpecListenerArrayInput is an input type that accepts GetVirtualGatewaySpecListenerArray and GetVirtualGatewaySpecListenerArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerArrayInput` via:
//
//	GetVirtualGatewaySpecListenerArray{ GetVirtualGatewaySpecListenerArgs{...} }
type GetVirtualGatewaySpecListenerArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerArrayOutput() GetVirtualGatewaySpecListenerArrayOutput
	ToGetVirtualGatewaySpecListenerArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerArrayOutput
}

type GetVirtualGatewaySpecListenerArray []GetVirtualGatewaySpecListenerInput

func (GetVirtualGatewaySpecListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListener)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerArray) ToGetVirtualGatewaySpecListenerArrayOutput() GetVirtualGatewaySpecListenerArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerArray) ToGetVirtualGatewaySpecListenerArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerArrayOutput)
}

type GetVirtualGatewaySpecListenerOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListener)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerOutput) ToGetVirtualGatewaySpecListenerOutput() GetVirtualGatewaySpecListenerOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerOutput) ToGetVirtualGatewaySpecListenerOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerOutput) ConnectionPools() GetVirtualGatewaySpecListenerConnectionPoolArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListener) []GetVirtualGatewaySpecListenerConnectionPool {
		return v.ConnectionPools
	}).(GetVirtualGatewaySpecListenerConnectionPoolArrayOutput)
}

func (o GetVirtualGatewaySpecListenerOutput) HealthChecks() GetVirtualGatewaySpecListenerHealthCheckArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListener) []GetVirtualGatewaySpecListenerHealthCheck {
		return v.HealthChecks
	}).(GetVirtualGatewaySpecListenerHealthCheckArrayOutput)
}

func (o GetVirtualGatewaySpecListenerOutput) PortMappings() GetVirtualGatewaySpecListenerPortMappingArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListener) []GetVirtualGatewaySpecListenerPortMapping {
		return v.PortMappings
	}).(GetVirtualGatewaySpecListenerPortMappingArrayOutput)
}

func (o GetVirtualGatewaySpecListenerOutput) Tls() GetVirtualGatewaySpecListenerTlArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListener) []GetVirtualGatewaySpecListenerTl { return v.Tls }).(GetVirtualGatewaySpecListenerTlArrayOutput)
}

type GetVirtualGatewaySpecListenerArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListener)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerArrayOutput) ToGetVirtualGatewaySpecListenerArrayOutput() GetVirtualGatewaySpecListenerArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerArrayOutput) ToGetVirtualGatewaySpecListenerArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListener {
		return vs[0].([]GetVirtualGatewaySpecListener)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerOutput)
}

type GetVirtualGatewaySpecListenerConnectionPool struct {
	Grpcs  []GetVirtualGatewaySpecListenerConnectionPoolGrpc  `pulumi:"grpcs"`
	Http2s []GetVirtualGatewaySpecListenerConnectionPoolHttp2 `pulumi:"http2s"`
	Https  []GetVirtualGatewaySpecListenerConnectionPoolHttp  `pulumi:"https"`
}

// GetVirtualGatewaySpecListenerConnectionPoolInput is an input type that accepts GetVirtualGatewaySpecListenerConnectionPoolArgs and GetVirtualGatewaySpecListenerConnectionPoolOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerConnectionPoolInput` via:
//
//	GetVirtualGatewaySpecListenerConnectionPoolArgs{...}
type GetVirtualGatewaySpecListenerConnectionPoolInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerConnectionPoolOutput() GetVirtualGatewaySpecListenerConnectionPoolOutput
	ToGetVirtualGatewaySpecListenerConnectionPoolOutputWithContext(context.Context) GetVirtualGatewaySpecListenerConnectionPoolOutput
}

type GetVirtualGatewaySpecListenerConnectionPoolArgs struct {
	Grpcs  GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayInput  `pulumi:"grpcs"`
	Http2s GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayInput `pulumi:"http2s"`
	Https  GetVirtualGatewaySpecListenerConnectionPoolHttpArrayInput  `pulumi:"https"`
}

func (GetVirtualGatewaySpecListenerConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPool)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerConnectionPoolArgs) ToGetVirtualGatewaySpecListenerConnectionPoolOutput() GetVirtualGatewaySpecListenerConnectionPoolOutput {
	return i.ToGetVirtualGatewaySpecListenerConnectionPoolOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerConnectionPoolArgs) ToGetVirtualGatewaySpecListenerConnectionPoolOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerConnectionPoolOutput)
}

// GetVirtualGatewaySpecListenerConnectionPoolArrayInput is an input type that accepts GetVirtualGatewaySpecListenerConnectionPoolArray and GetVirtualGatewaySpecListenerConnectionPoolArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerConnectionPoolArrayInput` via:
//
//	GetVirtualGatewaySpecListenerConnectionPoolArray{ GetVirtualGatewaySpecListenerConnectionPoolArgs{...} }
type GetVirtualGatewaySpecListenerConnectionPoolArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerConnectionPoolArrayOutput() GetVirtualGatewaySpecListenerConnectionPoolArrayOutput
	ToGetVirtualGatewaySpecListenerConnectionPoolArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerConnectionPoolArrayOutput
}

type GetVirtualGatewaySpecListenerConnectionPoolArray []GetVirtualGatewaySpecListenerConnectionPoolInput

func (GetVirtualGatewaySpecListenerConnectionPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerConnectionPool)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerConnectionPoolArray) ToGetVirtualGatewaySpecListenerConnectionPoolArrayOutput() GetVirtualGatewaySpecListenerConnectionPoolArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerConnectionPoolArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerConnectionPoolArray) ToGetVirtualGatewaySpecListenerConnectionPoolArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerConnectionPoolArrayOutput)
}

type GetVirtualGatewaySpecListenerConnectionPoolOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPool)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerConnectionPoolOutput) ToGetVirtualGatewaySpecListenerConnectionPoolOutput() GetVirtualGatewaySpecListenerConnectionPoolOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolOutput) ToGetVirtualGatewaySpecListenerConnectionPoolOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolOutput) Grpcs() GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerConnectionPool) []GetVirtualGatewaySpecListenerConnectionPoolGrpc {
		return v.Grpcs
	}).(GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput)
}

func (o GetVirtualGatewaySpecListenerConnectionPoolOutput) Http2s() GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerConnectionPool) []GetVirtualGatewaySpecListenerConnectionPoolHttp2 {
		return v.Http2s
	}).(GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput)
}

func (o GetVirtualGatewaySpecListenerConnectionPoolOutput) Https() GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerConnectionPool) []GetVirtualGatewaySpecListenerConnectionPoolHttp {
		return v.Https
	}).(GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput)
}

type GetVirtualGatewaySpecListenerConnectionPoolArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerConnectionPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerConnectionPool)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerConnectionPoolArrayOutput) ToGetVirtualGatewaySpecListenerConnectionPoolArrayOutput() GetVirtualGatewaySpecListenerConnectionPoolArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolArrayOutput) ToGetVirtualGatewaySpecListenerConnectionPoolArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerConnectionPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerConnectionPool {
		return vs[0].([]GetVirtualGatewaySpecListenerConnectionPool)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerConnectionPoolOutput)
}

type GetVirtualGatewaySpecListenerConnectionPoolGrpc struct {
	MaxRequests int `pulumi:"maxRequests"`
}

// GetVirtualGatewaySpecListenerConnectionPoolGrpcInput is an input type that accepts GetVirtualGatewaySpecListenerConnectionPoolGrpcArgs and GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerConnectionPoolGrpcInput` via:
//
//	GetVirtualGatewaySpecListenerConnectionPoolGrpcArgs{...}
type GetVirtualGatewaySpecListenerConnectionPoolGrpcInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerConnectionPoolGrpcOutput() GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput
	ToGetVirtualGatewaySpecListenerConnectionPoolGrpcOutputWithContext(context.Context) GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput
}

type GetVirtualGatewaySpecListenerConnectionPoolGrpcArgs struct {
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (GetVirtualGatewaySpecListenerConnectionPoolGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerConnectionPoolGrpcArgs) ToGetVirtualGatewaySpecListenerConnectionPoolGrpcOutput() GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return i.ToGetVirtualGatewaySpecListenerConnectionPoolGrpcOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerConnectionPoolGrpcArgs) ToGetVirtualGatewaySpecListenerConnectionPoolGrpcOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput)
}

// GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayInput is an input type that accepts GetVirtualGatewaySpecListenerConnectionPoolGrpcArray and GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayInput` via:
//
//	GetVirtualGatewaySpecListenerConnectionPoolGrpcArray{ GetVirtualGatewaySpecListenerConnectionPoolGrpcArgs{...} }
type GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput() GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput
	ToGetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput
}

type GetVirtualGatewaySpecListenerConnectionPoolGrpcArray []GetVirtualGatewaySpecListenerConnectionPoolGrpcInput

func (GetVirtualGatewaySpecListenerConnectionPoolGrpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerConnectionPoolGrpcArray) ToGetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput() GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerConnectionPoolGrpcArray) ToGetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput)
}

type GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput) ToGetVirtualGatewaySpecListenerConnectionPoolGrpcOutput() GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput) ToGetVirtualGatewaySpecListenerConnectionPoolGrpcOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerConnectionPoolGrpc) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput) ToGetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput() GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput) ToGetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerConnectionPoolGrpc {
		return vs[0].([]GetVirtualGatewaySpecListenerConnectionPoolGrpc)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput)
}

type GetVirtualGatewaySpecListenerConnectionPoolHttp2 struct {
	MaxRequests int `pulumi:"maxRequests"`
}

// GetVirtualGatewaySpecListenerConnectionPoolHttp2Input is an input type that accepts GetVirtualGatewaySpecListenerConnectionPoolHttp2Args and GetVirtualGatewaySpecListenerConnectionPoolHttp2Output values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerConnectionPoolHttp2Input` via:
//
//	GetVirtualGatewaySpecListenerConnectionPoolHttp2Args{...}
type GetVirtualGatewaySpecListenerConnectionPoolHttp2Input interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerConnectionPoolHttp2Output() GetVirtualGatewaySpecListenerConnectionPoolHttp2Output
	ToGetVirtualGatewaySpecListenerConnectionPoolHttp2OutputWithContext(context.Context) GetVirtualGatewaySpecListenerConnectionPoolHttp2Output
}

type GetVirtualGatewaySpecListenerConnectionPoolHttp2Args struct {
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (GetVirtualGatewaySpecListenerConnectionPoolHttp2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerConnectionPoolHttp2Args) ToGetVirtualGatewaySpecListenerConnectionPoolHttp2Output() GetVirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return i.ToGetVirtualGatewaySpecListenerConnectionPoolHttp2OutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerConnectionPoolHttp2Args) ToGetVirtualGatewaySpecListenerConnectionPoolHttp2OutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerConnectionPoolHttp2Output)
}

// GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayInput is an input type that accepts GetVirtualGatewaySpecListenerConnectionPoolHttp2Array and GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayInput` via:
//
//	GetVirtualGatewaySpecListenerConnectionPoolHttp2Array{ GetVirtualGatewaySpecListenerConnectionPoolHttp2Args{...} }
type GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput() GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput
	ToGetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput
}

type GetVirtualGatewaySpecListenerConnectionPoolHttp2Array []GetVirtualGatewaySpecListenerConnectionPoolHttp2Input

func (GetVirtualGatewaySpecListenerConnectionPoolHttp2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerConnectionPoolHttp2Array) ToGetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput() GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerConnectionPoolHttp2Array) ToGetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput)
}

type GetVirtualGatewaySpecListenerConnectionPoolHttp2Output struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerConnectionPoolHttp2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerConnectionPoolHttp2Output) ToGetVirtualGatewaySpecListenerConnectionPoolHttp2Output() GetVirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolHttp2Output) ToGetVirtualGatewaySpecListenerConnectionPoolHttp2OutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolHttp2Output) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerConnectionPoolHttp2) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput) ToGetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput() GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput) ToGetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerConnectionPoolHttp2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerConnectionPoolHttp2 {
		return vs[0].([]GetVirtualGatewaySpecListenerConnectionPoolHttp2)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerConnectionPoolHttp2Output)
}

type GetVirtualGatewaySpecListenerConnectionPoolHttp struct {
	MaxConnections     int `pulumi:"maxConnections"`
	MaxPendingRequests int `pulumi:"maxPendingRequests"`
}

// GetVirtualGatewaySpecListenerConnectionPoolHttpInput is an input type that accepts GetVirtualGatewaySpecListenerConnectionPoolHttpArgs and GetVirtualGatewaySpecListenerConnectionPoolHttpOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerConnectionPoolHttpInput` via:
//
//	GetVirtualGatewaySpecListenerConnectionPoolHttpArgs{...}
type GetVirtualGatewaySpecListenerConnectionPoolHttpInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerConnectionPoolHttpOutput() GetVirtualGatewaySpecListenerConnectionPoolHttpOutput
	ToGetVirtualGatewaySpecListenerConnectionPoolHttpOutputWithContext(context.Context) GetVirtualGatewaySpecListenerConnectionPoolHttpOutput
}

type GetVirtualGatewaySpecListenerConnectionPoolHttpArgs struct {
	MaxConnections     pulumi.IntInput `pulumi:"maxConnections"`
	MaxPendingRequests pulumi.IntInput `pulumi:"maxPendingRequests"`
}

func (GetVirtualGatewaySpecListenerConnectionPoolHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerConnectionPoolHttpArgs) ToGetVirtualGatewaySpecListenerConnectionPoolHttpOutput() GetVirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return i.ToGetVirtualGatewaySpecListenerConnectionPoolHttpOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerConnectionPoolHttpArgs) ToGetVirtualGatewaySpecListenerConnectionPoolHttpOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerConnectionPoolHttpOutput)
}

// GetVirtualGatewaySpecListenerConnectionPoolHttpArrayInput is an input type that accepts GetVirtualGatewaySpecListenerConnectionPoolHttpArray and GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerConnectionPoolHttpArrayInput` via:
//
//	GetVirtualGatewaySpecListenerConnectionPoolHttpArray{ GetVirtualGatewaySpecListenerConnectionPoolHttpArgs{...} }
type GetVirtualGatewaySpecListenerConnectionPoolHttpArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput() GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput
	ToGetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput
}

type GetVirtualGatewaySpecListenerConnectionPoolHttpArray []GetVirtualGatewaySpecListenerConnectionPoolHttpInput

func (GetVirtualGatewaySpecListenerConnectionPoolHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerConnectionPoolHttpArray) ToGetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput() GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerConnectionPoolHttpArray) ToGetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput)
}

type GetVirtualGatewaySpecListenerConnectionPoolHttpOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerConnectionPoolHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerConnectionPoolHttpOutput) ToGetVirtualGatewaySpecListenerConnectionPoolHttpOutput() GetVirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolHttpOutput) ToGetVirtualGatewaySpecListenerConnectionPoolHttpOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolHttpOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerConnectionPoolHttp) int { return v.MaxConnections }).(pulumi.IntOutput)
}

func (o GetVirtualGatewaySpecListenerConnectionPoolHttpOutput) MaxPendingRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerConnectionPoolHttp) int { return v.MaxPendingRequests }).(pulumi.IntOutput)
}

type GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput) ToGetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput() GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput) ToGetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerConnectionPoolHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerConnectionPoolHttp {
		return vs[0].([]GetVirtualGatewaySpecListenerConnectionPoolHttp)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerConnectionPoolHttpOutput)
}

type GetVirtualGatewaySpecListenerHealthCheck struct {
	HealthyThreshold   int    `pulumi:"healthyThreshold"`
	IntervalMillis     int    `pulumi:"intervalMillis"`
	Path               string `pulumi:"path"`
	Port               int    `pulumi:"port"`
	Protocol           string `pulumi:"protocol"`
	TimeoutMillis      int    `pulumi:"timeoutMillis"`
	UnhealthyThreshold int    `pulumi:"unhealthyThreshold"`
}

// GetVirtualGatewaySpecListenerHealthCheckInput is an input type that accepts GetVirtualGatewaySpecListenerHealthCheckArgs and GetVirtualGatewaySpecListenerHealthCheckOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerHealthCheckInput` via:
//
//	GetVirtualGatewaySpecListenerHealthCheckArgs{...}
type GetVirtualGatewaySpecListenerHealthCheckInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerHealthCheckOutput() GetVirtualGatewaySpecListenerHealthCheckOutput
	ToGetVirtualGatewaySpecListenerHealthCheckOutputWithContext(context.Context) GetVirtualGatewaySpecListenerHealthCheckOutput
}

type GetVirtualGatewaySpecListenerHealthCheckArgs struct {
	HealthyThreshold   pulumi.IntInput    `pulumi:"healthyThreshold"`
	IntervalMillis     pulumi.IntInput    `pulumi:"intervalMillis"`
	Path               pulumi.StringInput `pulumi:"path"`
	Port               pulumi.IntInput    `pulumi:"port"`
	Protocol           pulumi.StringInput `pulumi:"protocol"`
	TimeoutMillis      pulumi.IntInput    `pulumi:"timeoutMillis"`
	UnhealthyThreshold pulumi.IntInput    `pulumi:"unhealthyThreshold"`
}

func (GetVirtualGatewaySpecListenerHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerHealthCheck)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerHealthCheckArgs) ToGetVirtualGatewaySpecListenerHealthCheckOutput() GetVirtualGatewaySpecListenerHealthCheckOutput {
	return i.ToGetVirtualGatewaySpecListenerHealthCheckOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerHealthCheckArgs) ToGetVirtualGatewaySpecListenerHealthCheckOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerHealthCheckOutput)
}

// GetVirtualGatewaySpecListenerHealthCheckArrayInput is an input type that accepts GetVirtualGatewaySpecListenerHealthCheckArray and GetVirtualGatewaySpecListenerHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerHealthCheckArrayInput` via:
//
//	GetVirtualGatewaySpecListenerHealthCheckArray{ GetVirtualGatewaySpecListenerHealthCheckArgs{...} }
type GetVirtualGatewaySpecListenerHealthCheckArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerHealthCheckArrayOutput() GetVirtualGatewaySpecListenerHealthCheckArrayOutput
	ToGetVirtualGatewaySpecListenerHealthCheckArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerHealthCheckArrayOutput
}

type GetVirtualGatewaySpecListenerHealthCheckArray []GetVirtualGatewaySpecListenerHealthCheckInput

func (GetVirtualGatewaySpecListenerHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerHealthCheck)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerHealthCheckArray) ToGetVirtualGatewaySpecListenerHealthCheckArrayOutput() GetVirtualGatewaySpecListenerHealthCheckArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerHealthCheckArray) ToGetVirtualGatewaySpecListenerHealthCheckArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerHealthCheckArrayOutput)
}

type GetVirtualGatewaySpecListenerHealthCheckOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerHealthCheck)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerHealthCheckOutput) ToGetVirtualGatewaySpecListenerHealthCheckOutput() GetVirtualGatewaySpecListenerHealthCheckOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerHealthCheckOutput) ToGetVirtualGatewaySpecListenerHealthCheckOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerHealthCheckOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

func (o GetVirtualGatewaySpecListenerHealthCheckOutput) IntervalMillis() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerHealthCheck) int { return v.IntervalMillis }).(pulumi.IntOutput)
}

func (o GetVirtualGatewaySpecListenerHealthCheckOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerHealthCheck) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetVirtualGatewaySpecListenerHealthCheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerHealthCheck) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetVirtualGatewaySpecListenerHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetVirtualGatewaySpecListenerHealthCheckOutput) TimeoutMillis() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerHealthCheck) int { return v.TimeoutMillis }).(pulumi.IntOutput)
}

func (o GetVirtualGatewaySpecListenerHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type GetVirtualGatewaySpecListenerHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerHealthCheck)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerHealthCheckArrayOutput) ToGetVirtualGatewaySpecListenerHealthCheckArrayOutput() GetVirtualGatewaySpecListenerHealthCheckArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerHealthCheckArrayOutput) ToGetVirtualGatewaySpecListenerHealthCheckArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerHealthCheckArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerHealthCheckArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerHealthCheck {
		return vs[0].([]GetVirtualGatewaySpecListenerHealthCheck)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerHealthCheckOutput)
}

type GetVirtualGatewaySpecListenerPortMapping struct {
	Port     int    `pulumi:"port"`
	Protocol string `pulumi:"protocol"`
}

// GetVirtualGatewaySpecListenerPortMappingInput is an input type that accepts GetVirtualGatewaySpecListenerPortMappingArgs and GetVirtualGatewaySpecListenerPortMappingOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerPortMappingInput` via:
//
//	GetVirtualGatewaySpecListenerPortMappingArgs{...}
type GetVirtualGatewaySpecListenerPortMappingInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerPortMappingOutput() GetVirtualGatewaySpecListenerPortMappingOutput
	ToGetVirtualGatewaySpecListenerPortMappingOutputWithContext(context.Context) GetVirtualGatewaySpecListenerPortMappingOutput
}

type GetVirtualGatewaySpecListenerPortMappingArgs struct {
	Port     pulumi.IntInput    `pulumi:"port"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetVirtualGatewaySpecListenerPortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerPortMapping)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerPortMappingArgs) ToGetVirtualGatewaySpecListenerPortMappingOutput() GetVirtualGatewaySpecListenerPortMappingOutput {
	return i.ToGetVirtualGatewaySpecListenerPortMappingOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerPortMappingArgs) ToGetVirtualGatewaySpecListenerPortMappingOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerPortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerPortMappingOutput)
}

// GetVirtualGatewaySpecListenerPortMappingArrayInput is an input type that accepts GetVirtualGatewaySpecListenerPortMappingArray and GetVirtualGatewaySpecListenerPortMappingArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerPortMappingArrayInput` via:
//
//	GetVirtualGatewaySpecListenerPortMappingArray{ GetVirtualGatewaySpecListenerPortMappingArgs{...} }
type GetVirtualGatewaySpecListenerPortMappingArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerPortMappingArrayOutput() GetVirtualGatewaySpecListenerPortMappingArrayOutput
	ToGetVirtualGatewaySpecListenerPortMappingArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerPortMappingArrayOutput
}

type GetVirtualGatewaySpecListenerPortMappingArray []GetVirtualGatewaySpecListenerPortMappingInput

func (GetVirtualGatewaySpecListenerPortMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerPortMapping)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerPortMappingArray) ToGetVirtualGatewaySpecListenerPortMappingArrayOutput() GetVirtualGatewaySpecListenerPortMappingArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerPortMappingArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerPortMappingArray) ToGetVirtualGatewaySpecListenerPortMappingArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerPortMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerPortMappingArrayOutput)
}

type GetVirtualGatewaySpecListenerPortMappingOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerPortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerPortMapping)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerPortMappingOutput) ToGetVirtualGatewaySpecListenerPortMappingOutput() GetVirtualGatewaySpecListenerPortMappingOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerPortMappingOutput) ToGetVirtualGatewaySpecListenerPortMappingOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerPortMappingOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerPortMappingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerPortMapping) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetVirtualGatewaySpecListenerPortMappingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerPortMapping) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetVirtualGatewaySpecListenerPortMappingArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerPortMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerPortMapping)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerPortMappingArrayOutput) ToGetVirtualGatewaySpecListenerPortMappingArrayOutput() GetVirtualGatewaySpecListenerPortMappingArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerPortMappingArrayOutput) ToGetVirtualGatewaySpecListenerPortMappingArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerPortMappingArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerPortMappingArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerPortMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerPortMapping {
		return vs[0].([]GetVirtualGatewaySpecListenerPortMapping)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerPortMappingOutput)
}

type GetVirtualGatewaySpecListenerTl struct {
	Certificates []GetVirtualGatewaySpecListenerTlCertificate `pulumi:"certificates"`
	Mode         string                                       `pulumi:"mode"`
	Validations  []GetVirtualGatewaySpecListenerTlValidation  `pulumi:"validations"`
}

// GetVirtualGatewaySpecListenerTlInput is an input type that accepts GetVirtualGatewaySpecListenerTlArgs and GetVirtualGatewaySpecListenerTlOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlInput` via:
//
//	GetVirtualGatewaySpecListenerTlArgs{...}
type GetVirtualGatewaySpecListenerTlInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlOutput() GetVirtualGatewaySpecListenerTlOutput
	ToGetVirtualGatewaySpecListenerTlOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlOutput
}

type GetVirtualGatewaySpecListenerTlArgs struct {
	Certificates GetVirtualGatewaySpecListenerTlCertificateArrayInput `pulumi:"certificates"`
	Mode         pulumi.StringInput                                   `pulumi:"mode"`
	Validations  GetVirtualGatewaySpecListenerTlValidationArrayInput  `pulumi:"validations"`
}

func (GetVirtualGatewaySpecListenerTlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTl)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlArgs) ToGetVirtualGatewaySpecListenerTlOutput() GetVirtualGatewaySpecListenerTlOutput {
	return i.ToGetVirtualGatewaySpecListenerTlOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlArgs) ToGetVirtualGatewaySpecListenerTlOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlOutput)
}

// GetVirtualGatewaySpecListenerTlArrayInput is an input type that accepts GetVirtualGatewaySpecListenerTlArray and GetVirtualGatewaySpecListenerTlArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlArrayInput` via:
//
//	GetVirtualGatewaySpecListenerTlArray{ GetVirtualGatewaySpecListenerTlArgs{...} }
type GetVirtualGatewaySpecListenerTlArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlArrayOutput() GetVirtualGatewaySpecListenerTlArrayOutput
	ToGetVirtualGatewaySpecListenerTlArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlArrayOutput
}

type GetVirtualGatewaySpecListenerTlArray []GetVirtualGatewaySpecListenerTlInput

func (GetVirtualGatewaySpecListenerTlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTl)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlArray) ToGetVirtualGatewaySpecListenerTlArrayOutput() GetVirtualGatewaySpecListenerTlArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerTlArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlArray) ToGetVirtualGatewaySpecListenerTlArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlArrayOutput)
}

type GetVirtualGatewaySpecListenerTlOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTl)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlOutput) ToGetVirtualGatewaySpecListenerTlOutput() GetVirtualGatewaySpecListenerTlOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlOutput) ToGetVirtualGatewaySpecListenerTlOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlOutput) Certificates() GetVirtualGatewaySpecListenerTlCertificateArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTl) []GetVirtualGatewaySpecListenerTlCertificate {
		return v.Certificates
	}).(GetVirtualGatewaySpecListenerTlCertificateArrayOutput)
}

func (o GetVirtualGatewaySpecListenerTlOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTl) string { return v.Mode }).(pulumi.StringOutput)
}

func (o GetVirtualGatewaySpecListenerTlOutput) Validations() GetVirtualGatewaySpecListenerTlValidationArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTl) []GetVirtualGatewaySpecListenerTlValidation {
		return v.Validations
	}).(GetVirtualGatewaySpecListenerTlValidationArrayOutput)
}

type GetVirtualGatewaySpecListenerTlArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTl)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlArrayOutput) ToGetVirtualGatewaySpecListenerTlArrayOutput() GetVirtualGatewaySpecListenerTlArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlArrayOutput) ToGetVirtualGatewaySpecListenerTlArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerTlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerTl {
		return vs[0].([]GetVirtualGatewaySpecListenerTl)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerTlOutput)
}

type GetVirtualGatewaySpecListenerTlCertificate struct {
	Acms  []GetVirtualGatewaySpecListenerTlCertificateAcm  `pulumi:"acms"`
	Files []GetVirtualGatewaySpecListenerTlCertificateFile `pulumi:"files"`
	Sds   []GetVirtualGatewaySpecListenerTlCertificateSd   `pulumi:"sds"`
}

// GetVirtualGatewaySpecListenerTlCertificateInput is an input type that accepts GetVirtualGatewaySpecListenerTlCertificateArgs and GetVirtualGatewaySpecListenerTlCertificateOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlCertificateInput` via:
//
//	GetVirtualGatewaySpecListenerTlCertificateArgs{...}
type GetVirtualGatewaySpecListenerTlCertificateInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlCertificateOutput() GetVirtualGatewaySpecListenerTlCertificateOutput
	ToGetVirtualGatewaySpecListenerTlCertificateOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlCertificateOutput
}

type GetVirtualGatewaySpecListenerTlCertificateArgs struct {
	Acms  GetVirtualGatewaySpecListenerTlCertificateAcmArrayInput  `pulumi:"acms"`
	Files GetVirtualGatewaySpecListenerTlCertificateFileArrayInput `pulumi:"files"`
	Sds   GetVirtualGatewaySpecListenerTlCertificateSdArrayInput   `pulumi:"sds"`
}

func (GetVirtualGatewaySpecListenerTlCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificate)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlCertificateArgs) ToGetVirtualGatewaySpecListenerTlCertificateOutput() GetVirtualGatewaySpecListenerTlCertificateOutput {
	return i.ToGetVirtualGatewaySpecListenerTlCertificateOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlCertificateArgs) ToGetVirtualGatewaySpecListenerTlCertificateOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlCertificateOutput)
}

// GetVirtualGatewaySpecListenerTlCertificateArrayInput is an input type that accepts GetVirtualGatewaySpecListenerTlCertificateArray and GetVirtualGatewaySpecListenerTlCertificateArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlCertificateArrayInput` via:
//
//	GetVirtualGatewaySpecListenerTlCertificateArray{ GetVirtualGatewaySpecListenerTlCertificateArgs{...} }
type GetVirtualGatewaySpecListenerTlCertificateArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlCertificateArrayOutput() GetVirtualGatewaySpecListenerTlCertificateArrayOutput
	ToGetVirtualGatewaySpecListenerTlCertificateArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlCertificateArrayOutput
}

type GetVirtualGatewaySpecListenerTlCertificateArray []GetVirtualGatewaySpecListenerTlCertificateInput

func (GetVirtualGatewaySpecListenerTlCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlCertificate)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlCertificateArray) ToGetVirtualGatewaySpecListenerTlCertificateArrayOutput() GetVirtualGatewaySpecListenerTlCertificateArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerTlCertificateArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlCertificateArray) ToGetVirtualGatewaySpecListenerTlCertificateArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlCertificateArrayOutput)
}

type GetVirtualGatewaySpecListenerTlCertificateOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificate)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlCertificateOutput) ToGetVirtualGatewaySpecListenerTlCertificateOutput() GetVirtualGatewaySpecListenerTlCertificateOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateOutput) ToGetVirtualGatewaySpecListenerTlCertificateOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateOutput) Acms() GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlCertificate) []GetVirtualGatewaySpecListenerTlCertificateAcm {
		return v.Acms
	}).(GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput)
}

func (o GetVirtualGatewaySpecListenerTlCertificateOutput) Files() GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlCertificate) []GetVirtualGatewaySpecListenerTlCertificateFile {
		return v.Files
	}).(GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput)
}

func (o GetVirtualGatewaySpecListenerTlCertificateOutput) Sds() GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlCertificate) []GetVirtualGatewaySpecListenerTlCertificateSd {
		return v.Sds
	}).(GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput)
}

type GetVirtualGatewaySpecListenerTlCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlCertificate)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlCertificateArrayOutput) ToGetVirtualGatewaySpecListenerTlCertificateArrayOutput() GetVirtualGatewaySpecListenerTlCertificateArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateArrayOutput) ToGetVirtualGatewaySpecListenerTlCertificateArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerTlCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerTlCertificate {
		return vs[0].([]GetVirtualGatewaySpecListenerTlCertificate)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerTlCertificateOutput)
}

type GetVirtualGatewaySpecListenerTlCertificateAcm struct {
	CertificateArn string `pulumi:"certificateArn"`
}

// GetVirtualGatewaySpecListenerTlCertificateAcmInput is an input type that accepts GetVirtualGatewaySpecListenerTlCertificateAcmArgs and GetVirtualGatewaySpecListenerTlCertificateAcmOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlCertificateAcmInput` via:
//
//	GetVirtualGatewaySpecListenerTlCertificateAcmArgs{...}
type GetVirtualGatewaySpecListenerTlCertificateAcmInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlCertificateAcmOutput() GetVirtualGatewaySpecListenerTlCertificateAcmOutput
	ToGetVirtualGatewaySpecListenerTlCertificateAcmOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlCertificateAcmOutput
}

type GetVirtualGatewaySpecListenerTlCertificateAcmArgs struct {
	CertificateArn pulumi.StringInput `pulumi:"certificateArn"`
}

func (GetVirtualGatewaySpecListenerTlCertificateAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificateAcm)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlCertificateAcmArgs) ToGetVirtualGatewaySpecListenerTlCertificateAcmOutput() GetVirtualGatewaySpecListenerTlCertificateAcmOutput {
	return i.ToGetVirtualGatewaySpecListenerTlCertificateAcmOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlCertificateAcmArgs) ToGetVirtualGatewaySpecListenerTlCertificateAcmOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlCertificateAcmOutput)
}

// GetVirtualGatewaySpecListenerTlCertificateAcmArrayInput is an input type that accepts GetVirtualGatewaySpecListenerTlCertificateAcmArray and GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlCertificateAcmArrayInput` via:
//
//	GetVirtualGatewaySpecListenerTlCertificateAcmArray{ GetVirtualGatewaySpecListenerTlCertificateAcmArgs{...} }
type GetVirtualGatewaySpecListenerTlCertificateAcmArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput() GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput
	ToGetVirtualGatewaySpecListenerTlCertificateAcmArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput
}

type GetVirtualGatewaySpecListenerTlCertificateAcmArray []GetVirtualGatewaySpecListenerTlCertificateAcmInput

func (GetVirtualGatewaySpecListenerTlCertificateAcmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlCertificateAcm)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlCertificateAcmArray) ToGetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput() GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerTlCertificateAcmArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlCertificateAcmArray) ToGetVirtualGatewaySpecListenerTlCertificateAcmArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput)
}

type GetVirtualGatewaySpecListenerTlCertificateAcmOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlCertificateAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificateAcm)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlCertificateAcmOutput) ToGetVirtualGatewaySpecListenerTlCertificateAcmOutput() GetVirtualGatewaySpecListenerTlCertificateAcmOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateAcmOutput) ToGetVirtualGatewaySpecListenerTlCertificateAcmOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateAcmOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateAcmOutput) CertificateArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlCertificateAcm) string { return v.CertificateArn }).(pulumi.StringOutput)
}

type GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlCertificateAcm)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput) ToGetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput() GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput) ToGetVirtualGatewaySpecListenerTlCertificateAcmArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerTlCertificateAcmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerTlCertificateAcm {
		return vs[0].([]GetVirtualGatewaySpecListenerTlCertificateAcm)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerTlCertificateAcmOutput)
}

type GetVirtualGatewaySpecListenerTlCertificateFile struct {
	CertificateChain string `pulumi:"certificateChain"`
	PrivateKey       string `pulumi:"privateKey"`
}

// GetVirtualGatewaySpecListenerTlCertificateFileInput is an input type that accepts GetVirtualGatewaySpecListenerTlCertificateFileArgs and GetVirtualGatewaySpecListenerTlCertificateFileOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlCertificateFileInput` via:
//
//	GetVirtualGatewaySpecListenerTlCertificateFileArgs{...}
type GetVirtualGatewaySpecListenerTlCertificateFileInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlCertificateFileOutput() GetVirtualGatewaySpecListenerTlCertificateFileOutput
	ToGetVirtualGatewaySpecListenerTlCertificateFileOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlCertificateFileOutput
}

type GetVirtualGatewaySpecListenerTlCertificateFileArgs struct {
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	PrivateKey       pulumi.StringInput `pulumi:"privateKey"`
}

func (GetVirtualGatewaySpecListenerTlCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificateFile)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlCertificateFileArgs) ToGetVirtualGatewaySpecListenerTlCertificateFileOutput() GetVirtualGatewaySpecListenerTlCertificateFileOutput {
	return i.ToGetVirtualGatewaySpecListenerTlCertificateFileOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlCertificateFileArgs) ToGetVirtualGatewaySpecListenerTlCertificateFileOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlCertificateFileOutput)
}

// GetVirtualGatewaySpecListenerTlCertificateFileArrayInput is an input type that accepts GetVirtualGatewaySpecListenerTlCertificateFileArray and GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlCertificateFileArrayInput` via:
//
//	GetVirtualGatewaySpecListenerTlCertificateFileArray{ GetVirtualGatewaySpecListenerTlCertificateFileArgs{...} }
type GetVirtualGatewaySpecListenerTlCertificateFileArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlCertificateFileArrayOutput() GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput
	ToGetVirtualGatewaySpecListenerTlCertificateFileArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput
}

type GetVirtualGatewaySpecListenerTlCertificateFileArray []GetVirtualGatewaySpecListenerTlCertificateFileInput

func (GetVirtualGatewaySpecListenerTlCertificateFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlCertificateFile)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlCertificateFileArray) ToGetVirtualGatewaySpecListenerTlCertificateFileArrayOutput() GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerTlCertificateFileArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlCertificateFileArray) ToGetVirtualGatewaySpecListenerTlCertificateFileArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput)
}

type GetVirtualGatewaySpecListenerTlCertificateFileOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificateFile)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlCertificateFileOutput) ToGetVirtualGatewaySpecListenerTlCertificateFileOutput() GetVirtualGatewaySpecListenerTlCertificateFileOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateFileOutput) ToGetVirtualGatewaySpecListenerTlCertificateFileOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateFileOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlCertificateFile) string { return v.CertificateChain }).(pulumi.StringOutput)
}

func (o GetVirtualGatewaySpecListenerTlCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlCertificateFile) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlCertificateFile)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput) ToGetVirtualGatewaySpecListenerTlCertificateFileArrayOutput() GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput) ToGetVirtualGatewaySpecListenerTlCertificateFileArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerTlCertificateFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerTlCertificateFile {
		return vs[0].([]GetVirtualGatewaySpecListenerTlCertificateFile)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerTlCertificateFileOutput)
}

type GetVirtualGatewaySpecListenerTlCertificateSd struct {
	SecretName string `pulumi:"secretName"`
}

// GetVirtualGatewaySpecListenerTlCertificateSdInput is an input type that accepts GetVirtualGatewaySpecListenerTlCertificateSdArgs and GetVirtualGatewaySpecListenerTlCertificateSdOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlCertificateSdInput` via:
//
//	GetVirtualGatewaySpecListenerTlCertificateSdArgs{...}
type GetVirtualGatewaySpecListenerTlCertificateSdInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlCertificateSdOutput() GetVirtualGatewaySpecListenerTlCertificateSdOutput
	ToGetVirtualGatewaySpecListenerTlCertificateSdOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlCertificateSdOutput
}

type GetVirtualGatewaySpecListenerTlCertificateSdArgs struct {
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (GetVirtualGatewaySpecListenerTlCertificateSdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificateSd)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlCertificateSdArgs) ToGetVirtualGatewaySpecListenerTlCertificateSdOutput() GetVirtualGatewaySpecListenerTlCertificateSdOutput {
	return i.ToGetVirtualGatewaySpecListenerTlCertificateSdOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlCertificateSdArgs) ToGetVirtualGatewaySpecListenerTlCertificateSdOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateSdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlCertificateSdOutput)
}

// GetVirtualGatewaySpecListenerTlCertificateSdArrayInput is an input type that accepts GetVirtualGatewaySpecListenerTlCertificateSdArray and GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlCertificateSdArrayInput` via:
//
//	GetVirtualGatewaySpecListenerTlCertificateSdArray{ GetVirtualGatewaySpecListenerTlCertificateSdArgs{...} }
type GetVirtualGatewaySpecListenerTlCertificateSdArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlCertificateSdArrayOutput() GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput
	ToGetVirtualGatewaySpecListenerTlCertificateSdArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput
}

type GetVirtualGatewaySpecListenerTlCertificateSdArray []GetVirtualGatewaySpecListenerTlCertificateSdInput

func (GetVirtualGatewaySpecListenerTlCertificateSdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlCertificateSd)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlCertificateSdArray) ToGetVirtualGatewaySpecListenerTlCertificateSdArrayOutput() GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerTlCertificateSdArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlCertificateSdArray) ToGetVirtualGatewaySpecListenerTlCertificateSdArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput)
}

type GetVirtualGatewaySpecListenerTlCertificateSdOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlCertificateSdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificateSd)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlCertificateSdOutput) ToGetVirtualGatewaySpecListenerTlCertificateSdOutput() GetVirtualGatewaySpecListenerTlCertificateSdOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateSdOutput) ToGetVirtualGatewaySpecListenerTlCertificateSdOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateSdOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateSdOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlCertificateSd) string { return v.SecretName }).(pulumi.StringOutput)
}

type GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlCertificateSd)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput) ToGetVirtualGatewaySpecListenerTlCertificateSdArrayOutput() GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput) ToGetVirtualGatewaySpecListenerTlCertificateSdArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerTlCertificateSdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerTlCertificateSd {
		return vs[0].([]GetVirtualGatewaySpecListenerTlCertificateSd)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerTlCertificateSdOutput)
}

type GetVirtualGatewaySpecListenerTlValidation struct {
	SubjectAlternativeNames []GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeName `pulumi:"subjectAlternativeNames"`
	Trusts                  []GetVirtualGatewaySpecListenerTlValidationTrust                  `pulumi:"trusts"`
}

// GetVirtualGatewaySpecListenerTlValidationInput is an input type that accepts GetVirtualGatewaySpecListenerTlValidationArgs and GetVirtualGatewaySpecListenerTlValidationOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlValidationInput` via:
//
//	GetVirtualGatewaySpecListenerTlValidationArgs{...}
type GetVirtualGatewaySpecListenerTlValidationInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlValidationOutput() GetVirtualGatewaySpecListenerTlValidationOutput
	ToGetVirtualGatewaySpecListenerTlValidationOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlValidationOutput
}

type GetVirtualGatewaySpecListenerTlValidationArgs struct {
	SubjectAlternativeNames GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayInput `pulumi:"subjectAlternativeNames"`
	Trusts                  GetVirtualGatewaySpecListenerTlValidationTrustArrayInput                  `pulumi:"trusts"`
}

func (GetVirtualGatewaySpecListenerTlValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidation)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlValidationArgs) ToGetVirtualGatewaySpecListenerTlValidationOutput() GetVirtualGatewaySpecListenerTlValidationOutput {
	return i.ToGetVirtualGatewaySpecListenerTlValidationOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlValidationArgs) ToGetVirtualGatewaySpecListenerTlValidationOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlValidationOutput)
}

// GetVirtualGatewaySpecListenerTlValidationArrayInput is an input type that accepts GetVirtualGatewaySpecListenerTlValidationArray and GetVirtualGatewaySpecListenerTlValidationArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlValidationArrayInput` via:
//
//	GetVirtualGatewaySpecListenerTlValidationArray{ GetVirtualGatewaySpecListenerTlValidationArgs{...} }
type GetVirtualGatewaySpecListenerTlValidationArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlValidationArrayOutput() GetVirtualGatewaySpecListenerTlValidationArrayOutput
	ToGetVirtualGatewaySpecListenerTlValidationArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlValidationArrayOutput
}

type GetVirtualGatewaySpecListenerTlValidationArray []GetVirtualGatewaySpecListenerTlValidationInput

func (GetVirtualGatewaySpecListenerTlValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlValidation)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlValidationArray) ToGetVirtualGatewaySpecListenerTlValidationArrayOutput() GetVirtualGatewaySpecListenerTlValidationArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerTlValidationArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlValidationArray) ToGetVirtualGatewaySpecListenerTlValidationArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlValidationArrayOutput)
}

type GetVirtualGatewaySpecListenerTlValidationOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidation)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlValidationOutput) ToGetVirtualGatewaySpecListenerTlValidationOutput() GetVirtualGatewaySpecListenerTlValidationOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationOutput) ToGetVirtualGatewaySpecListenerTlValidationOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationOutput) SubjectAlternativeNames() GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlValidation) []GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeName {
		return v.SubjectAlternativeNames
	}).(GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput)
}

func (o GetVirtualGatewaySpecListenerTlValidationOutput) Trusts() GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlValidation) []GetVirtualGatewaySpecListenerTlValidationTrust {
		return v.Trusts
	}).(GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput)
}

type GetVirtualGatewaySpecListenerTlValidationArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlValidation)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlValidationArrayOutput) ToGetVirtualGatewaySpecListenerTlValidationArrayOutput() GetVirtualGatewaySpecListenerTlValidationArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationArrayOutput) ToGetVirtualGatewaySpecListenerTlValidationArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerTlValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerTlValidation {
		return vs[0].([]GetVirtualGatewaySpecListenerTlValidation)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerTlValidationOutput)
}

type GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeName struct {
	Matches []GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatch `pulumi:"matches"`
}

// GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameInput is an input type that accepts GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArgs and GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameInput` via:
//
//	GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArgs{...}
type GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput() GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput
	ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput
}

type GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArgs struct {
	Matches GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayInput `pulumi:"matches"`
}

func (GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArgs) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput() GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput {
	return i.ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArgs) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput)
}

// GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayInput is an input type that accepts GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArray and GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayInput` via:
//
//	GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArray{ GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArgs{...} }
type GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput() GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput
	ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput
}

type GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArray []GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameInput

func (GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArray) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput() GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArray) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput)
}

type GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput() GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput) Matches() GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeName) []GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatch {
		return v.Matches
	}).(GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput)
}

type GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput() GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeName {
		return vs[0].([]GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeName)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput)
}

type GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatch struct {
	Exacts []string `pulumi:"exacts"`
}

// GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchInput is an input type that accepts GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArgs and GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchInput` via:
//
//	GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArgs{...}
type GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput() GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput
	ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput
}

type GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArgs struct {
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArgs) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput() GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput {
	return i.ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArgs) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput)
}

// GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayInput is an input type that accepts GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArray and GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayInput` via:
//
//	GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArray{ GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArgs{...} }
type GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput
	ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput
}

type GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArray []GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchInput

func (GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArray) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArray) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput)
}

type GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput() GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatch) []string { return v.Exacts }).(pulumi.StringArrayOutput)
}

type GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput) ToGetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatch {
		return vs[0].([]GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatch)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput)
}

type GetVirtualGatewaySpecListenerTlValidationTrust struct {
	Files []GetVirtualGatewaySpecListenerTlValidationTrustFile `pulumi:"files"`
	Sds   []GetVirtualGatewaySpecListenerTlValidationTrustSd   `pulumi:"sds"`
}

// GetVirtualGatewaySpecListenerTlValidationTrustInput is an input type that accepts GetVirtualGatewaySpecListenerTlValidationTrustArgs and GetVirtualGatewaySpecListenerTlValidationTrustOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlValidationTrustInput` via:
//
//	GetVirtualGatewaySpecListenerTlValidationTrustArgs{...}
type GetVirtualGatewaySpecListenerTlValidationTrustInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlValidationTrustOutput() GetVirtualGatewaySpecListenerTlValidationTrustOutput
	ToGetVirtualGatewaySpecListenerTlValidationTrustOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlValidationTrustOutput
}

type GetVirtualGatewaySpecListenerTlValidationTrustArgs struct {
	Files GetVirtualGatewaySpecListenerTlValidationTrustFileArrayInput `pulumi:"files"`
	Sds   GetVirtualGatewaySpecListenerTlValidationTrustSdArrayInput   `pulumi:"sds"`
}

func (GetVirtualGatewaySpecListenerTlValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationTrust)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlValidationTrustArgs) ToGetVirtualGatewaySpecListenerTlValidationTrustOutput() GetVirtualGatewaySpecListenerTlValidationTrustOutput {
	return i.ToGetVirtualGatewaySpecListenerTlValidationTrustOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlValidationTrustArgs) ToGetVirtualGatewaySpecListenerTlValidationTrustOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlValidationTrustOutput)
}

// GetVirtualGatewaySpecListenerTlValidationTrustArrayInput is an input type that accepts GetVirtualGatewaySpecListenerTlValidationTrustArray and GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlValidationTrustArrayInput` via:
//
//	GetVirtualGatewaySpecListenerTlValidationTrustArray{ GetVirtualGatewaySpecListenerTlValidationTrustArgs{...} }
type GetVirtualGatewaySpecListenerTlValidationTrustArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlValidationTrustArrayOutput() GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput
	ToGetVirtualGatewaySpecListenerTlValidationTrustArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput
}

type GetVirtualGatewaySpecListenerTlValidationTrustArray []GetVirtualGatewaySpecListenerTlValidationTrustInput

func (GetVirtualGatewaySpecListenerTlValidationTrustArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlValidationTrust)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlValidationTrustArray) ToGetVirtualGatewaySpecListenerTlValidationTrustArrayOutput() GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerTlValidationTrustArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlValidationTrustArray) ToGetVirtualGatewaySpecListenerTlValidationTrustArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput)
}

type GetVirtualGatewaySpecListenerTlValidationTrustOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationTrust)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustOutput) ToGetVirtualGatewaySpecListenerTlValidationTrustOutput() GetVirtualGatewaySpecListenerTlValidationTrustOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustOutput) ToGetVirtualGatewaySpecListenerTlValidationTrustOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationTrustOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustOutput) Files() GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlValidationTrust) []GetVirtualGatewaySpecListenerTlValidationTrustFile {
		return v.Files
	}).(GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput)
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustOutput) Sds() GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlValidationTrust) []GetVirtualGatewaySpecListenerTlValidationTrustSd {
		return v.Sds
	}).(GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput)
}

type GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlValidationTrust)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput) ToGetVirtualGatewaySpecListenerTlValidationTrustArrayOutput() GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput) ToGetVirtualGatewaySpecListenerTlValidationTrustArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerTlValidationTrustOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerTlValidationTrust {
		return vs[0].([]GetVirtualGatewaySpecListenerTlValidationTrust)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerTlValidationTrustOutput)
}

type GetVirtualGatewaySpecListenerTlValidationTrustFile struct {
	CertificateChain string `pulumi:"certificateChain"`
}

// GetVirtualGatewaySpecListenerTlValidationTrustFileInput is an input type that accepts GetVirtualGatewaySpecListenerTlValidationTrustFileArgs and GetVirtualGatewaySpecListenerTlValidationTrustFileOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlValidationTrustFileInput` via:
//
//	GetVirtualGatewaySpecListenerTlValidationTrustFileArgs{...}
type GetVirtualGatewaySpecListenerTlValidationTrustFileInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlValidationTrustFileOutput() GetVirtualGatewaySpecListenerTlValidationTrustFileOutput
	ToGetVirtualGatewaySpecListenerTlValidationTrustFileOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlValidationTrustFileOutput
}

type GetVirtualGatewaySpecListenerTlValidationTrustFileArgs struct {
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (GetVirtualGatewaySpecListenerTlValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationTrustFile)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlValidationTrustFileArgs) ToGetVirtualGatewaySpecListenerTlValidationTrustFileOutput() GetVirtualGatewaySpecListenerTlValidationTrustFileOutput {
	return i.ToGetVirtualGatewaySpecListenerTlValidationTrustFileOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlValidationTrustFileArgs) ToGetVirtualGatewaySpecListenerTlValidationTrustFileOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlValidationTrustFileOutput)
}

// GetVirtualGatewaySpecListenerTlValidationTrustFileArrayInput is an input type that accepts GetVirtualGatewaySpecListenerTlValidationTrustFileArray and GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlValidationTrustFileArrayInput` via:
//
//	GetVirtualGatewaySpecListenerTlValidationTrustFileArray{ GetVirtualGatewaySpecListenerTlValidationTrustFileArgs{...} }
type GetVirtualGatewaySpecListenerTlValidationTrustFileArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput() GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput
	ToGetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput
}

type GetVirtualGatewaySpecListenerTlValidationTrustFileArray []GetVirtualGatewaySpecListenerTlValidationTrustFileInput

func (GetVirtualGatewaySpecListenerTlValidationTrustFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlValidationTrustFile)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlValidationTrustFileArray) ToGetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput() GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlValidationTrustFileArray) ToGetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput)
}

type GetVirtualGatewaySpecListenerTlValidationTrustFileOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationTrustFile)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustFileOutput) ToGetVirtualGatewaySpecListenerTlValidationTrustFileOutput() GetVirtualGatewaySpecListenerTlValidationTrustFileOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustFileOutput) ToGetVirtualGatewaySpecListenerTlValidationTrustFileOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationTrustFileOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlValidationTrustFile) string { return v.CertificateChain }).(pulumi.StringOutput)
}

type GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlValidationTrustFile)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput) ToGetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput() GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput) ToGetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerTlValidationTrustFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerTlValidationTrustFile {
		return vs[0].([]GetVirtualGatewaySpecListenerTlValidationTrustFile)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerTlValidationTrustFileOutput)
}

type GetVirtualGatewaySpecListenerTlValidationTrustSd struct {
	SecretName string `pulumi:"secretName"`
}

// GetVirtualGatewaySpecListenerTlValidationTrustSdInput is an input type that accepts GetVirtualGatewaySpecListenerTlValidationTrustSdArgs and GetVirtualGatewaySpecListenerTlValidationTrustSdOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlValidationTrustSdInput` via:
//
//	GetVirtualGatewaySpecListenerTlValidationTrustSdArgs{...}
type GetVirtualGatewaySpecListenerTlValidationTrustSdInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlValidationTrustSdOutput() GetVirtualGatewaySpecListenerTlValidationTrustSdOutput
	ToGetVirtualGatewaySpecListenerTlValidationTrustSdOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlValidationTrustSdOutput
}

type GetVirtualGatewaySpecListenerTlValidationTrustSdArgs struct {
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (GetVirtualGatewaySpecListenerTlValidationTrustSdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationTrustSd)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlValidationTrustSdArgs) ToGetVirtualGatewaySpecListenerTlValidationTrustSdOutput() GetVirtualGatewaySpecListenerTlValidationTrustSdOutput {
	return i.ToGetVirtualGatewaySpecListenerTlValidationTrustSdOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlValidationTrustSdArgs) ToGetVirtualGatewaySpecListenerTlValidationTrustSdOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationTrustSdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlValidationTrustSdOutput)
}

// GetVirtualGatewaySpecListenerTlValidationTrustSdArrayInput is an input type that accepts GetVirtualGatewaySpecListenerTlValidationTrustSdArray and GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecListenerTlValidationTrustSdArrayInput` via:
//
//	GetVirtualGatewaySpecListenerTlValidationTrustSdArray{ GetVirtualGatewaySpecListenerTlValidationTrustSdArgs{...} }
type GetVirtualGatewaySpecListenerTlValidationTrustSdArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput() GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput
	ToGetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutputWithContext(context.Context) GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput
}

type GetVirtualGatewaySpecListenerTlValidationTrustSdArray []GetVirtualGatewaySpecListenerTlValidationTrustSdInput

func (GetVirtualGatewaySpecListenerTlValidationTrustSdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlValidationTrustSd)(nil)).Elem()
}

func (i GetVirtualGatewaySpecListenerTlValidationTrustSdArray) ToGetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput() GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput {
	return i.ToGetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecListenerTlValidationTrustSdArray) ToGetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput)
}

type GetVirtualGatewaySpecListenerTlValidationTrustSdOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlValidationTrustSdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationTrustSd)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustSdOutput) ToGetVirtualGatewaySpecListenerTlValidationTrustSdOutput() GetVirtualGatewaySpecListenerTlValidationTrustSdOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustSdOutput) ToGetVirtualGatewaySpecListenerTlValidationTrustSdOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationTrustSdOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustSdOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecListenerTlValidationTrustSd) string { return v.SecretName }).(pulumi.StringOutput)
}

type GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecListenerTlValidationTrustSd)(nil)).Elem()
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput) ToGetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput() GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput) ToGetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecListenerTlValidationTrustSdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecListenerTlValidationTrustSd {
		return vs[0].([]GetVirtualGatewaySpecListenerTlValidationTrustSd)[vs[1].(int)]
	}).(GetVirtualGatewaySpecListenerTlValidationTrustSdOutput)
}

type GetVirtualGatewaySpecLogging struct {
	AccessLogs []GetVirtualGatewaySpecLoggingAccessLog `pulumi:"accessLogs"`
}

// GetVirtualGatewaySpecLoggingInput is an input type that accepts GetVirtualGatewaySpecLoggingArgs and GetVirtualGatewaySpecLoggingOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecLoggingInput` via:
//
//	GetVirtualGatewaySpecLoggingArgs{...}
type GetVirtualGatewaySpecLoggingInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecLoggingOutput() GetVirtualGatewaySpecLoggingOutput
	ToGetVirtualGatewaySpecLoggingOutputWithContext(context.Context) GetVirtualGatewaySpecLoggingOutput
}

type GetVirtualGatewaySpecLoggingArgs struct {
	AccessLogs GetVirtualGatewaySpecLoggingAccessLogArrayInput `pulumi:"accessLogs"`
}

func (GetVirtualGatewaySpecLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecLogging)(nil)).Elem()
}

func (i GetVirtualGatewaySpecLoggingArgs) ToGetVirtualGatewaySpecLoggingOutput() GetVirtualGatewaySpecLoggingOutput {
	return i.ToGetVirtualGatewaySpecLoggingOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecLoggingArgs) ToGetVirtualGatewaySpecLoggingOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecLoggingOutput)
}

// GetVirtualGatewaySpecLoggingArrayInput is an input type that accepts GetVirtualGatewaySpecLoggingArray and GetVirtualGatewaySpecLoggingArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecLoggingArrayInput` via:
//
//	GetVirtualGatewaySpecLoggingArray{ GetVirtualGatewaySpecLoggingArgs{...} }
type GetVirtualGatewaySpecLoggingArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecLoggingArrayOutput() GetVirtualGatewaySpecLoggingArrayOutput
	ToGetVirtualGatewaySpecLoggingArrayOutputWithContext(context.Context) GetVirtualGatewaySpecLoggingArrayOutput
}

type GetVirtualGatewaySpecLoggingArray []GetVirtualGatewaySpecLoggingInput

func (GetVirtualGatewaySpecLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecLogging)(nil)).Elem()
}

func (i GetVirtualGatewaySpecLoggingArray) ToGetVirtualGatewaySpecLoggingArrayOutput() GetVirtualGatewaySpecLoggingArrayOutput {
	return i.ToGetVirtualGatewaySpecLoggingArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecLoggingArray) ToGetVirtualGatewaySpecLoggingArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecLoggingArrayOutput)
}

type GetVirtualGatewaySpecLoggingOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecLogging)(nil)).Elem()
}

func (o GetVirtualGatewaySpecLoggingOutput) ToGetVirtualGatewaySpecLoggingOutput() GetVirtualGatewaySpecLoggingOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingOutput) ToGetVirtualGatewaySpecLoggingOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingOutput) AccessLogs() GetVirtualGatewaySpecLoggingAccessLogArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecLogging) []GetVirtualGatewaySpecLoggingAccessLog { return v.AccessLogs }).(GetVirtualGatewaySpecLoggingAccessLogArrayOutput)
}

type GetVirtualGatewaySpecLoggingArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecLogging)(nil)).Elem()
}

func (o GetVirtualGatewaySpecLoggingArrayOutput) ToGetVirtualGatewaySpecLoggingArrayOutput() GetVirtualGatewaySpecLoggingArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingArrayOutput) ToGetVirtualGatewaySpecLoggingArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecLogging {
		return vs[0].([]GetVirtualGatewaySpecLogging)[vs[1].(int)]
	}).(GetVirtualGatewaySpecLoggingOutput)
}

type GetVirtualGatewaySpecLoggingAccessLog struct {
	Files []GetVirtualGatewaySpecLoggingAccessLogFile `pulumi:"files"`
}

// GetVirtualGatewaySpecLoggingAccessLogInput is an input type that accepts GetVirtualGatewaySpecLoggingAccessLogArgs and GetVirtualGatewaySpecLoggingAccessLogOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecLoggingAccessLogInput` via:
//
//	GetVirtualGatewaySpecLoggingAccessLogArgs{...}
type GetVirtualGatewaySpecLoggingAccessLogInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecLoggingAccessLogOutput() GetVirtualGatewaySpecLoggingAccessLogOutput
	ToGetVirtualGatewaySpecLoggingAccessLogOutputWithContext(context.Context) GetVirtualGatewaySpecLoggingAccessLogOutput
}

type GetVirtualGatewaySpecLoggingAccessLogArgs struct {
	Files GetVirtualGatewaySpecLoggingAccessLogFileArrayInput `pulumi:"files"`
}

func (GetVirtualGatewaySpecLoggingAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLog)(nil)).Elem()
}

func (i GetVirtualGatewaySpecLoggingAccessLogArgs) ToGetVirtualGatewaySpecLoggingAccessLogOutput() GetVirtualGatewaySpecLoggingAccessLogOutput {
	return i.ToGetVirtualGatewaySpecLoggingAccessLogOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecLoggingAccessLogArgs) ToGetVirtualGatewaySpecLoggingAccessLogOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecLoggingAccessLogOutput)
}

// GetVirtualGatewaySpecLoggingAccessLogArrayInput is an input type that accepts GetVirtualGatewaySpecLoggingAccessLogArray and GetVirtualGatewaySpecLoggingAccessLogArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecLoggingAccessLogArrayInput` via:
//
//	GetVirtualGatewaySpecLoggingAccessLogArray{ GetVirtualGatewaySpecLoggingAccessLogArgs{...} }
type GetVirtualGatewaySpecLoggingAccessLogArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecLoggingAccessLogArrayOutput() GetVirtualGatewaySpecLoggingAccessLogArrayOutput
	ToGetVirtualGatewaySpecLoggingAccessLogArrayOutputWithContext(context.Context) GetVirtualGatewaySpecLoggingAccessLogArrayOutput
}

type GetVirtualGatewaySpecLoggingAccessLogArray []GetVirtualGatewaySpecLoggingAccessLogInput

func (GetVirtualGatewaySpecLoggingAccessLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecLoggingAccessLog)(nil)).Elem()
}

func (i GetVirtualGatewaySpecLoggingAccessLogArray) ToGetVirtualGatewaySpecLoggingAccessLogArrayOutput() GetVirtualGatewaySpecLoggingAccessLogArrayOutput {
	return i.ToGetVirtualGatewaySpecLoggingAccessLogArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecLoggingAccessLogArray) ToGetVirtualGatewaySpecLoggingAccessLogArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecLoggingAccessLogArrayOutput)
}

type GetVirtualGatewaySpecLoggingAccessLogOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecLoggingAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLog)(nil)).Elem()
}

func (o GetVirtualGatewaySpecLoggingAccessLogOutput) ToGetVirtualGatewaySpecLoggingAccessLogOutput() GetVirtualGatewaySpecLoggingAccessLogOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogOutput) ToGetVirtualGatewaySpecLoggingAccessLogOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogOutput) Files() GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecLoggingAccessLog) []GetVirtualGatewaySpecLoggingAccessLogFile {
		return v.Files
	}).(GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput)
}

type GetVirtualGatewaySpecLoggingAccessLogArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecLoggingAccessLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecLoggingAccessLog)(nil)).Elem()
}

func (o GetVirtualGatewaySpecLoggingAccessLogArrayOutput) ToGetVirtualGatewaySpecLoggingAccessLogArrayOutput() GetVirtualGatewaySpecLoggingAccessLogArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogArrayOutput) ToGetVirtualGatewaySpecLoggingAccessLogArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecLoggingAccessLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecLoggingAccessLog {
		return vs[0].([]GetVirtualGatewaySpecLoggingAccessLog)[vs[1].(int)]
	}).(GetVirtualGatewaySpecLoggingAccessLogOutput)
}

type GetVirtualGatewaySpecLoggingAccessLogFile struct {
	Formats []GetVirtualGatewaySpecLoggingAccessLogFileFormat `pulumi:"formats"`
	Path    string                                            `pulumi:"path"`
}

// GetVirtualGatewaySpecLoggingAccessLogFileInput is an input type that accepts GetVirtualGatewaySpecLoggingAccessLogFileArgs and GetVirtualGatewaySpecLoggingAccessLogFileOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecLoggingAccessLogFileInput` via:
//
//	GetVirtualGatewaySpecLoggingAccessLogFileArgs{...}
type GetVirtualGatewaySpecLoggingAccessLogFileInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecLoggingAccessLogFileOutput() GetVirtualGatewaySpecLoggingAccessLogFileOutput
	ToGetVirtualGatewaySpecLoggingAccessLogFileOutputWithContext(context.Context) GetVirtualGatewaySpecLoggingAccessLogFileOutput
}

type GetVirtualGatewaySpecLoggingAccessLogFileArgs struct {
	Formats GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayInput `pulumi:"formats"`
	Path    pulumi.StringInput                                        `pulumi:"path"`
}

func (GetVirtualGatewaySpecLoggingAccessLogFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLogFile)(nil)).Elem()
}

func (i GetVirtualGatewaySpecLoggingAccessLogFileArgs) ToGetVirtualGatewaySpecLoggingAccessLogFileOutput() GetVirtualGatewaySpecLoggingAccessLogFileOutput {
	return i.ToGetVirtualGatewaySpecLoggingAccessLogFileOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecLoggingAccessLogFileArgs) ToGetVirtualGatewaySpecLoggingAccessLogFileOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecLoggingAccessLogFileOutput)
}

// GetVirtualGatewaySpecLoggingAccessLogFileArrayInput is an input type that accepts GetVirtualGatewaySpecLoggingAccessLogFileArray and GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecLoggingAccessLogFileArrayInput` via:
//
//	GetVirtualGatewaySpecLoggingAccessLogFileArray{ GetVirtualGatewaySpecLoggingAccessLogFileArgs{...} }
type GetVirtualGatewaySpecLoggingAccessLogFileArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecLoggingAccessLogFileArrayOutput() GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput
	ToGetVirtualGatewaySpecLoggingAccessLogFileArrayOutputWithContext(context.Context) GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput
}

type GetVirtualGatewaySpecLoggingAccessLogFileArray []GetVirtualGatewaySpecLoggingAccessLogFileInput

func (GetVirtualGatewaySpecLoggingAccessLogFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecLoggingAccessLogFile)(nil)).Elem()
}

func (i GetVirtualGatewaySpecLoggingAccessLogFileArray) ToGetVirtualGatewaySpecLoggingAccessLogFileArrayOutput() GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput {
	return i.ToGetVirtualGatewaySpecLoggingAccessLogFileArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecLoggingAccessLogFileArray) ToGetVirtualGatewaySpecLoggingAccessLogFileArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput)
}

type GetVirtualGatewaySpecLoggingAccessLogFileOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecLoggingAccessLogFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLogFile)(nil)).Elem()
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileOutput) ToGetVirtualGatewaySpecLoggingAccessLogFileOutput() GetVirtualGatewaySpecLoggingAccessLogFileOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileOutput) ToGetVirtualGatewaySpecLoggingAccessLogFileOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogFileOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileOutput) Formats() GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecLoggingAccessLogFile) []GetVirtualGatewaySpecLoggingAccessLogFileFormat {
		return v.Formats
	}).(GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput)
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecLoggingAccessLogFile) string { return v.Path }).(pulumi.StringOutput)
}

type GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecLoggingAccessLogFile)(nil)).Elem()
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput) ToGetVirtualGatewaySpecLoggingAccessLogFileArrayOutput() GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput) ToGetVirtualGatewaySpecLoggingAccessLogFileArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecLoggingAccessLogFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecLoggingAccessLogFile {
		return vs[0].([]GetVirtualGatewaySpecLoggingAccessLogFile)[vs[1].(int)]
	}).(GetVirtualGatewaySpecLoggingAccessLogFileOutput)
}

type GetVirtualGatewaySpecLoggingAccessLogFileFormat struct {
	Jsons []GetVirtualGatewaySpecLoggingAccessLogFileFormatJson `pulumi:"jsons"`
	Text  string                                                `pulumi:"text"`
}

// GetVirtualGatewaySpecLoggingAccessLogFileFormatInput is an input type that accepts GetVirtualGatewaySpecLoggingAccessLogFileFormatArgs and GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecLoggingAccessLogFileFormatInput` via:
//
//	GetVirtualGatewaySpecLoggingAccessLogFileFormatArgs{...}
type GetVirtualGatewaySpecLoggingAccessLogFileFormatInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecLoggingAccessLogFileFormatOutput() GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput
	ToGetVirtualGatewaySpecLoggingAccessLogFileFormatOutputWithContext(context.Context) GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput
}

type GetVirtualGatewaySpecLoggingAccessLogFileFormatArgs struct {
	Jsons GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayInput `pulumi:"jsons"`
	Text  pulumi.StringInput                                            `pulumi:"text"`
}

func (GetVirtualGatewaySpecLoggingAccessLogFileFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (i GetVirtualGatewaySpecLoggingAccessLogFileFormatArgs) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatOutput() GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput {
	return i.ToGetVirtualGatewaySpecLoggingAccessLogFileFormatOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecLoggingAccessLogFileFormatArgs) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput)
}

// GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayInput is an input type that accepts GetVirtualGatewaySpecLoggingAccessLogFileFormatArray and GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayInput` via:
//
//	GetVirtualGatewaySpecLoggingAccessLogFileFormatArray{ GetVirtualGatewaySpecLoggingAccessLogFileFormatArgs{...} }
type GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput() GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput
	ToGetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutputWithContext(context.Context) GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput
}

type GetVirtualGatewaySpecLoggingAccessLogFileFormatArray []GetVirtualGatewaySpecLoggingAccessLogFileFormatInput

func (GetVirtualGatewaySpecLoggingAccessLogFileFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (i GetVirtualGatewaySpecLoggingAccessLogFileFormatArray) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput() GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput {
	return i.ToGetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecLoggingAccessLogFileFormatArray) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput)
}

type GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatOutput() GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput) Jsons() GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecLoggingAccessLogFileFormat) []GetVirtualGatewaySpecLoggingAccessLogFileFormatJson {
		return v.Jsons
	}).(GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput)
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecLoggingAccessLogFileFormat) string { return v.Text }).(pulumi.StringOutput)
}

type GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput() GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecLoggingAccessLogFileFormat {
		return vs[0].([]GetVirtualGatewaySpecLoggingAccessLogFileFormat)[vs[1].(int)]
	}).(GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput)
}

type GetVirtualGatewaySpecLoggingAccessLogFileFormatJson struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonInput is an input type that accepts GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs and GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonInput` via:
//
//	GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs{...}
type GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput() GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput
	ToGetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutputWithContext(context.Context) GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput
}

type GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (i GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput() GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput {
	return i.ToGetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput)
}

// GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayInput is an input type that accepts GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArray and GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput values.
// You can construct a concrete instance of `GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayInput` via:
//
//	GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArray{ GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs{...} }
type GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayInput interface {
	pulumi.Input

	ToGetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput() GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput
	ToGetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(context.Context) GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput
}

type GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArray []GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonInput

func (GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (i GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArray) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput() GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput {
	return i.ToGetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(context.Background())
}

func (i GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArray) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput)
}

type GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput() GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecLoggingAccessLogFileFormatJson) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualGatewaySpecLoggingAccessLogFileFormatJson) string { return v.Value }).(pulumi.StringOutput)
}

type GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualGatewaySpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput() GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput) ToGetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(ctx context.Context) GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput {
	return o
}

func (o GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput) Index(i pulumi.IntInput) GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualGatewaySpecLoggingAccessLogFileFormatJson {
		return vs[0].([]GetVirtualGatewaySpecLoggingAccessLogFileFormatJson)[vs[1].(int)]
	}).(GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput)
}

type GetVirtualNodeSpec struct {
	BackendDefaults    []GetVirtualNodeSpecBackendDefault   `pulumi:"backendDefaults"`
	Backends           []GetVirtualNodeSpecBackend          `pulumi:"backends"`
	Listeners          []GetVirtualNodeSpecListener         `pulumi:"listeners"`
	Loggings           []GetVirtualNodeSpecLogging          `pulumi:"loggings"`
	ServiceDiscoveries []GetVirtualNodeSpecServiceDiscovery `pulumi:"serviceDiscoveries"`
}

// GetVirtualNodeSpecInput is an input type that accepts GetVirtualNodeSpecArgs and GetVirtualNodeSpecOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecInput` via:
//
//	GetVirtualNodeSpecArgs{...}
type GetVirtualNodeSpecInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecOutput() GetVirtualNodeSpecOutput
	ToGetVirtualNodeSpecOutputWithContext(context.Context) GetVirtualNodeSpecOutput
}

type GetVirtualNodeSpecArgs struct {
	BackendDefaults    GetVirtualNodeSpecBackendDefaultArrayInput   `pulumi:"backendDefaults"`
	Backends           GetVirtualNodeSpecBackendArrayInput          `pulumi:"backends"`
	Listeners          GetVirtualNodeSpecListenerArrayInput         `pulumi:"listeners"`
	Loggings           GetVirtualNodeSpecLoggingArrayInput          `pulumi:"loggings"`
	ServiceDiscoveries GetVirtualNodeSpecServiceDiscoveryArrayInput `pulumi:"serviceDiscoveries"`
}

func (GetVirtualNodeSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpec)(nil)).Elem()
}

func (i GetVirtualNodeSpecArgs) ToGetVirtualNodeSpecOutput() GetVirtualNodeSpecOutput {
	return i.ToGetVirtualNodeSpecOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecArgs) ToGetVirtualNodeSpecOutputWithContext(ctx context.Context) GetVirtualNodeSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecOutput)
}

// GetVirtualNodeSpecArrayInput is an input type that accepts GetVirtualNodeSpecArray and GetVirtualNodeSpecArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecArrayInput` via:
//
//	GetVirtualNodeSpecArray{ GetVirtualNodeSpecArgs{...} }
type GetVirtualNodeSpecArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecArrayOutput() GetVirtualNodeSpecArrayOutput
	ToGetVirtualNodeSpecArrayOutputWithContext(context.Context) GetVirtualNodeSpecArrayOutput
}

type GetVirtualNodeSpecArray []GetVirtualNodeSpecInput

func (GetVirtualNodeSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpec)(nil)).Elem()
}

func (i GetVirtualNodeSpecArray) ToGetVirtualNodeSpecArrayOutput() GetVirtualNodeSpecArrayOutput {
	return i.ToGetVirtualNodeSpecArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecArray) ToGetVirtualNodeSpecArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecArrayOutput)
}

type GetVirtualNodeSpecOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpec)(nil)).Elem()
}

func (o GetVirtualNodeSpecOutput) ToGetVirtualNodeSpecOutput() GetVirtualNodeSpecOutput {
	return o
}

func (o GetVirtualNodeSpecOutput) ToGetVirtualNodeSpecOutputWithContext(ctx context.Context) GetVirtualNodeSpecOutput {
	return o
}

func (o GetVirtualNodeSpecOutput) BackendDefaults() GetVirtualNodeSpecBackendDefaultArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpec) []GetVirtualNodeSpecBackendDefault { return v.BackendDefaults }).(GetVirtualNodeSpecBackendDefaultArrayOutput)
}

func (o GetVirtualNodeSpecOutput) Backends() GetVirtualNodeSpecBackendArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpec) []GetVirtualNodeSpecBackend { return v.Backends }).(GetVirtualNodeSpecBackendArrayOutput)
}

func (o GetVirtualNodeSpecOutput) Listeners() GetVirtualNodeSpecListenerArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpec) []GetVirtualNodeSpecListener { return v.Listeners }).(GetVirtualNodeSpecListenerArrayOutput)
}

func (o GetVirtualNodeSpecOutput) Loggings() GetVirtualNodeSpecLoggingArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpec) []GetVirtualNodeSpecLogging { return v.Loggings }).(GetVirtualNodeSpecLoggingArrayOutput)
}

func (o GetVirtualNodeSpecOutput) ServiceDiscoveries() GetVirtualNodeSpecServiceDiscoveryArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpec) []GetVirtualNodeSpecServiceDiscovery { return v.ServiceDiscoveries }).(GetVirtualNodeSpecServiceDiscoveryArrayOutput)
}

type GetVirtualNodeSpecArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpec)(nil)).Elem()
}

func (o GetVirtualNodeSpecArrayOutput) ToGetVirtualNodeSpecArrayOutput() GetVirtualNodeSpecArrayOutput {
	return o
}

func (o GetVirtualNodeSpecArrayOutput) ToGetVirtualNodeSpecArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecArrayOutput {
	return o
}

func (o GetVirtualNodeSpecArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpec {
		return vs[0].([]GetVirtualNodeSpec)[vs[1].(int)]
	}).(GetVirtualNodeSpecOutput)
}

type GetVirtualNodeSpecBackend struct {
	VirtualServices []GetVirtualNodeSpecBackendVirtualService `pulumi:"virtualServices"`
}

// GetVirtualNodeSpecBackendInput is an input type that accepts GetVirtualNodeSpecBackendArgs and GetVirtualNodeSpecBackendOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendInput` via:
//
//	GetVirtualNodeSpecBackendArgs{...}
type GetVirtualNodeSpecBackendInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendOutput() GetVirtualNodeSpecBackendOutput
	ToGetVirtualNodeSpecBackendOutputWithContext(context.Context) GetVirtualNodeSpecBackendOutput
}

type GetVirtualNodeSpecBackendArgs struct {
	VirtualServices GetVirtualNodeSpecBackendVirtualServiceArrayInput `pulumi:"virtualServices"`
}

func (GetVirtualNodeSpecBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackend)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendArgs) ToGetVirtualNodeSpecBackendOutput() GetVirtualNodeSpecBackendOutput {
	return i.ToGetVirtualNodeSpecBackendOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendArgs) ToGetVirtualNodeSpecBackendOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendOutput)
}

// GetVirtualNodeSpecBackendArrayInput is an input type that accepts GetVirtualNodeSpecBackendArray and GetVirtualNodeSpecBackendArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendArrayInput` via:
//
//	GetVirtualNodeSpecBackendArray{ GetVirtualNodeSpecBackendArgs{...} }
type GetVirtualNodeSpecBackendArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendArrayOutput() GetVirtualNodeSpecBackendArrayOutput
	ToGetVirtualNodeSpecBackendArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendArrayOutput
}

type GetVirtualNodeSpecBackendArray []GetVirtualNodeSpecBackendInput

func (GetVirtualNodeSpecBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackend)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendArray) ToGetVirtualNodeSpecBackendArrayOutput() GetVirtualNodeSpecBackendArrayOutput {
	return i.ToGetVirtualNodeSpecBackendArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendArray) ToGetVirtualNodeSpecBackendArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendArrayOutput)
}

type GetVirtualNodeSpecBackendOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackend)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendOutput) ToGetVirtualNodeSpecBackendOutput() GetVirtualNodeSpecBackendOutput {
	return o
}

func (o GetVirtualNodeSpecBackendOutput) ToGetVirtualNodeSpecBackendOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendOutput {
	return o
}

func (o GetVirtualNodeSpecBackendOutput) VirtualServices() GetVirtualNodeSpecBackendVirtualServiceArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackend) []GetVirtualNodeSpecBackendVirtualService { return v.VirtualServices }).(GetVirtualNodeSpecBackendVirtualServiceArrayOutput)
}

type GetVirtualNodeSpecBackendArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackend)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendArrayOutput) ToGetVirtualNodeSpecBackendArrayOutput() GetVirtualNodeSpecBackendArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendArrayOutput) ToGetVirtualNodeSpecBackendArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackend {
		return vs[0].([]GetVirtualNodeSpecBackend)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendOutput)
}

type GetVirtualNodeSpecBackendDefault struct {
	ClientPolicies []GetVirtualNodeSpecBackendDefaultClientPolicy `pulumi:"clientPolicies"`
}

// GetVirtualNodeSpecBackendDefaultInput is an input type that accepts GetVirtualNodeSpecBackendDefaultArgs and GetVirtualNodeSpecBackendDefaultOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultInput` via:
//
//	GetVirtualNodeSpecBackendDefaultArgs{...}
type GetVirtualNodeSpecBackendDefaultInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultOutput() GetVirtualNodeSpecBackendDefaultOutput
	ToGetVirtualNodeSpecBackendDefaultOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultOutput
}

type GetVirtualNodeSpecBackendDefaultArgs struct {
	ClientPolicies GetVirtualNodeSpecBackendDefaultClientPolicyArrayInput `pulumi:"clientPolicies"`
}

func (GetVirtualNodeSpecBackendDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefault)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultArgs) ToGetVirtualNodeSpecBackendDefaultOutput() GetVirtualNodeSpecBackendDefaultOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultArgs) ToGetVirtualNodeSpecBackendDefaultOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultOutput)
}

// GetVirtualNodeSpecBackendDefaultArrayInput is an input type that accepts GetVirtualNodeSpecBackendDefaultArray and GetVirtualNodeSpecBackendDefaultArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultArrayInput` via:
//
//	GetVirtualNodeSpecBackendDefaultArray{ GetVirtualNodeSpecBackendDefaultArgs{...} }
type GetVirtualNodeSpecBackendDefaultArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultArrayOutput() GetVirtualNodeSpecBackendDefaultArrayOutput
	ToGetVirtualNodeSpecBackendDefaultArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultArrayOutput
}

type GetVirtualNodeSpecBackendDefaultArray []GetVirtualNodeSpecBackendDefaultInput

func (GetVirtualNodeSpecBackendDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefault)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultArray) ToGetVirtualNodeSpecBackendDefaultArrayOutput() GetVirtualNodeSpecBackendDefaultArrayOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultArray) ToGetVirtualNodeSpecBackendDefaultArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefault)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultOutput) ToGetVirtualNodeSpecBackendDefaultOutput() GetVirtualNodeSpecBackendDefaultOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultOutput) ToGetVirtualNodeSpecBackendDefaultOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultOutput) ClientPolicies() GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefault) []GetVirtualNodeSpecBackendDefaultClientPolicy {
		return v.ClientPolicies
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefault)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultArrayOutput) ToGetVirtualNodeSpecBackendDefaultArrayOutput() GetVirtualNodeSpecBackendDefaultArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultArrayOutput) ToGetVirtualNodeSpecBackendDefaultArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendDefault {
		return vs[0].([]GetVirtualNodeSpecBackendDefault)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendDefaultOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicy struct {
	Tls []GetVirtualNodeSpecBackendDefaultClientPolicyTl `pulumi:"tls"`
}

// GetVirtualNodeSpecBackendDefaultClientPolicyInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyArgs and GetVirtualNodeSpecBackendDefaultClientPolicyOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyArgs{...}
type GetVirtualNodeSpecBackendDefaultClientPolicyInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyOutput() GetVirtualNodeSpecBackendDefaultClientPolicyOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyArgs struct {
	Tls GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayInput `pulumi:"tls"`
}

func (GetVirtualNodeSpecBackendDefaultClientPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicy)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyOutput() GetVirtualNodeSpecBackendDefaultClientPolicyOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyOutput)
}

// GetVirtualNodeSpecBackendDefaultClientPolicyArrayInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyArray and GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyArrayInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyArray{ GetVirtualNodeSpecBackendDefaultClientPolicyArgs{...} }
type GetVirtualNodeSpecBackendDefaultClientPolicyArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyArray []GetVirtualNodeSpecBackendDefaultClientPolicyInput

func (GetVirtualNodeSpecBackendDefaultClientPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicy)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicy)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyOutput() GetVirtualNodeSpecBackendDefaultClientPolicyOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyOutput) Tls() GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicy) []GetVirtualNodeSpecBackendDefaultClientPolicyTl {
		return v.Tls
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicy)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendDefaultClientPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendDefaultClientPolicy {
		return vs[0].([]GetVirtualNodeSpecBackendDefaultClientPolicy)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTl struct {
	Certificates []GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificate `pulumi:"certificates"`
	Enforce      bool                                                        `pulumi:"enforce"`
	Ports        []int                                                       `pulumi:"ports"`
	Validations  []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidation  `pulumi:"validations"`
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlArgs and GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlArgs{...}
type GetVirtualNodeSpecBackendDefaultClientPolicyTlInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlArgs struct {
	Certificates GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayInput `pulumi:"certificates"`
	Enforce      pulumi.BoolInput                                                    `pulumi:"enforce"`
	Ports        pulumi.IntArrayInput                                                `pulumi:"ports"`
	Validations  GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayInput  `pulumi:"validations"`
}

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTl)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput)
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlArray and GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlArray{ GetVirtualNodeSpecBackendDefaultClientPolicyTlArgs{...} }
type GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlArray []GetVirtualNodeSpecBackendDefaultClientPolicyTlInput

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTl)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTl)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput) Certificates() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTl) []GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificate {
		return v.Certificates
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput)
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput) Enforce() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTl) bool { return v.Enforce }).(pulumi.BoolOutput)
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTl) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput) Validations() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTl) []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidation {
		return v.Validations
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTl)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendDefaultClientPolicyTl {
		return vs[0].([]GetVirtualNodeSpecBackendDefaultClientPolicyTl)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificate struct {
	Files []GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFile `pulumi:"files"`
	Sds   []GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSd   `pulumi:"sds"`
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArgs and GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArgs{...}
type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArgs struct {
	Files GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayInput `pulumi:"files"`
	Sds   GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayInput   `pulumi:"sds"`
}

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificate)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput)
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArray and GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArray{ GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArgs{...} }
type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArray []GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateInput

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificate)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificate)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput) Files() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificate) []GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFile {
		return v.Files
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput)
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput) Sds() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificate) []GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSd {
		return v.Sds
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificate)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificate {
		return vs[0].([]GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificate)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFile struct {
	CertificateChain string `pulumi:"certificateChain"`
	PrivateKey       string `pulumi:"privateKey"`
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArgs and GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArgs{...}
type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArgs struct {
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	PrivateKey       pulumi.StringInput `pulumi:"privateKey"`
}

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFile)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput)
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArray and GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArray{ GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArgs{...} }
type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArray []GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileInput

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFile)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFile)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFile) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFile)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFile {
		return vs[0].([]GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFile)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSd struct {
	SecretName string `pulumi:"secretName"`
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArgs and GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArgs{...}
type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArgs struct {
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSd)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput)
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArray and GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArray{ GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArgs{...} }
type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArray []GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdInput

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSd)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSd)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSd) string { return v.SecretName }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSd)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSd {
		return vs[0].([]GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSd)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidation struct {
	SubjectAlternativeNames []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName `pulumi:"subjectAlternativeNames"`
	Trusts                  []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrust                  `pulumi:"trusts"`
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArgs and GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArgs{...}
type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArgs struct {
	SubjectAlternativeNames GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayInput `pulumi:"subjectAlternativeNames"`
	Trusts                  GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayInput                  `pulumi:"trusts"`
}

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidation)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput)
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArray and GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArray{ GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArgs{...} }
type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArray []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationInput

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidation)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidation)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput) SubjectAlternativeNames() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlValidation) []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName {
		return v.SubjectAlternativeNames
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput)
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput) Trusts() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlValidation) []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrust {
		return v.Trusts
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidation)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidation {
		return vs[0].([]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidation)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName struct {
	Matches []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch `pulumi:"matches"`
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs and GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs{...}
type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs struct {
	Matches GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput `pulumi:"matches"`
}

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput)
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArray and GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArray{ GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs{...} }
type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArray []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameInput

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput) Matches() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName) []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch {
		return v.Matches
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName {
		return vs[0].([]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeName)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch struct {
	Exacts []string `pulumi:"exacts"`
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs and GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs{...}
type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs struct {
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput)
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArray and GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArray{ GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs{...} }
type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArray []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchInput

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch) []string {
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch {
		return vs[0].([]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatch)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrust struct {
	Acms  []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcm  `pulumi:"acms"`
	Files []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFile `pulumi:"files"`
	Sds   []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSd   `pulumi:"sds"`
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArgs and GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArgs{...}
type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArgs struct {
	Acms  GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayInput  `pulumi:"acms"`
	Files GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayInput `pulumi:"files"`
	Sds   GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayInput   `pulumi:"sds"`
}

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrust)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput)
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArray and GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArray{ GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArgs{...} }
type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArray []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustInput

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrust)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrust)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput) Acms() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrust) []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcm {
		return v.Acms
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput)
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput) Files() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrust) []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFile {
		return v.Files
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput)
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput) Sds() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrust) []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSd {
		return v.Sds
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrust)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrust {
		return vs[0].([]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrust)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcm struct {
	CertificateAuthorityArns []string `pulumi:"certificateAuthorityArns"`
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArgs and GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArgs{...}
type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArgs struct {
	CertificateAuthorityArns pulumi.StringArrayInput `pulumi:"certificateAuthorityArns"`
}

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcm)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput)
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArray and GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArray{ GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArgs{...} }
type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArray []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmInput

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcm)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcm)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcm) []string {
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcm)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcm {
		return vs[0].([]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcm)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFile struct {
	CertificateChain string `pulumi:"certificateChain"`
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArgs and GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArgs{...}
type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArgs struct {
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFile)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput)
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArray and GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArray{ GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArgs{...} }
type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArray []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileInput

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFile)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFile)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFile)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFile {
		return vs[0].([]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFile)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSd struct {
	SecretName string `pulumi:"secretName"`
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArgs and GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArgs{...}
type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArgs struct {
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSd)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArgs) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput)
}

// GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayInput is an input type that accepts GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArray and GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayInput` via:
//
//	GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArray{ GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArgs{...} }
type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput
	ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArray []GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdInput

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSd)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput {
	return i.ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArray) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSd)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSd) string { return v.SecretName }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSd)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput() GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput) ToGetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSd {
		return vs[0].([]GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSd)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput)
}

type GetVirtualNodeSpecBackendVirtualService struct {
	ClientPolicies     []GetVirtualNodeSpecBackendVirtualServiceClientPolicy `pulumi:"clientPolicies"`
	VirtualServiceName string                                                `pulumi:"virtualServiceName"`
}

// GetVirtualNodeSpecBackendVirtualServiceInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceArgs and GetVirtualNodeSpecBackendVirtualServiceOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceArgs{...}
type GetVirtualNodeSpecBackendVirtualServiceInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceOutput() GetVirtualNodeSpecBackendVirtualServiceOutput
	ToGetVirtualNodeSpecBackendVirtualServiceOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceOutput
}

type GetVirtualNodeSpecBackendVirtualServiceArgs struct {
	ClientPolicies     GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayInput `pulumi:"clientPolicies"`
	VirtualServiceName pulumi.StringInput                                            `pulumi:"virtualServiceName"`
}

func (GetVirtualNodeSpecBackendVirtualServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualService)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceArgs) ToGetVirtualNodeSpecBackendVirtualServiceOutput() GetVirtualNodeSpecBackendVirtualServiceOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceArgs) ToGetVirtualNodeSpecBackendVirtualServiceOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceOutput)
}

// GetVirtualNodeSpecBackendVirtualServiceArrayInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceArray and GetVirtualNodeSpecBackendVirtualServiceArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceArrayInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceArray{ GetVirtualNodeSpecBackendVirtualServiceArgs{...} }
type GetVirtualNodeSpecBackendVirtualServiceArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceArrayOutput() GetVirtualNodeSpecBackendVirtualServiceArrayOutput
	ToGetVirtualNodeSpecBackendVirtualServiceArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceArrayOutput
}

type GetVirtualNodeSpecBackendVirtualServiceArray []GetVirtualNodeSpecBackendVirtualServiceInput

func (GetVirtualNodeSpecBackendVirtualServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualService)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceArray) ToGetVirtualNodeSpecBackendVirtualServiceArrayOutput() GetVirtualNodeSpecBackendVirtualServiceArrayOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceArray) ToGetVirtualNodeSpecBackendVirtualServiceArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualService)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceOutput) ToGetVirtualNodeSpecBackendVirtualServiceOutput() GetVirtualNodeSpecBackendVirtualServiceOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceOutput) ToGetVirtualNodeSpecBackendVirtualServiceOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceOutput) ClientPolicies() GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualService) []GetVirtualNodeSpecBackendVirtualServiceClientPolicy {
		return v.ClientPolicies
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput)
}

func (o GetVirtualNodeSpecBackendVirtualServiceOutput) VirtualServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualService) string { return v.VirtualServiceName }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualService)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceArrayOutput() GetVirtualNodeSpecBackendVirtualServiceArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendVirtualServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendVirtualService {
		return vs[0].([]GetVirtualNodeSpecBackendVirtualService)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendVirtualServiceOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicy struct {
	Tls []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTl `pulumi:"tls"`
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyArgs and GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyArgs{...}
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyArgs struct {
	Tls GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayInput `pulumi:"tls"`
}

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicy)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput)
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyArray and GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyArray{ GetVirtualNodeSpecBackendVirtualServiceClientPolicyArgs{...} }
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyArray []GetVirtualNodeSpecBackendVirtualServiceClientPolicyInput

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicy)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicy)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput) Tls() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicy) []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTl {
		return v.Tls
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicy)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendVirtualServiceClientPolicy {
		return vs[0].([]GetVirtualNodeSpecBackendVirtualServiceClientPolicy)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTl struct {
	Certificates []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificate `pulumi:"certificates"`
	Enforce      bool                                                               `pulumi:"enforce"`
	Ports        []int                                                              `pulumi:"ports"`
	Validations  []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidation  `pulumi:"validations"`
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArgs and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArgs{...}
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArgs struct {
	Certificates GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayInput `pulumi:"certificates"`
	Enforce      pulumi.BoolInput                                                           `pulumi:"enforce"`
	Ports        pulumi.IntArrayInput                                                       `pulumi:"ports"`
	Validations  GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayInput  `pulumi:"validations"`
}

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTl)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput)
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArray and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArray{ GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArgs{...} }
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArray []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlInput

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTl)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTl)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput) Certificates() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTl) []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificate {
		return v.Certificates
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput)
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput) Enforce() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTl) bool { return v.Enforce }).(pulumi.BoolOutput)
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTl) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput) Validations() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTl) []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidation {
		return v.Validations
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTl)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTl {
		return vs[0].([]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTl)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificate struct {
	Files []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFile `pulumi:"files"`
	Sds   []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSd   `pulumi:"sds"`
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArgs and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArgs{...}
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArgs struct {
	Files GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayInput `pulumi:"files"`
	Sds   GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayInput   `pulumi:"sds"`
}

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificate)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput)
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArray and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArray{ GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArgs{...} }
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArray []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateInput

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificate)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificate)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput) Files() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificate) []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFile {
		return v.Files
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput)
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput) Sds() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificate) []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSd {
		return v.Sds
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificate)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificate {
		return vs[0].([]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificate)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFile struct {
	CertificateChain string `pulumi:"certificateChain"`
	PrivateKey       string `pulumi:"privateKey"`
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArgs and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArgs{...}
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArgs struct {
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	PrivateKey       pulumi.StringInput `pulumi:"privateKey"`
}

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFile)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput)
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArray and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArray{ GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArgs{...} }
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArray []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileInput

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFile)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFile)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFile) string {
		return v.PrivateKey
	}).(pulumi.StringOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFile)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFile {
		return vs[0].([]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFile)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSd struct {
	SecretName string `pulumi:"secretName"`
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArgs and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArgs{...}
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArgs struct {
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSd)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput)
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArray and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArray{ GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArgs{...} }
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArray []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdInput

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSd)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSd)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSd) string { return v.SecretName }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSd)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSd {
		return vs[0].([]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSd)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidation struct {
	SubjectAlternativeNames []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeName `pulumi:"subjectAlternativeNames"`
	Trusts                  []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrust                  `pulumi:"trusts"`
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArgs and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArgs{...}
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArgs struct {
	SubjectAlternativeNames GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayInput `pulumi:"subjectAlternativeNames"`
	Trusts                  GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayInput                  `pulumi:"trusts"`
}

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidation)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput)
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArray and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArray{ GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArgs{...} }
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArray []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationInput

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidation)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidation)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput) SubjectAlternativeNames() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidation) []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeName {
		return v.SubjectAlternativeNames
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput)
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput) Trusts() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidation) []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrust {
		return v.Trusts
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidation)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidation {
		return vs[0].([]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidation)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeName struct {
	Matches []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatch `pulumi:"matches"`
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArgs and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArgs{...}
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArgs struct {
	Matches GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput `pulumi:"matches"`
}

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput)
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArray and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArray{ GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArgs{...} }
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArray []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameInput

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput) Matches() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeName) []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatch {
		return v.Matches
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeName {
		return vs[0].([]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeName)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatch struct {
	Exacts []string `pulumi:"exacts"`
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArgs and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArgs{...}
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArgs struct {
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput)
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArray and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArray{ GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArgs{...} }
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArray []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchInput

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatch) []string {
		return v.Exacts
	}).(pulumi.StringArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatch {
		return vs[0].([]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatch)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrust struct {
	Acms  []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcm  `pulumi:"acms"`
	Files []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFile `pulumi:"files"`
	Sds   []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSd   `pulumi:"sds"`
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArgs and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArgs{...}
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArgs struct {
	Acms  GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayInput  `pulumi:"acms"`
	Files GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayInput `pulumi:"files"`
	Sds   GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayInput   `pulumi:"sds"`
}

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrust)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput)
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArray and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArray{ GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArgs{...} }
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArray []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustInput

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrust)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrust)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput) Acms() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrust) []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcm {
		return v.Acms
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput)
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput) Files() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrust) []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFile {
		return v.Files
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput)
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput) Sds() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrust) []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSd {
		return v.Sds
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrust)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrust {
		return vs[0].([]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrust)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcm struct {
	CertificateAuthorityArns []string `pulumi:"certificateAuthorityArns"`
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArgs and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArgs{...}
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArgs struct {
	CertificateAuthorityArns pulumi.StringArrayInput `pulumi:"certificateAuthorityArns"`
}

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcm)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput)
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArray and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArray{ GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArgs{...} }
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArray []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmInput

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcm)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcm)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcm) []string {
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcm)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcm {
		return vs[0].([]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcm)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFile struct {
	CertificateChain string `pulumi:"certificateChain"`
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArgs and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArgs{...}
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArgs struct {
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFile)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput)
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArray and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArray{ GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArgs{...} }
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArray []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileInput

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFile)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFile)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFile) string {
		return v.CertificateChain
	}).(pulumi.StringOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFile)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFile {
		return vs[0].([]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFile)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSd struct {
	SecretName string `pulumi:"secretName"`
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArgs and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArgs{...}
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArgs struct {
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSd)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArgs) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput)
}

// GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayInput is an input type that accepts GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArray and GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayInput` via:
//
//	GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArray{ GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArgs{...} }
type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput
	ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutputWithContext(context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArray []GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdInput

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSd)(nil)).Elem()
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput {
	return i.ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArray) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSd)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSd) string {
		return v.SecretName
	}).(pulumi.StringOutput)
}

type GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSd)(nil)).Elem()
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput() GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput) ToGetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput {
	return o
}

func (o GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSd {
		return vs[0].([]GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSd)[vs[1].(int)]
	}).(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput)
}

type GetVirtualNodeSpecListener struct {
	ConnectionPools   []GetVirtualNodeSpecListenerConnectionPool   `pulumi:"connectionPools"`
	HealthChecks      []GetVirtualNodeSpecListenerHealthCheck      `pulumi:"healthChecks"`
	OutlierDetections []GetVirtualNodeSpecListenerOutlierDetection `pulumi:"outlierDetections"`
	PortMappings      []GetVirtualNodeSpecListenerPortMapping      `pulumi:"portMappings"`
	Timeouts          []GetVirtualNodeSpecListenerTimeout          `pulumi:"timeouts"`
	Tls               []GetVirtualNodeSpecListenerTl               `pulumi:"tls"`
}

// GetVirtualNodeSpecListenerInput is an input type that accepts GetVirtualNodeSpecListenerArgs and GetVirtualNodeSpecListenerOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerInput` via:
//
//	GetVirtualNodeSpecListenerArgs{...}
type GetVirtualNodeSpecListenerInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerOutput() GetVirtualNodeSpecListenerOutput
	ToGetVirtualNodeSpecListenerOutputWithContext(context.Context) GetVirtualNodeSpecListenerOutput
}

type GetVirtualNodeSpecListenerArgs struct {
	ConnectionPools   GetVirtualNodeSpecListenerConnectionPoolArrayInput   `pulumi:"connectionPools"`
	HealthChecks      GetVirtualNodeSpecListenerHealthCheckArrayInput      `pulumi:"healthChecks"`
	OutlierDetections GetVirtualNodeSpecListenerOutlierDetectionArrayInput `pulumi:"outlierDetections"`
	PortMappings      GetVirtualNodeSpecListenerPortMappingArrayInput      `pulumi:"portMappings"`
	Timeouts          GetVirtualNodeSpecListenerTimeoutArrayInput          `pulumi:"timeouts"`
	Tls               GetVirtualNodeSpecListenerTlArrayInput               `pulumi:"tls"`
}

func (GetVirtualNodeSpecListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListener)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerArgs) ToGetVirtualNodeSpecListenerOutput() GetVirtualNodeSpecListenerOutput {
	return i.ToGetVirtualNodeSpecListenerOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerArgs) ToGetVirtualNodeSpecListenerOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerOutput)
}

// GetVirtualNodeSpecListenerArrayInput is an input type that accepts GetVirtualNodeSpecListenerArray and GetVirtualNodeSpecListenerArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerArrayInput` via:
//
//	GetVirtualNodeSpecListenerArray{ GetVirtualNodeSpecListenerArgs{...} }
type GetVirtualNodeSpecListenerArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerArrayOutput() GetVirtualNodeSpecListenerArrayOutput
	ToGetVirtualNodeSpecListenerArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerArrayOutput
}

type GetVirtualNodeSpecListenerArray []GetVirtualNodeSpecListenerInput

func (GetVirtualNodeSpecListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListener)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerArray) ToGetVirtualNodeSpecListenerArrayOutput() GetVirtualNodeSpecListenerArrayOutput {
	return i.ToGetVirtualNodeSpecListenerArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerArray) ToGetVirtualNodeSpecListenerArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerArrayOutput)
}

type GetVirtualNodeSpecListenerOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListener)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerOutput) ToGetVirtualNodeSpecListenerOutput() GetVirtualNodeSpecListenerOutput {
	return o
}

func (o GetVirtualNodeSpecListenerOutput) ToGetVirtualNodeSpecListenerOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerOutput {
	return o
}

func (o GetVirtualNodeSpecListenerOutput) ConnectionPools() GetVirtualNodeSpecListenerConnectionPoolArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListener) []GetVirtualNodeSpecListenerConnectionPool {
		return v.ConnectionPools
	}).(GetVirtualNodeSpecListenerConnectionPoolArrayOutput)
}

func (o GetVirtualNodeSpecListenerOutput) HealthChecks() GetVirtualNodeSpecListenerHealthCheckArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListener) []GetVirtualNodeSpecListenerHealthCheck { return v.HealthChecks }).(GetVirtualNodeSpecListenerHealthCheckArrayOutput)
}

func (o GetVirtualNodeSpecListenerOutput) OutlierDetections() GetVirtualNodeSpecListenerOutlierDetectionArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListener) []GetVirtualNodeSpecListenerOutlierDetection {
		return v.OutlierDetections
	}).(GetVirtualNodeSpecListenerOutlierDetectionArrayOutput)
}

func (o GetVirtualNodeSpecListenerOutput) PortMappings() GetVirtualNodeSpecListenerPortMappingArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListener) []GetVirtualNodeSpecListenerPortMapping { return v.PortMappings }).(GetVirtualNodeSpecListenerPortMappingArrayOutput)
}

func (o GetVirtualNodeSpecListenerOutput) Timeouts() GetVirtualNodeSpecListenerTimeoutArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListener) []GetVirtualNodeSpecListenerTimeout { return v.Timeouts }).(GetVirtualNodeSpecListenerTimeoutArrayOutput)
}

func (o GetVirtualNodeSpecListenerOutput) Tls() GetVirtualNodeSpecListenerTlArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListener) []GetVirtualNodeSpecListenerTl { return v.Tls }).(GetVirtualNodeSpecListenerTlArrayOutput)
}

type GetVirtualNodeSpecListenerArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListener)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerArrayOutput) ToGetVirtualNodeSpecListenerArrayOutput() GetVirtualNodeSpecListenerArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerArrayOutput) ToGetVirtualNodeSpecListenerArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListener {
		return vs[0].([]GetVirtualNodeSpecListener)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerOutput)
}

type GetVirtualNodeSpecListenerConnectionPool struct {
	Grpcs  []GetVirtualNodeSpecListenerConnectionPoolGrpc  `pulumi:"grpcs"`
	Http2s []GetVirtualNodeSpecListenerConnectionPoolHttp2 `pulumi:"http2s"`
	Https  []GetVirtualNodeSpecListenerConnectionPoolHttp  `pulumi:"https"`
	Tcps   []GetVirtualNodeSpecListenerConnectionPoolTcp   `pulumi:"tcps"`
}

// GetVirtualNodeSpecListenerConnectionPoolInput is an input type that accepts GetVirtualNodeSpecListenerConnectionPoolArgs and GetVirtualNodeSpecListenerConnectionPoolOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerConnectionPoolInput` via:
//
//	GetVirtualNodeSpecListenerConnectionPoolArgs{...}
type GetVirtualNodeSpecListenerConnectionPoolInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerConnectionPoolOutput() GetVirtualNodeSpecListenerConnectionPoolOutput
	ToGetVirtualNodeSpecListenerConnectionPoolOutputWithContext(context.Context) GetVirtualNodeSpecListenerConnectionPoolOutput
}

type GetVirtualNodeSpecListenerConnectionPoolArgs struct {
	Grpcs  GetVirtualNodeSpecListenerConnectionPoolGrpcArrayInput  `pulumi:"grpcs"`
	Http2s GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayInput `pulumi:"http2s"`
	Https  GetVirtualNodeSpecListenerConnectionPoolHttpArrayInput  `pulumi:"https"`
	Tcps   GetVirtualNodeSpecListenerConnectionPoolTcpArrayInput   `pulumi:"tcps"`
}

func (GetVirtualNodeSpecListenerConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPool)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerConnectionPoolArgs) ToGetVirtualNodeSpecListenerConnectionPoolOutput() GetVirtualNodeSpecListenerConnectionPoolOutput {
	return i.ToGetVirtualNodeSpecListenerConnectionPoolOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerConnectionPoolArgs) ToGetVirtualNodeSpecListenerConnectionPoolOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerConnectionPoolOutput)
}

// GetVirtualNodeSpecListenerConnectionPoolArrayInput is an input type that accepts GetVirtualNodeSpecListenerConnectionPoolArray and GetVirtualNodeSpecListenerConnectionPoolArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerConnectionPoolArrayInput` via:
//
//	GetVirtualNodeSpecListenerConnectionPoolArray{ GetVirtualNodeSpecListenerConnectionPoolArgs{...} }
type GetVirtualNodeSpecListenerConnectionPoolArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerConnectionPoolArrayOutput() GetVirtualNodeSpecListenerConnectionPoolArrayOutput
	ToGetVirtualNodeSpecListenerConnectionPoolArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerConnectionPoolArrayOutput
}

type GetVirtualNodeSpecListenerConnectionPoolArray []GetVirtualNodeSpecListenerConnectionPoolInput

func (GetVirtualNodeSpecListenerConnectionPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerConnectionPool)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerConnectionPoolArray) ToGetVirtualNodeSpecListenerConnectionPoolArrayOutput() GetVirtualNodeSpecListenerConnectionPoolArrayOutput {
	return i.ToGetVirtualNodeSpecListenerConnectionPoolArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerConnectionPoolArray) ToGetVirtualNodeSpecListenerConnectionPoolArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerConnectionPoolArrayOutput)
}

type GetVirtualNodeSpecListenerConnectionPoolOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPool)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerConnectionPoolOutput) ToGetVirtualNodeSpecListenerConnectionPoolOutput() GetVirtualNodeSpecListenerConnectionPoolOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolOutput) ToGetVirtualNodeSpecListenerConnectionPoolOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolOutput) Grpcs() GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerConnectionPool) []GetVirtualNodeSpecListenerConnectionPoolGrpc {
		return v.Grpcs
	}).(GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput)
}

func (o GetVirtualNodeSpecListenerConnectionPoolOutput) Http2s() GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerConnectionPool) []GetVirtualNodeSpecListenerConnectionPoolHttp2 {
		return v.Http2s
	}).(GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput)
}

func (o GetVirtualNodeSpecListenerConnectionPoolOutput) Https() GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerConnectionPool) []GetVirtualNodeSpecListenerConnectionPoolHttp {
		return v.Https
	}).(GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput)
}

func (o GetVirtualNodeSpecListenerConnectionPoolOutput) Tcps() GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerConnectionPool) []GetVirtualNodeSpecListenerConnectionPoolTcp {
		return v.Tcps
	}).(GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput)
}

type GetVirtualNodeSpecListenerConnectionPoolArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerConnectionPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerConnectionPool)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerConnectionPoolArrayOutput) ToGetVirtualNodeSpecListenerConnectionPoolArrayOutput() GetVirtualNodeSpecListenerConnectionPoolArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolArrayOutput) ToGetVirtualNodeSpecListenerConnectionPoolArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerConnectionPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerConnectionPool {
		return vs[0].([]GetVirtualNodeSpecListenerConnectionPool)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerConnectionPoolOutput)
}

type GetVirtualNodeSpecListenerConnectionPoolGrpc struct {
	MaxRequests int `pulumi:"maxRequests"`
}

// GetVirtualNodeSpecListenerConnectionPoolGrpcInput is an input type that accepts GetVirtualNodeSpecListenerConnectionPoolGrpcArgs and GetVirtualNodeSpecListenerConnectionPoolGrpcOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerConnectionPoolGrpcInput` via:
//
//	GetVirtualNodeSpecListenerConnectionPoolGrpcArgs{...}
type GetVirtualNodeSpecListenerConnectionPoolGrpcInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerConnectionPoolGrpcOutput() GetVirtualNodeSpecListenerConnectionPoolGrpcOutput
	ToGetVirtualNodeSpecListenerConnectionPoolGrpcOutputWithContext(context.Context) GetVirtualNodeSpecListenerConnectionPoolGrpcOutput
}

type GetVirtualNodeSpecListenerConnectionPoolGrpcArgs struct {
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (GetVirtualNodeSpecListenerConnectionPoolGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerConnectionPoolGrpcArgs) ToGetVirtualNodeSpecListenerConnectionPoolGrpcOutput() GetVirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return i.ToGetVirtualNodeSpecListenerConnectionPoolGrpcOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerConnectionPoolGrpcArgs) ToGetVirtualNodeSpecListenerConnectionPoolGrpcOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerConnectionPoolGrpcOutput)
}

// GetVirtualNodeSpecListenerConnectionPoolGrpcArrayInput is an input type that accepts GetVirtualNodeSpecListenerConnectionPoolGrpcArray and GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerConnectionPoolGrpcArrayInput` via:
//
//	GetVirtualNodeSpecListenerConnectionPoolGrpcArray{ GetVirtualNodeSpecListenerConnectionPoolGrpcArgs{...} }
type GetVirtualNodeSpecListenerConnectionPoolGrpcArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput() GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput
	ToGetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput
}

type GetVirtualNodeSpecListenerConnectionPoolGrpcArray []GetVirtualNodeSpecListenerConnectionPoolGrpcInput

func (GetVirtualNodeSpecListenerConnectionPoolGrpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerConnectionPoolGrpcArray) ToGetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput() GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput {
	return i.ToGetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerConnectionPoolGrpcArray) ToGetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput)
}

type GetVirtualNodeSpecListenerConnectionPoolGrpcOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerConnectionPoolGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerConnectionPoolGrpcOutput) ToGetVirtualNodeSpecListenerConnectionPoolGrpcOutput() GetVirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolGrpcOutput) ToGetVirtualNodeSpecListenerConnectionPoolGrpcOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolGrpcOutput) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerConnectionPoolGrpc) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerConnectionPoolGrpc)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput) ToGetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput() GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput) ToGetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerConnectionPoolGrpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerConnectionPoolGrpc {
		return vs[0].([]GetVirtualNodeSpecListenerConnectionPoolGrpc)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerConnectionPoolGrpcOutput)
}

type GetVirtualNodeSpecListenerConnectionPoolHttp2 struct {
	MaxRequests int `pulumi:"maxRequests"`
}

// GetVirtualNodeSpecListenerConnectionPoolHttp2Input is an input type that accepts GetVirtualNodeSpecListenerConnectionPoolHttp2Args and GetVirtualNodeSpecListenerConnectionPoolHttp2Output values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerConnectionPoolHttp2Input` via:
//
//	GetVirtualNodeSpecListenerConnectionPoolHttp2Args{...}
type GetVirtualNodeSpecListenerConnectionPoolHttp2Input interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerConnectionPoolHttp2Output() GetVirtualNodeSpecListenerConnectionPoolHttp2Output
	ToGetVirtualNodeSpecListenerConnectionPoolHttp2OutputWithContext(context.Context) GetVirtualNodeSpecListenerConnectionPoolHttp2Output
}

type GetVirtualNodeSpecListenerConnectionPoolHttp2Args struct {
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (GetVirtualNodeSpecListenerConnectionPoolHttp2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerConnectionPoolHttp2Args) ToGetVirtualNodeSpecListenerConnectionPoolHttp2Output() GetVirtualNodeSpecListenerConnectionPoolHttp2Output {
	return i.ToGetVirtualNodeSpecListenerConnectionPoolHttp2OutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerConnectionPoolHttp2Args) ToGetVirtualNodeSpecListenerConnectionPoolHttp2OutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolHttp2Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerConnectionPoolHttp2Output)
}

// GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayInput is an input type that accepts GetVirtualNodeSpecListenerConnectionPoolHttp2Array and GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayInput` via:
//
//	GetVirtualNodeSpecListenerConnectionPoolHttp2Array{ GetVirtualNodeSpecListenerConnectionPoolHttp2Args{...} }
type GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput() GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput
	ToGetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput
}

type GetVirtualNodeSpecListenerConnectionPoolHttp2Array []GetVirtualNodeSpecListenerConnectionPoolHttp2Input

func (GetVirtualNodeSpecListenerConnectionPoolHttp2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerConnectionPoolHttp2Array) ToGetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput() GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput {
	return i.ToGetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerConnectionPoolHttp2Array) ToGetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput)
}

type GetVirtualNodeSpecListenerConnectionPoolHttp2Output struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerConnectionPoolHttp2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerConnectionPoolHttp2Output) ToGetVirtualNodeSpecListenerConnectionPoolHttp2Output() GetVirtualNodeSpecListenerConnectionPoolHttp2Output {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolHttp2Output) ToGetVirtualNodeSpecListenerConnectionPoolHttp2OutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolHttp2Output {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolHttp2Output) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerConnectionPoolHttp2) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerConnectionPoolHttp2)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput) ToGetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput() GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput) ToGetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerConnectionPoolHttp2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerConnectionPoolHttp2 {
		return vs[0].([]GetVirtualNodeSpecListenerConnectionPoolHttp2)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerConnectionPoolHttp2Output)
}

type GetVirtualNodeSpecListenerConnectionPoolHttp struct {
	MaxConnections     int `pulumi:"maxConnections"`
	MaxPendingRequests int `pulumi:"maxPendingRequests"`
}

// GetVirtualNodeSpecListenerConnectionPoolHttpInput is an input type that accepts GetVirtualNodeSpecListenerConnectionPoolHttpArgs and GetVirtualNodeSpecListenerConnectionPoolHttpOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerConnectionPoolHttpInput` via:
//
//	GetVirtualNodeSpecListenerConnectionPoolHttpArgs{...}
type GetVirtualNodeSpecListenerConnectionPoolHttpInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerConnectionPoolHttpOutput() GetVirtualNodeSpecListenerConnectionPoolHttpOutput
	ToGetVirtualNodeSpecListenerConnectionPoolHttpOutputWithContext(context.Context) GetVirtualNodeSpecListenerConnectionPoolHttpOutput
}

type GetVirtualNodeSpecListenerConnectionPoolHttpArgs struct {
	MaxConnections     pulumi.IntInput `pulumi:"maxConnections"`
	MaxPendingRequests pulumi.IntInput `pulumi:"maxPendingRequests"`
}

func (GetVirtualNodeSpecListenerConnectionPoolHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerConnectionPoolHttpArgs) ToGetVirtualNodeSpecListenerConnectionPoolHttpOutput() GetVirtualNodeSpecListenerConnectionPoolHttpOutput {
	return i.ToGetVirtualNodeSpecListenerConnectionPoolHttpOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerConnectionPoolHttpArgs) ToGetVirtualNodeSpecListenerConnectionPoolHttpOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerConnectionPoolHttpOutput)
}

// GetVirtualNodeSpecListenerConnectionPoolHttpArrayInput is an input type that accepts GetVirtualNodeSpecListenerConnectionPoolHttpArray and GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerConnectionPoolHttpArrayInput` via:
//
//	GetVirtualNodeSpecListenerConnectionPoolHttpArray{ GetVirtualNodeSpecListenerConnectionPoolHttpArgs{...} }
type GetVirtualNodeSpecListenerConnectionPoolHttpArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput() GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput
	ToGetVirtualNodeSpecListenerConnectionPoolHttpArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput
}

type GetVirtualNodeSpecListenerConnectionPoolHttpArray []GetVirtualNodeSpecListenerConnectionPoolHttpInput

func (GetVirtualNodeSpecListenerConnectionPoolHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerConnectionPoolHttpArray) ToGetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput() GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput {
	return i.ToGetVirtualNodeSpecListenerConnectionPoolHttpArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerConnectionPoolHttpArray) ToGetVirtualNodeSpecListenerConnectionPoolHttpArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput)
}

type GetVirtualNodeSpecListenerConnectionPoolHttpOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerConnectionPoolHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerConnectionPoolHttpOutput) ToGetVirtualNodeSpecListenerConnectionPoolHttpOutput() GetVirtualNodeSpecListenerConnectionPoolHttpOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolHttpOutput) ToGetVirtualNodeSpecListenerConnectionPoolHttpOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolHttpOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolHttpOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerConnectionPoolHttp) int { return v.MaxConnections }).(pulumi.IntOutput)
}

func (o GetVirtualNodeSpecListenerConnectionPoolHttpOutput) MaxPendingRequests() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerConnectionPoolHttp) int { return v.MaxPendingRequests }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerConnectionPoolHttp)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput) ToGetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput() GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput) ToGetVirtualNodeSpecListenerConnectionPoolHttpArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerConnectionPoolHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerConnectionPoolHttp {
		return vs[0].([]GetVirtualNodeSpecListenerConnectionPoolHttp)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerConnectionPoolHttpOutput)
}

type GetVirtualNodeSpecListenerConnectionPoolTcp struct {
	MaxConnections int `pulumi:"maxConnections"`
}

// GetVirtualNodeSpecListenerConnectionPoolTcpInput is an input type that accepts GetVirtualNodeSpecListenerConnectionPoolTcpArgs and GetVirtualNodeSpecListenerConnectionPoolTcpOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerConnectionPoolTcpInput` via:
//
//	GetVirtualNodeSpecListenerConnectionPoolTcpArgs{...}
type GetVirtualNodeSpecListenerConnectionPoolTcpInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerConnectionPoolTcpOutput() GetVirtualNodeSpecListenerConnectionPoolTcpOutput
	ToGetVirtualNodeSpecListenerConnectionPoolTcpOutputWithContext(context.Context) GetVirtualNodeSpecListenerConnectionPoolTcpOutput
}

type GetVirtualNodeSpecListenerConnectionPoolTcpArgs struct {
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
}

func (GetVirtualNodeSpecListenerConnectionPoolTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolTcp)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerConnectionPoolTcpArgs) ToGetVirtualNodeSpecListenerConnectionPoolTcpOutput() GetVirtualNodeSpecListenerConnectionPoolTcpOutput {
	return i.ToGetVirtualNodeSpecListenerConnectionPoolTcpOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerConnectionPoolTcpArgs) ToGetVirtualNodeSpecListenerConnectionPoolTcpOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerConnectionPoolTcpOutput)
}

// GetVirtualNodeSpecListenerConnectionPoolTcpArrayInput is an input type that accepts GetVirtualNodeSpecListenerConnectionPoolTcpArray and GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerConnectionPoolTcpArrayInput` via:
//
//	GetVirtualNodeSpecListenerConnectionPoolTcpArray{ GetVirtualNodeSpecListenerConnectionPoolTcpArgs{...} }
type GetVirtualNodeSpecListenerConnectionPoolTcpArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput() GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput
	ToGetVirtualNodeSpecListenerConnectionPoolTcpArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput
}

type GetVirtualNodeSpecListenerConnectionPoolTcpArray []GetVirtualNodeSpecListenerConnectionPoolTcpInput

func (GetVirtualNodeSpecListenerConnectionPoolTcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerConnectionPoolTcp)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerConnectionPoolTcpArray) ToGetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput() GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput {
	return i.ToGetVirtualNodeSpecListenerConnectionPoolTcpArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerConnectionPoolTcpArray) ToGetVirtualNodeSpecListenerConnectionPoolTcpArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput)
}

type GetVirtualNodeSpecListenerConnectionPoolTcpOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerConnectionPoolTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolTcp)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerConnectionPoolTcpOutput) ToGetVirtualNodeSpecListenerConnectionPoolTcpOutput() GetVirtualNodeSpecListenerConnectionPoolTcpOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolTcpOutput) ToGetVirtualNodeSpecListenerConnectionPoolTcpOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolTcpOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolTcpOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerConnectionPoolTcp) int { return v.MaxConnections }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerConnectionPoolTcp)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput) ToGetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput() GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput) ToGetVirtualNodeSpecListenerConnectionPoolTcpArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerConnectionPoolTcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerConnectionPoolTcp {
		return vs[0].([]GetVirtualNodeSpecListenerConnectionPoolTcp)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerConnectionPoolTcpOutput)
}

type GetVirtualNodeSpecListenerHealthCheck struct {
	HealthyThreshold   int    `pulumi:"healthyThreshold"`
	IntervalMillis     int    `pulumi:"intervalMillis"`
	Path               string `pulumi:"path"`
	Port               int    `pulumi:"port"`
	Protocol           string `pulumi:"protocol"`
	TimeoutMillis      int    `pulumi:"timeoutMillis"`
	UnhealthyThreshold int    `pulumi:"unhealthyThreshold"`
}

// GetVirtualNodeSpecListenerHealthCheckInput is an input type that accepts GetVirtualNodeSpecListenerHealthCheckArgs and GetVirtualNodeSpecListenerHealthCheckOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerHealthCheckInput` via:
//
//	GetVirtualNodeSpecListenerHealthCheckArgs{...}
type GetVirtualNodeSpecListenerHealthCheckInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerHealthCheckOutput() GetVirtualNodeSpecListenerHealthCheckOutput
	ToGetVirtualNodeSpecListenerHealthCheckOutputWithContext(context.Context) GetVirtualNodeSpecListenerHealthCheckOutput
}

type GetVirtualNodeSpecListenerHealthCheckArgs struct {
	HealthyThreshold   pulumi.IntInput    `pulumi:"healthyThreshold"`
	IntervalMillis     pulumi.IntInput    `pulumi:"intervalMillis"`
	Path               pulumi.StringInput `pulumi:"path"`
	Port               pulumi.IntInput    `pulumi:"port"`
	Protocol           pulumi.StringInput `pulumi:"protocol"`
	TimeoutMillis      pulumi.IntInput    `pulumi:"timeoutMillis"`
	UnhealthyThreshold pulumi.IntInput    `pulumi:"unhealthyThreshold"`
}

func (GetVirtualNodeSpecListenerHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerHealthCheckArgs) ToGetVirtualNodeSpecListenerHealthCheckOutput() GetVirtualNodeSpecListenerHealthCheckOutput {
	return i.ToGetVirtualNodeSpecListenerHealthCheckOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerHealthCheckArgs) ToGetVirtualNodeSpecListenerHealthCheckOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerHealthCheckOutput)
}

// GetVirtualNodeSpecListenerHealthCheckArrayInput is an input type that accepts GetVirtualNodeSpecListenerHealthCheckArray and GetVirtualNodeSpecListenerHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerHealthCheckArrayInput` via:
//
//	GetVirtualNodeSpecListenerHealthCheckArray{ GetVirtualNodeSpecListenerHealthCheckArgs{...} }
type GetVirtualNodeSpecListenerHealthCheckArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerHealthCheckArrayOutput() GetVirtualNodeSpecListenerHealthCheckArrayOutput
	ToGetVirtualNodeSpecListenerHealthCheckArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerHealthCheckArrayOutput
}

type GetVirtualNodeSpecListenerHealthCheckArray []GetVirtualNodeSpecListenerHealthCheckInput

func (GetVirtualNodeSpecListenerHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerHealthCheckArray) ToGetVirtualNodeSpecListenerHealthCheckArrayOutput() GetVirtualNodeSpecListenerHealthCheckArrayOutput {
	return i.ToGetVirtualNodeSpecListenerHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerHealthCheckArray) ToGetVirtualNodeSpecListenerHealthCheckArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerHealthCheckArrayOutput)
}

type GetVirtualNodeSpecListenerHealthCheckOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerHealthCheckOutput) ToGetVirtualNodeSpecListenerHealthCheckOutput() GetVirtualNodeSpecListenerHealthCheckOutput {
	return o
}

func (o GetVirtualNodeSpecListenerHealthCheckOutput) ToGetVirtualNodeSpecListenerHealthCheckOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerHealthCheckOutput {
	return o
}

func (o GetVirtualNodeSpecListenerHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

func (o GetVirtualNodeSpecListenerHealthCheckOutput) IntervalMillis() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerHealthCheck) int { return v.IntervalMillis }).(pulumi.IntOutput)
}

func (o GetVirtualNodeSpecListenerHealthCheckOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerHealthCheck) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecListenerHealthCheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerHealthCheck) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetVirtualNodeSpecListenerHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecListenerHealthCheckOutput) TimeoutMillis() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerHealthCheck) int { return v.TimeoutMillis }).(pulumi.IntOutput)
}

func (o GetVirtualNodeSpecListenerHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerHealthCheckArrayOutput) ToGetVirtualNodeSpecListenerHealthCheckArrayOutput() GetVirtualNodeSpecListenerHealthCheckArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerHealthCheckArrayOutput) ToGetVirtualNodeSpecListenerHealthCheckArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerHealthCheckArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerHealthCheckArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerHealthCheck {
		return vs[0].([]GetVirtualNodeSpecListenerHealthCheck)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerHealthCheckOutput)
}

type GetVirtualNodeSpecListenerOutlierDetection struct {
	BaseEjectionDurations []GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration `pulumi:"baseEjectionDurations"`
	Intervals             []GetVirtualNodeSpecListenerOutlierDetectionInterval             `pulumi:"intervals"`
	MaxEjectionPercent    int                                                              `pulumi:"maxEjectionPercent"`
	MaxServerErrors       int                                                              `pulumi:"maxServerErrors"`
}

// GetVirtualNodeSpecListenerOutlierDetectionInput is an input type that accepts GetVirtualNodeSpecListenerOutlierDetectionArgs and GetVirtualNodeSpecListenerOutlierDetectionOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerOutlierDetectionInput` via:
//
//	GetVirtualNodeSpecListenerOutlierDetectionArgs{...}
type GetVirtualNodeSpecListenerOutlierDetectionInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerOutlierDetectionOutput() GetVirtualNodeSpecListenerOutlierDetectionOutput
	ToGetVirtualNodeSpecListenerOutlierDetectionOutputWithContext(context.Context) GetVirtualNodeSpecListenerOutlierDetectionOutput
}

type GetVirtualNodeSpecListenerOutlierDetectionArgs struct {
	BaseEjectionDurations GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayInput `pulumi:"baseEjectionDurations"`
	Intervals             GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayInput             `pulumi:"intervals"`
	MaxEjectionPercent    pulumi.IntInput                                                          `pulumi:"maxEjectionPercent"`
	MaxServerErrors       pulumi.IntInput                                                          `pulumi:"maxServerErrors"`
}

func (GetVirtualNodeSpecListenerOutlierDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerOutlierDetection)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerOutlierDetectionArgs) ToGetVirtualNodeSpecListenerOutlierDetectionOutput() GetVirtualNodeSpecListenerOutlierDetectionOutput {
	return i.ToGetVirtualNodeSpecListenerOutlierDetectionOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerOutlierDetectionArgs) ToGetVirtualNodeSpecListenerOutlierDetectionOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerOutlierDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerOutlierDetectionOutput)
}

// GetVirtualNodeSpecListenerOutlierDetectionArrayInput is an input type that accepts GetVirtualNodeSpecListenerOutlierDetectionArray and GetVirtualNodeSpecListenerOutlierDetectionArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerOutlierDetectionArrayInput` via:
//
//	GetVirtualNodeSpecListenerOutlierDetectionArray{ GetVirtualNodeSpecListenerOutlierDetectionArgs{...} }
type GetVirtualNodeSpecListenerOutlierDetectionArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerOutlierDetectionArrayOutput() GetVirtualNodeSpecListenerOutlierDetectionArrayOutput
	ToGetVirtualNodeSpecListenerOutlierDetectionArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerOutlierDetectionArrayOutput
}

type GetVirtualNodeSpecListenerOutlierDetectionArray []GetVirtualNodeSpecListenerOutlierDetectionInput

func (GetVirtualNodeSpecListenerOutlierDetectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerOutlierDetection)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerOutlierDetectionArray) ToGetVirtualNodeSpecListenerOutlierDetectionArrayOutput() GetVirtualNodeSpecListenerOutlierDetectionArrayOutput {
	return i.ToGetVirtualNodeSpecListenerOutlierDetectionArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerOutlierDetectionArray) ToGetVirtualNodeSpecListenerOutlierDetectionArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerOutlierDetectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerOutlierDetectionArrayOutput)
}

type GetVirtualNodeSpecListenerOutlierDetectionOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerOutlierDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerOutlierDetection)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerOutlierDetectionOutput) ToGetVirtualNodeSpecListenerOutlierDetectionOutput() GetVirtualNodeSpecListenerOutlierDetectionOutput {
	return o
}

func (o GetVirtualNodeSpecListenerOutlierDetectionOutput) ToGetVirtualNodeSpecListenerOutlierDetectionOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerOutlierDetectionOutput {
	return o
}

func (o GetVirtualNodeSpecListenerOutlierDetectionOutput) BaseEjectionDurations() GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerOutlierDetection) []GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration {
		return v.BaseEjectionDurations
	}).(GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput)
}

func (o GetVirtualNodeSpecListenerOutlierDetectionOutput) Intervals() GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerOutlierDetection) []GetVirtualNodeSpecListenerOutlierDetectionInterval {
		return v.Intervals
	}).(GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput)
}

func (o GetVirtualNodeSpecListenerOutlierDetectionOutput) MaxEjectionPercent() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerOutlierDetection) int { return v.MaxEjectionPercent }).(pulumi.IntOutput)
}

func (o GetVirtualNodeSpecListenerOutlierDetectionOutput) MaxServerErrors() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerOutlierDetection) int { return v.MaxServerErrors }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerOutlierDetectionArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerOutlierDetectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerOutlierDetection)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerOutlierDetectionArrayOutput) ToGetVirtualNodeSpecListenerOutlierDetectionArrayOutput() GetVirtualNodeSpecListenerOutlierDetectionArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerOutlierDetectionArrayOutput) ToGetVirtualNodeSpecListenerOutlierDetectionArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerOutlierDetectionArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerOutlierDetectionArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerOutlierDetectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerOutlierDetection {
		return vs[0].([]GetVirtualNodeSpecListenerOutlierDetection)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerOutlierDetectionOutput)
}

type GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput is an input type that accepts GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs and GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput` via:
//
//	GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs{...}
type GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput() GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput
	ToGetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutputWithContext(context.Context) GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput
}

type GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) ToGetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput() GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return i.ToGetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs) ToGetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput)
}

// GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayInput is an input type that accepts GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArray and GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayInput` via:
//
//	GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArray{ GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs{...} }
type GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput() GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput
	ToGetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput
}

type GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArray []GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput

func (GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArray) ToGetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput() GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput {
	return i.ToGetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArray) ToGetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput)
}

type GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) ToGetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput() GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return o
}

func (o GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) ToGetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return o
}

func (o GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration) int { return v.Value }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput) ToGetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput() GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput) ToGetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration {
		return vs[0].([]GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput)
}

type GetVirtualNodeSpecListenerOutlierDetectionInterval struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetVirtualNodeSpecListenerOutlierDetectionIntervalInput is an input type that accepts GetVirtualNodeSpecListenerOutlierDetectionIntervalArgs and GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerOutlierDetectionIntervalInput` via:
//
//	GetVirtualNodeSpecListenerOutlierDetectionIntervalArgs{...}
type GetVirtualNodeSpecListenerOutlierDetectionIntervalInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerOutlierDetectionIntervalOutput() GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput
	ToGetVirtualNodeSpecListenerOutlierDetectionIntervalOutputWithContext(context.Context) GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput
}

type GetVirtualNodeSpecListenerOutlierDetectionIntervalArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetVirtualNodeSpecListenerOutlierDetectionIntervalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerOutlierDetectionInterval)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerOutlierDetectionIntervalArgs) ToGetVirtualNodeSpecListenerOutlierDetectionIntervalOutput() GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return i.ToGetVirtualNodeSpecListenerOutlierDetectionIntervalOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerOutlierDetectionIntervalArgs) ToGetVirtualNodeSpecListenerOutlierDetectionIntervalOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput)
}

// GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayInput is an input type that accepts GetVirtualNodeSpecListenerOutlierDetectionIntervalArray and GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayInput` via:
//
//	GetVirtualNodeSpecListenerOutlierDetectionIntervalArray{ GetVirtualNodeSpecListenerOutlierDetectionIntervalArgs{...} }
type GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput() GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput
	ToGetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput
}

type GetVirtualNodeSpecListenerOutlierDetectionIntervalArray []GetVirtualNodeSpecListenerOutlierDetectionIntervalInput

func (GetVirtualNodeSpecListenerOutlierDetectionIntervalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerOutlierDetectionInterval)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerOutlierDetectionIntervalArray) ToGetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput() GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput {
	return i.ToGetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerOutlierDetectionIntervalArray) ToGetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput)
}

type GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerOutlierDetectionInterval)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput) ToGetVirtualNodeSpecListenerOutlierDetectionIntervalOutput() GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return o
}

func (o GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput) ToGetVirtualNodeSpecListenerOutlierDetectionIntervalOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return o
}

func (o GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerOutlierDetectionInterval) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerOutlierDetectionInterval) int { return v.Value }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerOutlierDetectionInterval)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput) ToGetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput() GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput) ToGetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerOutlierDetectionInterval {
		return vs[0].([]GetVirtualNodeSpecListenerOutlierDetectionInterval)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput)
}

type GetVirtualNodeSpecListenerPortMapping struct {
	Port     int    `pulumi:"port"`
	Protocol string `pulumi:"protocol"`
}

// GetVirtualNodeSpecListenerPortMappingInput is an input type that accepts GetVirtualNodeSpecListenerPortMappingArgs and GetVirtualNodeSpecListenerPortMappingOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerPortMappingInput` via:
//
//	GetVirtualNodeSpecListenerPortMappingArgs{...}
type GetVirtualNodeSpecListenerPortMappingInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerPortMappingOutput() GetVirtualNodeSpecListenerPortMappingOutput
	ToGetVirtualNodeSpecListenerPortMappingOutputWithContext(context.Context) GetVirtualNodeSpecListenerPortMappingOutput
}

type GetVirtualNodeSpecListenerPortMappingArgs struct {
	Port     pulumi.IntInput    `pulumi:"port"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetVirtualNodeSpecListenerPortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerPortMapping)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerPortMappingArgs) ToGetVirtualNodeSpecListenerPortMappingOutput() GetVirtualNodeSpecListenerPortMappingOutput {
	return i.ToGetVirtualNodeSpecListenerPortMappingOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerPortMappingArgs) ToGetVirtualNodeSpecListenerPortMappingOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerPortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerPortMappingOutput)
}

// GetVirtualNodeSpecListenerPortMappingArrayInput is an input type that accepts GetVirtualNodeSpecListenerPortMappingArray and GetVirtualNodeSpecListenerPortMappingArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerPortMappingArrayInput` via:
//
//	GetVirtualNodeSpecListenerPortMappingArray{ GetVirtualNodeSpecListenerPortMappingArgs{...} }
type GetVirtualNodeSpecListenerPortMappingArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerPortMappingArrayOutput() GetVirtualNodeSpecListenerPortMappingArrayOutput
	ToGetVirtualNodeSpecListenerPortMappingArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerPortMappingArrayOutput
}

type GetVirtualNodeSpecListenerPortMappingArray []GetVirtualNodeSpecListenerPortMappingInput

func (GetVirtualNodeSpecListenerPortMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerPortMapping)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerPortMappingArray) ToGetVirtualNodeSpecListenerPortMappingArrayOutput() GetVirtualNodeSpecListenerPortMappingArrayOutput {
	return i.ToGetVirtualNodeSpecListenerPortMappingArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerPortMappingArray) ToGetVirtualNodeSpecListenerPortMappingArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerPortMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerPortMappingArrayOutput)
}

type GetVirtualNodeSpecListenerPortMappingOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerPortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerPortMapping)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerPortMappingOutput) ToGetVirtualNodeSpecListenerPortMappingOutput() GetVirtualNodeSpecListenerPortMappingOutput {
	return o
}

func (o GetVirtualNodeSpecListenerPortMappingOutput) ToGetVirtualNodeSpecListenerPortMappingOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerPortMappingOutput {
	return o
}

func (o GetVirtualNodeSpecListenerPortMappingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerPortMapping) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetVirtualNodeSpecListenerPortMappingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerPortMapping) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecListenerPortMappingArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerPortMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerPortMapping)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerPortMappingArrayOutput) ToGetVirtualNodeSpecListenerPortMappingArrayOutput() GetVirtualNodeSpecListenerPortMappingArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerPortMappingArrayOutput) ToGetVirtualNodeSpecListenerPortMappingArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerPortMappingArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerPortMappingArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerPortMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerPortMapping {
		return vs[0].([]GetVirtualNodeSpecListenerPortMapping)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerPortMappingOutput)
}

type GetVirtualNodeSpecListenerTimeout struct {
	Grpcs  []GetVirtualNodeSpecListenerTimeoutGrpc  `pulumi:"grpcs"`
	Http2s []GetVirtualNodeSpecListenerTimeoutHttp2 `pulumi:"http2s"`
	Https  []GetVirtualNodeSpecListenerTimeoutHttp  `pulumi:"https"`
	Tcps   []GetVirtualNodeSpecListenerTimeoutTcp   `pulumi:"tcps"`
}

// GetVirtualNodeSpecListenerTimeoutInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutArgs and GetVirtualNodeSpecListenerTimeoutOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutArgs{...}
type GetVirtualNodeSpecListenerTimeoutInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutOutput() GetVirtualNodeSpecListenerTimeoutOutput
	ToGetVirtualNodeSpecListenerTimeoutOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutOutput
}

type GetVirtualNodeSpecListenerTimeoutArgs struct {
	Grpcs  GetVirtualNodeSpecListenerTimeoutGrpcArrayInput  `pulumi:"grpcs"`
	Http2s GetVirtualNodeSpecListenerTimeoutHttp2ArrayInput `pulumi:"http2s"`
	Https  GetVirtualNodeSpecListenerTimeoutHttpArrayInput  `pulumi:"https"`
	Tcps   GetVirtualNodeSpecListenerTimeoutTcpArrayInput   `pulumi:"tcps"`
}

func (GetVirtualNodeSpecListenerTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeout)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutArgs) ToGetVirtualNodeSpecListenerTimeoutOutput() GetVirtualNodeSpecListenerTimeoutOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutArgs) ToGetVirtualNodeSpecListenerTimeoutOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutOutput)
}

// GetVirtualNodeSpecListenerTimeoutArrayInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutArray and GetVirtualNodeSpecListenerTimeoutArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutArrayInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutArray{ GetVirtualNodeSpecListenerTimeoutArgs{...} }
type GetVirtualNodeSpecListenerTimeoutArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutArrayOutput() GetVirtualNodeSpecListenerTimeoutArrayOutput
	ToGetVirtualNodeSpecListenerTimeoutArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutArrayOutput
}

type GetVirtualNodeSpecListenerTimeoutArray []GetVirtualNodeSpecListenerTimeoutInput

func (GetVirtualNodeSpecListenerTimeoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeout)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutArray) ToGetVirtualNodeSpecListenerTimeoutArrayOutput() GetVirtualNodeSpecListenerTimeoutArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutArray) ToGetVirtualNodeSpecListenerTimeoutArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeout)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutOutput) ToGetVirtualNodeSpecListenerTimeoutOutput() GetVirtualNodeSpecListenerTimeoutOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutOutput) ToGetVirtualNodeSpecListenerTimeoutOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutOutput) Grpcs() GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeout) []GetVirtualNodeSpecListenerTimeoutGrpc { return v.Grpcs }).(GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput)
}

func (o GetVirtualNodeSpecListenerTimeoutOutput) Http2s() GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeout) []GetVirtualNodeSpecListenerTimeoutHttp2 { return v.Http2s }).(GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput)
}

func (o GetVirtualNodeSpecListenerTimeoutOutput) Https() GetVirtualNodeSpecListenerTimeoutHttpArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeout) []GetVirtualNodeSpecListenerTimeoutHttp { return v.Https }).(GetVirtualNodeSpecListenerTimeoutHttpArrayOutput)
}

func (o GetVirtualNodeSpecListenerTimeoutOutput) Tcps() GetVirtualNodeSpecListenerTimeoutTcpArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeout) []GetVirtualNodeSpecListenerTimeoutTcp { return v.Tcps }).(GetVirtualNodeSpecListenerTimeoutTcpArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeout)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutArrayOutput) ToGetVirtualNodeSpecListenerTimeoutArrayOutput() GetVirtualNodeSpecListenerTimeoutArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutArrayOutput) ToGetVirtualNodeSpecListenerTimeoutArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTimeoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTimeout {
		return vs[0].([]GetVirtualNodeSpecListenerTimeout)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTimeoutOutput)
}

type GetVirtualNodeSpecListenerTimeoutGrpc struct {
	Idles       []GetVirtualNodeSpecListenerTimeoutGrpcIdle       `pulumi:"idles"`
	PerRequests []GetVirtualNodeSpecListenerTimeoutGrpcPerRequest `pulumi:"perRequests"`
}

// GetVirtualNodeSpecListenerTimeoutGrpcInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutGrpcArgs and GetVirtualNodeSpecListenerTimeoutGrpcOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutGrpcInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutGrpcArgs{...}
type GetVirtualNodeSpecListenerTimeoutGrpcInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutGrpcOutput() GetVirtualNodeSpecListenerTimeoutGrpcOutput
	ToGetVirtualNodeSpecListenerTimeoutGrpcOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutGrpcOutput
}

type GetVirtualNodeSpecListenerTimeoutGrpcArgs struct {
	Idles       GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayInput       `pulumi:"idles"`
	PerRequests GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayInput `pulumi:"perRequests"`
}

func (GetVirtualNodeSpecListenerTimeoutGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutGrpc)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutGrpcArgs) ToGetVirtualNodeSpecListenerTimeoutGrpcOutput() GetVirtualNodeSpecListenerTimeoutGrpcOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutGrpcOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutGrpcArgs) ToGetVirtualNodeSpecListenerTimeoutGrpcOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutGrpcOutput)
}

// GetVirtualNodeSpecListenerTimeoutGrpcArrayInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutGrpcArray and GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutGrpcArrayInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutGrpcArray{ GetVirtualNodeSpecListenerTimeoutGrpcArgs{...} }
type GetVirtualNodeSpecListenerTimeoutGrpcArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutGrpcArrayOutput() GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput
	ToGetVirtualNodeSpecListenerTimeoutGrpcArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput
}

type GetVirtualNodeSpecListenerTimeoutGrpcArray []GetVirtualNodeSpecListenerTimeoutGrpcInput

func (GetVirtualNodeSpecListenerTimeoutGrpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutGrpc)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutGrpcArray) ToGetVirtualNodeSpecListenerTimeoutGrpcArrayOutput() GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutGrpcArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutGrpcArray) ToGetVirtualNodeSpecListenerTimeoutGrpcArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutGrpcOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutGrpc)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcOutput) ToGetVirtualNodeSpecListenerTimeoutGrpcOutput() GetVirtualNodeSpecListenerTimeoutGrpcOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcOutput) ToGetVirtualNodeSpecListenerTimeoutGrpcOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutGrpcOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcOutput) Idles() GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutGrpc) []GetVirtualNodeSpecListenerTimeoutGrpcIdle {
		return v.Idles
	}).(GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput)
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcOutput) PerRequests() GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutGrpc) []GetVirtualNodeSpecListenerTimeoutGrpcPerRequest {
		return v.PerRequests
	}).(GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutGrpc)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput) ToGetVirtualNodeSpecListenerTimeoutGrpcArrayOutput() GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput) ToGetVirtualNodeSpecListenerTimeoutGrpcArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTimeoutGrpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTimeoutGrpc {
		return vs[0].([]GetVirtualNodeSpecListenerTimeoutGrpc)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTimeoutGrpcOutput)
}

type GetVirtualNodeSpecListenerTimeoutGrpcIdle struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetVirtualNodeSpecListenerTimeoutGrpcIdleInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutGrpcIdleArgs and GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutGrpcIdleInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutGrpcIdleArgs{...}
type GetVirtualNodeSpecListenerTimeoutGrpcIdleInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutGrpcIdleOutput() GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput
	ToGetVirtualNodeSpecListenerTimeoutGrpcIdleOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput
}

type GetVirtualNodeSpecListenerTimeoutGrpcIdleArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetVirtualNodeSpecListenerTimeoutGrpcIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutGrpcIdle)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutGrpcIdleArgs) ToGetVirtualNodeSpecListenerTimeoutGrpcIdleOutput() GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutGrpcIdleOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutGrpcIdleArgs) ToGetVirtualNodeSpecListenerTimeoutGrpcIdleOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput)
}

// GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutGrpcIdleArray and GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutGrpcIdleArray{ GetVirtualNodeSpecListenerTimeoutGrpcIdleArgs{...} }
type GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput() GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput
	ToGetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput
}

type GetVirtualNodeSpecListenerTimeoutGrpcIdleArray []GetVirtualNodeSpecListenerTimeoutGrpcIdleInput

func (GetVirtualNodeSpecListenerTimeoutGrpcIdleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutGrpcIdle)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutGrpcIdleArray) ToGetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput() GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutGrpcIdleArray) ToGetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutGrpcIdle)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput) ToGetVirtualNodeSpecListenerTimeoutGrpcIdleOutput() GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput) ToGetVirtualNodeSpecListenerTimeoutGrpcIdleOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutGrpcIdle) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutGrpcIdle) int { return v.Value }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutGrpcIdle)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput) ToGetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput() GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput) ToGetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTimeoutGrpcIdle {
		return vs[0].([]GetVirtualNodeSpecListenerTimeoutGrpcIdle)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput)
}

type GetVirtualNodeSpecListenerTimeoutGrpcPerRequest struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetVirtualNodeSpecListenerTimeoutGrpcPerRequestInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArgs and GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutGrpcPerRequestInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArgs{...}
type GetVirtualNodeSpecListenerTimeoutGrpcPerRequestInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput() GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput
	ToGetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput
}

type GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutGrpcPerRequest)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) ToGetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput() GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArgs) ToGetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput)
}

// GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArray and GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArray{ GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArgs{...} }
type GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput() GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput
	ToGetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput
}

type GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArray []GetVirtualNodeSpecListenerTimeoutGrpcPerRequestInput

func (GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutGrpcPerRequest)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArray) ToGetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput() GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArray) ToGetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutGrpcPerRequest)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) ToGetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput() GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) ToGetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutGrpcPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutGrpcPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutGrpcPerRequest)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput) ToGetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput() GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput) ToGetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTimeoutGrpcPerRequest {
		return vs[0].([]GetVirtualNodeSpecListenerTimeoutGrpcPerRequest)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttp2 struct {
	Idles       []GetVirtualNodeSpecListenerTimeoutHttp2Idle       `pulumi:"idles"`
	PerRequests []GetVirtualNodeSpecListenerTimeoutHttp2PerRequest `pulumi:"perRequests"`
}

// GetVirtualNodeSpecListenerTimeoutHttp2Input is an input type that accepts GetVirtualNodeSpecListenerTimeoutHttp2Args and GetVirtualNodeSpecListenerTimeoutHttp2Output values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutHttp2Input` via:
//
//	GetVirtualNodeSpecListenerTimeoutHttp2Args{...}
type GetVirtualNodeSpecListenerTimeoutHttp2Input interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutHttp2Output() GetVirtualNodeSpecListenerTimeoutHttp2Output
	ToGetVirtualNodeSpecListenerTimeoutHttp2OutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutHttp2Output
}

type GetVirtualNodeSpecListenerTimeoutHttp2Args struct {
	Idles       GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayInput       `pulumi:"idles"`
	PerRequests GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayInput `pulumi:"perRequests"`
}

func (GetVirtualNodeSpecListenerTimeoutHttp2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttp2)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutHttp2Args) ToGetVirtualNodeSpecListenerTimeoutHttp2Output() GetVirtualNodeSpecListenerTimeoutHttp2Output {
	return i.ToGetVirtualNodeSpecListenerTimeoutHttp2OutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutHttp2Args) ToGetVirtualNodeSpecListenerTimeoutHttp2OutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttp2Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutHttp2Output)
}

// GetVirtualNodeSpecListenerTimeoutHttp2ArrayInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutHttp2Array and GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutHttp2ArrayInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutHttp2Array{ GetVirtualNodeSpecListenerTimeoutHttp2Args{...} }
type GetVirtualNodeSpecListenerTimeoutHttp2ArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput() GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput
	ToGetVirtualNodeSpecListenerTimeoutHttp2ArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput
}

type GetVirtualNodeSpecListenerTimeoutHttp2Array []GetVirtualNodeSpecListenerTimeoutHttp2Input

func (GetVirtualNodeSpecListenerTimeoutHttp2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutHttp2)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutHttp2Array) ToGetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput() GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutHttp2ArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutHttp2Array) ToGetVirtualNodeSpecListenerTimeoutHttp2ArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttp2Output struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutHttp2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttp2)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2Output) ToGetVirtualNodeSpecListenerTimeoutHttp2Output() GetVirtualNodeSpecListenerTimeoutHttp2Output {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2Output) ToGetVirtualNodeSpecListenerTimeoutHttp2OutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttp2Output {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2Output) Idles() GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutHttp2) []GetVirtualNodeSpecListenerTimeoutHttp2Idle {
		return v.Idles
	}).(GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput)
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2Output) PerRequests() GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutHttp2) []GetVirtualNodeSpecListenerTimeoutHttp2PerRequest {
		return v.PerRequests
	}).(GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutHttp2)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput) ToGetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput() GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput) ToGetVirtualNodeSpecListenerTimeoutHttp2ArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTimeoutHttp2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTimeoutHttp2 {
		return vs[0].([]GetVirtualNodeSpecListenerTimeoutHttp2)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTimeoutHttp2Output)
}

type GetVirtualNodeSpecListenerTimeoutHttp2Idle struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetVirtualNodeSpecListenerTimeoutHttp2IdleInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutHttp2IdleArgs and GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutHttp2IdleInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutHttp2IdleArgs{...}
type GetVirtualNodeSpecListenerTimeoutHttp2IdleInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutHttp2IdleOutput() GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput
	ToGetVirtualNodeSpecListenerTimeoutHttp2IdleOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput
}

type GetVirtualNodeSpecListenerTimeoutHttp2IdleArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetVirtualNodeSpecListenerTimeoutHttp2IdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttp2Idle)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutHttp2IdleArgs) ToGetVirtualNodeSpecListenerTimeoutHttp2IdleOutput() GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutHttp2IdleOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutHttp2IdleArgs) ToGetVirtualNodeSpecListenerTimeoutHttp2IdleOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput)
}

// GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutHttp2IdleArray and GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutHttp2IdleArray{ GetVirtualNodeSpecListenerTimeoutHttp2IdleArgs{...} }
type GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput() GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput
	ToGetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput
}

type GetVirtualNodeSpecListenerTimeoutHttp2IdleArray []GetVirtualNodeSpecListenerTimeoutHttp2IdleInput

func (GetVirtualNodeSpecListenerTimeoutHttp2IdleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutHttp2Idle)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutHttp2IdleArray) ToGetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput() GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutHttp2IdleArray) ToGetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttp2Idle)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput) ToGetVirtualNodeSpecListenerTimeoutHttp2IdleOutput() GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput) ToGetVirtualNodeSpecListenerTimeoutHttp2IdleOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutHttp2Idle) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutHttp2Idle) int { return v.Value }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutHttp2Idle)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput) ToGetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput() GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput) ToGetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTimeoutHttp2Idle {
		return vs[0].([]GetVirtualNodeSpecListenerTimeoutHttp2Idle)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttp2PerRequest struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetVirtualNodeSpecListenerTimeoutHttp2PerRequestInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArgs and GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutHttp2PerRequestInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArgs{...}
type GetVirtualNodeSpecListenerTimeoutHttp2PerRequestInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput() GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput
	ToGetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput
}

type GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttp2PerRequest)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) ToGetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput() GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArgs) ToGetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput)
}

// GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArray and GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArray{ GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArgs{...} }
type GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput() GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput
	ToGetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput
}

type GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArray []GetVirtualNodeSpecListenerTimeoutHttp2PerRequestInput

func (GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutHttp2PerRequest)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArray) ToGetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput() GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArray) ToGetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttp2PerRequest)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) ToGetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput() GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) ToGetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutHttp2PerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutHttp2PerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutHttp2PerRequest)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput) ToGetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput() GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput) ToGetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTimeoutHttp2PerRequest {
		return vs[0].([]GetVirtualNodeSpecListenerTimeoutHttp2PerRequest)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttp struct {
	Idles       []GetVirtualNodeSpecListenerTimeoutHttpIdle       `pulumi:"idles"`
	PerRequests []GetVirtualNodeSpecListenerTimeoutHttpPerRequest `pulumi:"perRequests"`
}

// GetVirtualNodeSpecListenerTimeoutHttpInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutHttpArgs and GetVirtualNodeSpecListenerTimeoutHttpOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutHttpInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutHttpArgs{...}
type GetVirtualNodeSpecListenerTimeoutHttpInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutHttpOutput() GetVirtualNodeSpecListenerTimeoutHttpOutput
	ToGetVirtualNodeSpecListenerTimeoutHttpOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutHttpOutput
}

type GetVirtualNodeSpecListenerTimeoutHttpArgs struct {
	Idles       GetVirtualNodeSpecListenerTimeoutHttpIdleArrayInput       `pulumi:"idles"`
	PerRequests GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayInput `pulumi:"perRequests"`
}

func (GetVirtualNodeSpecListenerTimeoutHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttp)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutHttpArgs) ToGetVirtualNodeSpecListenerTimeoutHttpOutput() GetVirtualNodeSpecListenerTimeoutHttpOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutHttpOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutHttpArgs) ToGetVirtualNodeSpecListenerTimeoutHttpOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutHttpOutput)
}

// GetVirtualNodeSpecListenerTimeoutHttpArrayInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutHttpArray and GetVirtualNodeSpecListenerTimeoutHttpArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutHttpArrayInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutHttpArray{ GetVirtualNodeSpecListenerTimeoutHttpArgs{...} }
type GetVirtualNodeSpecListenerTimeoutHttpArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutHttpArrayOutput() GetVirtualNodeSpecListenerTimeoutHttpArrayOutput
	ToGetVirtualNodeSpecListenerTimeoutHttpArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutHttpArrayOutput
}

type GetVirtualNodeSpecListenerTimeoutHttpArray []GetVirtualNodeSpecListenerTimeoutHttpInput

func (GetVirtualNodeSpecListenerTimeoutHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutHttp)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutHttpArray) ToGetVirtualNodeSpecListenerTimeoutHttpArrayOutput() GetVirtualNodeSpecListenerTimeoutHttpArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutHttpArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutHttpArray) ToGetVirtualNodeSpecListenerTimeoutHttpArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutHttpArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttpOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttp)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutHttpOutput) ToGetVirtualNodeSpecListenerTimeoutHttpOutput() GetVirtualNodeSpecListenerTimeoutHttpOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttpOutput) ToGetVirtualNodeSpecListenerTimeoutHttpOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttpOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttpOutput) Idles() GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutHttp) []GetVirtualNodeSpecListenerTimeoutHttpIdle {
		return v.Idles
	}).(GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput)
}

func (o GetVirtualNodeSpecListenerTimeoutHttpOutput) PerRequests() GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutHttp) []GetVirtualNodeSpecListenerTimeoutHttpPerRequest {
		return v.PerRequests
	}).(GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttpArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutHttp)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutHttpArrayOutput) ToGetVirtualNodeSpecListenerTimeoutHttpArrayOutput() GetVirtualNodeSpecListenerTimeoutHttpArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttpArrayOutput) ToGetVirtualNodeSpecListenerTimeoutHttpArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttpArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttpArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTimeoutHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTimeoutHttp {
		return vs[0].([]GetVirtualNodeSpecListenerTimeoutHttp)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTimeoutHttpOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttpIdle struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetVirtualNodeSpecListenerTimeoutHttpIdleInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutHttpIdleArgs and GetVirtualNodeSpecListenerTimeoutHttpIdleOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutHttpIdleInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutHttpIdleArgs{...}
type GetVirtualNodeSpecListenerTimeoutHttpIdleInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutHttpIdleOutput() GetVirtualNodeSpecListenerTimeoutHttpIdleOutput
	ToGetVirtualNodeSpecListenerTimeoutHttpIdleOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutHttpIdleOutput
}

type GetVirtualNodeSpecListenerTimeoutHttpIdleArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetVirtualNodeSpecListenerTimeoutHttpIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttpIdle)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutHttpIdleArgs) ToGetVirtualNodeSpecListenerTimeoutHttpIdleOutput() GetVirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutHttpIdleOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutHttpIdleArgs) ToGetVirtualNodeSpecListenerTimeoutHttpIdleOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutHttpIdleOutput)
}

// GetVirtualNodeSpecListenerTimeoutHttpIdleArrayInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutHttpIdleArray and GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutHttpIdleArrayInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutHttpIdleArray{ GetVirtualNodeSpecListenerTimeoutHttpIdleArgs{...} }
type GetVirtualNodeSpecListenerTimeoutHttpIdleArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput() GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput
	ToGetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput
}

type GetVirtualNodeSpecListenerTimeoutHttpIdleArray []GetVirtualNodeSpecListenerTimeoutHttpIdleInput

func (GetVirtualNodeSpecListenerTimeoutHttpIdleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutHttpIdle)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutHttpIdleArray) ToGetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput() GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutHttpIdleArray) ToGetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttpIdleOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutHttpIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttpIdle)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutHttpIdleOutput) ToGetVirtualNodeSpecListenerTimeoutHttpIdleOutput() GetVirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttpIdleOutput) ToGetVirtualNodeSpecListenerTimeoutHttpIdleOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttpIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutHttpIdle) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecListenerTimeoutHttpIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutHttpIdle) int { return v.Value }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutHttpIdle)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput) ToGetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput() GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput) ToGetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTimeoutHttpIdleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTimeoutHttpIdle {
		return vs[0].([]GetVirtualNodeSpecListenerTimeoutHttpIdle)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTimeoutHttpIdleOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttpPerRequest struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetVirtualNodeSpecListenerTimeoutHttpPerRequestInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutHttpPerRequestArgs and GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutHttpPerRequestInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutHttpPerRequestArgs{...}
type GetVirtualNodeSpecListenerTimeoutHttpPerRequestInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput() GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput
	ToGetVirtualNodeSpecListenerTimeoutHttpPerRequestOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput
}

type GetVirtualNodeSpecListenerTimeoutHttpPerRequestArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetVirtualNodeSpecListenerTimeoutHttpPerRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttpPerRequest)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutHttpPerRequestArgs) ToGetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput() GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutHttpPerRequestOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutHttpPerRequestArgs) ToGetVirtualNodeSpecListenerTimeoutHttpPerRequestOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput)
}

// GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutHttpPerRequestArray and GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutHttpPerRequestArray{ GetVirtualNodeSpecListenerTimeoutHttpPerRequestArgs{...} }
type GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput() GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput
	ToGetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput
}

type GetVirtualNodeSpecListenerTimeoutHttpPerRequestArray []GetVirtualNodeSpecListenerTimeoutHttpPerRequestInput

func (GetVirtualNodeSpecListenerTimeoutHttpPerRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutHttpPerRequest)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutHttpPerRequestArray) ToGetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput() GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutHttpPerRequestArray) ToGetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttpPerRequest)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput) ToGetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput() GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput) ToGetVirtualNodeSpecListenerTimeoutHttpPerRequestOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutHttpPerRequest) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutHttpPerRequest) int { return v.Value }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutHttpPerRequest)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput) ToGetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput() GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput) ToGetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTimeoutHttpPerRequest {
		return vs[0].([]GetVirtualNodeSpecListenerTimeoutHttpPerRequest)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput)
}

type GetVirtualNodeSpecListenerTimeoutTcp struct {
	Idles []GetVirtualNodeSpecListenerTimeoutTcpIdle `pulumi:"idles"`
}

// GetVirtualNodeSpecListenerTimeoutTcpInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutTcpArgs and GetVirtualNodeSpecListenerTimeoutTcpOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutTcpInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutTcpArgs{...}
type GetVirtualNodeSpecListenerTimeoutTcpInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutTcpOutput() GetVirtualNodeSpecListenerTimeoutTcpOutput
	ToGetVirtualNodeSpecListenerTimeoutTcpOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutTcpOutput
}

type GetVirtualNodeSpecListenerTimeoutTcpArgs struct {
	Idles GetVirtualNodeSpecListenerTimeoutTcpIdleArrayInput `pulumi:"idles"`
}

func (GetVirtualNodeSpecListenerTimeoutTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutTcp)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutTcpArgs) ToGetVirtualNodeSpecListenerTimeoutTcpOutput() GetVirtualNodeSpecListenerTimeoutTcpOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutTcpOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutTcpArgs) ToGetVirtualNodeSpecListenerTimeoutTcpOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutTcpOutput)
}

// GetVirtualNodeSpecListenerTimeoutTcpArrayInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutTcpArray and GetVirtualNodeSpecListenerTimeoutTcpArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutTcpArrayInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutTcpArray{ GetVirtualNodeSpecListenerTimeoutTcpArgs{...} }
type GetVirtualNodeSpecListenerTimeoutTcpArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutTcpArrayOutput() GetVirtualNodeSpecListenerTimeoutTcpArrayOutput
	ToGetVirtualNodeSpecListenerTimeoutTcpArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutTcpArrayOutput
}

type GetVirtualNodeSpecListenerTimeoutTcpArray []GetVirtualNodeSpecListenerTimeoutTcpInput

func (GetVirtualNodeSpecListenerTimeoutTcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutTcp)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutTcpArray) ToGetVirtualNodeSpecListenerTimeoutTcpArrayOutput() GetVirtualNodeSpecListenerTimeoutTcpArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutTcpArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutTcpArray) ToGetVirtualNodeSpecListenerTimeoutTcpArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutTcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutTcpArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutTcpOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutTcp)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutTcpOutput) ToGetVirtualNodeSpecListenerTimeoutTcpOutput() GetVirtualNodeSpecListenerTimeoutTcpOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutTcpOutput) ToGetVirtualNodeSpecListenerTimeoutTcpOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutTcpOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutTcpOutput) Idles() GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutTcp) []GetVirtualNodeSpecListenerTimeoutTcpIdle {
		return v.Idles
	}).(GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutTcpArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutTcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutTcp)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutTcpArrayOutput) ToGetVirtualNodeSpecListenerTimeoutTcpArrayOutput() GetVirtualNodeSpecListenerTimeoutTcpArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutTcpArrayOutput) ToGetVirtualNodeSpecListenerTimeoutTcpArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutTcpArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutTcpArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTimeoutTcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTimeoutTcp {
		return vs[0].([]GetVirtualNodeSpecListenerTimeoutTcp)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTimeoutTcpOutput)
}

type GetVirtualNodeSpecListenerTimeoutTcpIdle struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// GetVirtualNodeSpecListenerTimeoutTcpIdleInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutTcpIdleArgs and GetVirtualNodeSpecListenerTimeoutTcpIdleOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutTcpIdleInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutTcpIdleArgs{...}
type GetVirtualNodeSpecListenerTimeoutTcpIdleInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutTcpIdleOutput() GetVirtualNodeSpecListenerTimeoutTcpIdleOutput
	ToGetVirtualNodeSpecListenerTimeoutTcpIdleOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutTcpIdleOutput
}

type GetVirtualNodeSpecListenerTimeoutTcpIdleArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetVirtualNodeSpecListenerTimeoutTcpIdleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutTcpIdle)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutTcpIdleArgs) ToGetVirtualNodeSpecListenerTimeoutTcpIdleOutput() GetVirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutTcpIdleOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutTcpIdleArgs) ToGetVirtualNodeSpecListenerTimeoutTcpIdleOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutTcpIdleOutput)
}

// GetVirtualNodeSpecListenerTimeoutTcpIdleArrayInput is an input type that accepts GetVirtualNodeSpecListenerTimeoutTcpIdleArray and GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTimeoutTcpIdleArrayInput` via:
//
//	GetVirtualNodeSpecListenerTimeoutTcpIdleArray{ GetVirtualNodeSpecListenerTimeoutTcpIdleArgs{...} }
type GetVirtualNodeSpecListenerTimeoutTcpIdleArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput() GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput
	ToGetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput
}

type GetVirtualNodeSpecListenerTimeoutTcpIdleArray []GetVirtualNodeSpecListenerTimeoutTcpIdleInput

func (GetVirtualNodeSpecListenerTimeoutTcpIdleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutTcpIdle)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTimeoutTcpIdleArray) ToGetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput() GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTimeoutTcpIdleArray) ToGetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput)
}

type GetVirtualNodeSpecListenerTimeoutTcpIdleOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutTcpIdleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutTcpIdle)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutTcpIdleOutput) ToGetVirtualNodeSpecListenerTimeoutTcpIdleOutput() GetVirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutTcpIdleOutput) ToGetVirtualNodeSpecListenerTimeoutTcpIdleOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutTcpIdleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutTcpIdle) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecListenerTimeoutTcpIdleOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTimeoutTcpIdle) int { return v.Value }).(pulumi.IntOutput)
}

type GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTimeoutTcpIdle)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput) ToGetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput() GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput) ToGetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTimeoutTcpIdleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTimeoutTcpIdle {
		return vs[0].([]GetVirtualNodeSpecListenerTimeoutTcpIdle)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTimeoutTcpIdleOutput)
}

type GetVirtualNodeSpecListenerTl struct {
	Certificates []GetVirtualNodeSpecListenerTlCertificate `pulumi:"certificates"`
	Mode         string                                    `pulumi:"mode"`
	Validations  []GetVirtualNodeSpecListenerTlValidation  `pulumi:"validations"`
}

// GetVirtualNodeSpecListenerTlInput is an input type that accepts GetVirtualNodeSpecListenerTlArgs and GetVirtualNodeSpecListenerTlOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlInput` via:
//
//	GetVirtualNodeSpecListenerTlArgs{...}
type GetVirtualNodeSpecListenerTlInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlOutput() GetVirtualNodeSpecListenerTlOutput
	ToGetVirtualNodeSpecListenerTlOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlOutput
}

type GetVirtualNodeSpecListenerTlArgs struct {
	Certificates GetVirtualNodeSpecListenerTlCertificateArrayInput `pulumi:"certificates"`
	Mode         pulumi.StringInput                                `pulumi:"mode"`
	Validations  GetVirtualNodeSpecListenerTlValidationArrayInput  `pulumi:"validations"`
}

func (GetVirtualNodeSpecListenerTlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTl)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlArgs) ToGetVirtualNodeSpecListenerTlOutput() GetVirtualNodeSpecListenerTlOutput {
	return i.ToGetVirtualNodeSpecListenerTlOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlArgs) ToGetVirtualNodeSpecListenerTlOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlOutput)
}

// GetVirtualNodeSpecListenerTlArrayInput is an input type that accepts GetVirtualNodeSpecListenerTlArray and GetVirtualNodeSpecListenerTlArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlArrayInput` via:
//
//	GetVirtualNodeSpecListenerTlArray{ GetVirtualNodeSpecListenerTlArgs{...} }
type GetVirtualNodeSpecListenerTlArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlArrayOutput() GetVirtualNodeSpecListenerTlArrayOutput
	ToGetVirtualNodeSpecListenerTlArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlArrayOutput
}

type GetVirtualNodeSpecListenerTlArray []GetVirtualNodeSpecListenerTlInput

func (GetVirtualNodeSpecListenerTlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTl)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlArray) ToGetVirtualNodeSpecListenerTlArrayOutput() GetVirtualNodeSpecListenerTlArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTlArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlArray) ToGetVirtualNodeSpecListenerTlArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlArrayOutput)
}

type GetVirtualNodeSpecListenerTlOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTl)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlOutput) ToGetVirtualNodeSpecListenerTlOutput() GetVirtualNodeSpecListenerTlOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlOutput) ToGetVirtualNodeSpecListenerTlOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlOutput) Certificates() GetVirtualNodeSpecListenerTlCertificateArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTl) []GetVirtualNodeSpecListenerTlCertificate { return v.Certificates }).(GetVirtualNodeSpecListenerTlCertificateArrayOutput)
}

func (o GetVirtualNodeSpecListenerTlOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTl) string { return v.Mode }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecListenerTlOutput) Validations() GetVirtualNodeSpecListenerTlValidationArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTl) []GetVirtualNodeSpecListenerTlValidation { return v.Validations }).(GetVirtualNodeSpecListenerTlValidationArrayOutput)
}

type GetVirtualNodeSpecListenerTlArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTl)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlArrayOutput) ToGetVirtualNodeSpecListenerTlArrayOutput() GetVirtualNodeSpecListenerTlArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlArrayOutput) ToGetVirtualNodeSpecListenerTlArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTl {
		return vs[0].([]GetVirtualNodeSpecListenerTl)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTlOutput)
}

type GetVirtualNodeSpecListenerTlCertificate struct {
	Acms  []GetVirtualNodeSpecListenerTlCertificateAcm  `pulumi:"acms"`
	Files []GetVirtualNodeSpecListenerTlCertificateFile `pulumi:"files"`
	Sds   []GetVirtualNodeSpecListenerTlCertificateSd   `pulumi:"sds"`
}

// GetVirtualNodeSpecListenerTlCertificateInput is an input type that accepts GetVirtualNodeSpecListenerTlCertificateArgs and GetVirtualNodeSpecListenerTlCertificateOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlCertificateInput` via:
//
//	GetVirtualNodeSpecListenerTlCertificateArgs{...}
type GetVirtualNodeSpecListenerTlCertificateInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlCertificateOutput() GetVirtualNodeSpecListenerTlCertificateOutput
	ToGetVirtualNodeSpecListenerTlCertificateOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlCertificateOutput
}

type GetVirtualNodeSpecListenerTlCertificateArgs struct {
	Acms  GetVirtualNodeSpecListenerTlCertificateAcmArrayInput  `pulumi:"acms"`
	Files GetVirtualNodeSpecListenerTlCertificateFileArrayInput `pulumi:"files"`
	Sds   GetVirtualNodeSpecListenerTlCertificateSdArrayInput   `pulumi:"sds"`
}

func (GetVirtualNodeSpecListenerTlCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificate)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlCertificateArgs) ToGetVirtualNodeSpecListenerTlCertificateOutput() GetVirtualNodeSpecListenerTlCertificateOutput {
	return i.ToGetVirtualNodeSpecListenerTlCertificateOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlCertificateArgs) ToGetVirtualNodeSpecListenerTlCertificateOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlCertificateOutput)
}

// GetVirtualNodeSpecListenerTlCertificateArrayInput is an input type that accepts GetVirtualNodeSpecListenerTlCertificateArray and GetVirtualNodeSpecListenerTlCertificateArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlCertificateArrayInput` via:
//
//	GetVirtualNodeSpecListenerTlCertificateArray{ GetVirtualNodeSpecListenerTlCertificateArgs{...} }
type GetVirtualNodeSpecListenerTlCertificateArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlCertificateArrayOutput() GetVirtualNodeSpecListenerTlCertificateArrayOutput
	ToGetVirtualNodeSpecListenerTlCertificateArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlCertificateArrayOutput
}

type GetVirtualNodeSpecListenerTlCertificateArray []GetVirtualNodeSpecListenerTlCertificateInput

func (GetVirtualNodeSpecListenerTlCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlCertificate)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlCertificateArray) ToGetVirtualNodeSpecListenerTlCertificateArrayOutput() GetVirtualNodeSpecListenerTlCertificateArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTlCertificateArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlCertificateArray) ToGetVirtualNodeSpecListenerTlCertificateArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlCertificateArrayOutput)
}

type GetVirtualNodeSpecListenerTlCertificateOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificate)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlCertificateOutput) ToGetVirtualNodeSpecListenerTlCertificateOutput() GetVirtualNodeSpecListenerTlCertificateOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateOutput) ToGetVirtualNodeSpecListenerTlCertificateOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateOutput) Acms() GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlCertificate) []GetVirtualNodeSpecListenerTlCertificateAcm {
		return v.Acms
	}).(GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput)
}

func (o GetVirtualNodeSpecListenerTlCertificateOutput) Files() GetVirtualNodeSpecListenerTlCertificateFileArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlCertificate) []GetVirtualNodeSpecListenerTlCertificateFile {
		return v.Files
	}).(GetVirtualNodeSpecListenerTlCertificateFileArrayOutput)
}

func (o GetVirtualNodeSpecListenerTlCertificateOutput) Sds() GetVirtualNodeSpecListenerTlCertificateSdArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlCertificate) []GetVirtualNodeSpecListenerTlCertificateSd {
		return v.Sds
	}).(GetVirtualNodeSpecListenerTlCertificateSdArrayOutput)
}

type GetVirtualNodeSpecListenerTlCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlCertificate)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlCertificateArrayOutput) ToGetVirtualNodeSpecListenerTlCertificateArrayOutput() GetVirtualNodeSpecListenerTlCertificateArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateArrayOutput) ToGetVirtualNodeSpecListenerTlCertificateArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTlCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTlCertificate {
		return vs[0].([]GetVirtualNodeSpecListenerTlCertificate)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTlCertificateOutput)
}

type GetVirtualNodeSpecListenerTlCertificateAcm struct {
	CertificateArn string `pulumi:"certificateArn"`
}

// GetVirtualNodeSpecListenerTlCertificateAcmInput is an input type that accepts GetVirtualNodeSpecListenerTlCertificateAcmArgs and GetVirtualNodeSpecListenerTlCertificateAcmOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlCertificateAcmInput` via:
//
//	GetVirtualNodeSpecListenerTlCertificateAcmArgs{...}
type GetVirtualNodeSpecListenerTlCertificateAcmInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlCertificateAcmOutput() GetVirtualNodeSpecListenerTlCertificateAcmOutput
	ToGetVirtualNodeSpecListenerTlCertificateAcmOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlCertificateAcmOutput
}

type GetVirtualNodeSpecListenerTlCertificateAcmArgs struct {
	CertificateArn pulumi.StringInput `pulumi:"certificateArn"`
}

func (GetVirtualNodeSpecListenerTlCertificateAcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificateAcm)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlCertificateAcmArgs) ToGetVirtualNodeSpecListenerTlCertificateAcmOutput() GetVirtualNodeSpecListenerTlCertificateAcmOutput {
	return i.ToGetVirtualNodeSpecListenerTlCertificateAcmOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlCertificateAcmArgs) ToGetVirtualNodeSpecListenerTlCertificateAcmOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateAcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlCertificateAcmOutput)
}

// GetVirtualNodeSpecListenerTlCertificateAcmArrayInput is an input type that accepts GetVirtualNodeSpecListenerTlCertificateAcmArray and GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlCertificateAcmArrayInput` via:
//
//	GetVirtualNodeSpecListenerTlCertificateAcmArray{ GetVirtualNodeSpecListenerTlCertificateAcmArgs{...} }
type GetVirtualNodeSpecListenerTlCertificateAcmArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlCertificateAcmArrayOutput() GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput
	ToGetVirtualNodeSpecListenerTlCertificateAcmArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput
}

type GetVirtualNodeSpecListenerTlCertificateAcmArray []GetVirtualNodeSpecListenerTlCertificateAcmInput

func (GetVirtualNodeSpecListenerTlCertificateAcmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlCertificateAcm)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlCertificateAcmArray) ToGetVirtualNodeSpecListenerTlCertificateAcmArrayOutput() GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTlCertificateAcmArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlCertificateAcmArray) ToGetVirtualNodeSpecListenerTlCertificateAcmArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput)
}

type GetVirtualNodeSpecListenerTlCertificateAcmOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlCertificateAcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificateAcm)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlCertificateAcmOutput) ToGetVirtualNodeSpecListenerTlCertificateAcmOutput() GetVirtualNodeSpecListenerTlCertificateAcmOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateAcmOutput) ToGetVirtualNodeSpecListenerTlCertificateAcmOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateAcmOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateAcmOutput) CertificateArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlCertificateAcm) string { return v.CertificateArn }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlCertificateAcm)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput) ToGetVirtualNodeSpecListenerTlCertificateAcmArrayOutput() GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput) ToGetVirtualNodeSpecListenerTlCertificateAcmArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTlCertificateAcmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTlCertificateAcm {
		return vs[0].([]GetVirtualNodeSpecListenerTlCertificateAcm)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTlCertificateAcmOutput)
}

type GetVirtualNodeSpecListenerTlCertificateFile struct {
	CertificateChain string `pulumi:"certificateChain"`
	PrivateKey       string `pulumi:"privateKey"`
}

// GetVirtualNodeSpecListenerTlCertificateFileInput is an input type that accepts GetVirtualNodeSpecListenerTlCertificateFileArgs and GetVirtualNodeSpecListenerTlCertificateFileOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlCertificateFileInput` via:
//
//	GetVirtualNodeSpecListenerTlCertificateFileArgs{...}
type GetVirtualNodeSpecListenerTlCertificateFileInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlCertificateFileOutput() GetVirtualNodeSpecListenerTlCertificateFileOutput
	ToGetVirtualNodeSpecListenerTlCertificateFileOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlCertificateFileOutput
}

type GetVirtualNodeSpecListenerTlCertificateFileArgs struct {
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	PrivateKey       pulumi.StringInput `pulumi:"privateKey"`
}

func (GetVirtualNodeSpecListenerTlCertificateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificateFile)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlCertificateFileArgs) ToGetVirtualNodeSpecListenerTlCertificateFileOutput() GetVirtualNodeSpecListenerTlCertificateFileOutput {
	return i.ToGetVirtualNodeSpecListenerTlCertificateFileOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlCertificateFileArgs) ToGetVirtualNodeSpecListenerTlCertificateFileOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlCertificateFileOutput)
}

// GetVirtualNodeSpecListenerTlCertificateFileArrayInput is an input type that accepts GetVirtualNodeSpecListenerTlCertificateFileArray and GetVirtualNodeSpecListenerTlCertificateFileArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlCertificateFileArrayInput` via:
//
//	GetVirtualNodeSpecListenerTlCertificateFileArray{ GetVirtualNodeSpecListenerTlCertificateFileArgs{...} }
type GetVirtualNodeSpecListenerTlCertificateFileArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlCertificateFileArrayOutput() GetVirtualNodeSpecListenerTlCertificateFileArrayOutput
	ToGetVirtualNodeSpecListenerTlCertificateFileArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlCertificateFileArrayOutput
}

type GetVirtualNodeSpecListenerTlCertificateFileArray []GetVirtualNodeSpecListenerTlCertificateFileInput

func (GetVirtualNodeSpecListenerTlCertificateFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlCertificateFile)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlCertificateFileArray) ToGetVirtualNodeSpecListenerTlCertificateFileArrayOutput() GetVirtualNodeSpecListenerTlCertificateFileArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTlCertificateFileArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlCertificateFileArray) ToGetVirtualNodeSpecListenerTlCertificateFileArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlCertificateFileArrayOutput)
}

type GetVirtualNodeSpecListenerTlCertificateFileOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlCertificateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificateFile)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlCertificateFileOutput) ToGetVirtualNodeSpecListenerTlCertificateFileOutput() GetVirtualNodeSpecListenerTlCertificateFileOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateFileOutput) ToGetVirtualNodeSpecListenerTlCertificateFileOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateFileOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlCertificateFile) string { return v.CertificateChain }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecListenerTlCertificateFileOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlCertificateFile) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecListenerTlCertificateFileArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlCertificateFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlCertificateFile)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlCertificateFileArrayOutput) ToGetVirtualNodeSpecListenerTlCertificateFileArrayOutput() GetVirtualNodeSpecListenerTlCertificateFileArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateFileArrayOutput) ToGetVirtualNodeSpecListenerTlCertificateFileArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateFileArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateFileArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTlCertificateFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTlCertificateFile {
		return vs[0].([]GetVirtualNodeSpecListenerTlCertificateFile)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTlCertificateFileOutput)
}

type GetVirtualNodeSpecListenerTlCertificateSd struct {
	SecretName string `pulumi:"secretName"`
}

// GetVirtualNodeSpecListenerTlCertificateSdInput is an input type that accepts GetVirtualNodeSpecListenerTlCertificateSdArgs and GetVirtualNodeSpecListenerTlCertificateSdOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlCertificateSdInput` via:
//
//	GetVirtualNodeSpecListenerTlCertificateSdArgs{...}
type GetVirtualNodeSpecListenerTlCertificateSdInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlCertificateSdOutput() GetVirtualNodeSpecListenerTlCertificateSdOutput
	ToGetVirtualNodeSpecListenerTlCertificateSdOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlCertificateSdOutput
}

type GetVirtualNodeSpecListenerTlCertificateSdArgs struct {
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (GetVirtualNodeSpecListenerTlCertificateSdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificateSd)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlCertificateSdArgs) ToGetVirtualNodeSpecListenerTlCertificateSdOutput() GetVirtualNodeSpecListenerTlCertificateSdOutput {
	return i.ToGetVirtualNodeSpecListenerTlCertificateSdOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlCertificateSdArgs) ToGetVirtualNodeSpecListenerTlCertificateSdOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateSdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlCertificateSdOutput)
}

// GetVirtualNodeSpecListenerTlCertificateSdArrayInput is an input type that accepts GetVirtualNodeSpecListenerTlCertificateSdArray and GetVirtualNodeSpecListenerTlCertificateSdArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlCertificateSdArrayInput` via:
//
//	GetVirtualNodeSpecListenerTlCertificateSdArray{ GetVirtualNodeSpecListenerTlCertificateSdArgs{...} }
type GetVirtualNodeSpecListenerTlCertificateSdArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlCertificateSdArrayOutput() GetVirtualNodeSpecListenerTlCertificateSdArrayOutput
	ToGetVirtualNodeSpecListenerTlCertificateSdArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlCertificateSdArrayOutput
}

type GetVirtualNodeSpecListenerTlCertificateSdArray []GetVirtualNodeSpecListenerTlCertificateSdInput

func (GetVirtualNodeSpecListenerTlCertificateSdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlCertificateSd)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlCertificateSdArray) ToGetVirtualNodeSpecListenerTlCertificateSdArrayOutput() GetVirtualNodeSpecListenerTlCertificateSdArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTlCertificateSdArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlCertificateSdArray) ToGetVirtualNodeSpecListenerTlCertificateSdArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateSdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlCertificateSdArrayOutput)
}

type GetVirtualNodeSpecListenerTlCertificateSdOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlCertificateSdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificateSd)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlCertificateSdOutput) ToGetVirtualNodeSpecListenerTlCertificateSdOutput() GetVirtualNodeSpecListenerTlCertificateSdOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateSdOutput) ToGetVirtualNodeSpecListenerTlCertificateSdOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateSdOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateSdOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlCertificateSd) string { return v.SecretName }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecListenerTlCertificateSdArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlCertificateSdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlCertificateSd)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlCertificateSdArrayOutput) ToGetVirtualNodeSpecListenerTlCertificateSdArrayOutput() GetVirtualNodeSpecListenerTlCertificateSdArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateSdArrayOutput) ToGetVirtualNodeSpecListenerTlCertificateSdArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlCertificateSdArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlCertificateSdArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTlCertificateSdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTlCertificateSd {
		return vs[0].([]GetVirtualNodeSpecListenerTlCertificateSd)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTlCertificateSdOutput)
}

type GetVirtualNodeSpecListenerTlValidation struct {
	SubjectAlternativeNames []GetVirtualNodeSpecListenerTlValidationSubjectAlternativeName `pulumi:"subjectAlternativeNames"`
	Trusts                  []GetVirtualNodeSpecListenerTlValidationTrust                  `pulumi:"trusts"`
}

// GetVirtualNodeSpecListenerTlValidationInput is an input type that accepts GetVirtualNodeSpecListenerTlValidationArgs and GetVirtualNodeSpecListenerTlValidationOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlValidationInput` via:
//
//	GetVirtualNodeSpecListenerTlValidationArgs{...}
type GetVirtualNodeSpecListenerTlValidationInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlValidationOutput() GetVirtualNodeSpecListenerTlValidationOutput
	ToGetVirtualNodeSpecListenerTlValidationOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlValidationOutput
}

type GetVirtualNodeSpecListenerTlValidationArgs struct {
	SubjectAlternativeNames GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayInput `pulumi:"subjectAlternativeNames"`
	Trusts                  GetVirtualNodeSpecListenerTlValidationTrustArrayInput                  `pulumi:"trusts"`
}

func (GetVirtualNodeSpecListenerTlValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidation)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlValidationArgs) ToGetVirtualNodeSpecListenerTlValidationOutput() GetVirtualNodeSpecListenerTlValidationOutput {
	return i.ToGetVirtualNodeSpecListenerTlValidationOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlValidationArgs) ToGetVirtualNodeSpecListenerTlValidationOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlValidationOutput)
}

// GetVirtualNodeSpecListenerTlValidationArrayInput is an input type that accepts GetVirtualNodeSpecListenerTlValidationArray and GetVirtualNodeSpecListenerTlValidationArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlValidationArrayInput` via:
//
//	GetVirtualNodeSpecListenerTlValidationArray{ GetVirtualNodeSpecListenerTlValidationArgs{...} }
type GetVirtualNodeSpecListenerTlValidationArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlValidationArrayOutput() GetVirtualNodeSpecListenerTlValidationArrayOutput
	ToGetVirtualNodeSpecListenerTlValidationArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlValidationArrayOutput
}

type GetVirtualNodeSpecListenerTlValidationArray []GetVirtualNodeSpecListenerTlValidationInput

func (GetVirtualNodeSpecListenerTlValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlValidation)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlValidationArray) ToGetVirtualNodeSpecListenerTlValidationArrayOutput() GetVirtualNodeSpecListenerTlValidationArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTlValidationArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlValidationArray) ToGetVirtualNodeSpecListenerTlValidationArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlValidationArrayOutput)
}

type GetVirtualNodeSpecListenerTlValidationOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidation)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlValidationOutput) ToGetVirtualNodeSpecListenerTlValidationOutput() GetVirtualNodeSpecListenerTlValidationOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationOutput) ToGetVirtualNodeSpecListenerTlValidationOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationOutput) SubjectAlternativeNames() GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlValidation) []GetVirtualNodeSpecListenerTlValidationSubjectAlternativeName {
		return v.SubjectAlternativeNames
	}).(GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput)
}

func (o GetVirtualNodeSpecListenerTlValidationOutput) Trusts() GetVirtualNodeSpecListenerTlValidationTrustArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlValidation) []GetVirtualNodeSpecListenerTlValidationTrust {
		return v.Trusts
	}).(GetVirtualNodeSpecListenerTlValidationTrustArrayOutput)
}

type GetVirtualNodeSpecListenerTlValidationArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlValidation)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlValidationArrayOutput) ToGetVirtualNodeSpecListenerTlValidationArrayOutput() GetVirtualNodeSpecListenerTlValidationArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationArrayOutput) ToGetVirtualNodeSpecListenerTlValidationArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTlValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTlValidation {
		return vs[0].([]GetVirtualNodeSpecListenerTlValidation)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTlValidationOutput)
}

type GetVirtualNodeSpecListenerTlValidationSubjectAlternativeName struct {
	Matches []GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatch `pulumi:"matches"`
}

// GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameInput is an input type that accepts GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArgs and GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameInput` via:
//
//	GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArgs{...}
type GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput() GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput
	ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput
}

type GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArgs struct {
	Matches GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayInput `pulumi:"matches"`
}

func (GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArgs) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput() GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput {
	return i.ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArgs) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput)
}

// GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayInput is an input type that accepts GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArray and GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayInput` via:
//
//	GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArray{ GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArgs{...} }
type GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput() GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput
	ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput
}

type GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArray []GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameInput

func (GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArray) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput() GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArray) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput)
}

type GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput() GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput) Matches() GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlValidationSubjectAlternativeName) []GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatch {
		return v.Matches
	}).(GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput)
}

type GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlValidationSubjectAlternativeName)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput() GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeName {
		return vs[0].([]GetVirtualNodeSpecListenerTlValidationSubjectAlternativeName)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput)
}

type GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatch struct {
	Exacts []string `pulumi:"exacts"`
}

// GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchInput is an input type that accepts GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArgs and GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchInput` via:
//
//	GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArgs{...}
type GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput() GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput
	ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput
}

type GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArgs struct {
	Exacts pulumi.StringArrayInput `pulumi:"exacts"`
}

func (GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArgs) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput() GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput {
	return i.ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArgs) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput)
}

// GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayInput is an input type that accepts GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArray and GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayInput` via:
//
//	GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArray{ GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArgs{...} }
type GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput
	ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput
}

type GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArray []GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchInput

func (GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArray) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArray) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput)
}

type GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput() GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput) Exacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatch) []string { return v.Exacts }).(pulumi.StringArrayOutput)
}

type GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatch)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput() GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput) ToGetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatch {
		return vs[0].([]GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatch)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput)
}

type GetVirtualNodeSpecListenerTlValidationTrust struct {
	Files []GetVirtualNodeSpecListenerTlValidationTrustFile `pulumi:"files"`
	Sds   []GetVirtualNodeSpecListenerTlValidationTrustSd   `pulumi:"sds"`
}

// GetVirtualNodeSpecListenerTlValidationTrustInput is an input type that accepts GetVirtualNodeSpecListenerTlValidationTrustArgs and GetVirtualNodeSpecListenerTlValidationTrustOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlValidationTrustInput` via:
//
//	GetVirtualNodeSpecListenerTlValidationTrustArgs{...}
type GetVirtualNodeSpecListenerTlValidationTrustInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlValidationTrustOutput() GetVirtualNodeSpecListenerTlValidationTrustOutput
	ToGetVirtualNodeSpecListenerTlValidationTrustOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlValidationTrustOutput
}

type GetVirtualNodeSpecListenerTlValidationTrustArgs struct {
	Files GetVirtualNodeSpecListenerTlValidationTrustFileArrayInput `pulumi:"files"`
	Sds   GetVirtualNodeSpecListenerTlValidationTrustSdArrayInput   `pulumi:"sds"`
}

func (GetVirtualNodeSpecListenerTlValidationTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationTrust)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlValidationTrustArgs) ToGetVirtualNodeSpecListenerTlValidationTrustOutput() GetVirtualNodeSpecListenerTlValidationTrustOutput {
	return i.ToGetVirtualNodeSpecListenerTlValidationTrustOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlValidationTrustArgs) ToGetVirtualNodeSpecListenerTlValidationTrustOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlValidationTrustOutput)
}

// GetVirtualNodeSpecListenerTlValidationTrustArrayInput is an input type that accepts GetVirtualNodeSpecListenerTlValidationTrustArray and GetVirtualNodeSpecListenerTlValidationTrustArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlValidationTrustArrayInput` via:
//
//	GetVirtualNodeSpecListenerTlValidationTrustArray{ GetVirtualNodeSpecListenerTlValidationTrustArgs{...} }
type GetVirtualNodeSpecListenerTlValidationTrustArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlValidationTrustArrayOutput() GetVirtualNodeSpecListenerTlValidationTrustArrayOutput
	ToGetVirtualNodeSpecListenerTlValidationTrustArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlValidationTrustArrayOutput
}

type GetVirtualNodeSpecListenerTlValidationTrustArray []GetVirtualNodeSpecListenerTlValidationTrustInput

func (GetVirtualNodeSpecListenerTlValidationTrustArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlValidationTrust)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlValidationTrustArray) ToGetVirtualNodeSpecListenerTlValidationTrustArrayOutput() GetVirtualNodeSpecListenerTlValidationTrustArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTlValidationTrustArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlValidationTrustArray) ToGetVirtualNodeSpecListenerTlValidationTrustArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationTrustArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlValidationTrustArrayOutput)
}

type GetVirtualNodeSpecListenerTlValidationTrustOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlValidationTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationTrust)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlValidationTrustOutput) ToGetVirtualNodeSpecListenerTlValidationTrustOutput() GetVirtualNodeSpecListenerTlValidationTrustOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationTrustOutput) ToGetVirtualNodeSpecListenerTlValidationTrustOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationTrustOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationTrustOutput) Files() GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlValidationTrust) []GetVirtualNodeSpecListenerTlValidationTrustFile {
		return v.Files
	}).(GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput)
}

func (o GetVirtualNodeSpecListenerTlValidationTrustOutput) Sds() GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlValidationTrust) []GetVirtualNodeSpecListenerTlValidationTrustSd {
		return v.Sds
	}).(GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput)
}

type GetVirtualNodeSpecListenerTlValidationTrustArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlValidationTrustArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlValidationTrust)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlValidationTrustArrayOutput) ToGetVirtualNodeSpecListenerTlValidationTrustArrayOutput() GetVirtualNodeSpecListenerTlValidationTrustArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationTrustArrayOutput) ToGetVirtualNodeSpecListenerTlValidationTrustArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationTrustArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationTrustArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTlValidationTrustOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTlValidationTrust {
		return vs[0].([]GetVirtualNodeSpecListenerTlValidationTrust)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTlValidationTrustOutput)
}

type GetVirtualNodeSpecListenerTlValidationTrustFile struct {
	CertificateChain string `pulumi:"certificateChain"`
}

// GetVirtualNodeSpecListenerTlValidationTrustFileInput is an input type that accepts GetVirtualNodeSpecListenerTlValidationTrustFileArgs and GetVirtualNodeSpecListenerTlValidationTrustFileOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlValidationTrustFileInput` via:
//
//	GetVirtualNodeSpecListenerTlValidationTrustFileArgs{...}
type GetVirtualNodeSpecListenerTlValidationTrustFileInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlValidationTrustFileOutput() GetVirtualNodeSpecListenerTlValidationTrustFileOutput
	ToGetVirtualNodeSpecListenerTlValidationTrustFileOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlValidationTrustFileOutput
}

type GetVirtualNodeSpecListenerTlValidationTrustFileArgs struct {
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (GetVirtualNodeSpecListenerTlValidationTrustFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationTrustFile)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlValidationTrustFileArgs) ToGetVirtualNodeSpecListenerTlValidationTrustFileOutput() GetVirtualNodeSpecListenerTlValidationTrustFileOutput {
	return i.ToGetVirtualNodeSpecListenerTlValidationTrustFileOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlValidationTrustFileArgs) ToGetVirtualNodeSpecListenerTlValidationTrustFileOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationTrustFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlValidationTrustFileOutput)
}

// GetVirtualNodeSpecListenerTlValidationTrustFileArrayInput is an input type that accepts GetVirtualNodeSpecListenerTlValidationTrustFileArray and GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlValidationTrustFileArrayInput` via:
//
//	GetVirtualNodeSpecListenerTlValidationTrustFileArray{ GetVirtualNodeSpecListenerTlValidationTrustFileArgs{...} }
type GetVirtualNodeSpecListenerTlValidationTrustFileArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput() GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput
	ToGetVirtualNodeSpecListenerTlValidationTrustFileArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput
}

type GetVirtualNodeSpecListenerTlValidationTrustFileArray []GetVirtualNodeSpecListenerTlValidationTrustFileInput

func (GetVirtualNodeSpecListenerTlValidationTrustFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlValidationTrustFile)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlValidationTrustFileArray) ToGetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput() GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTlValidationTrustFileArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlValidationTrustFileArray) ToGetVirtualNodeSpecListenerTlValidationTrustFileArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput)
}

type GetVirtualNodeSpecListenerTlValidationTrustFileOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlValidationTrustFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationTrustFile)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlValidationTrustFileOutput) ToGetVirtualNodeSpecListenerTlValidationTrustFileOutput() GetVirtualNodeSpecListenerTlValidationTrustFileOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationTrustFileOutput) ToGetVirtualNodeSpecListenerTlValidationTrustFileOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationTrustFileOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationTrustFileOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlValidationTrustFile) string { return v.CertificateChain }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlValidationTrustFile)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput) ToGetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput() GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput) ToGetVirtualNodeSpecListenerTlValidationTrustFileArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTlValidationTrustFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTlValidationTrustFile {
		return vs[0].([]GetVirtualNodeSpecListenerTlValidationTrustFile)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTlValidationTrustFileOutput)
}

type GetVirtualNodeSpecListenerTlValidationTrustSd struct {
	SecretName string `pulumi:"secretName"`
}

// GetVirtualNodeSpecListenerTlValidationTrustSdInput is an input type that accepts GetVirtualNodeSpecListenerTlValidationTrustSdArgs and GetVirtualNodeSpecListenerTlValidationTrustSdOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlValidationTrustSdInput` via:
//
//	GetVirtualNodeSpecListenerTlValidationTrustSdArgs{...}
type GetVirtualNodeSpecListenerTlValidationTrustSdInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlValidationTrustSdOutput() GetVirtualNodeSpecListenerTlValidationTrustSdOutput
	ToGetVirtualNodeSpecListenerTlValidationTrustSdOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlValidationTrustSdOutput
}

type GetVirtualNodeSpecListenerTlValidationTrustSdArgs struct {
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (GetVirtualNodeSpecListenerTlValidationTrustSdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationTrustSd)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlValidationTrustSdArgs) ToGetVirtualNodeSpecListenerTlValidationTrustSdOutput() GetVirtualNodeSpecListenerTlValidationTrustSdOutput {
	return i.ToGetVirtualNodeSpecListenerTlValidationTrustSdOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlValidationTrustSdArgs) ToGetVirtualNodeSpecListenerTlValidationTrustSdOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationTrustSdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlValidationTrustSdOutput)
}

// GetVirtualNodeSpecListenerTlValidationTrustSdArrayInput is an input type that accepts GetVirtualNodeSpecListenerTlValidationTrustSdArray and GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecListenerTlValidationTrustSdArrayInput` via:
//
//	GetVirtualNodeSpecListenerTlValidationTrustSdArray{ GetVirtualNodeSpecListenerTlValidationTrustSdArgs{...} }
type GetVirtualNodeSpecListenerTlValidationTrustSdArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput() GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput
	ToGetVirtualNodeSpecListenerTlValidationTrustSdArrayOutputWithContext(context.Context) GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput
}

type GetVirtualNodeSpecListenerTlValidationTrustSdArray []GetVirtualNodeSpecListenerTlValidationTrustSdInput

func (GetVirtualNodeSpecListenerTlValidationTrustSdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlValidationTrustSd)(nil)).Elem()
}

func (i GetVirtualNodeSpecListenerTlValidationTrustSdArray) ToGetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput() GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput {
	return i.ToGetVirtualNodeSpecListenerTlValidationTrustSdArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecListenerTlValidationTrustSdArray) ToGetVirtualNodeSpecListenerTlValidationTrustSdArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput)
}

type GetVirtualNodeSpecListenerTlValidationTrustSdOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlValidationTrustSdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationTrustSd)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlValidationTrustSdOutput) ToGetVirtualNodeSpecListenerTlValidationTrustSdOutput() GetVirtualNodeSpecListenerTlValidationTrustSdOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationTrustSdOutput) ToGetVirtualNodeSpecListenerTlValidationTrustSdOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationTrustSdOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationTrustSdOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecListenerTlValidationTrustSd) string { return v.SecretName }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecListenerTlValidationTrustSd)(nil)).Elem()
}

func (o GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput) ToGetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput() GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput) ToGetVirtualNodeSpecListenerTlValidationTrustSdArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput {
	return o
}

func (o GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecListenerTlValidationTrustSdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecListenerTlValidationTrustSd {
		return vs[0].([]GetVirtualNodeSpecListenerTlValidationTrustSd)[vs[1].(int)]
	}).(GetVirtualNodeSpecListenerTlValidationTrustSdOutput)
}

type GetVirtualNodeSpecLogging struct {
	AccessLogs []GetVirtualNodeSpecLoggingAccessLog `pulumi:"accessLogs"`
}

// GetVirtualNodeSpecLoggingInput is an input type that accepts GetVirtualNodeSpecLoggingArgs and GetVirtualNodeSpecLoggingOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecLoggingInput` via:
//
//	GetVirtualNodeSpecLoggingArgs{...}
type GetVirtualNodeSpecLoggingInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecLoggingOutput() GetVirtualNodeSpecLoggingOutput
	ToGetVirtualNodeSpecLoggingOutputWithContext(context.Context) GetVirtualNodeSpecLoggingOutput
}

type GetVirtualNodeSpecLoggingArgs struct {
	AccessLogs GetVirtualNodeSpecLoggingAccessLogArrayInput `pulumi:"accessLogs"`
}

func (GetVirtualNodeSpecLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecLogging)(nil)).Elem()
}

func (i GetVirtualNodeSpecLoggingArgs) ToGetVirtualNodeSpecLoggingOutput() GetVirtualNodeSpecLoggingOutput {
	return i.ToGetVirtualNodeSpecLoggingOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecLoggingArgs) ToGetVirtualNodeSpecLoggingOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecLoggingOutput)
}

// GetVirtualNodeSpecLoggingArrayInput is an input type that accepts GetVirtualNodeSpecLoggingArray and GetVirtualNodeSpecLoggingArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecLoggingArrayInput` via:
//
//	GetVirtualNodeSpecLoggingArray{ GetVirtualNodeSpecLoggingArgs{...} }
type GetVirtualNodeSpecLoggingArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecLoggingArrayOutput() GetVirtualNodeSpecLoggingArrayOutput
	ToGetVirtualNodeSpecLoggingArrayOutputWithContext(context.Context) GetVirtualNodeSpecLoggingArrayOutput
}

type GetVirtualNodeSpecLoggingArray []GetVirtualNodeSpecLoggingInput

func (GetVirtualNodeSpecLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecLogging)(nil)).Elem()
}

func (i GetVirtualNodeSpecLoggingArray) ToGetVirtualNodeSpecLoggingArrayOutput() GetVirtualNodeSpecLoggingArrayOutput {
	return i.ToGetVirtualNodeSpecLoggingArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecLoggingArray) ToGetVirtualNodeSpecLoggingArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecLoggingArrayOutput)
}

type GetVirtualNodeSpecLoggingOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecLogging)(nil)).Elem()
}

func (o GetVirtualNodeSpecLoggingOutput) ToGetVirtualNodeSpecLoggingOutput() GetVirtualNodeSpecLoggingOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingOutput) ToGetVirtualNodeSpecLoggingOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingOutput) AccessLogs() GetVirtualNodeSpecLoggingAccessLogArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecLogging) []GetVirtualNodeSpecLoggingAccessLog { return v.AccessLogs }).(GetVirtualNodeSpecLoggingAccessLogArrayOutput)
}

type GetVirtualNodeSpecLoggingArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecLogging)(nil)).Elem()
}

func (o GetVirtualNodeSpecLoggingArrayOutput) ToGetVirtualNodeSpecLoggingArrayOutput() GetVirtualNodeSpecLoggingArrayOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingArrayOutput) ToGetVirtualNodeSpecLoggingArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingArrayOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecLogging {
		return vs[0].([]GetVirtualNodeSpecLogging)[vs[1].(int)]
	}).(GetVirtualNodeSpecLoggingOutput)
}

type GetVirtualNodeSpecLoggingAccessLog struct {
	Files []GetVirtualNodeSpecLoggingAccessLogFile `pulumi:"files"`
}

// GetVirtualNodeSpecLoggingAccessLogInput is an input type that accepts GetVirtualNodeSpecLoggingAccessLogArgs and GetVirtualNodeSpecLoggingAccessLogOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecLoggingAccessLogInput` via:
//
//	GetVirtualNodeSpecLoggingAccessLogArgs{...}
type GetVirtualNodeSpecLoggingAccessLogInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecLoggingAccessLogOutput() GetVirtualNodeSpecLoggingAccessLogOutput
	ToGetVirtualNodeSpecLoggingAccessLogOutputWithContext(context.Context) GetVirtualNodeSpecLoggingAccessLogOutput
}

type GetVirtualNodeSpecLoggingAccessLogArgs struct {
	Files GetVirtualNodeSpecLoggingAccessLogFileArrayInput `pulumi:"files"`
}

func (GetVirtualNodeSpecLoggingAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLog)(nil)).Elem()
}

func (i GetVirtualNodeSpecLoggingAccessLogArgs) ToGetVirtualNodeSpecLoggingAccessLogOutput() GetVirtualNodeSpecLoggingAccessLogOutput {
	return i.ToGetVirtualNodeSpecLoggingAccessLogOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecLoggingAccessLogArgs) ToGetVirtualNodeSpecLoggingAccessLogOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecLoggingAccessLogOutput)
}

// GetVirtualNodeSpecLoggingAccessLogArrayInput is an input type that accepts GetVirtualNodeSpecLoggingAccessLogArray and GetVirtualNodeSpecLoggingAccessLogArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecLoggingAccessLogArrayInput` via:
//
//	GetVirtualNodeSpecLoggingAccessLogArray{ GetVirtualNodeSpecLoggingAccessLogArgs{...} }
type GetVirtualNodeSpecLoggingAccessLogArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecLoggingAccessLogArrayOutput() GetVirtualNodeSpecLoggingAccessLogArrayOutput
	ToGetVirtualNodeSpecLoggingAccessLogArrayOutputWithContext(context.Context) GetVirtualNodeSpecLoggingAccessLogArrayOutput
}

type GetVirtualNodeSpecLoggingAccessLogArray []GetVirtualNodeSpecLoggingAccessLogInput

func (GetVirtualNodeSpecLoggingAccessLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecLoggingAccessLog)(nil)).Elem()
}

func (i GetVirtualNodeSpecLoggingAccessLogArray) ToGetVirtualNodeSpecLoggingAccessLogArrayOutput() GetVirtualNodeSpecLoggingAccessLogArrayOutput {
	return i.ToGetVirtualNodeSpecLoggingAccessLogArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecLoggingAccessLogArray) ToGetVirtualNodeSpecLoggingAccessLogArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecLoggingAccessLogArrayOutput)
}

type GetVirtualNodeSpecLoggingAccessLogOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecLoggingAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLog)(nil)).Elem()
}

func (o GetVirtualNodeSpecLoggingAccessLogOutput) ToGetVirtualNodeSpecLoggingAccessLogOutput() GetVirtualNodeSpecLoggingAccessLogOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogOutput) ToGetVirtualNodeSpecLoggingAccessLogOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogOutput) Files() GetVirtualNodeSpecLoggingAccessLogFileArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecLoggingAccessLog) []GetVirtualNodeSpecLoggingAccessLogFile { return v.Files }).(GetVirtualNodeSpecLoggingAccessLogFileArrayOutput)
}

type GetVirtualNodeSpecLoggingAccessLogArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecLoggingAccessLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecLoggingAccessLog)(nil)).Elem()
}

func (o GetVirtualNodeSpecLoggingAccessLogArrayOutput) ToGetVirtualNodeSpecLoggingAccessLogArrayOutput() GetVirtualNodeSpecLoggingAccessLogArrayOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogArrayOutput) ToGetVirtualNodeSpecLoggingAccessLogArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogArrayOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecLoggingAccessLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecLoggingAccessLog {
		return vs[0].([]GetVirtualNodeSpecLoggingAccessLog)[vs[1].(int)]
	}).(GetVirtualNodeSpecLoggingAccessLogOutput)
}

type GetVirtualNodeSpecLoggingAccessLogFile struct {
	Formats []GetVirtualNodeSpecLoggingAccessLogFileFormat `pulumi:"formats"`
	Path    string                                         `pulumi:"path"`
}

// GetVirtualNodeSpecLoggingAccessLogFileInput is an input type that accepts GetVirtualNodeSpecLoggingAccessLogFileArgs and GetVirtualNodeSpecLoggingAccessLogFileOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecLoggingAccessLogFileInput` via:
//
//	GetVirtualNodeSpecLoggingAccessLogFileArgs{...}
type GetVirtualNodeSpecLoggingAccessLogFileInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecLoggingAccessLogFileOutput() GetVirtualNodeSpecLoggingAccessLogFileOutput
	ToGetVirtualNodeSpecLoggingAccessLogFileOutputWithContext(context.Context) GetVirtualNodeSpecLoggingAccessLogFileOutput
}

type GetVirtualNodeSpecLoggingAccessLogFileArgs struct {
	Formats GetVirtualNodeSpecLoggingAccessLogFileFormatArrayInput `pulumi:"formats"`
	Path    pulumi.StringInput                                     `pulumi:"path"`
}

func (GetVirtualNodeSpecLoggingAccessLogFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLogFile)(nil)).Elem()
}

func (i GetVirtualNodeSpecLoggingAccessLogFileArgs) ToGetVirtualNodeSpecLoggingAccessLogFileOutput() GetVirtualNodeSpecLoggingAccessLogFileOutput {
	return i.ToGetVirtualNodeSpecLoggingAccessLogFileOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecLoggingAccessLogFileArgs) ToGetVirtualNodeSpecLoggingAccessLogFileOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecLoggingAccessLogFileOutput)
}

// GetVirtualNodeSpecLoggingAccessLogFileArrayInput is an input type that accepts GetVirtualNodeSpecLoggingAccessLogFileArray and GetVirtualNodeSpecLoggingAccessLogFileArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecLoggingAccessLogFileArrayInput` via:
//
//	GetVirtualNodeSpecLoggingAccessLogFileArray{ GetVirtualNodeSpecLoggingAccessLogFileArgs{...} }
type GetVirtualNodeSpecLoggingAccessLogFileArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecLoggingAccessLogFileArrayOutput() GetVirtualNodeSpecLoggingAccessLogFileArrayOutput
	ToGetVirtualNodeSpecLoggingAccessLogFileArrayOutputWithContext(context.Context) GetVirtualNodeSpecLoggingAccessLogFileArrayOutput
}

type GetVirtualNodeSpecLoggingAccessLogFileArray []GetVirtualNodeSpecLoggingAccessLogFileInput

func (GetVirtualNodeSpecLoggingAccessLogFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecLoggingAccessLogFile)(nil)).Elem()
}

func (i GetVirtualNodeSpecLoggingAccessLogFileArray) ToGetVirtualNodeSpecLoggingAccessLogFileArrayOutput() GetVirtualNodeSpecLoggingAccessLogFileArrayOutput {
	return i.ToGetVirtualNodeSpecLoggingAccessLogFileArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecLoggingAccessLogFileArray) ToGetVirtualNodeSpecLoggingAccessLogFileArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecLoggingAccessLogFileArrayOutput)
}

type GetVirtualNodeSpecLoggingAccessLogFileOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecLoggingAccessLogFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLogFile)(nil)).Elem()
}

func (o GetVirtualNodeSpecLoggingAccessLogFileOutput) ToGetVirtualNodeSpecLoggingAccessLogFileOutput() GetVirtualNodeSpecLoggingAccessLogFileOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogFileOutput) ToGetVirtualNodeSpecLoggingAccessLogFileOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogFileOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogFileOutput) Formats() GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecLoggingAccessLogFile) []GetVirtualNodeSpecLoggingAccessLogFileFormat {
		return v.Formats
	}).(GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput)
}

func (o GetVirtualNodeSpecLoggingAccessLogFileOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecLoggingAccessLogFile) string { return v.Path }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecLoggingAccessLogFileArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecLoggingAccessLogFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecLoggingAccessLogFile)(nil)).Elem()
}

func (o GetVirtualNodeSpecLoggingAccessLogFileArrayOutput) ToGetVirtualNodeSpecLoggingAccessLogFileArrayOutput() GetVirtualNodeSpecLoggingAccessLogFileArrayOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogFileArrayOutput) ToGetVirtualNodeSpecLoggingAccessLogFileArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogFileArrayOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogFileArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecLoggingAccessLogFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecLoggingAccessLogFile {
		return vs[0].([]GetVirtualNodeSpecLoggingAccessLogFile)[vs[1].(int)]
	}).(GetVirtualNodeSpecLoggingAccessLogFileOutput)
}

type GetVirtualNodeSpecLoggingAccessLogFileFormat struct {
	Jsons []GetVirtualNodeSpecLoggingAccessLogFileFormatJson `pulumi:"jsons"`
	Text  string                                             `pulumi:"text"`
}

// GetVirtualNodeSpecLoggingAccessLogFileFormatInput is an input type that accepts GetVirtualNodeSpecLoggingAccessLogFileFormatArgs and GetVirtualNodeSpecLoggingAccessLogFileFormatOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecLoggingAccessLogFileFormatInput` via:
//
//	GetVirtualNodeSpecLoggingAccessLogFileFormatArgs{...}
type GetVirtualNodeSpecLoggingAccessLogFileFormatInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecLoggingAccessLogFileFormatOutput() GetVirtualNodeSpecLoggingAccessLogFileFormatOutput
	ToGetVirtualNodeSpecLoggingAccessLogFileFormatOutputWithContext(context.Context) GetVirtualNodeSpecLoggingAccessLogFileFormatOutput
}

type GetVirtualNodeSpecLoggingAccessLogFileFormatArgs struct {
	Jsons GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayInput `pulumi:"jsons"`
	Text  pulumi.StringInput                                         `pulumi:"text"`
}

func (GetVirtualNodeSpecLoggingAccessLogFileFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (i GetVirtualNodeSpecLoggingAccessLogFileFormatArgs) ToGetVirtualNodeSpecLoggingAccessLogFileFormatOutput() GetVirtualNodeSpecLoggingAccessLogFileFormatOutput {
	return i.ToGetVirtualNodeSpecLoggingAccessLogFileFormatOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecLoggingAccessLogFileFormatArgs) ToGetVirtualNodeSpecLoggingAccessLogFileFormatOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogFileFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecLoggingAccessLogFileFormatOutput)
}

// GetVirtualNodeSpecLoggingAccessLogFileFormatArrayInput is an input type that accepts GetVirtualNodeSpecLoggingAccessLogFileFormatArray and GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecLoggingAccessLogFileFormatArrayInput` via:
//
//	GetVirtualNodeSpecLoggingAccessLogFileFormatArray{ GetVirtualNodeSpecLoggingAccessLogFileFormatArgs{...} }
type GetVirtualNodeSpecLoggingAccessLogFileFormatArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput() GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput
	ToGetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutputWithContext(context.Context) GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput
}

type GetVirtualNodeSpecLoggingAccessLogFileFormatArray []GetVirtualNodeSpecLoggingAccessLogFileFormatInput

func (GetVirtualNodeSpecLoggingAccessLogFileFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (i GetVirtualNodeSpecLoggingAccessLogFileFormatArray) ToGetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput() GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput {
	return i.ToGetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecLoggingAccessLogFileFormatArray) ToGetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput)
}

type GetVirtualNodeSpecLoggingAccessLogFileFormatOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecLoggingAccessLogFileFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (o GetVirtualNodeSpecLoggingAccessLogFileFormatOutput) ToGetVirtualNodeSpecLoggingAccessLogFileFormatOutput() GetVirtualNodeSpecLoggingAccessLogFileFormatOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogFileFormatOutput) ToGetVirtualNodeSpecLoggingAccessLogFileFormatOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogFileFormatOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogFileFormatOutput) Jsons() GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecLoggingAccessLogFileFormat) []GetVirtualNodeSpecLoggingAccessLogFileFormatJson {
		return v.Jsons
	}).(GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput)
}

func (o GetVirtualNodeSpecLoggingAccessLogFileFormatOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecLoggingAccessLogFileFormat) string { return v.Text }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecLoggingAccessLogFileFormat)(nil)).Elem()
}

func (o GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput) ToGetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput() GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput) ToGetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecLoggingAccessLogFileFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecLoggingAccessLogFileFormat {
		return vs[0].([]GetVirtualNodeSpecLoggingAccessLogFileFormat)[vs[1].(int)]
	}).(GetVirtualNodeSpecLoggingAccessLogFileFormatOutput)
}

type GetVirtualNodeSpecLoggingAccessLogFileFormatJson struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// GetVirtualNodeSpecLoggingAccessLogFileFormatJsonInput is an input type that accepts GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArgs and GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecLoggingAccessLogFileFormatJsonInput` via:
//
//	GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArgs{...}
type GetVirtualNodeSpecLoggingAccessLogFileFormatJsonInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput() GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput
	ToGetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutputWithContext(context.Context) GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput
}

type GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (i GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArgs) ToGetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput() GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput {
	return i.ToGetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArgs) ToGetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput)
}

// GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayInput is an input type that accepts GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArray and GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayInput` via:
//
//	GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArray{ GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArgs{...} }
type GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput() GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput
	ToGetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(context.Context) GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput
}

type GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArray []GetVirtualNodeSpecLoggingAccessLogFileFormatJsonInput

func (GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (i GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArray) ToGetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput() GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput {
	return i.ToGetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArray) ToGetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput)
}

type GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (o GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput) ToGetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput() GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput) ToGetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecLoggingAccessLogFileFormatJson) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecLoggingAccessLogFileFormatJson) string { return v.Value }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecLoggingAccessLogFileFormatJson)(nil)).Elem()
}

func (o GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput) ToGetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput() GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput) ToGetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput {
	return o
}

func (o GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecLoggingAccessLogFileFormatJson {
		return vs[0].([]GetVirtualNodeSpecLoggingAccessLogFileFormatJson)[vs[1].(int)]
	}).(GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput)
}

type GetVirtualNodeSpecServiceDiscovery struct {
	AwsCloudMaps []GetVirtualNodeSpecServiceDiscoveryAwsCloudMap `pulumi:"awsCloudMaps"`
	Dns          []GetVirtualNodeSpecServiceDiscoveryDn          `pulumi:"dns"`
}

// GetVirtualNodeSpecServiceDiscoveryInput is an input type that accepts GetVirtualNodeSpecServiceDiscoveryArgs and GetVirtualNodeSpecServiceDiscoveryOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecServiceDiscoveryInput` via:
//
//	GetVirtualNodeSpecServiceDiscoveryArgs{...}
type GetVirtualNodeSpecServiceDiscoveryInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecServiceDiscoveryOutput() GetVirtualNodeSpecServiceDiscoveryOutput
	ToGetVirtualNodeSpecServiceDiscoveryOutputWithContext(context.Context) GetVirtualNodeSpecServiceDiscoveryOutput
}

type GetVirtualNodeSpecServiceDiscoveryArgs struct {
	AwsCloudMaps GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayInput `pulumi:"awsCloudMaps"`
	Dns          GetVirtualNodeSpecServiceDiscoveryDnArrayInput          `pulumi:"dns"`
}

func (GetVirtualNodeSpecServiceDiscoveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecServiceDiscovery)(nil)).Elem()
}

func (i GetVirtualNodeSpecServiceDiscoveryArgs) ToGetVirtualNodeSpecServiceDiscoveryOutput() GetVirtualNodeSpecServiceDiscoveryOutput {
	return i.ToGetVirtualNodeSpecServiceDiscoveryOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecServiceDiscoveryArgs) ToGetVirtualNodeSpecServiceDiscoveryOutputWithContext(ctx context.Context) GetVirtualNodeSpecServiceDiscoveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecServiceDiscoveryOutput)
}

// GetVirtualNodeSpecServiceDiscoveryArrayInput is an input type that accepts GetVirtualNodeSpecServiceDiscoveryArray and GetVirtualNodeSpecServiceDiscoveryArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecServiceDiscoveryArrayInput` via:
//
//	GetVirtualNodeSpecServiceDiscoveryArray{ GetVirtualNodeSpecServiceDiscoveryArgs{...} }
type GetVirtualNodeSpecServiceDiscoveryArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecServiceDiscoveryArrayOutput() GetVirtualNodeSpecServiceDiscoveryArrayOutput
	ToGetVirtualNodeSpecServiceDiscoveryArrayOutputWithContext(context.Context) GetVirtualNodeSpecServiceDiscoveryArrayOutput
}

type GetVirtualNodeSpecServiceDiscoveryArray []GetVirtualNodeSpecServiceDiscoveryInput

func (GetVirtualNodeSpecServiceDiscoveryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecServiceDiscovery)(nil)).Elem()
}

func (i GetVirtualNodeSpecServiceDiscoveryArray) ToGetVirtualNodeSpecServiceDiscoveryArrayOutput() GetVirtualNodeSpecServiceDiscoveryArrayOutput {
	return i.ToGetVirtualNodeSpecServiceDiscoveryArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecServiceDiscoveryArray) ToGetVirtualNodeSpecServiceDiscoveryArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecServiceDiscoveryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecServiceDiscoveryArrayOutput)
}

type GetVirtualNodeSpecServiceDiscoveryOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecServiceDiscoveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecServiceDiscovery)(nil)).Elem()
}

func (o GetVirtualNodeSpecServiceDiscoveryOutput) ToGetVirtualNodeSpecServiceDiscoveryOutput() GetVirtualNodeSpecServiceDiscoveryOutput {
	return o
}

func (o GetVirtualNodeSpecServiceDiscoveryOutput) ToGetVirtualNodeSpecServiceDiscoveryOutputWithContext(ctx context.Context) GetVirtualNodeSpecServiceDiscoveryOutput {
	return o
}

func (o GetVirtualNodeSpecServiceDiscoveryOutput) AwsCloudMaps() GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecServiceDiscovery) []GetVirtualNodeSpecServiceDiscoveryAwsCloudMap {
		return v.AwsCloudMaps
	}).(GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput)
}

func (o GetVirtualNodeSpecServiceDiscoveryOutput) Dns() GetVirtualNodeSpecServiceDiscoveryDnArrayOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecServiceDiscovery) []GetVirtualNodeSpecServiceDiscoveryDn { return v.Dns }).(GetVirtualNodeSpecServiceDiscoveryDnArrayOutput)
}

type GetVirtualNodeSpecServiceDiscoveryArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecServiceDiscoveryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecServiceDiscovery)(nil)).Elem()
}

func (o GetVirtualNodeSpecServiceDiscoveryArrayOutput) ToGetVirtualNodeSpecServiceDiscoveryArrayOutput() GetVirtualNodeSpecServiceDiscoveryArrayOutput {
	return o
}

func (o GetVirtualNodeSpecServiceDiscoveryArrayOutput) ToGetVirtualNodeSpecServiceDiscoveryArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecServiceDiscoveryArrayOutput {
	return o
}

func (o GetVirtualNodeSpecServiceDiscoveryArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecServiceDiscoveryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecServiceDiscovery {
		return vs[0].([]GetVirtualNodeSpecServiceDiscovery)[vs[1].(int)]
	}).(GetVirtualNodeSpecServiceDiscoveryOutput)
}

type GetVirtualNodeSpecServiceDiscoveryAwsCloudMap struct {
	Attributes    map[string]string `pulumi:"attributes"`
	NamespaceName string            `pulumi:"namespaceName"`
	ServiceName   string            `pulumi:"serviceName"`
}

// GetVirtualNodeSpecServiceDiscoveryAwsCloudMapInput is an input type that accepts GetVirtualNodeSpecServiceDiscoveryAwsCloudMap and GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecServiceDiscoveryAwsCloudMapInput` via:
//
//	GetVirtualNodeSpecServiceDiscoveryAwsCloudMap{ "key": GetVirtualNodeSpecServiceDiscoveryAwsCloudArgs{...} }
type GetVirtualNodeSpecServiceDiscoveryAwsCloudMapInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput() GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput
	ToGetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutputWithContext(context.Context) GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput
}

type GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArgs struct {
	Attributes    pulumi.StringMapInput `pulumi:"attributes"`
	NamespaceName pulumi.StringInput    `pulumi:"namespaceName"`
	ServiceName   pulumi.StringInput    `pulumi:"serviceName"`
}

func (GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecServiceDiscoveryAwsCloudMap)(nil)).Elem()
}

func (i GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) ToGetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput() GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return i.ToGetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArgs) ToGetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutputWithContext(ctx context.Context) GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput)
}

// GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayInput is an input type that accepts GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArray and GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayInput` via:
//
//	GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArray{ GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArgs{...} }
type GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput() GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput
	ToGetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutputWithContext(context.Context) GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput
}

type GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArray []GetVirtualNodeSpecServiceDiscoveryAwsCloudMapInput

func (GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecServiceDiscoveryAwsCloudMap)(nil)).Elem()
}

func (i GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArray) ToGetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput() GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput {
	return i.ToGetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArray) ToGetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput)
}

type GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecServiceDiscoveryAwsCloudMap)(nil)).Elem()
}

func (o GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ToGetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput() GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return o
}

func (o GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ToGetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutputWithContext(ctx context.Context) GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return o
}

func (o GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecServiceDiscoveryAwsCloudMap) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

func (o GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecServiceDiscoveryAwsCloudMap) string { return v.NamespaceName }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecServiceDiscoveryAwsCloudMap) string { return v.ServiceName }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecServiceDiscoveryAwsCloudMap)(nil)).Elem()
}

func (o GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput) ToGetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput() GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput {
	return o
}

func (o GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput) ToGetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput {
	return o
}

func (o GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecServiceDiscoveryAwsCloudMap {
		return vs[0].([]GetVirtualNodeSpecServiceDiscoveryAwsCloudMap)[vs[1].(int)]
	}).(GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput)
}

type GetVirtualNodeSpecServiceDiscoveryDn struct {
	Hostname     string `pulumi:"hostname"`
	IpPreference string `pulumi:"ipPreference"`
	ResponseType string `pulumi:"responseType"`
}

// GetVirtualNodeSpecServiceDiscoveryDnInput is an input type that accepts GetVirtualNodeSpecServiceDiscoveryDnArgs and GetVirtualNodeSpecServiceDiscoveryDnOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecServiceDiscoveryDnInput` via:
//
//	GetVirtualNodeSpecServiceDiscoveryDnArgs{...}
type GetVirtualNodeSpecServiceDiscoveryDnInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecServiceDiscoveryDnOutput() GetVirtualNodeSpecServiceDiscoveryDnOutput
	ToGetVirtualNodeSpecServiceDiscoveryDnOutputWithContext(context.Context) GetVirtualNodeSpecServiceDiscoveryDnOutput
}

type GetVirtualNodeSpecServiceDiscoveryDnArgs struct {
	Hostname     pulumi.StringInput `pulumi:"hostname"`
	IpPreference pulumi.StringInput `pulumi:"ipPreference"`
	ResponseType pulumi.StringInput `pulumi:"responseType"`
}

func (GetVirtualNodeSpecServiceDiscoveryDnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecServiceDiscoveryDn)(nil)).Elem()
}

func (i GetVirtualNodeSpecServiceDiscoveryDnArgs) ToGetVirtualNodeSpecServiceDiscoveryDnOutput() GetVirtualNodeSpecServiceDiscoveryDnOutput {
	return i.ToGetVirtualNodeSpecServiceDiscoveryDnOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecServiceDiscoveryDnArgs) ToGetVirtualNodeSpecServiceDiscoveryDnOutputWithContext(ctx context.Context) GetVirtualNodeSpecServiceDiscoveryDnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecServiceDiscoveryDnOutput)
}

// GetVirtualNodeSpecServiceDiscoveryDnArrayInput is an input type that accepts GetVirtualNodeSpecServiceDiscoveryDnArray and GetVirtualNodeSpecServiceDiscoveryDnArrayOutput values.
// You can construct a concrete instance of `GetVirtualNodeSpecServiceDiscoveryDnArrayInput` via:
//
//	GetVirtualNodeSpecServiceDiscoveryDnArray{ GetVirtualNodeSpecServiceDiscoveryDnArgs{...} }
type GetVirtualNodeSpecServiceDiscoveryDnArrayInput interface {
	pulumi.Input

	ToGetVirtualNodeSpecServiceDiscoveryDnArrayOutput() GetVirtualNodeSpecServiceDiscoveryDnArrayOutput
	ToGetVirtualNodeSpecServiceDiscoveryDnArrayOutputWithContext(context.Context) GetVirtualNodeSpecServiceDiscoveryDnArrayOutput
}

type GetVirtualNodeSpecServiceDiscoveryDnArray []GetVirtualNodeSpecServiceDiscoveryDnInput

func (GetVirtualNodeSpecServiceDiscoveryDnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecServiceDiscoveryDn)(nil)).Elem()
}

func (i GetVirtualNodeSpecServiceDiscoveryDnArray) ToGetVirtualNodeSpecServiceDiscoveryDnArrayOutput() GetVirtualNodeSpecServiceDiscoveryDnArrayOutput {
	return i.ToGetVirtualNodeSpecServiceDiscoveryDnArrayOutputWithContext(context.Background())
}

func (i GetVirtualNodeSpecServiceDiscoveryDnArray) ToGetVirtualNodeSpecServiceDiscoveryDnArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecServiceDiscoveryDnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNodeSpecServiceDiscoveryDnArrayOutput)
}

type GetVirtualNodeSpecServiceDiscoveryDnOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecServiceDiscoveryDnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodeSpecServiceDiscoveryDn)(nil)).Elem()
}

func (o GetVirtualNodeSpecServiceDiscoveryDnOutput) ToGetVirtualNodeSpecServiceDiscoveryDnOutput() GetVirtualNodeSpecServiceDiscoveryDnOutput {
	return o
}

func (o GetVirtualNodeSpecServiceDiscoveryDnOutput) ToGetVirtualNodeSpecServiceDiscoveryDnOutputWithContext(ctx context.Context) GetVirtualNodeSpecServiceDiscoveryDnOutput {
	return o
}

func (o GetVirtualNodeSpecServiceDiscoveryDnOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecServiceDiscoveryDn) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecServiceDiscoveryDnOutput) IpPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecServiceDiscoveryDn) string { return v.IpPreference }).(pulumi.StringOutput)
}

func (o GetVirtualNodeSpecServiceDiscoveryDnOutput) ResponseType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodeSpecServiceDiscoveryDn) string { return v.ResponseType }).(pulumi.StringOutput)
}

type GetVirtualNodeSpecServiceDiscoveryDnArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNodeSpecServiceDiscoveryDnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNodeSpecServiceDiscoveryDn)(nil)).Elem()
}

func (o GetVirtualNodeSpecServiceDiscoveryDnArrayOutput) ToGetVirtualNodeSpecServiceDiscoveryDnArrayOutput() GetVirtualNodeSpecServiceDiscoveryDnArrayOutput {
	return o
}

func (o GetVirtualNodeSpecServiceDiscoveryDnArrayOutput) ToGetVirtualNodeSpecServiceDiscoveryDnArrayOutputWithContext(ctx context.Context) GetVirtualNodeSpecServiceDiscoveryDnArrayOutput {
	return o
}

func (o GetVirtualNodeSpecServiceDiscoveryDnArrayOutput) Index(i pulumi.IntInput) GetVirtualNodeSpecServiceDiscoveryDnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNodeSpecServiceDiscoveryDn {
		return vs[0].([]GetVirtualNodeSpecServiceDiscoveryDn)[vs[1].(int)]
	}).(GetVirtualNodeSpecServiceDiscoveryDnOutput)
}

type GetVirtualRouterSpec struct {
	Listeners []GetVirtualRouterSpecListener `pulumi:"listeners"`
}

// GetVirtualRouterSpecInput is an input type that accepts GetVirtualRouterSpecArgs and GetVirtualRouterSpecOutput values.
// You can construct a concrete instance of `GetVirtualRouterSpecInput` via:
//
//	GetVirtualRouterSpecArgs{...}
type GetVirtualRouterSpecInput interface {
	pulumi.Input

	ToGetVirtualRouterSpecOutput() GetVirtualRouterSpecOutput
	ToGetVirtualRouterSpecOutputWithContext(context.Context) GetVirtualRouterSpecOutput
}

type GetVirtualRouterSpecArgs struct {
	Listeners GetVirtualRouterSpecListenerArrayInput `pulumi:"listeners"`
}

func (GetVirtualRouterSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualRouterSpec)(nil)).Elem()
}

func (i GetVirtualRouterSpecArgs) ToGetVirtualRouterSpecOutput() GetVirtualRouterSpecOutput {
	return i.ToGetVirtualRouterSpecOutputWithContext(context.Background())
}

func (i GetVirtualRouterSpecArgs) ToGetVirtualRouterSpecOutputWithContext(ctx context.Context) GetVirtualRouterSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualRouterSpecOutput)
}

// GetVirtualRouterSpecArrayInput is an input type that accepts GetVirtualRouterSpecArray and GetVirtualRouterSpecArrayOutput values.
// You can construct a concrete instance of `GetVirtualRouterSpecArrayInput` via:
//
//	GetVirtualRouterSpecArray{ GetVirtualRouterSpecArgs{...} }
type GetVirtualRouterSpecArrayInput interface {
	pulumi.Input

	ToGetVirtualRouterSpecArrayOutput() GetVirtualRouterSpecArrayOutput
	ToGetVirtualRouterSpecArrayOutputWithContext(context.Context) GetVirtualRouterSpecArrayOutput
}

type GetVirtualRouterSpecArray []GetVirtualRouterSpecInput

func (GetVirtualRouterSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualRouterSpec)(nil)).Elem()
}

func (i GetVirtualRouterSpecArray) ToGetVirtualRouterSpecArrayOutput() GetVirtualRouterSpecArrayOutput {
	return i.ToGetVirtualRouterSpecArrayOutputWithContext(context.Background())
}

func (i GetVirtualRouterSpecArray) ToGetVirtualRouterSpecArrayOutputWithContext(ctx context.Context) GetVirtualRouterSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualRouterSpecArrayOutput)
}

type GetVirtualRouterSpecOutput struct{ *pulumi.OutputState }

func (GetVirtualRouterSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualRouterSpec)(nil)).Elem()
}

func (o GetVirtualRouterSpecOutput) ToGetVirtualRouterSpecOutput() GetVirtualRouterSpecOutput {
	return o
}

func (o GetVirtualRouterSpecOutput) ToGetVirtualRouterSpecOutputWithContext(ctx context.Context) GetVirtualRouterSpecOutput {
	return o
}

func (o GetVirtualRouterSpecOutput) Listeners() GetVirtualRouterSpecListenerArrayOutput {
	return o.ApplyT(func(v GetVirtualRouterSpec) []GetVirtualRouterSpecListener { return v.Listeners }).(GetVirtualRouterSpecListenerArrayOutput)
}

type GetVirtualRouterSpecArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualRouterSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualRouterSpec)(nil)).Elem()
}

func (o GetVirtualRouterSpecArrayOutput) ToGetVirtualRouterSpecArrayOutput() GetVirtualRouterSpecArrayOutput {
	return o
}

func (o GetVirtualRouterSpecArrayOutput) ToGetVirtualRouterSpecArrayOutputWithContext(ctx context.Context) GetVirtualRouterSpecArrayOutput {
	return o
}

func (o GetVirtualRouterSpecArrayOutput) Index(i pulumi.IntInput) GetVirtualRouterSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualRouterSpec {
		return vs[0].([]GetVirtualRouterSpec)[vs[1].(int)]
	}).(GetVirtualRouterSpecOutput)
}

type GetVirtualRouterSpecListener struct {
	PortMappings []GetVirtualRouterSpecListenerPortMapping `pulumi:"portMappings"`
}

// GetVirtualRouterSpecListenerInput is an input type that accepts GetVirtualRouterSpecListenerArgs and GetVirtualRouterSpecListenerOutput values.
// You can construct a concrete instance of `GetVirtualRouterSpecListenerInput` via:
//
//	GetVirtualRouterSpecListenerArgs{...}
type GetVirtualRouterSpecListenerInput interface {
	pulumi.Input

	ToGetVirtualRouterSpecListenerOutput() GetVirtualRouterSpecListenerOutput
	ToGetVirtualRouterSpecListenerOutputWithContext(context.Context) GetVirtualRouterSpecListenerOutput
}

type GetVirtualRouterSpecListenerArgs struct {
	PortMappings GetVirtualRouterSpecListenerPortMappingArrayInput `pulumi:"portMappings"`
}

func (GetVirtualRouterSpecListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualRouterSpecListener)(nil)).Elem()
}

func (i GetVirtualRouterSpecListenerArgs) ToGetVirtualRouterSpecListenerOutput() GetVirtualRouterSpecListenerOutput {
	return i.ToGetVirtualRouterSpecListenerOutputWithContext(context.Background())
}

func (i GetVirtualRouterSpecListenerArgs) ToGetVirtualRouterSpecListenerOutputWithContext(ctx context.Context) GetVirtualRouterSpecListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualRouterSpecListenerOutput)
}

// GetVirtualRouterSpecListenerArrayInput is an input type that accepts GetVirtualRouterSpecListenerArray and GetVirtualRouterSpecListenerArrayOutput values.
// You can construct a concrete instance of `GetVirtualRouterSpecListenerArrayInput` via:
//
//	GetVirtualRouterSpecListenerArray{ GetVirtualRouterSpecListenerArgs{...} }
type GetVirtualRouterSpecListenerArrayInput interface {
	pulumi.Input

	ToGetVirtualRouterSpecListenerArrayOutput() GetVirtualRouterSpecListenerArrayOutput
	ToGetVirtualRouterSpecListenerArrayOutputWithContext(context.Context) GetVirtualRouterSpecListenerArrayOutput
}

type GetVirtualRouterSpecListenerArray []GetVirtualRouterSpecListenerInput

func (GetVirtualRouterSpecListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualRouterSpecListener)(nil)).Elem()
}

func (i GetVirtualRouterSpecListenerArray) ToGetVirtualRouterSpecListenerArrayOutput() GetVirtualRouterSpecListenerArrayOutput {
	return i.ToGetVirtualRouterSpecListenerArrayOutputWithContext(context.Background())
}

func (i GetVirtualRouterSpecListenerArray) ToGetVirtualRouterSpecListenerArrayOutputWithContext(ctx context.Context) GetVirtualRouterSpecListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualRouterSpecListenerArrayOutput)
}

type GetVirtualRouterSpecListenerOutput struct{ *pulumi.OutputState }

func (GetVirtualRouterSpecListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualRouterSpecListener)(nil)).Elem()
}

func (o GetVirtualRouterSpecListenerOutput) ToGetVirtualRouterSpecListenerOutput() GetVirtualRouterSpecListenerOutput {
	return o
}

func (o GetVirtualRouterSpecListenerOutput) ToGetVirtualRouterSpecListenerOutputWithContext(ctx context.Context) GetVirtualRouterSpecListenerOutput {
	return o
}

func (o GetVirtualRouterSpecListenerOutput) PortMappings() GetVirtualRouterSpecListenerPortMappingArrayOutput {
	return o.ApplyT(func(v GetVirtualRouterSpecListener) []GetVirtualRouterSpecListenerPortMapping { return v.PortMappings }).(GetVirtualRouterSpecListenerPortMappingArrayOutput)
}

type GetVirtualRouterSpecListenerArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualRouterSpecListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualRouterSpecListener)(nil)).Elem()
}

func (o GetVirtualRouterSpecListenerArrayOutput) ToGetVirtualRouterSpecListenerArrayOutput() GetVirtualRouterSpecListenerArrayOutput {
	return o
}

func (o GetVirtualRouterSpecListenerArrayOutput) ToGetVirtualRouterSpecListenerArrayOutputWithContext(ctx context.Context) GetVirtualRouterSpecListenerArrayOutput {
	return o
}

func (o GetVirtualRouterSpecListenerArrayOutput) Index(i pulumi.IntInput) GetVirtualRouterSpecListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualRouterSpecListener {
		return vs[0].([]GetVirtualRouterSpecListener)[vs[1].(int)]
	}).(GetVirtualRouterSpecListenerOutput)
}

type GetVirtualRouterSpecListenerPortMapping struct {
	Port     int    `pulumi:"port"`
	Protocol string `pulumi:"protocol"`
}

// GetVirtualRouterSpecListenerPortMappingInput is an input type that accepts GetVirtualRouterSpecListenerPortMappingArgs and GetVirtualRouterSpecListenerPortMappingOutput values.
// You can construct a concrete instance of `GetVirtualRouterSpecListenerPortMappingInput` via:
//
//	GetVirtualRouterSpecListenerPortMappingArgs{...}
type GetVirtualRouterSpecListenerPortMappingInput interface {
	pulumi.Input

	ToGetVirtualRouterSpecListenerPortMappingOutput() GetVirtualRouterSpecListenerPortMappingOutput
	ToGetVirtualRouterSpecListenerPortMappingOutputWithContext(context.Context) GetVirtualRouterSpecListenerPortMappingOutput
}

type GetVirtualRouterSpecListenerPortMappingArgs struct {
	Port     pulumi.IntInput    `pulumi:"port"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetVirtualRouterSpecListenerPortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualRouterSpecListenerPortMapping)(nil)).Elem()
}

func (i GetVirtualRouterSpecListenerPortMappingArgs) ToGetVirtualRouterSpecListenerPortMappingOutput() GetVirtualRouterSpecListenerPortMappingOutput {
	return i.ToGetVirtualRouterSpecListenerPortMappingOutputWithContext(context.Background())
}

func (i GetVirtualRouterSpecListenerPortMappingArgs) ToGetVirtualRouterSpecListenerPortMappingOutputWithContext(ctx context.Context) GetVirtualRouterSpecListenerPortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualRouterSpecListenerPortMappingOutput)
}

// GetVirtualRouterSpecListenerPortMappingArrayInput is an input type that accepts GetVirtualRouterSpecListenerPortMappingArray and GetVirtualRouterSpecListenerPortMappingArrayOutput values.
// You can construct a concrete instance of `GetVirtualRouterSpecListenerPortMappingArrayInput` via:
//
//	GetVirtualRouterSpecListenerPortMappingArray{ GetVirtualRouterSpecListenerPortMappingArgs{...} }
type GetVirtualRouterSpecListenerPortMappingArrayInput interface {
	pulumi.Input

	ToGetVirtualRouterSpecListenerPortMappingArrayOutput() GetVirtualRouterSpecListenerPortMappingArrayOutput
	ToGetVirtualRouterSpecListenerPortMappingArrayOutputWithContext(context.Context) GetVirtualRouterSpecListenerPortMappingArrayOutput
}

type GetVirtualRouterSpecListenerPortMappingArray []GetVirtualRouterSpecListenerPortMappingInput

func (GetVirtualRouterSpecListenerPortMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualRouterSpecListenerPortMapping)(nil)).Elem()
}

func (i GetVirtualRouterSpecListenerPortMappingArray) ToGetVirtualRouterSpecListenerPortMappingArrayOutput() GetVirtualRouterSpecListenerPortMappingArrayOutput {
	return i.ToGetVirtualRouterSpecListenerPortMappingArrayOutputWithContext(context.Background())
}

func (i GetVirtualRouterSpecListenerPortMappingArray) ToGetVirtualRouterSpecListenerPortMappingArrayOutputWithContext(ctx context.Context) GetVirtualRouterSpecListenerPortMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualRouterSpecListenerPortMappingArrayOutput)
}

type GetVirtualRouterSpecListenerPortMappingOutput struct{ *pulumi.OutputState }

func (GetVirtualRouterSpecListenerPortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualRouterSpecListenerPortMapping)(nil)).Elem()
}

func (o GetVirtualRouterSpecListenerPortMappingOutput) ToGetVirtualRouterSpecListenerPortMappingOutput() GetVirtualRouterSpecListenerPortMappingOutput {
	return o
}

func (o GetVirtualRouterSpecListenerPortMappingOutput) ToGetVirtualRouterSpecListenerPortMappingOutputWithContext(ctx context.Context) GetVirtualRouterSpecListenerPortMappingOutput {
	return o
}

func (o GetVirtualRouterSpecListenerPortMappingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualRouterSpecListenerPortMapping) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetVirtualRouterSpecListenerPortMappingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualRouterSpecListenerPortMapping) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetVirtualRouterSpecListenerPortMappingArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualRouterSpecListenerPortMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualRouterSpecListenerPortMapping)(nil)).Elem()
}

func (o GetVirtualRouterSpecListenerPortMappingArrayOutput) ToGetVirtualRouterSpecListenerPortMappingArrayOutput() GetVirtualRouterSpecListenerPortMappingArrayOutput {
	return o
}

func (o GetVirtualRouterSpecListenerPortMappingArrayOutput) ToGetVirtualRouterSpecListenerPortMappingArrayOutputWithContext(ctx context.Context) GetVirtualRouterSpecListenerPortMappingArrayOutput {
	return o
}

func (o GetVirtualRouterSpecListenerPortMappingArrayOutput) Index(i pulumi.IntInput) GetVirtualRouterSpecListenerPortMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualRouterSpecListenerPortMapping {
		return vs[0].([]GetVirtualRouterSpecListenerPortMapping)[vs[1].(int)]
	}).(GetVirtualRouterSpecListenerPortMappingOutput)
}

type GetVirtualServiceSpec struct {
	Providers []GetVirtualServiceSpecProvider `pulumi:"providers"`
}

// GetVirtualServiceSpecInput is an input type that accepts GetVirtualServiceSpecArgs and GetVirtualServiceSpecOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecInput` via:
//
//	GetVirtualServiceSpecArgs{...}
type GetVirtualServiceSpecInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecOutput() GetVirtualServiceSpecOutput
	ToGetVirtualServiceSpecOutputWithContext(context.Context) GetVirtualServiceSpecOutput
}

type GetVirtualServiceSpecArgs struct {
	Providers GetVirtualServiceSpecProviderArrayInput `pulumi:"providers"`
}

func (GetVirtualServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpec)(nil)).Elem()
}

func (i GetVirtualServiceSpecArgs) ToGetVirtualServiceSpecOutput() GetVirtualServiceSpecOutput {
	return i.ToGetVirtualServiceSpecOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecArgs) ToGetVirtualServiceSpecOutputWithContext(ctx context.Context) GetVirtualServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecOutput)
}

// GetVirtualServiceSpecArrayInput is an input type that accepts GetVirtualServiceSpecArray and GetVirtualServiceSpecArrayOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecArrayInput` via:
//
//	GetVirtualServiceSpecArray{ GetVirtualServiceSpecArgs{...} }
type GetVirtualServiceSpecArrayInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecArrayOutput() GetVirtualServiceSpecArrayOutput
	ToGetVirtualServiceSpecArrayOutputWithContext(context.Context) GetVirtualServiceSpecArrayOutput
}

type GetVirtualServiceSpecArray []GetVirtualServiceSpecInput

func (GetVirtualServiceSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpec)(nil)).Elem()
}

func (i GetVirtualServiceSpecArray) ToGetVirtualServiceSpecArrayOutput() GetVirtualServiceSpecArrayOutput {
	return i.ToGetVirtualServiceSpecArrayOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecArray) ToGetVirtualServiceSpecArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecArrayOutput)
}

type GetVirtualServiceSpecOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpec)(nil)).Elem()
}

func (o GetVirtualServiceSpecOutput) ToGetVirtualServiceSpecOutput() GetVirtualServiceSpecOutput {
	return o
}

func (o GetVirtualServiceSpecOutput) ToGetVirtualServiceSpecOutputWithContext(ctx context.Context) GetVirtualServiceSpecOutput {
	return o
}

func (o GetVirtualServiceSpecOutput) Providers() GetVirtualServiceSpecProviderArrayOutput {
	return o.ApplyT(func(v GetVirtualServiceSpec) []GetVirtualServiceSpecProvider { return v.Providers }).(GetVirtualServiceSpecProviderArrayOutput)
}

type GetVirtualServiceSpecArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpec)(nil)).Elem()
}

func (o GetVirtualServiceSpecArrayOutput) ToGetVirtualServiceSpecArrayOutput() GetVirtualServiceSpecArrayOutput {
	return o
}

func (o GetVirtualServiceSpecArrayOutput) ToGetVirtualServiceSpecArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecArrayOutput {
	return o
}

func (o GetVirtualServiceSpecArrayOutput) Index(i pulumi.IntInput) GetVirtualServiceSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualServiceSpec {
		return vs[0].([]GetVirtualServiceSpec)[vs[1].(int)]
	}).(GetVirtualServiceSpecOutput)
}

type GetVirtualServiceSpecProvider struct {
	VirtualNodes   []GetVirtualServiceSpecProviderVirtualNode   `pulumi:"virtualNodes"`
	VirtualRouters []GetVirtualServiceSpecProviderVirtualRouter `pulumi:"virtualRouters"`
}

// GetVirtualServiceSpecProviderInput is an input type that accepts GetVirtualServiceSpecProviderArgs and GetVirtualServiceSpecProviderOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecProviderInput` via:
//
//	GetVirtualServiceSpecProviderArgs{...}
type GetVirtualServiceSpecProviderInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecProviderOutput() GetVirtualServiceSpecProviderOutput
	ToGetVirtualServiceSpecProviderOutputWithContext(context.Context) GetVirtualServiceSpecProviderOutput
}

type GetVirtualServiceSpecProviderArgs struct {
	VirtualNodes   GetVirtualServiceSpecProviderVirtualNodeArrayInput   `pulumi:"virtualNodes"`
	VirtualRouters GetVirtualServiceSpecProviderVirtualRouterArrayInput `pulumi:"virtualRouters"`
}

func (GetVirtualServiceSpecProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpecProvider)(nil)).Elem()
}

func (i GetVirtualServiceSpecProviderArgs) ToGetVirtualServiceSpecProviderOutput() GetVirtualServiceSpecProviderOutput {
	return i.ToGetVirtualServiceSpecProviderOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecProviderArgs) ToGetVirtualServiceSpecProviderOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecProviderOutput)
}

// GetVirtualServiceSpecProviderArrayInput is an input type that accepts GetVirtualServiceSpecProviderArray and GetVirtualServiceSpecProviderArrayOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecProviderArrayInput` via:
//
//	GetVirtualServiceSpecProviderArray{ GetVirtualServiceSpecProviderArgs{...} }
type GetVirtualServiceSpecProviderArrayInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecProviderArrayOutput() GetVirtualServiceSpecProviderArrayOutput
	ToGetVirtualServiceSpecProviderArrayOutputWithContext(context.Context) GetVirtualServiceSpecProviderArrayOutput
}

type GetVirtualServiceSpecProviderArray []GetVirtualServiceSpecProviderInput

func (GetVirtualServiceSpecProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpecProvider)(nil)).Elem()
}

func (i GetVirtualServiceSpecProviderArray) ToGetVirtualServiceSpecProviderArrayOutput() GetVirtualServiceSpecProviderArrayOutput {
	return i.ToGetVirtualServiceSpecProviderArrayOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecProviderArray) ToGetVirtualServiceSpecProviderArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecProviderArrayOutput)
}

type GetVirtualServiceSpecProviderOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpecProvider)(nil)).Elem()
}

func (o GetVirtualServiceSpecProviderOutput) ToGetVirtualServiceSpecProviderOutput() GetVirtualServiceSpecProviderOutput {
	return o
}

func (o GetVirtualServiceSpecProviderOutput) ToGetVirtualServiceSpecProviderOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderOutput {
	return o
}

func (o GetVirtualServiceSpecProviderOutput) VirtualNodes() GetVirtualServiceSpecProviderVirtualNodeArrayOutput {
	return o.ApplyT(func(v GetVirtualServiceSpecProvider) []GetVirtualServiceSpecProviderVirtualNode {
		return v.VirtualNodes
	}).(GetVirtualServiceSpecProviderVirtualNodeArrayOutput)
}

func (o GetVirtualServiceSpecProviderOutput) VirtualRouters() GetVirtualServiceSpecProviderVirtualRouterArrayOutput {
	return o.ApplyT(func(v GetVirtualServiceSpecProvider) []GetVirtualServiceSpecProviderVirtualRouter {
		return v.VirtualRouters
	}).(GetVirtualServiceSpecProviderVirtualRouterArrayOutput)
}

type GetVirtualServiceSpecProviderArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpecProvider)(nil)).Elem()
}

func (o GetVirtualServiceSpecProviderArrayOutput) ToGetVirtualServiceSpecProviderArrayOutput() GetVirtualServiceSpecProviderArrayOutput {
	return o
}

func (o GetVirtualServiceSpecProviderArrayOutput) ToGetVirtualServiceSpecProviderArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderArrayOutput {
	return o
}

func (o GetVirtualServiceSpecProviderArrayOutput) Index(i pulumi.IntInput) GetVirtualServiceSpecProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualServiceSpecProvider {
		return vs[0].([]GetVirtualServiceSpecProvider)[vs[1].(int)]
	}).(GetVirtualServiceSpecProviderOutput)
}

type GetVirtualServiceSpecProviderVirtualNode struct {
	VirtualNodeName string `pulumi:"virtualNodeName"`
}

// GetVirtualServiceSpecProviderVirtualNodeInput is an input type that accepts GetVirtualServiceSpecProviderVirtualNodeArgs and GetVirtualServiceSpecProviderVirtualNodeOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecProviderVirtualNodeInput` via:
//
//	GetVirtualServiceSpecProviderVirtualNodeArgs{...}
type GetVirtualServiceSpecProviderVirtualNodeInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecProviderVirtualNodeOutput() GetVirtualServiceSpecProviderVirtualNodeOutput
	ToGetVirtualServiceSpecProviderVirtualNodeOutputWithContext(context.Context) GetVirtualServiceSpecProviderVirtualNodeOutput
}

type GetVirtualServiceSpecProviderVirtualNodeArgs struct {
	VirtualNodeName pulumi.StringInput `pulumi:"virtualNodeName"`
}

func (GetVirtualServiceSpecProviderVirtualNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (i GetVirtualServiceSpecProviderVirtualNodeArgs) ToGetVirtualServiceSpecProviderVirtualNodeOutput() GetVirtualServiceSpecProviderVirtualNodeOutput {
	return i.ToGetVirtualServiceSpecProviderVirtualNodeOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecProviderVirtualNodeArgs) ToGetVirtualServiceSpecProviderVirtualNodeOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecProviderVirtualNodeOutput)
}

// GetVirtualServiceSpecProviderVirtualNodeArrayInput is an input type that accepts GetVirtualServiceSpecProviderVirtualNodeArray and GetVirtualServiceSpecProviderVirtualNodeArrayOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecProviderVirtualNodeArrayInput` via:
//
//	GetVirtualServiceSpecProviderVirtualNodeArray{ GetVirtualServiceSpecProviderVirtualNodeArgs{...} }
type GetVirtualServiceSpecProviderVirtualNodeArrayInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecProviderVirtualNodeArrayOutput() GetVirtualServiceSpecProviderVirtualNodeArrayOutput
	ToGetVirtualServiceSpecProviderVirtualNodeArrayOutputWithContext(context.Context) GetVirtualServiceSpecProviderVirtualNodeArrayOutput
}

type GetVirtualServiceSpecProviderVirtualNodeArray []GetVirtualServiceSpecProviderVirtualNodeInput

func (GetVirtualServiceSpecProviderVirtualNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (i GetVirtualServiceSpecProviderVirtualNodeArray) ToGetVirtualServiceSpecProviderVirtualNodeArrayOutput() GetVirtualServiceSpecProviderVirtualNodeArrayOutput {
	return i.ToGetVirtualServiceSpecProviderVirtualNodeArrayOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecProviderVirtualNodeArray) ToGetVirtualServiceSpecProviderVirtualNodeArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecProviderVirtualNodeArrayOutput)
}

type GetVirtualServiceSpecProviderVirtualNodeOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecProviderVirtualNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (o GetVirtualServiceSpecProviderVirtualNodeOutput) ToGetVirtualServiceSpecProviderVirtualNodeOutput() GetVirtualServiceSpecProviderVirtualNodeOutput {
	return o
}

func (o GetVirtualServiceSpecProviderVirtualNodeOutput) ToGetVirtualServiceSpecProviderVirtualNodeOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualNodeOutput {
	return o
}

func (o GetVirtualServiceSpecProviderVirtualNodeOutput) VirtualNodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualServiceSpecProviderVirtualNode) string { return v.VirtualNodeName }).(pulumi.StringOutput)
}

type GetVirtualServiceSpecProviderVirtualNodeArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecProviderVirtualNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpecProviderVirtualNode)(nil)).Elem()
}

func (o GetVirtualServiceSpecProviderVirtualNodeArrayOutput) ToGetVirtualServiceSpecProviderVirtualNodeArrayOutput() GetVirtualServiceSpecProviderVirtualNodeArrayOutput {
	return o
}

func (o GetVirtualServiceSpecProviderVirtualNodeArrayOutput) ToGetVirtualServiceSpecProviderVirtualNodeArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualNodeArrayOutput {
	return o
}

func (o GetVirtualServiceSpecProviderVirtualNodeArrayOutput) Index(i pulumi.IntInput) GetVirtualServiceSpecProviderVirtualNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualServiceSpecProviderVirtualNode {
		return vs[0].([]GetVirtualServiceSpecProviderVirtualNode)[vs[1].(int)]
	}).(GetVirtualServiceSpecProviderVirtualNodeOutput)
}

type GetVirtualServiceSpecProviderVirtualRouter struct {
	VirtualRouterName string `pulumi:"virtualRouterName"`
}

// GetVirtualServiceSpecProviderVirtualRouterInput is an input type that accepts GetVirtualServiceSpecProviderVirtualRouterArgs and GetVirtualServiceSpecProviderVirtualRouterOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecProviderVirtualRouterInput` via:
//
//	GetVirtualServiceSpecProviderVirtualRouterArgs{...}
type GetVirtualServiceSpecProviderVirtualRouterInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecProviderVirtualRouterOutput() GetVirtualServiceSpecProviderVirtualRouterOutput
	ToGetVirtualServiceSpecProviderVirtualRouterOutputWithContext(context.Context) GetVirtualServiceSpecProviderVirtualRouterOutput
}

type GetVirtualServiceSpecProviderVirtualRouterArgs struct {
	VirtualRouterName pulumi.StringInput `pulumi:"virtualRouterName"`
}

func (GetVirtualServiceSpecProviderVirtualRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (i GetVirtualServiceSpecProviderVirtualRouterArgs) ToGetVirtualServiceSpecProviderVirtualRouterOutput() GetVirtualServiceSpecProviderVirtualRouterOutput {
	return i.ToGetVirtualServiceSpecProviderVirtualRouterOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecProviderVirtualRouterArgs) ToGetVirtualServiceSpecProviderVirtualRouterOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecProviderVirtualRouterOutput)
}

// GetVirtualServiceSpecProviderVirtualRouterArrayInput is an input type that accepts GetVirtualServiceSpecProviderVirtualRouterArray and GetVirtualServiceSpecProviderVirtualRouterArrayOutput values.
// You can construct a concrete instance of `GetVirtualServiceSpecProviderVirtualRouterArrayInput` via:
//
//	GetVirtualServiceSpecProviderVirtualRouterArray{ GetVirtualServiceSpecProviderVirtualRouterArgs{...} }
type GetVirtualServiceSpecProviderVirtualRouterArrayInput interface {
	pulumi.Input

	ToGetVirtualServiceSpecProviderVirtualRouterArrayOutput() GetVirtualServiceSpecProviderVirtualRouterArrayOutput
	ToGetVirtualServiceSpecProviderVirtualRouterArrayOutputWithContext(context.Context) GetVirtualServiceSpecProviderVirtualRouterArrayOutput
}

type GetVirtualServiceSpecProviderVirtualRouterArray []GetVirtualServiceSpecProviderVirtualRouterInput

func (GetVirtualServiceSpecProviderVirtualRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (i GetVirtualServiceSpecProviderVirtualRouterArray) ToGetVirtualServiceSpecProviderVirtualRouterArrayOutput() GetVirtualServiceSpecProviderVirtualRouterArrayOutput {
	return i.ToGetVirtualServiceSpecProviderVirtualRouterArrayOutputWithContext(context.Background())
}

func (i GetVirtualServiceSpecProviderVirtualRouterArray) ToGetVirtualServiceSpecProviderVirtualRouterArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualServiceSpecProviderVirtualRouterArrayOutput)
}

type GetVirtualServiceSpecProviderVirtualRouterOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecProviderVirtualRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (o GetVirtualServiceSpecProviderVirtualRouterOutput) ToGetVirtualServiceSpecProviderVirtualRouterOutput() GetVirtualServiceSpecProviderVirtualRouterOutput {
	return o
}

func (o GetVirtualServiceSpecProviderVirtualRouterOutput) ToGetVirtualServiceSpecProviderVirtualRouterOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualRouterOutput {
	return o
}

func (o GetVirtualServiceSpecProviderVirtualRouterOutput) VirtualRouterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualServiceSpecProviderVirtualRouter) string { return v.VirtualRouterName }).(pulumi.StringOutput)
}

type GetVirtualServiceSpecProviderVirtualRouterArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualServiceSpecProviderVirtualRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualServiceSpecProviderVirtualRouter)(nil)).Elem()
}

func (o GetVirtualServiceSpecProviderVirtualRouterArrayOutput) ToGetVirtualServiceSpecProviderVirtualRouterArrayOutput() GetVirtualServiceSpecProviderVirtualRouterArrayOutput {
	return o
}

func (o GetVirtualServiceSpecProviderVirtualRouterArrayOutput) ToGetVirtualServiceSpecProviderVirtualRouterArrayOutputWithContext(ctx context.Context) GetVirtualServiceSpecProviderVirtualRouterArrayOutput {
	return o
}

func (o GetVirtualServiceSpecProviderVirtualRouterArrayOutput) Index(i pulumi.IntInput) GetVirtualServiceSpecProviderVirtualRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualServiceSpecProviderVirtualRouter {
		return vs[0].([]GetVirtualServiceSpecProviderVirtualRouter)[vs[1].(int)]
	}).(GetVirtualServiceSpecProviderVirtualRouterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecInput)(nil)).Elem(), GatewayRouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecPtrInput)(nil)).Elem(), GatewayRouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRoutePtrInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionPtrInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTargetInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTargetPtrInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteMatchInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecGrpcRouteMatchPtrInput)(nil)).Elem(), GatewayRouteSpecGrpcRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RoutePtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionPtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewriteInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewritePtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewriteHostnameInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionRewriteHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionRewriteHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewritePathInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionRewritePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewritePathPtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionRewritePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewritePrefixInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionRewritePrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionRewritePrefixPtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionRewritePrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTargetInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTargetPtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchPtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHeaderInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHeaderArrayInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHeaderMatchInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHostnameInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchHostnamePtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchPathInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchPathPtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchQueryParameterInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchQueryParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchQueryParameterArrayInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchQueryParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchQueryParameterMatchInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrInput)(nil)).Elem(), GatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteInput)(nil)).Elem(), GatewayRouteSpecHttpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRoutePtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionPtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewriteInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewritePtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewriteHostnameInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionRewriteHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewriteHostnamePtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionRewriteHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewritePathInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionRewritePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewritePathPtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionRewritePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewritePrefixInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionRewritePrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionRewritePrefixPtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionRewritePrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTargetInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTargetPtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTargetVirtualServiceInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchPtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHeaderInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHeaderArrayInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHeaderMatchInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHeaderMatchPtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHeaderMatchRangeInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHostnameInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchHostnamePtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchPathInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchPathPtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchQueryParameterInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchQueryParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchQueryParameterArrayInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchQueryParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchQueryParameterMatchInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrInput)(nil)).Elem(), GatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshSpecInput)(nil)).Elem(), MeshSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshSpecPtrInput)(nil)).Elem(), MeshSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshSpecEgressFilterInput)(nil)).Elem(), MeshSpecEgressFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshSpecEgressFilterPtrInput)(nil)).Elem(), MeshSpecEgressFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecInput)(nil)).Elem(), RouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecPtrInput)(nil)).Elem(), RouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteInput)(nil)).Elem(), RouteSpecGrpcRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRoutePtrInput)(nil)).Elem(), RouteSpecGrpcRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteActionInput)(nil)).Elem(), RouteSpecGrpcRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteActionPtrInput)(nil)).Elem(), RouteSpecGrpcRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteActionWeightedTargetInput)(nil)).Elem(), RouteSpecGrpcRouteActionWeightedTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteActionWeightedTargetArrayInput)(nil)).Elem(), RouteSpecGrpcRouteActionWeightedTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchInput)(nil)).Elem(), RouteSpecGrpcRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchPtrInput)(nil)).Elem(), RouteSpecGrpcRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataInput)(nil)).Elem(), RouteSpecGrpcRouteMatchMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataArrayInput)(nil)).Elem(), RouteSpecGrpcRouteMatchMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatchInput)(nil)).Elem(), RouteSpecGrpcRouteMatchMetadataMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatchPtrInput)(nil)).Elem(), RouteSpecGrpcRouteMatchMetadataMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatchRangeInput)(nil)).Elem(), RouteSpecGrpcRouteMatchMetadataMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteMatchMetadataMatchRangePtrInput)(nil)).Elem(), RouteSpecGrpcRouteMatchMetadataMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicyInput)(nil)).Elem(), RouteSpecGrpcRouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicyPtrInput)(nil)).Elem(), RouteSpecGrpcRouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput)(nil)).Elem(), RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrInput)(nil)).Elem(), RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteTimeoutInput)(nil)).Elem(), RouteSpecGrpcRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteTimeoutPtrInput)(nil)).Elem(), RouteSpecGrpcRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteTimeoutIdleInput)(nil)).Elem(), RouteSpecGrpcRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteTimeoutIdlePtrInput)(nil)).Elem(), RouteSpecGrpcRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteTimeoutPerRequestInput)(nil)).Elem(), RouteSpecGrpcRouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecGrpcRouteTimeoutPerRequestPtrInput)(nil)).Elem(), RouteSpecGrpcRouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteInput)(nil)).Elem(), RouteSpecHttp2RouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RoutePtrInput)(nil)).Elem(), RouteSpecHttp2RouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteActionInput)(nil)).Elem(), RouteSpecHttp2RouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteActionPtrInput)(nil)).Elem(), RouteSpecHttp2RouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteActionWeightedTargetInput)(nil)).Elem(), RouteSpecHttp2RouteActionWeightedTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteActionWeightedTargetArrayInput)(nil)).Elem(), RouteSpecHttp2RouteActionWeightedTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchInput)(nil)).Elem(), RouteSpecHttp2RouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchPtrInput)(nil)).Elem(), RouteSpecHttp2RouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderInput)(nil)).Elem(), RouteSpecHttp2RouteMatchHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderArrayInput)(nil)).Elem(), RouteSpecHttp2RouteMatchHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatchInput)(nil)).Elem(), RouteSpecHttp2RouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatchPtrInput)(nil)).Elem(), RouteSpecHttp2RouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatchRangeInput)(nil)).Elem(), RouteSpecHttp2RouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchHeaderMatchRangePtrInput)(nil)).Elem(), RouteSpecHttp2RouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchPathInput)(nil)).Elem(), RouteSpecHttp2RouteMatchPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchPathPtrInput)(nil)).Elem(), RouteSpecHttp2RouteMatchPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchQueryParameterInput)(nil)).Elem(), RouteSpecHttp2RouteMatchQueryParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchQueryParameterArrayInput)(nil)).Elem(), RouteSpecHttp2RouteMatchQueryParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchQueryParameterMatchInput)(nil)).Elem(), RouteSpecHttp2RouteMatchQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteMatchQueryParameterMatchPtrInput)(nil)).Elem(), RouteSpecHttp2RouteMatchQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicyInput)(nil)).Elem(), RouteSpecHttp2RouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicyPtrInput)(nil)).Elem(), RouteSpecHttp2RouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput)(nil)).Elem(), RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrInput)(nil)).Elem(), RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteTimeoutInput)(nil)).Elem(), RouteSpecHttp2RouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteTimeoutPtrInput)(nil)).Elem(), RouteSpecHttp2RouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteTimeoutIdleInput)(nil)).Elem(), RouteSpecHttp2RouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteTimeoutIdlePtrInput)(nil)).Elem(), RouteSpecHttp2RouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteTimeoutPerRequestInput)(nil)).Elem(), RouteSpecHttp2RouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttp2RouteTimeoutPerRequestPtrInput)(nil)).Elem(), RouteSpecHttp2RouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteInput)(nil)).Elem(), RouteSpecHttpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRoutePtrInput)(nil)).Elem(), RouteSpecHttpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteActionInput)(nil)).Elem(), RouteSpecHttpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteActionPtrInput)(nil)).Elem(), RouteSpecHttpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteActionWeightedTargetInput)(nil)).Elem(), RouteSpecHttpRouteActionWeightedTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteActionWeightedTargetArrayInput)(nil)).Elem(), RouteSpecHttpRouteActionWeightedTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchInput)(nil)).Elem(), RouteSpecHttpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchPtrInput)(nil)).Elem(), RouteSpecHttpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderInput)(nil)).Elem(), RouteSpecHttpRouteMatchHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderArrayInput)(nil)).Elem(), RouteSpecHttpRouteMatchHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatchInput)(nil)).Elem(), RouteSpecHttpRouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatchPtrInput)(nil)).Elem(), RouteSpecHttpRouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatchRangeInput)(nil)).Elem(), RouteSpecHttpRouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchHeaderMatchRangePtrInput)(nil)).Elem(), RouteSpecHttpRouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchPathInput)(nil)).Elem(), RouteSpecHttpRouteMatchPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchPathPtrInput)(nil)).Elem(), RouteSpecHttpRouteMatchPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchQueryParameterInput)(nil)).Elem(), RouteSpecHttpRouteMatchQueryParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchQueryParameterArrayInput)(nil)).Elem(), RouteSpecHttpRouteMatchQueryParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchQueryParameterMatchInput)(nil)).Elem(), RouteSpecHttpRouteMatchQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteMatchQueryParameterMatchPtrInput)(nil)).Elem(), RouteSpecHttpRouteMatchQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteRetryPolicyInput)(nil)).Elem(), RouteSpecHttpRouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteRetryPolicyPtrInput)(nil)).Elem(), RouteSpecHttpRouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput)(nil)).Elem(), RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrInput)(nil)).Elem(), RouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteTimeoutInput)(nil)).Elem(), RouteSpecHttpRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteTimeoutPtrInput)(nil)).Elem(), RouteSpecHttpRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteTimeoutIdleInput)(nil)).Elem(), RouteSpecHttpRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteTimeoutIdlePtrInput)(nil)).Elem(), RouteSpecHttpRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteTimeoutPerRequestInput)(nil)).Elem(), RouteSpecHttpRouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecHttpRouteTimeoutPerRequestPtrInput)(nil)).Elem(), RouteSpecHttpRouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteInput)(nil)).Elem(), RouteSpecTcpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRoutePtrInput)(nil)).Elem(), RouteSpecTcpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteActionInput)(nil)).Elem(), RouteSpecTcpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteActionPtrInput)(nil)).Elem(), RouteSpecTcpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteActionWeightedTargetInput)(nil)).Elem(), RouteSpecTcpRouteActionWeightedTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteActionWeightedTargetArrayInput)(nil)).Elem(), RouteSpecTcpRouteActionWeightedTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteMatchInput)(nil)).Elem(), RouteSpecTcpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteMatchPtrInput)(nil)).Elem(), RouteSpecTcpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteTimeoutInput)(nil)).Elem(), RouteSpecTcpRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteTimeoutPtrInput)(nil)).Elem(), RouteSpecTcpRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteTimeoutIdleInput)(nil)).Elem(), RouteSpecTcpRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecTcpRouteTimeoutIdlePtrInput)(nil)).Elem(), RouteSpecTcpRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecInput)(nil)).Elem(), VirtualGatewaySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecPtrInput)(nil)).Elem(), VirtualGatewaySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput)(nil)).Elem(), VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerInput)(nil)).Elem(), VirtualGatewaySpecListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerArrayInput)(nil)).Elem(), VirtualGatewaySpecListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolInput)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolGrpcInput)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolGrpcPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttp2Input)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttp2PtrInput)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttpInput)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerConnectionPoolHttpPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerHealthCheckInput)(nil)).Elem(), VirtualGatewaySpecListenerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerHealthCheckPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerPortMappingInput)(nil)).Elem(), VirtualGatewaySpecListenerPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificatePtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateAcmInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateAcmPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateFileInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateFilePtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateSdsInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsCertificateSdsPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustFileInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustFilePtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustSdsInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecListenerTlsValidationTrustSdsPtrInput)(nil)).Elem(), VirtualGatewaySpecListenerTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingInput)(nil)).Elem(), VirtualGatewaySpecLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingPtrInput)(nil)).Elem(), VirtualGatewaySpecLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogInput)(nil)).Elem(), VirtualGatewaySpecLoggingAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogPtrInput)(nil)).Elem(), VirtualGatewaySpecLoggingAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFileInput)(nil)).Elem(), VirtualGatewaySpecLoggingAccessLogFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFilePtrInput)(nil)).Elem(), VirtualGatewaySpecLoggingAccessLogFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFileFormatInput)(nil)).Elem(), VirtualGatewaySpecLoggingAccessLogFileFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFileFormatPtrInput)(nil)).Elem(), VirtualGatewaySpecLoggingAccessLogFileFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFileFormatJsonInput)(nil)).Elem(), VirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayInput)(nil)).Elem(), VirtualGatewaySpecLoggingAccessLogFileFormatJsonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecInput)(nil)).Elem(), VirtualNodeSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecPtrInput)(nil)).Elem(), VirtualNodeSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendInput)(nil)).Elem(), VirtualNodeSpecBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendArrayInput)(nil)).Elem(), VirtualNodeSpecBackendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrInput)(nil)).Elem(), VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrInput)(nil)).Elem(), VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerInput)(nil)).Elem(), VirtualNodeSpecListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerArrayInput)(nil)).Elem(), VirtualNodeSpecListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolPtrInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolGrpcInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolGrpcPtrInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttp2Input)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttp2ArrayInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolHttp2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttpInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolHttpArrayInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolTcpInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerConnectionPoolTcpArrayInput)(nil)).Elem(), VirtualNodeSpecListenerConnectionPoolTcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerHealthCheckInput)(nil)).Elem(), VirtualNodeSpecListenerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerHealthCheckPtrInput)(nil)).Elem(), VirtualNodeSpecListenerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionInput)(nil)).Elem(), VirtualNodeSpecListenerOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionPtrInput)(nil)).Elem(), VirtualNodeSpecListenerOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput)(nil)).Elem(), VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrInput)(nil)).Elem(), VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionIntervalInput)(nil)).Elem(), VirtualNodeSpecListenerOutlierDetectionIntervalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerOutlierDetectionIntervalPtrInput)(nil)).Elem(), VirtualNodeSpecListenerOutlierDetectionIntervalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerPortMappingInput)(nil)).Elem(), VirtualNodeSpecListenerPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcIdleInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutGrpcIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcIdlePtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutGrpcIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcPerRequestInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutGrpcPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2Input)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2PtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2IdleInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttp2IdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2IdlePtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttp2IdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2PerRequestInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttp2PerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpIdleInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttpIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpIdlePtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttpIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpPerRequestInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttpPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutHttpPerRequestPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutHttpPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcpInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcpPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcpIdleInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutTcpIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTimeoutTcpIdlePtrInput)(nil)).Elem(), VirtualNodeSpecListenerTimeoutTcpIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsInput)(nil)).Elem(), VirtualNodeSpecListenerTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificatePtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateAcmInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateAcmPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateFileInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateFilePtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateSdsInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsCertificateSdsPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsCertificateSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustFileInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustFilePtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustSdsInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecListenerTlsValidationTrustSdsPtrInput)(nil)).Elem(), VirtualNodeSpecListenerTlsValidationTrustSdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingInput)(nil)).Elem(), VirtualNodeSpecLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingPtrInput)(nil)).Elem(), VirtualNodeSpecLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogInput)(nil)).Elem(), VirtualNodeSpecLoggingAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogPtrInput)(nil)).Elem(), VirtualNodeSpecLoggingAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFileInput)(nil)).Elem(), VirtualNodeSpecLoggingAccessLogFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFilePtrInput)(nil)).Elem(), VirtualNodeSpecLoggingAccessLogFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFileFormatInput)(nil)).Elem(), VirtualNodeSpecLoggingAccessLogFileFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFileFormatPtrInput)(nil)).Elem(), VirtualNodeSpecLoggingAccessLogFileFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFileFormatJsonInput)(nil)).Elem(), VirtualNodeSpecLoggingAccessLogFileFormatJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayInput)(nil)).Elem(), VirtualNodeSpecLoggingAccessLogFileFormatJsonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryInput)(nil)).Elem(), VirtualNodeSpecServiceDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryPtrInput)(nil)).Elem(), VirtualNodeSpecServiceDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryAwsCloudMapInput)(nil)).Elem(), VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrInput)(nil)).Elem(), VirtualNodeSpecServiceDiscoveryAwsCloudMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryDnsInput)(nil)).Elem(), VirtualNodeSpecServiceDiscoveryDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecServiceDiscoveryDnsPtrInput)(nil)).Elem(), VirtualNodeSpecServiceDiscoveryDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterSpecInput)(nil)).Elem(), VirtualRouterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterSpecPtrInput)(nil)).Elem(), VirtualRouterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterSpecListenerInput)(nil)).Elem(), VirtualRouterSpecListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterSpecListenerArrayInput)(nil)).Elem(), VirtualRouterSpecListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterSpecListenerPortMappingInput)(nil)).Elem(), VirtualRouterSpecListenerPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecInput)(nil)).Elem(), VirtualServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecPtrInput)(nil)).Elem(), VirtualServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecProviderInput)(nil)).Elem(), VirtualServiceSpecProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecProviderPtrInput)(nil)).Elem(), VirtualServiceSpecProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecProviderVirtualNodeInput)(nil)).Elem(), VirtualServiceSpecProviderVirtualNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecProviderVirtualNodePtrInput)(nil)).Elem(), VirtualServiceSpecProviderVirtualNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecProviderVirtualRouterInput)(nil)).Elem(), VirtualServiceSpecProviderVirtualRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecProviderVirtualRouterPtrInput)(nil)).Elem(), VirtualServiceSpecProviderVirtualRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecInput)(nil)).Elem(), GetGatewayRouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecArrayInput)(nil)).Elem(), GetGatewayRouteSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteInput)(nil)).Elem(), GetGatewayRouteSpecGrpcRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteArrayInput)(nil)).Elem(), GetGatewayRouteSpecGrpcRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteActionInput)(nil)).Elem(), GetGatewayRouteSpecGrpcRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteActionArrayInput)(nil)).Elem(), GetGatewayRouteSpecGrpcRouteActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteActionTargetInput)(nil)).Elem(), GetGatewayRouteSpecGrpcRouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteActionTargetArrayInput)(nil)).Elem(), GetGatewayRouteSpecGrpcRouteActionTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceInput)(nil)).Elem(), GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayInput)(nil)).Elem(), GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteMatchInput)(nil)).Elem(), GetGatewayRouteSpecGrpcRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecGrpcRouteMatchArrayInput)(nil)).Elem(), GetGatewayRouteSpecGrpcRouteMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewriteInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteActionRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewriteArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteActionRewriteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewriteHostnameInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewritePathInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteActionRewritePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewritePathArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteActionRewritePathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewritePrefixInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteActionRewritePrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteActionRewritePrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionTargetInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionTargetArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteActionTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHeaderInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHeaderArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHeaderMatchInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHostnameInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchHostnameArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchHostnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchPathInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchPathArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchQueryParameterInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchQueryParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchQueryParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewriteInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteActionRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewriteArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteActionRewriteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewriteHostnameInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteActionRewriteHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteActionRewriteHostnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewritePathInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteActionRewritePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewritePathArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteActionRewritePathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewritePrefixInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteActionRewritePrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteActionRewritePrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionTargetInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteActionTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionTargetArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteActionTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHeaderInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHeaderArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHeaderMatchInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchHeaderMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHostnameInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchHostnameArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchHostnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchPathInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchPathArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchQueryParameterInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchQueryParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchQueryParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayInput)(nil)).Elem(), GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMeshSpecInput)(nil)).Elem(), GetMeshSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMeshSpecArrayInput)(nil)).Elem(), GetMeshSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMeshSpecEgressFilterInput)(nil)).Elem(), GetMeshSpecEgressFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMeshSpecEgressFilterArrayInput)(nil)).Elem(), GetMeshSpecEgressFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecInput)(nil)).Elem(), GetRouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecArrayInput)(nil)).Elem(), GetRouteSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteInput)(nil)).Elem(), GetRouteSpecGrpcRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteArrayInput)(nil)).Elem(), GetRouteSpecGrpcRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteActionInput)(nil)).Elem(), GetRouteSpecGrpcRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteActionArrayInput)(nil)).Elem(), GetRouteSpecGrpcRouteActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteActionWeightedTargetInput)(nil)).Elem(), GetRouteSpecGrpcRouteActionWeightedTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteActionWeightedTargetArrayInput)(nil)).Elem(), GetRouteSpecGrpcRouteActionWeightedTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteMatchInput)(nil)).Elem(), GetRouteSpecGrpcRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteMatchArrayInput)(nil)).Elem(), GetRouteSpecGrpcRouteMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteMatchMetadataInput)(nil)).Elem(), GetRouteSpecGrpcRouteMatchMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteMatchMetadataArrayInput)(nil)).Elem(), GetRouteSpecGrpcRouteMatchMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteMatchMetadataMatchInput)(nil)).Elem(), GetRouteSpecGrpcRouteMatchMetadataMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteMatchMetadataMatchArrayInput)(nil)).Elem(), GetRouteSpecGrpcRouteMatchMetadataMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteMatchMetadataMatchRangeInput)(nil)).Elem(), GetRouteSpecGrpcRouteMatchMetadataMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayInput)(nil)).Elem(), GetRouteSpecGrpcRouteMatchMetadataMatchRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteRetryPolicyInput)(nil)).Elem(), GetRouteSpecGrpcRouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteRetryPolicyArrayInput)(nil)).Elem(), GetRouteSpecGrpcRouteRetryPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutInput)(nil)).Elem(), GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayInput)(nil)).Elem(), GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteTimeoutInput)(nil)).Elem(), GetRouteSpecGrpcRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteTimeoutArrayInput)(nil)).Elem(), GetRouteSpecGrpcRouteTimeoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteTimeoutIdleInput)(nil)).Elem(), GetRouteSpecGrpcRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteTimeoutIdleArrayInput)(nil)).Elem(), GetRouteSpecGrpcRouteTimeoutIdleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteTimeoutPerRequestInput)(nil)).Elem(), GetRouteSpecGrpcRouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecGrpcRouteTimeoutPerRequestArrayInput)(nil)).Elem(), GetRouteSpecGrpcRouteTimeoutPerRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteInput)(nil)).Elem(), GetRouteSpecHttp2RouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteActionInput)(nil)).Elem(), GetRouteSpecHttp2RouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteActionArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteActionWeightedTargetInput)(nil)).Elem(), GetRouteSpecHttp2RouteActionWeightedTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteActionWeightedTargetArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteActionWeightedTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteMatchInput)(nil)).Elem(), GetRouteSpecHttp2RouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteMatchArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteMatchHeaderInput)(nil)).Elem(), GetRouteSpecHttp2RouteMatchHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteMatchHeaderArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteMatchHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteMatchHeaderMatchInput)(nil)).Elem(), GetRouteSpecHttp2RouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteMatchHeaderMatchArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteMatchHeaderMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteMatchHeaderMatchRangeInput)(nil)).Elem(), GetRouteSpecHttp2RouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteMatchHeaderMatchRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteMatchPathInput)(nil)).Elem(), GetRouteSpecHttp2RouteMatchPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteMatchPathArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteMatchPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteMatchQueryParameterInput)(nil)).Elem(), GetRouteSpecHttp2RouteMatchQueryParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteMatchQueryParameterArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteMatchQueryParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteMatchQueryParameterMatchInput)(nil)).Elem(), GetRouteSpecHttp2RouteMatchQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteMatchQueryParameterMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteRetryPolicyInput)(nil)).Elem(), GetRouteSpecHttp2RouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteRetryPolicyArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteRetryPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutInput)(nil)).Elem(), GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteTimeoutInput)(nil)).Elem(), GetRouteSpecHttp2RouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteTimeoutArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteTimeoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteTimeoutIdleInput)(nil)).Elem(), GetRouteSpecHttp2RouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteTimeoutIdleArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteTimeoutIdleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteTimeoutPerRequestInput)(nil)).Elem(), GetRouteSpecHttp2RouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttp2RouteTimeoutPerRequestArrayInput)(nil)).Elem(), GetRouteSpecHttp2RouteTimeoutPerRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteInput)(nil)).Elem(), GetRouteSpecHttpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteActionInput)(nil)).Elem(), GetRouteSpecHttpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteActionArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteActionWeightedTargetInput)(nil)).Elem(), GetRouteSpecHttpRouteActionWeightedTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteActionWeightedTargetArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteActionWeightedTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteMatchInput)(nil)).Elem(), GetRouteSpecHttpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteMatchArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteMatchHeaderInput)(nil)).Elem(), GetRouteSpecHttpRouteMatchHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteMatchHeaderArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteMatchHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteMatchHeaderMatchInput)(nil)).Elem(), GetRouteSpecHttpRouteMatchHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteMatchHeaderMatchArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteMatchHeaderMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteMatchHeaderMatchRangeInput)(nil)).Elem(), GetRouteSpecHttpRouteMatchHeaderMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteMatchHeaderMatchRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteMatchPathInput)(nil)).Elem(), GetRouteSpecHttpRouteMatchPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteMatchPathArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteMatchPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteMatchQueryParameterInput)(nil)).Elem(), GetRouteSpecHttpRouteMatchQueryParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteMatchQueryParameterArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteMatchQueryParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteMatchQueryParameterMatchInput)(nil)).Elem(), GetRouteSpecHttpRouteMatchQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteMatchQueryParameterMatchArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteMatchQueryParameterMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteRetryPolicyInput)(nil)).Elem(), GetRouteSpecHttpRouteRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteRetryPolicyArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteRetryPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutInput)(nil)).Elem(), GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteTimeoutInput)(nil)).Elem(), GetRouteSpecHttpRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteTimeoutArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteTimeoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteTimeoutIdleInput)(nil)).Elem(), GetRouteSpecHttpRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteTimeoutIdleArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteTimeoutIdleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteTimeoutPerRequestInput)(nil)).Elem(), GetRouteSpecHttpRouteTimeoutPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecHttpRouteTimeoutPerRequestArrayInput)(nil)).Elem(), GetRouteSpecHttpRouteTimeoutPerRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecTcpRouteInput)(nil)).Elem(), GetRouteSpecTcpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecTcpRouteArrayInput)(nil)).Elem(), GetRouteSpecTcpRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecTcpRouteActionInput)(nil)).Elem(), GetRouteSpecTcpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecTcpRouteActionArrayInput)(nil)).Elem(), GetRouteSpecTcpRouteActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecTcpRouteActionWeightedTargetInput)(nil)).Elem(), GetRouteSpecTcpRouteActionWeightedTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecTcpRouteActionWeightedTargetArrayInput)(nil)).Elem(), GetRouteSpecTcpRouteActionWeightedTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecTcpRouteMatchInput)(nil)).Elem(), GetRouteSpecTcpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecTcpRouteMatchArrayInput)(nil)).Elem(), GetRouteSpecTcpRouteMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecTcpRouteTimeoutInput)(nil)).Elem(), GetRouteSpecTcpRouteTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecTcpRouteTimeoutArrayInput)(nil)).Elem(), GetRouteSpecTcpRouteTimeoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecTcpRouteTimeoutIdleInput)(nil)).Elem(), GetRouteSpecTcpRouteTimeoutIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteSpecTcpRouteTimeoutIdleArrayInput)(nil)).Elem(), GetRouteSpecTcpRouteTimeoutIdleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecInput)(nil)).Elem(), GetVirtualGatewaySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecArrayInput)(nil)).Elem(), GetVirtualGatewaySpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultArrayInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyArrayInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayInput)(nil)).Elem(), GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerInput)(nil)).Elem(), GetVirtualGatewaySpecListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPoolInput)(nil)).Elem(), GetVirtualGatewaySpecListenerConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPoolArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerConnectionPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPoolGrpcInput)(nil)).Elem(), GetVirtualGatewaySpecListenerConnectionPoolGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerConnectionPoolGrpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPoolHttp2Input)(nil)).Elem(), GetVirtualGatewaySpecListenerConnectionPoolHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerConnectionPoolHttp2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPoolHttpInput)(nil)).Elem(), GetVirtualGatewaySpecListenerConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerConnectionPoolHttpArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerConnectionPoolHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerHealthCheckInput)(nil)).Elem(), GetVirtualGatewaySpecListenerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerHealthCheckArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerPortMappingInput)(nil)).Elem(), GetVirtualGatewaySpecListenerPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerPortMappingArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerPortMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificateInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificateArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificateAcmInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlCertificateAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificateAcmArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlCertificateAcmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificateFileInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificateFileArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlCertificateFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificateSdInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlCertificateSdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlCertificateSdArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlCertificateSdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationTrustInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationTrustArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlValidationTrustArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationTrustFileInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationTrustFileArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlValidationTrustFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationTrustSdInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlValidationTrustSdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecListenerTlValidationTrustSdArrayInput)(nil)).Elem(), GetVirtualGatewaySpecListenerTlValidationTrustSdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecLoggingInput)(nil)).Elem(), GetVirtualGatewaySpecLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecLoggingArrayInput)(nil)).Elem(), GetVirtualGatewaySpecLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLogInput)(nil)).Elem(), GetVirtualGatewaySpecLoggingAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLogArrayInput)(nil)).Elem(), GetVirtualGatewaySpecLoggingAccessLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLogFileInput)(nil)).Elem(), GetVirtualGatewaySpecLoggingAccessLogFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLogFileArrayInput)(nil)).Elem(), GetVirtualGatewaySpecLoggingAccessLogFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLogFileFormatInput)(nil)).Elem(), GetVirtualGatewaySpecLoggingAccessLogFileFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayInput)(nil)).Elem(), GetVirtualGatewaySpecLoggingAccessLogFileFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonInput)(nil)).Elem(), GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayInput)(nil)).Elem(), GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecInput)(nil)).Elem(), GetVirtualNodeSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecArrayInput)(nil)).Elem(), GetVirtualNodeSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendInput)(nil)).Elem(), GetVirtualNodeSpecBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayInput)(nil)).Elem(), GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerInput)(nil)).Elem(), GetVirtualNodeSpecListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolInput)(nil)).Elem(), GetVirtualNodeSpecListenerConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerConnectionPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolGrpcInput)(nil)).Elem(), GetVirtualNodeSpecListenerConnectionPoolGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolGrpcArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerConnectionPoolGrpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolHttp2Input)(nil)).Elem(), GetVirtualNodeSpecListenerConnectionPoolHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerConnectionPoolHttp2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolHttpInput)(nil)).Elem(), GetVirtualNodeSpecListenerConnectionPoolHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolHttpArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerConnectionPoolHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolTcpInput)(nil)).Elem(), GetVirtualNodeSpecListenerConnectionPoolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerConnectionPoolTcpArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerConnectionPoolTcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerHealthCheckInput)(nil)).Elem(), GetVirtualNodeSpecListenerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerHealthCheckArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerOutlierDetectionInput)(nil)).Elem(), GetVirtualNodeSpecListenerOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerOutlierDetectionArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerOutlierDetectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationInput)(nil)).Elem(), GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerOutlierDetectionIntervalInput)(nil)).Elem(), GetVirtualNodeSpecListenerOutlierDetectionIntervalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerOutlierDetectionIntervalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerPortMappingInput)(nil)).Elem(), GetVirtualNodeSpecListenerPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerPortMappingArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerPortMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutGrpcInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutGrpcArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutGrpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutGrpcIdleInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutGrpcIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutGrpcIdleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutGrpcPerRequestInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttp2Input)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttp2ArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutHttp2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttp2IdleInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutHttp2IdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutHttp2IdleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttp2PerRequestInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttpInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttpArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttpIdleInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutHttpIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttpIdleArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutHttpIdleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttpPerRequestInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutHttpPerRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutHttpPerRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutTcpInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutTcpArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutTcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutTcpIdleInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutTcpIdleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTimeoutTcpIdleArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTimeoutTcpIdleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificateInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificateArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificateAcmInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlCertificateAcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificateAcmArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlCertificateAcmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificateFileInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlCertificateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificateFileArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlCertificateFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificateSdInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlCertificateSdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlCertificateSdArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlCertificateSdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationTrustInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlValidationTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationTrustArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlValidationTrustArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationTrustFileInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlValidationTrustFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationTrustFileArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlValidationTrustFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationTrustSdInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlValidationTrustSdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecListenerTlValidationTrustSdArrayInput)(nil)).Elem(), GetVirtualNodeSpecListenerTlValidationTrustSdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecLoggingInput)(nil)).Elem(), GetVirtualNodeSpecLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecLoggingArrayInput)(nil)).Elem(), GetVirtualNodeSpecLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLogInput)(nil)).Elem(), GetVirtualNodeSpecLoggingAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLogArrayInput)(nil)).Elem(), GetVirtualNodeSpecLoggingAccessLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLogFileInput)(nil)).Elem(), GetVirtualNodeSpecLoggingAccessLogFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLogFileArrayInput)(nil)).Elem(), GetVirtualNodeSpecLoggingAccessLogFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLogFileFormatInput)(nil)).Elem(), GetVirtualNodeSpecLoggingAccessLogFileFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLogFileFormatArrayInput)(nil)).Elem(), GetVirtualNodeSpecLoggingAccessLogFileFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLogFileFormatJsonInput)(nil)).Elem(), GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayInput)(nil)).Elem(), GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecServiceDiscoveryInput)(nil)).Elem(), GetVirtualNodeSpecServiceDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecServiceDiscoveryArrayInput)(nil)).Elem(), GetVirtualNodeSpecServiceDiscoveryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecServiceDiscoveryAwsCloudMapInput)(nil)).Elem(), GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayInput)(nil)).Elem(), GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecServiceDiscoveryDnInput)(nil)).Elem(), GetVirtualNodeSpecServiceDiscoveryDnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNodeSpecServiceDiscoveryDnArrayInput)(nil)).Elem(), GetVirtualNodeSpecServiceDiscoveryDnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualRouterSpecInput)(nil)).Elem(), GetVirtualRouterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualRouterSpecArrayInput)(nil)).Elem(), GetVirtualRouterSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualRouterSpecListenerInput)(nil)).Elem(), GetVirtualRouterSpecListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualRouterSpecListenerArrayInput)(nil)).Elem(), GetVirtualRouterSpecListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualRouterSpecListenerPortMappingInput)(nil)).Elem(), GetVirtualRouterSpecListenerPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualRouterSpecListenerPortMappingArrayInput)(nil)).Elem(), GetVirtualRouterSpecListenerPortMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecInput)(nil)).Elem(), GetVirtualServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecArrayInput)(nil)).Elem(), GetVirtualServiceSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecProviderInput)(nil)).Elem(), GetVirtualServiceSpecProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecProviderArrayInput)(nil)).Elem(), GetVirtualServiceSpecProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualNodeInput)(nil)).Elem(), GetVirtualServiceSpecProviderVirtualNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualNodeArrayInput)(nil)).Elem(), GetVirtualServiceSpecProviderVirtualNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualRouterInput)(nil)).Elem(), GetVirtualServiceSpecProviderVirtualRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualServiceSpecProviderVirtualRouterArrayInput)(nil)).Elem(), GetVirtualServiceSpecProviderVirtualRouterArray{})
	pulumi.RegisterOutputType(GatewayRouteSpecOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRoutePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteActionOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteActionPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteActionTargetOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteActionTargetPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteActionTargetVirtualServicePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecGrpcRouteMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RoutePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionRewriteOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionRewritePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionRewriteHostnameOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionRewriteHostnamePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionRewritePathOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionRewritePathPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionRewritePrefixOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionRewritePrefixPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionTargetOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionTargetPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteActionTargetVirtualServicePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchHeaderOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchHeaderArrayOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchHeaderMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchHeaderMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchHostnameOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchHostnamePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchPathOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchPathPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchQueryParameterOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRoutePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionRewriteOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionRewritePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionRewriteHostnameOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionRewriteHostnamePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionRewritePathOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionRewritePathPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionRewritePrefixOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionRewritePrefixPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionTargetOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionTargetPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteActionTargetVirtualServicePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchHeaderOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchHeaderArrayOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchHeaderMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchHeaderMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchHeaderMatchRangePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchHostnameOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchHostnamePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchPathOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchPathPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchQueryParameterOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecHttpRouteMatchQueryParameterMatchPtrOutput{})
	pulumi.RegisterOutputType(MeshSpecOutput{})
	pulumi.RegisterOutputType(MeshSpecPtrOutput{})
	pulumi.RegisterOutputType(MeshSpecEgressFilterOutput{})
	pulumi.RegisterOutputType(MeshSpecEgressFilterPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecOutput{})
	pulumi.RegisterOutputType(RouteSpecPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRoutePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteActionOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteActionPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteActionWeightedTargetOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteActionWeightedTargetArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchMetadataOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchMetadataArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchMetadataMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchMetadataMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchMetadataMatchRangeOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteMatchMetadataMatchRangePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteRetryPolicyOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteRetryPolicyPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteTimeoutOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteTimeoutIdleOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteTimeoutIdlePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteTimeoutPerRequestOutput{})
	pulumi.RegisterOutputType(RouteSpecGrpcRouteTimeoutPerRequestPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RoutePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteActionOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteActionPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteActionWeightedTargetOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteActionWeightedTargetArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchHeaderOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchHeaderArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchHeaderMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchHeaderMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchHeaderMatchRangeOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchHeaderMatchRangePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchPathOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchPathPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchQueryParameterOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchQueryParameterArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchQueryParameterMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteMatchQueryParameterMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteRetryPolicyOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteRetryPolicyPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteRetryPolicyPerRetryTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteTimeoutOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteTimeoutIdleOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteTimeoutIdlePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteTimeoutPerRequestOutput{})
	pulumi.RegisterOutputType(RouteSpecHttp2RouteTimeoutPerRequestPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRoutePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteActionOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteActionPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteActionWeightedTargetOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteActionWeightedTargetArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchHeaderOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchHeaderArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchHeaderMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchHeaderMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchHeaderMatchRangeOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchHeaderMatchRangePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchPathOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchPathPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchQueryParameterOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchQueryParameterArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchQueryParameterMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteMatchQueryParameterMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteRetryPolicyOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteRetryPolicyPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteRetryPolicyPerRetryTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteTimeoutOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteTimeoutIdleOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteTimeoutIdlePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteTimeoutPerRequestOutput{})
	pulumi.RegisterOutputType(RouteSpecHttpRouteTimeoutPerRequestPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRoutePtrOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteActionOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteActionPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteActionWeightedTargetOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteActionWeightedTargetArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteMatchOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteTimeoutOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteTimeoutIdleOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteTimeoutIdlePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFileOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerArrayOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolGrpcOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolGrpcPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolHttp2Output{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolHttp2PtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolHttpOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerConnectionPoolHttpPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerHealthCheckOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerPortMappingOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificateAcmOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificateAcmPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificateFileOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificateFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificateSdsOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsCertificateSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationTrustOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationTrustFileOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationTrustFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationTrustSdsOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecListenerTlsValidationTrustSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingAccessLogOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingAccessLogPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingAccessLogFileOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingAccessLogFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingAccessLogFileFormatOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingAccessLogFileFormatPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendArrayOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFileOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsCertificateSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustAcmPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFileOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendDefaultsClientPolicyTlsValidationTrustSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFileOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsCertificateSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationSubjectAlternativeNamesMatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustAcmPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFileOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecBackendVirtualServiceClientPolicyTlsValidationTrustSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerArrayOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolGrpcOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolGrpcPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolHttp2Output{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolHttpOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolHttpArrayOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolTcpOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerConnectionPoolTcpArrayOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerHealthCheckOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerOutlierDetectionOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerOutlierDetectionPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerOutlierDetectionIntervalOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerOutlierDetectionIntervalPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerPortMappingOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutGrpcOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutGrpcPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutGrpcIdleOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutGrpcIdlePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutGrpcPerRequestOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutGrpcPerRequestPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttp2Output{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttp2PtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttp2IdleOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttp2IdlePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttp2PerRequestOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttp2PerRequestPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttpOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttpPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttpIdleOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttpIdlePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttpPerRequestOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutHttpPerRequestPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutTcpOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutTcpPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutTcpIdleOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTimeoutTcpIdlePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificateAcmOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificateAcmPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificateFileOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificateFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificateSdsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsCertificateSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationSubjectAlternativeNamesMatchPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationTrustOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationTrustFileOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationTrustFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationTrustSdsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerTlsValidationTrustSdsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingAccessLogOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingAccessLogPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingAccessLogFileOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingAccessLogFilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingAccessLogFileFormatOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingAccessLogFileFormatPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingAccessLogFileFormatJsonOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecServiceDiscoveryOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecServiceDiscoveryPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecServiceDiscoveryAwsCloudMapOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecServiceDiscoveryAwsCloudMapPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecServiceDiscoveryDnsOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecServiceDiscoveryDnsPtrOutput{})
	pulumi.RegisterOutputType(VirtualRouterSpecOutput{})
	pulumi.RegisterOutputType(VirtualRouterSpecPtrOutput{})
	pulumi.RegisterOutputType(VirtualRouterSpecListenerOutput{})
	pulumi.RegisterOutputType(VirtualRouterSpecListenerArrayOutput{})
	pulumi.RegisterOutputType(VirtualRouterSpecListenerPortMappingOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecProviderOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecProviderPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecProviderVirtualNodeOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecProviderVirtualNodePtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecProviderVirtualRouterOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecProviderVirtualRouterPtrOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecGrpcRouteOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecGrpcRouteArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecGrpcRouteActionOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecGrpcRouteActionArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecGrpcRouteActionTargetOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecGrpcRouteActionTargetArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecGrpcRouteActionTargetVirtualServiceArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecGrpcRouteMatchOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecGrpcRouteMatchArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteActionOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteActionArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteActionRewriteOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteActionRewriteArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteActionRewriteHostnameOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteActionRewriteHostnameArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteActionRewritePathOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteActionRewritePathArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteActionRewritePrefixOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteActionRewritePrefixArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteActionTargetOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteActionTargetArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteActionTargetVirtualServiceArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchHeaderOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchHeaderMatchOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchHeaderMatchArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchHostnameOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchHostnameArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchPathOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchPathArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchQueryParameterOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchQueryParameterArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteActionOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteActionArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteActionRewriteOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteActionRewriteArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteActionRewriteHostnameOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteActionRewriteHostnameArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteActionRewritePathOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteActionRewritePathArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteActionRewritePrefixOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteActionRewritePrefixArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteActionTargetOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteActionTargetArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteActionTargetVirtualServiceArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchHeaderOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchHeaderMatchOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchHeaderMatchArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchHostnameOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchHostnameArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchPathOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchPathArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchQueryParameterOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchQueryParameterArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchOutput{})
	pulumi.RegisterOutputType(GetGatewayRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput{})
	pulumi.RegisterOutputType(GetMeshSpecOutput{})
	pulumi.RegisterOutputType(GetMeshSpecArrayOutput{})
	pulumi.RegisterOutputType(GetMeshSpecEgressFilterOutput{})
	pulumi.RegisterOutputType(GetMeshSpecEgressFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecOutput{})
	pulumi.RegisterOutputType(GetRouteSpecArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteActionOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteActionArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteActionWeightedTargetOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteActionWeightedTargetArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteMatchOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteMatchArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteMatchMetadataOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteMatchMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteMatchMetadataMatchOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteMatchMetadataMatchArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteMatchMetadataMatchRangeOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteMatchMetadataMatchRangeArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteRetryPolicyOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteRetryPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteTimeoutOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteTimeoutArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteTimeoutIdleOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteTimeoutIdleArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteTimeoutPerRequestOutput{})
	pulumi.RegisterOutputType(GetRouteSpecGrpcRouteTimeoutPerRequestArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteActionOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteActionArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteActionWeightedTargetOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteActionWeightedTargetArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteMatchOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteMatchArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteMatchHeaderOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteMatchHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteMatchHeaderMatchOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteMatchHeaderMatchArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteMatchHeaderMatchRangeOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteMatchHeaderMatchRangeArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteMatchPathOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteMatchPathArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteMatchQueryParameterOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteMatchQueryParameterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteMatchQueryParameterMatchOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteMatchQueryParameterMatchArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteRetryPolicyOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteRetryPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteRetryPolicyPerRetryTimeoutArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteTimeoutOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteTimeoutArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteTimeoutIdleOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteTimeoutIdleArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteTimeoutPerRequestOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttp2RouteTimeoutPerRequestArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteActionOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteActionArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteActionWeightedTargetOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteActionWeightedTargetArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteMatchOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteMatchArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteMatchHeaderOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteMatchHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteMatchHeaderMatchOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteMatchHeaderMatchArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteMatchHeaderMatchRangeOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteMatchHeaderMatchRangeArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteMatchPathOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteMatchPathArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteMatchQueryParameterOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteMatchQueryParameterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteMatchQueryParameterMatchOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteMatchQueryParameterMatchArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteRetryPolicyOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteRetryPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteRetryPolicyPerRetryTimeoutArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteTimeoutOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteTimeoutArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteTimeoutIdleOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteTimeoutIdleArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteTimeoutPerRequestOutput{})
	pulumi.RegisterOutputType(GetRouteSpecHttpRouteTimeoutPerRequestArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecTcpRouteOutput{})
	pulumi.RegisterOutputType(GetRouteSpecTcpRouteArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecTcpRouteActionOutput{})
	pulumi.RegisterOutputType(GetRouteSpecTcpRouteActionArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecTcpRouteActionWeightedTargetOutput{})
	pulumi.RegisterOutputType(GetRouteSpecTcpRouteActionWeightedTargetArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecTcpRouteMatchOutput{})
	pulumi.RegisterOutputType(GetRouteSpecTcpRouteMatchArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecTcpRouteTimeoutOutput{})
	pulumi.RegisterOutputType(GetRouteSpecTcpRouteTimeoutArrayOutput{})
	pulumi.RegisterOutputType(GetRouteSpecTcpRouteTimeoutIdleOutput{})
	pulumi.RegisterOutputType(GetRouteSpecTcpRouteTimeoutIdleArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateFileArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlCertificateSdArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerConnectionPoolOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerConnectionPoolArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerConnectionPoolGrpcOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerConnectionPoolGrpcArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerConnectionPoolHttp2Output{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerConnectionPoolHttp2ArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerConnectionPoolHttpOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerConnectionPoolHttpArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerHealthCheckOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerPortMappingOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerPortMappingArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlCertificateOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlCertificateAcmOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlCertificateAcmArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlCertificateFileOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlCertificateFileArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlCertificateSdOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlCertificateSdArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlValidationOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlValidationArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlValidationTrustOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlValidationTrustArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlValidationTrustFileOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlValidationTrustFileArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlValidationTrustSdOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecListenerTlValidationTrustSdArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecLoggingOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecLoggingArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecLoggingAccessLogOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecLoggingAccessLogArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecLoggingAccessLogFileOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecLoggingAccessLogFileArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecLoggingAccessLogFileFormatOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecLoggingAccessLogFileFormatArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonOutput{})
	pulumi.RegisterOutputType(GetVirtualGatewaySpecLoggingAccessLogFileFormatJsonArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateFileArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlCertificateSdArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustAcmArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustFileArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendDefaultClientPolicyTlValidationTrustSdArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateFileArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlCertificateSdArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationSubjectAlternativeNameMatchArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustAcmArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustFileArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecBackendVirtualServiceClientPolicyTlValidationTrustSdArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerConnectionPoolOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerConnectionPoolArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerConnectionPoolGrpcOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerConnectionPoolGrpcArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerConnectionPoolHttp2Output{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerConnectionPoolHttp2ArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerConnectionPoolHttpOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerConnectionPoolHttpArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerConnectionPoolTcpOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerConnectionPoolTcpArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerHealthCheckOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerOutlierDetectionOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerOutlierDetectionArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerOutlierDetectionIntervalOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerOutlierDetectionIntervalArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerPortMappingOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerPortMappingArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutGrpcOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutGrpcArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutGrpcIdleOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutGrpcIdleArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutGrpcPerRequestOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutGrpcPerRequestArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutHttp2Output{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutHttp2ArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutHttp2IdleOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutHttp2IdleArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutHttp2PerRequestOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutHttp2PerRequestArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutHttpOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutHttpArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutHttpIdleOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutHttpIdleArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutHttpPerRequestOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutHttpPerRequestArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutTcpOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutTcpArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutTcpIdleOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTimeoutTcpIdleArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlCertificateOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlCertificateAcmOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlCertificateAcmArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlCertificateFileOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlCertificateFileArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlCertificateSdOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlCertificateSdArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlValidationOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlValidationArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlValidationSubjectAlternativeNameMatchArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlValidationTrustOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlValidationTrustArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlValidationTrustFileOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlValidationTrustFileArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlValidationTrustSdOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecListenerTlValidationTrustSdArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecLoggingOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecLoggingArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecLoggingAccessLogOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecLoggingAccessLogArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecLoggingAccessLogFileOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecLoggingAccessLogFileArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecLoggingAccessLogFileFormatOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecLoggingAccessLogFileFormatArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecLoggingAccessLogFileFormatJsonOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecLoggingAccessLogFileFormatJsonArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecServiceDiscoveryOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecServiceDiscoveryArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecServiceDiscoveryAwsCloudMapOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecServiceDiscoveryAwsCloudMapArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecServiceDiscoveryDnOutput{})
	pulumi.RegisterOutputType(GetVirtualNodeSpecServiceDiscoveryDnArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualRouterSpecOutput{})
	pulumi.RegisterOutputType(GetVirtualRouterSpecArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualRouterSpecListenerOutput{})
	pulumi.RegisterOutputType(GetVirtualRouterSpecListenerArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualRouterSpecListenerPortMappingOutput{})
	pulumi.RegisterOutputType(GetVirtualRouterSpecListenerPortMappingArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecProviderOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecProviderArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecProviderVirtualNodeOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecProviderVirtualNodeArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecProviderVirtualRouterOutput{})
	pulumi.RegisterOutputType(GetVirtualServiceSpecProviderVirtualRouterArrayOutput{})
}
