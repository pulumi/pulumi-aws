// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appmesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The App Mesh Route data source allows details of an App Mesh Route to be retrieved by its name, mesh_name, virtual_router_name, and optionally the mesh_owner.
func LookupRoute(ctx *pulumi.Context, args *LookupRouteArgs, opts ...pulumi.InvokeOption) (*LookupRouteResult, error) {
	var rv LookupRouteResult
	err := ctx.Invoke("aws:appmesh/getRoute:getRoute", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRoute.
type LookupRouteArgs struct {
	// Name of the service mesh in which the virtual router exists.
	MeshName string `pulumi:"meshName"`
	// AWS account ID of the service mesh's owner.
	MeshOwner *string `pulumi:"meshOwner"`
	// Name of the route.
	Name string `pulumi:"name"`
	// Map of tags.
	Tags map[string]string `pulumi:"tags"`
	// Name of the virtual router in which the route exists.
	VirtualRouterName string `pulumi:"virtualRouterName"`
}

// A collection of values returned by getRoute.
type LookupRouteResult struct {
	// ARN of the route.
	Arn string `pulumi:"arn"`
	// Creation date of the route.
	CreatedDate string `pulumi:"createdDate"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Last update date of the route.
	LastUpdatedDate string `pulumi:"lastUpdatedDate"`
	MeshName        string `pulumi:"meshName"`
	MeshOwner       string `pulumi:"meshOwner"`
	Name            string `pulumi:"name"`
	// Resource owner's AWS account ID.
	ResourceOwner string `pulumi:"resourceOwner"`
	// Route specification
	Specs []GetRouteSpec `pulumi:"specs"`
	// Map of tags.
	Tags              map[string]string `pulumi:"tags"`
	VirtualRouterName string            `pulumi:"virtualRouterName"`
}

func LookupRouteOutput(ctx *pulumi.Context, args LookupRouteOutputArgs, opts ...pulumi.InvokeOption) LookupRouteResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRouteResult, error) {
			args := v.(LookupRouteArgs)
			r, err := LookupRoute(ctx, &args, opts...)
			var s LookupRouteResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRouteResultOutput)
}

// A collection of arguments for invoking getRoute.
type LookupRouteOutputArgs struct {
	// Name of the service mesh in which the virtual router exists.
	MeshName pulumi.StringInput `pulumi:"meshName"`
	// AWS account ID of the service mesh's owner.
	MeshOwner pulumi.StringPtrInput `pulumi:"meshOwner"`
	// Name of the route.
	Name pulumi.StringInput `pulumi:"name"`
	// Map of tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Name of the virtual router in which the route exists.
	VirtualRouterName pulumi.StringInput `pulumi:"virtualRouterName"`
}

func (LookupRouteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteArgs)(nil)).Elem()
}

// A collection of values returned by getRoute.
type LookupRouteResultOutput struct{ *pulumi.OutputState }

func (LookupRouteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteResult)(nil)).Elem()
}

func (o LookupRouteResultOutput) ToLookupRouteResultOutput() LookupRouteResultOutput {
	return o
}

func (o LookupRouteResultOutput) ToLookupRouteResultOutputWithContext(ctx context.Context) LookupRouteResultOutput {
	return o
}

// ARN of the route.
func (o LookupRouteResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Creation date of the route.
func (o LookupRouteResultOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRouteResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.Id }).(pulumi.StringOutput)
}

// Last update date of the route.
func (o LookupRouteResultOutput) LastUpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.LastUpdatedDate }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) MeshName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.MeshName }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) MeshOwner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.MeshOwner }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource owner's AWS account ID.
func (o LookupRouteResultOutput) ResourceOwner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.ResourceOwner }).(pulumi.StringOutput)
}

// Route specification
func (o LookupRouteResultOutput) Specs() GetRouteSpecArrayOutput {
	return o.ApplyT(func(v LookupRouteResult) []GetRouteSpec { return v.Specs }).(GetRouteSpecArrayOutput)
}

// Map of tags.
func (o LookupRouteResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRouteResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupRouteResultOutput) VirtualRouterName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.VirtualRouterName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRouteResultOutput{})
}
