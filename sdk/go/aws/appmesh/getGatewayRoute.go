// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appmesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The App Mesh Gateway Route data source allows details of an App Mesh Gateway Route to be retrieved by its name, mesh_name, virtual_gateway_name, and optionally the mesh_owner.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/appmesh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := appmesh.LookupGatewayRoute(ctx, &appmesh.LookupGatewayRouteArgs{
//				MeshName:           "test-mesh",
//				Name:               "test-route",
//				VirtualGatewayName: "test-gateway",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupGatewayRoute(ctx *pulumi.Context, args *LookupGatewayRouteArgs, opts ...pulumi.InvokeOption) (*LookupGatewayRouteResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGatewayRouteResult
	err := ctx.Invoke("aws:appmesh/getGatewayRoute:getGatewayRoute", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGatewayRoute.
type LookupGatewayRouteArgs struct {
	// Name of the service mesh in which the virtual gateway exists.
	MeshName string `pulumi:"meshName"`
	// AWS account ID of the service mesh's owner.
	MeshOwner *string `pulumi:"meshOwner"`
	// Name of the gateway route.
	Name string `pulumi:"name"`
	// Map of tags.
	Tags map[string]string `pulumi:"tags"`
	// Name of the virtual gateway in which the route exists.
	VirtualGatewayName string `pulumi:"virtualGatewayName"`
}

// A collection of values returned by getGatewayRoute.
type LookupGatewayRouteResult struct {
	// ARN of the gateway route.
	Arn string `pulumi:"arn"`
	// Creation date of the gateway route.
	CreatedDate string `pulumi:"createdDate"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Last update date of the gateway route.
	LastUpdatedDate string `pulumi:"lastUpdatedDate"`
	MeshName        string `pulumi:"meshName"`
	MeshOwner       string `pulumi:"meshOwner"`
	Name            string `pulumi:"name"`
	// Resource owner's AWS account ID.
	ResourceOwner string `pulumi:"resourceOwner"`
	// Gateway route specification. See the `appmesh.GatewayRoute` resource for details.
	Specs []GetGatewayRouteSpec `pulumi:"specs"`
	// Map of tags.
	Tags               map[string]string `pulumi:"tags"`
	VirtualGatewayName string            `pulumi:"virtualGatewayName"`
}

func LookupGatewayRouteOutput(ctx *pulumi.Context, args LookupGatewayRouteOutputArgs, opts ...pulumi.InvokeOption) LookupGatewayRouteResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGatewayRouteResult, error) {
			args := v.(LookupGatewayRouteArgs)
			r, err := LookupGatewayRoute(ctx, &args, opts...)
			var s LookupGatewayRouteResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGatewayRouteResultOutput)
}

// A collection of arguments for invoking getGatewayRoute.
type LookupGatewayRouteOutputArgs struct {
	// Name of the service mesh in which the virtual gateway exists.
	MeshName pulumi.StringInput `pulumi:"meshName"`
	// AWS account ID of the service mesh's owner.
	MeshOwner pulumi.StringPtrInput `pulumi:"meshOwner"`
	// Name of the gateway route.
	Name pulumi.StringInput `pulumi:"name"`
	// Map of tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Name of the virtual gateway in which the route exists.
	VirtualGatewayName pulumi.StringInput `pulumi:"virtualGatewayName"`
}

func (LookupGatewayRouteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayRouteArgs)(nil)).Elem()
}

// A collection of values returned by getGatewayRoute.
type LookupGatewayRouteResultOutput struct{ *pulumi.OutputState }

func (LookupGatewayRouteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayRouteResult)(nil)).Elem()
}

func (o LookupGatewayRouteResultOutput) ToLookupGatewayRouteResultOutput() LookupGatewayRouteResultOutput {
	return o
}

func (o LookupGatewayRouteResultOutput) ToLookupGatewayRouteResultOutputWithContext(ctx context.Context) LookupGatewayRouteResultOutput {
	return o
}

func (o LookupGatewayRouteResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupGatewayRouteResult] {
	return pulumix.Output[LookupGatewayRouteResult]{
		OutputState: o.OutputState,
	}
}

// ARN of the gateway route.
func (o LookupGatewayRouteResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Creation date of the gateway route.
func (o LookupGatewayRouteResultOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupGatewayRouteResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) string { return v.Id }).(pulumi.StringOutput)
}

// Last update date of the gateway route.
func (o LookupGatewayRouteResultOutput) LastUpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) string { return v.LastUpdatedDate }).(pulumi.StringOutput)
}

func (o LookupGatewayRouteResultOutput) MeshName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) string { return v.MeshName }).(pulumi.StringOutput)
}

func (o LookupGatewayRouteResultOutput) MeshOwner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) string { return v.MeshOwner }).(pulumi.StringOutput)
}

func (o LookupGatewayRouteResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource owner's AWS account ID.
func (o LookupGatewayRouteResultOutput) ResourceOwner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) string { return v.ResourceOwner }).(pulumi.StringOutput)
}

// Gateway route specification. See the `appmesh.GatewayRoute` resource for details.
func (o LookupGatewayRouteResultOutput) Specs() GetGatewayRouteSpecArrayOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) []GetGatewayRouteSpec { return v.Specs }).(GetGatewayRouteSpecArrayOutput)
}

// Map of tags.
func (o LookupGatewayRouteResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupGatewayRouteResultOutput) VirtualGatewayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) string { return v.VirtualGatewayName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGatewayRouteResultOutput{})
}
