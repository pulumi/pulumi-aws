// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appmesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS App Mesh Virtual Gateway.
//
// ## Example Usage
func LookupVirtualGateway(ctx *pulumi.Context, args *LookupVirtualGatewayArgs, opts ...pulumi.InvokeOption) (*LookupVirtualGatewayResult, error) {
	var rv LookupVirtualGatewayResult
	err := ctx.Invoke("aws:appmesh/getVirtualGateway:getVirtualGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualGateway.
type LookupVirtualGatewayArgs struct {
	// Name of the service mesh in which the virtual gateway exists.
	MeshName string `pulumi:"meshName"`
	// Name of the virtual gateway.
	Name string `pulumi:"name"`
	// Map of tags.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getVirtualGateway.
type LookupVirtualGatewayResult struct {
	// ARN of the virtual gateway.
	Arn string `pulumi:"arn"`
	// Creation date of the virtual gateway.
	CreatedDate string `pulumi:"createdDate"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Last update date of the virtual gateway.
	LastUpdatedDate string `pulumi:"lastUpdatedDate"`
	MeshName        string `pulumi:"meshName"`
	MeshOwner       string `pulumi:"meshOwner"`
	Name            string `pulumi:"name"`
	// Resource owner's AWS account ID.
	ResourceOwner string `pulumi:"resourceOwner"`
	// Virtual gateway specification
	Specs []GetVirtualGatewaySpec `pulumi:"specs"`
	// Map of tags.
	Tags map[string]string `pulumi:"tags"`
}

func LookupVirtualGatewayOutput(ctx *pulumi.Context, args LookupVirtualGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualGatewayResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVirtualGatewayResult, error) {
			args := v.(LookupVirtualGatewayArgs)
			r, err := LookupVirtualGateway(ctx, &args, opts...)
			var s LookupVirtualGatewayResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVirtualGatewayResultOutput)
}

// A collection of arguments for invoking getVirtualGateway.
type LookupVirtualGatewayOutputArgs struct {
	// Name of the service mesh in which the virtual gateway exists.
	MeshName pulumi.StringInput `pulumi:"meshName"`
	// Name of the virtual gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// Map of tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupVirtualGatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualGatewayArgs)(nil)).Elem()
}

// A collection of values returned by getVirtualGateway.
type LookupVirtualGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualGatewayResult)(nil)).Elem()
}

func (o LookupVirtualGatewayResultOutput) ToLookupVirtualGatewayResultOutput() LookupVirtualGatewayResultOutput {
	return o
}

func (o LookupVirtualGatewayResultOutput) ToLookupVirtualGatewayResultOutputWithContext(ctx context.Context) LookupVirtualGatewayResultOutput {
	return o
}

// ARN of the virtual gateway.
func (o LookupVirtualGatewayResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualGatewayResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Creation date of the virtual gateway.
func (o LookupVirtualGatewayResultOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualGatewayResult) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVirtualGatewayResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualGatewayResult) string { return v.Id }).(pulumi.StringOutput)
}

// Last update date of the virtual gateway.
func (o LookupVirtualGatewayResultOutput) LastUpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualGatewayResult) string { return v.LastUpdatedDate }).(pulumi.StringOutput)
}

func (o LookupVirtualGatewayResultOutput) MeshName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualGatewayResult) string { return v.MeshName }).(pulumi.StringOutput)
}

func (o LookupVirtualGatewayResultOutput) MeshOwner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualGatewayResult) string { return v.MeshOwner }).(pulumi.StringOutput)
}

func (o LookupVirtualGatewayResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualGatewayResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource owner's AWS account ID.
func (o LookupVirtualGatewayResultOutput) ResourceOwner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualGatewayResult) string { return v.ResourceOwner }).(pulumi.StringOutput)
}

// Virtual gateway specification
func (o LookupVirtualGatewayResultOutput) Specs() GetVirtualGatewaySpecArrayOutput {
	return o.ApplyT(func(v LookupVirtualGatewayResult) []GetVirtualGatewaySpec { return v.Specs }).(GetVirtualGatewaySpecArrayOutput)
}

// Map of tags.
func (o LookupVirtualGatewayResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualGatewayResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualGatewayResultOutput{})
}
