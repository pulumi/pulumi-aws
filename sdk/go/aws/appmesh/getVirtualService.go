// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appmesh

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The App Mesh Virtual Service data source allows details of an App Mesh Virtual Service to be retrieved by its name, mesh_name, and optionally the mesh_owner.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/appmesh"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := appmesh.LookupVirtualService(ctx, &appmesh.LookupVirtualServiceArgs{
// 			MeshName: "example-mesh",
// 			Name:     "example.mesh.local",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws"
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/appmesh"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		current, err := aws.GetCallerIdentity(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		opt0 := current.AccountId
// 		_, err = appmesh.LookupVirtualService(ctx, &appmesh.LookupVirtualServiceArgs{
// 			Name:      "example.mesh.local",
// 			MeshName:  "example-mesh",
// 			MeshOwner: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupVirtualService(ctx *pulumi.Context, args *LookupVirtualServiceArgs, opts ...pulumi.InvokeOption) (*LookupVirtualServiceResult, error) {
	var rv LookupVirtualServiceResult
	err := ctx.Invoke("aws:appmesh/getVirtualService:getVirtualService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualService.
type LookupVirtualServiceArgs struct {
	// The name of the service mesh in which the virtual service exists.
	MeshName string `pulumi:"meshName"`
	// The AWS account ID of the service mesh's owner.
	MeshOwner *string `pulumi:"meshOwner"`
	// The name of the virtual service.
	Name string `pulumi:"name"`
	// A map of tags.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getVirtualService.
type LookupVirtualServiceResult struct {
	// The ARN of the virtual service.
	Arn string `pulumi:"arn"`
	// The creation date of the virtual service.
	CreatedDate string `pulumi:"createdDate"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The last update date of the virtual service.
	LastUpdatedDate string `pulumi:"lastUpdatedDate"`
	MeshName        string `pulumi:"meshName"`
	MeshOwner       string `pulumi:"meshOwner"`
	Name            string `pulumi:"name"`
	// The resource owner's AWS account ID.
	ResourceOwner string `pulumi:"resourceOwner"`
	// The virtual service specification
	Specs []GetVirtualServiceSpec `pulumi:"specs"`
	// A map of tags.
	Tags map[string]string `pulumi:"tags"`
}
