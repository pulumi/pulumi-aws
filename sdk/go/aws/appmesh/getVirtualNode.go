// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appmesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS App Mesh Virtual Node.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/appmesh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := appmesh.LookupVirtualNode(ctx, &appmesh.LookupVirtualNodeArgs{
//				MeshName: "example-mesh",
//				Name:     "serviceBv1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVirtualNode(ctx *pulumi.Context, args *LookupVirtualNodeArgs, opts ...pulumi.InvokeOption) (*LookupVirtualNodeResult, error) {
	var rv LookupVirtualNodeResult
	err := ctx.Invoke("aws:appmesh/getVirtualNode:getVirtualNode", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualNode.
type LookupVirtualNodeArgs struct {
	// Name of the service mesh in which the virtual node exists.
	MeshName string `pulumi:"meshName"`
	// AWS account ID of the service mesh's owner.
	MeshOwner *string `pulumi:"meshOwner"`
	// Name of the virtual node.
	Name string `pulumi:"name"`
	// Map of tags.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getVirtualNode.
type LookupVirtualNodeResult struct {
	// ARN of the virtual node.
	Arn string `pulumi:"arn"`
	// Creation date of the virtual node.
	CreatedDate string `pulumi:"createdDate"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Last update date of the virtual node.
	LastUpdatedDate string `pulumi:"lastUpdatedDate"`
	MeshName        string `pulumi:"meshName"`
	MeshOwner       string `pulumi:"meshOwner"`
	Name            string `pulumi:"name"`
	// Resource owner's AWS account ID.
	ResourceOwner string `pulumi:"resourceOwner"`
	// Virtual node specification. See the `appmesh.VirtualNode` resource for details.
	Specs []GetVirtualNodeSpec `pulumi:"specs"`
	// Map of tags.
	Tags map[string]string `pulumi:"tags"`
}

func LookupVirtualNodeOutput(ctx *pulumi.Context, args LookupVirtualNodeOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualNodeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVirtualNodeResult, error) {
			args := v.(LookupVirtualNodeArgs)
			r, err := LookupVirtualNode(ctx, &args, opts...)
			var s LookupVirtualNodeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVirtualNodeResultOutput)
}

// A collection of arguments for invoking getVirtualNode.
type LookupVirtualNodeOutputArgs struct {
	// Name of the service mesh in which the virtual node exists.
	MeshName pulumi.StringInput `pulumi:"meshName"`
	// AWS account ID of the service mesh's owner.
	MeshOwner pulumi.StringPtrInput `pulumi:"meshOwner"`
	// Name of the virtual node.
	Name pulumi.StringInput `pulumi:"name"`
	// Map of tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupVirtualNodeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualNodeArgs)(nil)).Elem()
}

// A collection of values returned by getVirtualNode.
type LookupVirtualNodeResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualNodeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualNodeResult)(nil)).Elem()
}

func (o LookupVirtualNodeResultOutput) ToLookupVirtualNodeResultOutput() LookupVirtualNodeResultOutput {
	return o
}

func (o LookupVirtualNodeResultOutput) ToLookupVirtualNodeResultOutputWithContext(ctx context.Context) LookupVirtualNodeResultOutput {
	return o
}

// ARN of the virtual node.
func (o LookupVirtualNodeResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodeResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Creation date of the virtual node.
func (o LookupVirtualNodeResultOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodeResult) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVirtualNodeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodeResult) string { return v.Id }).(pulumi.StringOutput)
}

// Last update date of the virtual node.
func (o LookupVirtualNodeResultOutput) LastUpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodeResult) string { return v.LastUpdatedDate }).(pulumi.StringOutput)
}

func (o LookupVirtualNodeResultOutput) MeshName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodeResult) string { return v.MeshName }).(pulumi.StringOutput)
}

func (o LookupVirtualNodeResultOutput) MeshOwner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodeResult) string { return v.MeshOwner }).(pulumi.StringOutput)
}

func (o LookupVirtualNodeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodeResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource owner's AWS account ID.
func (o LookupVirtualNodeResultOutput) ResourceOwner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodeResult) string { return v.ResourceOwner }).(pulumi.StringOutput)
}

// Virtual node specification. See the `appmesh.VirtualNode` resource for details.
func (o LookupVirtualNodeResultOutput) Specs() GetVirtualNodeSpecArrayOutput {
	return o.ApplyT(func(v LookupVirtualNodeResult) []GetVirtualNodeSpec { return v.Specs }).(GetVirtualNodeSpecArrayOutput)
}

// Map of tags.
func (o LookupVirtualNodeResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualNodeResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualNodeResultOutput{})
}
