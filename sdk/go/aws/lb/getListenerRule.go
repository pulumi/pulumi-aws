// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about an AWS Elastic Load Balancing Listener Rule.
//
// ## Example Usage
//
// ### Match by Rule ARN
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			lbRuleArn := cfg.Require("lbRuleArn")
//			_, err := lb.LookupListenerRule(ctx, &lb.LookupListenerRuleArgs{
//				Arn: pulumi.StringRef(lbRuleArn),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Match by Listener ARN and Priority
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			lbListenerArn := cfg.Require("lbListenerArn")
//			lbRulePriority := cfg.RequireFloat64("lbRulePriority")
//			_, err := lb.LookupListenerRule(ctx, &lb.LookupListenerRuleArgs{
//				ListenerArn: pulumi.StringRef(lbListenerArn),
//				Priority:    pulumi.Float64Ref(lbRulePriority),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupListenerRule(ctx *pulumi.Context, args *LookupListenerRuleArgs, opts ...pulumi.InvokeOption) (*LookupListenerRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupListenerRuleResult
	err := ctx.Invoke("aws:lb/getListenerRule:getListenerRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getListenerRule.
type LookupListenerRuleArgs struct {
	// List of actions associated with the rule, sorted by `order`.
	// Detailed below.
	Actions []GetListenerRuleAction `pulumi:"actions"`
	// ARN of the Listener Rule.
	// Either `arn` or `listenerArn` must be set.
	Arn *string `pulumi:"arn"`
	// Set of conditions associated with the rule.
	// Detailed below.
	Conditions []GetListenerRuleCondition `pulumi:"conditions"`
	// ARN of the associated Listener.
	// Either `arn` or `listenerArn` must be set.
	ListenerArn *string `pulumi:"listenerArn"`
	// Priority of the Listener Rule within the Listener.
	// Must be set if `listenerArn` is set, otherwise must not be set.
	Priority *float64 `pulumi:"priority"`
}

// A collection of values returned by getListenerRule.
type LookupListenerRuleResult struct {
	// List of actions associated with the rule, sorted by `order`.
	// Detailed below.
	Actions []GetListenerRuleAction `pulumi:"actions"`
	// ARN of the target group.
	Arn string `pulumi:"arn"`
	// Set of conditions associated with the rule.
	// Detailed below.
	Conditions []GetListenerRuleCondition `pulumi:"conditions"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	ListenerArn string  `pulumi:"listenerArn"`
	Priority    float64 `pulumi:"priority"`
	// Tags assigned to the Listener Rule.
	Tags map[string]string `pulumi:"tags"`
}

func LookupListenerRuleOutput(ctx *pulumi.Context, args LookupListenerRuleOutputArgs, opts ...pulumi.InvokeOption) LookupListenerRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupListenerRuleResultOutput, error) {
			args := v.(LookupListenerRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws:lb/getListenerRule:getListenerRule", args, LookupListenerRuleResultOutput{}, options).(LookupListenerRuleResultOutput), nil
		}).(LookupListenerRuleResultOutput)
}

// A collection of arguments for invoking getListenerRule.
type LookupListenerRuleOutputArgs struct {
	// List of actions associated with the rule, sorted by `order`.
	// Detailed below.
	Actions GetListenerRuleActionArrayInput `pulumi:"actions"`
	// ARN of the Listener Rule.
	// Either `arn` or `listenerArn` must be set.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Set of conditions associated with the rule.
	// Detailed below.
	Conditions GetListenerRuleConditionArrayInput `pulumi:"conditions"`
	// ARN of the associated Listener.
	// Either `arn` or `listenerArn` must be set.
	ListenerArn pulumi.StringPtrInput `pulumi:"listenerArn"`
	// Priority of the Listener Rule within the Listener.
	// Must be set if `listenerArn` is set, otherwise must not be set.
	Priority pulumi.Float64PtrInput `pulumi:"priority"`
}

func (LookupListenerRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListenerRuleArgs)(nil)).Elem()
}

// A collection of values returned by getListenerRule.
type LookupListenerRuleResultOutput struct{ *pulumi.OutputState }

func (LookupListenerRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListenerRuleResult)(nil)).Elem()
}

func (o LookupListenerRuleResultOutput) ToLookupListenerRuleResultOutput() LookupListenerRuleResultOutput {
	return o
}

func (o LookupListenerRuleResultOutput) ToLookupListenerRuleResultOutputWithContext(ctx context.Context) LookupListenerRuleResultOutput {
	return o
}

// List of actions associated with the rule, sorted by `order`.
// Detailed below.
func (o LookupListenerRuleResultOutput) Actions() GetListenerRuleActionArrayOutput {
	return o.ApplyT(func(v LookupListenerRuleResult) []GetListenerRuleAction { return v.Actions }).(GetListenerRuleActionArrayOutput)
}

// ARN of the target group.
func (o LookupListenerRuleResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerRuleResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Set of conditions associated with the rule.
// Detailed below.
func (o LookupListenerRuleResultOutput) Conditions() GetListenerRuleConditionArrayOutput {
	return o.ApplyT(func(v LookupListenerRuleResult) []GetListenerRuleCondition { return v.Conditions }).(GetListenerRuleConditionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupListenerRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupListenerRuleResultOutput) ListenerArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupListenerRuleResult) string { return v.ListenerArn }).(pulumi.StringOutput)
}

func (o LookupListenerRuleResultOutput) Priority() pulumi.Float64Output {
	return o.ApplyT(func(v LookupListenerRuleResult) float64 { return v.Priority }).(pulumi.Float64Output)
}

// Tags assigned to the Listener Rule.
func (o LookupListenerRuleResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupListenerRuleResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupListenerRuleResultOutput{})
}
