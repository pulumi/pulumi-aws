// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > **Note:** `awsAlbTrustStore` is known as `lb.TrustStore`. The functionality is identical.
//
// Provides information about a Load Balancer Trust Store.
//
// This data source can prove useful when a module accepts an LB Trust Store as an
// input variable and needs to know its attributes. It can also be used to get the ARN of
// an LB Trust Store for use in other resources, given LB Trust Store name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			lbTsArn := ""
//			if param := cfg.Get("lbTsArn"); param != "" {
//				lbTsArn = param
//			}
//			lbTsName := ""
//			if param := cfg.Get("lbTsName"); param != "" {
//				lbTsName = param
//			}
//			_, err := lb.LookupTrustStore(ctx, &lb.LookupTrustStoreArgs{
//				Arn:  pulumi.StringRef(lbTsArn),
//				Name: pulumi.StringRef(lbTsName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTrustStore(ctx *pulumi.Context, args *LookupTrustStoreArgs, opts ...pulumi.InvokeOption) (*LookupTrustStoreResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTrustStoreResult
	err := ctx.Invoke("aws:lb/getTrustStore:getTrustStore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTrustStore.
type LookupTrustStoreArgs struct {
	// Full ARN of the trust store.
	Arn *string `pulumi:"arn"`
	// Unique name of the trust store.
	//
	// > **NOTE:** When both `arn` and `name` are specified, `arn` takes precedence.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getTrustStore.
type LookupTrustStoreResult struct {
	Arn string `pulumi:"arn"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupTrustStoreOutput(ctx *pulumi.Context, args LookupTrustStoreOutputArgs, opts ...pulumi.InvokeOption) LookupTrustStoreResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTrustStoreResult, error) {
			args := v.(LookupTrustStoreArgs)
			r, err := LookupTrustStore(ctx, &args, opts...)
			var s LookupTrustStoreResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTrustStoreResultOutput)
}

// A collection of arguments for invoking getTrustStore.
type LookupTrustStoreOutputArgs struct {
	// Full ARN of the trust store.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Unique name of the trust store.
	//
	// > **NOTE:** When both `arn` and `name` are specified, `arn` takes precedence.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupTrustStoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTrustStoreArgs)(nil)).Elem()
}

// A collection of values returned by getTrustStore.
type LookupTrustStoreResultOutput struct{ *pulumi.OutputState }

func (LookupTrustStoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTrustStoreResult)(nil)).Elem()
}

func (o LookupTrustStoreResultOutput) ToLookupTrustStoreResultOutput() LookupTrustStoreResultOutput {
	return o
}

func (o LookupTrustStoreResultOutput) ToLookupTrustStoreResultOutputWithContext(ctx context.Context) LookupTrustStoreResultOutput {
	return o
}

func (o LookupTrustStoreResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTrustStoreResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTrustStoreResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTrustStoreResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTrustStoreResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTrustStoreResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTrustStoreResultOutput{})
}
