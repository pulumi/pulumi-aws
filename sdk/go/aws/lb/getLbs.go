// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get a list of Load Balancer ARNs matching the specified criteria. Useful for passing to other
// resources.
//
// ## Example Usage
//
// ### Basic Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := lb.GetLbs(ctx, &lb.GetLbsArgs{
//				Tags: map[string]interface{}{
//					"elbv2.k8s.aws/cluster": "my-cluster",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetLbs(ctx *pulumi.Context, args *GetLbsArgs, opts ...pulumi.InvokeOption) (*GetLbsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLbsResult
	err := ctx.Invoke("aws:lb/getLbs:getLbs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLbs.
type GetLbsArgs struct {
	// Map of tags, each pair of which must exactly match
	// a pair on the desired Load Balancers.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getLbs.
type GetLbsResult struct {
	// Set of Load Balancer ARNs.
	Arns []string `pulumi:"arns"`
	// The provider-assigned unique ID for this managed resource.
	Id   string            `pulumi:"id"`
	Tags map[string]string `pulumi:"tags"`
}

func GetLbsOutput(ctx *pulumi.Context, args GetLbsOutputArgs, opts ...pulumi.InvokeOption) GetLbsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLbsResult, error) {
			args := v.(GetLbsArgs)
			r, err := GetLbs(ctx, &args, opts...)
			var s GetLbsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLbsResultOutput)
}

// A collection of arguments for invoking getLbs.
type GetLbsOutputArgs struct {
	// Map of tags, each pair of which must exactly match
	// a pair on the desired Load Balancers.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetLbsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbsArgs)(nil)).Elem()
}

// A collection of values returned by getLbs.
type GetLbsResultOutput struct{ *pulumi.OutputState }

func (GetLbsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbsResult)(nil)).Elem()
}

func (o GetLbsResultOutput) ToGetLbsResultOutput() GetLbsResultOutput {
	return o
}

func (o GetLbsResultOutput) ToGetLbsResultOutputWithContext(ctx context.Context) GetLbsResultOutput {
	return o
}

// Set of Load Balancer ARNs.
func (o GetLbsResultOutput) Arns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLbsResult) []string { return v.Arns }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLbsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLbsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLbsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLbsResultOutput{})
}
