// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ListenerDefaultAction struct {
	// Configuration block for using Amazon Cognito to authenticate users. Specify only when `type` is `authenticate-cognito`. Detailed below.
	AuthenticateCognito *ListenerDefaultActionAuthenticateCognito `pulumi:"authenticateCognito"`
	// Configuration block for an identity provider that is compliant with OpenID Connect (OIDC). Specify only when `type` is `authenticate-oidc`. Detailed below.
	AuthenticateOidc *ListenerDefaultActionAuthenticateOidc `pulumi:"authenticateOidc"`
	// Information for creating an action that returns a custom HTTP response. Required if `type` is `fixed-response`.
	FixedResponse *ListenerDefaultActionFixedResponse `pulumi:"fixedResponse"`
	// Configuration block for creating an action that distributes requests among one or more target groups. Specify only if `type` is `forward`. If you specify both `forward` block and `targetGroupArn` attribute, you can specify only one target group using `forward` and it must be the same target group specified in `targetGroupArn`. Detailed below.
	Forward *ListenerDefaultActionForward `pulumi:"forward"`
	// Order for the action. This value is required for rules with multiple actions. The action with the lowest value for order is performed first. Valid values are between `1` and `50000`.
	Order *int `pulumi:"order"`
	// Configuration block for creating a redirect action. Required if `type` is `redirect`. Detailed below.
	Redirect *ListenerDefaultActionRedirect `pulumi:"redirect"`
	// ARN of the Target Group to which to route traffic. Specify only if `type` is `forward` and you want to route to a single target group. To route to one or more target groups, use a `forward` block instead.
	TargetGroupArn *string `pulumi:"targetGroupArn"`
	// Type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.
	//
	// The following arguments are optional:
	Type string `pulumi:"type"`
}

// ListenerDefaultActionInput is an input type that accepts ListenerDefaultActionArgs and ListenerDefaultActionOutput values.
// You can construct a concrete instance of `ListenerDefaultActionInput` via:
//
//	ListenerDefaultActionArgs{...}
type ListenerDefaultActionInput interface {
	pulumi.Input

	ToListenerDefaultActionOutput() ListenerDefaultActionOutput
	ToListenerDefaultActionOutputWithContext(context.Context) ListenerDefaultActionOutput
}

type ListenerDefaultActionArgs struct {
	// Configuration block for using Amazon Cognito to authenticate users. Specify only when `type` is `authenticate-cognito`. Detailed below.
	AuthenticateCognito ListenerDefaultActionAuthenticateCognitoPtrInput `pulumi:"authenticateCognito"`
	// Configuration block for an identity provider that is compliant with OpenID Connect (OIDC). Specify only when `type` is `authenticate-oidc`. Detailed below.
	AuthenticateOidc ListenerDefaultActionAuthenticateOidcPtrInput `pulumi:"authenticateOidc"`
	// Information for creating an action that returns a custom HTTP response. Required if `type` is `fixed-response`.
	FixedResponse ListenerDefaultActionFixedResponsePtrInput `pulumi:"fixedResponse"`
	// Configuration block for creating an action that distributes requests among one or more target groups. Specify only if `type` is `forward`. If you specify both `forward` block and `targetGroupArn` attribute, you can specify only one target group using `forward` and it must be the same target group specified in `targetGroupArn`. Detailed below.
	Forward ListenerDefaultActionForwardPtrInput `pulumi:"forward"`
	// Order for the action. This value is required for rules with multiple actions. The action with the lowest value for order is performed first. Valid values are between `1` and `50000`.
	Order pulumi.IntPtrInput `pulumi:"order"`
	// Configuration block for creating a redirect action. Required if `type` is `redirect`. Detailed below.
	Redirect ListenerDefaultActionRedirectPtrInput `pulumi:"redirect"`
	// ARN of the Target Group to which to route traffic. Specify only if `type` is `forward` and you want to route to a single target group. To route to one or more target groups, use a `forward` block instead.
	TargetGroupArn pulumi.StringPtrInput `pulumi:"targetGroupArn"`
	// Type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.
	//
	// The following arguments are optional:
	Type pulumi.StringInput `pulumi:"type"`
}

func (ListenerDefaultActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultAction)(nil)).Elem()
}

func (i ListenerDefaultActionArgs) ToListenerDefaultActionOutput() ListenerDefaultActionOutput {
	return i.ToListenerDefaultActionOutputWithContext(context.Background())
}

func (i ListenerDefaultActionArgs) ToListenerDefaultActionOutputWithContext(ctx context.Context) ListenerDefaultActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionOutput)
}

// ListenerDefaultActionArrayInput is an input type that accepts ListenerDefaultActionArray and ListenerDefaultActionArrayOutput values.
// You can construct a concrete instance of `ListenerDefaultActionArrayInput` via:
//
//	ListenerDefaultActionArray{ ListenerDefaultActionArgs{...} }
type ListenerDefaultActionArrayInput interface {
	pulumi.Input

	ToListenerDefaultActionArrayOutput() ListenerDefaultActionArrayOutput
	ToListenerDefaultActionArrayOutputWithContext(context.Context) ListenerDefaultActionArrayOutput
}

type ListenerDefaultActionArray []ListenerDefaultActionInput

func (ListenerDefaultActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerDefaultAction)(nil)).Elem()
}

func (i ListenerDefaultActionArray) ToListenerDefaultActionArrayOutput() ListenerDefaultActionArrayOutput {
	return i.ToListenerDefaultActionArrayOutputWithContext(context.Background())
}

func (i ListenerDefaultActionArray) ToListenerDefaultActionArrayOutputWithContext(ctx context.Context) ListenerDefaultActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionArrayOutput)
}

type ListenerDefaultActionOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultAction)(nil)).Elem()
}

func (o ListenerDefaultActionOutput) ToListenerDefaultActionOutput() ListenerDefaultActionOutput {
	return o
}

func (o ListenerDefaultActionOutput) ToListenerDefaultActionOutputWithContext(ctx context.Context) ListenerDefaultActionOutput {
	return o
}

// Configuration block for using Amazon Cognito to authenticate users. Specify only when `type` is `authenticate-cognito`. Detailed below.
func (o ListenerDefaultActionOutput) AuthenticateCognito() ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return o.ApplyT(func(v ListenerDefaultAction) *ListenerDefaultActionAuthenticateCognito { return v.AuthenticateCognito }).(ListenerDefaultActionAuthenticateCognitoPtrOutput)
}

// Configuration block for an identity provider that is compliant with OpenID Connect (OIDC). Specify only when `type` is `authenticate-oidc`. Detailed below.
func (o ListenerDefaultActionOutput) AuthenticateOidc() ListenerDefaultActionAuthenticateOidcPtrOutput {
	return o.ApplyT(func(v ListenerDefaultAction) *ListenerDefaultActionAuthenticateOidc { return v.AuthenticateOidc }).(ListenerDefaultActionAuthenticateOidcPtrOutput)
}

// Information for creating an action that returns a custom HTTP response. Required if `type` is `fixed-response`.
func (o ListenerDefaultActionOutput) FixedResponse() ListenerDefaultActionFixedResponsePtrOutput {
	return o.ApplyT(func(v ListenerDefaultAction) *ListenerDefaultActionFixedResponse { return v.FixedResponse }).(ListenerDefaultActionFixedResponsePtrOutput)
}

// Configuration block for creating an action that distributes requests among one or more target groups. Specify only if `type` is `forward`. If you specify both `forward` block and `targetGroupArn` attribute, you can specify only one target group using `forward` and it must be the same target group specified in `targetGroupArn`. Detailed below.
func (o ListenerDefaultActionOutput) Forward() ListenerDefaultActionForwardPtrOutput {
	return o.ApplyT(func(v ListenerDefaultAction) *ListenerDefaultActionForward { return v.Forward }).(ListenerDefaultActionForwardPtrOutput)
}

// Order for the action. This value is required for rules with multiple actions. The action with the lowest value for order is performed first. Valid values are between `1` and `50000`.
func (o ListenerDefaultActionOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerDefaultAction) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Configuration block for creating a redirect action. Required if `type` is `redirect`. Detailed below.
func (o ListenerDefaultActionOutput) Redirect() ListenerDefaultActionRedirectPtrOutput {
	return o.ApplyT(func(v ListenerDefaultAction) *ListenerDefaultActionRedirect { return v.Redirect }).(ListenerDefaultActionRedirectPtrOutput)
}

// ARN of the Target Group to which to route traffic. Specify only if `type` is `forward` and you want to route to a single target group. To route to one or more target groups, use a `forward` block instead.
func (o ListenerDefaultActionOutput) TargetGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultAction) *string { return v.TargetGroupArn }).(pulumi.StringPtrOutput)
}

// Type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.
//
// The following arguments are optional:
func (o ListenerDefaultActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultAction) string { return v.Type }).(pulumi.StringOutput)
}

type ListenerDefaultActionArrayOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerDefaultAction)(nil)).Elem()
}

func (o ListenerDefaultActionArrayOutput) ToListenerDefaultActionArrayOutput() ListenerDefaultActionArrayOutput {
	return o
}

func (o ListenerDefaultActionArrayOutput) ToListenerDefaultActionArrayOutputWithContext(ctx context.Context) ListenerDefaultActionArrayOutput {
	return o
}

func (o ListenerDefaultActionArrayOutput) Index(i pulumi.IntInput) ListenerDefaultActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerDefaultAction {
		return vs[0].([]ListenerDefaultAction)[vs[1].(int)]
	}).(ListenerDefaultActionOutput)
}

type ListenerDefaultActionAuthenticateCognito struct {
	// Query parameters to include in the redirect request to the authorization endpoint. Max: 10. Detailed below.
	AuthenticationRequestExtraParams map[string]string `pulumi:"authenticationRequestExtraParams"`
	// Behavior if the user is not authenticated. Valid values are `deny`, `allow` and `authenticate`.
	OnUnauthenticatedRequest *string `pulumi:"onUnauthenticatedRequest"`
	// Set of user claims to be requested from the IdP.
	Scope *string `pulumi:"scope"`
	// Name of the cookie used to maintain session information.
	SessionCookieName *string `pulumi:"sessionCookieName"`
	// Maximum duration of the authentication session, in seconds.
	SessionTimeout *int `pulumi:"sessionTimeout"`
	// ARN of the Cognito user pool.
	UserPoolArn string `pulumi:"userPoolArn"`
	// ID of the Cognito user pool client.
	UserPoolClientId string `pulumi:"userPoolClientId"`
	// Domain prefix or fully-qualified domain name of the Cognito user pool.
	//
	// The following arguments are optional:
	UserPoolDomain string `pulumi:"userPoolDomain"`
}

// ListenerDefaultActionAuthenticateCognitoInput is an input type that accepts ListenerDefaultActionAuthenticateCognitoArgs and ListenerDefaultActionAuthenticateCognitoOutput values.
// You can construct a concrete instance of `ListenerDefaultActionAuthenticateCognitoInput` via:
//
//	ListenerDefaultActionAuthenticateCognitoArgs{...}
type ListenerDefaultActionAuthenticateCognitoInput interface {
	pulumi.Input

	ToListenerDefaultActionAuthenticateCognitoOutput() ListenerDefaultActionAuthenticateCognitoOutput
	ToListenerDefaultActionAuthenticateCognitoOutputWithContext(context.Context) ListenerDefaultActionAuthenticateCognitoOutput
}

type ListenerDefaultActionAuthenticateCognitoArgs struct {
	// Query parameters to include in the redirect request to the authorization endpoint. Max: 10. Detailed below.
	AuthenticationRequestExtraParams pulumi.StringMapInput `pulumi:"authenticationRequestExtraParams"`
	// Behavior if the user is not authenticated. Valid values are `deny`, `allow` and `authenticate`.
	OnUnauthenticatedRequest pulumi.StringPtrInput `pulumi:"onUnauthenticatedRequest"`
	// Set of user claims to be requested from the IdP.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// Name of the cookie used to maintain session information.
	SessionCookieName pulumi.StringPtrInput `pulumi:"sessionCookieName"`
	// Maximum duration of the authentication session, in seconds.
	SessionTimeout pulumi.IntPtrInput `pulumi:"sessionTimeout"`
	// ARN of the Cognito user pool.
	UserPoolArn pulumi.StringInput `pulumi:"userPoolArn"`
	// ID of the Cognito user pool client.
	UserPoolClientId pulumi.StringInput `pulumi:"userPoolClientId"`
	// Domain prefix or fully-qualified domain name of the Cognito user pool.
	//
	// The following arguments are optional:
	UserPoolDomain pulumi.StringInput `pulumi:"userPoolDomain"`
}

func (ListenerDefaultActionAuthenticateCognitoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (i ListenerDefaultActionAuthenticateCognitoArgs) ToListenerDefaultActionAuthenticateCognitoOutput() ListenerDefaultActionAuthenticateCognitoOutput {
	return i.ToListenerDefaultActionAuthenticateCognitoOutputWithContext(context.Background())
}

func (i ListenerDefaultActionAuthenticateCognitoArgs) ToListenerDefaultActionAuthenticateCognitoOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateCognitoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionAuthenticateCognitoOutput)
}

func (i ListenerDefaultActionAuthenticateCognitoArgs) ToListenerDefaultActionAuthenticateCognitoPtrOutput() ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return i.ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(context.Background())
}

func (i ListenerDefaultActionAuthenticateCognitoArgs) ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionAuthenticateCognitoOutput).ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(ctx)
}

// ListenerDefaultActionAuthenticateCognitoPtrInput is an input type that accepts ListenerDefaultActionAuthenticateCognitoArgs, ListenerDefaultActionAuthenticateCognitoPtr and ListenerDefaultActionAuthenticateCognitoPtrOutput values.
// You can construct a concrete instance of `ListenerDefaultActionAuthenticateCognitoPtrInput` via:
//
//	        ListenerDefaultActionAuthenticateCognitoArgs{...}
//
//	or:
//
//	        nil
type ListenerDefaultActionAuthenticateCognitoPtrInput interface {
	pulumi.Input

	ToListenerDefaultActionAuthenticateCognitoPtrOutput() ListenerDefaultActionAuthenticateCognitoPtrOutput
	ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(context.Context) ListenerDefaultActionAuthenticateCognitoPtrOutput
}

type listenerDefaultActionAuthenticateCognitoPtrType ListenerDefaultActionAuthenticateCognitoArgs

func ListenerDefaultActionAuthenticateCognitoPtr(v *ListenerDefaultActionAuthenticateCognitoArgs) ListenerDefaultActionAuthenticateCognitoPtrInput {
	return (*listenerDefaultActionAuthenticateCognitoPtrType)(v)
}

func (*listenerDefaultActionAuthenticateCognitoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (i *listenerDefaultActionAuthenticateCognitoPtrType) ToListenerDefaultActionAuthenticateCognitoPtrOutput() ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return i.ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(context.Background())
}

func (i *listenerDefaultActionAuthenticateCognitoPtrType) ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionAuthenticateCognitoPtrOutput)
}

type ListenerDefaultActionAuthenticateCognitoOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionAuthenticateCognitoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (o ListenerDefaultActionAuthenticateCognitoOutput) ToListenerDefaultActionAuthenticateCognitoOutput() ListenerDefaultActionAuthenticateCognitoOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateCognitoOutput) ToListenerDefaultActionAuthenticateCognitoOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateCognitoOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateCognitoOutput) ToListenerDefaultActionAuthenticateCognitoPtrOutput() ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return o.ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(context.Background())
}

func (o ListenerDefaultActionAuthenticateCognitoOutput) ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerDefaultActionAuthenticateCognito) *ListenerDefaultActionAuthenticateCognito {
		return &v
	}).(ListenerDefaultActionAuthenticateCognitoPtrOutput)
}

// Query parameters to include in the redirect request to the authorization endpoint. Max: 10. Detailed below.
func (o ListenerDefaultActionAuthenticateCognitoOutput) AuthenticationRequestExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) map[string]string {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.StringMapOutput)
}

// Behavior if the user is not authenticated. Valid values are `deny`, `allow` and `authenticate`.
func (o ListenerDefaultActionAuthenticateCognitoOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

// Set of user claims to be requested from the IdP.
func (o ListenerDefaultActionAuthenticateCognitoOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Name of the cookie used to maintain session information.
func (o ListenerDefaultActionAuthenticateCognitoOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

// Maximum duration of the authentication session, in seconds.
func (o ListenerDefaultActionAuthenticateCognitoOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

// ARN of the Cognito user pool.
func (o ListenerDefaultActionAuthenticateCognitoOutput) UserPoolArn() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) string { return v.UserPoolArn }).(pulumi.StringOutput)
}

// ID of the Cognito user pool client.
func (o ListenerDefaultActionAuthenticateCognitoOutput) UserPoolClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) string { return v.UserPoolClientId }).(pulumi.StringOutput)
}

// Domain prefix or fully-qualified domain name of the Cognito user pool.
//
// The following arguments are optional:
func (o ListenerDefaultActionAuthenticateCognitoOutput) UserPoolDomain() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) string { return v.UserPoolDomain }).(pulumi.StringOutput)
}

type ListenerDefaultActionAuthenticateCognitoPtrOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionAuthenticateCognitoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) ToListenerDefaultActionAuthenticateCognitoPtrOutput() ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) Elem() ListenerDefaultActionAuthenticateCognitoOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateCognito) ListenerDefaultActionAuthenticateCognito {
		if v != nil {
			return *v
		}
		var ret ListenerDefaultActionAuthenticateCognito
		return ret
	}).(ListenerDefaultActionAuthenticateCognitoOutput)
}

// Query parameters to include in the redirect request to the authorization endpoint. Max: 10. Detailed below.
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) AuthenticationRequestExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateCognito) map[string]string {
		if v == nil {
			return nil
		}
		return v.AuthenticationRequestExtraParams
	}).(pulumi.StringMapOutput)
}

// Behavior if the user is not authenticated. Valid values are `deny`, `allow` and `authenticate`.
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateCognito) *string {
		if v == nil {
			return nil
		}
		return v.OnUnauthenticatedRequest
	}).(pulumi.StringPtrOutput)
}

// Set of user claims to be requested from the IdP.
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateCognito) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// Name of the cookie used to maintain session information.
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateCognito) *string {
		if v == nil {
			return nil
		}
		return v.SessionCookieName
	}).(pulumi.StringPtrOutput)
}

// Maximum duration of the authentication session, in seconds.
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateCognito) *int {
		if v == nil {
			return nil
		}
		return v.SessionTimeout
	}).(pulumi.IntPtrOutput)
}

// ARN of the Cognito user pool.
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) UserPoolArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateCognito) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolArn
	}).(pulumi.StringPtrOutput)
}

// ID of the Cognito user pool client.
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) UserPoolClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateCognito) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolClientId
	}).(pulumi.StringPtrOutput)
}

// Domain prefix or fully-qualified domain name of the Cognito user pool.
//
// The following arguments are optional:
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) UserPoolDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateCognito) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolDomain
	}).(pulumi.StringPtrOutput)
}

type ListenerDefaultActionAuthenticateOidc struct {
	// Query parameters to include in the redirect request to the authorization endpoint. Max: 10.
	AuthenticationRequestExtraParams map[string]string `pulumi:"authenticationRequestExtraParams"`
	// Authorization endpoint of the IdP.
	AuthorizationEndpoint string `pulumi:"authorizationEndpoint"`
	// OAuth 2.0 client identifier.
	ClientId string `pulumi:"clientId"`
	// OAuth 2.0 client secret.
	ClientSecret string `pulumi:"clientSecret"`
	// OIDC issuer identifier of the IdP.
	Issuer string `pulumi:"issuer"`
	// Behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
	OnUnauthenticatedRequest *string `pulumi:"onUnauthenticatedRequest"`
	// Set of user claims to be requested from the IdP.
	Scope *string `pulumi:"scope"`
	// Name of the cookie used to maintain session information.
	SessionCookieName *string `pulumi:"sessionCookieName"`
	// Maximum duration of the authentication session, in seconds.
	SessionTimeout *int `pulumi:"sessionTimeout"`
	// Token endpoint of the IdP.
	TokenEndpoint string `pulumi:"tokenEndpoint"`
	// User info endpoint of the IdP.
	//
	// The following arguments are optional:
	UserInfoEndpoint string `pulumi:"userInfoEndpoint"`
}

// ListenerDefaultActionAuthenticateOidcInput is an input type that accepts ListenerDefaultActionAuthenticateOidcArgs and ListenerDefaultActionAuthenticateOidcOutput values.
// You can construct a concrete instance of `ListenerDefaultActionAuthenticateOidcInput` via:
//
//	ListenerDefaultActionAuthenticateOidcArgs{...}
type ListenerDefaultActionAuthenticateOidcInput interface {
	pulumi.Input

	ToListenerDefaultActionAuthenticateOidcOutput() ListenerDefaultActionAuthenticateOidcOutput
	ToListenerDefaultActionAuthenticateOidcOutputWithContext(context.Context) ListenerDefaultActionAuthenticateOidcOutput
}

type ListenerDefaultActionAuthenticateOidcArgs struct {
	// Query parameters to include in the redirect request to the authorization endpoint. Max: 10.
	AuthenticationRequestExtraParams pulumi.StringMapInput `pulumi:"authenticationRequestExtraParams"`
	// Authorization endpoint of the IdP.
	AuthorizationEndpoint pulumi.StringInput `pulumi:"authorizationEndpoint"`
	// OAuth 2.0 client identifier.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// OAuth 2.0 client secret.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// OIDC issuer identifier of the IdP.
	Issuer pulumi.StringInput `pulumi:"issuer"`
	// Behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
	OnUnauthenticatedRequest pulumi.StringPtrInput `pulumi:"onUnauthenticatedRequest"`
	// Set of user claims to be requested from the IdP.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// Name of the cookie used to maintain session information.
	SessionCookieName pulumi.StringPtrInput `pulumi:"sessionCookieName"`
	// Maximum duration of the authentication session, in seconds.
	SessionTimeout pulumi.IntPtrInput `pulumi:"sessionTimeout"`
	// Token endpoint of the IdP.
	TokenEndpoint pulumi.StringInput `pulumi:"tokenEndpoint"`
	// User info endpoint of the IdP.
	//
	// The following arguments are optional:
	UserInfoEndpoint pulumi.StringInput `pulumi:"userInfoEndpoint"`
}

func (ListenerDefaultActionAuthenticateOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (i ListenerDefaultActionAuthenticateOidcArgs) ToListenerDefaultActionAuthenticateOidcOutput() ListenerDefaultActionAuthenticateOidcOutput {
	return i.ToListenerDefaultActionAuthenticateOidcOutputWithContext(context.Background())
}

func (i ListenerDefaultActionAuthenticateOidcArgs) ToListenerDefaultActionAuthenticateOidcOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionAuthenticateOidcOutput)
}

func (i ListenerDefaultActionAuthenticateOidcArgs) ToListenerDefaultActionAuthenticateOidcPtrOutput() ListenerDefaultActionAuthenticateOidcPtrOutput {
	return i.ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(context.Background())
}

func (i ListenerDefaultActionAuthenticateOidcArgs) ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionAuthenticateOidcOutput).ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(ctx)
}

// ListenerDefaultActionAuthenticateOidcPtrInput is an input type that accepts ListenerDefaultActionAuthenticateOidcArgs, ListenerDefaultActionAuthenticateOidcPtr and ListenerDefaultActionAuthenticateOidcPtrOutput values.
// You can construct a concrete instance of `ListenerDefaultActionAuthenticateOidcPtrInput` via:
//
//	        ListenerDefaultActionAuthenticateOidcArgs{...}
//
//	or:
//
//	        nil
type ListenerDefaultActionAuthenticateOidcPtrInput interface {
	pulumi.Input

	ToListenerDefaultActionAuthenticateOidcPtrOutput() ListenerDefaultActionAuthenticateOidcPtrOutput
	ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(context.Context) ListenerDefaultActionAuthenticateOidcPtrOutput
}

type listenerDefaultActionAuthenticateOidcPtrType ListenerDefaultActionAuthenticateOidcArgs

func ListenerDefaultActionAuthenticateOidcPtr(v *ListenerDefaultActionAuthenticateOidcArgs) ListenerDefaultActionAuthenticateOidcPtrInput {
	return (*listenerDefaultActionAuthenticateOidcPtrType)(v)
}

func (*listenerDefaultActionAuthenticateOidcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (i *listenerDefaultActionAuthenticateOidcPtrType) ToListenerDefaultActionAuthenticateOidcPtrOutput() ListenerDefaultActionAuthenticateOidcPtrOutput {
	return i.ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(context.Background())
}

func (i *listenerDefaultActionAuthenticateOidcPtrType) ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionAuthenticateOidcPtrOutput)
}

type ListenerDefaultActionAuthenticateOidcOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionAuthenticateOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (o ListenerDefaultActionAuthenticateOidcOutput) ToListenerDefaultActionAuthenticateOidcOutput() ListenerDefaultActionAuthenticateOidcOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateOidcOutput) ToListenerDefaultActionAuthenticateOidcOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateOidcOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateOidcOutput) ToListenerDefaultActionAuthenticateOidcPtrOutput() ListenerDefaultActionAuthenticateOidcPtrOutput {
	return o.ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(context.Background())
}

func (o ListenerDefaultActionAuthenticateOidcOutput) ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateOidcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerDefaultActionAuthenticateOidc) *ListenerDefaultActionAuthenticateOidc {
		return &v
	}).(ListenerDefaultActionAuthenticateOidcPtrOutput)
}

// Query parameters to include in the redirect request to the authorization endpoint. Max: 10.
func (o ListenerDefaultActionAuthenticateOidcOutput) AuthenticationRequestExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) map[string]string {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.StringMapOutput)
}

// Authorization endpoint of the IdP.
func (o ListenerDefaultActionAuthenticateOidcOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

// OAuth 2.0 client identifier.
func (o ListenerDefaultActionAuthenticateOidcOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.ClientId }).(pulumi.StringOutput)
}

// OAuth 2.0 client secret.
func (o ListenerDefaultActionAuthenticateOidcOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// OIDC issuer identifier of the IdP.
func (o ListenerDefaultActionAuthenticateOidcOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.Issuer }).(pulumi.StringOutput)
}

// Behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
func (o ListenerDefaultActionAuthenticateOidcOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

// Set of user claims to be requested from the IdP.
func (o ListenerDefaultActionAuthenticateOidcOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Name of the cookie used to maintain session information.
func (o ListenerDefaultActionAuthenticateOidcOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

// Maximum duration of the authentication session, in seconds.
func (o ListenerDefaultActionAuthenticateOidcOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

// Token endpoint of the IdP.
func (o ListenerDefaultActionAuthenticateOidcOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

// User info endpoint of the IdP.
//
// The following arguments are optional:
func (o ListenerDefaultActionAuthenticateOidcOutput) UserInfoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.UserInfoEndpoint }).(pulumi.StringOutput)
}

type ListenerDefaultActionAuthenticateOidcPtrOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionAuthenticateOidcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (o ListenerDefaultActionAuthenticateOidcPtrOutput) ToListenerDefaultActionAuthenticateOidcPtrOutput() ListenerDefaultActionAuthenticateOidcPtrOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateOidcPtrOutput) ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateOidcPtrOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateOidcPtrOutput) Elem() ListenerDefaultActionAuthenticateOidcOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateOidc) ListenerDefaultActionAuthenticateOidc {
		if v != nil {
			return *v
		}
		var ret ListenerDefaultActionAuthenticateOidc
		return ret
	}).(ListenerDefaultActionAuthenticateOidcOutput)
}

// Query parameters to include in the redirect request to the authorization endpoint. Max: 10.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) AuthenticationRequestExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateOidc) map[string]string {
		if v == nil {
			return nil
		}
		return v.AuthenticationRequestExtraParams
	}).(pulumi.StringMapOutput)
}

// Authorization endpoint of the IdP.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

// OAuth 2.0 client identifier.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// OAuth 2.0 client secret.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// OIDC issuer identifier of the IdP.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return v.OnUnauthenticatedRequest
	}).(pulumi.StringPtrOutput)
}

// Set of user claims to be requested from the IdP.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// Name of the cookie used to maintain session information.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return v.SessionCookieName
	}).(pulumi.StringPtrOutput)
}

// Maximum duration of the authentication session, in seconds.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateOidc) *int {
		if v == nil {
			return nil
		}
		return v.SessionTimeout
	}).(pulumi.IntPtrOutput)
}

// Token endpoint of the IdP.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return &v.TokenEndpoint
	}).(pulumi.StringPtrOutput)
}

// User info endpoint of the IdP.
//
// The following arguments are optional:
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) UserInfoEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return &v.UserInfoEndpoint
	}).(pulumi.StringPtrOutput)
}

type ListenerDefaultActionFixedResponse struct {
	// Content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
	//
	// The following arguments are optional:
	ContentType string `pulumi:"contentType"`
	// Message body.
	MessageBody *string `pulumi:"messageBody"`
	// HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
	StatusCode *string `pulumi:"statusCode"`
}

// ListenerDefaultActionFixedResponseInput is an input type that accepts ListenerDefaultActionFixedResponseArgs and ListenerDefaultActionFixedResponseOutput values.
// You can construct a concrete instance of `ListenerDefaultActionFixedResponseInput` via:
//
//	ListenerDefaultActionFixedResponseArgs{...}
type ListenerDefaultActionFixedResponseInput interface {
	pulumi.Input

	ToListenerDefaultActionFixedResponseOutput() ListenerDefaultActionFixedResponseOutput
	ToListenerDefaultActionFixedResponseOutputWithContext(context.Context) ListenerDefaultActionFixedResponseOutput
}

type ListenerDefaultActionFixedResponseArgs struct {
	// Content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
	//
	// The following arguments are optional:
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// Message body.
	MessageBody pulumi.StringPtrInput `pulumi:"messageBody"`
	// HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
}

func (ListenerDefaultActionFixedResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (i ListenerDefaultActionFixedResponseArgs) ToListenerDefaultActionFixedResponseOutput() ListenerDefaultActionFixedResponseOutput {
	return i.ToListenerDefaultActionFixedResponseOutputWithContext(context.Background())
}

func (i ListenerDefaultActionFixedResponseArgs) ToListenerDefaultActionFixedResponseOutputWithContext(ctx context.Context) ListenerDefaultActionFixedResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionFixedResponseOutput)
}

func (i ListenerDefaultActionFixedResponseArgs) ToListenerDefaultActionFixedResponsePtrOutput() ListenerDefaultActionFixedResponsePtrOutput {
	return i.ToListenerDefaultActionFixedResponsePtrOutputWithContext(context.Background())
}

func (i ListenerDefaultActionFixedResponseArgs) ToListenerDefaultActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerDefaultActionFixedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionFixedResponseOutput).ToListenerDefaultActionFixedResponsePtrOutputWithContext(ctx)
}

// ListenerDefaultActionFixedResponsePtrInput is an input type that accepts ListenerDefaultActionFixedResponseArgs, ListenerDefaultActionFixedResponsePtr and ListenerDefaultActionFixedResponsePtrOutput values.
// You can construct a concrete instance of `ListenerDefaultActionFixedResponsePtrInput` via:
//
//	        ListenerDefaultActionFixedResponseArgs{...}
//
//	or:
//
//	        nil
type ListenerDefaultActionFixedResponsePtrInput interface {
	pulumi.Input

	ToListenerDefaultActionFixedResponsePtrOutput() ListenerDefaultActionFixedResponsePtrOutput
	ToListenerDefaultActionFixedResponsePtrOutputWithContext(context.Context) ListenerDefaultActionFixedResponsePtrOutput
}

type listenerDefaultActionFixedResponsePtrType ListenerDefaultActionFixedResponseArgs

func ListenerDefaultActionFixedResponsePtr(v *ListenerDefaultActionFixedResponseArgs) ListenerDefaultActionFixedResponsePtrInput {
	return (*listenerDefaultActionFixedResponsePtrType)(v)
}

func (*listenerDefaultActionFixedResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (i *listenerDefaultActionFixedResponsePtrType) ToListenerDefaultActionFixedResponsePtrOutput() ListenerDefaultActionFixedResponsePtrOutput {
	return i.ToListenerDefaultActionFixedResponsePtrOutputWithContext(context.Background())
}

func (i *listenerDefaultActionFixedResponsePtrType) ToListenerDefaultActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerDefaultActionFixedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionFixedResponsePtrOutput)
}

type ListenerDefaultActionFixedResponseOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionFixedResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (o ListenerDefaultActionFixedResponseOutput) ToListenerDefaultActionFixedResponseOutput() ListenerDefaultActionFixedResponseOutput {
	return o
}

func (o ListenerDefaultActionFixedResponseOutput) ToListenerDefaultActionFixedResponseOutputWithContext(ctx context.Context) ListenerDefaultActionFixedResponseOutput {
	return o
}

func (o ListenerDefaultActionFixedResponseOutput) ToListenerDefaultActionFixedResponsePtrOutput() ListenerDefaultActionFixedResponsePtrOutput {
	return o.ToListenerDefaultActionFixedResponsePtrOutputWithContext(context.Background())
}

func (o ListenerDefaultActionFixedResponseOutput) ToListenerDefaultActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerDefaultActionFixedResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerDefaultActionFixedResponse) *ListenerDefaultActionFixedResponse {
		return &v
	}).(ListenerDefaultActionFixedResponsePtrOutput)
}

// Content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
//
// The following arguments are optional:
func (o ListenerDefaultActionFixedResponseOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionFixedResponse) string { return v.ContentType }).(pulumi.StringOutput)
}

// Message body.
func (o ListenerDefaultActionFixedResponseOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionFixedResponse) *string { return v.MessageBody }).(pulumi.StringPtrOutput)
}

// HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
func (o ListenerDefaultActionFixedResponseOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionFixedResponse) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

type ListenerDefaultActionFixedResponsePtrOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionFixedResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (o ListenerDefaultActionFixedResponsePtrOutput) ToListenerDefaultActionFixedResponsePtrOutput() ListenerDefaultActionFixedResponsePtrOutput {
	return o
}

func (o ListenerDefaultActionFixedResponsePtrOutput) ToListenerDefaultActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerDefaultActionFixedResponsePtrOutput {
	return o
}

func (o ListenerDefaultActionFixedResponsePtrOutput) Elem() ListenerDefaultActionFixedResponseOutput {
	return o.ApplyT(func(v *ListenerDefaultActionFixedResponse) ListenerDefaultActionFixedResponse {
		if v != nil {
			return *v
		}
		var ret ListenerDefaultActionFixedResponse
		return ret
	}).(ListenerDefaultActionFixedResponseOutput)
}

// Content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
//
// The following arguments are optional:
func (o ListenerDefaultActionFixedResponsePtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionFixedResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ContentType
	}).(pulumi.StringPtrOutput)
}

// Message body.
func (o ListenerDefaultActionFixedResponsePtrOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionFixedResponse) *string {
		if v == nil {
			return nil
		}
		return v.MessageBody
	}).(pulumi.StringPtrOutput)
}

// HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
func (o ListenerDefaultActionFixedResponsePtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionFixedResponse) *string {
		if v == nil {
			return nil
		}
		return v.StatusCode
	}).(pulumi.StringPtrOutput)
}

type ListenerDefaultActionForward struct {
	// Configuration block for target group stickiness for the rule. Detailed below.
	Stickiness *ListenerDefaultActionForwardStickiness `pulumi:"stickiness"`
	// Set of 1-5 target group blocks. Detailed below.
	//
	// The following arguments are optional:
	TargetGroups []ListenerDefaultActionForwardTargetGroup `pulumi:"targetGroups"`
}

// ListenerDefaultActionForwardInput is an input type that accepts ListenerDefaultActionForwardArgs and ListenerDefaultActionForwardOutput values.
// You can construct a concrete instance of `ListenerDefaultActionForwardInput` via:
//
//	ListenerDefaultActionForwardArgs{...}
type ListenerDefaultActionForwardInput interface {
	pulumi.Input

	ToListenerDefaultActionForwardOutput() ListenerDefaultActionForwardOutput
	ToListenerDefaultActionForwardOutputWithContext(context.Context) ListenerDefaultActionForwardOutput
}

type ListenerDefaultActionForwardArgs struct {
	// Configuration block for target group stickiness for the rule. Detailed below.
	Stickiness ListenerDefaultActionForwardStickinessPtrInput `pulumi:"stickiness"`
	// Set of 1-5 target group blocks. Detailed below.
	//
	// The following arguments are optional:
	TargetGroups ListenerDefaultActionForwardTargetGroupArrayInput `pulumi:"targetGroups"`
}

func (ListenerDefaultActionForwardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionForward)(nil)).Elem()
}

func (i ListenerDefaultActionForwardArgs) ToListenerDefaultActionForwardOutput() ListenerDefaultActionForwardOutput {
	return i.ToListenerDefaultActionForwardOutputWithContext(context.Background())
}

func (i ListenerDefaultActionForwardArgs) ToListenerDefaultActionForwardOutputWithContext(ctx context.Context) ListenerDefaultActionForwardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionForwardOutput)
}

func (i ListenerDefaultActionForwardArgs) ToListenerDefaultActionForwardPtrOutput() ListenerDefaultActionForwardPtrOutput {
	return i.ToListenerDefaultActionForwardPtrOutputWithContext(context.Background())
}

func (i ListenerDefaultActionForwardArgs) ToListenerDefaultActionForwardPtrOutputWithContext(ctx context.Context) ListenerDefaultActionForwardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionForwardOutput).ToListenerDefaultActionForwardPtrOutputWithContext(ctx)
}

// ListenerDefaultActionForwardPtrInput is an input type that accepts ListenerDefaultActionForwardArgs, ListenerDefaultActionForwardPtr and ListenerDefaultActionForwardPtrOutput values.
// You can construct a concrete instance of `ListenerDefaultActionForwardPtrInput` via:
//
//	        ListenerDefaultActionForwardArgs{...}
//
//	or:
//
//	        nil
type ListenerDefaultActionForwardPtrInput interface {
	pulumi.Input

	ToListenerDefaultActionForwardPtrOutput() ListenerDefaultActionForwardPtrOutput
	ToListenerDefaultActionForwardPtrOutputWithContext(context.Context) ListenerDefaultActionForwardPtrOutput
}

type listenerDefaultActionForwardPtrType ListenerDefaultActionForwardArgs

func ListenerDefaultActionForwardPtr(v *ListenerDefaultActionForwardArgs) ListenerDefaultActionForwardPtrInput {
	return (*listenerDefaultActionForwardPtrType)(v)
}

func (*listenerDefaultActionForwardPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionForward)(nil)).Elem()
}

func (i *listenerDefaultActionForwardPtrType) ToListenerDefaultActionForwardPtrOutput() ListenerDefaultActionForwardPtrOutput {
	return i.ToListenerDefaultActionForwardPtrOutputWithContext(context.Background())
}

func (i *listenerDefaultActionForwardPtrType) ToListenerDefaultActionForwardPtrOutputWithContext(ctx context.Context) ListenerDefaultActionForwardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionForwardPtrOutput)
}

type ListenerDefaultActionForwardOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionForwardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionForward)(nil)).Elem()
}

func (o ListenerDefaultActionForwardOutput) ToListenerDefaultActionForwardOutput() ListenerDefaultActionForwardOutput {
	return o
}

func (o ListenerDefaultActionForwardOutput) ToListenerDefaultActionForwardOutputWithContext(ctx context.Context) ListenerDefaultActionForwardOutput {
	return o
}

func (o ListenerDefaultActionForwardOutput) ToListenerDefaultActionForwardPtrOutput() ListenerDefaultActionForwardPtrOutput {
	return o.ToListenerDefaultActionForwardPtrOutputWithContext(context.Background())
}

func (o ListenerDefaultActionForwardOutput) ToListenerDefaultActionForwardPtrOutputWithContext(ctx context.Context) ListenerDefaultActionForwardPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerDefaultActionForward) *ListenerDefaultActionForward {
		return &v
	}).(ListenerDefaultActionForwardPtrOutput)
}

// Configuration block for target group stickiness for the rule. Detailed below.
func (o ListenerDefaultActionForwardOutput) Stickiness() ListenerDefaultActionForwardStickinessPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionForward) *ListenerDefaultActionForwardStickiness { return v.Stickiness }).(ListenerDefaultActionForwardStickinessPtrOutput)
}

// Set of 1-5 target group blocks. Detailed below.
//
// The following arguments are optional:
func (o ListenerDefaultActionForwardOutput) TargetGroups() ListenerDefaultActionForwardTargetGroupArrayOutput {
	return o.ApplyT(func(v ListenerDefaultActionForward) []ListenerDefaultActionForwardTargetGroup { return v.TargetGroups }).(ListenerDefaultActionForwardTargetGroupArrayOutput)
}

type ListenerDefaultActionForwardPtrOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionForwardPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionForward)(nil)).Elem()
}

func (o ListenerDefaultActionForwardPtrOutput) ToListenerDefaultActionForwardPtrOutput() ListenerDefaultActionForwardPtrOutput {
	return o
}

func (o ListenerDefaultActionForwardPtrOutput) ToListenerDefaultActionForwardPtrOutputWithContext(ctx context.Context) ListenerDefaultActionForwardPtrOutput {
	return o
}

func (o ListenerDefaultActionForwardPtrOutput) Elem() ListenerDefaultActionForwardOutput {
	return o.ApplyT(func(v *ListenerDefaultActionForward) ListenerDefaultActionForward {
		if v != nil {
			return *v
		}
		var ret ListenerDefaultActionForward
		return ret
	}).(ListenerDefaultActionForwardOutput)
}

// Configuration block for target group stickiness for the rule. Detailed below.
func (o ListenerDefaultActionForwardPtrOutput) Stickiness() ListenerDefaultActionForwardStickinessPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionForward) *ListenerDefaultActionForwardStickiness {
		if v == nil {
			return nil
		}
		return v.Stickiness
	}).(ListenerDefaultActionForwardStickinessPtrOutput)
}

// Set of 1-5 target group blocks. Detailed below.
//
// The following arguments are optional:
func (o ListenerDefaultActionForwardPtrOutput) TargetGroups() ListenerDefaultActionForwardTargetGroupArrayOutput {
	return o.ApplyT(func(v *ListenerDefaultActionForward) []ListenerDefaultActionForwardTargetGroup {
		if v == nil {
			return nil
		}
		return v.TargetGroups
	}).(ListenerDefaultActionForwardTargetGroupArrayOutput)
}

type ListenerDefaultActionForwardStickiness struct {
	// Time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
	//
	// The following arguments are optional:
	Duration int `pulumi:"duration"`
	// Whether target group stickiness is enabled. Default is `false`.
	Enabled *bool `pulumi:"enabled"`
}

// ListenerDefaultActionForwardStickinessInput is an input type that accepts ListenerDefaultActionForwardStickinessArgs and ListenerDefaultActionForwardStickinessOutput values.
// You can construct a concrete instance of `ListenerDefaultActionForwardStickinessInput` via:
//
//	ListenerDefaultActionForwardStickinessArgs{...}
type ListenerDefaultActionForwardStickinessInput interface {
	pulumi.Input

	ToListenerDefaultActionForwardStickinessOutput() ListenerDefaultActionForwardStickinessOutput
	ToListenerDefaultActionForwardStickinessOutputWithContext(context.Context) ListenerDefaultActionForwardStickinessOutput
}

type ListenerDefaultActionForwardStickinessArgs struct {
	// Time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
	//
	// The following arguments are optional:
	Duration pulumi.IntInput `pulumi:"duration"`
	// Whether target group stickiness is enabled. Default is `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ListenerDefaultActionForwardStickinessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionForwardStickiness)(nil)).Elem()
}

func (i ListenerDefaultActionForwardStickinessArgs) ToListenerDefaultActionForwardStickinessOutput() ListenerDefaultActionForwardStickinessOutput {
	return i.ToListenerDefaultActionForwardStickinessOutputWithContext(context.Background())
}

func (i ListenerDefaultActionForwardStickinessArgs) ToListenerDefaultActionForwardStickinessOutputWithContext(ctx context.Context) ListenerDefaultActionForwardStickinessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionForwardStickinessOutput)
}

func (i ListenerDefaultActionForwardStickinessArgs) ToListenerDefaultActionForwardStickinessPtrOutput() ListenerDefaultActionForwardStickinessPtrOutput {
	return i.ToListenerDefaultActionForwardStickinessPtrOutputWithContext(context.Background())
}

func (i ListenerDefaultActionForwardStickinessArgs) ToListenerDefaultActionForwardStickinessPtrOutputWithContext(ctx context.Context) ListenerDefaultActionForwardStickinessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionForwardStickinessOutput).ToListenerDefaultActionForwardStickinessPtrOutputWithContext(ctx)
}

// ListenerDefaultActionForwardStickinessPtrInput is an input type that accepts ListenerDefaultActionForwardStickinessArgs, ListenerDefaultActionForwardStickinessPtr and ListenerDefaultActionForwardStickinessPtrOutput values.
// You can construct a concrete instance of `ListenerDefaultActionForwardStickinessPtrInput` via:
//
//	        ListenerDefaultActionForwardStickinessArgs{...}
//
//	or:
//
//	        nil
type ListenerDefaultActionForwardStickinessPtrInput interface {
	pulumi.Input

	ToListenerDefaultActionForwardStickinessPtrOutput() ListenerDefaultActionForwardStickinessPtrOutput
	ToListenerDefaultActionForwardStickinessPtrOutputWithContext(context.Context) ListenerDefaultActionForwardStickinessPtrOutput
}

type listenerDefaultActionForwardStickinessPtrType ListenerDefaultActionForwardStickinessArgs

func ListenerDefaultActionForwardStickinessPtr(v *ListenerDefaultActionForwardStickinessArgs) ListenerDefaultActionForwardStickinessPtrInput {
	return (*listenerDefaultActionForwardStickinessPtrType)(v)
}

func (*listenerDefaultActionForwardStickinessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionForwardStickiness)(nil)).Elem()
}

func (i *listenerDefaultActionForwardStickinessPtrType) ToListenerDefaultActionForwardStickinessPtrOutput() ListenerDefaultActionForwardStickinessPtrOutput {
	return i.ToListenerDefaultActionForwardStickinessPtrOutputWithContext(context.Background())
}

func (i *listenerDefaultActionForwardStickinessPtrType) ToListenerDefaultActionForwardStickinessPtrOutputWithContext(ctx context.Context) ListenerDefaultActionForwardStickinessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionForwardStickinessPtrOutput)
}

type ListenerDefaultActionForwardStickinessOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionForwardStickinessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionForwardStickiness)(nil)).Elem()
}

func (o ListenerDefaultActionForwardStickinessOutput) ToListenerDefaultActionForwardStickinessOutput() ListenerDefaultActionForwardStickinessOutput {
	return o
}

func (o ListenerDefaultActionForwardStickinessOutput) ToListenerDefaultActionForwardStickinessOutputWithContext(ctx context.Context) ListenerDefaultActionForwardStickinessOutput {
	return o
}

func (o ListenerDefaultActionForwardStickinessOutput) ToListenerDefaultActionForwardStickinessPtrOutput() ListenerDefaultActionForwardStickinessPtrOutput {
	return o.ToListenerDefaultActionForwardStickinessPtrOutputWithContext(context.Background())
}

func (o ListenerDefaultActionForwardStickinessOutput) ToListenerDefaultActionForwardStickinessPtrOutputWithContext(ctx context.Context) ListenerDefaultActionForwardStickinessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerDefaultActionForwardStickiness) *ListenerDefaultActionForwardStickiness {
		return &v
	}).(ListenerDefaultActionForwardStickinessPtrOutput)
}

// Time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
//
// The following arguments are optional:
func (o ListenerDefaultActionForwardStickinessOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerDefaultActionForwardStickiness) int { return v.Duration }).(pulumi.IntOutput)
}

// Whether target group stickiness is enabled. Default is `false`.
func (o ListenerDefaultActionForwardStickinessOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionForwardStickiness) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ListenerDefaultActionForwardStickinessPtrOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionForwardStickinessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionForwardStickiness)(nil)).Elem()
}

func (o ListenerDefaultActionForwardStickinessPtrOutput) ToListenerDefaultActionForwardStickinessPtrOutput() ListenerDefaultActionForwardStickinessPtrOutput {
	return o
}

func (o ListenerDefaultActionForwardStickinessPtrOutput) ToListenerDefaultActionForwardStickinessPtrOutputWithContext(ctx context.Context) ListenerDefaultActionForwardStickinessPtrOutput {
	return o
}

func (o ListenerDefaultActionForwardStickinessPtrOutput) Elem() ListenerDefaultActionForwardStickinessOutput {
	return o.ApplyT(func(v *ListenerDefaultActionForwardStickiness) ListenerDefaultActionForwardStickiness {
		if v != nil {
			return *v
		}
		var ret ListenerDefaultActionForwardStickiness
		return ret
	}).(ListenerDefaultActionForwardStickinessOutput)
}

// Time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
//
// The following arguments are optional:
func (o ListenerDefaultActionForwardStickinessPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionForwardStickiness) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

// Whether target group stickiness is enabled. Default is `false`.
func (o ListenerDefaultActionForwardStickinessPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionForwardStickiness) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ListenerDefaultActionForwardTargetGroup struct {
	// ARN of the target group.
	//
	// The following arguments are optional:
	Arn string `pulumi:"arn"`
	// Weight. The range is 0 to 999.
	Weight *int `pulumi:"weight"`
}

// ListenerDefaultActionForwardTargetGroupInput is an input type that accepts ListenerDefaultActionForwardTargetGroupArgs and ListenerDefaultActionForwardTargetGroupOutput values.
// You can construct a concrete instance of `ListenerDefaultActionForwardTargetGroupInput` via:
//
//	ListenerDefaultActionForwardTargetGroupArgs{...}
type ListenerDefaultActionForwardTargetGroupInput interface {
	pulumi.Input

	ToListenerDefaultActionForwardTargetGroupOutput() ListenerDefaultActionForwardTargetGroupOutput
	ToListenerDefaultActionForwardTargetGroupOutputWithContext(context.Context) ListenerDefaultActionForwardTargetGroupOutput
}

type ListenerDefaultActionForwardTargetGroupArgs struct {
	// ARN of the target group.
	//
	// The following arguments are optional:
	Arn pulumi.StringInput `pulumi:"arn"`
	// Weight. The range is 0 to 999.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (ListenerDefaultActionForwardTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionForwardTargetGroup)(nil)).Elem()
}

func (i ListenerDefaultActionForwardTargetGroupArgs) ToListenerDefaultActionForwardTargetGroupOutput() ListenerDefaultActionForwardTargetGroupOutput {
	return i.ToListenerDefaultActionForwardTargetGroupOutputWithContext(context.Background())
}

func (i ListenerDefaultActionForwardTargetGroupArgs) ToListenerDefaultActionForwardTargetGroupOutputWithContext(ctx context.Context) ListenerDefaultActionForwardTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionForwardTargetGroupOutput)
}

// ListenerDefaultActionForwardTargetGroupArrayInput is an input type that accepts ListenerDefaultActionForwardTargetGroupArray and ListenerDefaultActionForwardTargetGroupArrayOutput values.
// You can construct a concrete instance of `ListenerDefaultActionForwardTargetGroupArrayInput` via:
//
//	ListenerDefaultActionForwardTargetGroupArray{ ListenerDefaultActionForwardTargetGroupArgs{...} }
type ListenerDefaultActionForwardTargetGroupArrayInput interface {
	pulumi.Input

	ToListenerDefaultActionForwardTargetGroupArrayOutput() ListenerDefaultActionForwardTargetGroupArrayOutput
	ToListenerDefaultActionForwardTargetGroupArrayOutputWithContext(context.Context) ListenerDefaultActionForwardTargetGroupArrayOutput
}

type ListenerDefaultActionForwardTargetGroupArray []ListenerDefaultActionForwardTargetGroupInput

func (ListenerDefaultActionForwardTargetGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerDefaultActionForwardTargetGroup)(nil)).Elem()
}

func (i ListenerDefaultActionForwardTargetGroupArray) ToListenerDefaultActionForwardTargetGroupArrayOutput() ListenerDefaultActionForwardTargetGroupArrayOutput {
	return i.ToListenerDefaultActionForwardTargetGroupArrayOutputWithContext(context.Background())
}

func (i ListenerDefaultActionForwardTargetGroupArray) ToListenerDefaultActionForwardTargetGroupArrayOutputWithContext(ctx context.Context) ListenerDefaultActionForwardTargetGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionForwardTargetGroupArrayOutput)
}

type ListenerDefaultActionForwardTargetGroupOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionForwardTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionForwardTargetGroup)(nil)).Elem()
}

func (o ListenerDefaultActionForwardTargetGroupOutput) ToListenerDefaultActionForwardTargetGroupOutput() ListenerDefaultActionForwardTargetGroupOutput {
	return o
}

func (o ListenerDefaultActionForwardTargetGroupOutput) ToListenerDefaultActionForwardTargetGroupOutputWithContext(ctx context.Context) ListenerDefaultActionForwardTargetGroupOutput {
	return o
}

// ARN of the target group.
//
// The following arguments are optional:
func (o ListenerDefaultActionForwardTargetGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionForwardTargetGroup) string { return v.Arn }).(pulumi.StringOutput)
}

// Weight. The range is 0 to 999.
func (o ListenerDefaultActionForwardTargetGroupOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionForwardTargetGroup) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ListenerDefaultActionForwardTargetGroupArrayOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionForwardTargetGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerDefaultActionForwardTargetGroup)(nil)).Elem()
}

func (o ListenerDefaultActionForwardTargetGroupArrayOutput) ToListenerDefaultActionForwardTargetGroupArrayOutput() ListenerDefaultActionForwardTargetGroupArrayOutput {
	return o
}

func (o ListenerDefaultActionForwardTargetGroupArrayOutput) ToListenerDefaultActionForwardTargetGroupArrayOutputWithContext(ctx context.Context) ListenerDefaultActionForwardTargetGroupArrayOutput {
	return o
}

func (o ListenerDefaultActionForwardTargetGroupArrayOutput) Index(i pulumi.IntInput) ListenerDefaultActionForwardTargetGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerDefaultActionForwardTargetGroup {
		return vs[0].([]ListenerDefaultActionForwardTargetGroup)[vs[1].(int)]
	}).(ListenerDefaultActionForwardTargetGroupOutput)
}

type ListenerDefaultActionRedirect struct {
	// Hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
	Host *string `pulumi:"host"`
	// Absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
	Path *string `pulumi:"path"`
	// Port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
	Port *string `pulumi:"port"`
	// Protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
	Protocol *string `pulumi:"protocol"`
	// Query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
	Query *string `pulumi:"query"`
	// HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
	//
	// The following arguments are optional:
	StatusCode string `pulumi:"statusCode"`
}

// ListenerDefaultActionRedirectInput is an input type that accepts ListenerDefaultActionRedirectArgs and ListenerDefaultActionRedirectOutput values.
// You can construct a concrete instance of `ListenerDefaultActionRedirectInput` via:
//
//	ListenerDefaultActionRedirectArgs{...}
type ListenerDefaultActionRedirectInput interface {
	pulumi.Input

	ToListenerDefaultActionRedirectOutput() ListenerDefaultActionRedirectOutput
	ToListenerDefaultActionRedirectOutputWithContext(context.Context) ListenerDefaultActionRedirectOutput
}

type ListenerDefaultActionRedirectArgs struct {
	// Hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// Protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
	//
	// The following arguments are optional:
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (ListenerDefaultActionRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionRedirect)(nil)).Elem()
}

func (i ListenerDefaultActionRedirectArgs) ToListenerDefaultActionRedirectOutput() ListenerDefaultActionRedirectOutput {
	return i.ToListenerDefaultActionRedirectOutputWithContext(context.Background())
}

func (i ListenerDefaultActionRedirectArgs) ToListenerDefaultActionRedirectOutputWithContext(ctx context.Context) ListenerDefaultActionRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionRedirectOutput)
}

func (i ListenerDefaultActionRedirectArgs) ToListenerDefaultActionRedirectPtrOutput() ListenerDefaultActionRedirectPtrOutput {
	return i.ToListenerDefaultActionRedirectPtrOutputWithContext(context.Background())
}

func (i ListenerDefaultActionRedirectArgs) ToListenerDefaultActionRedirectPtrOutputWithContext(ctx context.Context) ListenerDefaultActionRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionRedirectOutput).ToListenerDefaultActionRedirectPtrOutputWithContext(ctx)
}

// ListenerDefaultActionRedirectPtrInput is an input type that accepts ListenerDefaultActionRedirectArgs, ListenerDefaultActionRedirectPtr and ListenerDefaultActionRedirectPtrOutput values.
// You can construct a concrete instance of `ListenerDefaultActionRedirectPtrInput` via:
//
//	        ListenerDefaultActionRedirectArgs{...}
//
//	or:
//
//	        nil
type ListenerDefaultActionRedirectPtrInput interface {
	pulumi.Input

	ToListenerDefaultActionRedirectPtrOutput() ListenerDefaultActionRedirectPtrOutput
	ToListenerDefaultActionRedirectPtrOutputWithContext(context.Context) ListenerDefaultActionRedirectPtrOutput
}

type listenerDefaultActionRedirectPtrType ListenerDefaultActionRedirectArgs

func ListenerDefaultActionRedirectPtr(v *ListenerDefaultActionRedirectArgs) ListenerDefaultActionRedirectPtrInput {
	return (*listenerDefaultActionRedirectPtrType)(v)
}

func (*listenerDefaultActionRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionRedirect)(nil)).Elem()
}

func (i *listenerDefaultActionRedirectPtrType) ToListenerDefaultActionRedirectPtrOutput() ListenerDefaultActionRedirectPtrOutput {
	return i.ToListenerDefaultActionRedirectPtrOutputWithContext(context.Background())
}

func (i *listenerDefaultActionRedirectPtrType) ToListenerDefaultActionRedirectPtrOutputWithContext(ctx context.Context) ListenerDefaultActionRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionRedirectPtrOutput)
}

type ListenerDefaultActionRedirectOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionRedirect)(nil)).Elem()
}

func (o ListenerDefaultActionRedirectOutput) ToListenerDefaultActionRedirectOutput() ListenerDefaultActionRedirectOutput {
	return o
}

func (o ListenerDefaultActionRedirectOutput) ToListenerDefaultActionRedirectOutputWithContext(ctx context.Context) ListenerDefaultActionRedirectOutput {
	return o
}

func (o ListenerDefaultActionRedirectOutput) ToListenerDefaultActionRedirectPtrOutput() ListenerDefaultActionRedirectPtrOutput {
	return o.ToListenerDefaultActionRedirectPtrOutputWithContext(context.Background())
}

func (o ListenerDefaultActionRedirectOutput) ToListenerDefaultActionRedirectPtrOutputWithContext(ctx context.Context) ListenerDefaultActionRedirectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerDefaultActionRedirect) *ListenerDefaultActionRedirect {
		return &v
	}).(ListenerDefaultActionRedirectPtrOutput)
}

// Hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
func (o ListenerDefaultActionRedirectOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
func (o ListenerDefaultActionRedirectOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
func (o ListenerDefaultActionRedirectOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
func (o ListenerDefaultActionRedirectOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
func (o ListenerDefaultActionRedirectOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
//
// The following arguments are optional:
func (o ListenerDefaultActionRedirectOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) string { return v.StatusCode }).(pulumi.StringOutput)
}

type ListenerDefaultActionRedirectPtrOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionRedirect)(nil)).Elem()
}

func (o ListenerDefaultActionRedirectPtrOutput) ToListenerDefaultActionRedirectPtrOutput() ListenerDefaultActionRedirectPtrOutput {
	return o
}

func (o ListenerDefaultActionRedirectPtrOutput) ToListenerDefaultActionRedirectPtrOutputWithContext(ctx context.Context) ListenerDefaultActionRedirectPtrOutput {
	return o
}

func (o ListenerDefaultActionRedirectPtrOutput) Elem() ListenerDefaultActionRedirectOutput {
	return o.ApplyT(func(v *ListenerDefaultActionRedirect) ListenerDefaultActionRedirect {
		if v != nil {
			return *v
		}
		var ret ListenerDefaultActionRedirect
		return ret
	}).(ListenerDefaultActionRedirectOutput)
}

// Hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
func (o ListenerDefaultActionRedirectPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
func (o ListenerDefaultActionRedirectPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
func (o ListenerDefaultActionRedirectPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
func (o ListenerDefaultActionRedirectPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
func (o ListenerDefaultActionRedirectPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
//
// The following arguments are optional:
func (o ListenerDefaultActionRedirectPtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerDefaultActionRedirect) *string {
		if v == nil {
			return nil
		}
		return &v.StatusCode
	}).(pulumi.StringPtrOutput)
}

type ListenerMutualAuthentication struct {
	// Whether client certificate expiry is ignored. Default is `false`.
	IgnoreClientCertificateExpiry *bool `pulumi:"ignoreClientCertificateExpiry"`
	// Valid values are `off`, `verify` and `passthrough`.
	Mode string `pulumi:"mode"`
	// ARN of the elbv2 Trust Store.
	TrustStoreArn *string `pulumi:"trustStoreArn"`
}

// ListenerMutualAuthenticationInput is an input type that accepts ListenerMutualAuthenticationArgs and ListenerMutualAuthenticationOutput values.
// You can construct a concrete instance of `ListenerMutualAuthenticationInput` via:
//
//	ListenerMutualAuthenticationArgs{...}
type ListenerMutualAuthenticationInput interface {
	pulumi.Input

	ToListenerMutualAuthenticationOutput() ListenerMutualAuthenticationOutput
	ToListenerMutualAuthenticationOutputWithContext(context.Context) ListenerMutualAuthenticationOutput
}

type ListenerMutualAuthenticationArgs struct {
	// Whether client certificate expiry is ignored. Default is `false`.
	IgnoreClientCertificateExpiry pulumi.BoolPtrInput `pulumi:"ignoreClientCertificateExpiry"`
	// Valid values are `off`, `verify` and `passthrough`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// ARN of the elbv2 Trust Store.
	TrustStoreArn pulumi.StringPtrInput `pulumi:"trustStoreArn"`
}

func (ListenerMutualAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerMutualAuthentication)(nil)).Elem()
}

func (i ListenerMutualAuthenticationArgs) ToListenerMutualAuthenticationOutput() ListenerMutualAuthenticationOutput {
	return i.ToListenerMutualAuthenticationOutputWithContext(context.Background())
}

func (i ListenerMutualAuthenticationArgs) ToListenerMutualAuthenticationOutputWithContext(ctx context.Context) ListenerMutualAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerMutualAuthenticationOutput)
}

func (i ListenerMutualAuthenticationArgs) ToListenerMutualAuthenticationPtrOutput() ListenerMutualAuthenticationPtrOutput {
	return i.ToListenerMutualAuthenticationPtrOutputWithContext(context.Background())
}

func (i ListenerMutualAuthenticationArgs) ToListenerMutualAuthenticationPtrOutputWithContext(ctx context.Context) ListenerMutualAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerMutualAuthenticationOutput).ToListenerMutualAuthenticationPtrOutputWithContext(ctx)
}

// ListenerMutualAuthenticationPtrInput is an input type that accepts ListenerMutualAuthenticationArgs, ListenerMutualAuthenticationPtr and ListenerMutualAuthenticationPtrOutput values.
// You can construct a concrete instance of `ListenerMutualAuthenticationPtrInput` via:
//
//	        ListenerMutualAuthenticationArgs{...}
//
//	or:
//
//	        nil
type ListenerMutualAuthenticationPtrInput interface {
	pulumi.Input

	ToListenerMutualAuthenticationPtrOutput() ListenerMutualAuthenticationPtrOutput
	ToListenerMutualAuthenticationPtrOutputWithContext(context.Context) ListenerMutualAuthenticationPtrOutput
}

type listenerMutualAuthenticationPtrType ListenerMutualAuthenticationArgs

func ListenerMutualAuthenticationPtr(v *ListenerMutualAuthenticationArgs) ListenerMutualAuthenticationPtrInput {
	return (*listenerMutualAuthenticationPtrType)(v)
}

func (*listenerMutualAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerMutualAuthentication)(nil)).Elem()
}

func (i *listenerMutualAuthenticationPtrType) ToListenerMutualAuthenticationPtrOutput() ListenerMutualAuthenticationPtrOutput {
	return i.ToListenerMutualAuthenticationPtrOutputWithContext(context.Background())
}

func (i *listenerMutualAuthenticationPtrType) ToListenerMutualAuthenticationPtrOutputWithContext(ctx context.Context) ListenerMutualAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerMutualAuthenticationPtrOutput)
}

type ListenerMutualAuthenticationOutput struct{ *pulumi.OutputState }

func (ListenerMutualAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerMutualAuthentication)(nil)).Elem()
}

func (o ListenerMutualAuthenticationOutput) ToListenerMutualAuthenticationOutput() ListenerMutualAuthenticationOutput {
	return o
}

func (o ListenerMutualAuthenticationOutput) ToListenerMutualAuthenticationOutputWithContext(ctx context.Context) ListenerMutualAuthenticationOutput {
	return o
}

func (o ListenerMutualAuthenticationOutput) ToListenerMutualAuthenticationPtrOutput() ListenerMutualAuthenticationPtrOutput {
	return o.ToListenerMutualAuthenticationPtrOutputWithContext(context.Background())
}

func (o ListenerMutualAuthenticationOutput) ToListenerMutualAuthenticationPtrOutputWithContext(ctx context.Context) ListenerMutualAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerMutualAuthentication) *ListenerMutualAuthentication {
		return &v
	}).(ListenerMutualAuthenticationPtrOutput)
}

// Whether client certificate expiry is ignored. Default is `false`.
func (o ListenerMutualAuthenticationOutput) IgnoreClientCertificateExpiry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListenerMutualAuthentication) *bool { return v.IgnoreClientCertificateExpiry }).(pulumi.BoolPtrOutput)
}

// Valid values are `off`, `verify` and `passthrough`.
func (o ListenerMutualAuthenticationOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerMutualAuthentication) string { return v.Mode }).(pulumi.StringOutput)
}

// ARN of the elbv2 Trust Store.
func (o ListenerMutualAuthenticationOutput) TrustStoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerMutualAuthentication) *string { return v.TrustStoreArn }).(pulumi.StringPtrOutput)
}

type ListenerMutualAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ListenerMutualAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerMutualAuthentication)(nil)).Elem()
}

func (o ListenerMutualAuthenticationPtrOutput) ToListenerMutualAuthenticationPtrOutput() ListenerMutualAuthenticationPtrOutput {
	return o
}

func (o ListenerMutualAuthenticationPtrOutput) ToListenerMutualAuthenticationPtrOutputWithContext(ctx context.Context) ListenerMutualAuthenticationPtrOutput {
	return o
}

func (o ListenerMutualAuthenticationPtrOutput) Elem() ListenerMutualAuthenticationOutput {
	return o.ApplyT(func(v *ListenerMutualAuthentication) ListenerMutualAuthentication {
		if v != nil {
			return *v
		}
		var ret ListenerMutualAuthentication
		return ret
	}).(ListenerMutualAuthenticationOutput)
}

// Whether client certificate expiry is ignored. Default is `false`.
func (o ListenerMutualAuthenticationPtrOutput) IgnoreClientCertificateExpiry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListenerMutualAuthentication) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreClientCertificateExpiry
	}).(pulumi.BoolPtrOutput)
}

// Valid values are `off`, `verify` and `passthrough`.
func (o ListenerMutualAuthenticationPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerMutualAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// ARN of the elbv2 Trust Store.
func (o ListenerMutualAuthenticationPtrOutput) TrustStoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerMutualAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TrustStoreArn
	}).(pulumi.StringPtrOutput)
}

type ListenerRuleAction struct {
	// Information for creating an authenticate action using Cognito. Required if `type` is `authenticate-cognito`.
	AuthenticateCognito *ListenerRuleActionAuthenticateCognito `pulumi:"authenticateCognito"`
	// Information for creating an authenticate action using OIDC. Required if `type` is `authenticate-oidc`.
	AuthenticateOidc *ListenerRuleActionAuthenticateOidc `pulumi:"authenticateOidc"`
	// Information for creating an action that returns a custom HTTP response. Required if `type` is `fixed-response`.
	FixedResponse *ListenerRuleActionFixedResponse `pulumi:"fixedResponse"`
	// Information for creating an action that distributes requests among one or more target groups. Specify only if `type` is `forward`. If you specify both `forward` block and `targetGroupArn` attribute, you can specify only one target group using `forward` and it must be the same target group specified in `targetGroupArn`.
	Forward *ListenerRuleActionForward `pulumi:"forward"`
	Order   *int                       `pulumi:"order"`
	// Information for creating a redirect action. Required if `type` is `redirect`.
	Redirect *ListenerRuleActionRedirect `pulumi:"redirect"`
	// The ARN of the Target Group to which to route traffic. Specify only if `type` is `forward` and you want to route to a single target group. To route to one or more target groups, use a `forward` block instead.
	TargetGroupArn *string `pulumi:"targetGroupArn"`
	// The type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.
	Type string `pulumi:"type"`
}

// ListenerRuleActionInput is an input type that accepts ListenerRuleActionArgs and ListenerRuleActionOutput values.
// You can construct a concrete instance of `ListenerRuleActionInput` via:
//
//	ListenerRuleActionArgs{...}
type ListenerRuleActionInput interface {
	pulumi.Input

	ToListenerRuleActionOutput() ListenerRuleActionOutput
	ToListenerRuleActionOutputWithContext(context.Context) ListenerRuleActionOutput
}

type ListenerRuleActionArgs struct {
	// Information for creating an authenticate action using Cognito. Required if `type` is `authenticate-cognito`.
	AuthenticateCognito ListenerRuleActionAuthenticateCognitoPtrInput `pulumi:"authenticateCognito"`
	// Information for creating an authenticate action using OIDC. Required if `type` is `authenticate-oidc`.
	AuthenticateOidc ListenerRuleActionAuthenticateOidcPtrInput `pulumi:"authenticateOidc"`
	// Information for creating an action that returns a custom HTTP response. Required if `type` is `fixed-response`.
	FixedResponse ListenerRuleActionFixedResponsePtrInput `pulumi:"fixedResponse"`
	// Information for creating an action that distributes requests among one or more target groups. Specify only if `type` is `forward`. If you specify both `forward` block and `targetGroupArn` attribute, you can specify only one target group using `forward` and it must be the same target group specified in `targetGroupArn`.
	Forward ListenerRuleActionForwardPtrInput `pulumi:"forward"`
	Order   pulumi.IntPtrInput                `pulumi:"order"`
	// Information for creating a redirect action. Required if `type` is `redirect`.
	Redirect ListenerRuleActionRedirectPtrInput `pulumi:"redirect"`
	// The ARN of the Target Group to which to route traffic. Specify only if `type` is `forward` and you want to route to a single target group. To route to one or more target groups, use a `forward` block instead.
	TargetGroupArn pulumi.StringPtrInput `pulumi:"targetGroupArn"`
	// The type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ListenerRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleAction)(nil)).Elem()
}

func (i ListenerRuleActionArgs) ToListenerRuleActionOutput() ListenerRuleActionOutput {
	return i.ToListenerRuleActionOutputWithContext(context.Background())
}

func (i ListenerRuleActionArgs) ToListenerRuleActionOutputWithContext(ctx context.Context) ListenerRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionOutput)
}

// ListenerRuleActionArrayInput is an input type that accepts ListenerRuleActionArray and ListenerRuleActionArrayOutput values.
// You can construct a concrete instance of `ListenerRuleActionArrayInput` via:
//
//	ListenerRuleActionArray{ ListenerRuleActionArgs{...} }
type ListenerRuleActionArrayInput interface {
	pulumi.Input

	ToListenerRuleActionArrayOutput() ListenerRuleActionArrayOutput
	ToListenerRuleActionArrayOutputWithContext(context.Context) ListenerRuleActionArrayOutput
}

type ListenerRuleActionArray []ListenerRuleActionInput

func (ListenerRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleAction)(nil)).Elem()
}

func (i ListenerRuleActionArray) ToListenerRuleActionArrayOutput() ListenerRuleActionArrayOutput {
	return i.ToListenerRuleActionArrayOutputWithContext(context.Background())
}

func (i ListenerRuleActionArray) ToListenerRuleActionArrayOutputWithContext(ctx context.Context) ListenerRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionArrayOutput)
}

type ListenerRuleActionOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleAction)(nil)).Elem()
}

func (o ListenerRuleActionOutput) ToListenerRuleActionOutput() ListenerRuleActionOutput {
	return o
}

func (o ListenerRuleActionOutput) ToListenerRuleActionOutputWithContext(ctx context.Context) ListenerRuleActionOutput {
	return o
}

// Information for creating an authenticate action using Cognito. Required if `type` is `authenticate-cognito`.
func (o ListenerRuleActionOutput) AuthenticateCognito() ListenerRuleActionAuthenticateCognitoPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *ListenerRuleActionAuthenticateCognito { return v.AuthenticateCognito }).(ListenerRuleActionAuthenticateCognitoPtrOutput)
}

// Information for creating an authenticate action using OIDC. Required if `type` is `authenticate-oidc`.
func (o ListenerRuleActionOutput) AuthenticateOidc() ListenerRuleActionAuthenticateOidcPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *ListenerRuleActionAuthenticateOidc { return v.AuthenticateOidc }).(ListenerRuleActionAuthenticateOidcPtrOutput)
}

// Information for creating an action that returns a custom HTTP response. Required if `type` is `fixed-response`.
func (o ListenerRuleActionOutput) FixedResponse() ListenerRuleActionFixedResponsePtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *ListenerRuleActionFixedResponse { return v.FixedResponse }).(ListenerRuleActionFixedResponsePtrOutput)
}

// Information for creating an action that distributes requests among one or more target groups. Specify only if `type` is `forward`. If you specify both `forward` block and `targetGroupArn` attribute, you can specify only one target group using `forward` and it must be the same target group specified in `targetGroupArn`.
func (o ListenerRuleActionOutput) Forward() ListenerRuleActionForwardPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *ListenerRuleActionForward { return v.Forward }).(ListenerRuleActionForwardPtrOutput)
}

func (o ListenerRuleActionOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Information for creating a redirect action. Required if `type` is `redirect`.
func (o ListenerRuleActionOutput) Redirect() ListenerRuleActionRedirectPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *ListenerRuleActionRedirect { return v.Redirect }).(ListenerRuleActionRedirectPtrOutput)
}

// The ARN of the Target Group to which to route traffic. Specify only if `type` is `forward` and you want to route to a single target group. To route to one or more target groups, use a `forward` block instead.
func (o ListenerRuleActionOutput) TargetGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *string { return v.TargetGroupArn }).(pulumi.StringPtrOutput)
}

// The type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.
func (o ListenerRuleActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleAction) string { return v.Type }).(pulumi.StringOutput)
}

type ListenerRuleActionArrayOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleAction)(nil)).Elem()
}

func (o ListenerRuleActionArrayOutput) ToListenerRuleActionArrayOutput() ListenerRuleActionArrayOutput {
	return o
}

func (o ListenerRuleActionArrayOutput) ToListenerRuleActionArrayOutputWithContext(ctx context.Context) ListenerRuleActionArrayOutput {
	return o
}

func (o ListenerRuleActionArrayOutput) Index(i pulumi.IntInput) ListenerRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerRuleAction {
		return vs[0].([]ListenerRuleAction)[vs[1].(int)]
	}).(ListenerRuleActionOutput)
}

type ListenerRuleActionAuthenticateCognito struct {
	// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
	AuthenticationRequestExtraParams map[string]string `pulumi:"authenticationRequestExtraParams"`
	// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
	OnUnauthenticatedRequest *string `pulumi:"onUnauthenticatedRequest"`
	// The set of user claims to be requested from the IdP.
	Scope *string `pulumi:"scope"`
	// The name of the cookie used to maintain session information.
	SessionCookieName *string `pulumi:"sessionCookieName"`
	// The maximum duration of the authentication session, in seconds.
	SessionTimeout *int `pulumi:"sessionTimeout"`
	// The ARN of the Cognito user pool.
	UserPoolArn string `pulumi:"userPoolArn"`
	// The ID of the Cognito user pool client.
	UserPoolClientId string `pulumi:"userPoolClientId"`
	// The domain prefix or fully-qualified domain name of the Cognito user pool.
	UserPoolDomain string `pulumi:"userPoolDomain"`
}

// ListenerRuleActionAuthenticateCognitoInput is an input type that accepts ListenerRuleActionAuthenticateCognitoArgs and ListenerRuleActionAuthenticateCognitoOutput values.
// You can construct a concrete instance of `ListenerRuleActionAuthenticateCognitoInput` via:
//
//	ListenerRuleActionAuthenticateCognitoArgs{...}
type ListenerRuleActionAuthenticateCognitoInput interface {
	pulumi.Input

	ToListenerRuleActionAuthenticateCognitoOutput() ListenerRuleActionAuthenticateCognitoOutput
	ToListenerRuleActionAuthenticateCognitoOutputWithContext(context.Context) ListenerRuleActionAuthenticateCognitoOutput
}

type ListenerRuleActionAuthenticateCognitoArgs struct {
	// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
	AuthenticationRequestExtraParams pulumi.StringMapInput `pulumi:"authenticationRequestExtraParams"`
	// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
	OnUnauthenticatedRequest pulumi.StringPtrInput `pulumi:"onUnauthenticatedRequest"`
	// The set of user claims to be requested from the IdP.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The name of the cookie used to maintain session information.
	SessionCookieName pulumi.StringPtrInput `pulumi:"sessionCookieName"`
	// The maximum duration of the authentication session, in seconds.
	SessionTimeout pulumi.IntPtrInput `pulumi:"sessionTimeout"`
	// The ARN of the Cognito user pool.
	UserPoolArn pulumi.StringInput `pulumi:"userPoolArn"`
	// The ID of the Cognito user pool client.
	UserPoolClientId pulumi.StringInput `pulumi:"userPoolClientId"`
	// The domain prefix or fully-qualified domain name of the Cognito user pool.
	UserPoolDomain pulumi.StringInput `pulumi:"userPoolDomain"`
}

func (ListenerRuleActionAuthenticateCognitoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionAuthenticateCognito)(nil)).Elem()
}

func (i ListenerRuleActionAuthenticateCognitoArgs) ToListenerRuleActionAuthenticateCognitoOutput() ListenerRuleActionAuthenticateCognitoOutput {
	return i.ToListenerRuleActionAuthenticateCognitoOutputWithContext(context.Background())
}

func (i ListenerRuleActionAuthenticateCognitoArgs) ToListenerRuleActionAuthenticateCognitoOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateCognitoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionAuthenticateCognitoOutput)
}

func (i ListenerRuleActionAuthenticateCognitoArgs) ToListenerRuleActionAuthenticateCognitoPtrOutput() ListenerRuleActionAuthenticateCognitoPtrOutput {
	return i.ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(context.Background())
}

func (i ListenerRuleActionAuthenticateCognitoArgs) ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateCognitoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionAuthenticateCognitoOutput).ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(ctx)
}

// ListenerRuleActionAuthenticateCognitoPtrInput is an input type that accepts ListenerRuleActionAuthenticateCognitoArgs, ListenerRuleActionAuthenticateCognitoPtr and ListenerRuleActionAuthenticateCognitoPtrOutput values.
// You can construct a concrete instance of `ListenerRuleActionAuthenticateCognitoPtrInput` via:
//
//	        ListenerRuleActionAuthenticateCognitoArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleActionAuthenticateCognitoPtrInput interface {
	pulumi.Input

	ToListenerRuleActionAuthenticateCognitoPtrOutput() ListenerRuleActionAuthenticateCognitoPtrOutput
	ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(context.Context) ListenerRuleActionAuthenticateCognitoPtrOutput
}

type listenerRuleActionAuthenticateCognitoPtrType ListenerRuleActionAuthenticateCognitoArgs

func ListenerRuleActionAuthenticateCognitoPtr(v *ListenerRuleActionAuthenticateCognitoArgs) ListenerRuleActionAuthenticateCognitoPtrInput {
	return (*listenerRuleActionAuthenticateCognitoPtrType)(v)
}

func (*listenerRuleActionAuthenticateCognitoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionAuthenticateCognito)(nil)).Elem()
}

func (i *listenerRuleActionAuthenticateCognitoPtrType) ToListenerRuleActionAuthenticateCognitoPtrOutput() ListenerRuleActionAuthenticateCognitoPtrOutput {
	return i.ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(context.Background())
}

func (i *listenerRuleActionAuthenticateCognitoPtrType) ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateCognitoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionAuthenticateCognitoPtrOutput)
}

type ListenerRuleActionAuthenticateCognitoOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionAuthenticateCognitoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionAuthenticateCognito)(nil)).Elem()
}

func (o ListenerRuleActionAuthenticateCognitoOutput) ToListenerRuleActionAuthenticateCognitoOutput() ListenerRuleActionAuthenticateCognitoOutput {
	return o
}

func (o ListenerRuleActionAuthenticateCognitoOutput) ToListenerRuleActionAuthenticateCognitoOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateCognitoOutput {
	return o
}

func (o ListenerRuleActionAuthenticateCognitoOutput) ToListenerRuleActionAuthenticateCognitoPtrOutput() ListenerRuleActionAuthenticateCognitoPtrOutput {
	return o.ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(context.Background())
}

func (o ListenerRuleActionAuthenticateCognitoOutput) ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateCognitoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleActionAuthenticateCognito) *ListenerRuleActionAuthenticateCognito {
		return &v
	}).(ListenerRuleActionAuthenticateCognitoPtrOutput)
}

// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
func (o ListenerRuleActionAuthenticateCognitoOutput) AuthenticationRequestExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) map[string]string {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.StringMapOutput)
}

// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
func (o ListenerRuleActionAuthenticateCognitoOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

// The set of user claims to be requested from the IdP.
func (o ListenerRuleActionAuthenticateCognitoOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The name of the cookie used to maintain session information.
func (o ListenerRuleActionAuthenticateCognitoOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

// The maximum duration of the authentication session, in seconds.
func (o ListenerRuleActionAuthenticateCognitoOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

// The ARN of the Cognito user pool.
func (o ListenerRuleActionAuthenticateCognitoOutput) UserPoolArn() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) string { return v.UserPoolArn }).(pulumi.StringOutput)
}

// The ID of the Cognito user pool client.
func (o ListenerRuleActionAuthenticateCognitoOutput) UserPoolClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) string { return v.UserPoolClientId }).(pulumi.StringOutput)
}

// The domain prefix or fully-qualified domain name of the Cognito user pool.
func (o ListenerRuleActionAuthenticateCognitoOutput) UserPoolDomain() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) string { return v.UserPoolDomain }).(pulumi.StringOutput)
}

type ListenerRuleActionAuthenticateCognitoPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionAuthenticateCognitoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionAuthenticateCognito)(nil)).Elem()
}

func (o ListenerRuleActionAuthenticateCognitoPtrOutput) ToListenerRuleActionAuthenticateCognitoPtrOutput() ListenerRuleActionAuthenticateCognitoPtrOutput {
	return o
}

func (o ListenerRuleActionAuthenticateCognitoPtrOutput) ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateCognitoPtrOutput {
	return o
}

func (o ListenerRuleActionAuthenticateCognitoPtrOutput) Elem() ListenerRuleActionAuthenticateCognitoOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateCognito) ListenerRuleActionAuthenticateCognito {
		if v != nil {
			return *v
		}
		var ret ListenerRuleActionAuthenticateCognito
		return ret
	}).(ListenerRuleActionAuthenticateCognitoOutput)
}

// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) AuthenticationRequestExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateCognito) map[string]string {
		if v == nil {
			return nil
		}
		return v.AuthenticationRequestExtraParams
	}).(pulumi.StringMapOutput)
}

// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateCognito) *string {
		if v == nil {
			return nil
		}
		return v.OnUnauthenticatedRequest
	}).(pulumi.StringPtrOutput)
}

// The set of user claims to be requested from the IdP.
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateCognito) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The name of the cookie used to maintain session information.
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateCognito) *string {
		if v == nil {
			return nil
		}
		return v.SessionCookieName
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of the authentication session, in seconds.
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateCognito) *int {
		if v == nil {
			return nil
		}
		return v.SessionTimeout
	}).(pulumi.IntPtrOutput)
}

// The ARN of the Cognito user pool.
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) UserPoolArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateCognito) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolArn
	}).(pulumi.StringPtrOutput)
}

// The ID of the Cognito user pool client.
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) UserPoolClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateCognito) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolClientId
	}).(pulumi.StringPtrOutput)
}

// The domain prefix or fully-qualified domain name of the Cognito user pool.
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) UserPoolDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateCognito) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolDomain
	}).(pulumi.StringPtrOutput)
}

type ListenerRuleActionAuthenticateOidc struct {
	// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
	AuthenticationRequestExtraParams map[string]string `pulumi:"authenticationRequestExtraParams"`
	// The authorization endpoint of the IdP.
	AuthorizationEndpoint string `pulumi:"authorizationEndpoint"`
	// The OAuth 2.0 client identifier.
	ClientId string `pulumi:"clientId"`
	// The OAuth 2.0 client secret.
	ClientSecret string `pulumi:"clientSecret"`
	// The OIDC issuer identifier of the IdP.
	Issuer string `pulumi:"issuer"`
	// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
	OnUnauthenticatedRequest *string `pulumi:"onUnauthenticatedRequest"`
	// The set of user claims to be requested from the IdP.
	Scope *string `pulumi:"scope"`
	// The name of the cookie used to maintain session information.
	SessionCookieName *string `pulumi:"sessionCookieName"`
	// The maximum duration of the authentication session, in seconds.
	SessionTimeout *int `pulumi:"sessionTimeout"`
	// The token endpoint of the IdP.
	TokenEndpoint string `pulumi:"tokenEndpoint"`
	// The user info endpoint of the IdP.
	UserInfoEndpoint string `pulumi:"userInfoEndpoint"`
}

// ListenerRuleActionAuthenticateOidcInput is an input type that accepts ListenerRuleActionAuthenticateOidcArgs and ListenerRuleActionAuthenticateOidcOutput values.
// You can construct a concrete instance of `ListenerRuleActionAuthenticateOidcInput` via:
//
//	ListenerRuleActionAuthenticateOidcArgs{...}
type ListenerRuleActionAuthenticateOidcInput interface {
	pulumi.Input

	ToListenerRuleActionAuthenticateOidcOutput() ListenerRuleActionAuthenticateOidcOutput
	ToListenerRuleActionAuthenticateOidcOutputWithContext(context.Context) ListenerRuleActionAuthenticateOidcOutput
}

type ListenerRuleActionAuthenticateOidcArgs struct {
	// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
	AuthenticationRequestExtraParams pulumi.StringMapInput `pulumi:"authenticationRequestExtraParams"`
	// The authorization endpoint of the IdP.
	AuthorizationEndpoint pulumi.StringInput `pulumi:"authorizationEndpoint"`
	// The OAuth 2.0 client identifier.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The OAuth 2.0 client secret.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The OIDC issuer identifier of the IdP.
	Issuer pulumi.StringInput `pulumi:"issuer"`
	// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
	OnUnauthenticatedRequest pulumi.StringPtrInput `pulumi:"onUnauthenticatedRequest"`
	// The set of user claims to be requested from the IdP.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The name of the cookie used to maintain session information.
	SessionCookieName pulumi.StringPtrInput `pulumi:"sessionCookieName"`
	// The maximum duration of the authentication session, in seconds.
	SessionTimeout pulumi.IntPtrInput `pulumi:"sessionTimeout"`
	// The token endpoint of the IdP.
	TokenEndpoint pulumi.StringInput `pulumi:"tokenEndpoint"`
	// The user info endpoint of the IdP.
	UserInfoEndpoint pulumi.StringInput `pulumi:"userInfoEndpoint"`
}

func (ListenerRuleActionAuthenticateOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionAuthenticateOidc)(nil)).Elem()
}

func (i ListenerRuleActionAuthenticateOidcArgs) ToListenerRuleActionAuthenticateOidcOutput() ListenerRuleActionAuthenticateOidcOutput {
	return i.ToListenerRuleActionAuthenticateOidcOutputWithContext(context.Background())
}

func (i ListenerRuleActionAuthenticateOidcArgs) ToListenerRuleActionAuthenticateOidcOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionAuthenticateOidcOutput)
}

func (i ListenerRuleActionAuthenticateOidcArgs) ToListenerRuleActionAuthenticateOidcPtrOutput() ListenerRuleActionAuthenticateOidcPtrOutput {
	return i.ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(context.Background())
}

func (i ListenerRuleActionAuthenticateOidcArgs) ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionAuthenticateOidcOutput).ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(ctx)
}

// ListenerRuleActionAuthenticateOidcPtrInput is an input type that accepts ListenerRuleActionAuthenticateOidcArgs, ListenerRuleActionAuthenticateOidcPtr and ListenerRuleActionAuthenticateOidcPtrOutput values.
// You can construct a concrete instance of `ListenerRuleActionAuthenticateOidcPtrInput` via:
//
//	        ListenerRuleActionAuthenticateOidcArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleActionAuthenticateOidcPtrInput interface {
	pulumi.Input

	ToListenerRuleActionAuthenticateOidcPtrOutput() ListenerRuleActionAuthenticateOidcPtrOutput
	ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(context.Context) ListenerRuleActionAuthenticateOidcPtrOutput
}

type listenerRuleActionAuthenticateOidcPtrType ListenerRuleActionAuthenticateOidcArgs

func ListenerRuleActionAuthenticateOidcPtr(v *ListenerRuleActionAuthenticateOidcArgs) ListenerRuleActionAuthenticateOidcPtrInput {
	return (*listenerRuleActionAuthenticateOidcPtrType)(v)
}

func (*listenerRuleActionAuthenticateOidcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionAuthenticateOidc)(nil)).Elem()
}

func (i *listenerRuleActionAuthenticateOidcPtrType) ToListenerRuleActionAuthenticateOidcPtrOutput() ListenerRuleActionAuthenticateOidcPtrOutput {
	return i.ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(context.Background())
}

func (i *listenerRuleActionAuthenticateOidcPtrType) ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionAuthenticateOidcPtrOutput)
}

type ListenerRuleActionAuthenticateOidcOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionAuthenticateOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionAuthenticateOidc)(nil)).Elem()
}

func (o ListenerRuleActionAuthenticateOidcOutput) ToListenerRuleActionAuthenticateOidcOutput() ListenerRuleActionAuthenticateOidcOutput {
	return o
}

func (o ListenerRuleActionAuthenticateOidcOutput) ToListenerRuleActionAuthenticateOidcOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateOidcOutput {
	return o
}

func (o ListenerRuleActionAuthenticateOidcOutput) ToListenerRuleActionAuthenticateOidcPtrOutput() ListenerRuleActionAuthenticateOidcPtrOutput {
	return o.ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(context.Background())
}

func (o ListenerRuleActionAuthenticateOidcOutput) ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateOidcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleActionAuthenticateOidc) *ListenerRuleActionAuthenticateOidc {
		return &v
	}).(ListenerRuleActionAuthenticateOidcPtrOutput)
}

// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
func (o ListenerRuleActionAuthenticateOidcOutput) AuthenticationRequestExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) map[string]string {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.StringMapOutput)
}

// The authorization endpoint of the IdP.
func (o ListenerRuleActionAuthenticateOidcOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

// The OAuth 2.0 client identifier.
func (o ListenerRuleActionAuthenticateOidcOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.ClientId }).(pulumi.StringOutput)
}

// The OAuth 2.0 client secret.
func (o ListenerRuleActionAuthenticateOidcOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The OIDC issuer identifier of the IdP.
func (o ListenerRuleActionAuthenticateOidcOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.Issuer }).(pulumi.StringOutput)
}

// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
func (o ListenerRuleActionAuthenticateOidcOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

// The set of user claims to be requested from the IdP.
func (o ListenerRuleActionAuthenticateOidcOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The name of the cookie used to maintain session information.
func (o ListenerRuleActionAuthenticateOidcOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

// The maximum duration of the authentication session, in seconds.
func (o ListenerRuleActionAuthenticateOidcOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

// The token endpoint of the IdP.
func (o ListenerRuleActionAuthenticateOidcOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

// The user info endpoint of the IdP.
func (o ListenerRuleActionAuthenticateOidcOutput) UserInfoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.UserInfoEndpoint }).(pulumi.StringOutput)
}

type ListenerRuleActionAuthenticateOidcPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionAuthenticateOidcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionAuthenticateOidc)(nil)).Elem()
}

func (o ListenerRuleActionAuthenticateOidcPtrOutput) ToListenerRuleActionAuthenticateOidcPtrOutput() ListenerRuleActionAuthenticateOidcPtrOutput {
	return o
}

func (o ListenerRuleActionAuthenticateOidcPtrOutput) ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateOidcPtrOutput {
	return o
}

func (o ListenerRuleActionAuthenticateOidcPtrOutput) Elem() ListenerRuleActionAuthenticateOidcOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateOidc) ListenerRuleActionAuthenticateOidc {
		if v != nil {
			return *v
		}
		var ret ListenerRuleActionAuthenticateOidc
		return ret
	}).(ListenerRuleActionAuthenticateOidcOutput)
}

// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) AuthenticationRequestExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateOidc) map[string]string {
		if v == nil {
			return nil
		}
		return v.AuthenticationRequestExtraParams
	}).(pulumi.StringMapOutput)
}

// The authorization endpoint of the IdP.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 client identifier.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 client secret.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The OIDC issuer identifier of the IdP.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
func (o ListenerRuleActionAuthenticateOidcPtrOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return v.OnUnauthenticatedRequest
	}).(pulumi.StringPtrOutput)
}

// The set of user claims to be requested from the IdP.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The name of the cookie used to maintain session information.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return v.SessionCookieName
	}).(pulumi.StringPtrOutput)
}

// The maximum duration of the authentication session, in seconds.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateOidc) *int {
		if v == nil {
			return nil
		}
		return v.SessionTimeout
	}).(pulumi.IntPtrOutput)
}

// The token endpoint of the IdP.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return &v.TokenEndpoint
	}).(pulumi.StringPtrOutput)
}

// The user info endpoint of the IdP.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) UserInfoEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateOidc) *string {
		if v == nil {
			return nil
		}
		return &v.UserInfoEndpoint
	}).(pulumi.StringPtrOutput)
}

type ListenerRuleActionFixedResponse struct {
	// The content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
	ContentType string `pulumi:"contentType"`
	// The message body.
	MessageBody *string `pulumi:"messageBody"`
	// The HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
	StatusCode *string `pulumi:"statusCode"`
}

// ListenerRuleActionFixedResponseInput is an input type that accepts ListenerRuleActionFixedResponseArgs and ListenerRuleActionFixedResponseOutput values.
// You can construct a concrete instance of `ListenerRuleActionFixedResponseInput` via:
//
//	ListenerRuleActionFixedResponseArgs{...}
type ListenerRuleActionFixedResponseInput interface {
	pulumi.Input

	ToListenerRuleActionFixedResponseOutput() ListenerRuleActionFixedResponseOutput
	ToListenerRuleActionFixedResponseOutputWithContext(context.Context) ListenerRuleActionFixedResponseOutput
}

type ListenerRuleActionFixedResponseArgs struct {
	// The content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// The message body.
	MessageBody pulumi.StringPtrInput `pulumi:"messageBody"`
	// The HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
}

func (ListenerRuleActionFixedResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionFixedResponse)(nil)).Elem()
}

func (i ListenerRuleActionFixedResponseArgs) ToListenerRuleActionFixedResponseOutput() ListenerRuleActionFixedResponseOutput {
	return i.ToListenerRuleActionFixedResponseOutputWithContext(context.Background())
}

func (i ListenerRuleActionFixedResponseArgs) ToListenerRuleActionFixedResponseOutputWithContext(ctx context.Context) ListenerRuleActionFixedResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionFixedResponseOutput)
}

func (i ListenerRuleActionFixedResponseArgs) ToListenerRuleActionFixedResponsePtrOutput() ListenerRuleActionFixedResponsePtrOutput {
	return i.ToListenerRuleActionFixedResponsePtrOutputWithContext(context.Background())
}

func (i ListenerRuleActionFixedResponseArgs) ToListenerRuleActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerRuleActionFixedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionFixedResponseOutput).ToListenerRuleActionFixedResponsePtrOutputWithContext(ctx)
}

// ListenerRuleActionFixedResponsePtrInput is an input type that accepts ListenerRuleActionFixedResponseArgs, ListenerRuleActionFixedResponsePtr and ListenerRuleActionFixedResponsePtrOutput values.
// You can construct a concrete instance of `ListenerRuleActionFixedResponsePtrInput` via:
//
//	        ListenerRuleActionFixedResponseArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleActionFixedResponsePtrInput interface {
	pulumi.Input

	ToListenerRuleActionFixedResponsePtrOutput() ListenerRuleActionFixedResponsePtrOutput
	ToListenerRuleActionFixedResponsePtrOutputWithContext(context.Context) ListenerRuleActionFixedResponsePtrOutput
}

type listenerRuleActionFixedResponsePtrType ListenerRuleActionFixedResponseArgs

func ListenerRuleActionFixedResponsePtr(v *ListenerRuleActionFixedResponseArgs) ListenerRuleActionFixedResponsePtrInput {
	return (*listenerRuleActionFixedResponsePtrType)(v)
}

func (*listenerRuleActionFixedResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionFixedResponse)(nil)).Elem()
}

func (i *listenerRuleActionFixedResponsePtrType) ToListenerRuleActionFixedResponsePtrOutput() ListenerRuleActionFixedResponsePtrOutput {
	return i.ToListenerRuleActionFixedResponsePtrOutputWithContext(context.Background())
}

func (i *listenerRuleActionFixedResponsePtrType) ToListenerRuleActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerRuleActionFixedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionFixedResponsePtrOutput)
}

type ListenerRuleActionFixedResponseOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionFixedResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionFixedResponse)(nil)).Elem()
}

func (o ListenerRuleActionFixedResponseOutput) ToListenerRuleActionFixedResponseOutput() ListenerRuleActionFixedResponseOutput {
	return o
}

func (o ListenerRuleActionFixedResponseOutput) ToListenerRuleActionFixedResponseOutputWithContext(ctx context.Context) ListenerRuleActionFixedResponseOutput {
	return o
}

func (o ListenerRuleActionFixedResponseOutput) ToListenerRuleActionFixedResponsePtrOutput() ListenerRuleActionFixedResponsePtrOutput {
	return o.ToListenerRuleActionFixedResponsePtrOutputWithContext(context.Background())
}

func (o ListenerRuleActionFixedResponseOutput) ToListenerRuleActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerRuleActionFixedResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleActionFixedResponse) *ListenerRuleActionFixedResponse {
		return &v
	}).(ListenerRuleActionFixedResponsePtrOutput)
}

// The content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
func (o ListenerRuleActionFixedResponseOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionFixedResponse) string { return v.ContentType }).(pulumi.StringOutput)
}

// The message body.
func (o ListenerRuleActionFixedResponseOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionFixedResponse) *string { return v.MessageBody }).(pulumi.StringPtrOutput)
}

// The HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
func (o ListenerRuleActionFixedResponseOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionFixedResponse) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

type ListenerRuleActionFixedResponsePtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionFixedResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionFixedResponse)(nil)).Elem()
}

func (o ListenerRuleActionFixedResponsePtrOutput) ToListenerRuleActionFixedResponsePtrOutput() ListenerRuleActionFixedResponsePtrOutput {
	return o
}

func (o ListenerRuleActionFixedResponsePtrOutput) ToListenerRuleActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerRuleActionFixedResponsePtrOutput {
	return o
}

func (o ListenerRuleActionFixedResponsePtrOutput) Elem() ListenerRuleActionFixedResponseOutput {
	return o.ApplyT(func(v *ListenerRuleActionFixedResponse) ListenerRuleActionFixedResponse {
		if v != nil {
			return *v
		}
		var ret ListenerRuleActionFixedResponse
		return ret
	}).(ListenerRuleActionFixedResponseOutput)
}

// The content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
func (o ListenerRuleActionFixedResponsePtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionFixedResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ContentType
	}).(pulumi.StringPtrOutput)
}

// The message body.
func (o ListenerRuleActionFixedResponsePtrOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionFixedResponse) *string {
		if v == nil {
			return nil
		}
		return v.MessageBody
	}).(pulumi.StringPtrOutput)
}

// The HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
func (o ListenerRuleActionFixedResponsePtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionFixedResponse) *string {
		if v == nil {
			return nil
		}
		return v.StatusCode
	}).(pulumi.StringPtrOutput)
}

type ListenerRuleActionForward struct {
	// The target group stickiness for the rule.
	Stickiness *ListenerRuleActionForwardStickiness `pulumi:"stickiness"`
	// One or more target groups block.
	TargetGroups []ListenerRuleActionForwardTargetGroup `pulumi:"targetGroups"`
}

// ListenerRuleActionForwardInput is an input type that accepts ListenerRuleActionForwardArgs and ListenerRuleActionForwardOutput values.
// You can construct a concrete instance of `ListenerRuleActionForwardInput` via:
//
//	ListenerRuleActionForwardArgs{...}
type ListenerRuleActionForwardInput interface {
	pulumi.Input

	ToListenerRuleActionForwardOutput() ListenerRuleActionForwardOutput
	ToListenerRuleActionForwardOutputWithContext(context.Context) ListenerRuleActionForwardOutput
}

type ListenerRuleActionForwardArgs struct {
	// The target group stickiness for the rule.
	Stickiness ListenerRuleActionForwardStickinessPtrInput `pulumi:"stickiness"`
	// One or more target groups block.
	TargetGroups ListenerRuleActionForwardTargetGroupArrayInput `pulumi:"targetGroups"`
}

func (ListenerRuleActionForwardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionForward)(nil)).Elem()
}

func (i ListenerRuleActionForwardArgs) ToListenerRuleActionForwardOutput() ListenerRuleActionForwardOutput {
	return i.ToListenerRuleActionForwardOutputWithContext(context.Background())
}

func (i ListenerRuleActionForwardArgs) ToListenerRuleActionForwardOutputWithContext(ctx context.Context) ListenerRuleActionForwardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionForwardOutput)
}

func (i ListenerRuleActionForwardArgs) ToListenerRuleActionForwardPtrOutput() ListenerRuleActionForwardPtrOutput {
	return i.ToListenerRuleActionForwardPtrOutputWithContext(context.Background())
}

func (i ListenerRuleActionForwardArgs) ToListenerRuleActionForwardPtrOutputWithContext(ctx context.Context) ListenerRuleActionForwardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionForwardOutput).ToListenerRuleActionForwardPtrOutputWithContext(ctx)
}

// ListenerRuleActionForwardPtrInput is an input type that accepts ListenerRuleActionForwardArgs, ListenerRuleActionForwardPtr and ListenerRuleActionForwardPtrOutput values.
// You can construct a concrete instance of `ListenerRuleActionForwardPtrInput` via:
//
//	        ListenerRuleActionForwardArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleActionForwardPtrInput interface {
	pulumi.Input

	ToListenerRuleActionForwardPtrOutput() ListenerRuleActionForwardPtrOutput
	ToListenerRuleActionForwardPtrOutputWithContext(context.Context) ListenerRuleActionForwardPtrOutput
}

type listenerRuleActionForwardPtrType ListenerRuleActionForwardArgs

func ListenerRuleActionForwardPtr(v *ListenerRuleActionForwardArgs) ListenerRuleActionForwardPtrInput {
	return (*listenerRuleActionForwardPtrType)(v)
}

func (*listenerRuleActionForwardPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionForward)(nil)).Elem()
}

func (i *listenerRuleActionForwardPtrType) ToListenerRuleActionForwardPtrOutput() ListenerRuleActionForwardPtrOutput {
	return i.ToListenerRuleActionForwardPtrOutputWithContext(context.Background())
}

func (i *listenerRuleActionForwardPtrType) ToListenerRuleActionForwardPtrOutputWithContext(ctx context.Context) ListenerRuleActionForwardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionForwardPtrOutput)
}

type ListenerRuleActionForwardOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionForwardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionForward)(nil)).Elem()
}

func (o ListenerRuleActionForwardOutput) ToListenerRuleActionForwardOutput() ListenerRuleActionForwardOutput {
	return o
}

func (o ListenerRuleActionForwardOutput) ToListenerRuleActionForwardOutputWithContext(ctx context.Context) ListenerRuleActionForwardOutput {
	return o
}

func (o ListenerRuleActionForwardOutput) ToListenerRuleActionForwardPtrOutput() ListenerRuleActionForwardPtrOutput {
	return o.ToListenerRuleActionForwardPtrOutputWithContext(context.Background())
}

func (o ListenerRuleActionForwardOutput) ToListenerRuleActionForwardPtrOutputWithContext(ctx context.Context) ListenerRuleActionForwardPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleActionForward) *ListenerRuleActionForward {
		return &v
	}).(ListenerRuleActionForwardPtrOutput)
}

// The target group stickiness for the rule.
func (o ListenerRuleActionForwardOutput) Stickiness() ListenerRuleActionForwardStickinessPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionForward) *ListenerRuleActionForwardStickiness { return v.Stickiness }).(ListenerRuleActionForwardStickinessPtrOutput)
}

// One or more target groups block.
func (o ListenerRuleActionForwardOutput) TargetGroups() ListenerRuleActionForwardTargetGroupArrayOutput {
	return o.ApplyT(func(v ListenerRuleActionForward) []ListenerRuleActionForwardTargetGroup { return v.TargetGroups }).(ListenerRuleActionForwardTargetGroupArrayOutput)
}

type ListenerRuleActionForwardPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionForwardPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionForward)(nil)).Elem()
}

func (o ListenerRuleActionForwardPtrOutput) ToListenerRuleActionForwardPtrOutput() ListenerRuleActionForwardPtrOutput {
	return o
}

func (o ListenerRuleActionForwardPtrOutput) ToListenerRuleActionForwardPtrOutputWithContext(ctx context.Context) ListenerRuleActionForwardPtrOutput {
	return o
}

func (o ListenerRuleActionForwardPtrOutput) Elem() ListenerRuleActionForwardOutput {
	return o.ApplyT(func(v *ListenerRuleActionForward) ListenerRuleActionForward {
		if v != nil {
			return *v
		}
		var ret ListenerRuleActionForward
		return ret
	}).(ListenerRuleActionForwardOutput)
}

// The target group stickiness for the rule.
func (o ListenerRuleActionForwardPtrOutput) Stickiness() ListenerRuleActionForwardStickinessPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionForward) *ListenerRuleActionForwardStickiness {
		if v == nil {
			return nil
		}
		return v.Stickiness
	}).(ListenerRuleActionForwardStickinessPtrOutput)
}

// One or more target groups block.
func (o ListenerRuleActionForwardPtrOutput) TargetGroups() ListenerRuleActionForwardTargetGroupArrayOutput {
	return o.ApplyT(func(v *ListenerRuleActionForward) []ListenerRuleActionForwardTargetGroup {
		if v == nil {
			return nil
		}
		return v.TargetGroups
	}).(ListenerRuleActionForwardTargetGroupArrayOutput)
}

type ListenerRuleActionForwardStickiness struct {
	// The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
	Duration int `pulumi:"duration"`
	// Indicates whether target group stickiness is enabled.
	Enabled *bool `pulumi:"enabled"`
}

// ListenerRuleActionForwardStickinessInput is an input type that accepts ListenerRuleActionForwardStickinessArgs and ListenerRuleActionForwardStickinessOutput values.
// You can construct a concrete instance of `ListenerRuleActionForwardStickinessInput` via:
//
//	ListenerRuleActionForwardStickinessArgs{...}
type ListenerRuleActionForwardStickinessInput interface {
	pulumi.Input

	ToListenerRuleActionForwardStickinessOutput() ListenerRuleActionForwardStickinessOutput
	ToListenerRuleActionForwardStickinessOutputWithContext(context.Context) ListenerRuleActionForwardStickinessOutput
}

type ListenerRuleActionForwardStickinessArgs struct {
	// The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
	Duration pulumi.IntInput `pulumi:"duration"`
	// Indicates whether target group stickiness is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ListenerRuleActionForwardStickinessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionForwardStickiness)(nil)).Elem()
}

func (i ListenerRuleActionForwardStickinessArgs) ToListenerRuleActionForwardStickinessOutput() ListenerRuleActionForwardStickinessOutput {
	return i.ToListenerRuleActionForwardStickinessOutputWithContext(context.Background())
}

func (i ListenerRuleActionForwardStickinessArgs) ToListenerRuleActionForwardStickinessOutputWithContext(ctx context.Context) ListenerRuleActionForwardStickinessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionForwardStickinessOutput)
}

func (i ListenerRuleActionForwardStickinessArgs) ToListenerRuleActionForwardStickinessPtrOutput() ListenerRuleActionForwardStickinessPtrOutput {
	return i.ToListenerRuleActionForwardStickinessPtrOutputWithContext(context.Background())
}

func (i ListenerRuleActionForwardStickinessArgs) ToListenerRuleActionForwardStickinessPtrOutputWithContext(ctx context.Context) ListenerRuleActionForwardStickinessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionForwardStickinessOutput).ToListenerRuleActionForwardStickinessPtrOutputWithContext(ctx)
}

// ListenerRuleActionForwardStickinessPtrInput is an input type that accepts ListenerRuleActionForwardStickinessArgs, ListenerRuleActionForwardStickinessPtr and ListenerRuleActionForwardStickinessPtrOutput values.
// You can construct a concrete instance of `ListenerRuleActionForwardStickinessPtrInput` via:
//
//	        ListenerRuleActionForwardStickinessArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleActionForwardStickinessPtrInput interface {
	pulumi.Input

	ToListenerRuleActionForwardStickinessPtrOutput() ListenerRuleActionForwardStickinessPtrOutput
	ToListenerRuleActionForwardStickinessPtrOutputWithContext(context.Context) ListenerRuleActionForwardStickinessPtrOutput
}

type listenerRuleActionForwardStickinessPtrType ListenerRuleActionForwardStickinessArgs

func ListenerRuleActionForwardStickinessPtr(v *ListenerRuleActionForwardStickinessArgs) ListenerRuleActionForwardStickinessPtrInput {
	return (*listenerRuleActionForwardStickinessPtrType)(v)
}

func (*listenerRuleActionForwardStickinessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionForwardStickiness)(nil)).Elem()
}

func (i *listenerRuleActionForwardStickinessPtrType) ToListenerRuleActionForwardStickinessPtrOutput() ListenerRuleActionForwardStickinessPtrOutput {
	return i.ToListenerRuleActionForwardStickinessPtrOutputWithContext(context.Background())
}

func (i *listenerRuleActionForwardStickinessPtrType) ToListenerRuleActionForwardStickinessPtrOutputWithContext(ctx context.Context) ListenerRuleActionForwardStickinessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionForwardStickinessPtrOutput)
}

type ListenerRuleActionForwardStickinessOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionForwardStickinessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionForwardStickiness)(nil)).Elem()
}

func (o ListenerRuleActionForwardStickinessOutput) ToListenerRuleActionForwardStickinessOutput() ListenerRuleActionForwardStickinessOutput {
	return o
}

func (o ListenerRuleActionForwardStickinessOutput) ToListenerRuleActionForwardStickinessOutputWithContext(ctx context.Context) ListenerRuleActionForwardStickinessOutput {
	return o
}

func (o ListenerRuleActionForwardStickinessOutput) ToListenerRuleActionForwardStickinessPtrOutput() ListenerRuleActionForwardStickinessPtrOutput {
	return o.ToListenerRuleActionForwardStickinessPtrOutputWithContext(context.Background())
}

func (o ListenerRuleActionForwardStickinessOutput) ToListenerRuleActionForwardStickinessPtrOutputWithContext(ctx context.Context) ListenerRuleActionForwardStickinessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleActionForwardStickiness) *ListenerRuleActionForwardStickiness {
		return &v
	}).(ListenerRuleActionForwardStickinessPtrOutput)
}

// The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
func (o ListenerRuleActionForwardStickinessOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerRuleActionForwardStickiness) int { return v.Duration }).(pulumi.IntOutput)
}

// Indicates whether target group stickiness is enabled.
func (o ListenerRuleActionForwardStickinessOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionForwardStickiness) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ListenerRuleActionForwardStickinessPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionForwardStickinessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionForwardStickiness)(nil)).Elem()
}

func (o ListenerRuleActionForwardStickinessPtrOutput) ToListenerRuleActionForwardStickinessPtrOutput() ListenerRuleActionForwardStickinessPtrOutput {
	return o
}

func (o ListenerRuleActionForwardStickinessPtrOutput) ToListenerRuleActionForwardStickinessPtrOutputWithContext(ctx context.Context) ListenerRuleActionForwardStickinessPtrOutput {
	return o
}

func (o ListenerRuleActionForwardStickinessPtrOutput) Elem() ListenerRuleActionForwardStickinessOutput {
	return o.ApplyT(func(v *ListenerRuleActionForwardStickiness) ListenerRuleActionForwardStickiness {
		if v != nil {
			return *v
		}
		var ret ListenerRuleActionForwardStickiness
		return ret
	}).(ListenerRuleActionForwardStickinessOutput)
}

// The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
func (o ListenerRuleActionForwardStickinessPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionForwardStickiness) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

// Indicates whether target group stickiness is enabled.
func (o ListenerRuleActionForwardStickinessPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionForwardStickiness) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ListenerRuleActionForwardTargetGroup struct {
	// The Amazon Resource Name (ARN) of the target group.
	Arn string `pulumi:"arn"`
	// The weight. The range is 0 to 999.
	Weight *int `pulumi:"weight"`
}

// ListenerRuleActionForwardTargetGroupInput is an input type that accepts ListenerRuleActionForwardTargetGroupArgs and ListenerRuleActionForwardTargetGroupOutput values.
// You can construct a concrete instance of `ListenerRuleActionForwardTargetGroupInput` via:
//
//	ListenerRuleActionForwardTargetGroupArgs{...}
type ListenerRuleActionForwardTargetGroupInput interface {
	pulumi.Input

	ToListenerRuleActionForwardTargetGroupOutput() ListenerRuleActionForwardTargetGroupOutput
	ToListenerRuleActionForwardTargetGroupOutputWithContext(context.Context) ListenerRuleActionForwardTargetGroupOutput
}

type ListenerRuleActionForwardTargetGroupArgs struct {
	// The Amazon Resource Name (ARN) of the target group.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The weight. The range is 0 to 999.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (ListenerRuleActionForwardTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionForwardTargetGroup)(nil)).Elem()
}

func (i ListenerRuleActionForwardTargetGroupArgs) ToListenerRuleActionForwardTargetGroupOutput() ListenerRuleActionForwardTargetGroupOutput {
	return i.ToListenerRuleActionForwardTargetGroupOutputWithContext(context.Background())
}

func (i ListenerRuleActionForwardTargetGroupArgs) ToListenerRuleActionForwardTargetGroupOutputWithContext(ctx context.Context) ListenerRuleActionForwardTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionForwardTargetGroupOutput)
}

// ListenerRuleActionForwardTargetGroupArrayInput is an input type that accepts ListenerRuleActionForwardTargetGroupArray and ListenerRuleActionForwardTargetGroupArrayOutput values.
// You can construct a concrete instance of `ListenerRuleActionForwardTargetGroupArrayInput` via:
//
//	ListenerRuleActionForwardTargetGroupArray{ ListenerRuleActionForwardTargetGroupArgs{...} }
type ListenerRuleActionForwardTargetGroupArrayInput interface {
	pulumi.Input

	ToListenerRuleActionForwardTargetGroupArrayOutput() ListenerRuleActionForwardTargetGroupArrayOutput
	ToListenerRuleActionForwardTargetGroupArrayOutputWithContext(context.Context) ListenerRuleActionForwardTargetGroupArrayOutput
}

type ListenerRuleActionForwardTargetGroupArray []ListenerRuleActionForwardTargetGroupInput

func (ListenerRuleActionForwardTargetGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleActionForwardTargetGroup)(nil)).Elem()
}

func (i ListenerRuleActionForwardTargetGroupArray) ToListenerRuleActionForwardTargetGroupArrayOutput() ListenerRuleActionForwardTargetGroupArrayOutput {
	return i.ToListenerRuleActionForwardTargetGroupArrayOutputWithContext(context.Background())
}

func (i ListenerRuleActionForwardTargetGroupArray) ToListenerRuleActionForwardTargetGroupArrayOutputWithContext(ctx context.Context) ListenerRuleActionForwardTargetGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionForwardTargetGroupArrayOutput)
}

type ListenerRuleActionForwardTargetGroupOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionForwardTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionForwardTargetGroup)(nil)).Elem()
}

func (o ListenerRuleActionForwardTargetGroupOutput) ToListenerRuleActionForwardTargetGroupOutput() ListenerRuleActionForwardTargetGroupOutput {
	return o
}

func (o ListenerRuleActionForwardTargetGroupOutput) ToListenerRuleActionForwardTargetGroupOutputWithContext(ctx context.Context) ListenerRuleActionForwardTargetGroupOutput {
	return o
}

// The Amazon Resource Name (ARN) of the target group.
func (o ListenerRuleActionForwardTargetGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionForwardTargetGroup) string { return v.Arn }).(pulumi.StringOutput)
}

// The weight. The range is 0 to 999.
func (o ListenerRuleActionForwardTargetGroupOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionForwardTargetGroup) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ListenerRuleActionForwardTargetGroupArrayOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionForwardTargetGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleActionForwardTargetGroup)(nil)).Elem()
}

func (o ListenerRuleActionForwardTargetGroupArrayOutput) ToListenerRuleActionForwardTargetGroupArrayOutput() ListenerRuleActionForwardTargetGroupArrayOutput {
	return o
}

func (o ListenerRuleActionForwardTargetGroupArrayOutput) ToListenerRuleActionForwardTargetGroupArrayOutputWithContext(ctx context.Context) ListenerRuleActionForwardTargetGroupArrayOutput {
	return o
}

func (o ListenerRuleActionForwardTargetGroupArrayOutput) Index(i pulumi.IntInput) ListenerRuleActionForwardTargetGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerRuleActionForwardTargetGroup {
		return vs[0].([]ListenerRuleActionForwardTargetGroup)[vs[1].(int)]
	}).(ListenerRuleActionForwardTargetGroupOutput)
}

type ListenerRuleActionRedirect struct {
	// The hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
	Host *string `pulumi:"host"`
	// The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
	Path *string `pulumi:"path"`
	// The port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
	Port *string `pulumi:"port"`
	// The protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
	Protocol *string `pulumi:"protocol"`
	// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
	Query *string `pulumi:"query"`
	// The HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
	StatusCode string `pulumi:"statusCode"`
}

// ListenerRuleActionRedirectInput is an input type that accepts ListenerRuleActionRedirectArgs and ListenerRuleActionRedirectOutput values.
// You can construct a concrete instance of `ListenerRuleActionRedirectInput` via:
//
//	ListenerRuleActionRedirectArgs{...}
type ListenerRuleActionRedirectInput interface {
	pulumi.Input

	ToListenerRuleActionRedirectOutput() ListenerRuleActionRedirectOutput
	ToListenerRuleActionRedirectOutputWithContext(context.Context) ListenerRuleActionRedirectOutput
}

type ListenerRuleActionRedirectArgs struct {
	// The hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// The HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (ListenerRuleActionRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionRedirect)(nil)).Elem()
}

func (i ListenerRuleActionRedirectArgs) ToListenerRuleActionRedirectOutput() ListenerRuleActionRedirectOutput {
	return i.ToListenerRuleActionRedirectOutputWithContext(context.Background())
}

func (i ListenerRuleActionRedirectArgs) ToListenerRuleActionRedirectOutputWithContext(ctx context.Context) ListenerRuleActionRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionRedirectOutput)
}

func (i ListenerRuleActionRedirectArgs) ToListenerRuleActionRedirectPtrOutput() ListenerRuleActionRedirectPtrOutput {
	return i.ToListenerRuleActionRedirectPtrOutputWithContext(context.Background())
}

func (i ListenerRuleActionRedirectArgs) ToListenerRuleActionRedirectPtrOutputWithContext(ctx context.Context) ListenerRuleActionRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionRedirectOutput).ToListenerRuleActionRedirectPtrOutputWithContext(ctx)
}

// ListenerRuleActionRedirectPtrInput is an input type that accepts ListenerRuleActionRedirectArgs, ListenerRuleActionRedirectPtr and ListenerRuleActionRedirectPtrOutput values.
// You can construct a concrete instance of `ListenerRuleActionRedirectPtrInput` via:
//
//	        ListenerRuleActionRedirectArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleActionRedirectPtrInput interface {
	pulumi.Input

	ToListenerRuleActionRedirectPtrOutput() ListenerRuleActionRedirectPtrOutput
	ToListenerRuleActionRedirectPtrOutputWithContext(context.Context) ListenerRuleActionRedirectPtrOutput
}

type listenerRuleActionRedirectPtrType ListenerRuleActionRedirectArgs

func ListenerRuleActionRedirectPtr(v *ListenerRuleActionRedirectArgs) ListenerRuleActionRedirectPtrInput {
	return (*listenerRuleActionRedirectPtrType)(v)
}

func (*listenerRuleActionRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionRedirect)(nil)).Elem()
}

func (i *listenerRuleActionRedirectPtrType) ToListenerRuleActionRedirectPtrOutput() ListenerRuleActionRedirectPtrOutput {
	return i.ToListenerRuleActionRedirectPtrOutputWithContext(context.Background())
}

func (i *listenerRuleActionRedirectPtrType) ToListenerRuleActionRedirectPtrOutputWithContext(ctx context.Context) ListenerRuleActionRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionRedirectPtrOutput)
}

type ListenerRuleActionRedirectOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionRedirect)(nil)).Elem()
}

func (o ListenerRuleActionRedirectOutput) ToListenerRuleActionRedirectOutput() ListenerRuleActionRedirectOutput {
	return o
}

func (o ListenerRuleActionRedirectOutput) ToListenerRuleActionRedirectOutputWithContext(ctx context.Context) ListenerRuleActionRedirectOutput {
	return o
}

func (o ListenerRuleActionRedirectOutput) ToListenerRuleActionRedirectPtrOutput() ListenerRuleActionRedirectPtrOutput {
	return o.ToListenerRuleActionRedirectPtrOutputWithContext(context.Background())
}

func (o ListenerRuleActionRedirectOutput) ToListenerRuleActionRedirectPtrOutputWithContext(ctx context.Context) ListenerRuleActionRedirectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleActionRedirect) *ListenerRuleActionRedirect {
		return &v
	}).(ListenerRuleActionRedirectPtrOutput)
}

// The hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
func (o ListenerRuleActionRedirectOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
func (o ListenerRuleActionRedirectOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
func (o ListenerRuleActionRedirectOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
func (o ListenerRuleActionRedirectOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
func (o ListenerRuleActionRedirectOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// The HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
func (o ListenerRuleActionRedirectOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) string { return v.StatusCode }).(pulumi.StringOutput)
}

type ListenerRuleActionRedirectPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionRedirect)(nil)).Elem()
}

func (o ListenerRuleActionRedirectPtrOutput) ToListenerRuleActionRedirectPtrOutput() ListenerRuleActionRedirectPtrOutput {
	return o
}

func (o ListenerRuleActionRedirectPtrOutput) ToListenerRuleActionRedirectPtrOutputWithContext(ctx context.Context) ListenerRuleActionRedirectPtrOutput {
	return o
}

func (o ListenerRuleActionRedirectPtrOutput) Elem() ListenerRuleActionRedirectOutput {
	return o.ApplyT(func(v *ListenerRuleActionRedirect) ListenerRuleActionRedirect {
		if v != nil {
			return *v
		}
		var ret ListenerRuleActionRedirect
		return ret
	}).(ListenerRuleActionRedirectOutput)
}

// The hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
func (o ListenerRuleActionRedirectPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
func (o ListenerRuleActionRedirectPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
func (o ListenerRuleActionRedirectPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// The protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
func (o ListenerRuleActionRedirectPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
func (o ListenerRuleActionRedirectPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// The HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
func (o ListenerRuleActionRedirectPtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleActionRedirect) *string {
		if v == nil {
			return nil
		}
		return &v.StatusCode
	}).(pulumi.StringPtrOutput)
}

type ListenerRuleCondition struct {
	// Contains a single `values` item which is a list of host header patterns to match. The maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied.
	HostHeader *ListenerRuleConditionHostHeader `pulumi:"hostHeader"`
	// HTTP headers to match. HTTP Header block fields documented below.
	HttpHeader *ListenerRuleConditionHttpHeader `pulumi:"httpHeader"`
	// Contains a single `values` item which is a list of HTTP request methods or verbs to match. Maximum size is 40 characters. Only allowed characters are A-Z, hyphen (-) and underscore (\_). Comparison is case sensitive. Wildcards are not supported. Only one needs to match for the condition to be satisfied. AWS recommends that GET and HEAD requests are routed in the same way because the response to a HEAD request may be cached.
	HttpRequestMethod *ListenerRuleConditionHttpRequestMethod `pulumi:"httpRequestMethod"`
	// Contains a single `values` item which is a list of path patterns to match against the request URL. Maximum size of each pattern is 128 characters. Comparison is case sensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied. Path pattern is compared only to the path of the URL, not to its query string. To compare against the query string, use a `queryString` condition.
	PathPattern *ListenerRuleConditionPathPattern `pulumi:"pathPattern"`
	// Query strings to match. Query String block fields documented below.
	QueryStrings []ListenerRuleConditionQueryString `pulumi:"queryStrings"`
	// Contains a single `values` item which is a list of source IP CIDR notations to match. You can use both IPv4 and IPv6 addresses. Wildcards are not supported. Condition is satisfied if the source IP address of the request matches one of the CIDR blocks. Condition is not satisfied by the addresses in the `X-Forwarded-For` header, use `httpHeader` condition instead.
	//
	// > **NOTE::** Exactly one of `hostHeader`, `httpHeader`, `httpRequestMethod`, `pathPattern`, `queryString` or `sourceIp` must be set per condition.
	SourceIp *ListenerRuleConditionSourceIp `pulumi:"sourceIp"`
}

// ListenerRuleConditionInput is an input type that accepts ListenerRuleConditionArgs and ListenerRuleConditionOutput values.
// You can construct a concrete instance of `ListenerRuleConditionInput` via:
//
//	ListenerRuleConditionArgs{...}
type ListenerRuleConditionInput interface {
	pulumi.Input

	ToListenerRuleConditionOutput() ListenerRuleConditionOutput
	ToListenerRuleConditionOutputWithContext(context.Context) ListenerRuleConditionOutput
}

type ListenerRuleConditionArgs struct {
	// Contains a single `values` item which is a list of host header patterns to match. The maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied.
	HostHeader ListenerRuleConditionHostHeaderPtrInput `pulumi:"hostHeader"`
	// HTTP headers to match. HTTP Header block fields documented below.
	HttpHeader ListenerRuleConditionHttpHeaderPtrInput `pulumi:"httpHeader"`
	// Contains a single `values` item which is a list of HTTP request methods or verbs to match. Maximum size is 40 characters. Only allowed characters are A-Z, hyphen (-) and underscore (\_). Comparison is case sensitive. Wildcards are not supported. Only one needs to match for the condition to be satisfied. AWS recommends that GET and HEAD requests are routed in the same way because the response to a HEAD request may be cached.
	HttpRequestMethod ListenerRuleConditionHttpRequestMethodPtrInput `pulumi:"httpRequestMethod"`
	// Contains a single `values` item which is a list of path patterns to match against the request URL. Maximum size of each pattern is 128 characters. Comparison is case sensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied. Path pattern is compared only to the path of the URL, not to its query string. To compare against the query string, use a `queryString` condition.
	PathPattern ListenerRuleConditionPathPatternPtrInput `pulumi:"pathPattern"`
	// Query strings to match. Query String block fields documented below.
	QueryStrings ListenerRuleConditionQueryStringArrayInput `pulumi:"queryStrings"`
	// Contains a single `values` item which is a list of source IP CIDR notations to match. You can use both IPv4 and IPv6 addresses. Wildcards are not supported. Condition is satisfied if the source IP address of the request matches one of the CIDR blocks. Condition is not satisfied by the addresses in the `X-Forwarded-For` header, use `httpHeader` condition instead.
	//
	// > **NOTE::** Exactly one of `hostHeader`, `httpHeader`, `httpRequestMethod`, `pathPattern`, `queryString` or `sourceIp` must be set per condition.
	SourceIp ListenerRuleConditionSourceIpPtrInput `pulumi:"sourceIp"`
}

func (ListenerRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleCondition)(nil)).Elem()
}

func (i ListenerRuleConditionArgs) ToListenerRuleConditionOutput() ListenerRuleConditionOutput {
	return i.ToListenerRuleConditionOutputWithContext(context.Background())
}

func (i ListenerRuleConditionArgs) ToListenerRuleConditionOutputWithContext(ctx context.Context) ListenerRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionOutput)
}

// ListenerRuleConditionArrayInput is an input type that accepts ListenerRuleConditionArray and ListenerRuleConditionArrayOutput values.
// You can construct a concrete instance of `ListenerRuleConditionArrayInput` via:
//
//	ListenerRuleConditionArray{ ListenerRuleConditionArgs{...} }
type ListenerRuleConditionArrayInput interface {
	pulumi.Input

	ToListenerRuleConditionArrayOutput() ListenerRuleConditionArrayOutput
	ToListenerRuleConditionArrayOutputWithContext(context.Context) ListenerRuleConditionArrayOutput
}

type ListenerRuleConditionArray []ListenerRuleConditionInput

func (ListenerRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleCondition)(nil)).Elem()
}

func (i ListenerRuleConditionArray) ToListenerRuleConditionArrayOutput() ListenerRuleConditionArrayOutput {
	return i.ToListenerRuleConditionArrayOutputWithContext(context.Background())
}

func (i ListenerRuleConditionArray) ToListenerRuleConditionArrayOutputWithContext(ctx context.Context) ListenerRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionArrayOutput)
}

type ListenerRuleConditionOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleCondition)(nil)).Elem()
}

func (o ListenerRuleConditionOutput) ToListenerRuleConditionOutput() ListenerRuleConditionOutput {
	return o
}

func (o ListenerRuleConditionOutput) ToListenerRuleConditionOutputWithContext(ctx context.Context) ListenerRuleConditionOutput {
	return o
}

// Contains a single `values` item which is a list of host header patterns to match. The maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied.
func (o ListenerRuleConditionOutput) HostHeader() ListenerRuleConditionHostHeaderPtrOutput {
	return o.ApplyT(func(v ListenerRuleCondition) *ListenerRuleConditionHostHeader { return v.HostHeader }).(ListenerRuleConditionHostHeaderPtrOutput)
}

// HTTP headers to match. HTTP Header block fields documented below.
func (o ListenerRuleConditionOutput) HttpHeader() ListenerRuleConditionHttpHeaderPtrOutput {
	return o.ApplyT(func(v ListenerRuleCondition) *ListenerRuleConditionHttpHeader { return v.HttpHeader }).(ListenerRuleConditionHttpHeaderPtrOutput)
}

// Contains a single `values` item which is a list of HTTP request methods or verbs to match. Maximum size is 40 characters. Only allowed characters are A-Z, hyphen (-) and underscore (\_). Comparison is case sensitive. Wildcards are not supported. Only one needs to match for the condition to be satisfied. AWS recommends that GET and HEAD requests are routed in the same way because the response to a HEAD request may be cached.
func (o ListenerRuleConditionOutput) HttpRequestMethod() ListenerRuleConditionHttpRequestMethodPtrOutput {
	return o.ApplyT(func(v ListenerRuleCondition) *ListenerRuleConditionHttpRequestMethod { return v.HttpRequestMethod }).(ListenerRuleConditionHttpRequestMethodPtrOutput)
}

// Contains a single `values` item which is a list of path patterns to match against the request URL. Maximum size of each pattern is 128 characters. Comparison is case sensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied. Path pattern is compared only to the path of the URL, not to its query string. To compare against the query string, use a `queryString` condition.
func (o ListenerRuleConditionOutput) PathPattern() ListenerRuleConditionPathPatternPtrOutput {
	return o.ApplyT(func(v ListenerRuleCondition) *ListenerRuleConditionPathPattern { return v.PathPattern }).(ListenerRuleConditionPathPatternPtrOutput)
}

// Query strings to match. Query String block fields documented below.
func (o ListenerRuleConditionOutput) QueryStrings() ListenerRuleConditionQueryStringArrayOutput {
	return o.ApplyT(func(v ListenerRuleCondition) []ListenerRuleConditionQueryString { return v.QueryStrings }).(ListenerRuleConditionQueryStringArrayOutput)
}

// Contains a single `values` item which is a list of source IP CIDR notations to match. You can use both IPv4 and IPv6 addresses. Wildcards are not supported. Condition is satisfied if the source IP address of the request matches one of the CIDR blocks. Condition is not satisfied by the addresses in the `X-Forwarded-For` header, use `httpHeader` condition instead.
//
// > **NOTE::** Exactly one of `hostHeader`, `httpHeader`, `httpRequestMethod`, `pathPattern`, `queryString` or `sourceIp` must be set per condition.
func (o ListenerRuleConditionOutput) SourceIp() ListenerRuleConditionSourceIpPtrOutput {
	return o.ApplyT(func(v ListenerRuleCondition) *ListenerRuleConditionSourceIp { return v.SourceIp }).(ListenerRuleConditionSourceIpPtrOutput)
}

type ListenerRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleCondition)(nil)).Elem()
}

func (o ListenerRuleConditionArrayOutput) ToListenerRuleConditionArrayOutput() ListenerRuleConditionArrayOutput {
	return o
}

func (o ListenerRuleConditionArrayOutput) ToListenerRuleConditionArrayOutputWithContext(ctx context.Context) ListenerRuleConditionArrayOutput {
	return o
}

func (o ListenerRuleConditionArrayOutput) Index(i pulumi.IntInput) ListenerRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerRuleCondition {
		return vs[0].([]ListenerRuleCondition)[vs[1].(int)]
	}).(ListenerRuleConditionOutput)
}

type ListenerRuleConditionHostHeader struct {
	// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
	Values []string `pulumi:"values"`
}

// ListenerRuleConditionHostHeaderInput is an input type that accepts ListenerRuleConditionHostHeaderArgs and ListenerRuleConditionHostHeaderOutput values.
// You can construct a concrete instance of `ListenerRuleConditionHostHeaderInput` via:
//
//	ListenerRuleConditionHostHeaderArgs{...}
type ListenerRuleConditionHostHeaderInput interface {
	pulumi.Input

	ToListenerRuleConditionHostHeaderOutput() ListenerRuleConditionHostHeaderOutput
	ToListenerRuleConditionHostHeaderOutputWithContext(context.Context) ListenerRuleConditionHostHeaderOutput
}

type ListenerRuleConditionHostHeaderArgs struct {
	// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleConditionHostHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionHostHeader)(nil)).Elem()
}

func (i ListenerRuleConditionHostHeaderArgs) ToListenerRuleConditionHostHeaderOutput() ListenerRuleConditionHostHeaderOutput {
	return i.ToListenerRuleConditionHostHeaderOutputWithContext(context.Background())
}

func (i ListenerRuleConditionHostHeaderArgs) ToListenerRuleConditionHostHeaderOutputWithContext(ctx context.Context) ListenerRuleConditionHostHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHostHeaderOutput)
}

func (i ListenerRuleConditionHostHeaderArgs) ToListenerRuleConditionHostHeaderPtrOutput() ListenerRuleConditionHostHeaderPtrOutput {
	return i.ToListenerRuleConditionHostHeaderPtrOutputWithContext(context.Background())
}

func (i ListenerRuleConditionHostHeaderArgs) ToListenerRuleConditionHostHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHostHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHostHeaderOutput).ToListenerRuleConditionHostHeaderPtrOutputWithContext(ctx)
}

// ListenerRuleConditionHostHeaderPtrInput is an input type that accepts ListenerRuleConditionHostHeaderArgs, ListenerRuleConditionHostHeaderPtr and ListenerRuleConditionHostHeaderPtrOutput values.
// You can construct a concrete instance of `ListenerRuleConditionHostHeaderPtrInput` via:
//
//	        ListenerRuleConditionHostHeaderArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleConditionHostHeaderPtrInput interface {
	pulumi.Input

	ToListenerRuleConditionHostHeaderPtrOutput() ListenerRuleConditionHostHeaderPtrOutput
	ToListenerRuleConditionHostHeaderPtrOutputWithContext(context.Context) ListenerRuleConditionHostHeaderPtrOutput
}

type listenerRuleConditionHostHeaderPtrType ListenerRuleConditionHostHeaderArgs

func ListenerRuleConditionHostHeaderPtr(v *ListenerRuleConditionHostHeaderArgs) ListenerRuleConditionHostHeaderPtrInput {
	return (*listenerRuleConditionHostHeaderPtrType)(v)
}

func (*listenerRuleConditionHostHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionHostHeader)(nil)).Elem()
}

func (i *listenerRuleConditionHostHeaderPtrType) ToListenerRuleConditionHostHeaderPtrOutput() ListenerRuleConditionHostHeaderPtrOutput {
	return i.ToListenerRuleConditionHostHeaderPtrOutputWithContext(context.Background())
}

func (i *listenerRuleConditionHostHeaderPtrType) ToListenerRuleConditionHostHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHostHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHostHeaderPtrOutput)
}

type ListenerRuleConditionHostHeaderOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionHostHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionHostHeader)(nil)).Elem()
}

func (o ListenerRuleConditionHostHeaderOutput) ToListenerRuleConditionHostHeaderOutput() ListenerRuleConditionHostHeaderOutput {
	return o
}

func (o ListenerRuleConditionHostHeaderOutput) ToListenerRuleConditionHostHeaderOutputWithContext(ctx context.Context) ListenerRuleConditionHostHeaderOutput {
	return o
}

func (o ListenerRuleConditionHostHeaderOutput) ToListenerRuleConditionHostHeaderPtrOutput() ListenerRuleConditionHostHeaderPtrOutput {
	return o.ToListenerRuleConditionHostHeaderPtrOutputWithContext(context.Background())
}

func (o ListenerRuleConditionHostHeaderOutput) ToListenerRuleConditionHostHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHostHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleConditionHostHeader) *ListenerRuleConditionHostHeader {
		return &v
	}).(ListenerRuleConditionHostHeaderPtrOutput)
}

// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
func (o ListenerRuleConditionHostHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionHostHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionHostHeaderPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionHostHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionHostHeader)(nil)).Elem()
}

func (o ListenerRuleConditionHostHeaderPtrOutput) ToListenerRuleConditionHostHeaderPtrOutput() ListenerRuleConditionHostHeaderPtrOutput {
	return o
}

func (o ListenerRuleConditionHostHeaderPtrOutput) ToListenerRuleConditionHostHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHostHeaderPtrOutput {
	return o
}

func (o ListenerRuleConditionHostHeaderPtrOutput) Elem() ListenerRuleConditionHostHeaderOutput {
	return o.ApplyT(func(v *ListenerRuleConditionHostHeader) ListenerRuleConditionHostHeader {
		if v != nil {
			return *v
		}
		var ret ListenerRuleConditionHostHeader
		return ret
	}).(ListenerRuleConditionHostHeaderOutput)
}

// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
func (o ListenerRuleConditionHostHeaderPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ListenerRuleConditionHostHeader) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionHttpHeader struct {
	// Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a `host-header` condition instead.
	HttpHeaderName string `pulumi:"httpHeaderName"`
	// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
	Values []string `pulumi:"values"`
}

// ListenerRuleConditionHttpHeaderInput is an input type that accepts ListenerRuleConditionHttpHeaderArgs and ListenerRuleConditionHttpHeaderOutput values.
// You can construct a concrete instance of `ListenerRuleConditionHttpHeaderInput` via:
//
//	ListenerRuleConditionHttpHeaderArgs{...}
type ListenerRuleConditionHttpHeaderInput interface {
	pulumi.Input

	ToListenerRuleConditionHttpHeaderOutput() ListenerRuleConditionHttpHeaderOutput
	ToListenerRuleConditionHttpHeaderOutputWithContext(context.Context) ListenerRuleConditionHttpHeaderOutput
}

type ListenerRuleConditionHttpHeaderArgs struct {
	// Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a `host-header` condition instead.
	HttpHeaderName pulumi.StringInput `pulumi:"httpHeaderName"`
	// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleConditionHttpHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionHttpHeader)(nil)).Elem()
}

func (i ListenerRuleConditionHttpHeaderArgs) ToListenerRuleConditionHttpHeaderOutput() ListenerRuleConditionHttpHeaderOutput {
	return i.ToListenerRuleConditionHttpHeaderOutputWithContext(context.Background())
}

func (i ListenerRuleConditionHttpHeaderArgs) ToListenerRuleConditionHttpHeaderOutputWithContext(ctx context.Context) ListenerRuleConditionHttpHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHttpHeaderOutput)
}

func (i ListenerRuleConditionHttpHeaderArgs) ToListenerRuleConditionHttpHeaderPtrOutput() ListenerRuleConditionHttpHeaderPtrOutput {
	return i.ToListenerRuleConditionHttpHeaderPtrOutputWithContext(context.Background())
}

func (i ListenerRuleConditionHttpHeaderArgs) ToListenerRuleConditionHttpHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHttpHeaderOutput).ToListenerRuleConditionHttpHeaderPtrOutputWithContext(ctx)
}

// ListenerRuleConditionHttpHeaderPtrInput is an input type that accepts ListenerRuleConditionHttpHeaderArgs, ListenerRuleConditionHttpHeaderPtr and ListenerRuleConditionHttpHeaderPtrOutput values.
// You can construct a concrete instance of `ListenerRuleConditionHttpHeaderPtrInput` via:
//
//	        ListenerRuleConditionHttpHeaderArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleConditionHttpHeaderPtrInput interface {
	pulumi.Input

	ToListenerRuleConditionHttpHeaderPtrOutput() ListenerRuleConditionHttpHeaderPtrOutput
	ToListenerRuleConditionHttpHeaderPtrOutputWithContext(context.Context) ListenerRuleConditionHttpHeaderPtrOutput
}

type listenerRuleConditionHttpHeaderPtrType ListenerRuleConditionHttpHeaderArgs

func ListenerRuleConditionHttpHeaderPtr(v *ListenerRuleConditionHttpHeaderArgs) ListenerRuleConditionHttpHeaderPtrInput {
	return (*listenerRuleConditionHttpHeaderPtrType)(v)
}

func (*listenerRuleConditionHttpHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionHttpHeader)(nil)).Elem()
}

func (i *listenerRuleConditionHttpHeaderPtrType) ToListenerRuleConditionHttpHeaderPtrOutput() ListenerRuleConditionHttpHeaderPtrOutput {
	return i.ToListenerRuleConditionHttpHeaderPtrOutputWithContext(context.Background())
}

func (i *listenerRuleConditionHttpHeaderPtrType) ToListenerRuleConditionHttpHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHttpHeaderPtrOutput)
}

type ListenerRuleConditionHttpHeaderOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionHttpHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionHttpHeader)(nil)).Elem()
}

func (o ListenerRuleConditionHttpHeaderOutput) ToListenerRuleConditionHttpHeaderOutput() ListenerRuleConditionHttpHeaderOutput {
	return o
}

func (o ListenerRuleConditionHttpHeaderOutput) ToListenerRuleConditionHttpHeaderOutputWithContext(ctx context.Context) ListenerRuleConditionHttpHeaderOutput {
	return o
}

func (o ListenerRuleConditionHttpHeaderOutput) ToListenerRuleConditionHttpHeaderPtrOutput() ListenerRuleConditionHttpHeaderPtrOutput {
	return o.ToListenerRuleConditionHttpHeaderPtrOutputWithContext(context.Background())
}

func (o ListenerRuleConditionHttpHeaderOutput) ToListenerRuleConditionHttpHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleConditionHttpHeader) *ListenerRuleConditionHttpHeader {
		return &v
	}).(ListenerRuleConditionHttpHeaderPtrOutput)
}

// Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a `host-header` condition instead.
func (o ListenerRuleConditionHttpHeaderOutput) HttpHeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleConditionHttpHeader) string { return v.HttpHeaderName }).(pulumi.StringOutput)
}

// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
func (o ListenerRuleConditionHttpHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionHttpHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionHttpHeaderPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionHttpHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionHttpHeader)(nil)).Elem()
}

func (o ListenerRuleConditionHttpHeaderPtrOutput) ToListenerRuleConditionHttpHeaderPtrOutput() ListenerRuleConditionHttpHeaderPtrOutput {
	return o
}

func (o ListenerRuleConditionHttpHeaderPtrOutput) ToListenerRuleConditionHttpHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpHeaderPtrOutput {
	return o
}

func (o ListenerRuleConditionHttpHeaderPtrOutput) Elem() ListenerRuleConditionHttpHeaderOutput {
	return o.ApplyT(func(v *ListenerRuleConditionHttpHeader) ListenerRuleConditionHttpHeader {
		if v != nil {
			return *v
		}
		var ret ListenerRuleConditionHttpHeader
		return ret
	}).(ListenerRuleConditionHttpHeaderOutput)
}

// Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a `host-header` condition instead.
func (o ListenerRuleConditionHttpHeaderPtrOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleConditionHttpHeader) *string {
		if v == nil {
			return nil
		}
		return &v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
func (o ListenerRuleConditionHttpHeaderPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ListenerRuleConditionHttpHeader) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionHttpRequestMethod struct {
	// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
	Values []string `pulumi:"values"`
}

// ListenerRuleConditionHttpRequestMethodInput is an input type that accepts ListenerRuleConditionHttpRequestMethodArgs and ListenerRuleConditionHttpRequestMethodOutput values.
// You can construct a concrete instance of `ListenerRuleConditionHttpRequestMethodInput` via:
//
//	ListenerRuleConditionHttpRequestMethodArgs{...}
type ListenerRuleConditionHttpRequestMethodInput interface {
	pulumi.Input

	ToListenerRuleConditionHttpRequestMethodOutput() ListenerRuleConditionHttpRequestMethodOutput
	ToListenerRuleConditionHttpRequestMethodOutputWithContext(context.Context) ListenerRuleConditionHttpRequestMethodOutput
}

type ListenerRuleConditionHttpRequestMethodArgs struct {
	// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleConditionHttpRequestMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionHttpRequestMethod)(nil)).Elem()
}

func (i ListenerRuleConditionHttpRequestMethodArgs) ToListenerRuleConditionHttpRequestMethodOutput() ListenerRuleConditionHttpRequestMethodOutput {
	return i.ToListenerRuleConditionHttpRequestMethodOutputWithContext(context.Background())
}

func (i ListenerRuleConditionHttpRequestMethodArgs) ToListenerRuleConditionHttpRequestMethodOutputWithContext(ctx context.Context) ListenerRuleConditionHttpRequestMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHttpRequestMethodOutput)
}

func (i ListenerRuleConditionHttpRequestMethodArgs) ToListenerRuleConditionHttpRequestMethodPtrOutput() ListenerRuleConditionHttpRequestMethodPtrOutput {
	return i.ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(context.Background())
}

func (i ListenerRuleConditionHttpRequestMethodArgs) ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpRequestMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHttpRequestMethodOutput).ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(ctx)
}

// ListenerRuleConditionHttpRequestMethodPtrInput is an input type that accepts ListenerRuleConditionHttpRequestMethodArgs, ListenerRuleConditionHttpRequestMethodPtr and ListenerRuleConditionHttpRequestMethodPtrOutput values.
// You can construct a concrete instance of `ListenerRuleConditionHttpRequestMethodPtrInput` via:
//
//	        ListenerRuleConditionHttpRequestMethodArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleConditionHttpRequestMethodPtrInput interface {
	pulumi.Input

	ToListenerRuleConditionHttpRequestMethodPtrOutput() ListenerRuleConditionHttpRequestMethodPtrOutput
	ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(context.Context) ListenerRuleConditionHttpRequestMethodPtrOutput
}

type listenerRuleConditionHttpRequestMethodPtrType ListenerRuleConditionHttpRequestMethodArgs

func ListenerRuleConditionHttpRequestMethodPtr(v *ListenerRuleConditionHttpRequestMethodArgs) ListenerRuleConditionHttpRequestMethodPtrInput {
	return (*listenerRuleConditionHttpRequestMethodPtrType)(v)
}

func (*listenerRuleConditionHttpRequestMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionHttpRequestMethod)(nil)).Elem()
}

func (i *listenerRuleConditionHttpRequestMethodPtrType) ToListenerRuleConditionHttpRequestMethodPtrOutput() ListenerRuleConditionHttpRequestMethodPtrOutput {
	return i.ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(context.Background())
}

func (i *listenerRuleConditionHttpRequestMethodPtrType) ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpRequestMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHttpRequestMethodPtrOutput)
}

type ListenerRuleConditionHttpRequestMethodOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionHttpRequestMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionHttpRequestMethod)(nil)).Elem()
}

func (o ListenerRuleConditionHttpRequestMethodOutput) ToListenerRuleConditionHttpRequestMethodOutput() ListenerRuleConditionHttpRequestMethodOutput {
	return o
}

func (o ListenerRuleConditionHttpRequestMethodOutput) ToListenerRuleConditionHttpRequestMethodOutputWithContext(ctx context.Context) ListenerRuleConditionHttpRequestMethodOutput {
	return o
}

func (o ListenerRuleConditionHttpRequestMethodOutput) ToListenerRuleConditionHttpRequestMethodPtrOutput() ListenerRuleConditionHttpRequestMethodPtrOutput {
	return o.ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(context.Background())
}

func (o ListenerRuleConditionHttpRequestMethodOutput) ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpRequestMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleConditionHttpRequestMethod) *ListenerRuleConditionHttpRequestMethod {
		return &v
	}).(ListenerRuleConditionHttpRequestMethodPtrOutput)
}

// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
func (o ListenerRuleConditionHttpRequestMethodOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionHttpRequestMethod) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionHttpRequestMethodPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionHttpRequestMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionHttpRequestMethod)(nil)).Elem()
}

func (o ListenerRuleConditionHttpRequestMethodPtrOutput) ToListenerRuleConditionHttpRequestMethodPtrOutput() ListenerRuleConditionHttpRequestMethodPtrOutput {
	return o
}

func (o ListenerRuleConditionHttpRequestMethodPtrOutput) ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpRequestMethodPtrOutput {
	return o
}

func (o ListenerRuleConditionHttpRequestMethodPtrOutput) Elem() ListenerRuleConditionHttpRequestMethodOutput {
	return o.ApplyT(func(v *ListenerRuleConditionHttpRequestMethod) ListenerRuleConditionHttpRequestMethod {
		if v != nil {
			return *v
		}
		var ret ListenerRuleConditionHttpRequestMethod
		return ret
	}).(ListenerRuleConditionHttpRequestMethodOutput)
}

// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
func (o ListenerRuleConditionHttpRequestMethodPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ListenerRuleConditionHttpRequestMethod) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionPathPattern struct {
	// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
	Values []string `pulumi:"values"`
}

// ListenerRuleConditionPathPatternInput is an input type that accepts ListenerRuleConditionPathPatternArgs and ListenerRuleConditionPathPatternOutput values.
// You can construct a concrete instance of `ListenerRuleConditionPathPatternInput` via:
//
//	ListenerRuleConditionPathPatternArgs{...}
type ListenerRuleConditionPathPatternInput interface {
	pulumi.Input

	ToListenerRuleConditionPathPatternOutput() ListenerRuleConditionPathPatternOutput
	ToListenerRuleConditionPathPatternOutputWithContext(context.Context) ListenerRuleConditionPathPatternOutput
}

type ListenerRuleConditionPathPatternArgs struct {
	// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleConditionPathPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionPathPattern)(nil)).Elem()
}

func (i ListenerRuleConditionPathPatternArgs) ToListenerRuleConditionPathPatternOutput() ListenerRuleConditionPathPatternOutput {
	return i.ToListenerRuleConditionPathPatternOutputWithContext(context.Background())
}

func (i ListenerRuleConditionPathPatternArgs) ToListenerRuleConditionPathPatternOutputWithContext(ctx context.Context) ListenerRuleConditionPathPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionPathPatternOutput)
}

func (i ListenerRuleConditionPathPatternArgs) ToListenerRuleConditionPathPatternPtrOutput() ListenerRuleConditionPathPatternPtrOutput {
	return i.ToListenerRuleConditionPathPatternPtrOutputWithContext(context.Background())
}

func (i ListenerRuleConditionPathPatternArgs) ToListenerRuleConditionPathPatternPtrOutputWithContext(ctx context.Context) ListenerRuleConditionPathPatternPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionPathPatternOutput).ToListenerRuleConditionPathPatternPtrOutputWithContext(ctx)
}

// ListenerRuleConditionPathPatternPtrInput is an input type that accepts ListenerRuleConditionPathPatternArgs, ListenerRuleConditionPathPatternPtr and ListenerRuleConditionPathPatternPtrOutput values.
// You can construct a concrete instance of `ListenerRuleConditionPathPatternPtrInput` via:
//
//	        ListenerRuleConditionPathPatternArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleConditionPathPatternPtrInput interface {
	pulumi.Input

	ToListenerRuleConditionPathPatternPtrOutput() ListenerRuleConditionPathPatternPtrOutput
	ToListenerRuleConditionPathPatternPtrOutputWithContext(context.Context) ListenerRuleConditionPathPatternPtrOutput
}

type listenerRuleConditionPathPatternPtrType ListenerRuleConditionPathPatternArgs

func ListenerRuleConditionPathPatternPtr(v *ListenerRuleConditionPathPatternArgs) ListenerRuleConditionPathPatternPtrInput {
	return (*listenerRuleConditionPathPatternPtrType)(v)
}

func (*listenerRuleConditionPathPatternPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionPathPattern)(nil)).Elem()
}

func (i *listenerRuleConditionPathPatternPtrType) ToListenerRuleConditionPathPatternPtrOutput() ListenerRuleConditionPathPatternPtrOutput {
	return i.ToListenerRuleConditionPathPatternPtrOutputWithContext(context.Background())
}

func (i *listenerRuleConditionPathPatternPtrType) ToListenerRuleConditionPathPatternPtrOutputWithContext(ctx context.Context) ListenerRuleConditionPathPatternPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionPathPatternPtrOutput)
}

type ListenerRuleConditionPathPatternOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionPathPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionPathPattern)(nil)).Elem()
}

func (o ListenerRuleConditionPathPatternOutput) ToListenerRuleConditionPathPatternOutput() ListenerRuleConditionPathPatternOutput {
	return o
}

func (o ListenerRuleConditionPathPatternOutput) ToListenerRuleConditionPathPatternOutputWithContext(ctx context.Context) ListenerRuleConditionPathPatternOutput {
	return o
}

func (o ListenerRuleConditionPathPatternOutput) ToListenerRuleConditionPathPatternPtrOutput() ListenerRuleConditionPathPatternPtrOutput {
	return o.ToListenerRuleConditionPathPatternPtrOutputWithContext(context.Background())
}

func (o ListenerRuleConditionPathPatternOutput) ToListenerRuleConditionPathPatternPtrOutputWithContext(ctx context.Context) ListenerRuleConditionPathPatternPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleConditionPathPattern) *ListenerRuleConditionPathPattern {
		return &v
	}).(ListenerRuleConditionPathPatternPtrOutput)
}

// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
func (o ListenerRuleConditionPathPatternOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionPathPattern) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionPathPatternPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionPathPatternPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionPathPattern)(nil)).Elem()
}

func (o ListenerRuleConditionPathPatternPtrOutput) ToListenerRuleConditionPathPatternPtrOutput() ListenerRuleConditionPathPatternPtrOutput {
	return o
}

func (o ListenerRuleConditionPathPatternPtrOutput) ToListenerRuleConditionPathPatternPtrOutputWithContext(ctx context.Context) ListenerRuleConditionPathPatternPtrOutput {
	return o
}

func (o ListenerRuleConditionPathPatternPtrOutput) Elem() ListenerRuleConditionPathPatternOutput {
	return o.ApplyT(func(v *ListenerRuleConditionPathPattern) ListenerRuleConditionPathPattern {
		if v != nil {
			return *v
		}
		var ret ListenerRuleConditionPathPattern
		return ret
	}).(ListenerRuleConditionPathPatternOutput)
}

// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
func (o ListenerRuleConditionPathPatternPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ListenerRuleConditionPathPattern) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionQueryString struct {
	// Query string key pattern to match.
	Key *string `pulumi:"key"`
	// Query string value pattern to match.
	Value string `pulumi:"value"`
}

// ListenerRuleConditionQueryStringInput is an input type that accepts ListenerRuleConditionQueryStringArgs and ListenerRuleConditionQueryStringOutput values.
// You can construct a concrete instance of `ListenerRuleConditionQueryStringInput` via:
//
//	ListenerRuleConditionQueryStringArgs{...}
type ListenerRuleConditionQueryStringInput interface {
	pulumi.Input

	ToListenerRuleConditionQueryStringOutput() ListenerRuleConditionQueryStringOutput
	ToListenerRuleConditionQueryStringOutputWithContext(context.Context) ListenerRuleConditionQueryStringOutput
}

type ListenerRuleConditionQueryStringArgs struct {
	// Query string key pattern to match.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Query string value pattern to match.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ListenerRuleConditionQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionQueryString)(nil)).Elem()
}

func (i ListenerRuleConditionQueryStringArgs) ToListenerRuleConditionQueryStringOutput() ListenerRuleConditionQueryStringOutput {
	return i.ToListenerRuleConditionQueryStringOutputWithContext(context.Background())
}

func (i ListenerRuleConditionQueryStringArgs) ToListenerRuleConditionQueryStringOutputWithContext(ctx context.Context) ListenerRuleConditionQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionQueryStringOutput)
}

// ListenerRuleConditionQueryStringArrayInput is an input type that accepts ListenerRuleConditionQueryStringArray and ListenerRuleConditionQueryStringArrayOutput values.
// You can construct a concrete instance of `ListenerRuleConditionQueryStringArrayInput` via:
//
//	ListenerRuleConditionQueryStringArray{ ListenerRuleConditionQueryStringArgs{...} }
type ListenerRuleConditionQueryStringArrayInput interface {
	pulumi.Input

	ToListenerRuleConditionQueryStringArrayOutput() ListenerRuleConditionQueryStringArrayOutput
	ToListenerRuleConditionQueryStringArrayOutputWithContext(context.Context) ListenerRuleConditionQueryStringArrayOutput
}

type ListenerRuleConditionQueryStringArray []ListenerRuleConditionQueryStringInput

func (ListenerRuleConditionQueryStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleConditionQueryString)(nil)).Elem()
}

func (i ListenerRuleConditionQueryStringArray) ToListenerRuleConditionQueryStringArrayOutput() ListenerRuleConditionQueryStringArrayOutput {
	return i.ToListenerRuleConditionQueryStringArrayOutputWithContext(context.Background())
}

func (i ListenerRuleConditionQueryStringArray) ToListenerRuleConditionQueryStringArrayOutputWithContext(ctx context.Context) ListenerRuleConditionQueryStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionQueryStringArrayOutput)
}

type ListenerRuleConditionQueryStringOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionQueryString)(nil)).Elem()
}

func (o ListenerRuleConditionQueryStringOutput) ToListenerRuleConditionQueryStringOutput() ListenerRuleConditionQueryStringOutput {
	return o
}

func (o ListenerRuleConditionQueryStringOutput) ToListenerRuleConditionQueryStringOutputWithContext(ctx context.Context) ListenerRuleConditionQueryStringOutput {
	return o
}

// Query string key pattern to match.
func (o ListenerRuleConditionQueryStringOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleConditionQueryString) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Query string value pattern to match.
func (o ListenerRuleConditionQueryStringOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleConditionQueryString) string { return v.Value }).(pulumi.StringOutput)
}

type ListenerRuleConditionQueryStringArrayOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionQueryStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleConditionQueryString)(nil)).Elem()
}

func (o ListenerRuleConditionQueryStringArrayOutput) ToListenerRuleConditionQueryStringArrayOutput() ListenerRuleConditionQueryStringArrayOutput {
	return o
}

func (o ListenerRuleConditionQueryStringArrayOutput) ToListenerRuleConditionQueryStringArrayOutputWithContext(ctx context.Context) ListenerRuleConditionQueryStringArrayOutput {
	return o
}

func (o ListenerRuleConditionQueryStringArrayOutput) Index(i pulumi.IntInput) ListenerRuleConditionQueryStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerRuleConditionQueryString {
		return vs[0].([]ListenerRuleConditionQueryString)[vs[1].(int)]
	}).(ListenerRuleConditionQueryStringOutput)
}

type ListenerRuleConditionSourceIp struct {
	// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
	Values []string `pulumi:"values"`
}

// ListenerRuleConditionSourceIpInput is an input type that accepts ListenerRuleConditionSourceIpArgs and ListenerRuleConditionSourceIpOutput values.
// You can construct a concrete instance of `ListenerRuleConditionSourceIpInput` via:
//
//	ListenerRuleConditionSourceIpArgs{...}
type ListenerRuleConditionSourceIpInput interface {
	pulumi.Input

	ToListenerRuleConditionSourceIpOutput() ListenerRuleConditionSourceIpOutput
	ToListenerRuleConditionSourceIpOutputWithContext(context.Context) ListenerRuleConditionSourceIpOutput
}

type ListenerRuleConditionSourceIpArgs struct {
	// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleConditionSourceIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionSourceIp)(nil)).Elem()
}

func (i ListenerRuleConditionSourceIpArgs) ToListenerRuleConditionSourceIpOutput() ListenerRuleConditionSourceIpOutput {
	return i.ToListenerRuleConditionSourceIpOutputWithContext(context.Background())
}

func (i ListenerRuleConditionSourceIpArgs) ToListenerRuleConditionSourceIpOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionSourceIpOutput)
}

func (i ListenerRuleConditionSourceIpArgs) ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput {
	return i.ToListenerRuleConditionSourceIpPtrOutputWithContext(context.Background())
}

func (i ListenerRuleConditionSourceIpArgs) ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionSourceIpOutput).ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx)
}

// ListenerRuleConditionSourceIpPtrInput is an input type that accepts ListenerRuleConditionSourceIpArgs, ListenerRuleConditionSourceIpPtr and ListenerRuleConditionSourceIpPtrOutput values.
// You can construct a concrete instance of `ListenerRuleConditionSourceIpPtrInput` via:
//
//	        ListenerRuleConditionSourceIpArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleConditionSourceIpPtrInput interface {
	pulumi.Input

	ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput
	ToListenerRuleConditionSourceIpPtrOutputWithContext(context.Context) ListenerRuleConditionSourceIpPtrOutput
}

type listenerRuleConditionSourceIpPtrType ListenerRuleConditionSourceIpArgs

func ListenerRuleConditionSourceIpPtr(v *ListenerRuleConditionSourceIpArgs) ListenerRuleConditionSourceIpPtrInput {
	return (*listenerRuleConditionSourceIpPtrType)(v)
}

func (*listenerRuleConditionSourceIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionSourceIp)(nil)).Elem()
}

func (i *listenerRuleConditionSourceIpPtrType) ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput {
	return i.ToListenerRuleConditionSourceIpPtrOutputWithContext(context.Background())
}

func (i *listenerRuleConditionSourceIpPtrType) ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionSourceIpPtrOutput)
}

type ListenerRuleConditionSourceIpOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionSourceIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionSourceIp)(nil)).Elem()
}

func (o ListenerRuleConditionSourceIpOutput) ToListenerRuleConditionSourceIpOutput() ListenerRuleConditionSourceIpOutput {
	return o
}

func (o ListenerRuleConditionSourceIpOutput) ToListenerRuleConditionSourceIpOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpOutput {
	return o
}

func (o ListenerRuleConditionSourceIpOutput) ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput {
	return o.ToListenerRuleConditionSourceIpPtrOutputWithContext(context.Background())
}

func (o ListenerRuleConditionSourceIpOutput) ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleConditionSourceIp) *ListenerRuleConditionSourceIp {
		return &v
	}).(ListenerRuleConditionSourceIpPtrOutput)
}

// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
func (o ListenerRuleConditionSourceIpOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionSourceIp) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionSourceIpPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionSourceIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionSourceIp)(nil)).Elem()
}

func (o ListenerRuleConditionSourceIpPtrOutput) ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput {
	return o
}

func (o ListenerRuleConditionSourceIpPtrOutput) ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpPtrOutput {
	return o
}

func (o ListenerRuleConditionSourceIpPtrOutput) Elem() ListenerRuleConditionSourceIpOutput {
	return o.ApplyT(func(v *ListenerRuleConditionSourceIp) ListenerRuleConditionSourceIp {
		if v != nil {
			return *v
		}
		var ret ListenerRuleConditionSourceIp
		return ret
	}).(ListenerRuleConditionSourceIpOutput)
}

// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
func (o ListenerRuleConditionSourceIpPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ListenerRuleConditionSourceIp) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type LoadBalancerAccessLogs struct {
	// The S3 bucket name to store the logs in.
	Bucket string `pulumi:"bucket"`
	// Boolean to enable / disable `accessLogs`. Defaults to `false`, even when `bucket` is specified.
	Enabled *bool `pulumi:"enabled"`
	// The S3 bucket prefix. Logs are stored in the root if not configured.
	Prefix *string `pulumi:"prefix"`
}

// LoadBalancerAccessLogsInput is an input type that accepts LoadBalancerAccessLogsArgs and LoadBalancerAccessLogsOutput values.
// You can construct a concrete instance of `LoadBalancerAccessLogsInput` via:
//
//	LoadBalancerAccessLogsArgs{...}
type LoadBalancerAccessLogsInput interface {
	pulumi.Input

	ToLoadBalancerAccessLogsOutput() LoadBalancerAccessLogsOutput
	ToLoadBalancerAccessLogsOutputWithContext(context.Context) LoadBalancerAccessLogsOutput
}

type LoadBalancerAccessLogsArgs struct {
	// The S3 bucket name to store the logs in.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Boolean to enable / disable `accessLogs`. Defaults to `false`, even when `bucket` is specified.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The S3 bucket prefix. Logs are stored in the root if not configured.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (LoadBalancerAccessLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAccessLogs)(nil)).Elem()
}

func (i LoadBalancerAccessLogsArgs) ToLoadBalancerAccessLogsOutput() LoadBalancerAccessLogsOutput {
	return i.ToLoadBalancerAccessLogsOutputWithContext(context.Background())
}

func (i LoadBalancerAccessLogsArgs) ToLoadBalancerAccessLogsOutputWithContext(ctx context.Context) LoadBalancerAccessLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAccessLogsOutput)
}

func (i LoadBalancerAccessLogsArgs) ToLoadBalancerAccessLogsPtrOutput() LoadBalancerAccessLogsPtrOutput {
	return i.ToLoadBalancerAccessLogsPtrOutputWithContext(context.Background())
}

func (i LoadBalancerAccessLogsArgs) ToLoadBalancerAccessLogsPtrOutputWithContext(ctx context.Context) LoadBalancerAccessLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAccessLogsOutput).ToLoadBalancerAccessLogsPtrOutputWithContext(ctx)
}

// LoadBalancerAccessLogsPtrInput is an input type that accepts LoadBalancerAccessLogsArgs, LoadBalancerAccessLogsPtr and LoadBalancerAccessLogsPtrOutput values.
// You can construct a concrete instance of `LoadBalancerAccessLogsPtrInput` via:
//
//	        LoadBalancerAccessLogsArgs{...}
//
//	or:
//
//	        nil
type LoadBalancerAccessLogsPtrInput interface {
	pulumi.Input

	ToLoadBalancerAccessLogsPtrOutput() LoadBalancerAccessLogsPtrOutput
	ToLoadBalancerAccessLogsPtrOutputWithContext(context.Context) LoadBalancerAccessLogsPtrOutput
}

type loadBalancerAccessLogsPtrType LoadBalancerAccessLogsArgs

func LoadBalancerAccessLogsPtr(v *LoadBalancerAccessLogsArgs) LoadBalancerAccessLogsPtrInput {
	return (*loadBalancerAccessLogsPtrType)(v)
}

func (*loadBalancerAccessLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerAccessLogs)(nil)).Elem()
}

func (i *loadBalancerAccessLogsPtrType) ToLoadBalancerAccessLogsPtrOutput() LoadBalancerAccessLogsPtrOutput {
	return i.ToLoadBalancerAccessLogsPtrOutputWithContext(context.Background())
}

func (i *loadBalancerAccessLogsPtrType) ToLoadBalancerAccessLogsPtrOutputWithContext(ctx context.Context) LoadBalancerAccessLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAccessLogsPtrOutput)
}

type LoadBalancerAccessLogsOutput struct{ *pulumi.OutputState }

func (LoadBalancerAccessLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAccessLogs)(nil)).Elem()
}

func (o LoadBalancerAccessLogsOutput) ToLoadBalancerAccessLogsOutput() LoadBalancerAccessLogsOutput {
	return o
}

func (o LoadBalancerAccessLogsOutput) ToLoadBalancerAccessLogsOutputWithContext(ctx context.Context) LoadBalancerAccessLogsOutput {
	return o
}

func (o LoadBalancerAccessLogsOutput) ToLoadBalancerAccessLogsPtrOutput() LoadBalancerAccessLogsPtrOutput {
	return o.ToLoadBalancerAccessLogsPtrOutputWithContext(context.Background())
}

func (o LoadBalancerAccessLogsOutput) ToLoadBalancerAccessLogsPtrOutputWithContext(ctx context.Context) LoadBalancerAccessLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerAccessLogs) *LoadBalancerAccessLogs {
		return &v
	}).(LoadBalancerAccessLogsPtrOutput)
}

// The S3 bucket name to store the logs in.
func (o LoadBalancerAccessLogsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerAccessLogs) string { return v.Bucket }).(pulumi.StringOutput)
}

// Boolean to enable / disable `accessLogs`. Defaults to `false`, even when `bucket` is specified.
func (o LoadBalancerAccessLogsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancerAccessLogs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The S3 bucket prefix. Logs are stored in the root if not configured.
func (o LoadBalancerAccessLogsOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAccessLogs) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type LoadBalancerAccessLogsPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerAccessLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerAccessLogs)(nil)).Elem()
}

func (o LoadBalancerAccessLogsPtrOutput) ToLoadBalancerAccessLogsPtrOutput() LoadBalancerAccessLogsPtrOutput {
	return o
}

func (o LoadBalancerAccessLogsPtrOutput) ToLoadBalancerAccessLogsPtrOutputWithContext(ctx context.Context) LoadBalancerAccessLogsPtrOutput {
	return o
}

func (o LoadBalancerAccessLogsPtrOutput) Elem() LoadBalancerAccessLogsOutput {
	return o.ApplyT(func(v *LoadBalancerAccessLogs) LoadBalancerAccessLogs {
		if v != nil {
			return *v
		}
		var ret LoadBalancerAccessLogs
		return ret
	}).(LoadBalancerAccessLogsOutput)
}

// The S3 bucket name to store the logs in.
func (o LoadBalancerAccessLogsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAccessLogs) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Boolean to enable / disable `accessLogs`. Defaults to `false`, even when `bucket` is specified.
func (o LoadBalancerAccessLogsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAccessLogs) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The S3 bucket prefix. Logs are stored in the root if not configured.
func (o LoadBalancerAccessLogsPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAccessLogs) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerConnectionLogs struct {
	// The S3 bucket name to store the logs in.
	Bucket string `pulumi:"bucket"`
	// Boolean to enable / disable `connectionLogs`. Defaults to `false`, even when `bucket` is specified.
	Enabled *bool `pulumi:"enabled"`
	// The S3 bucket prefix. Logs are stored in the root if not configured.
	Prefix *string `pulumi:"prefix"`
}

// LoadBalancerConnectionLogsInput is an input type that accepts LoadBalancerConnectionLogsArgs and LoadBalancerConnectionLogsOutput values.
// You can construct a concrete instance of `LoadBalancerConnectionLogsInput` via:
//
//	LoadBalancerConnectionLogsArgs{...}
type LoadBalancerConnectionLogsInput interface {
	pulumi.Input

	ToLoadBalancerConnectionLogsOutput() LoadBalancerConnectionLogsOutput
	ToLoadBalancerConnectionLogsOutputWithContext(context.Context) LoadBalancerConnectionLogsOutput
}

type LoadBalancerConnectionLogsArgs struct {
	// The S3 bucket name to store the logs in.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Boolean to enable / disable `connectionLogs`. Defaults to `false`, even when `bucket` is specified.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The S3 bucket prefix. Logs are stored in the root if not configured.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (LoadBalancerConnectionLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerConnectionLogs)(nil)).Elem()
}

func (i LoadBalancerConnectionLogsArgs) ToLoadBalancerConnectionLogsOutput() LoadBalancerConnectionLogsOutput {
	return i.ToLoadBalancerConnectionLogsOutputWithContext(context.Background())
}

func (i LoadBalancerConnectionLogsArgs) ToLoadBalancerConnectionLogsOutputWithContext(ctx context.Context) LoadBalancerConnectionLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerConnectionLogsOutput)
}

func (i LoadBalancerConnectionLogsArgs) ToLoadBalancerConnectionLogsPtrOutput() LoadBalancerConnectionLogsPtrOutput {
	return i.ToLoadBalancerConnectionLogsPtrOutputWithContext(context.Background())
}

func (i LoadBalancerConnectionLogsArgs) ToLoadBalancerConnectionLogsPtrOutputWithContext(ctx context.Context) LoadBalancerConnectionLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerConnectionLogsOutput).ToLoadBalancerConnectionLogsPtrOutputWithContext(ctx)
}

// LoadBalancerConnectionLogsPtrInput is an input type that accepts LoadBalancerConnectionLogsArgs, LoadBalancerConnectionLogsPtr and LoadBalancerConnectionLogsPtrOutput values.
// You can construct a concrete instance of `LoadBalancerConnectionLogsPtrInput` via:
//
//	        LoadBalancerConnectionLogsArgs{...}
//
//	or:
//
//	        nil
type LoadBalancerConnectionLogsPtrInput interface {
	pulumi.Input

	ToLoadBalancerConnectionLogsPtrOutput() LoadBalancerConnectionLogsPtrOutput
	ToLoadBalancerConnectionLogsPtrOutputWithContext(context.Context) LoadBalancerConnectionLogsPtrOutput
}

type loadBalancerConnectionLogsPtrType LoadBalancerConnectionLogsArgs

func LoadBalancerConnectionLogsPtr(v *LoadBalancerConnectionLogsArgs) LoadBalancerConnectionLogsPtrInput {
	return (*loadBalancerConnectionLogsPtrType)(v)
}

func (*loadBalancerConnectionLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerConnectionLogs)(nil)).Elem()
}

func (i *loadBalancerConnectionLogsPtrType) ToLoadBalancerConnectionLogsPtrOutput() LoadBalancerConnectionLogsPtrOutput {
	return i.ToLoadBalancerConnectionLogsPtrOutputWithContext(context.Background())
}

func (i *loadBalancerConnectionLogsPtrType) ToLoadBalancerConnectionLogsPtrOutputWithContext(ctx context.Context) LoadBalancerConnectionLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerConnectionLogsPtrOutput)
}

type LoadBalancerConnectionLogsOutput struct{ *pulumi.OutputState }

func (LoadBalancerConnectionLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerConnectionLogs)(nil)).Elem()
}

func (o LoadBalancerConnectionLogsOutput) ToLoadBalancerConnectionLogsOutput() LoadBalancerConnectionLogsOutput {
	return o
}

func (o LoadBalancerConnectionLogsOutput) ToLoadBalancerConnectionLogsOutputWithContext(ctx context.Context) LoadBalancerConnectionLogsOutput {
	return o
}

func (o LoadBalancerConnectionLogsOutput) ToLoadBalancerConnectionLogsPtrOutput() LoadBalancerConnectionLogsPtrOutput {
	return o.ToLoadBalancerConnectionLogsPtrOutputWithContext(context.Background())
}

func (o LoadBalancerConnectionLogsOutput) ToLoadBalancerConnectionLogsPtrOutputWithContext(ctx context.Context) LoadBalancerConnectionLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerConnectionLogs) *LoadBalancerConnectionLogs {
		return &v
	}).(LoadBalancerConnectionLogsPtrOutput)
}

// The S3 bucket name to store the logs in.
func (o LoadBalancerConnectionLogsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerConnectionLogs) string { return v.Bucket }).(pulumi.StringOutput)
}

// Boolean to enable / disable `connectionLogs`. Defaults to `false`, even when `bucket` is specified.
func (o LoadBalancerConnectionLogsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancerConnectionLogs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The S3 bucket prefix. Logs are stored in the root if not configured.
func (o LoadBalancerConnectionLogsOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerConnectionLogs) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type LoadBalancerConnectionLogsPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerConnectionLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerConnectionLogs)(nil)).Elem()
}

func (o LoadBalancerConnectionLogsPtrOutput) ToLoadBalancerConnectionLogsPtrOutput() LoadBalancerConnectionLogsPtrOutput {
	return o
}

func (o LoadBalancerConnectionLogsPtrOutput) ToLoadBalancerConnectionLogsPtrOutputWithContext(ctx context.Context) LoadBalancerConnectionLogsPtrOutput {
	return o
}

func (o LoadBalancerConnectionLogsPtrOutput) Elem() LoadBalancerConnectionLogsOutput {
	return o.ApplyT(func(v *LoadBalancerConnectionLogs) LoadBalancerConnectionLogs {
		if v != nil {
			return *v
		}
		var ret LoadBalancerConnectionLogs
		return ret
	}).(LoadBalancerConnectionLogsOutput)
}

// The S3 bucket name to store the logs in.
func (o LoadBalancerConnectionLogsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerConnectionLogs) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Boolean to enable / disable `connectionLogs`. Defaults to `false`, even when `bucket` is specified.
func (o LoadBalancerConnectionLogsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadBalancerConnectionLogs) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The S3 bucket prefix. Logs are stored in the root if not configured.
func (o LoadBalancerConnectionLogsPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerConnectionLogs) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerSubnetMapping struct {
	// The allocation ID of the Elastic IP address for an internet-facing load balancer.
	AllocationId *string `pulumi:"allocationId"`
	// The IPv6 address. You associate IPv6 CIDR blocks with your VPC and choose the subnets where you launch both internet-facing and internal Application Load Balancers or Network Load Balancers.
	Ipv6Address *string `pulumi:"ipv6Address"`
	OutpostId   *string `pulumi:"outpostId"`
	// The private IPv4 address for an internal load balancer.
	PrivateIpv4Address *string `pulumi:"privateIpv4Address"`
	// ID of the subnet of which to attach to the load balancer. You can specify only one subnet per Availability Zone.
	SubnetId string `pulumi:"subnetId"`
}

// LoadBalancerSubnetMappingInput is an input type that accepts LoadBalancerSubnetMappingArgs and LoadBalancerSubnetMappingOutput values.
// You can construct a concrete instance of `LoadBalancerSubnetMappingInput` via:
//
//	LoadBalancerSubnetMappingArgs{...}
type LoadBalancerSubnetMappingInput interface {
	pulumi.Input

	ToLoadBalancerSubnetMappingOutput() LoadBalancerSubnetMappingOutput
	ToLoadBalancerSubnetMappingOutputWithContext(context.Context) LoadBalancerSubnetMappingOutput
}

type LoadBalancerSubnetMappingArgs struct {
	// The allocation ID of the Elastic IP address for an internet-facing load balancer.
	AllocationId pulumi.StringPtrInput `pulumi:"allocationId"`
	// The IPv6 address. You associate IPv6 CIDR blocks with your VPC and choose the subnets where you launch both internet-facing and internal Application Load Balancers or Network Load Balancers.
	Ipv6Address pulumi.StringPtrInput `pulumi:"ipv6Address"`
	OutpostId   pulumi.StringPtrInput `pulumi:"outpostId"`
	// The private IPv4 address for an internal load balancer.
	PrivateIpv4Address pulumi.StringPtrInput `pulumi:"privateIpv4Address"`
	// ID of the subnet of which to attach to the load balancer. You can specify only one subnet per Availability Zone.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (LoadBalancerSubnetMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSubnetMapping)(nil)).Elem()
}

func (i LoadBalancerSubnetMappingArgs) ToLoadBalancerSubnetMappingOutput() LoadBalancerSubnetMappingOutput {
	return i.ToLoadBalancerSubnetMappingOutputWithContext(context.Background())
}

func (i LoadBalancerSubnetMappingArgs) ToLoadBalancerSubnetMappingOutputWithContext(ctx context.Context) LoadBalancerSubnetMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSubnetMappingOutput)
}

// LoadBalancerSubnetMappingArrayInput is an input type that accepts LoadBalancerSubnetMappingArray and LoadBalancerSubnetMappingArrayOutput values.
// You can construct a concrete instance of `LoadBalancerSubnetMappingArrayInput` via:
//
//	LoadBalancerSubnetMappingArray{ LoadBalancerSubnetMappingArgs{...} }
type LoadBalancerSubnetMappingArrayInput interface {
	pulumi.Input

	ToLoadBalancerSubnetMappingArrayOutput() LoadBalancerSubnetMappingArrayOutput
	ToLoadBalancerSubnetMappingArrayOutputWithContext(context.Context) LoadBalancerSubnetMappingArrayOutput
}

type LoadBalancerSubnetMappingArray []LoadBalancerSubnetMappingInput

func (LoadBalancerSubnetMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerSubnetMapping)(nil)).Elem()
}

func (i LoadBalancerSubnetMappingArray) ToLoadBalancerSubnetMappingArrayOutput() LoadBalancerSubnetMappingArrayOutput {
	return i.ToLoadBalancerSubnetMappingArrayOutputWithContext(context.Background())
}

func (i LoadBalancerSubnetMappingArray) ToLoadBalancerSubnetMappingArrayOutputWithContext(ctx context.Context) LoadBalancerSubnetMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSubnetMappingArrayOutput)
}

type LoadBalancerSubnetMappingOutput struct{ *pulumi.OutputState }

func (LoadBalancerSubnetMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSubnetMapping)(nil)).Elem()
}

func (o LoadBalancerSubnetMappingOutput) ToLoadBalancerSubnetMappingOutput() LoadBalancerSubnetMappingOutput {
	return o
}

func (o LoadBalancerSubnetMappingOutput) ToLoadBalancerSubnetMappingOutputWithContext(ctx context.Context) LoadBalancerSubnetMappingOutput {
	return o
}

// The allocation ID of the Elastic IP address for an internet-facing load balancer.
func (o LoadBalancerSubnetMappingOutput) AllocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSubnetMapping) *string { return v.AllocationId }).(pulumi.StringPtrOutput)
}

// The IPv6 address. You associate IPv6 CIDR blocks with your VPC and choose the subnets where you launch both internet-facing and internal Application Load Balancers or Network Load Balancers.
func (o LoadBalancerSubnetMappingOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSubnetMapping) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

func (o LoadBalancerSubnetMappingOutput) OutpostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSubnetMapping) *string { return v.OutpostId }).(pulumi.StringPtrOutput)
}

// The private IPv4 address for an internal load balancer.
func (o LoadBalancerSubnetMappingOutput) PrivateIpv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSubnetMapping) *string { return v.PrivateIpv4Address }).(pulumi.StringPtrOutput)
}

// ID of the subnet of which to attach to the load balancer. You can specify only one subnet per Availability Zone.
func (o LoadBalancerSubnetMappingOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerSubnetMapping) string { return v.SubnetId }).(pulumi.StringOutput)
}

type LoadBalancerSubnetMappingArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerSubnetMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerSubnetMapping)(nil)).Elem()
}

func (o LoadBalancerSubnetMappingArrayOutput) ToLoadBalancerSubnetMappingArrayOutput() LoadBalancerSubnetMappingArrayOutput {
	return o
}

func (o LoadBalancerSubnetMappingArrayOutput) ToLoadBalancerSubnetMappingArrayOutputWithContext(ctx context.Context) LoadBalancerSubnetMappingArrayOutput {
	return o
}

func (o LoadBalancerSubnetMappingArrayOutput) Index(i pulumi.IntInput) LoadBalancerSubnetMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerSubnetMapping {
		return vs[0].([]LoadBalancerSubnetMapping)[vs[1].(int)]
	}).(LoadBalancerSubnetMappingOutput)
}

type TargetGroupHealthCheck struct {
	// Whether health checks are enabled. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Number of consecutive health check successes required before considering a target healthy. The range is 2-10. Defaults to 3.
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// Approximate amount of time, in seconds, between health checks of an individual target. The range is 5-300. For `lambda` target groups, it needs to be greater than the timeout of the underlying `lambda`. Defaults to 30.
	Interval *int `pulumi:"interval"`
	// The HTTP or gRPC codes to use when checking for a successful response from a target.
	// The `health_check.protocol` must be one of `HTTP` or `HTTPS` or the `targetType` must be `lambda`.
	// Values can be comma-separated individual values (e.g., "200,202") or a range of values (e.g., "200-299").
	// * For gRPC-based target groups (i.e., the `protocol` is one of `HTTP` or `HTTPS` and the `protocolVersion` is `GRPC`), values can be between `0` and `99`. The default is `12`.
	// * When used with an Application Load Balancer (i.e., the `protocol` is one of `HTTP` or `HTTPS` and the `protocolVersion` is not `GRPC`), values can be between `200` and `499`. The default is `200`.
	// * When used with a Network Load Balancer (i.e., the `protocol` is one of `TCP`, `TCP_UDP`, `UDP`, or `TLS`), values can be between `200` and `599`. The default is `200-399`.
	// * When the `targetType` is `lambda`, values can be between `200` and `499`. The default is `200`.
	Matcher *string `pulumi:"matcher"`
	// Destination for the health check request. Required for HTTP/HTTPS ALB and HTTP NLB. Only applies to HTTP/HTTPS.
	// * For HTTP and HTTPS health checks, the default is `/`.
	// * For gRPC health checks, the default is `/Amazon Web Services.ALB/healthcheck`.
	Path *string `pulumi:"path"`
	// The port the load balancer uses when performing health checks on targets.
	// Valid values are either `traffic-port`, to use the same port as the target group, or a valid port number between `1` and `65536`.
	// Default is `traffic-port`.
	Port *string `pulumi:"port"`
	// Protocol the load balancer uses when performing health checks on targets.
	// Must be one of `TCP`, `HTTP`, or `HTTPS`.
	// The `TCP` protocol is not supported for health checks if the protocol of the target group is `HTTP` or `HTTPS`.
	// Default is `HTTP`.
	// Cannot be specified when the `targetType` is `lambda`.
	Protocol *string `pulumi:"protocol"`
	// Amount of time, in seconds, during which no response from a target means a failed health check. The range is 2–120 seconds. For target groups with a protocol of HTTP, the default is 6 seconds. For target groups with a protocol of TCP, TLS or HTTPS, the default is 10 seconds. For target groups with a protocol of GENEVE, the default is 5 seconds. If the target type is lambda, the default is 30 seconds.
	Timeout *int `pulumi:"timeout"`
	// Number of consecutive health check failures required before considering a target unhealthy. The range is 2-10. Defaults to 3.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// TargetGroupHealthCheckInput is an input type that accepts TargetGroupHealthCheckArgs and TargetGroupHealthCheckOutput values.
// You can construct a concrete instance of `TargetGroupHealthCheckInput` via:
//
//	TargetGroupHealthCheckArgs{...}
type TargetGroupHealthCheckInput interface {
	pulumi.Input

	ToTargetGroupHealthCheckOutput() TargetGroupHealthCheckOutput
	ToTargetGroupHealthCheckOutputWithContext(context.Context) TargetGroupHealthCheckOutput
}

type TargetGroupHealthCheckArgs struct {
	// Whether health checks are enabled. Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Number of consecutive health check successes required before considering a target healthy. The range is 2-10. Defaults to 3.
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// Approximate amount of time, in seconds, between health checks of an individual target. The range is 5-300. For `lambda` target groups, it needs to be greater than the timeout of the underlying `lambda`. Defaults to 30.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The HTTP or gRPC codes to use when checking for a successful response from a target.
	// The `health_check.protocol` must be one of `HTTP` or `HTTPS` or the `targetType` must be `lambda`.
	// Values can be comma-separated individual values (e.g., "200,202") or a range of values (e.g., "200-299").
	// * For gRPC-based target groups (i.e., the `protocol` is one of `HTTP` or `HTTPS` and the `protocolVersion` is `GRPC`), values can be between `0` and `99`. The default is `12`.
	// * When used with an Application Load Balancer (i.e., the `protocol` is one of `HTTP` or `HTTPS` and the `protocolVersion` is not `GRPC`), values can be between `200` and `499`. The default is `200`.
	// * When used with a Network Load Balancer (i.e., the `protocol` is one of `TCP`, `TCP_UDP`, `UDP`, or `TLS`), values can be between `200` and `599`. The default is `200-399`.
	// * When the `targetType` is `lambda`, values can be between `200` and `499`. The default is `200`.
	Matcher pulumi.StringPtrInput `pulumi:"matcher"`
	// Destination for the health check request. Required for HTTP/HTTPS ALB and HTTP NLB. Only applies to HTTP/HTTPS.
	// * For HTTP and HTTPS health checks, the default is `/`.
	// * For gRPC health checks, the default is `/Amazon Web Services.ALB/healthcheck`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port the load balancer uses when performing health checks on targets.
	// Valid values are either `traffic-port`, to use the same port as the target group, or a valid port number between `1` and `65536`.
	// Default is `traffic-port`.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// Protocol the load balancer uses when performing health checks on targets.
	// Must be one of `TCP`, `HTTP`, or `HTTPS`.
	// The `TCP` protocol is not supported for health checks if the protocol of the target group is `HTTP` or `HTTPS`.
	// Default is `HTTP`.
	// Cannot be specified when the `targetType` is `lambda`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Amount of time, in seconds, during which no response from a target means a failed health check. The range is 2–120 seconds. For target groups with a protocol of HTTP, the default is 6 seconds. For target groups with a protocol of TCP, TLS or HTTPS, the default is 10 seconds. For target groups with a protocol of GENEVE, the default is 5 seconds. If the target type is lambda, the default is 30 seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Number of consecutive health check failures required before considering a target unhealthy. The range is 2-10. Defaults to 3.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (TargetGroupHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupHealthCheck)(nil)).Elem()
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckOutput() TargetGroupHealthCheckOutput {
	return i.ToTargetGroupHealthCheckOutputWithContext(context.Background())
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckOutputWithContext(ctx context.Context) TargetGroupHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHealthCheckOutput)
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return i.ToTargetGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHealthCheckOutput).ToTargetGroupHealthCheckPtrOutputWithContext(ctx)
}

// TargetGroupHealthCheckPtrInput is an input type that accepts TargetGroupHealthCheckArgs, TargetGroupHealthCheckPtr and TargetGroupHealthCheckPtrOutput values.
// You can construct a concrete instance of `TargetGroupHealthCheckPtrInput` via:
//
//	        TargetGroupHealthCheckArgs{...}
//
//	or:
//
//	        nil
type TargetGroupHealthCheckPtrInput interface {
	pulumi.Input

	ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput
	ToTargetGroupHealthCheckPtrOutputWithContext(context.Context) TargetGroupHealthCheckPtrOutput
}

type targetGroupHealthCheckPtrType TargetGroupHealthCheckArgs

func TargetGroupHealthCheckPtr(v *TargetGroupHealthCheckArgs) TargetGroupHealthCheckPtrInput {
	return (*targetGroupHealthCheckPtrType)(v)
}

func (*targetGroupHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupHealthCheck)(nil)).Elem()
}

func (i *targetGroupHealthCheckPtrType) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return i.ToTargetGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (i *targetGroupHealthCheckPtrType) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHealthCheckPtrOutput)
}

type TargetGroupHealthCheckOutput struct{ *pulumi.OutputState }

func (TargetGroupHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupHealthCheck)(nil)).Elem()
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckOutput() TargetGroupHealthCheckOutput {
	return o
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckOutputWithContext(ctx context.Context) TargetGroupHealthCheckOutput {
	return o
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return o.ToTargetGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetGroupHealthCheck) *TargetGroupHealthCheck {
		return &v
	}).(TargetGroupHealthCheckPtrOutput)
}

// Whether health checks are enabled. Defaults to `true`.
func (o TargetGroupHealthCheckOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Number of consecutive health check successes required before considering a target healthy. The range is 2-10. Defaults to 3.
func (o TargetGroupHealthCheckOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// Approximate amount of time, in seconds, between health checks of an individual target. The range is 5-300. For `lambda` target groups, it needs to be greater than the timeout of the underlying `lambda`. Defaults to 30.
func (o TargetGroupHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The HTTP or gRPC codes to use when checking for a successful response from a target.
// The `health_check.protocol` must be one of `HTTP` or `HTTPS` or the `targetType` must be `lambda`.
// Values can be comma-separated individual values (e.g., "200,202") or a range of values (e.g., "200-299").
// * For gRPC-based target groups (i.e., the `protocol` is one of `HTTP` or `HTTPS` and the `protocolVersion` is `GRPC`), values can be between `0` and `99`. The default is `12`.
// * When used with an Application Load Balancer (i.e., the `protocol` is one of `HTTP` or `HTTPS` and the `protocolVersion` is not `GRPC`), values can be between `200` and `499`. The default is `200`.
// * When used with a Network Load Balancer (i.e., the `protocol` is one of `TCP`, `TCP_UDP`, `UDP`, or `TLS`), values can be between `200` and `599`. The default is `200-399`.
// * When the `targetType` is `lambda`, values can be between `200` and `499`. The default is `200`.
func (o TargetGroupHealthCheckOutput) Matcher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *string { return v.Matcher }).(pulumi.StringPtrOutput)
}

// Destination for the health check request. Required for HTTP/HTTPS ALB and HTTP NLB. Only applies to HTTP/HTTPS.
// * For HTTP and HTTPS health checks, the default is `/`.
// * For gRPC health checks, the default is `/Amazon Web Services.ALB/healthcheck`.
func (o TargetGroupHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port the load balancer uses when performing health checks on targets.
// Valid values are either `traffic-port`, to use the same port as the target group, or a valid port number between `1` and `65536`.
// Default is `traffic-port`.
func (o TargetGroupHealthCheckOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Protocol the load balancer uses when performing health checks on targets.
// Must be one of `TCP`, `HTTP`, or `HTTPS`.
// The `TCP` protocol is not supported for health checks if the protocol of the target group is `HTTP` or `HTTPS`.
// Default is `HTTP`.
// Cannot be specified when the `targetType` is `lambda`.
func (o TargetGroupHealthCheckOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Amount of time, in seconds, during which no response from a target means a failed health check. The range is 2–120 seconds. For target groups with a protocol of HTTP, the default is 6 seconds. For target groups with a protocol of TCP, TLS or HTTPS, the default is 10 seconds. For target groups with a protocol of GENEVE, the default is 5 seconds. If the target type is lambda, the default is 30 seconds.
func (o TargetGroupHealthCheckOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Number of consecutive health check failures required before considering a target unhealthy. The range is 2-10. Defaults to 3.
func (o TargetGroupHealthCheckOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type TargetGroupHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (TargetGroupHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupHealthCheck)(nil)).Elem()
}

func (o TargetGroupHealthCheckPtrOutput) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return o
}

func (o TargetGroupHealthCheckPtrOutput) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return o
}

func (o TargetGroupHealthCheckPtrOutput) Elem() TargetGroupHealthCheckOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) TargetGroupHealthCheck {
		if v != nil {
			return *v
		}
		var ret TargetGroupHealthCheck
		return ret
	}).(TargetGroupHealthCheckOutput)
}

// Whether health checks are enabled. Defaults to `true`.
func (o TargetGroupHealthCheckPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Number of consecutive health check successes required before considering a target healthy. The range is 2-10. Defaults to 3.
func (o TargetGroupHealthCheckPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// Approximate amount of time, in seconds, between health checks of an individual target. The range is 5-300. For `lambda` target groups, it needs to be greater than the timeout of the underlying `lambda`. Defaults to 30.
func (o TargetGroupHealthCheckPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// The HTTP or gRPC codes to use when checking for a successful response from a target.
// The `health_check.protocol` must be one of `HTTP` or `HTTPS` or the `targetType` must be `lambda`.
// Values can be comma-separated individual values (e.g., "200,202") or a range of values (e.g., "200-299").
// * For gRPC-based target groups (i.e., the `protocol` is one of `HTTP` or `HTTPS` and the `protocolVersion` is `GRPC`), values can be between `0` and `99`. The default is `12`.
// * When used with an Application Load Balancer (i.e., the `protocol` is one of `HTTP` or `HTTPS` and the `protocolVersion` is not `GRPC`), values can be between `200` and `499`. The default is `200`.
// * When used with a Network Load Balancer (i.e., the `protocol` is one of `TCP`, `TCP_UDP`, `UDP`, or `TLS`), values can be between `200` and `599`. The default is `200-399`.
// * When the `targetType` is `lambda`, values can be between `200` and `499`. The default is `200`.
func (o TargetGroupHealthCheckPtrOutput) Matcher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Matcher
	}).(pulumi.StringPtrOutput)
}

// Destination for the health check request. Required for HTTP/HTTPS ALB and HTTP NLB. Only applies to HTTP/HTTPS.
// * For HTTP and HTTPS health checks, the default is `/`.
// * For gRPC health checks, the default is `/Amazon Web Services.ALB/healthcheck`.
func (o TargetGroupHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port the load balancer uses when performing health checks on targets.
// Valid values are either `traffic-port`, to use the same port as the target group, or a valid port number between `1` and `65536`.
// Default is `traffic-port`.
func (o TargetGroupHealthCheckPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Protocol the load balancer uses when performing health checks on targets.
// Must be one of `TCP`, `HTTP`, or `HTTPS`.
// The `TCP` protocol is not supported for health checks if the protocol of the target group is `HTTP` or `HTTPS`.
// Default is `HTTP`.
// Cannot be specified when the `targetType` is `lambda`.
func (o TargetGroupHealthCheckPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Amount of time, in seconds, during which no response from a target means a failed health check. The range is 2–120 seconds. For target groups with a protocol of HTTP, the default is 6 seconds. For target groups with a protocol of TCP, TLS or HTTPS, the default is 10 seconds. For target groups with a protocol of GENEVE, the default is 5 seconds. If the target type is lambda, the default is 30 seconds.
func (o TargetGroupHealthCheckPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// Number of consecutive health check failures required before considering a target unhealthy. The range is 2-10. Defaults to 3.
func (o TargetGroupHealthCheckPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

type TargetGroupStickiness struct {
	// Only used when the type is `lbCookie`. The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).
	CookieDuration *int `pulumi:"cookieDuration"`
	// Name of the application based cookie. AWSALB, AWSALBAPP, and AWSALBTG prefixes are reserved and cannot be used. Only needed when type is `appCookie`.
	CookieName *string `pulumi:"cookieName"`
	// Boolean to enable / disable `stickiness`. Default is `true`.
	Enabled *bool `pulumi:"enabled"`
	// The type of sticky sessions. The only current possible values are `lbCookie`, `appCookie` for ALBs, `sourceIp` for NLBs, and `sourceIpDestIp`, `sourceIpDestIpProto` for GWLBs.
	Type string `pulumi:"type"`
}

// TargetGroupStickinessInput is an input type that accepts TargetGroupStickinessArgs and TargetGroupStickinessOutput values.
// You can construct a concrete instance of `TargetGroupStickinessInput` via:
//
//	TargetGroupStickinessArgs{...}
type TargetGroupStickinessInput interface {
	pulumi.Input

	ToTargetGroupStickinessOutput() TargetGroupStickinessOutput
	ToTargetGroupStickinessOutputWithContext(context.Context) TargetGroupStickinessOutput
}

type TargetGroupStickinessArgs struct {
	// Only used when the type is `lbCookie`. The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).
	CookieDuration pulumi.IntPtrInput `pulumi:"cookieDuration"`
	// Name of the application based cookie. AWSALB, AWSALBAPP, and AWSALBTG prefixes are reserved and cannot be used. Only needed when type is `appCookie`.
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	// Boolean to enable / disable `stickiness`. Default is `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The type of sticky sessions. The only current possible values are `lbCookie`, `appCookie` for ALBs, `sourceIp` for NLBs, and `sourceIpDestIp`, `sourceIpDestIpProto` for GWLBs.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TargetGroupStickinessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupStickiness)(nil)).Elem()
}

func (i TargetGroupStickinessArgs) ToTargetGroupStickinessOutput() TargetGroupStickinessOutput {
	return i.ToTargetGroupStickinessOutputWithContext(context.Background())
}

func (i TargetGroupStickinessArgs) ToTargetGroupStickinessOutputWithContext(ctx context.Context) TargetGroupStickinessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupStickinessOutput)
}

func (i TargetGroupStickinessArgs) ToTargetGroupStickinessPtrOutput() TargetGroupStickinessPtrOutput {
	return i.ToTargetGroupStickinessPtrOutputWithContext(context.Background())
}

func (i TargetGroupStickinessArgs) ToTargetGroupStickinessPtrOutputWithContext(ctx context.Context) TargetGroupStickinessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupStickinessOutput).ToTargetGroupStickinessPtrOutputWithContext(ctx)
}

// TargetGroupStickinessPtrInput is an input type that accepts TargetGroupStickinessArgs, TargetGroupStickinessPtr and TargetGroupStickinessPtrOutput values.
// You can construct a concrete instance of `TargetGroupStickinessPtrInput` via:
//
//	        TargetGroupStickinessArgs{...}
//
//	or:
//
//	        nil
type TargetGroupStickinessPtrInput interface {
	pulumi.Input

	ToTargetGroupStickinessPtrOutput() TargetGroupStickinessPtrOutput
	ToTargetGroupStickinessPtrOutputWithContext(context.Context) TargetGroupStickinessPtrOutput
}

type targetGroupStickinessPtrType TargetGroupStickinessArgs

func TargetGroupStickinessPtr(v *TargetGroupStickinessArgs) TargetGroupStickinessPtrInput {
	return (*targetGroupStickinessPtrType)(v)
}

func (*targetGroupStickinessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupStickiness)(nil)).Elem()
}

func (i *targetGroupStickinessPtrType) ToTargetGroupStickinessPtrOutput() TargetGroupStickinessPtrOutput {
	return i.ToTargetGroupStickinessPtrOutputWithContext(context.Background())
}

func (i *targetGroupStickinessPtrType) ToTargetGroupStickinessPtrOutputWithContext(ctx context.Context) TargetGroupStickinessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupStickinessPtrOutput)
}

type TargetGroupStickinessOutput struct{ *pulumi.OutputState }

func (TargetGroupStickinessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupStickiness)(nil)).Elem()
}

func (o TargetGroupStickinessOutput) ToTargetGroupStickinessOutput() TargetGroupStickinessOutput {
	return o
}

func (o TargetGroupStickinessOutput) ToTargetGroupStickinessOutputWithContext(ctx context.Context) TargetGroupStickinessOutput {
	return o
}

func (o TargetGroupStickinessOutput) ToTargetGroupStickinessPtrOutput() TargetGroupStickinessPtrOutput {
	return o.ToTargetGroupStickinessPtrOutputWithContext(context.Background())
}

func (o TargetGroupStickinessOutput) ToTargetGroupStickinessPtrOutputWithContext(ctx context.Context) TargetGroupStickinessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetGroupStickiness) *TargetGroupStickiness {
		return &v
	}).(TargetGroupStickinessPtrOutput)
}

// Only used when the type is `lbCookie`. The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).
func (o TargetGroupStickinessOutput) CookieDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupStickiness) *int { return v.CookieDuration }).(pulumi.IntPtrOutput)
}

// Name of the application based cookie. AWSALB, AWSALBAPP, and AWSALBTG prefixes are reserved and cannot be used. Only needed when type is `appCookie`.
func (o TargetGroupStickinessOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupStickiness) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// Boolean to enable / disable `stickiness`. Default is `true`.
func (o TargetGroupStickinessOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupStickiness) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The type of sticky sessions. The only current possible values are `lbCookie`, `appCookie` for ALBs, `sourceIp` for NLBs, and `sourceIpDestIp`, `sourceIpDestIpProto` for GWLBs.
func (o TargetGroupStickinessOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupStickiness) string { return v.Type }).(pulumi.StringOutput)
}

type TargetGroupStickinessPtrOutput struct{ *pulumi.OutputState }

func (TargetGroupStickinessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupStickiness)(nil)).Elem()
}

func (o TargetGroupStickinessPtrOutput) ToTargetGroupStickinessPtrOutput() TargetGroupStickinessPtrOutput {
	return o
}

func (o TargetGroupStickinessPtrOutput) ToTargetGroupStickinessPtrOutputWithContext(ctx context.Context) TargetGroupStickinessPtrOutput {
	return o
}

func (o TargetGroupStickinessPtrOutput) Elem() TargetGroupStickinessOutput {
	return o.ApplyT(func(v *TargetGroupStickiness) TargetGroupStickiness {
		if v != nil {
			return *v
		}
		var ret TargetGroupStickiness
		return ret
	}).(TargetGroupStickinessOutput)
}

// Only used when the type is `lbCookie`. The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).
func (o TargetGroupStickinessPtrOutput) CookieDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetGroupStickiness) *int {
		if v == nil {
			return nil
		}
		return v.CookieDuration
	}).(pulumi.IntPtrOutput)
}

// Name of the application based cookie. AWSALB, AWSALBAPP, and AWSALBTG prefixes are reserved and cannot be used. Only needed when type is `appCookie`.
func (o TargetGroupStickinessPtrOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupStickiness) *string {
		if v == nil {
			return nil
		}
		return v.CookieName
	}).(pulumi.StringPtrOutput)
}

// Boolean to enable / disable `stickiness`. Default is `true`.
func (o TargetGroupStickinessPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TargetGroupStickiness) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The type of sticky sessions. The only current possible values are `lbCookie`, `appCookie` for ALBs, `sourceIp` for NLBs, and `sourceIpDestIp`, `sourceIpDestIpProto` for GWLBs.
func (o TargetGroupStickinessPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupStickiness) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type TargetGroupTargetFailover struct {
	// Indicates how the GWLB handles existing flows when a target is deregistered. Possible values are `rebalance` and `noRebalance`. Must match the attribute value set for `onUnhealthy`. Default: `noRebalance`.
	OnDeregistration string `pulumi:"onDeregistration"`
	// Indicates how the GWLB handles existing flows when a target is unhealthy. Possible values are `rebalance` and `noRebalance`. Must match the attribute value set for `onDeregistration`. Default: `noRebalance`.
	OnUnhealthy string `pulumi:"onUnhealthy"`
}

// TargetGroupTargetFailoverInput is an input type that accepts TargetGroupTargetFailoverArgs and TargetGroupTargetFailoverOutput values.
// You can construct a concrete instance of `TargetGroupTargetFailoverInput` via:
//
//	TargetGroupTargetFailoverArgs{...}
type TargetGroupTargetFailoverInput interface {
	pulumi.Input

	ToTargetGroupTargetFailoverOutput() TargetGroupTargetFailoverOutput
	ToTargetGroupTargetFailoverOutputWithContext(context.Context) TargetGroupTargetFailoverOutput
}

type TargetGroupTargetFailoverArgs struct {
	// Indicates how the GWLB handles existing flows when a target is deregistered. Possible values are `rebalance` and `noRebalance`. Must match the attribute value set for `onUnhealthy`. Default: `noRebalance`.
	OnDeregistration pulumi.StringInput `pulumi:"onDeregistration"`
	// Indicates how the GWLB handles existing flows when a target is unhealthy. Possible values are `rebalance` and `noRebalance`. Must match the attribute value set for `onDeregistration`. Default: `noRebalance`.
	OnUnhealthy pulumi.StringInput `pulumi:"onUnhealthy"`
}

func (TargetGroupTargetFailoverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTargetFailover)(nil)).Elem()
}

func (i TargetGroupTargetFailoverArgs) ToTargetGroupTargetFailoverOutput() TargetGroupTargetFailoverOutput {
	return i.ToTargetGroupTargetFailoverOutputWithContext(context.Background())
}

func (i TargetGroupTargetFailoverArgs) ToTargetGroupTargetFailoverOutputWithContext(ctx context.Context) TargetGroupTargetFailoverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupTargetFailoverOutput)
}

// TargetGroupTargetFailoverArrayInput is an input type that accepts TargetGroupTargetFailoverArray and TargetGroupTargetFailoverArrayOutput values.
// You can construct a concrete instance of `TargetGroupTargetFailoverArrayInput` via:
//
//	TargetGroupTargetFailoverArray{ TargetGroupTargetFailoverArgs{...} }
type TargetGroupTargetFailoverArrayInput interface {
	pulumi.Input

	ToTargetGroupTargetFailoverArrayOutput() TargetGroupTargetFailoverArrayOutput
	ToTargetGroupTargetFailoverArrayOutputWithContext(context.Context) TargetGroupTargetFailoverArrayOutput
}

type TargetGroupTargetFailoverArray []TargetGroupTargetFailoverInput

func (TargetGroupTargetFailoverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTargetFailover)(nil)).Elem()
}

func (i TargetGroupTargetFailoverArray) ToTargetGroupTargetFailoverArrayOutput() TargetGroupTargetFailoverArrayOutput {
	return i.ToTargetGroupTargetFailoverArrayOutputWithContext(context.Background())
}

func (i TargetGroupTargetFailoverArray) ToTargetGroupTargetFailoverArrayOutputWithContext(ctx context.Context) TargetGroupTargetFailoverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupTargetFailoverArrayOutput)
}

type TargetGroupTargetFailoverOutput struct{ *pulumi.OutputState }

func (TargetGroupTargetFailoverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTargetFailover)(nil)).Elem()
}

func (o TargetGroupTargetFailoverOutput) ToTargetGroupTargetFailoverOutput() TargetGroupTargetFailoverOutput {
	return o
}

func (o TargetGroupTargetFailoverOutput) ToTargetGroupTargetFailoverOutputWithContext(ctx context.Context) TargetGroupTargetFailoverOutput {
	return o
}

// Indicates how the GWLB handles existing flows when a target is deregistered. Possible values are `rebalance` and `noRebalance`. Must match the attribute value set for `onUnhealthy`. Default: `noRebalance`.
func (o TargetGroupTargetFailoverOutput) OnDeregistration() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupTargetFailover) string { return v.OnDeregistration }).(pulumi.StringOutput)
}

// Indicates how the GWLB handles existing flows when a target is unhealthy. Possible values are `rebalance` and `noRebalance`. Must match the attribute value set for `onDeregistration`. Default: `noRebalance`.
func (o TargetGroupTargetFailoverOutput) OnUnhealthy() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupTargetFailover) string { return v.OnUnhealthy }).(pulumi.StringOutput)
}

type TargetGroupTargetFailoverArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupTargetFailoverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTargetFailover)(nil)).Elem()
}

func (o TargetGroupTargetFailoverArrayOutput) ToTargetGroupTargetFailoverArrayOutput() TargetGroupTargetFailoverArrayOutput {
	return o
}

func (o TargetGroupTargetFailoverArrayOutput) ToTargetGroupTargetFailoverArrayOutputWithContext(ctx context.Context) TargetGroupTargetFailoverArrayOutput {
	return o
}

func (o TargetGroupTargetFailoverArrayOutput) Index(i pulumi.IntInput) TargetGroupTargetFailoverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupTargetFailover {
		return vs[0].([]TargetGroupTargetFailover)[vs[1].(int)]
	}).(TargetGroupTargetFailoverOutput)
}

type TargetGroupTargetHealthState struct {
	// Indicates whether the load balancer terminates connections to unhealthy targets. Possible values are `true` or `false`. Default: `true`.
	EnableUnhealthyConnectionTermination bool `pulumi:"enableUnhealthyConnectionTermination"`
}

// TargetGroupTargetHealthStateInput is an input type that accepts TargetGroupTargetHealthStateArgs and TargetGroupTargetHealthStateOutput values.
// You can construct a concrete instance of `TargetGroupTargetHealthStateInput` via:
//
//	TargetGroupTargetHealthStateArgs{...}
type TargetGroupTargetHealthStateInput interface {
	pulumi.Input

	ToTargetGroupTargetHealthStateOutput() TargetGroupTargetHealthStateOutput
	ToTargetGroupTargetHealthStateOutputWithContext(context.Context) TargetGroupTargetHealthStateOutput
}

type TargetGroupTargetHealthStateArgs struct {
	// Indicates whether the load balancer terminates connections to unhealthy targets. Possible values are `true` or `false`. Default: `true`.
	EnableUnhealthyConnectionTermination pulumi.BoolInput `pulumi:"enableUnhealthyConnectionTermination"`
}

func (TargetGroupTargetHealthStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTargetHealthState)(nil)).Elem()
}

func (i TargetGroupTargetHealthStateArgs) ToTargetGroupTargetHealthStateOutput() TargetGroupTargetHealthStateOutput {
	return i.ToTargetGroupTargetHealthStateOutputWithContext(context.Background())
}

func (i TargetGroupTargetHealthStateArgs) ToTargetGroupTargetHealthStateOutputWithContext(ctx context.Context) TargetGroupTargetHealthStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupTargetHealthStateOutput)
}

// TargetGroupTargetHealthStateArrayInput is an input type that accepts TargetGroupTargetHealthStateArray and TargetGroupTargetHealthStateArrayOutput values.
// You can construct a concrete instance of `TargetGroupTargetHealthStateArrayInput` via:
//
//	TargetGroupTargetHealthStateArray{ TargetGroupTargetHealthStateArgs{...} }
type TargetGroupTargetHealthStateArrayInput interface {
	pulumi.Input

	ToTargetGroupTargetHealthStateArrayOutput() TargetGroupTargetHealthStateArrayOutput
	ToTargetGroupTargetHealthStateArrayOutputWithContext(context.Context) TargetGroupTargetHealthStateArrayOutput
}

type TargetGroupTargetHealthStateArray []TargetGroupTargetHealthStateInput

func (TargetGroupTargetHealthStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTargetHealthState)(nil)).Elem()
}

func (i TargetGroupTargetHealthStateArray) ToTargetGroupTargetHealthStateArrayOutput() TargetGroupTargetHealthStateArrayOutput {
	return i.ToTargetGroupTargetHealthStateArrayOutputWithContext(context.Background())
}

func (i TargetGroupTargetHealthStateArray) ToTargetGroupTargetHealthStateArrayOutputWithContext(ctx context.Context) TargetGroupTargetHealthStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupTargetHealthStateArrayOutput)
}

type TargetGroupTargetHealthStateOutput struct{ *pulumi.OutputState }

func (TargetGroupTargetHealthStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTargetHealthState)(nil)).Elem()
}

func (o TargetGroupTargetHealthStateOutput) ToTargetGroupTargetHealthStateOutput() TargetGroupTargetHealthStateOutput {
	return o
}

func (o TargetGroupTargetHealthStateOutput) ToTargetGroupTargetHealthStateOutputWithContext(ctx context.Context) TargetGroupTargetHealthStateOutput {
	return o
}

// Indicates whether the load balancer terminates connections to unhealthy targets. Possible values are `true` or `false`. Default: `true`.
func (o TargetGroupTargetHealthStateOutput) EnableUnhealthyConnectionTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v TargetGroupTargetHealthState) bool { return v.EnableUnhealthyConnectionTermination }).(pulumi.BoolOutput)
}

type TargetGroupTargetHealthStateArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupTargetHealthStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTargetHealthState)(nil)).Elem()
}

func (o TargetGroupTargetHealthStateArrayOutput) ToTargetGroupTargetHealthStateArrayOutput() TargetGroupTargetHealthStateArrayOutput {
	return o
}

func (o TargetGroupTargetHealthStateArrayOutput) ToTargetGroupTargetHealthStateArrayOutputWithContext(ctx context.Context) TargetGroupTargetHealthStateArrayOutput {
	return o
}

func (o TargetGroupTargetHealthStateArrayOutput) Index(i pulumi.IntInput) TargetGroupTargetHealthStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupTargetHealthState {
		return vs[0].([]TargetGroupTargetHealthState)[vs[1].(int)]
	}).(TargetGroupTargetHealthStateOutput)
}

type GetListenerDefaultAction struct {
	AuthenticateCognitos []GetListenerDefaultActionAuthenticateCognito `pulumi:"authenticateCognitos"`
	AuthenticateOidcs    []GetListenerDefaultActionAuthenticateOidc    `pulumi:"authenticateOidcs"`
	FixedResponses       []GetListenerDefaultActionFixedResponse       `pulumi:"fixedResponses"`
	Forwards             []GetListenerDefaultActionForward             `pulumi:"forwards"`
	Order                int                                           `pulumi:"order"`
	Redirects            []GetListenerDefaultActionRedirect            `pulumi:"redirects"`
	TargetGroupArn       string                                        `pulumi:"targetGroupArn"`
	Type                 string                                        `pulumi:"type"`
}

// GetListenerDefaultActionInput is an input type that accepts GetListenerDefaultActionArgs and GetListenerDefaultActionOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionInput` via:
//
//	GetListenerDefaultActionArgs{...}
type GetListenerDefaultActionInput interface {
	pulumi.Input

	ToGetListenerDefaultActionOutput() GetListenerDefaultActionOutput
	ToGetListenerDefaultActionOutputWithContext(context.Context) GetListenerDefaultActionOutput
}

type GetListenerDefaultActionArgs struct {
	AuthenticateCognitos GetListenerDefaultActionAuthenticateCognitoArrayInput `pulumi:"authenticateCognitos"`
	AuthenticateOidcs    GetListenerDefaultActionAuthenticateOidcArrayInput    `pulumi:"authenticateOidcs"`
	FixedResponses       GetListenerDefaultActionFixedResponseArrayInput       `pulumi:"fixedResponses"`
	Forwards             GetListenerDefaultActionForwardArrayInput             `pulumi:"forwards"`
	Order                pulumi.IntInput                                       `pulumi:"order"`
	Redirects            GetListenerDefaultActionRedirectArrayInput            `pulumi:"redirects"`
	TargetGroupArn       pulumi.StringInput                                    `pulumi:"targetGroupArn"`
	Type                 pulumi.StringInput                                    `pulumi:"type"`
}

func (GetListenerDefaultActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultAction)(nil)).Elem()
}

func (i GetListenerDefaultActionArgs) ToGetListenerDefaultActionOutput() GetListenerDefaultActionOutput {
	return i.ToGetListenerDefaultActionOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionArgs) ToGetListenerDefaultActionOutputWithContext(ctx context.Context) GetListenerDefaultActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionOutput)
}

// GetListenerDefaultActionArrayInput is an input type that accepts GetListenerDefaultActionArray and GetListenerDefaultActionArrayOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionArrayInput` via:
//
//	GetListenerDefaultActionArray{ GetListenerDefaultActionArgs{...} }
type GetListenerDefaultActionArrayInput interface {
	pulumi.Input

	ToGetListenerDefaultActionArrayOutput() GetListenerDefaultActionArrayOutput
	ToGetListenerDefaultActionArrayOutputWithContext(context.Context) GetListenerDefaultActionArrayOutput
}

type GetListenerDefaultActionArray []GetListenerDefaultActionInput

func (GetListenerDefaultActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultAction)(nil)).Elem()
}

func (i GetListenerDefaultActionArray) ToGetListenerDefaultActionArrayOutput() GetListenerDefaultActionArrayOutput {
	return i.ToGetListenerDefaultActionArrayOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionArray) ToGetListenerDefaultActionArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionArrayOutput)
}

type GetListenerDefaultActionOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultAction)(nil)).Elem()
}

func (o GetListenerDefaultActionOutput) ToGetListenerDefaultActionOutput() GetListenerDefaultActionOutput {
	return o
}

func (o GetListenerDefaultActionOutput) ToGetListenerDefaultActionOutputWithContext(ctx context.Context) GetListenerDefaultActionOutput {
	return o
}

func (o GetListenerDefaultActionOutput) AuthenticateCognitos() GetListenerDefaultActionAuthenticateCognitoArrayOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) []GetListenerDefaultActionAuthenticateCognito {
		return v.AuthenticateCognitos
	}).(GetListenerDefaultActionAuthenticateCognitoArrayOutput)
}

func (o GetListenerDefaultActionOutput) AuthenticateOidcs() GetListenerDefaultActionAuthenticateOidcArrayOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) []GetListenerDefaultActionAuthenticateOidc {
		return v.AuthenticateOidcs
	}).(GetListenerDefaultActionAuthenticateOidcArrayOutput)
}

func (o GetListenerDefaultActionOutput) FixedResponses() GetListenerDefaultActionFixedResponseArrayOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) []GetListenerDefaultActionFixedResponse { return v.FixedResponses }).(GetListenerDefaultActionFixedResponseArrayOutput)
}

func (o GetListenerDefaultActionOutput) Forwards() GetListenerDefaultActionForwardArrayOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) []GetListenerDefaultActionForward { return v.Forwards }).(GetListenerDefaultActionForwardArrayOutput)
}

func (o GetListenerDefaultActionOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) int { return v.Order }).(pulumi.IntOutput)
}

func (o GetListenerDefaultActionOutput) Redirects() GetListenerDefaultActionRedirectArrayOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) []GetListenerDefaultActionRedirect { return v.Redirects }).(GetListenerDefaultActionRedirectArrayOutput)
}

func (o GetListenerDefaultActionOutput) TargetGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) string { return v.TargetGroupArn }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) string { return v.Type }).(pulumi.StringOutput)
}

type GetListenerDefaultActionArrayOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultAction)(nil)).Elem()
}

func (o GetListenerDefaultActionArrayOutput) ToGetListenerDefaultActionArrayOutput() GetListenerDefaultActionArrayOutput {
	return o
}

func (o GetListenerDefaultActionArrayOutput) ToGetListenerDefaultActionArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionArrayOutput {
	return o
}

func (o GetListenerDefaultActionArrayOutput) Index(i pulumi.IntInput) GetListenerDefaultActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenerDefaultAction {
		return vs[0].([]GetListenerDefaultAction)[vs[1].(int)]
	}).(GetListenerDefaultActionOutput)
}

type GetListenerDefaultActionAuthenticateCognito struct {
	AuthenticationRequestExtraParams map[string]string `pulumi:"authenticationRequestExtraParams"`
	OnUnauthenticatedRequest         string            `pulumi:"onUnauthenticatedRequest"`
	Scope                            string            `pulumi:"scope"`
	SessionCookieName                string            `pulumi:"sessionCookieName"`
	SessionTimeout                   int               `pulumi:"sessionTimeout"`
	UserPoolArn                      string            `pulumi:"userPoolArn"`
	UserPoolClientId                 string            `pulumi:"userPoolClientId"`
	UserPoolDomain                   string            `pulumi:"userPoolDomain"`
}

// GetListenerDefaultActionAuthenticateCognitoInput is an input type that accepts GetListenerDefaultActionAuthenticateCognitoArgs and GetListenerDefaultActionAuthenticateCognitoOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionAuthenticateCognitoInput` via:
//
//	GetListenerDefaultActionAuthenticateCognitoArgs{...}
type GetListenerDefaultActionAuthenticateCognitoInput interface {
	pulumi.Input

	ToGetListenerDefaultActionAuthenticateCognitoOutput() GetListenerDefaultActionAuthenticateCognitoOutput
	ToGetListenerDefaultActionAuthenticateCognitoOutputWithContext(context.Context) GetListenerDefaultActionAuthenticateCognitoOutput
}

type GetListenerDefaultActionAuthenticateCognitoArgs struct {
	AuthenticationRequestExtraParams pulumi.StringMapInput `pulumi:"authenticationRequestExtraParams"`
	OnUnauthenticatedRequest         pulumi.StringInput    `pulumi:"onUnauthenticatedRequest"`
	Scope                            pulumi.StringInput    `pulumi:"scope"`
	SessionCookieName                pulumi.StringInput    `pulumi:"sessionCookieName"`
	SessionTimeout                   pulumi.IntInput       `pulumi:"sessionTimeout"`
	UserPoolArn                      pulumi.StringInput    `pulumi:"userPoolArn"`
	UserPoolClientId                 pulumi.StringInput    `pulumi:"userPoolClientId"`
	UserPoolDomain                   pulumi.StringInput    `pulumi:"userPoolDomain"`
}

func (GetListenerDefaultActionAuthenticateCognitoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (i GetListenerDefaultActionAuthenticateCognitoArgs) ToGetListenerDefaultActionAuthenticateCognitoOutput() GetListenerDefaultActionAuthenticateCognitoOutput {
	return i.ToGetListenerDefaultActionAuthenticateCognitoOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionAuthenticateCognitoArgs) ToGetListenerDefaultActionAuthenticateCognitoOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateCognitoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionAuthenticateCognitoOutput)
}

// GetListenerDefaultActionAuthenticateCognitoArrayInput is an input type that accepts GetListenerDefaultActionAuthenticateCognitoArray and GetListenerDefaultActionAuthenticateCognitoArrayOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionAuthenticateCognitoArrayInput` via:
//
//	GetListenerDefaultActionAuthenticateCognitoArray{ GetListenerDefaultActionAuthenticateCognitoArgs{...} }
type GetListenerDefaultActionAuthenticateCognitoArrayInput interface {
	pulumi.Input

	ToGetListenerDefaultActionAuthenticateCognitoArrayOutput() GetListenerDefaultActionAuthenticateCognitoArrayOutput
	ToGetListenerDefaultActionAuthenticateCognitoArrayOutputWithContext(context.Context) GetListenerDefaultActionAuthenticateCognitoArrayOutput
}

type GetListenerDefaultActionAuthenticateCognitoArray []GetListenerDefaultActionAuthenticateCognitoInput

func (GetListenerDefaultActionAuthenticateCognitoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (i GetListenerDefaultActionAuthenticateCognitoArray) ToGetListenerDefaultActionAuthenticateCognitoArrayOutput() GetListenerDefaultActionAuthenticateCognitoArrayOutput {
	return i.ToGetListenerDefaultActionAuthenticateCognitoArrayOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionAuthenticateCognitoArray) ToGetListenerDefaultActionAuthenticateCognitoArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateCognitoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionAuthenticateCognitoArrayOutput)
}

type GetListenerDefaultActionAuthenticateCognitoOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionAuthenticateCognitoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) ToGetListenerDefaultActionAuthenticateCognitoOutput() GetListenerDefaultActionAuthenticateCognitoOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) ToGetListenerDefaultActionAuthenticateCognitoOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateCognitoOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) AuthenticationRequestExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) map[string]string {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.StringMapOutput)
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) OnUnauthenticatedRequest() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) string { return v.OnUnauthenticatedRequest }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) string { return v.Scope }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) SessionCookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) string { return v.SessionCookieName }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) SessionTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) int { return v.SessionTimeout }).(pulumi.IntOutput)
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) UserPoolArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) string { return v.UserPoolArn }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) UserPoolClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) string { return v.UserPoolClientId }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) UserPoolDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) string { return v.UserPoolDomain }).(pulumi.StringOutput)
}

type GetListenerDefaultActionAuthenticateCognitoArrayOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionAuthenticateCognitoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (o GetListenerDefaultActionAuthenticateCognitoArrayOutput) ToGetListenerDefaultActionAuthenticateCognitoArrayOutput() GetListenerDefaultActionAuthenticateCognitoArrayOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateCognitoArrayOutput) ToGetListenerDefaultActionAuthenticateCognitoArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateCognitoArrayOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateCognitoArrayOutput) Index(i pulumi.IntInput) GetListenerDefaultActionAuthenticateCognitoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenerDefaultActionAuthenticateCognito {
		return vs[0].([]GetListenerDefaultActionAuthenticateCognito)[vs[1].(int)]
	}).(GetListenerDefaultActionAuthenticateCognitoOutput)
}

type GetListenerDefaultActionAuthenticateOidc struct {
	AuthenticationRequestExtraParams map[string]string `pulumi:"authenticationRequestExtraParams"`
	AuthorizationEndpoint            string            `pulumi:"authorizationEndpoint"`
	ClientId                         string            `pulumi:"clientId"`
	ClientSecret                     string            `pulumi:"clientSecret"`
	Issuer                           string            `pulumi:"issuer"`
	OnUnauthenticatedRequest         string            `pulumi:"onUnauthenticatedRequest"`
	Scope                            string            `pulumi:"scope"`
	SessionCookieName                string            `pulumi:"sessionCookieName"`
	SessionTimeout                   int               `pulumi:"sessionTimeout"`
	TokenEndpoint                    string            `pulumi:"tokenEndpoint"`
	UserInfoEndpoint                 string            `pulumi:"userInfoEndpoint"`
}

// GetListenerDefaultActionAuthenticateOidcInput is an input type that accepts GetListenerDefaultActionAuthenticateOidcArgs and GetListenerDefaultActionAuthenticateOidcOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionAuthenticateOidcInput` via:
//
//	GetListenerDefaultActionAuthenticateOidcArgs{...}
type GetListenerDefaultActionAuthenticateOidcInput interface {
	pulumi.Input

	ToGetListenerDefaultActionAuthenticateOidcOutput() GetListenerDefaultActionAuthenticateOidcOutput
	ToGetListenerDefaultActionAuthenticateOidcOutputWithContext(context.Context) GetListenerDefaultActionAuthenticateOidcOutput
}

type GetListenerDefaultActionAuthenticateOidcArgs struct {
	AuthenticationRequestExtraParams pulumi.StringMapInput `pulumi:"authenticationRequestExtraParams"`
	AuthorizationEndpoint            pulumi.StringInput    `pulumi:"authorizationEndpoint"`
	ClientId                         pulumi.StringInput    `pulumi:"clientId"`
	ClientSecret                     pulumi.StringInput    `pulumi:"clientSecret"`
	Issuer                           pulumi.StringInput    `pulumi:"issuer"`
	OnUnauthenticatedRequest         pulumi.StringInput    `pulumi:"onUnauthenticatedRequest"`
	Scope                            pulumi.StringInput    `pulumi:"scope"`
	SessionCookieName                pulumi.StringInput    `pulumi:"sessionCookieName"`
	SessionTimeout                   pulumi.IntInput       `pulumi:"sessionTimeout"`
	TokenEndpoint                    pulumi.StringInput    `pulumi:"tokenEndpoint"`
	UserInfoEndpoint                 pulumi.StringInput    `pulumi:"userInfoEndpoint"`
}

func (GetListenerDefaultActionAuthenticateOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (i GetListenerDefaultActionAuthenticateOidcArgs) ToGetListenerDefaultActionAuthenticateOidcOutput() GetListenerDefaultActionAuthenticateOidcOutput {
	return i.ToGetListenerDefaultActionAuthenticateOidcOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionAuthenticateOidcArgs) ToGetListenerDefaultActionAuthenticateOidcOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionAuthenticateOidcOutput)
}

// GetListenerDefaultActionAuthenticateOidcArrayInput is an input type that accepts GetListenerDefaultActionAuthenticateOidcArray and GetListenerDefaultActionAuthenticateOidcArrayOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionAuthenticateOidcArrayInput` via:
//
//	GetListenerDefaultActionAuthenticateOidcArray{ GetListenerDefaultActionAuthenticateOidcArgs{...} }
type GetListenerDefaultActionAuthenticateOidcArrayInput interface {
	pulumi.Input

	ToGetListenerDefaultActionAuthenticateOidcArrayOutput() GetListenerDefaultActionAuthenticateOidcArrayOutput
	ToGetListenerDefaultActionAuthenticateOidcArrayOutputWithContext(context.Context) GetListenerDefaultActionAuthenticateOidcArrayOutput
}

type GetListenerDefaultActionAuthenticateOidcArray []GetListenerDefaultActionAuthenticateOidcInput

func (GetListenerDefaultActionAuthenticateOidcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (i GetListenerDefaultActionAuthenticateOidcArray) ToGetListenerDefaultActionAuthenticateOidcArrayOutput() GetListenerDefaultActionAuthenticateOidcArrayOutput {
	return i.ToGetListenerDefaultActionAuthenticateOidcArrayOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionAuthenticateOidcArray) ToGetListenerDefaultActionAuthenticateOidcArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateOidcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionAuthenticateOidcArrayOutput)
}

type GetListenerDefaultActionAuthenticateOidcOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionAuthenticateOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) ToGetListenerDefaultActionAuthenticateOidcOutput() GetListenerDefaultActionAuthenticateOidcOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) ToGetListenerDefaultActionAuthenticateOidcOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateOidcOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) AuthenticationRequestExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) map[string]string {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.StringMapOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.ClientSecret }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.Issuer }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) OnUnauthenticatedRequest() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.OnUnauthenticatedRequest }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.Scope }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) SessionCookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.SessionCookieName }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) SessionTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) int { return v.SessionTimeout }).(pulumi.IntOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) UserInfoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.UserInfoEndpoint }).(pulumi.StringOutput)
}

type GetListenerDefaultActionAuthenticateOidcArrayOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionAuthenticateOidcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (o GetListenerDefaultActionAuthenticateOidcArrayOutput) ToGetListenerDefaultActionAuthenticateOidcArrayOutput() GetListenerDefaultActionAuthenticateOidcArrayOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateOidcArrayOutput) ToGetListenerDefaultActionAuthenticateOidcArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateOidcArrayOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateOidcArrayOutput) Index(i pulumi.IntInput) GetListenerDefaultActionAuthenticateOidcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenerDefaultActionAuthenticateOidc {
		return vs[0].([]GetListenerDefaultActionAuthenticateOidc)[vs[1].(int)]
	}).(GetListenerDefaultActionAuthenticateOidcOutput)
}

type GetListenerDefaultActionFixedResponse struct {
	ContentType string `pulumi:"contentType"`
	MessageBody string `pulumi:"messageBody"`
	StatusCode  string `pulumi:"statusCode"`
}

// GetListenerDefaultActionFixedResponseInput is an input type that accepts GetListenerDefaultActionFixedResponseArgs and GetListenerDefaultActionFixedResponseOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionFixedResponseInput` via:
//
//	GetListenerDefaultActionFixedResponseArgs{...}
type GetListenerDefaultActionFixedResponseInput interface {
	pulumi.Input

	ToGetListenerDefaultActionFixedResponseOutput() GetListenerDefaultActionFixedResponseOutput
	ToGetListenerDefaultActionFixedResponseOutputWithContext(context.Context) GetListenerDefaultActionFixedResponseOutput
}

type GetListenerDefaultActionFixedResponseArgs struct {
	ContentType pulumi.StringInput `pulumi:"contentType"`
	MessageBody pulumi.StringInput `pulumi:"messageBody"`
	StatusCode  pulumi.StringInput `pulumi:"statusCode"`
}

func (GetListenerDefaultActionFixedResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (i GetListenerDefaultActionFixedResponseArgs) ToGetListenerDefaultActionFixedResponseOutput() GetListenerDefaultActionFixedResponseOutput {
	return i.ToGetListenerDefaultActionFixedResponseOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionFixedResponseArgs) ToGetListenerDefaultActionFixedResponseOutputWithContext(ctx context.Context) GetListenerDefaultActionFixedResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionFixedResponseOutput)
}

// GetListenerDefaultActionFixedResponseArrayInput is an input type that accepts GetListenerDefaultActionFixedResponseArray and GetListenerDefaultActionFixedResponseArrayOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionFixedResponseArrayInput` via:
//
//	GetListenerDefaultActionFixedResponseArray{ GetListenerDefaultActionFixedResponseArgs{...} }
type GetListenerDefaultActionFixedResponseArrayInput interface {
	pulumi.Input

	ToGetListenerDefaultActionFixedResponseArrayOutput() GetListenerDefaultActionFixedResponseArrayOutput
	ToGetListenerDefaultActionFixedResponseArrayOutputWithContext(context.Context) GetListenerDefaultActionFixedResponseArrayOutput
}

type GetListenerDefaultActionFixedResponseArray []GetListenerDefaultActionFixedResponseInput

func (GetListenerDefaultActionFixedResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (i GetListenerDefaultActionFixedResponseArray) ToGetListenerDefaultActionFixedResponseArrayOutput() GetListenerDefaultActionFixedResponseArrayOutput {
	return i.ToGetListenerDefaultActionFixedResponseArrayOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionFixedResponseArray) ToGetListenerDefaultActionFixedResponseArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionFixedResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionFixedResponseArrayOutput)
}

type GetListenerDefaultActionFixedResponseOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionFixedResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (o GetListenerDefaultActionFixedResponseOutput) ToGetListenerDefaultActionFixedResponseOutput() GetListenerDefaultActionFixedResponseOutput {
	return o
}

func (o GetListenerDefaultActionFixedResponseOutput) ToGetListenerDefaultActionFixedResponseOutputWithContext(ctx context.Context) GetListenerDefaultActionFixedResponseOutput {
	return o
}

func (o GetListenerDefaultActionFixedResponseOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionFixedResponse) string { return v.ContentType }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionFixedResponseOutput) MessageBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionFixedResponse) string { return v.MessageBody }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionFixedResponseOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionFixedResponse) string { return v.StatusCode }).(pulumi.StringOutput)
}

type GetListenerDefaultActionFixedResponseArrayOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionFixedResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (o GetListenerDefaultActionFixedResponseArrayOutput) ToGetListenerDefaultActionFixedResponseArrayOutput() GetListenerDefaultActionFixedResponseArrayOutput {
	return o
}

func (o GetListenerDefaultActionFixedResponseArrayOutput) ToGetListenerDefaultActionFixedResponseArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionFixedResponseArrayOutput {
	return o
}

func (o GetListenerDefaultActionFixedResponseArrayOutput) Index(i pulumi.IntInput) GetListenerDefaultActionFixedResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenerDefaultActionFixedResponse {
		return vs[0].([]GetListenerDefaultActionFixedResponse)[vs[1].(int)]
	}).(GetListenerDefaultActionFixedResponseOutput)
}

type GetListenerDefaultActionForward struct {
	Stickinesses []GetListenerDefaultActionForwardStickiness  `pulumi:"stickinesses"`
	TargetGroups []GetListenerDefaultActionForwardTargetGroup `pulumi:"targetGroups"`
}

// GetListenerDefaultActionForwardInput is an input type that accepts GetListenerDefaultActionForwardArgs and GetListenerDefaultActionForwardOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionForwardInput` via:
//
//	GetListenerDefaultActionForwardArgs{...}
type GetListenerDefaultActionForwardInput interface {
	pulumi.Input

	ToGetListenerDefaultActionForwardOutput() GetListenerDefaultActionForwardOutput
	ToGetListenerDefaultActionForwardOutputWithContext(context.Context) GetListenerDefaultActionForwardOutput
}

type GetListenerDefaultActionForwardArgs struct {
	Stickinesses GetListenerDefaultActionForwardStickinessArrayInput  `pulumi:"stickinesses"`
	TargetGroups GetListenerDefaultActionForwardTargetGroupArrayInput `pulumi:"targetGroups"`
}

func (GetListenerDefaultActionForwardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionForward)(nil)).Elem()
}

func (i GetListenerDefaultActionForwardArgs) ToGetListenerDefaultActionForwardOutput() GetListenerDefaultActionForwardOutput {
	return i.ToGetListenerDefaultActionForwardOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionForwardArgs) ToGetListenerDefaultActionForwardOutputWithContext(ctx context.Context) GetListenerDefaultActionForwardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionForwardOutput)
}

// GetListenerDefaultActionForwardArrayInput is an input type that accepts GetListenerDefaultActionForwardArray and GetListenerDefaultActionForwardArrayOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionForwardArrayInput` via:
//
//	GetListenerDefaultActionForwardArray{ GetListenerDefaultActionForwardArgs{...} }
type GetListenerDefaultActionForwardArrayInput interface {
	pulumi.Input

	ToGetListenerDefaultActionForwardArrayOutput() GetListenerDefaultActionForwardArrayOutput
	ToGetListenerDefaultActionForwardArrayOutputWithContext(context.Context) GetListenerDefaultActionForwardArrayOutput
}

type GetListenerDefaultActionForwardArray []GetListenerDefaultActionForwardInput

func (GetListenerDefaultActionForwardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionForward)(nil)).Elem()
}

func (i GetListenerDefaultActionForwardArray) ToGetListenerDefaultActionForwardArrayOutput() GetListenerDefaultActionForwardArrayOutput {
	return i.ToGetListenerDefaultActionForwardArrayOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionForwardArray) ToGetListenerDefaultActionForwardArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionForwardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionForwardArrayOutput)
}

type GetListenerDefaultActionForwardOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionForwardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionForward)(nil)).Elem()
}

func (o GetListenerDefaultActionForwardOutput) ToGetListenerDefaultActionForwardOutput() GetListenerDefaultActionForwardOutput {
	return o
}

func (o GetListenerDefaultActionForwardOutput) ToGetListenerDefaultActionForwardOutputWithContext(ctx context.Context) GetListenerDefaultActionForwardOutput {
	return o
}

func (o GetListenerDefaultActionForwardOutput) Stickinesses() GetListenerDefaultActionForwardStickinessArrayOutput {
	return o.ApplyT(func(v GetListenerDefaultActionForward) []GetListenerDefaultActionForwardStickiness {
		return v.Stickinesses
	}).(GetListenerDefaultActionForwardStickinessArrayOutput)
}

func (o GetListenerDefaultActionForwardOutput) TargetGroups() GetListenerDefaultActionForwardTargetGroupArrayOutput {
	return o.ApplyT(func(v GetListenerDefaultActionForward) []GetListenerDefaultActionForwardTargetGroup {
		return v.TargetGroups
	}).(GetListenerDefaultActionForwardTargetGroupArrayOutput)
}

type GetListenerDefaultActionForwardArrayOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionForwardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionForward)(nil)).Elem()
}

func (o GetListenerDefaultActionForwardArrayOutput) ToGetListenerDefaultActionForwardArrayOutput() GetListenerDefaultActionForwardArrayOutput {
	return o
}

func (o GetListenerDefaultActionForwardArrayOutput) ToGetListenerDefaultActionForwardArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionForwardArrayOutput {
	return o
}

func (o GetListenerDefaultActionForwardArrayOutput) Index(i pulumi.IntInput) GetListenerDefaultActionForwardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenerDefaultActionForward {
		return vs[0].([]GetListenerDefaultActionForward)[vs[1].(int)]
	}).(GetListenerDefaultActionForwardOutput)
}

type GetListenerDefaultActionForwardStickiness struct {
	Duration int  `pulumi:"duration"`
	Enabled  bool `pulumi:"enabled"`
}

// GetListenerDefaultActionForwardStickinessInput is an input type that accepts GetListenerDefaultActionForwardStickinessArgs and GetListenerDefaultActionForwardStickinessOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionForwardStickinessInput` via:
//
//	GetListenerDefaultActionForwardStickinessArgs{...}
type GetListenerDefaultActionForwardStickinessInput interface {
	pulumi.Input

	ToGetListenerDefaultActionForwardStickinessOutput() GetListenerDefaultActionForwardStickinessOutput
	ToGetListenerDefaultActionForwardStickinessOutputWithContext(context.Context) GetListenerDefaultActionForwardStickinessOutput
}

type GetListenerDefaultActionForwardStickinessArgs struct {
	Duration pulumi.IntInput  `pulumi:"duration"`
	Enabled  pulumi.BoolInput `pulumi:"enabled"`
}

func (GetListenerDefaultActionForwardStickinessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionForwardStickiness)(nil)).Elem()
}

func (i GetListenerDefaultActionForwardStickinessArgs) ToGetListenerDefaultActionForwardStickinessOutput() GetListenerDefaultActionForwardStickinessOutput {
	return i.ToGetListenerDefaultActionForwardStickinessOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionForwardStickinessArgs) ToGetListenerDefaultActionForwardStickinessOutputWithContext(ctx context.Context) GetListenerDefaultActionForwardStickinessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionForwardStickinessOutput)
}

// GetListenerDefaultActionForwardStickinessArrayInput is an input type that accepts GetListenerDefaultActionForwardStickinessArray and GetListenerDefaultActionForwardStickinessArrayOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionForwardStickinessArrayInput` via:
//
//	GetListenerDefaultActionForwardStickinessArray{ GetListenerDefaultActionForwardStickinessArgs{...} }
type GetListenerDefaultActionForwardStickinessArrayInput interface {
	pulumi.Input

	ToGetListenerDefaultActionForwardStickinessArrayOutput() GetListenerDefaultActionForwardStickinessArrayOutput
	ToGetListenerDefaultActionForwardStickinessArrayOutputWithContext(context.Context) GetListenerDefaultActionForwardStickinessArrayOutput
}

type GetListenerDefaultActionForwardStickinessArray []GetListenerDefaultActionForwardStickinessInput

func (GetListenerDefaultActionForwardStickinessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionForwardStickiness)(nil)).Elem()
}

func (i GetListenerDefaultActionForwardStickinessArray) ToGetListenerDefaultActionForwardStickinessArrayOutput() GetListenerDefaultActionForwardStickinessArrayOutput {
	return i.ToGetListenerDefaultActionForwardStickinessArrayOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionForwardStickinessArray) ToGetListenerDefaultActionForwardStickinessArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionForwardStickinessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionForwardStickinessArrayOutput)
}

type GetListenerDefaultActionForwardStickinessOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionForwardStickinessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionForwardStickiness)(nil)).Elem()
}

func (o GetListenerDefaultActionForwardStickinessOutput) ToGetListenerDefaultActionForwardStickinessOutput() GetListenerDefaultActionForwardStickinessOutput {
	return o
}

func (o GetListenerDefaultActionForwardStickinessOutput) ToGetListenerDefaultActionForwardStickinessOutputWithContext(ctx context.Context) GetListenerDefaultActionForwardStickinessOutput {
	return o
}

func (o GetListenerDefaultActionForwardStickinessOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenerDefaultActionForwardStickiness) int { return v.Duration }).(pulumi.IntOutput)
}

func (o GetListenerDefaultActionForwardStickinessOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetListenerDefaultActionForwardStickiness) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetListenerDefaultActionForwardStickinessArrayOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionForwardStickinessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionForwardStickiness)(nil)).Elem()
}

func (o GetListenerDefaultActionForwardStickinessArrayOutput) ToGetListenerDefaultActionForwardStickinessArrayOutput() GetListenerDefaultActionForwardStickinessArrayOutput {
	return o
}

func (o GetListenerDefaultActionForwardStickinessArrayOutput) ToGetListenerDefaultActionForwardStickinessArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionForwardStickinessArrayOutput {
	return o
}

func (o GetListenerDefaultActionForwardStickinessArrayOutput) Index(i pulumi.IntInput) GetListenerDefaultActionForwardStickinessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenerDefaultActionForwardStickiness {
		return vs[0].([]GetListenerDefaultActionForwardStickiness)[vs[1].(int)]
	}).(GetListenerDefaultActionForwardStickinessOutput)
}

type GetListenerDefaultActionForwardTargetGroup struct {
	// ARN of the listener. Required if `loadBalancerArn` and `port` is not set.
	Arn    string `pulumi:"arn"`
	Weight int    `pulumi:"weight"`
}

// GetListenerDefaultActionForwardTargetGroupInput is an input type that accepts GetListenerDefaultActionForwardTargetGroupArgs and GetListenerDefaultActionForwardTargetGroupOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionForwardTargetGroupInput` via:
//
//	GetListenerDefaultActionForwardTargetGroupArgs{...}
type GetListenerDefaultActionForwardTargetGroupInput interface {
	pulumi.Input

	ToGetListenerDefaultActionForwardTargetGroupOutput() GetListenerDefaultActionForwardTargetGroupOutput
	ToGetListenerDefaultActionForwardTargetGroupOutputWithContext(context.Context) GetListenerDefaultActionForwardTargetGroupOutput
}

type GetListenerDefaultActionForwardTargetGroupArgs struct {
	// ARN of the listener. Required if `loadBalancerArn` and `port` is not set.
	Arn    pulumi.StringInput `pulumi:"arn"`
	Weight pulumi.IntInput    `pulumi:"weight"`
}

func (GetListenerDefaultActionForwardTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionForwardTargetGroup)(nil)).Elem()
}

func (i GetListenerDefaultActionForwardTargetGroupArgs) ToGetListenerDefaultActionForwardTargetGroupOutput() GetListenerDefaultActionForwardTargetGroupOutput {
	return i.ToGetListenerDefaultActionForwardTargetGroupOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionForwardTargetGroupArgs) ToGetListenerDefaultActionForwardTargetGroupOutputWithContext(ctx context.Context) GetListenerDefaultActionForwardTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionForwardTargetGroupOutput)
}

// GetListenerDefaultActionForwardTargetGroupArrayInput is an input type that accepts GetListenerDefaultActionForwardTargetGroupArray and GetListenerDefaultActionForwardTargetGroupArrayOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionForwardTargetGroupArrayInput` via:
//
//	GetListenerDefaultActionForwardTargetGroupArray{ GetListenerDefaultActionForwardTargetGroupArgs{...} }
type GetListenerDefaultActionForwardTargetGroupArrayInput interface {
	pulumi.Input

	ToGetListenerDefaultActionForwardTargetGroupArrayOutput() GetListenerDefaultActionForwardTargetGroupArrayOutput
	ToGetListenerDefaultActionForwardTargetGroupArrayOutputWithContext(context.Context) GetListenerDefaultActionForwardTargetGroupArrayOutput
}

type GetListenerDefaultActionForwardTargetGroupArray []GetListenerDefaultActionForwardTargetGroupInput

func (GetListenerDefaultActionForwardTargetGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionForwardTargetGroup)(nil)).Elem()
}

func (i GetListenerDefaultActionForwardTargetGroupArray) ToGetListenerDefaultActionForwardTargetGroupArrayOutput() GetListenerDefaultActionForwardTargetGroupArrayOutput {
	return i.ToGetListenerDefaultActionForwardTargetGroupArrayOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionForwardTargetGroupArray) ToGetListenerDefaultActionForwardTargetGroupArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionForwardTargetGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionForwardTargetGroupArrayOutput)
}

type GetListenerDefaultActionForwardTargetGroupOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionForwardTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionForwardTargetGroup)(nil)).Elem()
}

func (o GetListenerDefaultActionForwardTargetGroupOutput) ToGetListenerDefaultActionForwardTargetGroupOutput() GetListenerDefaultActionForwardTargetGroupOutput {
	return o
}

func (o GetListenerDefaultActionForwardTargetGroupOutput) ToGetListenerDefaultActionForwardTargetGroupOutputWithContext(ctx context.Context) GetListenerDefaultActionForwardTargetGroupOutput {
	return o
}

// ARN of the listener. Required if `loadBalancerArn` and `port` is not set.
func (o GetListenerDefaultActionForwardTargetGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionForwardTargetGroup) string { return v.Arn }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionForwardTargetGroupOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenerDefaultActionForwardTargetGroup) int { return v.Weight }).(pulumi.IntOutput)
}

type GetListenerDefaultActionForwardTargetGroupArrayOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionForwardTargetGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionForwardTargetGroup)(nil)).Elem()
}

func (o GetListenerDefaultActionForwardTargetGroupArrayOutput) ToGetListenerDefaultActionForwardTargetGroupArrayOutput() GetListenerDefaultActionForwardTargetGroupArrayOutput {
	return o
}

func (o GetListenerDefaultActionForwardTargetGroupArrayOutput) ToGetListenerDefaultActionForwardTargetGroupArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionForwardTargetGroupArrayOutput {
	return o
}

func (o GetListenerDefaultActionForwardTargetGroupArrayOutput) Index(i pulumi.IntInput) GetListenerDefaultActionForwardTargetGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenerDefaultActionForwardTargetGroup {
		return vs[0].([]GetListenerDefaultActionForwardTargetGroup)[vs[1].(int)]
	}).(GetListenerDefaultActionForwardTargetGroupOutput)
}

type GetListenerDefaultActionRedirect struct {
	Host string `pulumi:"host"`
	Path string `pulumi:"path"`
	// Port of the listener. Required if `arn` is not set.
	Port       string `pulumi:"port"`
	Protocol   string `pulumi:"protocol"`
	Query      string `pulumi:"query"`
	StatusCode string `pulumi:"statusCode"`
}

// GetListenerDefaultActionRedirectInput is an input type that accepts GetListenerDefaultActionRedirectArgs and GetListenerDefaultActionRedirectOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionRedirectInput` via:
//
//	GetListenerDefaultActionRedirectArgs{...}
type GetListenerDefaultActionRedirectInput interface {
	pulumi.Input

	ToGetListenerDefaultActionRedirectOutput() GetListenerDefaultActionRedirectOutput
	ToGetListenerDefaultActionRedirectOutputWithContext(context.Context) GetListenerDefaultActionRedirectOutput
}

type GetListenerDefaultActionRedirectArgs struct {
	Host pulumi.StringInput `pulumi:"host"`
	Path pulumi.StringInput `pulumi:"path"`
	// Port of the listener. Required if `arn` is not set.
	Port       pulumi.StringInput `pulumi:"port"`
	Protocol   pulumi.StringInput `pulumi:"protocol"`
	Query      pulumi.StringInput `pulumi:"query"`
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (GetListenerDefaultActionRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionRedirect)(nil)).Elem()
}

func (i GetListenerDefaultActionRedirectArgs) ToGetListenerDefaultActionRedirectOutput() GetListenerDefaultActionRedirectOutput {
	return i.ToGetListenerDefaultActionRedirectOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionRedirectArgs) ToGetListenerDefaultActionRedirectOutputWithContext(ctx context.Context) GetListenerDefaultActionRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionRedirectOutput)
}

// GetListenerDefaultActionRedirectArrayInput is an input type that accepts GetListenerDefaultActionRedirectArray and GetListenerDefaultActionRedirectArrayOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionRedirectArrayInput` via:
//
//	GetListenerDefaultActionRedirectArray{ GetListenerDefaultActionRedirectArgs{...} }
type GetListenerDefaultActionRedirectArrayInput interface {
	pulumi.Input

	ToGetListenerDefaultActionRedirectArrayOutput() GetListenerDefaultActionRedirectArrayOutput
	ToGetListenerDefaultActionRedirectArrayOutputWithContext(context.Context) GetListenerDefaultActionRedirectArrayOutput
}

type GetListenerDefaultActionRedirectArray []GetListenerDefaultActionRedirectInput

func (GetListenerDefaultActionRedirectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionRedirect)(nil)).Elem()
}

func (i GetListenerDefaultActionRedirectArray) ToGetListenerDefaultActionRedirectArrayOutput() GetListenerDefaultActionRedirectArrayOutput {
	return i.ToGetListenerDefaultActionRedirectArrayOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionRedirectArray) ToGetListenerDefaultActionRedirectArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionRedirectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionRedirectArrayOutput)
}

type GetListenerDefaultActionRedirectOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionRedirect)(nil)).Elem()
}

func (o GetListenerDefaultActionRedirectOutput) ToGetListenerDefaultActionRedirectOutput() GetListenerDefaultActionRedirectOutput {
	return o
}

func (o GetListenerDefaultActionRedirectOutput) ToGetListenerDefaultActionRedirectOutputWithContext(ctx context.Context) GetListenerDefaultActionRedirectOutput {
	return o
}

func (o GetListenerDefaultActionRedirectOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionRedirect) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionRedirectOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionRedirect) string { return v.Path }).(pulumi.StringOutput)
}

// Port of the listener. Required if `arn` is not set.
func (o GetListenerDefaultActionRedirectOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionRedirect) string { return v.Port }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionRedirectOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionRedirect) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionRedirectOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionRedirect) string { return v.Query }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionRedirectOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionRedirect) string { return v.StatusCode }).(pulumi.StringOutput)
}

type GetListenerDefaultActionRedirectArrayOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionRedirectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionRedirect)(nil)).Elem()
}

func (o GetListenerDefaultActionRedirectArrayOutput) ToGetListenerDefaultActionRedirectArrayOutput() GetListenerDefaultActionRedirectArrayOutput {
	return o
}

func (o GetListenerDefaultActionRedirectArrayOutput) ToGetListenerDefaultActionRedirectArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionRedirectArrayOutput {
	return o
}

func (o GetListenerDefaultActionRedirectArrayOutput) Index(i pulumi.IntInput) GetListenerDefaultActionRedirectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenerDefaultActionRedirect {
		return vs[0].([]GetListenerDefaultActionRedirect)[vs[1].(int)]
	}).(GetListenerDefaultActionRedirectOutput)
}

type GetListenerMutualAuthentication struct {
	IgnoreClientCertificateExpiry bool   `pulumi:"ignoreClientCertificateExpiry"`
	Mode                          string `pulumi:"mode"`
	TrustStoreArn                 string `pulumi:"trustStoreArn"`
}

// GetListenerMutualAuthenticationInput is an input type that accepts GetListenerMutualAuthenticationArgs and GetListenerMutualAuthenticationOutput values.
// You can construct a concrete instance of `GetListenerMutualAuthenticationInput` via:
//
//	GetListenerMutualAuthenticationArgs{...}
type GetListenerMutualAuthenticationInput interface {
	pulumi.Input

	ToGetListenerMutualAuthenticationOutput() GetListenerMutualAuthenticationOutput
	ToGetListenerMutualAuthenticationOutputWithContext(context.Context) GetListenerMutualAuthenticationOutput
}

type GetListenerMutualAuthenticationArgs struct {
	IgnoreClientCertificateExpiry pulumi.BoolInput   `pulumi:"ignoreClientCertificateExpiry"`
	Mode                          pulumi.StringInput `pulumi:"mode"`
	TrustStoreArn                 pulumi.StringInput `pulumi:"trustStoreArn"`
}

func (GetListenerMutualAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerMutualAuthentication)(nil)).Elem()
}

func (i GetListenerMutualAuthenticationArgs) ToGetListenerMutualAuthenticationOutput() GetListenerMutualAuthenticationOutput {
	return i.ToGetListenerMutualAuthenticationOutputWithContext(context.Background())
}

func (i GetListenerMutualAuthenticationArgs) ToGetListenerMutualAuthenticationOutputWithContext(ctx context.Context) GetListenerMutualAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerMutualAuthenticationOutput)
}

// GetListenerMutualAuthenticationArrayInput is an input type that accepts GetListenerMutualAuthenticationArray and GetListenerMutualAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetListenerMutualAuthenticationArrayInput` via:
//
//	GetListenerMutualAuthenticationArray{ GetListenerMutualAuthenticationArgs{...} }
type GetListenerMutualAuthenticationArrayInput interface {
	pulumi.Input

	ToGetListenerMutualAuthenticationArrayOutput() GetListenerMutualAuthenticationArrayOutput
	ToGetListenerMutualAuthenticationArrayOutputWithContext(context.Context) GetListenerMutualAuthenticationArrayOutput
}

type GetListenerMutualAuthenticationArray []GetListenerMutualAuthenticationInput

func (GetListenerMutualAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerMutualAuthentication)(nil)).Elem()
}

func (i GetListenerMutualAuthenticationArray) ToGetListenerMutualAuthenticationArrayOutput() GetListenerMutualAuthenticationArrayOutput {
	return i.ToGetListenerMutualAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetListenerMutualAuthenticationArray) ToGetListenerMutualAuthenticationArrayOutputWithContext(ctx context.Context) GetListenerMutualAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerMutualAuthenticationArrayOutput)
}

type GetListenerMutualAuthenticationOutput struct{ *pulumi.OutputState }

func (GetListenerMutualAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerMutualAuthentication)(nil)).Elem()
}

func (o GetListenerMutualAuthenticationOutput) ToGetListenerMutualAuthenticationOutput() GetListenerMutualAuthenticationOutput {
	return o
}

func (o GetListenerMutualAuthenticationOutput) ToGetListenerMutualAuthenticationOutputWithContext(ctx context.Context) GetListenerMutualAuthenticationOutput {
	return o
}

func (o GetListenerMutualAuthenticationOutput) IgnoreClientCertificateExpiry() pulumi.BoolOutput {
	return o.ApplyT(func(v GetListenerMutualAuthentication) bool { return v.IgnoreClientCertificateExpiry }).(pulumi.BoolOutput)
}

func (o GetListenerMutualAuthenticationOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerMutualAuthentication) string { return v.Mode }).(pulumi.StringOutput)
}

func (o GetListenerMutualAuthenticationOutput) TrustStoreArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerMutualAuthentication) string { return v.TrustStoreArn }).(pulumi.StringOutput)
}

type GetListenerMutualAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetListenerMutualAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerMutualAuthentication)(nil)).Elem()
}

func (o GetListenerMutualAuthenticationArrayOutput) ToGetListenerMutualAuthenticationArrayOutput() GetListenerMutualAuthenticationArrayOutput {
	return o
}

func (o GetListenerMutualAuthenticationArrayOutput) ToGetListenerMutualAuthenticationArrayOutputWithContext(ctx context.Context) GetListenerMutualAuthenticationArrayOutput {
	return o
}

func (o GetListenerMutualAuthenticationArrayOutput) Index(i pulumi.IntInput) GetListenerMutualAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenerMutualAuthentication {
		return vs[0].([]GetListenerMutualAuthentication)[vs[1].(int)]
	}).(GetListenerMutualAuthenticationOutput)
}

type GetLoadBalancerAccessLogs struct {
	Bucket  string `pulumi:"bucket"`
	Enabled bool   `pulumi:"enabled"`
	Prefix  string `pulumi:"prefix"`
}

// GetLoadBalancerAccessLogsInput is an input type that accepts GetLoadBalancerAccessLogsArgs and GetLoadBalancerAccessLogsOutput values.
// You can construct a concrete instance of `GetLoadBalancerAccessLogsInput` via:
//
//	GetLoadBalancerAccessLogsArgs{...}
type GetLoadBalancerAccessLogsInput interface {
	pulumi.Input

	ToGetLoadBalancerAccessLogsOutput() GetLoadBalancerAccessLogsOutput
	ToGetLoadBalancerAccessLogsOutputWithContext(context.Context) GetLoadBalancerAccessLogsOutput
}

type GetLoadBalancerAccessLogsArgs struct {
	Bucket  pulumi.StringInput `pulumi:"bucket"`
	Enabled pulumi.BoolInput   `pulumi:"enabled"`
	Prefix  pulumi.StringInput `pulumi:"prefix"`
}

func (GetLoadBalancerAccessLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerAccessLogs)(nil)).Elem()
}

func (i GetLoadBalancerAccessLogsArgs) ToGetLoadBalancerAccessLogsOutput() GetLoadBalancerAccessLogsOutput {
	return i.ToGetLoadBalancerAccessLogsOutputWithContext(context.Background())
}

func (i GetLoadBalancerAccessLogsArgs) ToGetLoadBalancerAccessLogsOutputWithContext(ctx context.Context) GetLoadBalancerAccessLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerAccessLogsOutput)
}

type GetLoadBalancerAccessLogsOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerAccessLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerAccessLogs)(nil)).Elem()
}

func (o GetLoadBalancerAccessLogsOutput) ToGetLoadBalancerAccessLogsOutput() GetLoadBalancerAccessLogsOutput {
	return o
}

func (o GetLoadBalancerAccessLogsOutput) ToGetLoadBalancerAccessLogsOutputWithContext(ctx context.Context) GetLoadBalancerAccessLogsOutput {
	return o
}

func (o GetLoadBalancerAccessLogsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerAccessLogs) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetLoadBalancerAccessLogsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoadBalancerAccessLogs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetLoadBalancerAccessLogsOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerAccessLogs) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetLoadBalancerConnectionLog struct {
	Bucket  string `pulumi:"bucket"`
	Enabled bool   `pulumi:"enabled"`
	Prefix  string `pulumi:"prefix"`
}

// GetLoadBalancerConnectionLogInput is an input type that accepts GetLoadBalancerConnectionLogArgs and GetLoadBalancerConnectionLogOutput values.
// You can construct a concrete instance of `GetLoadBalancerConnectionLogInput` via:
//
//	GetLoadBalancerConnectionLogArgs{...}
type GetLoadBalancerConnectionLogInput interface {
	pulumi.Input

	ToGetLoadBalancerConnectionLogOutput() GetLoadBalancerConnectionLogOutput
	ToGetLoadBalancerConnectionLogOutputWithContext(context.Context) GetLoadBalancerConnectionLogOutput
}

type GetLoadBalancerConnectionLogArgs struct {
	Bucket  pulumi.StringInput `pulumi:"bucket"`
	Enabled pulumi.BoolInput   `pulumi:"enabled"`
	Prefix  pulumi.StringInput `pulumi:"prefix"`
}

func (GetLoadBalancerConnectionLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerConnectionLog)(nil)).Elem()
}

func (i GetLoadBalancerConnectionLogArgs) ToGetLoadBalancerConnectionLogOutput() GetLoadBalancerConnectionLogOutput {
	return i.ToGetLoadBalancerConnectionLogOutputWithContext(context.Background())
}

func (i GetLoadBalancerConnectionLogArgs) ToGetLoadBalancerConnectionLogOutputWithContext(ctx context.Context) GetLoadBalancerConnectionLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerConnectionLogOutput)
}

// GetLoadBalancerConnectionLogArrayInput is an input type that accepts GetLoadBalancerConnectionLogArray and GetLoadBalancerConnectionLogArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerConnectionLogArrayInput` via:
//
//	GetLoadBalancerConnectionLogArray{ GetLoadBalancerConnectionLogArgs{...} }
type GetLoadBalancerConnectionLogArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerConnectionLogArrayOutput() GetLoadBalancerConnectionLogArrayOutput
	ToGetLoadBalancerConnectionLogArrayOutputWithContext(context.Context) GetLoadBalancerConnectionLogArrayOutput
}

type GetLoadBalancerConnectionLogArray []GetLoadBalancerConnectionLogInput

func (GetLoadBalancerConnectionLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerConnectionLog)(nil)).Elem()
}

func (i GetLoadBalancerConnectionLogArray) ToGetLoadBalancerConnectionLogArrayOutput() GetLoadBalancerConnectionLogArrayOutput {
	return i.ToGetLoadBalancerConnectionLogArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerConnectionLogArray) ToGetLoadBalancerConnectionLogArrayOutputWithContext(ctx context.Context) GetLoadBalancerConnectionLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerConnectionLogArrayOutput)
}

type GetLoadBalancerConnectionLogOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerConnectionLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerConnectionLog)(nil)).Elem()
}

func (o GetLoadBalancerConnectionLogOutput) ToGetLoadBalancerConnectionLogOutput() GetLoadBalancerConnectionLogOutput {
	return o
}

func (o GetLoadBalancerConnectionLogOutput) ToGetLoadBalancerConnectionLogOutputWithContext(ctx context.Context) GetLoadBalancerConnectionLogOutput {
	return o
}

func (o GetLoadBalancerConnectionLogOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerConnectionLog) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetLoadBalancerConnectionLogOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoadBalancerConnectionLog) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetLoadBalancerConnectionLogOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerConnectionLog) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetLoadBalancerConnectionLogArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerConnectionLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerConnectionLog)(nil)).Elem()
}

func (o GetLoadBalancerConnectionLogArrayOutput) ToGetLoadBalancerConnectionLogArrayOutput() GetLoadBalancerConnectionLogArrayOutput {
	return o
}

func (o GetLoadBalancerConnectionLogArrayOutput) ToGetLoadBalancerConnectionLogArrayOutputWithContext(ctx context.Context) GetLoadBalancerConnectionLogArrayOutput {
	return o
}

func (o GetLoadBalancerConnectionLogArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerConnectionLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerConnectionLog {
		return vs[0].([]GetLoadBalancerConnectionLog)[vs[1].(int)]
	}).(GetLoadBalancerConnectionLogOutput)
}

type GetLoadBalancerSubnetMapping struct {
	AllocationId       string `pulumi:"allocationId"`
	Ipv6Address        string `pulumi:"ipv6Address"`
	OutpostId          string `pulumi:"outpostId"`
	PrivateIpv4Address string `pulumi:"privateIpv4Address"`
	SubnetId           string `pulumi:"subnetId"`
}

// GetLoadBalancerSubnetMappingInput is an input type that accepts GetLoadBalancerSubnetMappingArgs and GetLoadBalancerSubnetMappingOutput values.
// You can construct a concrete instance of `GetLoadBalancerSubnetMappingInput` via:
//
//	GetLoadBalancerSubnetMappingArgs{...}
type GetLoadBalancerSubnetMappingInput interface {
	pulumi.Input

	ToGetLoadBalancerSubnetMappingOutput() GetLoadBalancerSubnetMappingOutput
	ToGetLoadBalancerSubnetMappingOutputWithContext(context.Context) GetLoadBalancerSubnetMappingOutput
}

type GetLoadBalancerSubnetMappingArgs struct {
	AllocationId       pulumi.StringInput `pulumi:"allocationId"`
	Ipv6Address        pulumi.StringInput `pulumi:"ipv6Address"`
	OutpostId          pulumi.StringInput `pulumi:"outpostId"`
	PrivateIpv4Address pulumi.StringInput `pulumi:"privateIpv4Address"`
	SubnetId           pulumi.StringInput `pulumi:"subnetId"`
}

func (GetLoadBalancerSubnetMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerSubnetMapping)(nil)).Elem()
}

func (i GetLoadBalancerSubnetMappingArgs) ToGetLoadBalancerSubnetMappingOutput() GetLoadBalancerSubnetMappingOutput {
	return i.ToGetLoadBalancerSubnetMappingOutputWithContext(context.Background())
}

func (i GetLoadBalancerSubnetMappingArgs) ToGetLoadBalancerSubnetMappingOutputWithContext(ctx context.Context) GetLoadBalancerSubnetMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerSubnetMappingOutput)
}

// GetLoadBalancerSubnetMappingArrayInput is an input type that accepts GetLoadBalancerSubnetMappingArray and GetLoadBalancerSubnetMappingArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerSubnetMappingArrayInput` via:
//
//	GetLoadBalancerSubnetMappingArray{ GetLoadBalancerSubnetMappingArgs{...} }
type GetLoadBalancerSubnetMappingArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerSubnetMappingArrayOutput() GetLoadBalancerSubnetMappingArrayOutput
	ToGetLoadBalancerSubnetMappingArrayOutputWithContext(context.Context) GetLoadBalancerSubnetMappingArrayOutput
}

type GetLoadBalancerSubnetMappingArray []GetLoadBalancerSubnetMappingInput

func (GetLoadBalancerSubnetMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerSubnetMapping)(nil)).Elem()
}

func (i GetLoadBalancerSubnetMappingArray) ToGetLoadBalancerSubnetMappingArrayOutput() GetLoadBalancerSubnetMappingArrayOutput {
	return i.ToGetLoadBalancerSubnetMappingArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerSubnetMappingArray) ToGetLoadBalancerSubnetMappingArrayOutputWithContext(ctx context.Context) GetLoadBalancerSubnetMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerSubnetMappingArrayOutput)
}

type GetLoadBalancerSubnetMappingOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerSubnetMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerSubnetMapping)(nil)).Elem()
}

func (o GetLoadBalancerSubnetMappingOutput) ToGetLoadBalancerSubnetMappingOutput() GetLoadBalancerSubnetMappingOutput {
	return o
}

func (o GetLoadBalancerSubnetMappingOutput) ToGetLoadBalancerSubnetMappingOutputWithContext(ctx context.Context) GetLoadBalancerSubnetMappingOutput {
	return o
}

func (o GetLoadBalancerSubnetMappingOutput) AllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerSubnetMapping) string { return v.AllocationId }).(pulumi.StringOutput)
}

func (o GetLoadBalancerSubnetMappingOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerSubnetMapping) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

func (o GetLoadBalancerSubnetMappingOutput) OutpostId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerSubnetMapping) string { return v.OutpostId }).(pulumi.StringOutput)
}

func (o GetLoadBalancerSubnetMappingOutput) PrivateIpv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerSubnetMapping) string { return v.PrivateIpv4Address }).(pulumi.StringOutput)
}

func (o GetLoadBalancerSubnetMappingOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerSubnetMapping) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetLoadBalancerSubnetMappingArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerSubnetMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerSubnetMapping)(nil)).Elem()
}

func (o GetLoadBalancerSubnetMappingArrayOutput) ToGetLoadBalancerSubnetMappingArrayOutput() GetLoadBalancerSubnetMappingArrayOutput {
	return o
}

func (o GetLoadBalancerSubnetMappingArrayOutput) ToGetLoadBalancerSubnetMappingArrayOutputWithContext(ctx context.Context) GetLoadBalancerSubnetMappingArrayOutput {
	return o
}

func (o GetLoadBalancerSubnetMappingArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerSubnetMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerSubnetMapping {
		return vs[0].([]GetLoadBalancerSubnetMapping)[vs[1].(int)]
	}).(GetLoadBalancerSubnetMappingOutput)
}

type GetTargetGroupHealthCheck struct {
	Enabled            bool   `pulumi:"enabled"`
	HealthyThreshold   int    `pulumi:"healthyThreshold"`
	Interval           int    `pulumi:"interval"`
	Matcher            string `pulumi:"matcher"`
	Path               string `pulumi:"path"`
	Port               string `pulumi:"port"`
	Protocol           string `pulumi:"protocol"`
	Timeout            int    `pulumi:"timeout"`
	UnhealthyThreshold int    `pulumi:"unhealthyThreshold"`
}

// GetTargetGroupHealthCheckInput is an input type that accepts GetTargetGroupHealthCheckArgs and GetTargetGroupHealthCheckOutput values.
// You can construct a concrete instance of `GetTargetGroupHealthCheckInput` via:
//
//	GetTargetGroupHealthCheckArgs{...}
type GetTargetGroupHealthCheckInput interface {
	pulumi.Input

	ToGetTargetGroupHealthCheckOutput() GetTargetGroupHealthCheckOutput
	ToGetTargetGroupHealthCheckOutputWithContext(context.Context) GetTargetGroupHealthCheckOutput
}

type GetTargetGroupHealthCheckArgs struct {
	Enabled            pulumi.BoolInput   `pulumi:"enabled"`
	HealthyThreshold   pulumi.IntInput    `pulumi:"healthyThreshold"`
	Interval           pulumi.IntInput    `pulumi:"interval"`
	Matcher            pulumi.StringInput `pulumi:"matcher"`
	Path               pulumi.StringInput `pulumi:"path"`
	Port               pulumi.StringInput `pulumi:"port"`
	Protocol           pulumi.StringInput `pulumi:"protocol"`
	Timeout            pulumi.IntInput    `pulumi:"timeout"`
	UnhealthyThreshold pulumi.IntInput    `pulumi:"unhealthyThreshold"`
}

func (GetTargetGroupHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupHealthCheck)(nil)).Elem()
}

func (i GetTargetGroupHealthCheckArgs) ToGetTargetGroupHealthCheckOutput() GetTargetGroupHealthCheckOutput {
	return i.ToGetTargetGroupHealthCheckOutputWithContext(context.Background())
}

func (i GetTargetGroupHealthCheckArgs) ToGetTargetGroupHealthCheckOutputWithContext(ctx context.Context) GetTargetGroupHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupHealthCheckOutput)
}

type GetTargetGroupHealthCheckOutput struct{ *pulumi.OutputState }

func (GetTargetGroupHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupHealthCheck)(nil)).Elem()
}

func (o GetTargetGroupHealthCheckOutput) ToGetTargetGroupHealthCheckOutput() GetTargetGroupHealthCheckOutput {
	return o
}

func (o GetTargetGroupHealthCheckOutput) ToGetTargetGroupHealthCheckOutputWithContext(ctx context.Context) GetTargetGroupHealthCheckOutput {
	return o
}

func (o GetTargetGroupHealthCheckOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetTargetGroupHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

func (o GetTargetGroupHealthCheckOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) int { return v.Interval }).(pulumi.IntOutput)
}

func (o GetTargetGroupHealthCheckOutput) Matcher() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) string { return v.Matcher }).(pulumi.StringOutput)
}

func (o GetTargetGroupHealthCheckOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetTargetGroupHealthCheckOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) string { return v.Port }).(pulumi.StringOutput)
}

func (o GetTargetGroupHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetTargetGroupHealthCheckOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) int { return v.Timeout }).(pulumi.IntOutput)
}

func (o GetTargetGroupHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type GetTargetGroupStickiness struct {
	CookieDuration int    `pulumi:"cookieDuration"`
	CookieName     string `pulumi:"cookieName"`
	Enabled        bool   `pulumi:"enabled"`
	Type           string `pulumi:"type"`
}

// GetTargetGroupStickinessInput is an input type that accepts GetTargetGroupStickinessArgs and GetTargetGroupStickinessOutput values.
// You can construct a concrete instance of `GetTargetGroupStickinessInput` via:
//
//	GetTargetGroupStickinessArgs{...}
type GetTargetGroupStickinessInput interface {
	pulumi.Input

	ToGetTargetGroupStickinessOutput() GetTargetGroupStickinessOutput
	ToGetTargetGroupStickinessOutputWithContext(context.Context) GetTargetGroupStickinessOutput
}

type GetTargetGroupStickinessArgs struct {
	CookieDuration pulumi.IntInput    `pulumi:"cookieDuration"`
	CookieName     pulumi.StringInput `pulumi:"cookieName"`
	Enabled        pulumi.BoolInput   `pulumi:"enabled"`
	Type           pulumi.StringInput `pulumi:"type"`
}

func (GetTargetGroupStickinessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupStickiness)(nil)).Elem()
}

func (i GetTargetGroupStickinessArgs) ToGetTargetGroupStickinessOutput() GetTargetGroupStickinessOutput {
	return i.ToGetTargetGroupStickinessOutputWithContext(context.Background())
}

func (i GetTargetGroupStickinessArgs) ToGetTargetGroupStickinessOutputWithContext(ctx context.Context) GetTargetGroupStickinessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupStickinessOutput)
}

type GetTargetGroupStickinessOutput struct{ *pulumi.OutputState }

func (GetTargetGroupStickinessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupStickiness)(nil)).Elem()
}

func (o GetTargetGroupStickinessOutput) ToGetTargetGroupStickinessOutput() GetTargetGroupStickinessOutput {
	return o
}

func (o GetTargetGroupStickinessOutput) ToGetTargetGroupStickinessOutputWithContext(ctx context.Context) GetTargetGroupStickinessOutput {
	return o
}

func (o GetTargetGroupStickinessOutput) CookieDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupStickiness) int { return v.CookieDuration }).(pulumi.IntOutput)
}

func (o GetTargetGroupStickinessOutput) CookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupStickiness) string { return v.CookieName }).(pulumi.StringOutput)
}

func (o GetTargetGroupStickinessOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetGroupStickiness) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetTargetGroupStickinessOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupStickiness) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionInput)(nil)).Elem(), ListenerDefaultActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionArrayInput)(nil)).Elem(), ListenerDefaultActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionAuthenticateCognitoInput)(nil)).Elem(), ListenerDefaultActionAuthenticateCognitoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionAuthenticateCognitoPtrInput)(nil)).Elem(), ListenerDefaultActionAuthenticateCognitoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionAuthenticateOidcInput)(nil)).Elem(), ListenerDefaultActionAuthenticateOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionAuthenticateOidcPtrInput)(nil)).Elem(), ListenerDefaultActionAuthenticateOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionFixedResponseInput)(nil)).Elem(), ListenerDefaultActionFixedResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionFixedResponsePtrInput)(nil)).Elem(), ListenerDefaultActionFixedResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionForwardInput)(nil)).Elem(), ListenerDefaultActionForwardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionForwardPtrInput)(nil)).Elem(), ListenerDefaultActionForwardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionForwardStickinessInput)(nil)).Elem(), ListenerDefaultActionForwardStickinessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionForwardStickinessPtrInput)(nil)).Elem(), ListenerDefaultActionForwardStickinessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionForwardTargetGroupInput)(nil)).Elem(), ListenerDefaultActionForwardTargetGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionForwardTargetGroupArrayInput)(nil)).Elem(), ListenerDefaultActionForwardTargetGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionRedirectInput)(nil)).Elem(), ListenerDefaultActionRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDefaultActionRedirectPtrInput)(nil)).Elem(), ListenerDefaultActionRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerMutualAuthenticationInput)(nil)).Elem(), ListenerMutualAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerMutualAuthenticationPtrInput)(nil)).Elem(), ListenerMutualAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionInput)(nil)).Elem(), ListenerRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionArrayInput)(nil)).Elem(), ListenerRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionAuthenticateCognitoInput)(nil)).Elem(), ListenerRuleActionAuthenticateCognitoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionAuthenticateCognitoPtrInput)(nil)).Elem(), ListenerRuleActionAuthenticateCognitoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionAuthenticateOidcInput)(nil)).Elem(), ListenerRuleActionAuthenticateOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionAuthenticateOidcPtrInput)(nil)).Elem(), ListenerRuleActionAuthenticateOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionFixedResponseInput)(nil)).Elem(), ListenerRuleActionFixedResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionFixedResponsePtrInput)(nil)).Elem(), ListenerRuleActionFixedResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionForwardInput)(nil)).Elem(), ListenerRuleActionForwardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionForwardPtrInput)(nil)).Elem(), ListenerRuleActionForwardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionForwardStickinessInput)(nil)).Elem(), ListenerRuleActionForwardStickinessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionForwardStickinessPtrInput)(nil)).Elem(), ListenerRuleActionForwardStickinessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionForwardTargetGroupInput)(nil)).Elem(), ListenerRuleActionForwardTargetGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionForwardTargetGroupArrayInput)(nil)).Elem(), ListenerRuleActionForwardTargetGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionRedirectInput)(nil)).Elem(), ListenerRuleActionRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionRedirectPtrInput)(nil)).Elem(), ListenerRuleActionRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleConditionInput)(nil)).Elem(), ListenerRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleConditionArrayInput)(nil)).Elem(), ListenerRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleConditionHostHeaderInput)(nil)).Elem(), ListenerRuleConditionHostHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleConditionHostHeaderPtrInput)(nil)).Elem(), ListenerRuleConditionHostHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleConditionHttpHeaderInput)(nil)).Elem(), ListenerRuleConditionHttpHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleConditionHttpHeaderPtrInput)(nil)).Elem(), ListenerRuleConditionHttpHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleConditionHttpRequestMethodInput)(nil)).Elem(), ListenerRuleConditionHttpRequestMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleConditionHttpRequestMethodPtrInput)(nil)).Elem(), ListenerRuleConditionHttpRequestMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleConditionPathPatternInput)(nil)).Elem(), ListenerRuleConditionPathPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleConditionPathPatternPtrInput)(nil)).Elem(), ListenerRuleConditionPathPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleConditionQueryStringInput)(nil)).Elem(), ListenerRuleConditionQueryStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleConditionQueryStringArrayInput)(nil)).Elem(), ListenerRuleConditionQueryStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleConditionSourceIpInput)(nil)).Elem(), ListenerRuleConditionSourceIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleConditionSourceIpPtrInput)(nil)).Elem(), ListenerRuleConditionSourceIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAccessLogsInput)(nil)).Elem(), LoadBalancerAccessLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAccessLogsPtrInput)(nil)).Elem(), LoadBalancerAccessLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerConnectionLogsInput)(nil)).Elem(), LoadBalancerConnectionLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerConnectionLogsPtrInput)(nil)).Elem(), LoadBalancerConnectionLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerSubnetMappingInput)(nil)).Elem(), LoadBalancerSubnetMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerSubnetMappingArrayInput)(nil)).Elem(), LoadBalancerSubnetMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupHealthCheckInput)(nil)).Elem(), TargetGroupHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupHealthCheckPtrInput)(nil)).Elem(), TargetGroupHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupStickinessInput)(nil)).Elem(), TargetGroupStickinessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupStickinessPtrInput)(nil)).Elem(), TargetGroupStickinessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupTargetFailoverInput)(nil)).Elem(), TargetGroupTargetFailoverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupTargetFailoverArrayInput)(nil)).Elem(), TargetGroupTargetFailoverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupTargetHealthStateInput)(nil)).Elem(), TargetGroupTargetHealthStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupTargetHealthStateArrayInput)(nil)).Elem(), TargetGroupTargetHealthStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionInput)(nil)).Elem(), GetListenerDefaultActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionArrayInput)(nil)).Elem(), GetListenerDefaultActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionAuthenticateCognitoInput)(nil)).Elem(), GetListenerDefaultActionAuthenticateCognitoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionAuthenticateCognitoArrayInput)(nil)).Elem(), GetListenerDefaultActionAuthenticateCognitoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionAuthenticateOidcInput)(nil)).Elem(), GetListenerDefaultActionAuthenticateOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionAuthenticateOidcArrayInput)(nil)).Elem(), GetListenerDefaultActionAuthenticateOidcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionFixedResponseInput)(nil)).Elem(), GetListenerDefaultActionFixedResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionFixedResponseArrayInput)(nil)).Elem(), GetListenerDefaultActionFixedResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionForwardInput)(nil)).Elem(), GetListenerDefaultActionForwardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionForwardArrayInput)(nil)).Elem(), GetListenerDefaultActionForwardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionForwardStickinessInput)(nil)).Elem(), GetListenerDefaultActionForwardStickinessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionForwardStickinessArrayInput)(nil)).Elem(), GetListenerDefaultActionForwardStickinessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionForwardTargetGroupInput)(nil)).Elem(), GetListenerDefaultActionForwardTargetGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionForwardTargetGroupArrayInput)(nil)).Elem(), GetListenerDefaultActionForwardTargetGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionRedirectInput)(nil)).Elem(), GetListenerDefaultActionRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerDefaultActionRedirectArrayInput)(nil)).Elem(), GetListenerDefaultActionRedirectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerMutualAuthenticationInput)(nil)).Elem(), GetListenerMutualAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenerMutualAuthenticationArrayInput)(nil)).Elem(), GetListenerMutualAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerAccessLogsInput)(nil)).Elem(), GetLoadBalancerAccessLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerConnectionLogInput)(nil)).Elem(), GetLoadBalancerConnectionLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerConnectionLogArrayInput)(nil)).Elem(), GetLoadBalancerConnectionLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerSubnetMappingInput)(nil)).Elem(), GetLoadBalancerSubnetMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerSubnetMappingArrayInput)(nil)).Elem(), GetLoadBalancerSubnetMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTargetGroupHealthCheckInput)(nil)).Elem(), GetTargetGroupHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTargetGroupStickinessInput)(nil)).Elem(), GetTargetGroupStickinessArgs{})
	pulumi.RegisterOutputType(ListenerDefaultActionOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionArrayOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionAuthenticateCognitoOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionAuthenticateCognitoPtrOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionAuthenticateOidcOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionAuthenticateOidcPtrOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionFixedResponseOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionFixedResponsePtrOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionForwardOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionForwardPtrOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionForwardStickinessOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionForwardStickinessPtrOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionForwardTargetGroupOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionForwardTargetGroupArrayOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionRedirectOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionRedirectPtrOutput{})
	pulumi.RegisterOutputType(ListenerMutualAuthenticationOutput{})
	pulumi.RegisterOutputType(ListenerMutualAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionArrayOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionAuthenticateCognitoOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionAuthenticateCognitoPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionAuthenticateOidcOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionAuthenticateOidcPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionFixedResponseOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionFixedResponsePtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionForwardOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionForwardPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionForwardStickinessOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionForwardStickinessPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionForwardTargetGroupOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionForwardTargetGroupArrayOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionRedirectOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionRedirectPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionHostHeaderOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionHostHeaderPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionHttpHeaderOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionHttpHeaderPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionHttpRequestMethodOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionHttpRequestMethodPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionPathPatternOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionPathPatternPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionQueryStringOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionQueryStringArrayOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionSourceIpOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionSourceIpPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerAccessLogsOutput{})
	pulumi.RegisterOutputType(LoadBalancerAccessLogsPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerConnectionLogsOutput{})
	pulumi.RegisterOutputType(LoadBalancerConnectionLogsPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerSubnetMappingOutput{})
	pulumi.RegisterOutputType(LoadBalancerSubnetMappingArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupHealthCheckOutput{})
	pulumi.RegisterOutputType(TargetGroupHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(TargetGroupStickinessOutput{})
	pulumi.RegisterOutputType(TargetGroupStickinessPtrOutput{})
	pulumi.RegisterOutputType(TargetGroupTargetFailoverOutput{})
	pulumi.RegisterOutputType(TargetGroupTargetFailoverArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupTargetHealthStateOutput{})
	pulumi.RegisterOutputType(TargetGroupTargetHealthStateArrayOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionArrayOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionAuthenticateCognitoOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionAuthenticateCognitoArrayOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionAuthenticateOidcOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionAuthenticateOidcArrayOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionFixedResponseOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionFixedResponseArrayOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionForwardOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionForwardArrayOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionForwardStickinessOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionForwardStickinessArrayOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionForwardTargetGroupOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionForwardTargetGroupArrayOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionRedirectOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionRedirectArrayOutput{})
	pulumi.RegisterOutputType(GetListenerMutualAuthenticationOutput{})
	pulumi.RegisterOutputType(GetListenerMutualAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerAccessLogsOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerConnectionLogOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerConnectionLogArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerSubnetMappingOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerSubnetMappingArrayOutput{})
	pulumi.RegisterOutputType(GetTargetGroupHealthCheckOutput{})
	pulumi.RegisterOutputType(GetTargetGroupStickinessOutput{})
}
