// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package odb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing oracle database network peering resource in AWS.
//
// You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/odb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := odb.LookupNetworkPeeringConnection(ctx, &odb.LookupNetworkPeeringConnectionArgs{
//				Id: "example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNetworkPeeringConnection(ctx *pulumi.Context, args *LookupNetworkPeeringConnectionArgs, opts ...pulumi.InvokeOption) (*LookupNetworkPeeringConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkPeeringConnectionResult
	err := ctx.Invoke("aws:odb/getNetworkPeeringConnection:getNetworkPeeringConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkPeeringConnection.
type LookupNetworkPeeringConnectionArgs struct {
	// The unique identifier of the Exadata infrastructure.
	//
	// The following arguments are optional:
	Id string `pulumi:"id"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getNetworkPeeringConnection.
type LookupNetworkPeeringConnectionResult struct {
	// The Amazon Resource Name (ARN) for the Exadata infrastructure.
	Arn string `pulumi:"arn"`
	// Created time of the ODB network peering connection.
	CreatedAt string `pulumi:"createdAt"`
	// Display name of the ODB network peering connection.
	DisplayName string `pulumi:"displayName"`
	Id          string `pulumi:"id"`
	// ARN of the ODB network peering connection.
	OdbNetworkArn string `pulumi:"odbNetworkArn"`
	// Type of the ODB peering connection.
	OdbPeeringConnectionType string `pulumi:"odbPeeringConnectionType"`
	// ARN of the peer network peering connection.
	PeerNetworkArn string `pulumi:"peerNetworkArn"`
	// Progress of the ODB network peering connection.
	PercentProgress float64 `pulumi:"percentProgress"`
	Region          string  `pulumi:"region"`
	// Status of the ODB network peering connection.
	Status string `pulumi:"status"`
	// Status of the ODB network peering connection.
	StatusReason string `pulumi:"statusReason"`
	// Tags applied to the resource.
	Tags map[string]string `pulumi:"tags"`
}

func LookupNetworkPeeringConnectionOutput(ctx *pulumi.Context, args LookupNetworkPeeringConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkPeeringConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetworkPeeringConnectionResultOutput, error) {
			args := v.(LookupNetworkPeeringConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws:odb/getNetworkPeeringConnection:getNetworkPeeringConnection", args, LookupNetworkPeeringConnectionResultOutput{}, options).(LookupNetworkPeeringConnectionResultOutput), nil
		}).(LookupNetworkPeeringConnectionResultOutput)
}

// A collection of arguments for invoking getNetworkPeeringConnection.
type LookupNetworkPeeringConnectionOutputArgs struct {
	// The unique identifier of the Exadata infrastructure.
	//
	// The following arguments are optional:
	Id pulumi.StringInput `pulumi:"id"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupNetworkPeeringConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkPeeringConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkPeeringConnection.
type LookupNetworkPeeringConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkPeeringConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkPeeringConnectionResult)(nil)).Elem()
}

func (o LookupNetworkPeeringConnectionResultOutput) ToLookupNetworkPeeringConnectionResultOutput() LookupNetworkPeeringConnectionResultOutput {
	return o
}

func (o LookupNetworkPeeringConnectionResultOutput) ToLookupNetworkPeeringConnectionResultOutputWithContext(ctx context.Context) LookupNetworkPeeringConnectionResultOutput {
	return o
}

// The Amazon Resource Name (ARN) for the Exadata infrastructure.
func (o LookupNetworkPeeringConnectionResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringConnectionResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Created time of the ODB network peering connection.
func (o LookupNetworkPeeringConnectionResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringConnectionResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Display name of the ODB network peering connection.
func (o LookupNetworkPeeringConnectionResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringConnectionResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupNetworkPeeringConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// ARN of the ODB network peering connection.
func (o LookupNetworkPeeringConnectionResultOutput) OdbNetworkArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringConnectionResult) string { return v.OdbNetworkArn }).(pulumi.StringOutput)
}

// Type of the ODB peering connection.
func (o LookupNetworkPeeringConnectionResultOutput) OdbPeeringConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringConnectionResult) string { return v.OdbPeeringConnectionType }).(pulumi.StringOutput)
}

// ARN of the peer network peering connection.
func (o LookupNetworkPeeringConnectionResultOutput) PeerNetworkArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringConnectionResult) string { return v.PeerNetworkArn }).(pulumi.StringOutput)
}

// Progress of the ODB network peering connection.
func (o LookupNetworkPeeringConnectionResultOutput) PercentProgress() pulumi.Float64Output {
	return o.ApplyT(func(v LookupNetworkPeeringConnectionResult) float64 { return v.PercentProgress }).(pulumi.Float64Output)
}

func (o LookupNetworkPeeringConnectionResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringConnectionResult) string { return v.Region }).(pulumi.StringOutput)
}

// Status of the ODB network peering connection.
func (o LookupNetworkPeeringConnectionResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringConnectionResult) string { return v.Status }).(pulumi.StringOutput)
}

// Status of the ODB network peering connection.
func (o LookupNetworkPeeringConnectionResultOutput) StatusReason() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringConnectionResult) string { return v.StatusReason }).(pulumi.StringOutput)
}

// Tags applied to the resource.
func (o LookupNetworkPeeringConnectionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNetworkPeeringConnectionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkPeeringConnectionResultOutput{})
}
