// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package odb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/odb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := odb.NewCloudVmCluster(ctx, "with_minimum_parameter", &odb.CloudVmClusterArgs{
//				DisplayName:                  pulumi.String("my_vm_cluster"),
//				CloudExadataInfrastructureId: pulumi.String("<aws_odb_cloud_exadata_infrastructure_id>"),
//				CpuCoreCount:                 pulumi.Int(6),
//				GiVersion:                    pulumi.String("23.0.0.0"),
//				HostnamePrefix:               pulumi.String("apollo12"),
//				SshPublicKeys: pulumi.StringArray{
//					pulumi.String("public-ssh-key"),
//				},
//				OdbNetworkId:             pulumi.String("<aws_odb_network_id>"),
//				IsLocalBackupEnabled:     pulumi.Bool(true),
//				IsSparseDiskgroupEnabled: pulumi.Bool(true),
//				LicenseModel:             pulumi.String("LICENSE_INCLUDED"),
//				DataStorageSizeInTbs:     pulumi.Float64(20),
//				DbServers: pulumi.StringArray{
//					pulumi.String("db-server-1"),
//					pulumi.String("db-server-2"),
//				},
//				DbNodeStorageSizeInGbs: pulumi.Int(120),
//				MemorySizeInGbs:        pulumi.Int(60),
//				DataCollectionOptions: &odb.CloudVmClusterDataCollectionOptionsArgs{
//					IsDiagnosticsEventsEnabled: pulumi.Bool(false),
//					IsHealthMonitoringEnabled:  pulumi.Bool(false),
//					IsIncidentLogsEnabled:      pulumi.Bool(false),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = odb.NewCloudVmCluster(ctx, "with_all_parameters", &odb.CloudVmClusterArgs{
//				DisplayName:                  pulumi.String("my_vm_cluster"),
//				CloudExadataInfrastructureId: pulumi.String("<aws_odb_cloud_exadata_infrastructure_id>"),
//				CpuCoreCount:                 pulumi.Int(6),
//				GiVersion:                    pulumi.String("23.0.0.0"),
//				HostnamePrefix:               pulumi.String("apollo12"),
//				SshPublicKeys: pulumi.StringArray{
//					pulumi.String("my-ssh-key"),
//				},
//				OdbNetworkId:             pulumi.String("<aws_odb_network_id>"),
//				IsLocalBackupEnabled:     pulumi.Bool(true),
//				IsSparseDiskgroupEnabled: pulumi.Bool(true),
//				LicenseModel:             pulumi.String("LICENSE_INCLUDED"),
//				DataStorageSizeInTbs:     pulumi.Float64(20),
//				DbServers: pulumi.StringArray{
//					pulumi.String("my-dbserver-1"),
//					pulumi.String("my-db-server-2"),
//				},
//				DbNodeStorageSizeInGbs: pulumi.Int(120),
//				MemorySizeInGbs:        pulumi.Int(60),
//				ClusterName:            pulumi.String("julia-13"),
//				Timezone:               pulumi.String("UTC"),
//				ScanListenerPortTcp:    pulumi.Int(1521),
//				Tags: pulumi.StringMap{
//					"env": pulumi.String("dev"),
//				},
//				DataCollectionOptions: &odb.CloudVmClusterDataCollectionOptionsArgs{
//					IsDiagnosticsEventsEnabled: pulumi.Bool(true),
//					IsHealthMonitoringEnabled:  pulumi.Bool(true),
//					IsIncidentLogsEnabled:      pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import cloud vm cluster using the `id`. For example:
//
// ```sh
// $ pulumi import aws:odb/cloudVmCluster:CloudVmCluster example example
// ```
type CloudVmCluster struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) for the cloud vm cluster.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
	CloudExadataInfrastructureId pulumi.StringOutput `pulumi:"cloudExadataInfrastructureId"`
	// The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
	ClusterName pulumi.StringOutput `pulumi:"clusterName"`
	// The compute model used when the instance is created or cloned — either ECPU or OCPU. ECPU is a virtualized compute unit; OCPU is a physical processor core with hyper-threading.
	ComputeModel pulumi.StringOutput `pulumi:"computeModel"`
	// The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
	CpuCoreCount pulumi.IntOutput `pulumi:"cpuCoreCount"`
	// The timestamp when the VM cluster was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The set of preferences for the various diagnostic collection options for the VM cluster.
	DataCollectionOptions CloudVmClusterDataCollectionOptionsPtrOutput `pulumi:"dataCollectionOptions"`
	// The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
	//
	// The following arguments are optional:
	DataStorageSizeInTbs pulumi.Float64Output `pulumi:"dataStorageSizeInTbs"`
	// The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
	DbNodeStorageSizeInGbs pulumi.IntOutput `pulumi:"dbNodeStorageSizeInGbs"`
	// The list of database servers for the VM cluster. Changing this will create a new resource.
	DbServers pulumi.StringArrayOutput `pulumi:"dbServers"`
	// The type of redundancy for the VM cluster: NORMAL (2-way) or HIGH (3-way).
	// * `AttrDomain` - The domain name associated with the VM cluster.
	DiskRedundancy pulumi.StringOutput `pulumi:"diskRedundancy"`
	// A user-friendly name for the VM cluster. Changing this will create a new resource.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The domain name associated with the VM cluster.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
	GiVersion pulumi.StringOutput `pulumi:"giVersion"`
	// A complete software version of Oracle Grid Infrastructure (GI).
	GiVersionComputed pulumi.StringOutput `pulumi:"giVersionComputed"`
	// The host name prefix for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
	HostnamePrefix pulumi.StringOutput `pulumi:"hostnamePrefix"`
	// The host name for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. This member is required. Changing this will create a new resource.
	HostnamePrefixComputed pulumi.StringOutput `pulumi:"hostnamePrefixComputed"`
	// The Exadata IORM (I/O Resource Manager) configuration cache details for the VM cluster.
	IormConfigCaches CloudVmClusterIormConfigCachArrayOutput `pulumi:"iormConfigCaches"`
	// Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
	IsLocalBackupEnabled pulumi.BoolOutput `pulumi:"isLocalBackupEnabled"`
	// Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
	IsSparseDiskgroupEnabled pulumi.BoolOutput `pulumi:"isSparseDiskgroupEnabled"`
	// The OCID of the most recent maintenance update history entry.
	LastUpdateHistoryEntryId pulumi.StringOutput `pulumi:"lastUpdateHistoryEntryId"`
	// The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
	LicenseModel pulumi.StringOutput `pulumi:"licenseModel"`
	// The listener port number configured on the VM cluster.
	ListenerPort pulumi.IntOutput `pulumi:"listenerPort"`
	// The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
	MemorySizeInGbs pulumi.IntOutput `pulumi:"memorySizeInGbs"`
	// The total number of nodes in the VM cluster.
	NodeCount pulumi.IntOutput `pulumi:"nodeCount"`
	// The name of the OCI resource anchor associated with the VM cluster.
	OciResourceAnchorName pulumi.StringOutput `pulumi:"ociResourceAnchorName"`
	// The HTTPS link to the VM cluster resource in OCI.
	OciUrl pulumi.StringOutput `pulumi:"ociUrl"`
	// The OCID (Oracle Cloud Identifier) of the VM cluster.
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
	OdbNetworkId pulumi.StringOutput `pulumi:"odbNetworkId"`
	// The percentage of progress made on the current operation for the VM cluster.
	PercentProgress pulumi.Float64Output `pulumi:"percentProgress"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// The fully qualified domain name (FQDN) for the SCAN IP addresses associated with the VM cluster.
	ScanDnsName pulumi.StringOutput `pulumi:"scanDnsName"`
	// The OCID of the DNS record for the SCAN IPs linked to the VM cluster.
	ScanDnsRecordId pulumi.StringOutput `pulumi:"scanDnsRecordId"`
	// The list of OCIDs for SCAN IP addresses associated with the VM cluster.
	ScanIpIds pulumi.StringArrayOutput `pulumi:"scanIpIds"`
	// The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024–8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
	ScanListenerPortTcp pulumi.IntOutput `pulumi:"scanListenerPortTcp"`
	// The hardware model name of the Exadata infrastructure running the VM cluster.
	Shape pulumi.StringOutput `pulumi:"shape"`
	// The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
	SshPublicKeys pulumi.StringArrayOutput `pulumi:"sshPublicKeys"`
	// The current lifecycle status of the VM cluster.
	Status pulumi.StringOutput `pulumi:"status"`
	// Additional information regarding the current status of the VM cluster.
	StatusReason pulumi.StringOutput `pulumi:"statusReason"`
	// The local node storage allocated to the VM cluster, in gigabytes (GB).
	StorageSizeInGbs pulumi.IntOutput `pulumi:"storageSizeInGbs"`
	// The operating system version of the image chosen for the VM cluster.
	SystemVersion pulumi.StringOutput `pulumi:"systemVersion"`
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The combined set of user-defined and provider-defined tags.
	TagsAll  pulumi.StringMapOutput          `pulumi:"tagsAll"`
	Timeouts CloudVmClusterTimeoutsPtrOutput `pulumi:"timeouts"`
	// The configured time zone of the VM cluster. Changing this will create a new resource.
	Timezone pulumi.StringOutput `pulumi:"timezone"`
	// The virtual IP (VIP) addresses assigned to the VM cluster. CRS assigns one VIP per node for failover support.
	VipIds pulumi.StringArrayOutput `pulumi:"vipIds"`
}

// NewCloudVmCluster registers a new resource with the given unique name, arguments, and options.
func NewCloudVmCluster(ctx *pulumi.Context,
	name string, args *CloudVmClusterArgs, opts ...pulumi.ResourceOption) (*CloudVmCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CloudExadataInfrastructureId == nil {
		return nil, errors.New("invalid value for required argument 'CloudExadataInfrastructureId'")
	}
	if args.CpuCoreCount == nil {
		return nil, errors.New("invalid value for required argument 'CpuCoreCount'")
	}
	if args.DataStorageSizeInTbs == nil {
		return nil, errors.New("invalid value for required argument 'DataStorageSizeInTbs'")
	}
	if args.DbServers == nil {
		return nil, errors.New("invalid value for required argument 'DbServers'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.GiVersion == nil {
		return nil, errors.New("invalid value for required argument 'GiVersion'")
	}
	if args.HostnamePrefix == nil {
		return nil, errors.New("invalid value for required argument 'HostnamePrefix'")
	}
	if args.OdbNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'OdbNetworkId'")
	}
	if args.SshPublicKeys == nil {
		return nil, errors.New("invalid value for required argument 'SshPublicKeys'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudVmCluster
	err := ctx.RegisterResource("aws:odb/cloudVmCluster:CloudVmCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudVmCluster gets an existing CloudVmCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudVmCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudVmClusterState, opts ...pulumi.ResourceOption) (*CloudVmCluster, error) {
	var resource CloudVmCluster
	err := ctx.ReadResource("aws:odb/cloudVmCluster:CloudVmCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudVmCluster resources.
type cloudVmClusterState struct {
	// The Amazon Resource Name (ARN) for the cloud vm cluster.
	Arn *string `pulumi:"arn"`
	// The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
	CloudExadataInfrastructureId *string `pulumi:"cloudExadataInfrastructureId"`
	// The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
	ClusterName *string `pulumi:"clusterName"`
	// The compute model used when the instance is created or cloned — either ECPU or OCPU. ECPU is a virtualized compute unit; OCPU is a physical processor core with hyper-threading.
	ComputeModel *string `pulumi:"computeModel"`
	// The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
	CpuCoreCount *int `pulumi:"cpuCoreCount"`
	// The timestamp when the VM cluster was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The set of preferences for the various diagnostic collection options for the VM cluster.
	DataCollectionOptions *CloudVmClusterDataCollectionOptions `pulumi:"dataCollectionOptions"`
	// The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
	//
	// The following arguments are optional:
	DataStorageSizeInTbs *float64 `pulumi:"dataStorageSizeInTbs"`
	// The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
	DbNodeStorageSizeInGbs *int `pulumi:"dbNodeStorageSizeInGbs"`
	// The list of database servers for the VM cluster. Changing this will create a new resource.
	DbServers []string `pulumi:"dbServers"`
	// The type of redundancy for the VM cluster: NORMAL (2-way) or HIGH (3-way).
	// * `AttrDomain` - The domain name associated with the VM cluster.
	DiskRedundancy *string `pulumi:"diskRedundancy"`
	// A user-friendly name for the VM cluster. Changing this will create a new resource.
	DisplayName *string `pulumi:"displayName"`
	// The domain name associated with the VM cluster.
	Domain *string `pulumi:"domain"`
	// A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
	GiVersion *string `pulumi:"giVersion"`
	// A complete software version of Oracle Grid Infrastructure (GI).
	GiVersionComputed *string `pulumi:"giVersionComputed"`
	// The host name prefix for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
	HostnamePrefix *string `pulumi:"hostnamePrefix"`
	// The host name for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. This member is required. Changing this will create a new resource.
	HostnamePrefixComputed *string `pulumi:"hostnamePrefixComputed"`
	// The Exadata IORM (I/O Resource Manager) configuration cache details for the VM cluster.
	IormConfigCaches []CloudVmClusterIormConfigCach `pulumi:"iormConfigCaches"`
	// Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
	IsLocalBackupEnabled *bool `pulumi:"isLocalBackupEnabled"`
	// Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
	IsSparseDiskgroupEnabled *bool `pulumi:"isSparseDiskgroupEnabled"`
	// The OCID of the most recent maintenance update history entry.
	LastUpdateHistoryEntryId *string `pulumi:"lastUpdateHistoryEntryId"`
	// The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
	LicenseModel *string `pulumi:"licenseModel"`
	// The listener port number configured on the VM cluster.
	ListenerPort *int `pulumi:"listenerPort"`
	// The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
	MemorySizeInGbs *int `pulumi:"memorySizeInGbs"`
	// The total number of nodes in the VM cluster.
	NodeCount *int `pulumi:"nodeCount"`
	// The name of the OCI resource anchor associated with the VM cluster.
	OciResourceAnchorName *string `pulumi:"ociResourceAnchorName"`
	// The HTTPS link to the VM cluster resource in OCI.
	OciUrl *string `pulumi:"ociUrl"`
	// The OCID (Oracle Cloud Identifier) of the VM cluster.
	Ocid *string `pulumi:"ocid"`
	// The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
	OdbNetworkId *string `pulumi:"odbNetworkId"`
	// The percentage of progress made on the current operation for the VM cluster.
	PercentProgress *float64 `pulumi:"percentProgress"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// The fully qualified domain name (FQDN) for the SCAN IP addresses associated with the VM cluster.
	ScanDnsName *string `pulumi:"scanDnsName"`
	// The OCID of the DNS record for the SCAN IPs linked to the VM cluster.
	ScanDnsRecordId *string `pulumi:"scanDnsRecordId"`
	// The list of OCIDs for SCAN IP addresses associated with the VM cluster.
	ScanIpIds []string `pulumi:"scanIpIds"`
	// The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024–8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
	ScanListenerPortTcp *int `pulumi:"scanListenerPortTcp"`
	// The hardware model name of the Exadata infrastructure running the VM cluster.
	Shape *string `pulumi:"shape"`
	// The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
	SshPublicKeys []string `pulumi:"sshPublicKeys"`
	// The current lifecycle status of the VM cluster.
	Status *string `pulumi:"status"`
	// Additional information regarding the current status of the VM cluster.
	StatusReason *string `pulumi:"statusReason"`
	// The local node storage allocated to the VM cluster, in gigabytes (GB).
	StorageSizeInGbs *int `pulumi:"storageSizeInGbs"`
	// The operating system version of the image chosen for the VM cluster.
	SystemVersion *string `pulumi:"systemVersion"`
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The combined set of user-defined and provider-defined tags.
	TagsAll  map[string]string       `pulumi:"tagsAll"`
	Timeouts *CloudVmClusterTimeouts `pulumi:"timeouts"`
	// The configured time zone of the VM cluster. Changing this will create a new resource.
	Timezone *string `pulumi:"timezone"`
	// The virtual IP (VIP) addresses assigned to the VM cluster. CRS assigns one VIP per node for failover support.
	VipIds []string `pulumi:"vipIds"`
}

type CloudVmClusterState struct {
	// The Amazon Resource Name (ARN) for the cloud vm cluster.
	Arn pulumi.StringPtrInput
	// The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
	CloudExadataInfrastructureId pulumi.StringPtrInput
	// The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
	ClusterName pulumi.StringPtrInput
	// The compute model used when the instance is created or cloned — either ECPU or OCPU. ECPU is a virtualized compute unit; OCPU is a physical processor core with hyper-threading.
	ComputeModel pulumi.StringPtrInput
	// The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
	CpuCoreCount pulumi.IntPtrInput
	// The timestamp when the VM cluster was created.
	CreatedAt pulumi.StringPtrInput
	// The set of preferences for the various diagnostic collection options for the VM cluster.
	DataCollectionOptions CloudVmClusterDataCollectionOptionsPtrInput
	// The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
	//
	// The following arguments are optional:
	DataStorageSizeInTbs pulumi.Float64PtrInput
	// The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
	DbNodeStorageSizeInGbs pulumi.IntPtrInput
	// The list of database servers for the VM cluster. Changing this will create a new resource.
	DbServers pulumi.StringArrayInput
	// The type of redundancy for the VM cluster: NORMAL (2-way) or HIGH (3-way).
	// * `AttrDomain` - The domain name associated with the VM cluster.
	DiskRedundancy pulumi.StringPtrInput
	// A user-friendly name for the VM cluster. Changing this will create a new resource.
	DisplayName pulumi.StringPtrInput
	// The domain name associated with the VM cluster.
	Domain pulumi.StringPtrInput
	// A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
	GiVersion pulumi.StringPtrInput
	// A complete software version of Oracle Grid Infrastructure (GI).
	GiVersionComputed pulumi.StringPtrInput
	// The host name prefix for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
	HostnamePrefix pulumi.StringPtrInput
	// The host name for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. This member is required. Changing this will create a new resource.
	HostnamePrefixComputed pulumi.StringPtrInput
	// The Exadata IORM (I/O Resource Manager) configuration cache details for the VM cluster.
	IormConfigCaches CloudVmClusterIormConfigCachArrayInput
	// Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
	IsLocalBackupEnabled pulumi.BoolPtrInput
	// Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
	IsSparseDiskgroupEnabled pulumi.BoolPtrInput
	// The OCID of the most recent maintenance update history entry.
	LastUpdateHistoryEntryId pulumi.StringPtrInput
	// The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
	LicenseModel pulumi.StringPtrInput
	// The listener port number configured on the VM cluster.
	ListenerPort pulumi.IntPtrInput
	// The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
	MemorySizeInGbs pulumi.IntPtrInput
	// The total number of nodes in the VM cluster.
	NodeCount pulumi.IntPtrInput
	// The name of the OCI resource anchor associated with the VM cluster.
	OciResourceAnchorName pulumi.StringPtrInput
	// The HTTPS link to the VM cluster resource in OCI.
	OciUrl pulumi.StringPtrInput
	// The OCID (Oracle Cloud Identifier) of the VM cluster.
	Ocid pulumi.StringPtrInput
	// The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
	OdbNetworkId pulumi.StringPtrInput
	// The percentage of progress made on the current operation for the VM cluster.
	PercentProgress pulumi.Float64PtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// The fully qualified domain name (FQDN) for the SCAN IP addresses associated with the VM cluster.
	ScanDnsName pulumi.StringPtrInput
	// The OCID of the DNS record for the SCAN IPs linked to the VM cluster.
	ScanDnsRecordId pulumi.StringPtrInput
	// The list of OCIDs for SCAN IP addresses associated with the VM cluster.
	ScanIpIds pulumi.StringArrayInput
	// The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024–8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
	ScanListenerPortTcp pulumi.IntPtrInput
	// The hardware model name of the Exadata infrastructure running the VM cluster.
	Shape pulumi.StringPtrInput
	// The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
	SshPublicKeys pulumi.StringArrayInput
	// The current lifecycle status of the VM cluster.
	Status pulumi.StringPtrInput
	// Additional information regarding the current status of the VM cluster.
	StatusReason pulumi.StringPtrInput
	// The local node storage allocated to the VM cluster, in gigabytes (GB).
	StorageSizeInGbs pulumi.IntPtrInput
	// The operating system version of the image chosen for the VM cluster.
	SystemVersion pulumi.StringPtrInput
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// The combined set of user-defined and provider-defined tags.
	TagsAll  pulumi.StringMapInput
	Timeouts CloudVmClusterTimeoutsPtrInput
	// The configured time zone of the VM cluster. Changing this will create a new resource.
	Timezone pulumi.StringPtrInput
	// The virtual IP (VIP) addresses assigned to the VM cluster. CRS assigns one VIP per node for failover support.
	VipIds pulumi.StringArrayInput
}

func (CloudVmClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudVmClusterState)(nil)).Elem()
}

type cloudVmClusterArgs struct {
	// The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
	CloudExadataInfrastructureId string `pulumi:"cloudExadataInfrastructureId"`
	// The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
	ClusterName *string `pulumi:"clusterName"`
	// The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
	CpuCoreCount int `pulumi:"cpuCoreCount"`
	// The set of preferences for the various diagnostic collection options for the VM cluster.
	DataCollectionOptions *CloudVmClusterDataCollectionOptions `pulumi:"dataCollectionOptions"`
	// The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
	//
	// The following arguments are optional:
	DataStorageSizeInTbs float64 `pulumi:"dataStorageSizeInTbs"`
	// The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
	DbNodeStorageSizeInGbs *int `pulumi:"dbNodeStorageSizeInGbs"`
	// The list of database servers for the VM cluster. Changing this will create a new resource.
	DbServers []string `pulumi:"dbServers"`
	// A user-friendly name for the VM cluster. Changing this will create a new resource.
	DisplayName string `pulumi:"displayName"`
	// A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
	GiVersion string `pulumi:"giVersion"`
	// The host name prefix for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
	HostnamePrefix string `pulumi:"hostnamePrefix"`
	// Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
	IsLocalBackupEnabled *bool `pulumi:"isLocalBackupEnabled"`
	// Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
	IsSparseDiskgroupEnabled *bool `pulumi:"isSparseDiskgroupEnabled"`
	// The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
	LicenseModel *string `pulumi:"licenseModel"`
	// The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
	MemorySizeInGbs *int `pulumi:"memorySizeInGbs"`
	// The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
	OdbNetworkId string `pulumi:"odbNetworkId"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024–8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
	ScanListenerPortTcp *int `pulumi:"scanListenerPortTcp"`
	// The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
	SshPublicKeys []string `pulumi:"sshPublicKeys"`
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string       `pulumi:"tags"`
	Timeouts *CloudVmClusterTimeouts `pulumi:"timeouts"`
	// The configured time zone of the VM cluster. Changing this will create a new resource.
	Timezone *string `pulumi:"timezone"`
}

// The set of arguments for constructing a CloudVmCluster resource.
type CloudVmClusterArgs struct {
	// The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
	CloudExadataInfrastructureId pulumi.StringInput
	// The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
	ClusterName pulumi.StringPtrInput
	// The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
	CpuCoreCount pulumi.IntInput
	// The set of preferences for the various diagnostic collection options for the VM cluster.
	DataCollectionOptions CloudVmClusterDataCollectionOptionsPtrInput
	// The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
	//
	// The following arguments are optional:
	DataStorageSizeInTbs pulumi.Float64Input
	// The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
	DbNodeStorageSizeInGbs pulumi.IntPtrInput
	// The list of database servers for the VM cluster. Changing this will create a new resource.
	DbServers pulumi.StringArrayInput
	// A user-friendly name for the VM cluster. Changing this will create a new resource.
	DisplayName pulumi.StringInput
	// A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
	GiVersion pulumi.StringInput
	// The host name prefix for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
	HostnamePrefix pulumi.StringInput
	// Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
	IsLocalBackupEnabled pulumi.BoolPtrInput
	// Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
	IsSparseDiskgroupEnabled pulumi.BoolPtrInput
	// The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
	LicenseModel pulumi.StringPtrInput
	// The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
	MemorySizeInGbs pulumi.IntPtrInput
	// The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
	OdbNetworkId pulumi.StringInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024–8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
	ScanListenerPortTcp pulumi.IntPtrInput
	// The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
	SshPublicKeys pulumi.StringArrayInput
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumi.StringMapInput
	Timeouts CloudVmClusterTimeoutsPtrInput
	// The configured time zone of the VM cluster. Changing this will create a new resource.
	Timezone pulumi.StringPtrInput
}

func (CloudVmClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudVmClusterArgs)(nil)).Elem()
}

type CloudVmClusterInput interface {
	pulumi.Input

	ToCloudVmClusterOutput() CloudVmClusterOutput
	ToCloudVmClusterOutputWithContext(ctx context.Context) CloudVmClusterOutput
}

func (*CloudVmCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudVmCluster)(nil)).Elem()
}

func (i *CloudVmCluster) ToCloudVmClusterOutput() CloudVmClusterOutput {
	return i.ToCloudVmClusterOutputWithContext(context.Background())
}

func (i *CloudVmCluster) ToCloudVmClusterOutputWithContext(ctx context.Context) CloudVmClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudVmClusterOutput)
}

// CloudVmClusterArrayInput is an input type that accepts CloudVmClusterArray and CloudVmClusterArrayOutput values.
// You can construct a concrete instance of `CloudVmClusterArrayInput` via:
//
//	CloudVmClusterArray{ CloudVmClusterArgs{...} }
type CloudVmClusterArrayInput interface {
	pulumi.Input

	ToCloudVmClusterArrayOutput() CloudVmClusterArrayOutput
	ToCloudVmClusterArrayOutputWithContext(context.Context) CloudVmClusterArrayOutput
}

type CloudVmClusterArray []CloudVmClusterInput

func (CloudVmClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudVmCluster)(nil)).Elem()
}

func (i CloudVmClusterArray) ToCloudVmClusterArrayOutput() CloudVmClusterArrayOutput {
	return i.ToCloudVmClusterArrayOutputWithContext(context.Background())
}

func (i CloudVmClusterArray) ToCloudVmClusterArrayOutputWithContext(ctx context.Context) CloudVmClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudVmClusterArrayOutput)
}

// CloudVmClusterMapInput is an input type that accepts CloudVmClusterMap and CloudVmClusterMapOutput values.
// You can construct a concrete instance of `CloudVmClusterMapInput` via:
//
//	CloudVmClusterMap{ "key": CloudVmClusterArgs{...} }
type CloudVmClusterMapInput interface {
	pulumi.Input

	ToCloudVmClusterMapOutput() CloudVmClusterMapOutput
	ToCloudVmClusterMapOutputWithContext(context.Context) CloudVmClusterMapOutput
}

type CloudVmClusterMap map[string]CloudVmClusterInput

func (CloudVmClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudVmCluster)(nil)).Elem()
}

func (i CloudVmClusterMap) ToCloudVmClusterMapOutput() CloudVmClusterMapOutput {
	return i.ToCloudVmClusterMapOutputWithContext(context.Background())
}

func (i CloudVmClusterMap) ToCloudVmClusterMapOutputWithContext(ctx context.Context) CloudVmClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudVmClusterMapOutput)
}

type CloudVmClusterOutput struct{ *pulumi.OutputState }

func (CloudVmClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudVmCluster)(nil)).Elem()
}

func (o CloudVmClusterOutput) ToCloudVmClusterOutput() CloudVmClusterOutput {
	return o
}

func (o CloudVmClusterOutput) ToCloudVmClusterOutputWithContext(ctx context.Context) CloudVmClusterOutput {
	return o
}

// The Amazon Resource Name (ARN) for the cloud vm cluster.
func (o CloudVmClusterOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
func (o CloudVmClusterOutput) CloudExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.CloudExadataInfrastructureId }).(pulumi.StringOutput)
}

// The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
func (o CloudVmClusterOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.ClusterName }).(pulumi.StringOutput)
}

// The compute model used when the instance is created or cloned — either ECPU or OCPU. ECPU is a virtualized compute unit; OCPU is a physical processor core with hyper-threading.
func (o CloudVmClusterOutput) ComputeModel() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.ComputeModel }).(pulumi.StringOutput)
}

// The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
func (o CloudVmClusterOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.IntOutput { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// The timestamp when the VM cluster was created.
func (o CloudVmClusterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The set of preferences for the various diagnostic collection options for the VM cluster.
func (o CloudVmClusterOutput) DataCollectionOptions() CloudVmClusterDataCollectionOptionsPtrOutput {
	return o.ApplyT(func(v *CloudVmCluster) CloudVmClusterDataCollectionOptionsPtrOutput { return v.DataCollectionOptions }).(CloudVmClusterDataCollectionOptionsPtrOutput)
}

// The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
//
// The following arguments are optional:
func (o CloudVmClusterOutput) DataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.Float64Output { return v.DataStorageSizeInTbs }).(pulumi.Float64Output)
}

// The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
func (o CloudVmClusterOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.IntOutput { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The list of database servers for the VM cluster. Changing this will create a new resource.
func (o CloudVmClusterOutput) DbServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringArrayOutput { return v.DbServers }).(pulumi.StringArrayOutput)
}

// The type of redundancy for the VM cluster: NORMAL (2-way) or HIGH (3-way).
// * `AttrDomain` - The domain name associated with the VM cluster.
func (o CloudVmClusterOutput) DiskRedundancy() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.DiskRedundancy }).(pulumi.StringOutput)
}

// A user-friendly name for the VM cluster. Changing this will create a new resource.
func (o CloudVmClusterOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The domain name associated with the VM cluster.
func (o CloudVmClusterOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
func (o CloudVmClusterOutput) GiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.GiVersion }).(pulumi.StringOutput)
}

// A complete software version of Oracle Grid Infrastructure (GI).
func (o CloudVmClusterOutput) GiVersionComputed() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.GiVersionComputed }).(pulumi.StringOutput)
}

// The host name prefix for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
func (o CloudVmClusterOutput) HostnamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.HostnamePrefix }).(pulumi.StringOutput)
}

// The host name for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. This member is required. Changing this will create a new resource.
func (o CloudVmClusterOutput) HostnamePrefixComputed() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.HostnamePrefixComputed }).(pulumi.StringOutput)
}

// The Exadata IORM (I/O Resource Manager) configuration cache details for the VM cluster.
func (o CloudVmClusterOutput) IormConfigCaches() CloudVmClusterIormConfigCachArrayOutput {
	return o.ApplyT(func(v *CloudVmCluster) CloudVmClusterIormConfigCachArrayOutput { return v.IormConfigCaches }).(CloudVmClusterIormConfigCachArrayOutput)
}

// Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
func (o CloudVmClusterOutput) IsLocalBackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.BoolOutput { return v.IsLocalBackupEnabled }).(pulumi.BoolOutput)
}

// Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
func (o CloudVmClusterOutput) IsSparseDiskgroupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.BoolOutput { return v.IsSparseDiskgroupEnabled }).(pulumi.BoolOutput)
}

// The OCID of the most recent maintenance update history entry.
func (o CloudVmClusterOutput) LastUpdateHistoryEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.LastUpdateHistoryEntryId }).(pulumi.StringOutput)
}

// The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
func (o CloudVmClusterOutput) LicenseModel() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.LicenseModel }).(pulumi.StringOutput)
}

// The listener port number configured on the VM cluster.
func (o CloudVmClusterOutput) ListenerPort() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.IntOutput { return v.ListenerPort }).(pulumi.IntOutput)
}

// The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
func (o CloudVmClusterOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.IntOutput { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

// The total number of nodes in the VM cluster.
func (o CloudVmClusterOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.IntOutput { return v.NodeCount }).(pulumi.IntOutput)
}

// The name of the OCI resource anchor associated with the VM cluster.
func (o CloudVmClusterOutput) OciResourceAnchorName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.OciResourceAnchorName }).(pulumi.StringOutput)
}

// The HTTPS link to the VM cluster resource in OCI.
func (o CloudVmClusterOutput) OciUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.OciUrl }).(pulumi.StringOutput)
}

// The OCID (Oracle Cloud Identifier) of the VM cluster.
func (o CloudVmClusterOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
func (o CloudVmClusterOutput) OdbNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.OdbNetworkId }).(pulumi.StringOutput)
}

// The percentage of progress made on the current operation for the VM cluster.
func (o CloudVmClusterOutput) PercentProgress() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.Float64Output { return v.PercentProgress }).(pulumi.Float64Output)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o CloudVmClusterOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The fully qualified domain name (FQDN) for the SCAN IP addresses associated with the VM cluster.
func (o CloudVmClusterOutput) ScanDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.ScanDnsName }).(pulumi.StringOutput)
}

// The OCID of the DNS record for the SCAN IPs linked to the VM cluster.
func (o CloudVmClusterOutput) ScanDnsRecordId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.ScanDnsRecordId }).(pulumi.StringOutput)
}

// The list of OCIDs for SCAN IP addresses associated with the VM cluster.
func (o CloudVmClusterOutput) ScanIpIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringArrayOutput { return v.ScanIpIds }).(pulumi.StringArrayOutput)
}

// The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024–8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
func (o CloudVmClusterOutput) ScanListenerPortTcp() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.IntOutput { return v.ScanListenerPortTcp }).(pulumi.IntOutput)
}

// The hardware model name of the Exadata infrastructure running the VM cluster.
func (o CloudVmClusterOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.Shape }).(pulumi.StringOutput)
}

// The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
func (o CloudVmClusterOutput) SshPublicKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringArrayOutput { return v.SshPublicKeys }).(pulumi.StringArrayOutput)
}

// The current lifecycle status of the VM cluster.
func (o CloudVmClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Additional information regarding the current status of the VM cluster.
func (o CloudVmClusterOutput) StatusReason() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.StatusReason }).(pulumi.StringOutput)
}

// The local node storage allocated to the VM cluster, in gigabytes (GB).
func (o CloudVmClusterOutput) StorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.IntOutput { return v.StorageSizeInGbs }).(pulumi.IntOutput)
}

// The operating system version of the image chosen for the VM cluster.
func (o CloudVmClusterOutput) SystemVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.SystemVersion }).(pulumi.StringOutput)
}

// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CloudVmClusterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The combined set of user-defined and provider-defined tags.
func (o CloudVmClusterOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o CloudVmClusterOutput) Timeouts() CloudVmClusterTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudVmCluster) CloudVmClusterTimeoutsPtrOutput { return v.Timeouts }).(CloudVmClusterTimeoutsPtrOutput)
}

// The configured time zone of the VM cluster. Changing this will create a new resource.
func (o CloudVmClusterOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringOutput { return v.Timezone }).(pulumi.StringOutput)
}

// The virtual IP (VIP) addresses assigned to the VM cluster. CRS assigns one VIP per node for failover support.
func (o CloudVmClusterOutput) VipIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudVmCluster) pulumi.StringArrayOutput { return v.VipIds }).(pulumi.StringArrayOutput)
}

type CloudVmClusterArrayOutput struct{ *pulumi.OutputState }

func (CloudVmClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudVmCluster)(nil)).Elem()
}

func (o CloudVmClusterArrayOutput) ToCloudVmClusterArrayOutput() CloudVmClusterArrayOutput {
	return o
}

func (o CloudVmClusterArrayOutput) ToCloudVmClusterArrayOutputWithContext(ctx context.Context) CloudVmClusterArrayOutput {
	return o
}

func (o CloudVmClusterArrayOutput) Index(i pulumi.IntInput) CloudVmClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudVmCluster {
		return vs[0].([]*CloudVmCluster)[vs[1].(int)]
	}).(CloudVmClusterOutput)
}

type CloudVmClusterMapOutput struct{ *pulumi.OutputState }

func (CloudVmClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudVmCluster)(nil)).Elem()
}

func (o CloudVmClusterMapOutput) ToCloudVmClusterMapOutput() CloudVmClusterMapOutput {
	return o
}

func (o CloudVmClusterMapOutput) ToCloudVmClusterMapOutputWithContext(ctx context.Context) CloudVmClusterMapOutput {
	return o
}

func (o CloudVmClusterMapOutput) MapIndex(k pulumi.StringInput) CloudVmClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudVmCluster {
		return vs[0].(map[string]*CloudVmCluster)[vs[1].(string)]
	}).(CloudVmClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudVmClusterInput)(nil)).Elem(), &CloudVmCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudVmClusterArrayInput)(nil)).Elem(), CloudVmClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudVmClusterMapInput)(nil)).Elem(), CloudVmClusterMap{})
	pulumi.RegisterOutputType(CloudVmClusterOutput{})
	pulumi.RegisterOutputType(CloudVmClusterArrayOutput{})
	pulumi.RegisterOutputType(CloudVmClusterMapOutput{})
}
