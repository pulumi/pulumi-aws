// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package odb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing exadata infrastructure resource in AWS for Oracle Database@AWS.
//
// ## Example Usage
//
// ## Import
//
// Using `pulumi import`, import Exadata Infrastructure using the `id`. For example:
//
// ```sh
// $ pulumi import aws:odb/cloudExadataInfrastructure:CloudExadataInfrastructure example example
// ```
type CloudExadataInfrastructure struct {
	pulumi.CustomResourceState

	// The number of storage servers requested for the Exadata infrastructure.
	ActivatedStorageCount pulumi.IntOutput `pulumi:"activatedStorageCount"`
	// The number of storage servers requested for the Exadata infrastructure.
	AdditionalStorageCount pulumi.IntOutput `pulumi:"additionalStorageCount"`
	// Amazon Resource Name (ARN) of the pipeline.
	Arn                pulumi.StringOutput `pulumi:"arn"`
	AvailabilityZone   pulumi.StringOutput `pulumi:"availabilityZone"`
	AvailabilityZoneId pulumi.StringOutput `pulumi:"availabilityZoneId"`
	// The amount of available storage, in gigabytes (GB), for the Exadata infrastructure.
	AvailableStorageSizeInGbs pulumi.IntOutput `pulumi:"availableStorageSizeInGbs"`
	// The number of compute instances that the Exadata infrastructure is located
	ComputeCount pulumi.IntOutput `pulumi:"computeCount"`
	// The OCI model compute model used when you create or clone an instance: ECPU or OCPU.
	ComputeModel pulumi.StringOutput `pulumi:"computeModel"`
	// The total number of CPU cores that are allocated to the Exadata infrastructure.
	CpuCount pulumi.IntOutput `pulumi:"cpuCount"`
	// The time when the Exadata infrastructure was created.
	CreatedAt                    pulumi.StringOutput                                              `pulumi:"createdAt"`
	CustomerContactsToSendToOcis CloudExadataInfrastructureCustomerContactsToSendToOciArrayOutput `pulumi:"customerContactsToSendToOcis"`
	// The size of the Exadata infrastructure's data disk group, in terabytes (TB).
	DataStorageSizeInTbs pulumi.Float64Output `pulumi:"dataStorageSizeInTbs"`
	// The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
	DatabaseServerType pulumi.StringPtrOutput `pulumi:"databaseServerType"`
	// The size of the Exadata infrastructure's local node storage, in gigabytes (GB).
	DbNodeStorageSizeInGbs pulumi.IntOutput `pulumi:"dbNodeStorageSizeInGbs"`
	// The software version of the database servers (dom0) in the Exadata infrastructure.
	DbServerVersion pulumi.StringOutput `pulumi:"dbServerVersion"`
	DisplayName     pulumi.StringOutput `pulumi:"displayName"`
	// The Oracle Cloud Identifier (OCID) of the last maintenance run for the Exadata infrastructure.
	LastMaintenanceRunId pulumi.StringOutput `pulumi:"lastMaintenanceRunId"`
	// The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
	MaintenanceWindow CloudExadataInfrastructureMaintenanceWindowPtrOutput `pulumi:"maintenanceWindow"`
	// The total number of CPU cores available on the Exadata infrastructure.
	MaxCpuCount pulumi.IntOutput `pulumi:"maxCpuCount"`
	// The total amount of data disk group storage, in terabytes (TB), that's available on the Exadata infrastructure.
	MaxDataStorageInTbs pulumi.Float64Output `pulumi:"maxDataStorageInTbs"`
	// The total amount of local node storage, in gigabytes (GB), that's available on the Exadata infrastructure.
	MaxDbNodeStorageSizeInGbs pulumi.IntOutput `pulumi:"maxDbNodeStorageSizeInGbs"`
	// The total amount of memory in gigabytes (GB) available on the Exadata infrastructure.
	MaxMemoryInGbs pulumi.IntOutput `pulumi:"maxMemoryInGbs"`
	// The amount of memory, in gigabytes (GB), that's allocated on the Exadata infrastructure
	MemorySizeInGbs pulumi.IntOutput `pulumi:"memorySizeInGbs"`
	// The monthly software version of the database servers in the Exadata infrastructure.
	MonthlyDbServerVersion pulumi.StringOutput `pulumi:"monthlyDbServerVersion"`
	// The monthly software version of the storage servers installed on the Exadata infrastructure.
	MonthlyStorageServerVersion pulumi.StringOutput `pulumi:"monthlyStorageServerVersion"`
	// The OCID of the next maintenance run for the Exadata infrastructure.
	NextMaintenanceRunId pulumi.StringOutput `pulumi:"nextMaintenanceRunId"`
	// The name of the OCI resource anchor for the Exadata infrastructure.
	OciResourceAnchorName pulumi.StringOutput `pulumi:"ociResourceAnchorName"`
	// The HTTPS link to the Exadata infrastructure in OCI
	OciUrl pulumi.StringOutput `pulumi:"ociUrl"`
	// The OCID of the Exadata infrastructure.
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// The amount of progress made on the current operation on the Exadata infrastructure, expressed as a percentage.
	PercentProgress pulumi.Float64Output `pulumi:"percentProgress"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	Shape  pulumi.StringOutput `pulumi:"shape"`
	// The current status of the Exadata infrastructure.
	Status pulumi.StringOutput `pulumi:"status"`
	// Additional information about the status of the Exadata infrastructure.
	StatusReason pulumi.StringOutput `pulumi:"statusReason"`
	// TThe number of storage servers that are activated for the Exadata infrastructure
	StorageCount pulumi.IntOutput `pulumi:"storageCount"`
	// The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
	StorageServerType pulumi.StringPtrOutput `pulumi:"storageServerType"`
	// The software version of the storage servers on the Exadata infrastructure.
	StorageServerVersion pulumi.StringOutput `pulumi:"storageServerVersion"`
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumi.StringMapOutput                      `pulumi:"tags"`
	TagsAll  pulumi.StringMapOutput                      `pulumi:"tagsAll"`
	Timeouts CloudExadataInfrastructureTimeoutsPtrOutput `pulumi:"timeouts"`
	// The total amount of storage, in gigabytes (GB), on the Exadata infrastructure.
	TotalStorageSizeInGbs pulumi.IntOutput `pulumi:"totalStorageSizeInGbs"`
}

// NewCloudExadataInfrastructure registers a new resource with the given unique name, arguments, and options.
func NewCloudExadataInfrastructure(ctx *pulumi.Context,
	name string, args *CloudExadataInfrastructureArgs, opts ...pulumi.ResourceOption) (*CloudExadataInfrastructure, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZoneId == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZoneId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Shape == nil {
		return nil, errors.New("invalid value for required argument 'Shape'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudExadataInfrastructure
	err := ctx.RegisterResource("aws:odb/cloudExadataInfrastructure:CloudExadataInfrastructure", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudExadataInfrastructure gets an existing CloudExadataInfrastructure resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudExadataInfrastructure(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudExadataInfrastructureState, opts ...pulumi.ResourceOption) (*CloudExadataInfrastructure, error) {
	var resource CloudExadataInfrastructure
	err := ctx.ReadResource("aws:odb/cloudExadataInfrastructure:CloudExadataInfrastructure", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudExadataInfrastructure resources.
type cloudExadataInfrastructureState struct {
	// The number of storage servers requested for the Exadata infrastructure.
	ActivatedStorageCount *int `pulumi:"activatedStorageCount"`
	// The number of storage servers requested for the Exadata infrastructure.
	AdditionalStorageCount *int `pulumi:"additionalStorageCount"`
	// Amazon Resource Name (ARN) of the pipeline.
	Arn                *string `pulumi:"arn"`
	AvailabilityZone   *string `pulumi:"availabilityZone"`
	AvailabilityZoneId *string `pulumi:"availabilityZoneId"`
	// The amount of available storage, in gigabytes (GB), for the Exadata infrastructure.
	AvailableStorageSizeInGbs *int `pulumi:"availableStorageSizeInGbs"`
	// The number of compute instances that the Exadata infrastructure is located
	ComputeCount *int `pulumi:"computeCount"`
	// The OCI model compute model used when you create or clone an instance: ECPU or OCPU.
	ComputeModel *string `pulumi:"computeModel"`
	// The total number of CPU cores that are allocated to the Exadata infrastructure.
	CpuCount *int `pulumi:"cpuCount"`
	// The time when the Exadata infrastructure was created.
	CreatedAt                    *string                                                 `pulumi:"createdAt"`
	CustomerContactsToSendToOcis []CloudExadataInfrastructureCustomerContactsToSendToOci `pulumi:"customerContactsToSendToOcis"`
	// The size of the Exadata infrastructure's data disk group, in terabytes (TB).
	DataStorageSizeInTbs *float64 `pulumi:"dataStorageSizeInTbs"`
	// The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
	DatabaseServerType *string `pulumi:"databaseServerType"`
	// The size of the Exadata infrastructure's local node storage, in gigabytes (GB).
	DbNodeStorageSizeInGbs *int `pulumi:"dbNodeStorageSizeInGbs"`
	// The software version of the database servers (dom0) in the Exadata infrastructure.
	DbServerVersion *string `pulumi:"dbServerVersion"`
	DisplayName     *string `pulumi:"displayName"`
	// The Oracle Cloud Identifier (OCID) of the last maintenance run for the Exadata infrastructure.
	LastMaintenanceRunId *string `pulumi:"lastMaintenanceRunId"`
	// The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
	MaintenanceWindow *CloudExadataInfrastructureMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The total number of CPU cores available on the Exadata infrastructure.
	MaxCpuCount *int `pulumi:"maxCpuCount"`
	// The total amount of data disk group storage, in terabytes (TB), that's available on the Exadata infrastructure.
	MaxDataStorageInTbs *float64 `pulumi:"maxDataStorageInTbs"`
	// The total amount of local node storage, in gigabytes (GB), that's available on the Exadata infrastructure.
	MaxDbNodeStorageSizeInGbs *int `pulumi:"maxDbNodeStorageSizeInGbs"`
	// The total amount of memory in gigabytes (GB) available on the Exadata infrastructure.
	MaxMemoryInGbs *int `pulumi:"maxMemoryInGbs"`
	// The amount of memory, in gigabytes (GB), that's allocated on the Exadata infrastructure
	MemorySizeInGbs *int `pulumi:"memorySizeInGbs"`
	// The monthly software version of the database servers in the Exadata infrastructure.
	MonthlyDbServerVersion *string `pulumi:"monthlyDbServerVersion"`
	// The monthly software version of the storage servers installed on the Exadata infrastructure.
	MonthlyStorageServerVersion *string `pulumi:"monthlyStorageServerVersion"`
	// The OCID of the next maintenance run for the Exadata infrastructure.
	NextMaintenanceRunId *string `pulumi:"nextMaintenanceRunId"`
	// The name of the OCI resource anchor for the Exadata infrastructure.
	OciResourceAnchorName *string `pulumi:"ociResourceAnchorName"`
	// The HTTPS link to the Exadata infrastructure in OCI
	OciUrl *string `pulumi:"ociUrl"`
	// The OCID of the Exadata infrastructure.
	Ocid *string `pulumi:"ocid"`
	// The amount of progress made on the current operation on the Exadata infrastructure, expressed as a percentage.
	PercentProgress *float64 `pulumi:"percentProgress"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	Shape  *string `pulumi:"shape"`
	// The current status of the Exadata infrastructure.
	Status *string `pulumi:"status"`
	// Additional information about the status of the Exadata infrastructure.
	StatusReason *string `pulumi:"statusReason"`
	// TThe number of storage servers that are activated for the Exadata infrastructure
	StorageCount *int `pulumi:"storageCount"`
	// The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
	StorageServerType *string `pulumi:"storageServerType"`
	// The software version of the storage servers on the Exadata infrastructure.
	StorageServerVersion *string `pulumi:"storageServerVersion"`
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string                   `pulumi:"tags"`
	TagsAll  map[string]string                   `pulumi:"tagsAll"`
	Timeouts *CloudExadataInfrastructureTimeouts `pulumi:"timeouts"`
	// The total amount of storage, in gigabytes (GB), on the Exadata infrastructure.
	TotalStorageSizeInGbs *int `pulumi:"totalStorageSizeInGbs"`
}

type CloudExadataInfrastructureState struct {
	// The number of storage servers requested for the Exadata infrastructure.
	ActivatedStorageCount pulumi.IntPtrInput
	// The number of storage servers requested for the Exadata infrastructure.
	AdditionalStorageCount pulumi.IntPtrInput
	// Amazon Resource Name (ARN) of the pipeline.
	Arn                pulumi.StringPtrInput
	AvailabilityZone   pulumi.StringPtrInput
	AvailabilityZoneId pulumi.StringPtrInput
	// The amount of available storage, in gigabytes (GB), for the Exadata infrastructure.
	AvailableStorageSizeInGbs pulumi.IntPtrInput
	// The number of compute instances that the Exadata infrastructure is located
	ComputeCount pulumi.IntPtrInput
	// The OCI model compute model used when you create or clone an instance: ECPU or OCPU.
	ComputeModel pulumi.StringPtrInput
	// The total number of CPU cores that are allocated to the Exadata infrastructure.
	CpuCount pulumi.IntPtrInput
	// The time when the Exadata infrastructure was created.
	CreatedAt                    pulumi.StringPtrInput
	CustomerContactsToSendToOcis CloudExadataInfrastructureCustomerContactsToSendToOciArrayInput
	// The size of the Exadata infrastructure's data disk group, in terabytes (TB).
	DataStorageSizeInTbs pulumi.Float64PtrInput
	// The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
	DatabaseServerType pulumi.StringPtrInput
	// The size of the Exadata infrastructure's local node storage, in gigabytes (GB).
	DbNodeStorageSizeInGbs pulumi.IntPtrInput
	// The software version of the database servers (dom0) in the Exadata infrastructure.
	DbServerVersion pulumi.StringPtrInput
	DisplayName     pulumi.StringPtrInput
	// The Oracle Cloud Identifier (OCID) of the last maintenance run for the Exadata infrastructure.
	LastMaintenanceRunId pulumi.StringPtrInput
	// The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
	MaintenanceWindow CloudExadataInfrastructureMaintenanceWindowPtrInput
	// The total number of CPU cores available on the Exadata infrastructure.
	MaxCpuCount pulumi.IntPtrInput
	// The total amount of data disk group storage, in terabytes (TB), that's available on the Exadata infrastructure.
	MaxDataStorageInTbs pulumi.Float64PtrInput
	// The total amount of local node storage, in gigabytes (GB), that's available on the Exadata infrastructure.
	MaxDbNodeStorageSizeInGbs pulumi.IntPtrInput
	// The total amount of memory in gigabytes (GB) available on the Exadata infrastructure.
	MaxMemoryInGbs pulumi.IntPtrInput
	// The amount of memory, in gigabytes (GB), that's allocated on the Exadata infrastructure
	MemorySizeInGbs pulumi.IntPtrInput
	// The monthly software version of the database servers in the Exadata infrastructure.
	MonthlyDbServerVersion pulumi.StringPtrInput
	// The monthly software version of the storage servers installed on the Exadata infrastructure.
	MonthlyStorageServerVersion pulumi.StringPtrInput
	// The OCID of the next maintenance run for the Exadata infrastructure.
	NextMaintenanceRunId pulumi.StringPtrInput
	// The name of the OCI resource anchor for the Exadata infrastructure.
	OciResourceAnchorName pulumi.StringPtrInput
	// The HTTPS link to the Exadata infrastructure in OCI
	OciUrl pulumi.StringPtrInput
	// The OCID of the Exadata infrastructure.
	Ocid pulumi.StringPtrInput
	// The amount of progress made on the current operation on the Exadata infrastructure, expressed as a percentage.
	PercentProgress pulumi.Float64PtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	Shape  pulumi.StringPtrInput
	// The current status of the Exadata infrastructure.
	Status pulumi.StringPtrInput
	// Additional information about the status of the Exadata infrastructure.
	StatusReason pulumi.StringPtrInput
	// TThe number of storage servers that are activated for the Exadata infrastructure
	StorageCount pulumi.IntPtrInput
	// The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
	StorageServerType pulumi.StringPtrInput
	// The software version of the storage servers on the Exadata infrastructure.
	StorageServerVersion pulumi.StringPtrInput
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumi.StringMapInput
	TagsAll  pulumi.StringMapInput
	Timeouts CloudExadataInfrastructureTimeoutsPtrInput
	// The total amount of storage, in gigabytes (GB), on the Exadata infrastructure.
	TotalStorageSizeInGbs pulumi.IntPtrInput
}

func (CloudExadataInfrastructureState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudExadataInfrastructureState)(nil)).Elem()
}

type cloudExadataInfrastructureArgs struct {
	AvailabilityZone   *string `pulumi:"availabilityZone"`
	AvailabilityZoneId string  `pulumi:"availabilityZoneId"`
	// The number of compute instances that the Exadata infrastructure is located
	ComputeCount                 *int                                                    `pulumi:"computeCount"`
	CustomerContactsToSendToOcis []CloudExadataInfrastructureCustomerContactsToSendToOci `pulumi:"customerContactsToSendToOcis"`
	// The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
	DatabaseServerType *string `pulumi:"databaseServerType"`
	DisplayName        string  `pulumi:"displayName"`
	// The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
	MaintenanceWindow *CloudExadataInfrastructureMaintenanceWindow `pulumi:"maintenanceWindow"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	Shape  string  `pulumi:"shape"`
	// TThe number of storage servers that are activated for the Exadata infrastructure
	StorageCount *int `pulumi:"storageCount"`
	// The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
	StorageServerType *string `pulumi:"storageServerType"`
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string                   `pulumi:"tags"`
	Timeouts *CloudExadataInfrastructureTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CloudExadataInfrastructure resource.
type CloudExadataInfrastructureArgs struct {
	AvailabilityZone   pulumi.StringPtrInput
	AvailabilityZoneId pulumi.StringInput
	// The number of compute instances that the Exadata infrastructure is located
	ComputeCount                 pulumi.IntPtrInput
	CustomerContactsToSendToOcis CloudExadataInfrastructureCustomerContactsToSendToOciArrayInput
	// The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
	DatabaseServerType pulumi.StringPtrInput
	DisplayName        pulumi.StringInput
	// The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
	MaintenanceWindow CloudExadataInfrastructureMaintenanceWindowPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	Shape  pulumi.StringInput
	// TThe number of storage servers that are activated for the Exadata infrastructure
	StorageCount pulumi.IntPtrInput
	// The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
	StorageServerType pulumi.StringPtrInput
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumi.StringMapInput
	Timeouts CloudExadataInfrastructureTimeoutsPtrInput
}

func (CloudExadataInfrastructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudExadataInfrastructureArgs)(nil)).Elem()
}

type CloudExadataInfrastructureInput interface {
	pulumi.Input

	ToCloudExadataInfrastructureOutput() CloudExadataInfrastructureOutput
	ToCloudExadataInfrastructureOutputWithContext(ctx context.Context) CloudExadataInfrastructureOutput
}

func (*CloudExadataInfrastructure) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudExadataInfrastructure)(nil)).Elem()
}

func (i *CloudExadataInfrastructure) ToCloudExadataInfrastructureOutput() CloudExadataInfrastructureOutput {
	return i.ToCloudExadataInfrastructureOutputWithContext(context.Background())
}

func (i *CloudExadataInfrastructure) ToCloudExadataInfrastructureOutputWithContext(ctx context.Context) CloudExadataInfrastructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudExadataInfrastructureOutput)
}

// CloudExadataInfrastructureArrayInput is an input type that accepts CloudExadataInfrastructureArray and CloudExadataInfrastructureArrayOutput values.
// You can construct a concrete instance of `CloudExadataInfrastructureArrayInput` via:
//
//	CloudExadataInfrastructureArray{ CloudExadataInfrastructureArgs{...} }
type CloudExadataInfrastructureArrayInput interface {
	pulumi.Input

	ToCloudExadataInfrastructureArrayOutput() CloudExadataInfrastructureArrayOutput
	ToCloudExadataInfrastructureArrayOutputWithContext(context.Context) CloudExadataInfrastructureArrayOutput
}

type CloudExadataInfrastructureArray []CloudExadataInfrastructureInput

func (CloudExadataInfrastructureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudExadataInfrastructure)(nil)).Elem()
}

func (i CloudExadataInfrastructureArray) ToCloudExadataInfrastructureArrayOutput() CloudExadataInfrastructureArrayOutput {
	return i.ToCloudExadataInfrastructureArrayOutputWithContext(context.Background())
}

func (i CloudExadataInfrastructureArray) ToCloudExadataInfrastructureArrayOutputWithContext(ctx context.Context) CloudExadataInfrastructureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudExadataInfrastructureArrayOutput)
}

// CloudExadataInfrastructureMapInput is an input type that accepts CloudExadataInfrastructureMap and CloudExadataInfrastructureMapOutput values.
// You can construct a concrete instance of `CloudExadataInfrastructureMapInput` via:
//
//	CloudExadataInfrastructureMap{ "key": CloudExadataInfrastructureArgs{...} }
type CloudExadataInfrastructureMapInput interface {
	pulumi.Input

	ToCloudExadataInfrastructureMapOutput() CloudExadataInfrastructureMapOutput
	ToCloudExadataInfrastructureMapOutputWithContext(context.Context) CloudExadataInfrastructureMapOutput
}

type CloudExadataInfrastructureMap map[string]CloudExadataInfrastructureInput

func (CloudExadataInfrastructureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudExadataInfrastructure)(nil)).Elem()
}

func (i CloudExadataInfrastructureMap) ToCloudExadataInfrastructureMapOutput() CloudExadataInfrastructureMapOutput {
	return i.ToCloudExadataInfrastructureMapOutputWithContext(context.Background())
}

func (i CloudExadataInfrastructureMap) ToCloudExadataInfrastructureMapOutputWithContext(ctx context.Context) CloudExadataInfrastructureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudExadataInfrastructureMapOutput)
}

type CloudExadataInfrastructureOutput struct{ *pulumi.OutputState }

func (CloudExadataInfrastructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudExadataInfrastructure)(nil)).Elem()
}

func (o CloudExadataInfrastructureOutput) ToCloudExadataInfrastructureOutput() CloudExadataInfrastructureOutput {
	return o
}

func (o CloudExadataInfrastructureOutput) ToCloudExadataInfrastructureOutputWithContext(ctx context.Context) CloudExadataInfrastructureOutput {
	return o
}

// The number of storage servers requested for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) ActivatedStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.ActivatedStorageCount }).(pulumi.IntOutput)
}

// The number of storage servers requested for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) AdditionalStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.AdditionalStorageCount }).(pulumi.IntOutput)
}

// Amazon Resource Name (ARN) of the pipeline.
func (o CloudExadataInfrastructureOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o CloudExadataInfrastructureOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o CloudExadataInfrastructureOutput) AvailabilityZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.AvailabilityZoneId }).(pulumi.StringOutput)
}

// The amount of available storage, in gigabytes (GB), for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) AvailableStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.AvailableStorageSizeInGbs }).(pulumi.IntOutput)
}

// The number of compute instances that the Exadata infrastructure is located
func (o CloudExadataInfrastructureOutput) ComputeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.ComputeCount }).(pulumi.IntOutput)
}

// The OCI model compute model used when you create or clone an instance: ECPU or OCPU.
func (o CloudExadataInfrastructureOutput) ComputeModel() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.ComputeModel }).(pulumi.StringOutput)
}

// The total number of CPU cores that are allocated to the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) CpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.CpuCount }).(pulumi.IntOutput)
}

// The time when the Exadata infrastructure was created.
func (o CloudExadataInfrastructureOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o CloudExadataInfrastructureOutput) CustomerContactsToSendToOcis() CloudExadataInfrastructureCustomerContactsToSendToOciArrayOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) CloudExadataInfrastructureCustomerContactsToSendToOciArrayOutput {
		return v.CustomerContactsToSendToOcis
	}).(CloudExadataInfrastructureCustomerContactsToSendToOciArrayOutput)
}

// The size of the Exadata infrastructure's data disk group, in terabytes (TB).
func (o CloudExadataInfrastructureOutput) DataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.Float64Output { return v.DataStorageSizeInTbs }).(pulumi.Float64Output)
}

// The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
func (o CloudExadataInfrastructureOutput) DatabaseServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringPtrOutput { return v.DatabaseServerType }).(pulumi.StringPtrOutput)
}

// The size of the Exadata infrastructure's local node storage, in gigabytes (GB).
func (o CloudExadataInfrastructureOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The software version of the database servers (dom0) in the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) DbServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.DbServerVersion }).(pulumi.StringOutput)
}

func (o CloudExadataInfrastructureOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The Oracle Cloud Identifier (OCID) of the last maintenance run for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) LastMaintenanceRunId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.LastMaintenanceRunId }).(pulumi.StringOutput)
}

// The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
func (o CloudExadataInfrastructureOutput) MaintenanceWindow() CloudExadataInfrastructureMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) CloudExadataInfrastructureMaintenanceWindowPtrOutput {
		return v.MaintenanceWindow
	}).(CloudExadataInfrastructureMaintenanceWindowPtrOutput)
}

// The total number of CPU cores available on the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) MaxCpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.MaxCpuCount }).(pulumi.IntOutput)
}

// The total amount of data disk group storage, in terabytes (TB), that's available on the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) MaxDataStorageInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.Float64Output { return v.MaxDataStorageInTbs }).(pulumi.Float64Output)
}

// The total amount of local node storage, in gigabytes (GB), that's available on the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) MaxDbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.MaxDbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The total amount of memory in gigabytes (GB) available on the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) MaxMemoryInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.MaxMemoryInGbs }).(pulumi.IntOutput)
}

// The amount of memory, in gigabytes (GB), that's allocated on the Exadata infrastructure
func (o CloudExadataInfrastructureOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

// The monthly software version of the database servers in the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) MonthlyDbServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.MonthlyDbServerVersion }).(pulumi.StringOutput)
}

// The monthly software version of the storage servers installed on the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) MonthlyStorageServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.MonthlyStorageServerVersion }).(pulumi.StringOutput)
}

// The OCID of the next maintenance run for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) NextMaintenanceRunId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.NextMaintenanceRunId }).(pulumi.StringOutput)
}

// The name of the OCI resource anchor for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) OciResourceAnchorName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.OciResourceAnchorName }).(pulumi.StringOutput)
}

// The HTTPS link to the Exadata infrastructure in OCI
func (o CloudExadataInfrastructureOutput) OciUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.OciUrl }).(pulumi.StringOutput)
}

// The OCID of the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// The amount of progress made on the current operation on the Exadata infrastructure, expressed as a percentage.
func (o CloudExadataInfrastructureOutput) PercentProgress() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.Float64Output { return v.PercentProgress }).(pulumi.Float64Output)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o CloudExadataInfrastructureOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o CloudExadataInfrastructureOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.Shape }).(pulumi.StringOutput)
}

// The current status of the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Additional information about the status of the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) StatusReason() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.StatusReason }).(pulumi.StringOutput)
}

// TThe number of storage servers that are activated for the Exadata infrastructure
func (o CloudExadataInfrastructureOutput) StorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.StorageCount }).(pulumi.IntOutput)
}

// The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
func (o CloudExadataInfrastructureOutput) StorageServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringPtrOutput { return v.StorageServerType }).(pulumi.StringPtrOutput)
}

// The software version of the storage servers on the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) StorageServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.StorageServerVersion }).(pulumi.StringOutput)
}

// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CloudExadataInfrastructureOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o CloudExadataInfrastructureOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o CloudExadataInfrastructureOutput) Timeouts() CloudExadataInfrastructureTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) CloudExadataInfrastructureTimeoutsPtrOutput { return v.Timeouts }).(CloudExadataInfrastructureTimeoutsPtrOutput)
}

// The total amount of storage, in gigabytes (GB), on the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) TotalStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.TotalStorageSizeInGbs }).(pulumi.IntOutput)
}

type CloudExadataInfrastructureArrayOutput struct{ *pulumi.OutputState }

func (CloudExadataInfrastructureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudExadataInfrastructure)(nil)).Elem()
}

func (o CloudExadataInfrastructureArrayOutput) ToCloudExadataInfrastructureArrayOutput() CloudExadataInfrastructureArrayOutput {
	return o
}

func (o CloudExadataInfrastructureArrayOutput) ToCloudExadataInfrastructureArrayOutputWithContext(ctx context.Context) CloudExadataInfrastructureArrayOutput {
	return o
}

func (o CloudExadataInfrastructureArrayOutput) Index(i pulumi.IntInput) CloudExadataInfrastructureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudExadataInfrastructure {
		return vs[0].([]*CloudExadataInfrastructure)[vs[1].(int)]
	}).(CloudExadataInfrastructureOutput)
}

type CloudExadataInfrastructureMapOutput struct{ *pulumi.OutputState }

func (CloudExadataInfrastructureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudExadataInfrastructure)(nil)).Elem()
}

func (o CloudExadataInfrastructureMapOutput) ToCloudExadataInfrastructureMapOutput() CloudExadataInfrastructureMapOutput {
	return o
}

func (o CloudExadataInfrastructureMapOutput) ToCloudExadataInfrastructureMapOutputWithContext(ctx context.Context) CloudExadataInfrastructureMapOutput {
	return o
}

func (o CloudExadataInfrastructureMapOutput) MapIndex(k pulumi.StringInput) CloudExadataInfrastructureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudExadataInfrastructure {
		return vs[0].(map[string]*CloudExadataInfrastructure)[vs[1].(string)]
	}).(CloudExadataInfrastructureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudExadataInfrastructureInput)(nil)).Elem(), &CloudExadataInfrastructure{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudExadataInfrastructureArrayInput)(nil)).Elem(), CloudExadataInfrastructureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudExadataInfrastructureMapInput)(nil)).Elem(), CloudExadataInfrastructureMap{})
	pulumi.RegisterOutputType(CloudExadataInfrastructureOutput{})
	pulumi.RegisterOutputType(CloudExadataInfrastructureArrayOutput{})
	pulumi.RegisterOutputType(CloudExadataInfrastructureMapOutput{})
}
