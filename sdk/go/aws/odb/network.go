// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package odb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing odb Network resource in AWS for Oracle Database@AWS.
//
// ## Example Usage
//
// ## Import
//
// Using `pulumi import`, import Odb Network using the `id`. For example:
//
// ```sh
// $ pulumi import aws:odb/network:Network example example
// ```
type Network struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the odb network resource.
	Arn                pulumi.StringOutput `pulumi:"arn"`
	AvailabilityZone   pulumi.StringOutput `pulumi:"availabilityZone"`
	AvailabilityZoneId pulumi.StringOutput `pulumi:"availabilityZoneId"`
	BackupSubnetCidr   pulumi.StringOutput `pulumi:"backupSubnetCidr"`
	ClientSubnetCidr   pulumi.StringOutput `pulumi:"clientSubnetCidr"`
	// The date and time when the ODB network was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The name of the custom domain that the network is located. customDomainName and defaultDnsPrefix both can't be given.
	CustomDomainName pulumi.StringPtrOutput `pulumi:"customDomainName"`
	DefaultDnsPrefix pulumi.StringPtrOutput `pulumi:"defaultDnsPrefix"`
	DisplayName      pulumi.StringOutput    `pulumi:"displayName"`
	// The name of the OCI resource anchor for the Exadata infrastructure.
	ManagedServices NetworkManagedServiceArrayOutput `pulumi:"managedServices"`
	// The number of storage servers requested for the Exadata infrastructure.
	OciDnsForwardingConfigs NetworkOciDnsForwardingConfigArrayOutput `pulumi:"ociDnsForwardingConfigs"`
	// The unique identifier of the OCI network anchor for the ODB network.
	OciNetworkAnchorId pulumi.StringOutput `pulumi:"ociNetworkAnchorId"`
	// The URL of the OCI network anchor for the ODB network.
	OciNetworkAnchorUrl pulumi.StringOutput `pulumi:"ociNetworkAnchorUrl"`
	// The name of the OCI resource anchor for the ODB network.
	OciResourceAnchorName pulumi.StringOutput `pulumi:"ociResourceAnchorName"`
	// The unique identifier  Oracle Cloud ID (OCID) of the OCI VCN for the ODB network.
	OciVcnId pulumi.StringOutput `pulumi:"ociVcnId"`
	// The URL of the OCI VCN for the ODB network.
	OciVcnUrl pulumi.StringOutput `pulumi:"ociVcnUrl"`
	// The list of CIDR ranges from the peered VPC that are allowed access to the ODB network. Please refer odb network peering documentation.
	PeeredCidrs pulumi.StringArrayOutput `pulumi:"peeredCidrs"`
	// The amount of progress made on the current operation on the ODB network, expressed as a percentage.
	PercentProgress pulumi.Float64Output `pulumi:"percentProgress"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the configuration for Amazon S3 access from the ODB network.
	S3Access pulumi.StringOutput `pulumi:"s3Access"`
	// Specifies the endpoint policy for Amazon S3 access from the ODB network.
	S3PolicyDocument pulumi.StringPtrOutput `pulumi:"s3PolicyDocument"`
	// The status of the network resource.
	Status pulumi.StringOutput `pulumi:"status"`
	// Additional information about the current status of the ODB network.
	StatusReason pulumi.StringOutput `pulumi:"statusReason"`
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumi.StringMapOutput   `pulumi:"tags"`
	TagsAll  pulumi.StringMapOutput   `pulumi:"tagsAll"`
	Timeouts NetworkTimeoutsPtrOutput `pulumi:"timeouts"`
	// Specifies the configuration for Zero-ETL access from the ODB network.
	//
	// The following arguments are optional:
	ZeroEtlAccess pulumi.StringOutput `pulumi:"zeroEtlAccess"`
}

// NewNetwork registers a new resource with the given unique name, arguments, and options.
func NewNetwork(ctx *pulumi.Context,
	name string, args *NetworkArgs, opts ...pulumi.ResourceOption) (*Network, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZoneId == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZoneId'")
	}
	if args.BackupSubnetCidr == nil {
		return nil, errors.New("invalid value for required argument 'BackupSubnetCidr'")
	}
	if args.ClientSubnetCidr == nil {
		return nil, errors.New("invalid value for required argument 'ClientSubnetCidr'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.S3Access == nil {
		return nil, errors.New("invalid value for required argument 'S3Access'")
	}
	if args.ZeroEtlAccess == nil {
		return nil, errors.New("invalid value for required argument 'ZeroEtlAccess'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Network
	err := ctx.RegisterResource("aws:odb/network:Network", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetwork gets an existing Network resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkState, opts ...pulumi.ResourceOption) (*Network, error) {
	var resource Network
	err := ctx.ReadResource("aws:odb/network:Network", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Network resources.
type networkState struct {
	// Amazon Resource Name (ARN) of the odb network resource.
	Arn                *string `pulumi:"arn"`
	AvailabilityZone   *string `pulumi:"availabilityZone"`
	AvailabilityZoneId *string `pulumi:"availabilityZoneId"`
	BackupSubnetCidr   *string `pulumi:"backupSubnetCidr"`
	ClientSubnetCidr   *string `pulumi:"clientSubnetCidr"`
	// The date and time when the ODB network was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The name of the custom domain that the network is located. customDomainName and defaultDnsPrefix both can't be given.
	CustomDomainName *string `pulumi:"customDomainName"`
	DefaultDnsPrefix *string `pulumi:"defaultDnsPrefix"`
	DisplayName      *string `pulumi:"displayName"`
	// The name of the OCI resource anchor for the Exadata infrastructure.
	ManagedServices []NetworkManagedService `pulumi:"managedServices"`
	// The number of storage servers requested for the Exadata infrastructure.
	OciDnsForwardingConfigs []NetworkOciDnsForwardingConfig `pulumi:"ociDnsForwardingConfigs"`
	// The unique identifier of the OCI network anchor for the ODB network.
	OciNetworkAnchorId *string `pulumi:"ociNetworkAnchorId"`
	// The URL of the OCI network anchor for the ODB network.
	OciNetworkAnchorUrl *string `pulumi:"ociNetworkAnchorUrl"`
	// The name of the OCI resource anchor for the ODB network.
	OciResourceAnchorName *string `pulumi:"ociResourceAnchorName"`
	// The unique identifier  Oracle Cloud ID (OCID) of the OCI VCN for the ODB network.
	OciVcnId *string `pulumi:"ociVcnId"`
	// The URL of the OCI VCN for the ODB network.
	OciVcnUrl *string `pulumi:"ociVcnUrl"`
	// The list of CIDR ranges from the peered VPC that are allowed access to the ODB network. Please refer odb network peering documentation.
	PeeredCidrs []string `pulumi:"peeredCidrs"`
	// The amount of progress made on the current operation on the ODB network, expressed as a percentage.
	PercentProgress *float64 `pulumi:"percentProgress"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Specifies the configuration for Amazon S3 access from the ODB network.
	S3Access *string `pulumi:"s3Access"`
	// Specifies the endpoint policy for Amazon S3 access from the ODB network.
	S3PolicyDocument *string `pulumi:"s3PolicyDocument"`
	// The status of the network resource.
	Status *string `pulumi:"status"`
	// Additional information about the current status of the ODB network.
	StatusReason *string `pulumi:"statusReason"`
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string `pulumi:"tags"`
	TagsAll  map[string]string `pulumi:"tagsAll"`
	Timeouts *NetworkTimeouts  `pulumi:"timeouts"`
	// Specifies the configuration for Zero-ETL access from the ODB network.
	//
	// The following arguments are optional:
	ZeroEtlAccess *string `pulumi:"zeroEtlAccess"`
}

type NetworkState struct {
	// Amazon Resource Name (ARN) of the odb network resource.
	Arn                pulumi.StringPtrInput
	AvailabilityZone   pulumi.StringPtrInput
	AvailabilityZoneId pulumi.StringPtrInput
	BackupSubnetCidr   pulumi.StringPtrInput
	ClientSubnetCidr   pulumi.StringPtrInput
	// The date and time when the ODB network was created.
	CreatedAt pulumi.StringPtrInput
	// The name of the custom domain that the network is located. customDomainName and defaultDnsPrefix both can't be given.
	CustomDomainName pulumi.StringPtrInput
	DefaultDnsPrefix pulumi.StringPtrInput
	DisplayName      pulumi.StringPtrInput
	// The name of the OCI resource anchor for the Exadata infrastructure.
	ManagedServices NetworkManagedServiceArrayInput
	// The number of storage servers requested for the Exadata infrastructure.
	OciDnsForwardingConfigs NetworkOciDnsForwardingConfigArrayInput
	// The unique identifier of the OCI network anchor for the ODB network.
	OciNetworkAnchorId pulumi.StringPtrInput
	// The URL of the OCI network anchor for the ODB network.
	OciNetworkAnchorUrl pulumi.StringPtrInput
	// The name of the OCI resource anchor for the ODB network.
	OciResourceAnchorName pulumi.StringPtrInput
	// The unique identifier  Oracle Cloud ID (OCID) of the OCI VCN for the ODB network.
	OciVcnId pulumi.StringPtrInput
	// The URL of the OCI VCN for the ODB network.
	OciVcnUrl pulumi.StringPtrInput
	// The list of CIDR ranges from the peered VPC that are allowed access to the ODB network. Please refer odb network peering documentation.
	PeeredCidrs pulumi.StringArrayInput
	// The amount of progress made on the current operation on the ODB network, expressed as a percentage.
	PercentProgress pulumi.Float64PtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Specifies the configuration for Amazon S3 access from the ODB network.
	S3Access pulumi.StringPtrInput
	// Specifies the endpoint policy for Amazon S3 access from the ODB network.
	S3PolicyDocument pulumi.StringPtrInput
	// The status of the network resource.
	Status pulumi.StringPtrInput
	// Additional information about the current status of the ODB network.
	StatusReason pulumi.StringPtrInput
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumi.StringMapInput
	TagsAll  pulumi.StringMapInput
	Timeouts NetworkTimeoutsPtrInput
	// Specifies the configuration for Zero-ETL access from the ODB network.
	//
	// The following arguments are optional:
	ZeroEtlAccess pulumi.StringPtrInput
}

func (NetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkState)(nil)).Elem()
}

type networkArgs struct {
	AvailabilityZone   *string `pulumi:"availabilityZone"`
	AvailabilityZoneId string  `pulumi:"availabilityZoneId"`
	BackupSubnetCidr   string  `pulumi:"backupSubnetCidr"`
	ClientSubnetCidr   string  `pulumi:"clientSubnetCidr"`
	// The name of the custom domain that the network is located. customDomainName and defaultDnsPrefix both can't be given.
	CustomDomainName *string `pulumi:"customDomainName"`
	DefaultDnsPrefix *string `pulumi:"defaultDnsPrefix"`
	DisplayName      string  `pulumi:"displayName"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Specifies the configuration for Amazon S3 access from the ODB network.
	S3Access string `pulumi:"s3Access"`
	// Specifies the endpoint policy for Amazon S3 access from the ODB network.
	S3PolicyDocument *string `pulumi:"s3PolicyDocument"`
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string `pulumi:"tags"`
	Timeouts *NetworkTimeouts  `pulumi:"timeouts"`
	// Specifies the configuration for Zero-ETL access from the ODB network.
	//
	// The following arguments are optional:
	ZeroEtlAccess string `pulumi:"zeroEtlAccess"`
}

// The set of arguments for constructing a Network resource.
type NetworkArgs struct {
	AvailabilityZone   pulumi.StringPtrInput
	AvailabilityZoneId pulumi.StringInput
	BackupSubnetCidr   pulumi.StringInput
	ClientSubnetCidr   pulumi.StringInput
	// The name of the custom domain that the network is located. customDomainName and defaultDnsPrefix both can't be given.
	CustomDomainName pulumi.StringPtrInput
	DefaultDnsPrefix pulumi.StringPtrInput
	DisplayName      pulumi.StringInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Specifies the configuration for Amazon S3 access from the ODB network.
	S3Access pulumi.StringInput
	// Specifies the endpoint policy for Amazon S3 access from the ODB network.
	S3PolicyDocument pulumi.StringPtrInput
	// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumi.StringMapInput
	Timeouts NetworkTimeoutsPtrInput
	// Specifies the configuration for Zero-ETL access from the ODB network.
	//
	// The following arguments are optional:
	ZeroEtlAccess pulumi.StringInput
}

func (NetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkArgs)(nil)).Elem()
}

type NetworkInput interface {
	pulumi.Input

	ToNetworkOutput() NetworkOutput
	ToNetworkOutputWithContext(ctx context.Context) NetworkOutput
}

func (*Network) ElementType() reflect.Type {
	return reflect.TypeOf((**Network)(nil)).Elem()
}

func (i *Network) ToNetworkOutput() NetworkOutput {
	return i.ToNetworkOutputWithContext(context.Background())
}

func (i *Network) ToNetworkOutputWithContext(ctx context.Context) NetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkOutput)
}

// NetworkArrayInput is an input type that accepts NetworkArray and NetworkArrayOutput values.
// You can construct a concrete instance of `NetworkArrayInput` via:
//
//	NetworkArray{ NetworkArgs{...} }
type NetworkArrayInput interface {
	pulumi.Input

	ToNetworkArrayOutput() NetworkArrayOutput
	ToNetworkArrayOutputWithContext(context.Context) NetworkArrayOutput
}

type NetworkArray []NetworkInput

func (NetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Network)(nil)).Elem()
}

func (i NetworkArray) ToNetworkArrayOutput() NetworkArrayOutput {
	return i.ToNetworkArrayOutputWithContext(context.Background())
}

func (i NetworkArray) ToNetworkArrayOutputWithContext(ctx context.Context) NetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkArrayOutput)
}

// NetworkMapInput is an input type that accepts NetworkMap and NetworkMapOutput values.
// You can construct a concrete instance of `NetworkMapInput` via:
//
//	NetworkMap{ "key": NetworkArgs{...} }
type NetworkMapInput interface {
	pulumi.Input

	ToNetworkMapOutput() NetworkMapOutput
	ToNetworkMapOutputWithContext(context.Context) NetworkMapOutput
}

type NetworkMap map[string]NetworkInput

func (NetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Network)(nil)).Elem()
}

func (i NetworkMap) ToNetworkMapOutput() NetworkMapOutput {
	return i.ToNetworkMapOutputWithContext(context.Background())
}

func (i NetworkMap) ToNetworkMapOutputWithContext(ctx context.Context) NetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkMapOutput)
}

type NetworkOutput struct{ *pulumi.OutputState }

func (NetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Network)(nil)).Elem()
}

func (o NetworkOutput) ToNetworkOutput() NetworkOutput {
	return o
}

func (o NetworkOutput) ToNetworkOutputWithContext(ctx context.Context) NetworkOutput {
	return o
}

// Amazon Resource Name (ARN) of the odb network resource.
func (o NetworkOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o NetworkOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o NetworkOutput) AvailabilityZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.AvailabilityZoneId }).(pulumi.StringOutput)
}

func (o NetworkOutput) BackupSubnetCidr() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.BackupSubnetCidr }).(pulumi.StringOutput)
}

func (o NetworkOutput) ClientSubnetCidr() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.ClientSubnetCidr }).(pulumi.StringOutput)
}

// The date and time when the ODB network was created.
func (o NetworkOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The name of the custom domain that the network is located. customDomainName and defaultDnsPrefix both can't be given.
func (o NetworkOutput) CustomDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Network) pulumi.StringPtrOutput { return v.CustomDomainName }).(pulumi.StringPtrOutput)
}

func (o NetworkOutput) DefaultDnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Network) pulumi.StringPtrOutput { return v.DefaultDnsPrefix }).(pulumi.StringPtrOutput)
}

func (o NetworkOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The name of the OCI resource anchor for the Exadata infrastructure.
func (o NetworkOutput) ManagedServices() NetworkManagedServiceArrayOutput {
	return o.ApplyT(func(v *Network) NetworkManagedServiceArrayOutput { return v.ManagedServices }).(NetworkManagedServiceArrayOutput)
}

// The number of storage servers requested for the Exadata infrastructure.
func (o NetworkOutput) OciDnsForwardingConfigs() NetworkOciDnsForwardingConfigArrayOutput {
	return o.ApplyT(func(v *Network) NetworkOciDnsForwardingConfigArrayOutput { return v.OciDnsForwardingConfigs }).(NetworkOciDnsForwardingConfigArrayOutput)
}

// The unique identifier of the OCI network anchor for the ODB network.
func (o NetworkOutput) OciNetworkAnchorId() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.OciNetworkAnchorId }).(pulumi.StringOutput)
}

// The URL of the OCI network anchor for the ODB network.
func (o NetworkOutput) OciNetworkAnchorUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.OciNetworkAnchorUrl }).(pulumi.StringOutput)
}

// The name of the OCI resource anchor for the ODB network.
func (o NetworkOutput) OciResourceAnchorName() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.OciResourceAnchorName }).(pulumi.StringOutput)
}

// The unique identifier  Oracle Cloud ID (OCID) of the OCI VCN for the ODB network.
func (o NetworkOutput) OciVcnId() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.OciVcnId }).(pulumi.StringOutput)
}

// The URL of the OCI VCN for the ODB network.
func (o NetworkOutput) OciVcnUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.OciVcnUrl }).(pulumi.StringOutput)
}

// The list of CIDR ranges from the peered VPC that are allowed access to the ODB network. Please refer odb network peering documentation.
func (o NetworkOutput) PeeredCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Network) pulumi.StringArrayOutput { return v.PeeredCidrs }).(pulumi.StringArrayOutput)
}

// The amount of progress made on the current operation on the ODB network, expressed as a percentage.
func (o NetworkOutput) PercentProgress() pulumi.Float64Output {
	return o.ApplyT(func(v *Network) pulumi.Float64Output { return v.PercentProgress }).(pulumi.Float64Output)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o NetworkOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the configuration for Amazon S3 access from the ODB network.
func (o NetworkOutput) S3Access() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.S3Access }).(pulumi.StringOutput)
}

// Specifies the endpoint policy for Amazon S3 access from the ODB network.
func (o NetworkOutput) S3PolicyDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Network) pulumi.StringPtrOutput { return v.S3PolicyDocument }).(pulumi.StringPtrOutput)
}

// The status of the network resource.
func (o NetworkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Additional information about the current status of the ODB network.
func (o NetworkOutput) StatusReason() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.StatusReason }).(pulumi.StringOutput)
}

// A map of tags to assign to the exadata infrastructure. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o NetworkOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Network) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o NetworkOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Network) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o NetworkOutput) Timeouts() NetworkTimeoutsPtrOutput {
	return o.ApplyT(func(v *Network) NetworkTimeoutsPtrOutput { return v.Timeouts }).(NetworkTimeoutsPtrOutput)
}

// Specifies the configuration for Zero-ETL access from the ODB network.
//
// The following arguments are optional:
func (o NetworkOutput) ZeroEtlAccess() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.ZeroEtlAccess }).(pulumi.StringOutput)
}

type NetworkArrayOutput struct{ *pulumi.OutputState }

func (NetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Network)(nil)).Elem()
}

func (o NetworkArrayOutput) ToNetworkArrayOutput() NetworkArrayOutput {
	return o
}

func (o NetworkArrayOutput) ToNetworkArrayOutputWithContext(ctx context.Context) NetworkArrayOutput {
	return o
}

func (o NetworkArrayOutput) Index(i pulumi.IntInput) NetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Network {
		return vs[0].([]*Network)[vs[1].(int)]
	}).(NetworkOutput)
}

type NetworkMapOutput struct{ *pulumi.OutputState }

func (NetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Network)(nil)).Elem()
}

func (o NetworkMapOutput) ToNetworkMapOutput() NetworkMapOutput {
	return o
}

func (o NetworkMapOutput) ToNetworkMapOutputWithContext(ctx context.Context) NetworkMapOutput {
	return o
}

func (o NetworkMapOutput) MapIndex(k pulumi.StringInput) NetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Network {
		return vs[0].(map[string]*Network)[vs[1].(string)]
	}).(NetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInput)(nil)).Elem(), &Network{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkArrayInput)(nil)).Elem(), NetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkMapInput)(nil)).Elem(), NetworkMap{})
	pulumi.RegisterOutputType(NetworkOutput{})
	pulumi.RegisterOutputType(NetworkArrayOutput{})
	pulumi.RegisterOutputType(NetworkMapOutput{})
}
