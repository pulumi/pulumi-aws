// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package odb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source to retrieve available Grid Infrastructure versions of Oracle Database@AWS.
//
// You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
//
// ## Example Usage
func GetGiVersions(ctx *pulumi.Context, args *GetGiVersionsArgs, opts ...pulumi.InvokeOption) (*GetGiVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGiVersionsResult
	err := ctx.Invoke("aws:odb/getGiVersions:getGiVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGiVersions.
type GetGiVersionsArgs struct {
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// The system shape.
	Shape *string `pulumi:"shape"`
}

// A collection of values returned by getGiVersions.
type GetGiVersionsResult struct {
	// Information about a specific version of Oracle Grid Infrastructure (GI) software that can be installed on a VM cluster.
	GiVersions []GetGiVersionsGiVersion `pulumi:"giVersions"`
	// The provider-assigned unique ID for this managed resource.
	Id     string  `pulumi:"id"`
	Region string  `pulumi:"region"`
	Shape  *string `pulumi:"shape"`
}

func GetGiVersionsOutput(ctx *pulumi.Context, args GetGiVersionsOutputArgs, opts ...pulumi.InvokeOption) GetGiVersionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetGiVersionsResultOutput, error) {
			args := v.(GetGiVersionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws:odb/getGiVersions:getGiVersions", args, GetGiVersionsResultOutput{}, options).(GetGiVersionsResultOutput), nil
		}).(GetGiVersionsResultOutput)
}

// A collection of arguments for invoking getGiVersions.
type GetGiVersionsOutputArgs struct {
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The system shape.
	Shape pulumi.StringPtrInput `pulumi:"shape"`
}

func (GetGiVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGiVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getGiVersions.
type GetGiVersionsResultOutput struct{ *pulumi.OutputState }

func (GetGiVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGiVersionsResult)(nil)).Elem()
}

func (o GetGiVersionsResultOutput) ToGetGiVersionsResultOutput() GetGiVersionsResultOutput {
	return o
}

func (o GetGiVersionsResultOutput) ToGetGiVersionsResultOutputWithContext(ctx context.Context) GetGiVersionsResultOutput {
	return o
}

// Information about a specific version of Oracle Grid Infrastructure (GI) software that can be installed on a VM cluster.
func (o GetGiVersionsResultOutput) GiVersions() GetGiVersionsGiVersionArrayOutput {
	return o.ApplyT(func(v GetGiVersionsResult) []GetGiVersionsGiVersion { return v.GiVersions }).(GetGiVersionsGiVersionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGiVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGiVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetGiVersionsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetGiVersionsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetGiVersionsResultOutput) Shape() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGiVersionsResult) *string { return v.Shape }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGiVersionsResultOutput{})
}
