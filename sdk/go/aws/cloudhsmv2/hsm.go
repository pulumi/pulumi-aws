// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudhsmv2

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Creates an HSM module in Amazon CloudHSM v2 cluster.
type Hsm struct {
	s *pulumi.ResourceState
}

// NewHsm registers a new resource with the given unique name, arguments, and options.
func NewHsm(ctx *pulumi.Context,
	name string, args *HsmArgs, opts ...pulumi.ResourceOpt) (*Hsm, error) {
	if args == nil || args.ClusterId == nil {
		return nil, errors.New("missing required argument 'ClusterId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["availabilityZone"] = nil
		inputs["clusterId"] = nil
		inputs["ipAddress"] = nil
		inputs["subnetId"] = nil
	} else {
		inputs["availabilityZone"] = args.AvailabilityZone
		inputs["clusterId"] = args.ClusterId
		inputs["ipAddress"] = args.IpAddress
		inputs["subnetId"] = args.SubnetId
	}
	inputs["hsmEniId"] = nil
	inputs["hsmId"] = nil
	inputs["hsmState"] = nil
	s, err := ctx.RegisterResource("aws:cloudhsmv2/hsm:Hsm", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Hsm{s: s}, nil
}

// GetHsm gets an existing Hsm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHsm(ctx *pulumi.Context,
	name string, id pulumi.ID, state *HsmState, opts ...pulumi.ResourceOpt) (*Hsm, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["availabilityZone"] = state.AvailabilityZone
		inputs["clusterId"] = state.ClusterId
		inputs["hsmEniId"] = state.HsmEniId
		inputs["hsmId"] = state.HsmId
		inputs["hsmState"] = state.HsmState
		inputs["ipAddress"] = state.IpAddress
		inputs["subnetId"] = state.SubnetId
	}
	s, err := ctx.ReadResource("aws:cloudhsmv2/hsm:Hsm", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Hsm{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Hsm) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Hsm) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The IDs of AZ in which HSM module will be located. Do not use together with subnet_id.
func (r *Hsm) AvailabilityZone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["availabilityZone"])
}

// The ID of Cloud HSM v2 cluster to which HSM will be added.
func (r *Hsm) ClusterId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["clusterId"])
}

// The id of the ENI interface allocated for HSM module.
func (r *Hsm) HsmEniId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["hsmEniId"])
}

// The id of the HSM module.
func (r *Hsm) HsmId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["hsmId"])
}

// The state of the HSM module.
func (r *Hsm) HsmState() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["hsmState"])
}

// The IP address of HSM module. Must be within the CIDR of selected subnet.
func (r *Hsm) IpAddress() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ipAddress"])
}

// The ID of subnet in which HSM module will be located.
func (r *Hsm) SubnetId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["subnetId"])
}

// Input properties used for looking up and filtering Hsm resources.
type HsmState struct {
	// The IDs of AZ in which HSM module will be located. Do not use together with subnet_id.
	AvailabilityZone interface{}
	// The ID of Cloud HSM v2 cluster to which HSM will be added.
	ClusterId interface{}
	// The id of the ENI interface allocated for HSM module.
	HsmEniId interface{}
	// The id of the HSM module.
	HsmId interface{}
	// The state of the HSM module.
	HsmState interface{}
	// The IP address of HSM module. Must be within the CIDR of selected subnet.
	IpAddress interface{}
	// The ID of subnet in which HSM module will be located.
	SubnetId interface{}
}

// The set of arguments for constructing a Hsm resource.
type HsmArgs struct {
	// The IDs of AZ in which HSM module will be located. Do not use together with subnet_id.
	AvailabilityZone interface{}
	// The ID of Cloud HSM v2 cluster to which HSM will be added.
	ClusterId interface{}
	// The IP address of HSM module. Must be within the CIDR of selected subnet.
	IpAddress interface{}
	// The ID of subnet in which HSM module will be located.
	SubnetId interface{}
}
