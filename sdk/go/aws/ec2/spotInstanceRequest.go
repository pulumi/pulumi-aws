// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an EC2 Spot Instance Request resource. This allows instances to be
// requested on the spot market.
//
// By default this provider creates Spot Instance Requests with a `persistent` type,
// which means that for the duration of their lifetime, AWS will launch an
// instance with the configured details if and when the spot market will accept
// the requested price.
//
// On destruction, this provider will make an attempt to terminate the associated Spot
// Instance if there is one present.
//
// Spot Instances requests with a `one-time` type will close the spot request
// when the instance is terminated either by the request being below the current spot
// price availability or by a user.
//
// > **NOTE:** Because their behavior depends on the live status of the spot
// market, Spot Instance Requests have a unique lifecycle that makes them behave
// differently than other resources. Most importantly: there is __no
// guarantee__ that a Spot Instance exists to fulfill the request at any given
// point in time. See the [AWS Spot Instance
// documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
// for more information.
//
// > **NOTE [AWS strongly discourages](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-best-practices.html#which-spot-request-method-to-use) the use of the legacy APIs called by this resource.
// We recommend using the EC2 Instance resource with `instanceMarketOptions` instead.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ec2.NewSpotInstanceRequest(ctx, "cheapWorker", &ec2.SpotInstanceRequestArgs{
//				Ami:          pulumi.String("ami-1234"),
//				InstanceType: pulumi.String("c4.xlarge"),
//				SpotPrice:    pulumi.String("0.03"),
//				Tags: pulumi.StringMap{
//					"Name": pulumi.String("CheapWorker"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SpotInstanceRequest struct {
	pulumi.CustomResourceState

	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami pulumi.StringPtrOutput `pulumi:"ami"`
	Arn pulumi.StringPtrOutput `pulumi:"arn"`
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress pulumi.BoolPtrOutput `pulumi:"associatePublicIpAddress"`
	// AZ to start the instance in.
	AvailabilityZone pulumi.StringPtrOutput `pulumi:"availabilityZone"`
	// The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
	// The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
	// Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
	BlockDurationMinutes pulumi.IntPtrOutput `pulumi:"blockDurationMinutes"`
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	//
	// > **NOTE:** Changing `cpuCoreCount` and/or `cpuThreadsPerCore` will cause the resource to be destroyed and re-created.
	CapacityReservationSpecification SpotInstanceRequestCapacityReservationSpecificationPtrOutput `pulumi:"capacityReservationSpecification"`
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuCoreCount pulumi.IntPtrOutput `pulumi:"cpuCoreCount"`
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions SpotInstanceRequestCpuOptionsPtrOutput `pulumi:"cpuOptions"`
	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuThreadsPerCore pulumi.IntPtrOutput `pulumi:"cpuThreadsPerCore"`
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification SpotInstanceRequestCreditSpecificationPtrOutput `pulumi:"creditSpecification"`
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop pulumi.BoolPtrOutput `pulumi:"disableApiStop"`
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination pulumi.BoolPtrOutput `pulumi:"disableApiTermination"`
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices SpotInstanceRequestEbsBlockDeviceArrayOutput `pulumi:"ebsBlockDevices"`
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized pulumi.BoolPtrOutput `pulumi:"ebsOptimized"`
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions SpotInstanceRequestEnclaveOptionsPtrOutput `pulumi:"enclaveOptions"`
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices SpotInstanceRequestEphemeralBlockDeviceArrayOutput `pulumi:"ephemeralBlockDevices"`
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData pulumi.BoolPtrOutput `pulumi:"getPasswordData"`
	// If true, the launched EC2 instance will support hibernation.
	Hibernation pulumi.BoolPtrOutput `pulumi:"hibernation"`
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId pulumi.StringPtrOutput `pulumi:"hostId"`
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn pulumi.StringPtrOutput `pulumi:"hostResourceGroupArn"`
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile pulumi.StringPtrOutput `pulumi:"iamInstanceProfile"`
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior pulumi.StringPtrOutput `pulumi:"instanceInitiatedShutdownBehavior"`
	// Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`. Default value is `terminate`.
	InstanceInterruptionBehavior pulumi.StringPtrOutput `pulumi:"instanceInterruptionBehavior"`
	InstanceState                pulumi.StringPtrOutput `pulumi:"instanceState"`
	// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType pulumi.StringPtrOutput `pulumi:"instanceType"`
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount pulumi.IntPtrOutput `pulumi:"ipv6AddressCount"`
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses pulumi.StringArrayOutput `pulumi:"ipv6Addresses"`
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName pulumi.StringPtrOutput `pulumi:"keyName"`
	// A launch group is a group of spot instances that launch together and terminate together.
	// If left empty instances are launched and terminated individually.
	LaunchGroup pulumi.StringPtrOutput `pulumi:"launchGroup"`
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
	LaunchTemplate SpotInstanceRequestLaunchTemplatePtrOutput `pulumi:"launchTemplate"`
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions SpotInstanceRequestMaintenanceOptionsPtrOutput `pulumi:"maintenanceOptions"`
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions SpotInstanceRequestMetadataOptionsPtrOutput `pulumi:"metadataOptions"`
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring pulumi.BoolPtrOutput `pulumi:"monitoring"`
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces SpotInstanceRequestNetworkInterfaceArrayOutput `pulumi:"networkInterfaces"`
	OutpostArn        pulumi.StringPtrOutput                         `pulumi:"outpostArn"`
	PasswordData      pulumi.StringPtrOutput                         `pulumi:"passwordData"`
	// Placement Group to start the instance in.
	PlacementGroup pulumi.StringPtrOutput `pulumi:"placementGroup"`
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber  pulumi.IntPtrOutput    `pulumi:"placementPartitionNumber"`
	PrimaryNetworkInterfaceId pulumi.StringPtrOutput `pulumi:"primaryNetworkInterfaceId"`
	// The private DNS name assigned to the instance. Can only be
	// used inside the Amazon EC2, and only available if you've enabled DNS hostnames
	// for your VPC
	PrivateDns pulumi.StringPtrOutput `pulumi:"privateDns"`
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions SpotInstanceRequestPrivateDnsNameOptionsPtrOutput `pulumi:"privateDnsNameOptions"`
	// Private IP address to associate with the instance in a VPC.
	PrivateIp pulumi.StringPtrOutput `pulumi:"privateIp"`
	// The public DNS name assigned to the instance. For EC2-VPC, this
	// is only available if you've enabled DNS hostnames for your VPC
	PublicDns pulumi.StringPtrOutput `pulumi:"publicDns"`
	// The public IP address assigned to the instance, if applicable.
	PublicIp pulumi.StringPtrOutput `pulumi:"publicIp"`
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice SpotInstanceRequestRootBlockDevicePtrOutput `pulumi:"rootBlockDevice"`
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps pulumi.StringArrayOutput `pulumi:"secondaryPrivateIps"`
	// List of security group names to associate with.
	//
	// > **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
	SecurityGroups pulumi.StringArrayOutput `pulumi:"securityGroups"`
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck pulumi.BoolPtrOutput `pulumi:"sourceDestCheck"`
	// The current [bid
	// status](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html)
	// of the Spot Instance Request.
	SpotBidStatus pulumi.StringPtrOutput `pulumi:"spotBidStatus"`
	// The Instance ID (if any) that is currently fulfilling
	// the Spot Instance request.
	SpotInstanceId pulumi.StringPtrOutput `pulumi:"spotInstanceId"`
	// The maximum price to request on the spot market.
	SpotPrice pulumi.StringPtrOutput `pulumi:"spotPrice"`
	// The current [request
	// state](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#creating-spot-request-status)
	// of the Spot Instance Request.
	SpotRequestState pulumi.StringPtrOutput `pulumi:"spotRequestState"`
	// If set to `one-time`, after
	// the instance is terminated, the spot request will be closed.
	SpotType pulumi.StringPtrOutput `pulumi:"spotType"`
	// VPC Subnet ID to launch in.
	SubnetId pulumi.StringPtrOutput `pulumi:"subnetId"`
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy pulumi.StringPtrOutput `pulumi:"tenancy"`
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData pulumi.StringPtrOutput `pulumi:"userData"`
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 pulumi.StringPtrOutput `pulumi:"userDataBase64"`
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange pulumi.BoolPtrOutput `pulumi:"userDataReplaceOnChange"`
	// The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	ValidFrom pulumi.StringPtrOutput `pulumi:"validFrom"`
	// The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
	ValidUntil pulumi.StringPtrOutput `pulumi:"validUntil"`
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	//
	// > **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `ec2.Instance` configuration, such as using `tags` in an `ebs.Volume` resource attached via `ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
	VolumeTags pulumi.StringMapOutput `pulumi:"volumeTags"`
	// List of security group IDs to associate with.
	VpcSecurityGroupIds pulumi.StringArrayOutput `pulumi:"vpcSecurityGroupIds"`
	// If set, this provider will
	// wait for the Spot Request to be fulfilled, and will throw an error if the
	// timeout of 10m is reached.
	WaitForFulfillment pulumi.BoolPtrOutput `pulumi:"waitForFulfillment"`
}

// NewSpotInstanceRequest registers a new resource with the given unique name, arguments, and options.
func NewSpotInstanceRequest(ctx *pulumi.Context,
	name string, args *SpotInstanceRequestArgs, opts ...pulumi.ResourceOption) (*SpotInstanceRequest, error) {
	if args == nil {
		args = &SpotInstanceRequestArgs{}
	}

	secrets := pulumi.AdditionalSecretOutputs([]string{
		"tagsAll",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SpotInstanceRequest
	err := ctx.RegisterResource("aws:ec2/spotInstanceRequest:SpotInstanceRequest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpotInstanceRequest gets an existing SpotInstanceRequest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpotInstanceRequest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpotInstanceRequestState, opts ...pulumi.ResourceOption) (*SpotInstanceRequest, error) {
	var resource SpotInstanceRequest
	err := ctx.ReadResource("aws:ec2/spotInstanceRequest:SpotInstanceRequest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpotInstanceRequest resources.
type spotInstanceRequestState struct {
	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami *string `pulumi:"ami"`
	Arn *string `pulumi:"arn"`
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress *bool `pulumi:"associatePublicIpAddress"`
	// AZ to start the instance in.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
	// The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
	// Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
	BlockDurationMinutes *int `pulumi:"blockDurationMinutes"`
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	//
	// > **NOTE:** Changing `cpuCoreCount` and/or `cpuThreadsPerCore` will cause the resource to be destroyed and re-created.
	CapacityReservationSpecification *SpotInstanceRequestCapacityReservationSpecification `pulumi:"capacityReservationSpecification"`
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuCoreCount *int `pulumi:"cpuCoreCount"`
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions *SpotInstanceRequestCpuOptions `pulumi:"cpuOptions"`
	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuThreadsPerCore *int `pulumi:"cpuThreadsPerCore"`
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification *SpotInstanceRequestCreditSpecification `pulumi:"creditSpecification"`
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop *bool `pulumi:"disableApiStop"`
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination *bool `pulumi:"disableApiTermination"`
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices []SpotInstanceRequestEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized *bool `pulumi:"ebsOptimized"`
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions *SpotInstanceRequestEnclaveOptions `pulumi:"enclaveOptions"`
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices []SpotInstanceRequestEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData *bool `pulumi:"getPasswordData"`
	// If true, the launched EC2 instance will support hibernation.
	Hibernation *bool `pulumi:"hibernation"`
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId *string `pulumi:"hostId"`
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn *string `pulumi:"hostResourceGroupArn"`
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile *string `pulumi:"iamInstanceProfile"`
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior *string `pulumi:"instanceInitiatedShutdownBehavior"`
	// Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`. Default value is `terminate`.
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	InstanceState                *string `pulumi:"instanceState"`
	// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType *string `pulumi:"instanceType"`
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName *string `pulumi:"keyName"`
	// A launch group is a group of spot instances that launch together and terminate together.
	// If left empty instances are launched and terminated individually.
	LaunchGroup *string `pulumi:"launchGroup"`
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
	LaunchTemplate *SpotInstanceRequestLaunchTemplate `pulumi:"launchTemplate"`
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions *SpotInstanceRequestMaintenanceOptions `pulumi:"maintenanceOptions"`
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions *SpotInstanceRequestMetadataOptions `pulumi:"metadataOptions"`
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring *bool `pulumi:"monitoring"`
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces []SpotInstanceRequestNetworkInterface `pulumi:"networkInterfaces"`
	OutpostArn        *string                               `pulumi:"outpostArn"`
	PasswordData      *string                               `pulumi:"passwordData"`
	// Placement Group to start the instance in.
	PlacementGroup *string `pulumi:"placementGroup"`
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber  *int    `pulumi:"placementPartitionNumber"`
	PrimaryNetworkInterfaceId *string `pulumi:"primaryNetworkInterfaceId"`
	// The private DNS name assigned to the instance. Can only be
	// used inside the Amazon EC2, and only available if you've enabled DNS hostnames
	// for your VPC
	PrivateDns *string `pulumi:"privateDns"`
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions *SpotInstanceRequestPrivateDnsNameOptions `pulumi:"privateDnsNameOptions"`
	// Private IP address to associate with the instance in a VPC.
	PrivateIp *string `pulumi:"privateIp"`
	// The public DNS name assigned to the instance. For EC2-VPC, this
	// is only available if you've enabled DNS hostnames for your VPC
	PublicDns *string `pulumi:"publicDns"`
	// The public IP address assigned to the instance, if applicable.
	PublicIp *string `pulumi:"publicIp"`
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice *SpotInstanceRequestRootBlockDevice `pulumi:"rootBlockDevice"`
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps []string `pulumi:"secondaryPrivateIps"`
	// List of security group names to associate with.
	//
	// > **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck *bool `pulumi:"sourceDestCheck"`
	// The current [bid
	// status](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html)
	// of the Spot Instance Request.
	SpotBidStatus *string `pulumi:"spotBidStatus"`
	// The Instance ID (if any) that is currently fulfilling
	// the Spot Instance request.
	SpotInstanceId *string `pulumi:"spotInstanceId"`
	// The maximum price to request on the spot market.
	SpotPrice *string `pulumi:"spotPrice"`
	// The current [request
	// state](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#creating-spot-request-status)
	// of the Spot Instance Request.
	SpotRequestState *string `pulumi:"spotRequestState"`
	// If set to `one-time`, after
	// the instance is terminated, the spot request will be closed.
	SpotType *string `pulumi:"spotType"`
	// VPC Subnet ID to launch in.
	SubnetId *string `pulumi:"subnetId"`
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy *string `pulumi:"tenancy"`
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData *string `pulumi:"userData"`
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 *string `pulumi:"userDataBase64"`
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange *bool `pulumi:"userDataReplaceOnChange"`
	// The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	ValidFrom *string `pulumi:"validFrom"`
	// The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
	ValidUntil *string `pulumi:"validUntil"`
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	//
	// > **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `ec2.Instance` configuration, such as using `tags` in an `ebs.Volume` resource attached via `ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
	VolumeTags map[string]string `pulumi:"volumeTags"`
	// List of security group IDs to associate with.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
	// If set, this provider will
	// wait for the Spot Request to be fulfilled, and will throw an error if the
	// timeout of 10m is reached.
	WaitForFulfillment *bool `pulumi:"waitForFulfillment"`
}

type SpotInstanceRequestState struct {
	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami pulumi.StringPtrInput
	Arn pulumi.StringPtrInput
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress pulumi.BoolPtrInput
	// AZ to start the instance in.
	AvailabilityZone pulumi.StringPtrInput
	// The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
	// The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
	// Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
	BlockDurationMinutes pulumi.IntPtrInput
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	//
	// > **NOTE:** Changing `cpuCoreCount` and/or `cpuThreadsPerCore` will cause the resource to be destroyed and re-created.
	CapacityReservationSpecification SpotInstanceRequestCapacityReservationSpecificationPtrInput
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuCoreCount pulumi.IntPtrInput
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions SpotInstanceRequestCpuOptionsPtrInput
	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuThreadsPerCore pulumi.IntPtrInput
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification SpotInstanceRequestCreditSpecificationPtrInput
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop pulumi.BoolPtrInput
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination pulumi.BoolPtrInput
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices SpotInstanceRequestEbsBlockDeviceArrayInput
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized pulumi.BoolPtrInput
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions SpotInstanceRequestEnclaveOptionsPtrInput
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices SpotInstanceRequestEphemeralBlockDeviceArrayInput
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData pulumi.BoolPtrInput
	// If true, the launched EC2 instance will support hibernation.
	Hibernation pulumi.BoolPtrInput
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId pulumi.StringPtrInput
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn pulumi.StringPtrInput
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile pulumi.StringPtrInput
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior pulumi.StringPtrInput
	// Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`. Default value is `terminate`.
	InstanceInterruptionBehavior pulumi.StringPtrInput
	InstanceState                pulumi.StringPtrInput
	// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType pulumi.StringPtrInput
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount pulumi.IntPtrInput
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses pulumi.StringArrayInput
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName pulumi.StringPtrInput
	// A launch group is a group of spot instances that launch together and terminate together.
	// If left empty instances are launched and terminated individually.
	LaunchGroup pulumi.StringPtrInput
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
	LaunchTemplate SpotInstanceRequestLaunchTemplatePtrInput
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions SpotInstanceRequestMaintenanceOptionsPtrInput
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions SpotInstanceRequestMetadataOptionsPtrInput
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring pulumi.BoolPtrInput
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces SpotInstanceRequestNetworkInterfaceArrayInput
	OutpostArn        pulumi.StringPtrInput
	PasswordData      pulumi.StringPtrInput
	// Placement Group to start the instance in.
	PlacementGroup pulumi.StringPtrInput
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber  pulumi.IntPtrInput
	PrimaryNetworkInterfaceId pulumi.StringPtrInput
	// The private DNS name assigned to the instance. Can only be
	// used inside the Amazon EC2, and only available if you've enabled DNS hostnames
	// for your VPC
	PrivateDns pulumi.StringPtrInput
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions SpotInstanceRequestPrivateDnsNameOptionsPtrInput
	// Private IP address to associate with the instance in a VPC.
	PrivateIp pulumi.StringPtrInput
	// The public DNS name assigned to the instance. For EC2-VPC, this
	// is only available if you've enabled DNS hostnames for your VPC
	PublicDns pulumi.StringPtrInput
	// The public IP address assigned to the instance, if applicable.
	PublicIp pulumi.StringPtrInput
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice SpotInstanceRequestRootBlockDevicePtrInput
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps pulumi.StringArrayInput
	// List of security group names to associate with.
	//
	// > **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
	SecurityGroups pulumi.StringArrayInput
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck pulumi.BoolPtrInput
	// The current [bid
	// status](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html)
	// of the Spot Instance Request.
	SpotBidStatus pulumi.StringPtrInput
	// The Instance ID (if any) that is currently fulfilling
	// the Spot Instance request.
	SpotInstanceId pulumi.StringPtrInput
	// The maximum price to request on the spot market.
	SpotPrice pulumi.StringPtrInput
	// The current [request
	// state](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#creating-spot-request-status)
	// of the Spot Instance Request.
	SpotRequestState pulumi.StringPtrInput
	// If set to `one-time`, after
	// the instance is terminated, the spot request will be closed.
	SpotType pulumi.StringPtrInput
	// VPC Subnet ID to launch in.
	SubnetId pulumi.StringPtrInput
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy pulumi.StringPtrInput
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData pulumi.StringPtrInput
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 pulumi.StringPtrInput
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange pulumi.BoolPtrInput
	// The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	ValidFrom pulumi.StringPtrInput
	// The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
	ValidUntil pulumi.StringPtrInput
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	//
	// > **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `ec2.Instance` configuration, such as using `tags` in an `ebs.Volume` resource attached via `ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
	VolumeTags pulumi.StringMapInput
	// List of security group IDs to associate with.
	VpcSecurityGroupIds pulumi.StringArrayInput
	// If set, this provider will
	// wait for the Spot Request to be fulfilled, and will throw an error if the
	// timeout of 10m is reached.
	WaitForFulfillment pulumi.BoolPtrInput
}

func (SpotInstanceRequestState) ElementType() reflect.Type {
	return reflect.TypeOf((*spotInstanceRequestState)(nil)).Elem()
}

type spotInstanceRequestArgs struct {
	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami *string `pulumi:"ami"`
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress *bool `pulumi:"associatePublicIpAddress"`
	// AZ to start the instance in.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
	// The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
	// Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
	BlockDurationMinutes *int `pulumi:"blockDurationMinutes"`
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	//
	// > **NOTE:** Changing `cpuCoreCount` and/or `cpuThreadsPerCore` will cause the resource to be destroyed and re-created.
	CapacityReservationSpecification *SpotInstanceRequestCapacityReservationSpecification `pulumi:"capacityReservationSpecification"`
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuCoreCount *int `pulumi:"cpuCoreCount"`
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions *SpotInstanceRequestCpuOptions `pulumi:"cpuOptions"`
	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuThreadsPerCore *int `pulumi:"cpuThreadsPerCore"`
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification *SpotInstanceRequestCreditSpecification `pulumi:"creditSpecification"`
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop *bool `pulumi:"disableApiStop"`
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination *bool `pulumi:"disableApiTermination"`
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices []SpotInstanceRequestEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized *bool `pulumi:"ebsOptimized"`
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions *SpotInstanceRequestEnclaveOptions `pulumi:"enclaveOptions"`
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices []SpotInstanceRequestEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData *bool `pulumi:"getPasswordData"`
	// If true, the launched EC2 instance will support hibernation.
	Hibernation *bool `pulumi:"hibernation"`
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId *string `pulumi:"hostId"`
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn *string `pulumi:"hostResourceGroupArn"`
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile *string `pulumi:"iamInstanceProfile"`
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior *string `pulumi:"instanceInitiatedShutdownBehavior"`
	// Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`. Default value is `terminate`.
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType *string `pulumi:"instanceType"`
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName *string `pulumi:"keyName"`
	// A launch group is a group of spot instances that launch together and terminate together.
	// If left empty instances are launched and terminated individually.
	LaunchGroup *string `pulumi:"launchGroup"`
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
	LaunchTemplate *SpotInstanceRequestLaunchTemplate `pulumi:"launchTemplate"`
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions *SpotInstanceRequestMaintenanceOptions `pulumi:"maintenanceOptions"`
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions *SpotInstanceRequestMetadataOptions `pulumi:"metadataOptions"`
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring *bool `pulumi:"monitoring"`
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces []SpotInstanceRequestNetworkInterface `pulumi:"networkInterfaces"`
	// Placement Group to start the instance in.
	PlacementGroup *string `pulumi:"placementGroup"`
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber *int `pulumi:"placementPartitionNumber"`
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions *SpotInstanceRequestPrivateDnsNameOptions `pulumi:"privateDnsNameOptions"`
	// Private IP address to associate with the instance in a VPC.
	PrivateIp *string `pulumi:"privateIp"`
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice *SpotInstanceRequestRootBlockDevice `pulumi:"rootBlockDevice"`
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps []string `pulumi:"secondaryPrivateIps"`
	// List of security group names to associate with.
	//
	// > **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck *bool `pulumi:"sourceDestCheck"`
	// The maximum price to request on the spot market.
	SpotPrice *string `pulumi:"spotPrice"`
	// If set to `one-time`, after
	// the instance is terminated, the spot request will be closed.
	SpotType *string `pulumi:"spotType"`
	// VPC Subnet ID to launch in.
	SubnetId *string `pulumi:"subnetId"`
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy *string `pulumi:"tenancy"`
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData *string `pulumi:"userData"`
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 *string `pulumi:"userDataBase64"`
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange *bool `pulumi:"userDataReplaceOnChange"`
	// The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	ValidFrom *string `pulumi:"validFrom"`
	// The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
	ValidUntil *string `pulumi:"validUntil"`
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	//
	// > **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `ec2.Instance` configuration, such as using `tags` in an `ebs.Volume` resource attached via `ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
	VolumeTags map[string]string `pulumi:"volumeTags"`
	// List of security group IDs to associate with.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
	// If set, this provider will
	// wait for the Spot Request to be fulfilled, and will throw an error if the
	// timeout of 10m is reached.
	WaitForFulfillment *bool `pulumi:"waitForFulfillment"`
}

// The set of arguments for constructing a SpotInstanceRequest resource.
type SpotInstanceRequestArgs struct {
	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami pulumi.StringPtrInput
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress pulumi.BoolPtrInput
	// AZ to start the instance in.
	AvailabilityZone pulumi.StringPtrInput
	// The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
	// The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
	// Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
	BlockDurationMinutes pulumi.IntPtrInput
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	//
	// > **NOTE:** Changing `cpuCoreCount` and/or `cpuThreadsPerCore` will cause the resource to be destroyed and re-created.
	CapacityReservationSpecification SpotInstanceRequestCapacityReservationSpecificationPtrInput
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuCoreCount pulumi.IntPtrInput
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions SpotInstanceRequestCpuOptionsPtrInput
	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuThreadsPerCore pulumi.IntPtrInput
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification SpotInstanceRequestCreditSpecificationPtrInput
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop pulumi.BoolPtrInput
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination pulumi.BoolPtrInput
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices SpotInstanceRequestEbsBlockDeviceArrayInput
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized pulumi.BoolPtrInput
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions SpotInstanceRequestEnclaveOptionsPtrInput
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices SpotInstanceRequestEphemeralBlockDeviceArrayInput
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData pulumi.BoolPtrInput
	// If true, the launched EC2 instance will support hibernation.
	Hibernation pulumi.BoolPtrInput
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId pulumi.StringPtrInput
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn pulumi.StringPtrInput
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile pulumi.StringPtrInput
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior pulumi.StringPtrInput
	// Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`. Default value is `terminate`.
	InstanceInterruptionBehavior pulumi.StringPtrInput
	// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType pulumi.StringPtrInput
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount pulumi.IntPtrInput
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses pulumi.StringArrayInput
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName pulumi.StringPtrInput
	// A launch group is a group of spot instances that launch together and terminate together.
	// If left empty instances are launched and terminated individually.
	LaunchGroup pulumi.StringPtrInput
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
	LaunchTemplate SpotInstanceRequestLaunchTemplatePtrInput
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions SpotInstanceRequestMaintenanceOptionsPtrInput
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions SpotInstanceRequestMetadataOptionsPtrInput
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring pulumi.BoolPtrInput
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces SpotInstanceRequestNetworkInterfaceArrayInput
	// Placement Group to start the instance in.
	PlacementGroup pulumi.StringPtrInput
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber pulumi.IntPtrInput
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions SpotInstanceRequestPrivateDnsNameOptionsPtrInput
	// Private IP address to associate with the instance in a VPC.
	PrivateIp pulumi.StringPtrInput
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice SpotInstanceRequestRootBlockDevicePtrInput
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps pulumi.StringArrayInput
	// List of security group names to associate with.
	//
	// > **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
	SecurityGroups pulumi.StringArrayInput
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck pulumi.BoolPtrInput
	// The maximum price to request on the spot market.
	SpotPrice pulumi.StringPtrInput
	// If set to `one-time`, after
	// the instance is terminated, the spot request will be closed.
	SpotType pulumi.StringPtrInput
	// VPC Subnet ID to launch in.
	SubnetId pulumi.StringPtrInput
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy pulumi.StringPtrInput
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData pulumi.StringPtrInput
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 pulumi.StringPtrInput
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange pulumi.BoolPtrInput
	// The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	ValidFrom pulumi.StringPtrInput
	// The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
	ValidUntil pulumi.StringPtrInput
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	//
	// > **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `ec2.Instance` configuration, such as using `tags` in an `ebs.Volume` resource attached via `ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
	VolumeTags pulumi.StringMapInput
	// List of security group IDs to associate with.
	VpcSecurityGroupIds pulumi.StringArrayInput
	// If set, this provider will
	// wait for the Spot Request to be fulfilled, and will throw an error if the
	// timeout of 10m is reached.
	WaitForFulfillment pulumi.BoolPtrInput
}

func (SpotInstanceRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*spotInstanceRequestArgs)(nil)).Elem()
}

type SpotInstanceRequestInput interface {
	pulumi.Input

	ToSpotInstanceRequestOutput() SpotInstanceRequestOutput
	ToSpotInstanceRequestOutputWithContext(ctx context.Context) SpotInstanceRequestOutput
}

func (*SpotInstanceRequest) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequest)(nil)).Elem()
}

func (i *SpotInstanceRequest) ToSpotInstanceRequestOutput() SpotInstanceRequestOutput {
	return i.ToSpotInstanceRequestOutputWithContext(context.Background())
}

func (i *SpotInstanceRequest) ToSpotInstanceRequestOutputWithContext(ctx context.Context) SpotInstanceRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestOutput)
}

// SpotInstanceRequestArrayInput is an input type that accepts SpotInstanceRequestArray and SpotInstanceRequestArrayOutput values.
// You can construct a concrete instance of `SpotInstanceRequestArrayInput` via:
//
//	SpotInstanceRequestArray{ SpotInstanceRequestArgs{...} }
type SpotInstanceRequestArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestArrayOutput() SpotInstanceRequestArrayOutput
	ToSpotInstanceRequestArrayOutputWithContext(context.Context) SpotInstanceRequestArrayOutput
}

type SpotInstanceRequestArray []SpotInstanceRequestInput

func (SpotInstanceRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpotInstanceRequest)(nil)).Elem()
}

func (i SpotInstanceRequestArray) ToSpotInstanceRequestArrayOutput() SpotInstanceRequestArrayOutput {
	return i.ToSpotInstanceRequestArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestArray) ToSpotInstanceRequestArrayOutputWithContext(ctx context.Context) SpotInstanceRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestArrayOutput)
}

// SpotInstanceRequestMapInput is an input type that accepts SpotInstanceRequestMap and SpotInstanceRequestMapOutput values.
// You can construct a concrete instance of `SpotInstanceRequestMapInput` via:
//
//	SpotInstanceRequestMap{ "key": SpotInstanceRequestArgs{...} }
type SpotInstanceRequestMapInput interface {
	pulumi.Input

	ToSpotInstanceRequestMapOutput() SpotInstanceRequestMapOutput
	ToSpotInstanceRequestMapOutputWithContext(context.Context) SpotInstanceRequestMapOutput
}

type SpotInstanceRequestMap map[string]SpotInstanceRequestInput

func (SpotInstanceRequestMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpotInstanceRequest)(nil)).Elem()
}

func (i SpotInstanceRequestMap) ToSpotInstanceRequestMapOutput() SpotInstanceRequestMapOutput {
	return i.ToSpotInstanceRequestMapOutputWithContext(context.Background())
}

func (i SpotInstanceRequestMap) ToSpotInstanceRequestMapOutputWithContext(ctx context.Context) SpotInstanceRequestMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMapOutput)
}

type SpotInstanceRequestOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequest)(nil)).Elem()
}

func (o SpotInstanceRequestOutput) ToSpotInstanceRequestOutput() SpotInstanceRequestOutput {
	return o
}

func (o SpotInstanceRequestOutput) ToSpotInstanceRequestOutputWithContext(ctx context.Context) SpotInstanceRequestOutput {
	return o
}

// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
func (o SpotInstanceRequestOutput) Ami() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.Ami }).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.Arn }).(pulumi.StringPtrOutput)
}

// Whether to associate a public IP address with an instance in a VPC.
func (o SpotInstanceRequestOutput) AssociatePublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.BoolPtrOutput { return v.AssociatePublicIpAddress }).(pulumi.BoolPtrOutput)
}

// AZ to start the instance in.
func (o SpotInstanceRequestOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
// The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
// Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
func (o SpotInstanceRequestOutput) BlockDurationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.IntPtrOutput { return v.BlockDurationMinutes }).(pulumi.IntPtrOutput)
}

// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
//
// > **NOTE:** Changing `cpuCoreCount` and/or `cpuThreadsPerCore` will cause the resource to be destroyed and re-created.
func (o SpotInstanceRequestOutput) CapacityReservationSpecification() SpotInstanceRequestCapacityReservationSpecificationPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) SpotInstanceRequestCapacityReservationSpecificationPtrOutput {
		return v.CapacityReservationSpecification
	}).(SpotInstanceRequestCapacityReservationSpecificationPtrOutput)
}

// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
//
// Deprecated: use 'cpu_options' argument instead
func (o SpotInstanceRequestOutput) CpuCoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.IntPtrOutput { return v.CpuCoreCount }).(pulumi.IntPtrOutput)
}

// The CPU options for the instance. See CPU Options below for more details.
func (o SpotInstanceRequestOutput) CpuOptions() SpotInstanceRequestCpuOptionsPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) SpotInstanceRequestCpuOptionsPtrOutput { return v.CpuOptions }).(SpotInstanceRequestCpuOptionsPtrOutput)
}

// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
//
// Deprecated: use 'cpu_options' argument instead
func (o SpotInstanceRequestOutput) CpuThreadsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.IntPtrOutput { return v.CpuThreadsPerCore }).(pulumi.IntPtrOutput)
}

// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
func (o SpotInstanceRequestOutput) CreditSpecification() SpotInstanceRequestCreditSpecificationPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) SpotInstanceRequestCreditSpecificationPtrOutput {
		return v.CreditSpecification
	}).(SpotInstanceRequestCreditSpecificationPtrOutput)
}

// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
func (o SpotInstanceRequestOutput) DisableApiStop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.BoolPtrOutput { return v.DisableApiStop }).(pulumi.BoolPtrOutput)
}

// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
func (o SpotInstanceRequestOutput) DisableApiTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.BoolPtrOutput { return v.DisableApiTermination }).(pulumi.BoolPtrOutput)
}

// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
func (o SpotInstanceRequestOutput) EbsBlockDevices() SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) SpotInstanceRequestEbsBlockDeviceArrayOutput { return v.EbsBlockDevices }).(SpotInstanceRequestEbsBlockDeviceArrayOutput)
}

// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
func (o SpotInstanceRequestOutput) EbsOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.BoolPtrOutput { return v.EbsOptimized }).(pulumi.BoolPtrOutput)
}

// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
func (o SpotInstanceRequestOutput) EnclaveOptions() SpotInstanceRequestEnclaveOptionsPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) SpotInstanceRequestEnclaveOptionsPtrOutput { return v.EnclaveOptions }).(SpotInstanceRequestEnclaveOptionsPtrOutput)
}

// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
func (o SpotInstanceRequestOutput) EphemeralBlockDevices() SpotInstanceRequestEphemeralBlockDeviceArrayOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) SpotInstanceRequestEphemeralBlockDeviceArrayOutput {
		return v.EphemeralBlockDevices
	}).(SpotInstanceRequestEphemeralBlockDeviceArrayOutput)
}

// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
func (o SpotInstanceRequestOutput) GetPasswordData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.BoolPtrOutput { return v.GetPasswordData }).(pulumi.BoolPtrOutput)
}

// If true, the launched EC2 instance will support hibernation.
func (o SpotInstanceRequestOutput) Hibernation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.BoolPtrOutput { return v.Hibernation }).(pulumi.BoolPtrOutput)
}

// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
func (o SpotInstanceRequestOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.HostId }).(pulumi.StringPtrOutput)
}

// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
func (o SpotInstanceRequestOutput) HostResourceGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.HostResourceGroupArn }).(pulumi.StringPtrOutput)
}

// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
func (o SpotInstanceRequestOutput) IamInstanceProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.IamInstanceProfile }).(pulumi.StringPtrOutput)
}

// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
func (o SpotInstanceRequestOutput) InstanceInitiatedShutdownBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.InstanceInitiatedShutdownBehavior }).(pulumi.StringPtrOutput)
}

// Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`. Default value is `terminate`.
func (o SpotInstanceRequestOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestOutput) InstanceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.InstanceState }).(pulumi.StringPtrOutput)
}

// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
func (o SpotInstanceRequestOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
func (o SpotInstanceRequestOutput) Ipv6AddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.IntPtrOutput { return v.Ipv6AddressCount }).(pulumi.IntPtrOutput)
}

// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
func (o SpotInstanceRequestOutput) Ipv6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringArrayOutput { return v.Ipv6Addresses }).(pulumi.StringArrayOutput)
}

// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
func (o SpotInstanceRequestOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.KeyName }).(pulumi.StringPtrOutput)
}

// A launch group is a group of spot instances that launch together and terminate together.
// If left empty instances are launched and terminated individually.
func (o SpotInstanceRequestOutput) LaunchGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.LaunchGroup }).(pulumi.StringPtrOutput)
}

// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
func (o SpotInstanceRequestOutput) LaunchTemplate() SpotInstanceRequestLaunchTemplatePtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) SpotInstanceRequestLaunchTemplatePtrOutput { return v.LaunchTemplate }).(SpotInstanceRequestLaunchTemplatePtrOutput)
}

// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
func (o SpotInstanceRequestOutput) MaintenanceOptions() SpotInstanceRequestMaintenanceOptionsPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) SpotInstanceRequestMaintenanceOptionsPtrOutput {
		return v.MaintenanceOptions
	}).(SpotInstanceRequestMaintenanceOptionsPtrOutput)
}

// Customize the metadata options of the instance. See Metadata Options below for more details.
func (o SpotInstanceRequestOutput) MetadataOptions() SpotInstanceRequestMetadataOptionsPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) SpotInstanceRequestMetadataOptionsPtrOutput { return v.MetadataOptions }).(SpotInstanceRequestMetadataOptionsPtrOutput)
}

// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
func (o SpotInstanceRequestOutput) Monitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.BoolPtrOutput { return v.Monitoring }).(pulumi.BoolPtrOutput)
}

// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
func (o SpotInstanceRequestOutput) NetworkInterfaces() SpotInstanceRequestNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) SpotInstanceRequestNetworkInterfaceArrayOutput {
		return v.NetworkInterfaces
	}).(SpotInstanceRequestNetworkInterfaceArrayOutput)
}

func (o SpotInstanceRequestOutput) OutpostArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.OutpostArn }).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestOutput) PasswordData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.PasswordData }).(pulumi.StringPtrOutput)
}

// Placement Group to start the instance in.
func (o SpotInstanceRequestOutput) PlacementGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.PlacementGroup }).(pulumi.StringPtrOutput)
}

// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
func (o SpotInstanceRequestOutput) PlacementPartitionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.IntPtrOutput { return v.PlacementPartitionNumber }).(pulumi.IntPtrOutput)
}

func (o SpotInstanceRequestOutput) PrimaryNetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.PrimaryNetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// The private DNS name assigned to the instance. Can only be
// used inside the Amazon EC2, and only available if you've enabled DNS hostnames
// for your VPC
func (o SpotInstanceRequestOutput) PrivateDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.PrivateDns }).(pulumi.StringPtrOutput)
}

// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
func (o SpotInstanceRequestOutput) PrivateDnsNameOptions() SpotInstanceRequestPrivateDnsNameOptionsPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) SpotInstanceRequestPrivateDnsNameOptionsPtrOutput {
		return v.PrivateDnsNameOptions
	}).(SpotInstanceRequestPrivateDnsNameOptionsPtrOutput)
}

// Private IP address to associate with the instance in a VPC.
func (o SpotInstanceRequestOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

// The public DNS name assigned to the instance. For EC2-VPC, this
// is only available if you've enabled DNS hostnames for your VPC
func (o SpotInstanceRequestOutput) PublicDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.PublicDns }).(pulumi.StringPtrOutput)
}

// The public IP address assigned to the instance, if applicable.
func (o SpotInstanceRequestOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
func (o SpotInstanceRequestOutput) RootBlockDevice() SpotInstanceRequestRootBlockDevicePtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) SpotInstanceRequestRootBlockDevicePtrOutput { return v.RootBlockDevice }).(SpotInstanceRequestRootBlockDevicePtrOutput)
}

// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
func (o SpotInstanceRequestOutput) SecondaryPrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringArrayOutput { return v.SecondaryPrivateIps }).(pulumi.StringArrayOutput)
}

// List of security group names to associate with.
//
// > **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
func (o SpotInstanceRequestOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringArrayOutput { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
func (o SpotInstanceRequestOutput) SourceDestCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.BoolPtrOutput { return v.SourceDestCheck }).(pulumi.BoolPtrOutput)
}

// The current [bid
// status](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html)
// of the Spot Instance Request.
func (o SpotInstanceRequestOutput) SpotBidStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.SpotBidStatus }).(pulumi.StringPtrOutput)
}

// The Instance ID (if any) that is currently fulfilling
// the Spot Instance request.
func (o SpotInstanceRequestOutput) SpotInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.SpotInstanceId }).(pulumi.StringPtrOutput)
}

// The maximum price to request on the spot market.
func (o SpotInstanceRequestOutput) SpotPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.SpotPrice }).(pulumi.StringPtrOutput)
}

// The current [request
// state](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#creating-spot-request-status)
// of the Spot Instance Request.
func (o SpotInstanceRequestOutput) SpotRequestState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.SpotRequestState }).(pulumi.StringPtrOutput)
}

// If set to `one-time`, after
// the instance is terminated, the spot request will be closed.
func (o SpotInstanceRequestOutput) SpotType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.SpotType }).(pulumi.StringPtrOutput)
}

// VPC Subnet ID to launch in.
func (o SpotInstanceRequestOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o SpotInstanceRequestOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o SpotInstanceRequestOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
func (o SpotInstanceRequestOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.Tenancy }).(pulumi.StringPtrOutput)
}

// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
func (o SpotInstanceRequestOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.UserData }).(pulumi.StringPtrOutput)
}

// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
func (o SpotInstanceRequestOutput) UserDataBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.UserDataBase64 }).(pulumi.StringPtrOutput)
}

// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
func (o SpotInstanceRequestOutput) UserDataReplaceOnChange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.BoolPtrOutput { return v.UserDataReplaceOnChange }).(pulumi.BoolPtrOutput)
}

// The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
func (o SpotInstanceRequestOutput) ValidFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.ValidFrom }).(pulumi.StringPtrOutput)
}

// The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
func (o SpotInstanceRequestOutput) ValidUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringPtrOutput { return v.ValidUntil }).(pulumi.StringPtrOutput)
}

// Map of tags to assign, at instance-creation time, to root and EBS volumes.
//
// > **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `ec2.Instance` configuration, such as using `tags` in an `ebs.Volume` resource attached via `ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
func (o SpotInstanceRequestOutput) VolumeTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringMapOutput { return v.VolumeTags }).(pulumi.StringMapOutput)
}

// List of security group IDs to associate with.
func (o SpotInstanceRequestOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.StringArrayOutput { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

// If set, this provider will
// wait for the Spot Request to be fulfilled, and will throw an error if the
// timeout of 10m is reached.
func (o SpotInstanceRequestOutput) WaitForFulfillment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequest) pulumi.BoolPtrOutput { return v.WaitForFulfillment }).(pulumi.BoolPtrOutput)
}

type SpotInstanceRequestArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpotInstanceRequest)(nil)).Elem()
}

func (o SpotInstanceRequestArrayOutput) ToSpotInstanceRequestArrayOutput() SpotInstanceRequestArrayOutput {
	return o
}

func (o SpotInstanceRequestArrayOutput) ToSpotInstanceRequestArrayOutputWithContext(ctx context.Context) SpotInstanceRequestArrayOutput {
	return o
}

func (o SpotInstanceRequestArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpotInstanceRequest {
		return vs[0].([]*SpotInstanceRequest)[vs[1].(int)]
	}).(SpotInstanceRequestOutput)
}

type SpotInstanceRequestMapOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpotInstanceRequest)(nil)).Elem()
}

func (o SpotInstanceRequestMapOutput) ToSpotInstanceRequestMapOutput() SpotInstanceRequestMapOutput {
	return o
}

func (o SpotInstanceRequestMapOutput) ToSpotInstanceRequestMapOutputWithContext(ctx context.Context) SpotInstanceRequestMapOutput {
	return o
}

func (o SpotInstanceRequestMapOutput) MapIndex(k pulumi.StringInput) SpotInstanceRequestOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpotInstanceRequest {
		return vs[0].(map[string]*SpotInstanceRequest)[vs[1].(string)]
	}).(SpotInstanceRequestOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpotInstanceRequestInput)(nil)).Elem(), &SpotInstanceRequest{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpotInstanceRequestArrayInput)(nil)).Elem(), SpotInstanceRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpotInstanceRequestMapInput)(nil)).Elem(), SpotInstanceRequestMap{})
	pulumi.RegisterOutputType(SpotInstanceRequestOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestMapOutput{})
}
