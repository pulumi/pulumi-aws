// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupRoute(ctx *pulumi.Context, args *LookupRouteArgs, opts ...pulumi.InvokeOption) (*LookupRouteResult, error) {
	var rv LookupRouteResult
	err := ctx.Invoke("aws:ec2/getRoute:getRoute", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRoute.
type LookupRouteArgs struct {
	CarrierGatewayId         *string `pulumi:"carrierGatewayId"`
	CoreNetworkArn           *string `pulumi:"coreNetworkArn"`
	DestinationCidrBlock     *string `pulumi:"destinationCidrBlock"`
	DestinationIpv6CidrBlock *string `pulumi:"destinationIpv6CidrBlock"`
	DestinationPrefixListId  *string `pulumi:"destinationPrefixListId"`
	EgressOnlyGatewayId      *string `pulumi:"egressOnlyGatewayId"`
	GatewayId                *string `pulumi:"gatewayId"`
	InstanceId               *string `pulumi:"instanceId"`
	LocalGatewayId           *string `pulumi:"localGatewayId"`
	NatGatewayId             *string `pulumi:"natGatewayId"`
	NetworkInterfaceId       *string `pulumi:"networkInterfaceId"`
	RouteTableId             string  `pulumi:"routeTableId"`
	TransitGatewayId         *string `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId   *string `pulumi:"vpcPeeringConnectionId"`
}

// A collection of values returned by getRoute.
type LookupRouteResult struct {
	CarrierGatewayId         string `pulumi:"carrierGatewayId"`
	CoreNetworkArn           string `pulumi:"coreNetworkArn"`
	DestinationCidrBlock     string `pulumi:"destinationCidrBlock"`
	DestinationIpv6CidrBlock string `pulumi:"destinationIpv6CidrBlock"`
	DestinationPrefixListId  string `pulumi:"destinationPrefixListId"`
	EgressOnlyGatewayId      string `pulumi:"egressOnlyGatewayId"`
	GatewayId                string `pulumi:"gatewayId"`
	// The provider-assigned unique ID for this managed resource.
	Id                     string `pulumi:"id"`
	InstanceId             string `pulumi:"instanceId"`
	LocalGatewayId         string `pulumi:"localGatewayId"`
	NatGatewayId           string `pulumi:"natGatewayId"`
	NetworkInterfaceId     string `pulumi:"networkInterfaceId"`
	RouteTableId           string `pulumi:"routeTableId"`
	TransitGatewayId       string `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId string `pulumi:"vpcPeeringConnectionId"`
}

func LookupRouteOutput(ctx *pulumi.Context, args LookupRouteOutputArgs, opts ...pulumi.InvokeOption) LookupRouteResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRouteResult, error) {
			args := v.(LookupRouteArgs)
			r, err := LookupRoute(ctx, &args, opts...)
			var s LookupRouteResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRouteResultOutput)
}

// A collection of arguments for invoking getRoute.
type LookupRouteOutputArgs struct {
	CarrierGatewayId         pulumi.StringPtrInput `pulumi:"carrierGatewayId"`
	CoreNetworkArn           pulumi.StringPtrInput `pulumi:"coreNetworkArn"`
	DestinationCidrBlock     pulumi.StringPtrInput `pulumi:"destinationCidrBlock"`
	DestinationIpv6CidrBlock pulumi.StringPtrInput `pulumi:"destinationIpv6CidrBlock"`
	DestinationPrefixListId  pulumi.StringPtrInput `pulumi:"destinationPrefixListId"`
	EgressOnlyGatewayId      pulumi.StringPtrInput `pulumi:"egressOnlyGatewayId"`
	GatewayId                pulumi.StringPtrInput `pulumi:"gatewayId"`
	InstanceId               pulumi.StringPtrInput `pulumi:"instanceId"`
	LocalGatewayId           pulumi.StringPtrInput `pulumi:"localGatewayId"`
	NatGatewayId             pulumi.StringPtrInput `pulumi:"natGatewayId"`
	NetworkInterfaceId       pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	RouteTableId             pulumi.StringInput    `pulumi:"routeTableId"`
	TransitGatewayId         pulumi.StringPtrInput `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId   pulumi.StringPtrInput `pulumi:"vpcPeeringConnectionId"`
}

func (LookupRouteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteArgs)(nil)).Elem()
}

// A collection of values returned by getRoute.
type LookupRouteResultOutput struct{ *pulumi.OutputState }

func (LookupRouteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteResult)(nil)).Elem()
}

func (o LookupRouteResultOutput) ToLookupRouteResultOutput() LookupRouteResultOutput {
	return o
}

func (o LookupRouteResultOutput) ToLookupRouteResultOutputWithContext(ctx context.Context) LookupRouteResultOutput {
	return o
}

func (o LookupRouteResultOutput) CarrierGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.CarrierGatewayId }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) CoreNetworkArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.CoreNetworkArn }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) DestinationIpv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.DestinationIpv6CidrBlock }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) DestinationPrefixListId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.DestinationPrefixListId }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) EgressOnlyGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.EgressOnlyGatewayId }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.GatewayId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRouteResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) LocalGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.LocalGatewayId }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) NatGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.NatGatewayId }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.RouteTableId }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) TransitGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.TransitGatewayId }).(pulumi.StringOutput)
}

func (o LookupRouteResultOutput) VpcPeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteResult) string { return v.VpcPeeringConnectionId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRouteResultOutput{})
}
