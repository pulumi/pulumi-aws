// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupManagedPrefixList(ctx *pulumi.Context, args *LookupManagedPrefixListArgs, opts ...pulumi.InvokeOption) (*LookupManagedPrefixListResult, error) {
	var rv LookupManagedPrefixListResult
	err := ctx.Invoke("aws:ec2/getManagedPrefixList:getManagedPrefixList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedPrefixList.
type LookupManagedPrefixListArgs struct {
	Filters []GetManagedPrefixListFilter `pulumi:"filters"`
	Id      *string                      `pulumi:"id"`
	Name    *string                      `pulumi:"name"`
	Tags    map[string]string            `pulumi:"tags"`
}

// A collection of values returned by getManagedPrefixList.
type LookupManagedPrefixListResult struct {
	AddressFamily string                          `pulumi:"addressFamily"`
	Arn           string                          `pulumi:"arn"`
	Entries       []GetManagedPrefixListEntryType `pulumi:"entries"`
	Filters       []GetManagedPrefixListFilter    `pulumi:"filters"`
	Id            string                          `pulumi:"id"`
	MaxEntries    int                             `pulumi:"maxEntries"`
	Name          string                          `pulumi:"name"`
	OwnerId       string                          `pulumi:"ownerId"`
	Tags          map[string]string               `pulumi:"tags"`
	Version       int                             `pulumi:"version"`
}

func LookupManagedPrefixListOutput(ctx *pulumi.Context, args LookupManagedPrefixListOutputArgs, opts ...pulumi.InvokeOption) LookupManagedPrefixListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupManagedPrefixListResult, error) {
			args := v.(LookupManagedPrefixListArgs)
			r, err := LookupManagedPrefixList(ctx, &args, opts...)
			var s LookupManagedPrefixListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupManagedPrefixListResultOutput)
}

// A collection of arguments for invoking getManagedPrefixList.
type LookupManagedPrefixListOutputArgs struct {
	Filters GetManagedPrefixListFilterArrayInput `pulumi:"filters"`
	Id      pulumi.StringPtrInput                `pulumi:"id"`
	Name    pulumi.StringPtrInput                `pulumi:"name"`
	Tags    pulumi.StringMapInput                `pulumi:"tags"`
}

func (LookupManagedPrefixListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedPrefixListArgs)(nil)).Elem()
}

// A collection of values returned by getManagedPrefixList.
type LookupManagedPrefixListResultOutput struct{ *pulumi.OutputState }

func (LookupManagedPrefixListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedPrefixListResult)(nil)).Elem()
}

func (o LookupManagedPrefixListResultOutput) ToLookupManagedPrefixListResultOutput() LookupManagedPrefixListResultOutput {
	return o
}

func (o LookupManagedPrefixListResultOutput) ToLookupManagedPrefixListResultOutputWithContext(ctx context.Context) LookupManagedPrefixListResultOutput {
	return o
}

func (o LookupManagedPrefixListResultOutput) AddressFamily() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedPrefixListResult) string { return v.AddressFamily }).(pulumi.StringOutput)
}

func (o LookupManagedPrefixListResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedPrefixListResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupManagedPrefixListResultOutput) Entries() GetManagedPrefixListEntryTypeArrayOutput {
	return o.ApplyT(func(v LookupManagedPrefixListResult) []GetManagedPrefixListEntryType { return v.Entries }).(GetManagedPrefixListEntryTypeArrayOutput)
}

func (o LookupManagedPrefixListResultOutput) Filters() GetManagedPrefixListFilterArrayOutput {
	return o.ApplyT(func(v LookupManagedPrefixListResult) []GetManagedPrefixListFilter { return v.Filters }).(GetManagedPrefixListFilterArrayOutput)
}

func (o LookupManagedPrefixListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedPrefixListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupManagedPrefixListResultOutput) MaxEntries() pulumi.IntOutput {
	return o.ApplyT(func(v LookupManagedPrefixListResult) int { return v.MaxEntries }).(pulumi.IntOutput)
}

func (o LookupManagedPrefixListResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedPrefixListResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupManagedPrefixListResultOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedPrefixListResult) string { return v.OwnerId }).(pulumi.StringOutput)
}

func (o LookupManagedPrefixListResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupManagedPrefixListResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupManagedPrefixListResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupManagedPrefixListResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedPrefixListResultOutput{})
}
