// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcDhcpOptions struct {
	pulumi.CustomResourceState

	Arn                pulumi.StringOutput      `pulumi:"arn"`
	DomainName         pulumi.StringPtrOutput   `pulumi:"domainName"`
	DomainNameServers  pulumi.StringArrayOutput `pulumi:"domainNameServers"`
	NetbiosNameServers pulumi.StringArrayOutput `pulumi:"netbiosNameServers"`
	NetbiosNodeType    pulumi.StringPtrOutput   `pulumi:"netbiosNodeType"`
	NtpServers         pulumi.StringArrayOutput `pulumi:"ntpServers"`
	OwnerId            pulumi.StringOutput      `pulumi:"ownerId"`
	Tags               pulumi.StringMapOutput   `pulumi:"tags"`
	TagsAll            pulumi.StringMapOutput   `pulumi:"tagsAll"`
}

// NewVpcDhcpOptions registers a new resource with the given unique name, arguments, and options.
func NewVpcDhcpOptions(ctx *pulumi.Context,
	name string, args *VpcDhcpOptionsArgs, opts ...pulumi.ResourceOption) (*VpcDhcpOptions, error) {
	if args == nil {
		args = &VpcDhcpOptionsArgs{}
	}

	var resource VpcDhcpOptions
	err := ctx.RegisterResource("aws:ec2/vpcDhcpOptions:VpcDhcpOptions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcDhcpOptions gets an existing VpcDhcpOptions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcDhcpOptions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcDhcpOptionsState, opts ...pulumi.ResourceOption) (*VpcDhcpOptions, error) {
	var resource VpcDhcpOptions
	err := ctx.ReadResource("aws:ec2/vpcDhcpOptions:VpcDhcpOptions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcDhcpOptions resources.
type vpcDhcpOptionsState struct {
	Arn                *string           `pulumi:"arn"`
	DomainName         *string           `pulumi:"domainName"`
	DomainNameServers  []string          `pulumi:"domainNameServers"`
	NetbiosNameServers []string          `pulumi:"netbiosNameServers"`
	NetbiosNodeType    *string           `pulumi:"netbiosNodeType"`
	NtpServers         []string          `pulumi:"ntpServers"`
	OwnerId            *string           `pulumi:"ownerId"`
	Tags               map[string]string `pulumi:"tags"`
	TagsAll            map[string]string `pulumi:"tagsAll"`
}

type VpcDhcpOptionsState struct {
	Arn                pulumi.StringPtrInput
	DomainName         pulumi.StringPtrInput
	DomainNameServers  pulumi.StringArrayInput
	NetbiosNameServers pulumi.StringArrayInput
	NetbiosNodeType    pulumi.StringPtrInput
	NtpServers         pulumi.StringArrayInput
	OwnerId            pulumi.StringPtrInput
	Tags               pulumi.StringMapInput
	TagsAll            pulumi.StringMapInput
}

func (VpcDhcpOptionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcDhcpOptionsState)(nil)).Elem()
}

type vpcDhcpOptionsArgs struct {
	DomainName         *string           `pulumi:"domainName"`
	DomainNameServers  []string          `pulumi:"domainNameServers"`
	NetbiosNameServers []string          `pulumi:"netbiosNameServers"`
	NetbiosNodeType    *string           `pulumi:"netbiosNodeType"`
	NtpServers         []string          `pulumi:"ntpServers"`
	Tags               map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a VpcDhcpOptions resource.
type VpcDhcpOptionsArgs struct {
	DomainName         pulumi.StringPtrInput
	DomainNameServers  pulumi.StringArrayInput
	NetbiosNameServers pulumi.StringArrayInput
	NetbiosNodeType    pulumi.StringPtrInput
	NtpServers         pulumi.StringArrayInput
	Tags               pulumi.StringMapInput
}

func (VpcDhcpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcDhcpOptionsArgs)(nil)).Elem()
}

type VpcDhcpOptionsInput interface {
	pulumi.Input

	ToVpcDhcpOptionsOutput() VpcDhcpOptionsOutput
	ToVpcDhcpOptionsOutputWithContext(ctx context.Context) VpcDhcpOptionsOutput
}

func (*VpcDhcpOptions) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcDhcpOptions)(nil)).Elem()
}

func (i *VpcDhcpOptions) ToVpcDhcpOptionsOutput() VpcDhcpOptionsOutput {
	return i.ToVpcDhcpOptionsOutputWithContext(context.Background())
}

func (i *VpcDhcpOptions) ToVpcDhcpOptionsOutputWithContext(ctx context.Context) VpcDhcpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcDhcpOptionsOutput)
}

// VpcDhcpOptionsArrayInput is an input type that accepts VpcDhcpOptionsArray and VpcDhcpOptionsArrayOutput values.
// You can construct a concrete instance of `VpcDhcpOptionsArrayInput` via:
//
//	VpcDhcpOptionsArray{ VpcDhcpOptionsArgs{...} }
type VpcDhcpOptionsArrayInput interface {
	pulumi.Input

	ToVpcDhcpOptionsArrayOutput() VpcDhcpOptionsArrayOutput
	ToVpcDhcpOptionsArrayOutputWithContext(context.Context) VpcDhcpOptionsArrayOutput
}

type VpcDhcpOptionsArray []VpcDhcpOptionsInput

func (VpcDhcpOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcDhcpOptions)(nil)).Elem()
}

func (i VpcDhcpOptionsArray) ToVpcDhcpOptionsArrayOutput() VpcDhcpOptionsArrayOutput {
	return i.ToVpcDhcpOptionsArrayOutputWithContext(context.Background())
}

func (i VpcDhcpOptionsArray) ToVpcDhcpOptionsArrayOutputWithContext(ctx context.Context) VpcDhcpOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcDhcpOptionsArrayOutput)
}

// VpcDhcpOptionsMapInput is an input type that accepts VpcDhcpOptionsMap and VpcDhcpOptionsMapOutput values.
// You can construct a concrete instance of `VpcDhcpOptionsMapInput` via:
//
//	VpcDhcpOptionsMap{ "key": VpcDhcpOptionsArgs{...} }
type VpcDhcpOptionsMapInput interface {
	pulumi.Input

	ToVpcDhcpOptionsMapOutput() VpcDhcpOptionsMapOutput
	ToVpcDhcpOptionsMapOutputWithContext(context.Context) VpcDhcpOptionsMapOutput
}

type VpcDhcpOptionsMap map[string]VpcDhcpOptionsInput

func (VpcDhcpOptionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcDhcpOptions)(nil)).Elem()
}

func (i VpcDhcpOptionsMap) ToVpcDhcpOptionsMapOutput() VpcDhcpOptionsMapOutput {
	return i.ToVpcDhcpOptionsMapOutputWithContext(context.Background())
}

func (i VpcDhcpOptionsMap) ToVpcDhcpOptionsMapOutputWithContext(ctx context.Context) VpcDhcpOptionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcDhcpOptionsMapOutput)
}

type VpcDhcpOptionsOutput struct{ *pulumi.OutputState }

func (VpcDhcpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcDhcpOptions)(nil)).Elem()
}

func (o VpcDhcpOptionsOutput) ToVpcDhcpOptionsOutput() VpcDhcpOptionsOutput {
	return o
}

func (o VpcDhcpOptionsOutput) ToVpcDhcpOptionsOutputWithContext(ctx context.Context) VpcDhcpOptionsOutput {
	return o
}

func (o VpcDhcpOptionsOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcDhcpOptions) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o VpcDhcpOptionsOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcDhcpOptions) pulumi.StringPtrOutput { return v.DomainName }).(pulumi.StringPtrOutput)
}

func (o VpcDhcpOptionsOutput) DomainNameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcDhcpOptions) pulumi.StringArrayOutput { return v.DomainNameServers }).(pulumi.StringArrayOutput)
}

func (o VpcDhcpOptionsOutput) NetbiosNameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcDhcpOptions) pulumi.StringArrayOutput { return v.NetbiosNameServers }).(pulumi.StringArrayOutput)
}

func (o VpcDhcpOptionsOutput) NetbiosNodeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcDhcpOptions) pulumi.StringPtrOutput { return v.NetbiosNodeType }).(pulumi.StringPtrOutput)
}

func (o VpcDhcpOptionsOutput) NtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcDhcpOptions) pulumi.StringArrayOutput { return v.NtpServers }).(pulumi.StringArrayOutput)
}

func (o VpcDhcpOptionsOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcDhcpOptions) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

func (o VpcDhcpOptionsOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcDhcpOptions) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o VpcDhcpOptionsOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcDhcpOptions) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type VpcDhcpOptionsArrayOutput struct{ *pulumi.OutputState }

func (VpcDhcpOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcDhcpOptions)(nil)).Elem()
}

func (o VpcDhcpOptionsArrayOutput) ToVpcDhcpOptionsArrayOutput() VpcDhcpOptionsArrayOutput {
	return o
}

func (o VpcDhcpOptionsArrayOutput) ToVpcDhcpOptionsArrayOutputWithContext(ctx context.Context) VpcDhcpOptionsArrayOutput {
	return o
}

func (o VpcDhcpOptionsArrayOutput) Index(i pulumi.IntInput) VpcDhcpOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcDhcpOptions {
		return vs[0].([]*VpcDhcpOptions)[vs[1].(int)]
	}).(VpcDhcpOptionsOutput)
}

type VpcDhcpOptionsMapOutput struct{ *pulumi.OutputState }

func (VpcDhcpOptionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcDhcpOptions)(nil)).Elem()
}

func (o VpcDhcpOptionsMapOutput) ToVpcDhcpOptionsMapOutput() VpcDhcpOptionsMapOutput {
	return o
}

func (o VpcDhcpOptionsMapOutput) ToVpcDhcpOptionsMapOutputWithContext(ctx context.Context) VpcDhcpOptionsMapOutput {
	return o
}

func (o VpcDhcpOptionsMapOutput) MapIndex(k pulumi.StringInput) VpcDhcpOptionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcDhcpOptions {
		return vs[0].(map[string]*VpcDhcpOptions)[vs[1].(string)]
	}).(VpcDhcpOptionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcDhcpOptionsInput)(nil)).Elem(), &VpcDhcpOptions{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcDhcpOptionsArrayInput)(nil)).Elem(), VpcDhcpOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcDhcpOptionsMapInput)(nil)).Elem(), VpcDhcpOptionsMap{})
	pulumi.RegisterOutputType(VpcDhcpOptionsOutput{})
	pulumi.RegisterOutputType(VpcDhcpOptionsArrayOutput{})
	pulumi.RegisterOutputType(VpcDhcpOptionsMapOutput{})
}
