// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkInsightsPath struct {
	pulumi.CustomResourceState

	Arn             pulumi.StringOutput    `pulumi:"arn"`
	Destination     pulumi.StringOutput    `pulumi:"destination"`
	DestinationIp   pulumi.StringPtrOutput `pulumi:"destinationIp"`
	DestinationPort pulumi.IntPtrOutput    `pulumi:"destinationPort"`
	Protocol        pulumi.StringOutput    `pulumi:"protocol"`
	Source          pulumi.StringOutput    `pulumi:"source"`
	SourceIp        pulumi.StringPtrOutput `pulumi:"sourceIp"`
	Tags            pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll         pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewNetworkInsightsPath registers a new resource with the given unique name, arguments, and options.
func NewNetworkInsightsPath(ctx *pulumi.Context,
	name string, args *NetworkInsightsPathArgs, opts ...pulumi.ResourceOption) (*NetworkInsightsPath, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	var resource NetworkInsightsPath
	err := ctx.RegisterResource("aws:ec2/networkInsightsPath:NetworkInsightsPath", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkInsightsPath gets an existing NetworkInsightsPath resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkInsightsPath(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkInsightsPathState, opts ...pulumi.ResourceOption) (*NetworkInsightsPath, error) {
	var resource NetworkInsightsPath
	err := ctx.ReadResource("aws:ec2/networkInsightsPath:NetworkInsightsPath", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkInsightsPath resources.
type networkInsightsPathState struct {
	Arn             *string           `pulumi:"arn"`
	Destination     *string           `pulumi:"destination"`
	DestinationIp   *string           `pulumi:"destinationIp"`
	DestinationPort *int              `pulumi:"destinationPort"`
	Protocol        *string           `pulumi:"protocol"`
	Source          *string           `pulumi:"source"`
	SourceIp        *string           `pulumi:"sourceIp"`
	Tags            map[string]string `pulumi:"tags"`
	TagsAll         map[string]string `pulumi:"tagsAll"`
}

type NetworkInsightsPathState struct {
	Arn             pulumi.StringPtrInput
	Destination     pulumi.StringPtrInput
	DestinationIp   pulumi.StringPtrInput
	DestinationPort pulumi.IntPtrInput
	Protocol        pulumi.StringPtrInput
	Source          pulumi.StringPtrInput
	SourceIp        pulumi.StringPtrInput
	Tags            pulumi.StringMapInput
	TagsAll         pulumi.StringMapInput
}

func (NetworkInsightsPathState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInsightsPathState)(nil)).Elem()
}

type networkInsightsPathArgs struct {
	Destination     string            `pulumi:"destination"`
	DestinationIp   *string           `pulumi:"destinationIp"`
	DestinationPort *int              `pulumi:"destinationPort"`
	Protocol        string            `pulumi:"protocol"`
	Source          string            `pulumi:"source"`
	SourceIp        *string           `pulumi:"sourceIp"`
	Tags            map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkInsightsPath resource.
type NetworkInsightsPathArgs struct {
	Destination     pulumi.StringInput
	DestinationIp   pulumi.StringPtrInput
	DestinationPort pulumi.IntPtrInput
	Protocol        pulumi.StringInput
	Source          pulumi.StringInput
	SourceIp        pulumi.StringPtrInput
	Tags            pulumi.StringMapInput
}

func (NetworkInsightsPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInsightsPathArgs)(nil)).Elem()
}

type NetworkInsightsPathInput interface {
	pulumi.Input

	ToNetworkInsightsPathOutput() NetworkInsightsPathOutput
	ToNetworkInsightsPathOutputWithContext(ctx context.Context) NetworkInsightsPathOutput
}

func (*NetworkInsightsPath) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInsightsPath)(nil)).Elem()
}

func (i *NetworkInsightsPath) ToNetworkInsightsPathOutput() NetworkInsightsPathOutput {
	return i.ToNetworkInsightsPathOutputWithContext(context.Background())
}

func (i *NetworkInsightsPath) ToNetworkInsightsPathOutputWithContext(ctx context.Context) NetworkInsightsPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsPathOutput)
}

// NetworkInsightsPathArrayInput is an input type that accepts NetworkInsightsPathArray and NetworkInsightsPathArrayOutput values.
// You can construct a concrete instance of `NetworkInsightsPathArrayInput` via:
//
//	NetworkInsightsPathArray{ NetworkInsightsPathArgs{...} }
type NetworkInsightsPathArrayInput interface {
	pulumi.Input

	ToNetworkInsightsPathArrayOutput() NetworkInsightsPathArrayOutput
	ToNetworkInsightsPathArrayOutputWithContext(context.Context) NetworkInsightsPathArrayOutput
}

type NetworkInsightsPathArray []NetworkInsightsPathInput

func (NetworkInsightsPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkInsightsPath)(nil)).Elem()
}

func (i NetworkInsightsPathArray) ToNetworkInsightsPathArrayOutput() NetworkInsightsPathArrayOutput {
	return i.ToNetworkInsightsPathArrayOutputWithContext(context.Background())
}

func (i NetworkInsightsPathArray) ToNetworkInsightsPathArrayOutputWithContext(ctx context.Context) NetworkInsightsPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsPathArrayOutput)
}

// NetworkInsightsPathMapInput is an input type that accepts NetworkInsightsPathMap and NetworkInsightsPathMapOutput values.
// You can construct a concrete instance of `NetworkInsightsPathMapInput` via:
//
//	NetworkInsightsPathMap{ "key": NetworkInsightsPathArgs{...} }
type NetworkInsightsPathMapInput interface {
	pulumi.Input

	ToNetworkInsightsPathMapOutput() NetworkInsightsPathMapOutput
	ToNetworkInsightsPathMapOutputWithContext(context.Context) NetworkInsightsPathMapOutput
}

type NetworkInsightsPathMap map[string]NetworkInsightsPathInput

func (NetworkInsightsPathMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkInsightsPath)(nil)).Elem()
}

func (i NetworkInsightsPathMap) ToNetworkInsightsPathMapOutput() NetworkInsightsPathMapOutput {
	return i.ToNetworkInsightsPathMapOutputWithContext(context.Background())
}

func (i NetworkInsightsPathMap) ToNetworkInsightsPathMapOutputWithContext(ctx context.Context) NetworkInsightsPathMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsPathMapOutput)
}

type NetworkInsightsPathOutput struct{ *pulumi.OutputState }

func (NetworkInsightsPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInsightsPath)(nil)).Elem()
}

func (o NetworkInsightsPathOutput) ToNetworkInsightsPathOutput() NetworkInsightsPathOutput {
	return o
}

func (o NetworkInsightsPathOutput) ToNetworkInsightsPathOutputWithContext(ctx context.Context) NetworkInsightsPathOutput {
	return o
}

func (o NetworkInsightsPathOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o NetworkInsightsPathOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringOutput { return v.Destination }).(pulumi.StringOutput)
}

func (o NetworkInsightsPathOutput) DestinationIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringPtrOutput { return v.DestinationIp }).(pulumi.StringPtrOutput)
}

func (o NetworkInsightsPathOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.IntPtrOutput { return v.DestinationPort }).(pulumi.IntPtrOutput)
}

func (o NetworkInsightsPathOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

func (o NetworkInsightsPathOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

func (o NetworkInsightsPathOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringPtrOutput { return v.SourceIp }).(pulumi.StringPtrOutput)
}

func (o NetworkInsightsPathOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o NetworkInsightsPathOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type NetworkInsightsPathArrayOutput struct{ *pulumi.OutputState }

func (NetworkInsightsPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkInsightsPath)(nil)).Elem()
}

func (o NetworkInsightsPathArrayOutput) ToNetworkInsightsPathArrayOutput() NetworkInsightsPathArrayOutput {
	return o
}

func (o NetworkInsightsPathArrayOutput) ToNetworkInsightsPathArrayOutputWithContext(ctx context.Context) NetworkInsightsPathArrayOutput {
	return o
}

func (o NetworkInsightsPathArrayOutput) Index(i pulumi.IntInput) NetworkInsightsPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkInsightsPath {
		return vs[0].([]*NetworkInsightsPath)[vs[1].(int)]
	}).(NetworkInsightsPathOutput)
}

type NetworkInsightsPathMapOutput struct{ *pulumi.OutputState }

func (NetworkInsightsPathMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkInsightsPath)(nil)).Elem()
}

func (o NetworkInsightsPathMapOutput) ToNetworkInsightsPathMapOutput() NetworkInsightsPathMapOutput {
	return o
}

func (o NetworkInsightsPathMapOutput) ToNetworkInsightsPathMapOutputWithContext(ctx context.Context) NetworkInsightsPathMapOutput {
	return o
}

func (o NetworkInsightsPathMapOutput) MapIndex(k pulumi.StringInput) NetworkInsightsPathOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkInsightsPath {
		return vs[0].(map[string]*NetworkInsightsPath)[vs[1].(string)]
	}).(NetworkInsightsPathOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInsightsPathInput)(nil)).Elem(), &NetworkInsightsPath{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInsightsPathArrayInput)(nil)).Elem(), NetworkInsightsPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInsightsPathMapInput)(nil)).Elem(), NetworkInsightsPathMap{})
	pulumi.RegisterOutputType(NetworkInsightsPathOutput{})
	pulumi.RegisterOutputType(NetworkInsightsPathArrayOutput{})
	pulumi.RegisterOutputType(NetworkInsightsPathMapOutput{})
}
