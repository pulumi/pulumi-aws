// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS EC2 (Elastic Compute Cloud) VPC Block Public Access Exclusion.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := ec2.NewVpc(ctx, "test", &ec2.VpcArgs{
//				CidrBlock: pulumi.String("10.1.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ec2.NewVpcBlockPublicAccessExclusion(ctx, "test", &ec2.VpcBlockPublicAccessExclusionArgs{
//				VpcId:                        test.ID(),
//				InternetGatewayExclusionMode: pulumi.String("allow-bidirectional"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Usage with subnet id
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := ec2.NewVpc(ctx, "test", &ec2.VpcArgs{
//				CidrBlock: pulumi.String("10.1.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			testSubnet, err := ec2.NewSubnet(ctx, "test", &ec2.SubnetArgs{
//				CidrBlock: pulumi.String("10.1.1.0/24"),
//				VpcId:     test.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ec2.NewVpcBlockPublicAccessExclusion(ctx, "test", &ec2.VpcBlockPublicAccessExclusionArgs{
//				SubnetId:                     testSubnet.ID(),
//				InternetGatewayExclusionMode: pulumi.String("allow-egress"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import EC2 (Elastic Compute Cloud) VPC Block Public Access Exclusion using the `id`. For example:
//
// ```sh
// $ pulumi import aws:ec2/vpcBlockPublicAccessExclusion:VpcBlockPublicAccessExclusion example vpcbpa-exclude-1234abcd
// ```
type VpcBlockPublicAccessExclusion struct {
	pulumi.CustomResourceState

	// Mode of exclusion from Block Public Access. The allowed values are `allow-egress` and `allow-bidirectional`.
	//
	// The following arguments are optional:
	InternetGatewayExclusionMode pulumi.StringOutput `pulumi:"internetGatewayExclusionMode"`
	// The Amazon Resource Name (ARN) the excluded resource.
	ResourceArn pulumi.StringOutput `pulumi:"resourceArn"`
	// Id of the subnet to which this exclusion applies. Either this or the vpcId needs to be provided.
	SubnetId pulumi.StringPtrOutput `pulumi:"subnetId"`
	// A map of tags to assign to the exclusion. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll  pulumi.StringMapOutput                         `pulumi:"tagsAll"`
	Timeouts VpcBlockPublicAccessExclusionTimeoutsPtrOutput `pulumi:"timeouts"`
	// Id of the VPC to which this exclusion applies. Either this or the subnetId needs to be provided.
	VpcId pulumi.StringPtrOutput `pulumi:"vpcId"`
}

// NewVpcBlockPublicAccessExclusion registers a new resource with the given unique name, arguments, and options.
func NewVpcBlockPublicAccessExclusion(ctx *pulumi.Context,
	name string, args *VpcBlockPublicAccessExclusionArgs, opts ...pulumi.ResourceOption) (*VpcBlockPublicAccessExclusion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InternetGatewayExclusionMode == nil {
		return nil, errors.New("invalid value for required argument 'InternetGatewayExclusionMode'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcBlockPublicAccessExclusion
	err := ctx.RegisterResource("aws:ec2/vpcBlockPublicAccessExclusion:VpcBlockPublicAccessExclusion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcBlockPublicAccessExclusion gets an existing VpcBlockPublicAccessExclusion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcBlockPublicAccessExclusion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcBlockPublicAccessExclusionState, opts ...pulumi.ResourceOption) (*VpcBlockPublicAccessExclusion, error) {
	var resource VpcBlockPublicAccessExclusion
	err := ctx.ReadResource("aws:ec2/vpcBlockPublicAccessExclusion:VpcBlockPublicAccessExclusion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcBlockPublicAccessExclusion resources.
type vpcBlockPublicAccessExclusionState struct {
	// Mode of exclusion from Block Public Access. The allowed values are `allow-egress` and `allow-bidirectional`.
	//
	// The following arguments are optional:
	InternetGatewayExclusionMode *string `pulumi:"internetGatewayExclusionMode"`
	// The Amazon Resource Name (ARN) the excluded resource.
	ResourceArn *string `pulumi:"resourceArn"`
	// Id of the subnet to which this exclusion applies. Either this or the vpcId needs to be provided.
	SubnetId *string `pulumi:"subnetId"`
	// A map of tags to assign to the exclusion. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll  map[string]string                      `pulumi:"tagsAll"`
	Timeouts *VpcBlockPublicAccessExclusionTimeouts `pulumi:"timeouts"`
	// Id of the VPC to which this exclusion applies. Either this or the subnetId needs to be provided.
	VpcId *string `pulumi:"vpcId"`
}

type VpcBlockPublicAccessExclusionState struct {
	// Mode of exclusion from Block Public Access. The allowed values are `allow-egress` and `allow-bidirectional`.
	//
	// The following arguments are optional:
	InternetGatewayExclusionMode pulumi.StringPtrInput
	// The Amazon Resource Name (ARN) the excluded resource.
	ResourceArn pulumi.StringPtrInput
	// Id of the subnet to which this exclusion applies. Either this or the vpcId needs to be provided.
	SubnetId pulumi.StringPtrInput
	// A map of tags to assign to the exclusion. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll  pulumi.StringMapInput
	Timeouts VpcBlockPublicAccessExclusionTimeoutsPtrInput
	// Id of the VPC to which this exclusion applies. Either this or the subnetId needs to be provided.
	VpcId pulumi.StringPtrInput
}

func (VpcBlockPublicAccessExclusionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcBlockPublicAccessExclusionState)(nil)).Elem()
}

type vpcBlockPublicAccessExclusionArgs struct {
	// Mode of exclusion from Block Public Access. The allowed values are `allow-egress` and `allow-bidirectional`.
	//
	// The following arguments are optional:
	InternetGatewayExclusionMode string `pulumi:"internetGatewayExclusionMode"`
	// Id of the subnet to which this exclusion applies. Either this or the vpcId needs to be provided.
	SubnetId *string `pulumi:"subnetId"`
	// A map of tags to assign to the exclusion. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string                      `pulumi:"tags"`
	Timeouts *VpcBlockPublicAccessExclusionTimeouts `pulumi:"timeouts"`
	// Id of the VPC to which this exclusion applies. Either this or the subnetId needs to be provided.
	VpcId *string `pulumi:"vpcId"`
}

// The set of arguments for constructing a VpcBlockPublicAccessExclusion resource.
type VpcBlockPublicAccessExclusionArgs struct {
	// Mode of exclusion from Block Public Access. The allowed values are `allow-egress` and `allow-bidirectional`.
	//
	// The following arguments are optional:
	InternetGatewayExclusionMode pulumi.StringInput
	// Id of the subnet to which this exclusion applies. Either this or the vpcId needs to be provided.
	SubnetId pulumi.StringPtrInput
	// A map of tags to assign to the exclusion. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumi.StringMapInput
	Timeouts VpcBlockPublicAccessExclusionTimeoutsPtrInput
	// Id of the VPC to which this exclusion applies. Either this or the subnetId needs to be provided.
	VpcId pulumi.StringPtrInput
}

func (VpcBlockPublicAccessExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcBlockPublicAccessExclusionArgs)(nil)).Elem()
}

type VpcBlockPublicAccessExclusionInput interface {
	pulumi.Input

	ToVpcBlockPublicAccessExclusionOutput() VpcBlockPublicAccessExclusionOutput
	ToVpcBlockPublicAccessExclusionOutputWithContext(ctx context.Context) VpcBlockPublicAccessExclusionOutput
}

func (*VpcBlockPublicAccessExclusion) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcBlockPublicAccessExclusion)(nil)).Elem()
}

func (i *VpcBlockPublicAccessExclusion) ToVpcBlockPublicAccessExclusionOutput() VpcBlockPublicAccessExclusionOutput {
	return i.ToVpcBlockPublicAccessExclusionOutputWithContext(context.Background())
}

func (i *VpcBlockPublicAccessExclusion) ToVpcBlockPublicAccessExclusionOutputWithContext(ctx context.Context) VpcBlockPublicAccessExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcBlockPublicAccessExclusionOutput)
}

// VpcBlockPublicAccessExclusionArrayInput is an input type that accepts VpcBlockPublicAccessExclusionArray and VpcBlockPublicAccessExclusionArrayOutput values.
// You can construct a concrete instance of `VpcBlockPublicAccessExclusionArrayInput` via:
//
//	VpcBlockPublicAccessExclusionArray{ VpcBlockPublicAccessExclusionArgs{...} }
type VpcBlockPublicAccessExclusionArrayInput interface {
	pulumi.Input

	ToVpcBlockPublicAccessExclusionArrayOutput() VpcBlockPublicAccessExclusionArrayOutput
	ToVpcBlockPublicAccessExclusionArrayOutputWithContext(context.Context) VpcBlockPublicAccessExclusionArrayOutput
}

type VpcBlockPublicAccessExclusionArray []VpcBlockPublicAccessExclusionInput

func (VpcBlockPublicAccessExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcBlockPublicAccessExclusion)(nil)).Elem()
}

func (i VpcBlockPublicAccessExclusionArray) ToVpcBlockPublicAccessExclusionArrayOutput() VpcBlockPublicAccessExclusionArrayOutput {
	return i.ToVpcBlockPublicAccessExclusionArrayOutputWithContext(context.Background())
}

func (i VpcBlockPublicAccessExclusionArray) ToVpcBlockPublicAccessExclusionArrayOutputWithContext(ctx context.Context) VpcBlockPublicAccessExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcBlockPublicAccessExclusionArrayOutput)
}

// VpcBlockPublicAccessExclusionMapInput is an input type that accepts VpcBlockPublicAccessExclusionMap and VpcBlockPublicAccessExclusionMapOutput values.
// You can construct a concrete instance of `VpcBlockPublicAccessExclusionMapInput` via:
//
//	VpcBlockPublicAccessExclusionMap{ "key": VpcBlockPublicAccessExclusionArgs{...} }
type VpcBlockPublicAccessExclusionMapInput interface {
	pulumi.Input

	ToVpcBlockPublicAccessExclusionMapOutput() VpcBlockPublicAccessExclusionMapOutput
	ToVpcBlockPublicAccessExclusionMapOutputWithContext(context.Context) VpcBlockPublicAccessExclusionMapOutput
}

type VpcBlockPublicAccessExclusionMap map[string]VpcBlockPublicAccessExclusionInput

func (VpcBlockPublicAccessExclusionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcBlockPublicAccessExclusion)(nil)).Elem()
}

func (i VpcBlockPublicAccessExclusionMap) ToVpcBlockPublicAccessExclusionMapOutput() VpcBlockPublicAccessExclusionMapOutput {
	return i.ToVpcBlockPublicAccessExclusionMapOutputWithContext(context.Background())
}

func (i VpcBlockPublicAccessExclusionMap) ToVpcBlockPublicAccessExclusionMapOutputWithContext(ctx context.Context) VpcBlockPublicAccessExclusionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcBlockPublicAccessExclusionMapOutput)
}

type VpcBlockPublicAccessExclusionOutput struct{ *pulumi.OutputState }

func (VpcBlockPublicAccessExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcBlockPublicAccessExclusion)(nil)).Elem()
}

func (o VpcBlockPublicAccessExclusionOutput) ToVpcBlockPublicAccessExclusionOutput() VpcBlockPublicAccessExclusionOutput {
	return o
}

func (o VpcBlockPublicAccessExclusionOutput) ToVpcBlockPublicAccessExclusionOutputWithContext(ctx context.Context) VpcBlockPublicAccessExclusionOutput {
	return o
}

// Mode of exclusion from Block Public Access. The allowed values are `allow-egress` and `allow-bidirectional`.
//
// The following arguments are optional:
func (o VpcBlockPublicAccessExclusionOutput) InternetGatewayExclusionMode() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcBlockPublicAccessExclusion) pulumi.StringOutput { return v.InternetGatewayExclusionMode }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) the excluded resource.
func (o VpcBlockPublicAccessExclusionOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcBlockPublicAccessExclusion) pulumi.StringOutput { return v.ResourceArn }).(pulumi.StringOutput)
}

// Id of the subnet to which this exclusion applies. Either this or the vpcId needs to be provided.
func (o VpcBlockPublicAccessExclusionOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcBlockPublicAccessExclusion) pulumi.StringPtrOutput { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// A map of tags to assign to the exclusion. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o VpcBlockPublicAccessExclusionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcBlockPublicAccessExclusion) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o VpcBlockPublicAccessExclusionOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcBlockPublicAccessExclusion) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o VpcBlockPublicAccessExclusionOutput) Timeouts() VpcBlockPublicAccessExclusionTimeoutsPtrOutput {
	return o.ApplyT(func(v *VpcBlockPublicAccessExclusion) VpcBlockPublicAccessExclusionTimeoutsPtrOutput {
		return v.Timeouts
	}).(VpcBlockPublicAccessExclusionTimeoutsPtrOutput)
}

// Id of the VPC to which this exclusion applies. Either this or the subnetId needs to be provided.
func (o VpcBlockPublicAccessExclusionOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcBlockPublicAccessExclusion) pulumi.StringPtrOutput { return v.VpcId }).(pulumi.StringPtrOutput)
}

type VpcBlockPublicAccessExclusionArrayOutput struct{ *pulumi.OutputState }

func (VpcBlockPublicAccessExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcBlockPublicAccessExclusion)(nil)).Elem()
}

func (o VpcBlockPublicAccessExclusionArrayOutput) ToVpcBlockPublicAccessExclusionArrayOutput() VpcBlockPublicAccessExclusionArrayOutput {
	return o
}

func (o VpcBlockPublicAccessExclusionArrayOutput) ToVpcBlockPublicAccessExclusionArrayOutputWithContext(ctx context.Context) VpcBlockPublicAccessExclusionArrayOutput {
	return o
}

func (o VpcBlockPublicAccessExclusionArrayOutput) Index(i pulumi.IntInput) VpcBlockPublicAccessExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcBlockPublicAccessExclusion {
		return vs[0].([]*VpcBlockPublicAccessExclusion)[vs[1].(int)]
	}).(VpcBlockPublicAccessExclusionOutput)
}

type VpcBlockPublicAccessExclusionMapOutput struct{ *pulumi.OutputState }

func (VpcBlockPublicAccessExclusionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcBlockPublicAccessExclusion)(nil)).Elem()
}

func (o VpcBlockPublicAccessExclusionMapOutput) ToVpcBlockPublicAccessExclusionMapOutput() VpcBlockPublicAccessExclusionMapOutput {
	return o
}

func (o VpcBlockPublicAccessExclusionMapOutput) ToVpcBlockPublicAccessExclusionMapOutputWithContext(ctx context.Context) VpcBlockPublicAccessExclusionMapOutput {
	return o
}

func (o VpcBlockPublicAccessExclusionMapOutput) MapIndex(k pulumi.StringInput) VpcBlockPublicAccessExclusionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcBlockPublicAccessExclusion {
		return vs[0].(map[string]*VpcBlockPublicAccessExclusion)[vs[1].(string)]
	}).(VpcBlockPublicAccessExclusionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcBlockPublicAccessExclusionInput)(nil)).Elem(), &VpcBlockPublicAccessExclusion{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcBlockPublicAccessExclusionArrayInput)(nil)).Elem(), VpcBlockPublicAccessExclusionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcBlockPublicAccessExclusionMapInput)(nil)).Elem(), VpcBlockPublicAccessExclusionMap{})
	pulumi.RegisterOutputType(VpcBlockPublicAccessExclusionOutput{})
	pulumi.RegisterOutputType(VpcBlockPublicAccessExclusionArrayOutput{})
	pulumi.RegisterOutputType(VpcBlockPublicAccessExclusionMapOutput{})
}
