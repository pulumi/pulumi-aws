// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcEndpointSubnetAssociation struct {
	pulumi.CustomResourceState

	SubnetId      pulumi.StringOutput `pulumi:"subnetId"`
	VpcEndpointId pulumi.StringOutput `pulumi:"vpcEndpointId"`
}

// NewVpcEndpointSubnetAssociation registers a new resource with the given unique name, arguments, and options.
func NewVpcEndpointSubnetAssociation(ctx *pulumi.Context,
	name string, args *VpcEndpointSubnetAssociationArgs, opts ...pulumi.ResourceOption) (*VpcEndpointSubnetAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.VpcEndpointId == nil {
		return nil, errors.New("invalid value for required argument 'VpcEndpointId'")
	}
	var resource VpcEndpointSubnetAssociation
	err := ctx.RegisterResource("aws:ec2/vpcEndpointSubnetAssociation:VpcEndpointSubnetAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcEndpointSubnetAssociation gets an existing VpcEndpointSubnetAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcEndpointSubnetAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcEndpointSubnetAssociationState, opts ...pulumi.ResourceOption) (*VpcEndpointSubnetAssociation, error) {
	var resource VpcEndpointSubnetAssociation
	err := ctx.ReadResource("aws:ec2/vpcEndpointSubnetAssociation:VpcEndpointSubnetAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcEndpointSubnetAssociation resources.
type vpcEndpointSubnetAssociationState struct {
	SubnetId      *string `pulumi:"subnetId"`
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
}

type VpcEndpointSubnetAssociationState struct {
	SubnetId      pulumi.StringPtrInput
	VpcEndpointId pulumi.StringPtrInput
}

func (VpcEndpointSubnetAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointSubnetAssociationState)(nil)).Elem()
}

type vpcEndpointSubnetAssociationArgs struct {
	SubnetId      string `pulumi:"subnetId"`
	VpcEndpointId string `pulumi:"vpcEndpointId"`
}

// The set of arguments for constructing a VpcEndpointSubnetAssociation resource.
type VpcEndpointSubnetAssociationArgs struct {
	SubnetId      pulumi.StringInput
	VpcEndpointId pulumi.StringInput
}

func (VpcEndpointSubnetAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointSubnetAssociationArgs)(nil)).Elem()
}

type VpcEndpointSubnetAssociationInput interface {
	pulumi.Input

	ToVpcEndpointSubnetAssociationOutput() VpcEndpointSubnetAssociationOutput
	ToVpcEndpointSubnetAssociationOutputWithContext(ctx context.Context) VpcEndpointSubnetAssociationOutput
}

func (*VpcEndpointSubnetAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpointSubnetAssociation)(nil)).Elem()
}

func (i *VpcEndpointSubnetAssociation) ToVpcEndpointSubnetAssociationOutput() VpcEndpointSubnetAssociationOutput {
	return i.ToVpcEndpointSubnetAssociationOutputWithContext(context.Background())
}

func (i *VpcEndpointSubnetAssociation) ToVpcEndpointSubnetAssociationOutputWithContext(ctx context.Context) VpcEndpointSubnetAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointSubnetAssociationOutput)
}

// VpcEndpointSubnetAssociationArrayInput is an input type that accepts VpcEndpointSubnetAssociationArray and VpcEndpointSubnetAssociationArrayOutput values.
// You can construct a concrete instance of `VpcEndpointSubnetAssociationArrayInput` via:
//
//	VpcEndpointSubnetAssociationArray{ VpcEndpointSubnetAssociationArgs{...} }
type VpcEndpointSubnetAssociationArrayInput interface {
	pulumi.Input

	ToVpcEndpointSubnetAssociationArrayOutput() VpcEndpointSubnetAssociationArrayOutput
	ToVpcEndpointSubnetAssociationArrayOutputWithContext(context.Context) VpcEndpointSubnetAssociationArrayOutput
}

type VpcEndpointSubnetAssociationArray []VpcEndpointSubnetAssociationInput

func (VpcEndpointSubnetAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpointSubnetAssociation)(nil)).Elem()
}

func (i VpcEndpointSubnetAssociationArray) ToVpcEndpointSubnetAssociationArrayOutput() VpcEndpointSubnetAssociationArrayOutput {
	return i.ToVpcEndpointSubnetAssociationArrayOutputWithContext(context.Background())
}

func (i VpcEndpointSubnetAssociationArray) ToVpcEndpointSubnetAssociationArrayOutputWithContext(ctx context.Context) VpcEndpointSubnetAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointSubnetAssociationArrayOutput)
}

// VpcEndpointSubnetAssociationMapInput is an input type that accepts VpcEndpointSubnetAssociationMap and VpcEndpointSubnetAssociationMapOutput values.
// You can construct a concrete instance of `VpcEndpointSubnetAssociationMapInput` via:
//
//	VpcEndpointSubnetAssociationMap{ "key": VpcEndpointSubnetAssociationArgs{...} }
type VpcEndpointSubnetAssociationMapInput interface {
	pulumi.Input

	ToVpcEndpointSubnetAssociationMapOutput() VpcEndpointSubnetAssociationMapOutput
	ToVpcEndpointSubnetAssociationMapOutputWithContext(context.Context) VpcEndpointSubnetAssociationMapOutput
}

type VpcEndpointSubnetAssociationMap map[string]VpcEndpointSubnetAssociationInput

func (VpcEndpointSubnetAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpointSubnetAssociation)(nil)).Elem()
}

func (i VpcEndpointSubnetAssociationMap) ToVpcEndpointSubnetAssociationMapOutput() VpcEndpointSubnetAssociationMapOutput {
	return i.ToVpcEndpointSubnetAssociationMapOutputWithContext(context.Background())
}

func (i VpcEndpointSubnetAssociationMap) ToVpcEndpointSubnetAssociationMapOutputWithContext(ctx context.Context) VpcEndpointSubnetAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointSubnetAssociationMapOutput)
}

type VpcEndpointSubnetAssociationOutput struct{ *pulumi.OutputState }

func (VpcEndpointSubnetAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpointSubnetAssociation)(nil)).Elem()
}

func (o VpcEndpointSubnetAssociationOutput) ToVpcEndpointSubnetAssociationOutput() VpcEndpointSubnetAssociationOutput {
	return o
}

func (o VpcEndpointSubnetAssociationOutput) ToVpcEndpointSubnetAssociationOutputWithContext(ctx context.Context) VpcEndpointSubnetAssociationOutput {
	return o
}

func (o VpcEndpointSubnetAssociationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpointSubnetAssociation) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o VpcEndpointSubnetAssociationOutput) VpcEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpointSubnetAssociation) pulumi.StringOutput { return v.VpcEndpointId }).(pulumi.StringOutput)
}

type VpcEndpointSubnetAssociationArrayOutput struct{ *pulumi.OutputState }

func (VpcEndpointSubnetAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpointSubnetAssociation)(nil)).Elem()
}

func (o VpcEndpointSubnetAssociationArrayOutput) ToVpcEndpointSubnetAssociationArrayOutput() VpcEndpointSubnetAssociationArrayOutput {
	return o
}

func (o VpcEndpointSubnetAssociationArrayOutput) ToVpcEndpointSubnetAssociationArrayOutputWithContext(ctx context.Context) VpcEndpointSubnetAssociationArrayOutput {
	return o
}

func (o VpcEndpointSubnetAssociationArrayOutput) Index(i pulumi.IntInput) VpcEndpointSubnetAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcEndpointSubnetAssociation {
		return vs[0].([]*VpcEndpointSubnetAssociation)[vs[1].(int)]
	}).(VpcEndpointSubnetAssociationOutput)
}

type VpcEndpointSubnetAssociationMapOutput struct{ *pulumi.OutputState }

func (VpcEndpointSubnetAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpointSubnetAssociation)(nil)).Elem()
}

func (o VpcEndpointSubnetAssociationMapOutput) ToVpcEndpointSubnetAssociationMapOutput() VpcEndpointSubnetAssociationMapOutput {
	return o
}

func (o VpcEndpointSubnetAssociationMapOutput) ToVpcEndpointSubnetAssociationMapOutputWithContext(ctx context.Context) VpcEndpointSubnetAssociationMapOutput {
	return o
}

func (o VpcEndpointSubnetAssociationMapOutput) MapIndex(k pulumi.StringInput) VpcEndpointSubnetAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcEndpointSubnetAssociation {
		return vs[0].(map[string]*VpcEndpointSubnetAssociation)[vs[1].(string)]
	}).(VpcEndpointSubnetAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointSubnetAssociationInput)(nil)).Elem(), &VpcEndpointSubnetAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointSubnetAssociationArrayInput)(nil)).Elem(), VpcEndpointSubnetAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointSubnetAssociationMapInput)(nil)).Elem(), VpcEndpointSubnetAssociationMap{})
	pulumi.RegisterOutputType(VpcEndpointSubnetAssociationOutput{})
	pulumi.RegisterOutputType(VpcEndpointSubnetAssociationArrayOutput{})
	pulumi.RegisterOutputType(VpcEndpointSubnetAssociationMapOutput{})
}
