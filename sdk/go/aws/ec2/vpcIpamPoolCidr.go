// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcIpamPoolCidr struct {
	pulumi.CustomResourceState

	Cidr                     pulumi.StringOutput                              `pulumi:"cidr"`
	CidrAuthorizationContext VpcIpamPoolCidrCidrAuthorizationContextPtrOutput `pulumi:"cidrAuthorizationContext"`
	IpamPoolId               pulumi.StringOutput                              `pulumi:"ipamPoolId"`
}

// NewVpcIpamPoolCidr registers a new resource with the given unique name, arguments, and options.
func NewVpcIpamPoolCidr(ctx *pulumi.Context,
	name string, args *VpcIpamPoolCidrArgs, opts ...pulumi.ResourceOption) (*VpcIpamPoolCidr, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpamPoolId == nil {
		return nil, errors.New("invalid value for required argument 'IpamPoolId'")
	}
	var resource VpcIpamPoolCidr
	err := ctx.RegisterResource("aws:ec2/vpcIpamPoolCidr:VpcIpamPoolCidr", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcIpamPoolCidr gets an existing VpcIpamPoolCidr resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcIpamPoolCidr(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcIpamPoolCidrState, opts ...pulumi.ResourceOption) (*VpcIpamPoolCidr, error) {
	var resource VpcIpamPoolCidr
	err := ctx.ReadResource("aws:ec2/vpcIpamPoolCidr:VpcIpamPoolCidr", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcIpamPoolCidr resources.
type vpcIpamPoolCidrState struct {
	Cidr                     *string                                  `pulumi:"cidr"`
	CidrAuthorizationContext *VpcIpamPoolCidrCidrAuthorizationContext `pulumi:"cidrAuthorizationContext"`
	IpamPoolId               *string                                  `pulumi:"ipamPoolId"`
}

type VpcIpamPoolCidrState struct {
	Cidr                     pulumi.StringPtrInput
	CidrAuthorizationContext VpcIpamPoolCidrCidrAuthorizationContextPtrInput
	IpamPoolId               pulumi.StringPtrInput
}

func (VpcIpamPoolCidrState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcIpamPoolCidrState)(nil)).Elem()
}

type vpcIpamPoolCidrArgs struct {
	Cidr                     *string                                  `pulumi:"cidr"`
	CidrAuthorizationContext *VpcIpamPoolCidrCidrAuthorizationContext `pulumi:"cidrAuthorizationContext"`
	IpamPoolId               string                                   `pulumi:"ipamPoolId"`
}

// The set of arguments for constructing a VpcIpamPoolCidr resource.
type VpcIpamPoolCidrArgs struct {
	Cidr                     pulumi.StringPtrInput
	CidrAuthorizationContext VpcIpamPoolCidrCidrAuthorizationContextPtrInput
	IpamPoolId               pulumi.StringInput
}

func (VpcIpamPoolCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcIpamPoolCidrArgs)(nil)).Elem()
}

type VpcIpamPoolCidrInput interface {
	pulumi.Input

	ToVpcIpamPoolCidrOutput() VpcIpamPoolCidrOutput
	ToVpcIpamPoolCidrOutputWithContext(ctx context.Context) VpcIpamPoolCidrOutput
}

func (*VpcIpamPoolCidr) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcIpamPoolCidr)(nil)).Elem()
}

func (i *VpcIpamPoolCidr) ToVpcIpamPoolCidrOutput() VpcIpamPoolCidrOutput {
	return i.ToVpcIpamPoolCidrOutputWithContext(context.Background())
}

func (i *VpcIpamPoolCidr) ToVpcIpamPoolCidrOutputWithContext(ctx context.Context) VpcIpamPoolCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIpamPoolCidrOutput)
}

// VpcIpamPoolCidrArrayInput is an input type that accepts VpcIpamPoolCidrArray and VpcIpamPoolCidrArrayOutput values.
// You can construct a concrete instance of `VpcIpamPoolCidrArrayInput` via:
//
//	VpcIpamPoolCidrArray{ VpcIpamPoolCidrArgs{...} }
type VpcIpamPoolCidrArrayInput interface {
	pulumi.Input

	ToVpcIpamPoolCidrArrayOutput() VpcIpamPoolCidrArrayOutput
	ToVpcIpamPoolCidrArrayOutputWithContext(context.Context) VpcIpamPoolCidrArrayOutput
}

type VpcIpamPoolCidrArray []VpcIpamPoolCidrInput

func (VpcIpamPoolCidrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcIpamPoolCidr)(nil)).Elem()
}

func (i VpcIpamPoolCidrArray) ToVpcIpamPoolCidrArrayOutput() VpcIpamPoolCidrArrayOutput {
	return i.ToVpcIpamPoolCidrArrayOutputWithContext(context.Background())
}

func (i VpcIpamPoolCidrArray) ToVpcIpamPoolCidrArrayOutputWithContext(ctx context.Context) VpcIpamPoolCidrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIpamPoolCidrArrayOutput)
}

// VpcIpamPoolCidrMapInput is an input type that accepts VpcIpamPoolCidrMap and VpcIpamPoolCidrMapOutput values.
// You can construct a concrete instance of `VpcIpamPoolCidrMapInput` via:
//
//	VpcIpamPoolCidrMap{ "key": VpcIpamPoolCidrArgs{...} }
type VpcIpamPoolCidrMapInput interface {
	pulumi.Input

	ToVpcIpamPoolCidrMapOutput() VpcIpamPoolCidrMapOutput
	ToVpcIpamPoolCidrMapOutputWithContext(context.Context) VpcIpamPoolCidrMapOutput
}

type VpcIpamPoolCidrMap map[string]VpcIpamPoolCidrInput

func (VpcIpamPoolCidrMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcIpamPoolCidr)(nil)).Elem()
}

func (i VpcIpamPoolCidrMap) ToVpcIpamPoolCidrMapOutput() VpcIpamPoolCidrMapOutput {
	return i.ToVpcIpamPoolCidrMapOutputWithContext(context.Background())
}

func (i VpcIpamPoolCidrMap) ToVpcIpamPoolCidrMapOutputWithContext(ctx context.Context) VpcIpamPoolCidrMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIpamPoolCidrMapOutput)
}

type VpcIpamPoolCidrOutput struct{ *pulumi.OutputState }

func (VpcIpamPoolCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcIpamPoolCidr)(nil)).Elem()
}

func (o VpcIpamPoolCidrOutput) ToVpcIpamPoolCidrOutput() VpcIpamPoolCidrOutput {
	return o
}

func (o VpcIpamPoolCidrOutput) ToVpcIpamPoolCidrOutputWithContext(ctx context.Context) VpcIpamPoolCidrOutput {
	return o
}

func (o VpcIpamPoolCidrOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIpamPoolCidr) pulumi.StringOutput { return v.Cidr }).(pulumi.StringOutput)
}

func (o VpcIpamPoolCidrOutput) CidrAuthorizationContext() VpcIpamPoolCidrCidrAuthorizationContextPtrOutput {
	return o.ApplyT(func(v *VpcIpamPoolCidr) VpcIpamPoolCidrCidrAuthorizationContextPtrOutput {
		return v.CidrAuthorizationContext
	}).(VpcIpamPoolCidrCidrAuthorizationContextPtrOutput)
}

func (o VpcIpamPoolCidrOutput) IpamPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIpamPoolCidr) pulumi.StringOutput { return v.IpamPoolId }).(pulumi.StringOutput)
}

type VpcIpamPoolCidrArrayOutput struct{ *pulumi.OutputState }

func (VpcIpamPoolCidrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcIpamPoolCidr)(nil)).Elem()
}

func (o VpcIpamPoolCidrArrayOutput) ToVpcIpamPoolCidrArrayOutput() VpcIpamPoolCidrArrayOutput {
	return o
}

func (o VpcIpamPoolCidrArrayOutput) ToVpcIpamPoolCidrArrayOutputWithContext(ctx context.Context) VpcIpamPoolCidrArrayOutput {
	return o
}

func (o VpcIpamPoolCidrArrayOutput) Index(i pulumi.IntInput) VpcIpamPoolCidrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcIpamPoolCidr {
		return vs[0].([]*VpcIpamPoolCidr)[vs[1].(int)]
	}).(VpcIpamPoolCidrOutput)
}

type VpcIpamPoolCidrMapOutput struct{ *pulumi.OutputState }

func (VpcIpamPoolCidrMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcIpamPoolCidr)(nil)).Elem()
}

func (o VpcIpamPoolCidrMapOutput) ToVpcIpamPoolCidrMapOutput() VpcIpamPoolCidrMapOutput {
	return o
}

func (o VpcIpamPoolCidrMapOutput) ToVpcIpamPoolCidrMapOutputWithContext(ctx context.Context) VpcIpamPoolCidrMapOutput {
	return o
}

func (o VpcIpamPoolCidrMapOutput) MapIndex(k pulumi.StringInput) VpcIpamPoolCidrOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcIpamPoolCidr {
		return vs[0].(map[string]*VpcIpamPoolCidr)[vs[1].(string)]
	}).(VpcIpamPoolCidrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcIpamPoolCidrInput)(nil)).Elem(), &VpcIpamPoolCidr{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcIpamPoolCidrArrayInput)(nil)).Elem(), VpcIpamPoolCidrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcIpamPoolCidrMapInput)(nil)).Elem(), VpcIpamPoolCidrMap{})
	pulumi.RegisterOutputType(VpcIpamPoolCidrOutput{})
	pulumi.RegisterOutputType(VpcIpamPoolCidrArrayOutput{})
	pulumi.RegisterOutputType(VpcIpamPoolCidrMapOutput{})
}
