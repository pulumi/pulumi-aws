// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can be useful for getting back a list of route table ids to be referenced elsewhere.
//
// ## Example Usage
//
// The following adds a route for a particular cidr block to every (private
// kops) route table in a specified vpc to use a particular vpc peering
// connection.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func notImplemented(message string) pulumi.AnyOutput {
//		panic(message)
//	}
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			rts, err := ec2.GetRouteTables(ctx, &ec2.GetRouteTablesArgs{
//				VpcId: pulumi.StringRef(vpcId),
//				Filters: []ec2.GetRouteTablesFilter{
//					{
//						Name: "tag:kubernetes.io/kops/role",
//						Values: []string{
//							"private*",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			var r []*ec2.Route
//			for index := 0; index < len(rts.Ids); index++ {
//				key0 := index
//				val0 := index
//				__res, err := ec2.NewRoute(ctx, fmt.Sprintf("r-%v", key0), &ec2.RouteArgs{
//					RouteTableId:           notImplemented("tolist(data.aws_route_tables.rts.ids)")[val0],
//					DestinationCidrBlock:   pulumi.String("10.0.0.0/22"),
//					VpcPeeringConnectionId: pulumi.String("pcx-0e9a7a9ecd137dc54"),
//				})
//				if err != nil {
//					return err
//				}
//				r = append(r, __res)
//			}
//			return nil
//		})
//	}
//
// ```
func GetRouteTables(ctx *pulumi.Context, args *GetRouteTablesArgs, opts ...pulumi.InvokeOption) (*GetRouteTablesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRouteTablesResult
	err := ctx.Invoke("aws:ec2/getRouteTables:getRouteTables", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouteTables.
type GetRouteTablesArgs struct {
	// Custom filter block as described below.
	Filters []GetRouteTablesFilter `pulumi:"filters"`
	// Map of tags, each pair of which must exactly match
	// a pair on the desired route tables.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Tags map[string]string `pulumi:"tags"`
	// VPC ID that you want to filter from.
	VpcId *string `pulumi:"vpcId"`
}

// A collection of values returned by getRouteTables.
type GetRouteTablesResult struct {
	Filters []GetRouteTablesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of all the route table ids found.
	Ids   []string          `pulumi:"ids"`
	Tags  map[string]string `pulumi:"tags"`
	VpcId *string           `pulumi:"vpcId"`
}

func GetRouteTablesOutput(ctx *pulumi.Context, args GetRouteTablesOutputArgs, opts ...pulumi.InvokeOption) GetRouteTablesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRouteTablesResult, error) {
			args := v.(GetRouteTablesArgs)
			r, err := GetRouteTables(ctx, &args, opts...)
			var s GetRouteTablesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRouteTablesResultOutput)
}

// A collection of arguments for invoking getRouteTables.
type GetRouteTablesOutputArgs struct {
	// Custom filter block as described below.
	Filters GetRouteTablesFilterArrayInput `pulumi:"filters"`
	// Map of tags, each pair of which must exactly match
	// a pair on the desired route tables.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// VPC ID that you want to filter from.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetRouteTablesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesArgs)(nil)).Elem()
}

// A collection of values returned by getRouteTables.
type GetRouteTablesResultOutput struct{ *pulumi.OutputState }

func (GetRouteTablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesResult)(nil)).Elem()
}

func (o GetRouteTablesResultOutput) ToGetRouteTablesResultOutput() GetRouteTablesResultOutput {
	return o
}

func (o GetRouteTablesResultOutput) ToGetRouteTablesResultOutputWithContext(ctx context.Context) GetRouteTablesResultOutput {
	return o
}

func (o GetRouteTablesResultOutput) Filters() GetRouteTablesFilterArrayOutput {
	return o.ApplyT(func(v GetRouteTablesResult) []GetRouteTablesFilter { return v.Filters }).(GetRouteTablesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRouteTablesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of all the route table ids found.
func (o GetRouteTablesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTablesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetRouteTablesResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRouteTablesResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GetRouteTablesResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRouteTablesResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRouteTablesResultOutput{})
}
