// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS VPC NAT Gateway EIP Association.
//
// !> **WARNING:** You should not use the `ec2.NatGatewayEipAssociation` resource in conjunction with an `ec2.NatGateway` resource that has `secondaryAllocationIds` configured. Doing so may cause perpetual differences, and result in associations being overwritten.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ec2.NewNatGatewayEipAssociation(ctx, "example", &ec2.NatGatewayEipAssociationArgs{
//				AllocationId: pulumi.Any(exampleAwsEip.Id),
//				NatGatewayId: pulumi.Any(exampleAwsNatGateway.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import VPC NAT Gateway EIP Association using the `nat_gateway_id,allocation_id`. For example:
//
// ```sh
// $ pulumi import aws:ec2/natGatewayEipAssociation:NatGatewayEipAssociation example nat-1234567890abcdef1,eipalloc-1234567890abcdef1
// ```
type NatGatewayEipAssociation struct {
	pulumi.CustomResourceState

	// The ID of the Elastic IP Allocation to associate with the NAT Gateway.
	AllocationId  pulumi.StringOutput `pulumi:"allocationId"`
	AssociationId pulumi.StringOutput `pulumi:"associationId"`
	// The ID of the NAT Gateway to associate the Elastic IP Allocation to.
	//
	// The following arguments are optional:
	NatGatewayId pulumi.StringOutput `pulumi:"natGatewayId"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   pulumi.StringOutput                       `pulumi:"region"`
	Timeouts NatGatewayEipAssociationTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewNatGatewayEipAssociation registers a new resource with the given unique name, arguments, and options.
func NewNatGatewayEipAssociation(ctx *pulumi.Context,
	name string, args *NatGatewayEipAssociationArgs, opts ...pulumi.ResourceOption) (*NatGatewayEipAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AllocationId == nil {
		return nil, errors.New("invalid value for required argument 'AllocationId'")
	}
	if args.NatGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'NatGatewayId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NatGatewayEipAssociation
	err := ctx.RegisterResource("aws:ec2/natGatewayEipAssociation:NatGatewayEipAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNatGatewayEipAssociation gets an existing NatGatewayEipAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNatGatewayEipAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NatGatewayEipAssociationState, opts ...pulumi.ResourceOption) (*NatGatewayEipAssociation, error) {
	var resource NatGatewayEipAssociation
	err := ctx.ReadResource("aws:ec2/natGatewayEipAssociation:NatGatewayEipAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NatGatewayEipAssociation resources.
type natGatewayEipAssociationState struct {
	// The ID of the Elastic IP Allocation to associate with the NAT Gateway.
	AllocationId  *string `pulumi:"allocationId"`
	AssociationId *string `pulumi:"associationId"`
	// The ID of the NAT Gateway to associate the Elastic IP Allocation to.
	//
	// The following arguments are optional:
	NatGatewayId *string `pulumi:"natGatewayId"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   *string                           `pulumi:"region"`
	Timeouts *NatGatewayEipAssociationTimeouts `pulumi:"timeouts"`
}

type NatGatewayEipAssociationState struct {
	// The ID of the Elastic IP Allocation to associate with the NAT Gateway.
	AllocationId  pulumi.StringPtrInput
	AssociationId pulumi.StringPtrInput
	// The ID of the NAT Gateway to associate the Elastic IP Allocation to.
	//
	// The following arguments are optional:
	NatGatewayId pulumi.StringPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   pulumi.StringPtrInput
	Timeouts NatGatewayEipAssociationTimeoutsPtrInput
}

func (NatGatewayEipAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*natGatewayEipAssociationState)(nil)).Elem()
}

type natGatewayEipAssociationArgs struct {
	// The ID of the Elastic IP Allocation to associate with the NAT Gateway.
	AllocationId string `pulumi:"allocationId"`
	// The ID of the NAT Gateway to associate the Elastic IP Allocation to.
	//
	// The following arguments are optional:
	NatGatewayId string `pulumi:"natGatewayId"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   *string                           `pulumi:"region"`
	Timeouts *NatGatewayEipAssociationTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a NatGatewayEipAssociation resource.
type NatGatewayEipAssociationArgs struct {
	// The ID of the Elastic IP Allocation to associate with the NAT Gateway.
	AllocationId pulumi.StringInput
	// The ID of the NAT Gateway to associate the Elastic IP Allocation to.
	//
	// The following arguments are optional:
	NatGatewayId pulumi.StringInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   pulumi.StringPtrInput
	Timeouts NatGatewayEipAssociationTimeoutsPtrInput
}

func (NatGatewayEipAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*natGatewayEipAssociationArgs)(nil)).Elem()
}

type NatGatewayEipAssociationInput interface {
	pulumi.Input

	ToNatGatewayEipAssociationOutput() NatGatewayEipAssociationOutput
	ToNatGatewayEipAssociationOutputWithContext(ctx context.Context) NatGatewayEipAssociationOutput
}

func (*NatGatewayEipAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewayEipAssociation)(nil)).Elem()
}

func (i *NatGatewayEipAssociation) ToNatGatewayEipAssociationOutput() NatGatewayEipAssociationOutput {
	return i.ToNatGatewayEipAssociationOutputWithContext(context.Background())
}

func (i *NatGatewayEipAssociation) ToNatGatewayEipAssociationOutputWithContext(ctx context.Context) NatGatewayEipAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewayEipAssociationOutput)
}

// NatGatewayEipAssociationArrayInput is an input type that accepts NatGatewayEipAssociationArray and NatGatewayEipAssociationArrayOutput values.
// You can construct a concrete instance of `NatGatewayEipAssociationArrayInput` via:
//
//	NatGatewayEipAssociationArray{ NatGatewayEipAssociationArgs{...} }
type NatGatewayEipAssociationArrayInput interface {
	pulumi.Input

	ToNatGatewayEipAssociationArrayOutput() NatGatewayEipAssociationArrayOutput
	ToNatGatewayEipAssociationArrayOutputWithContext(context.Context) NatGatewayEipAssociationArrayOutput
}

type NatGatewayEipAssociationArray []NatGatewayEipAssociationInput

func (NatGatewayEipAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NatGatewayEipAssociation)(nil)).Elem()
}

func (i NatGatewayEipAssociationArray) ToNatGatewayEipAssociationArrayOutput() NatGatewayEipAssociationArrayOutput {
	return i.ToNatGatewayEipAssociationArrayOutputWithContext(context.Background())
}

func (i NatGatewayEipAssociationArray) ToNatGatewayEipAssociationArrayOutputWithContext(ctx context.Context) NatGatewayEipAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewayEipAssociationArrayOutput)
}

// NatGatewayEipAssociationMapInput is an input type that accepts NatGatewayEipAssociationMap and NatGatewayEipAssociationMapOutput values.
// You can construct a concrete instance of `NatGatewayEipAssociationMapInput` via:
//
//	NatGatewayEipAssociationMap{ "key": NatGatewayEipAssociationArgs{...} }
type NatGatewayEipAssociationMapInput interface {
	pulumi.Input

	ToNatGatewayEipAssociationMapOutput() NatGatewayEipAssociationMapOutput
	ToNatGatewayEipAssociationMapOutputWithContext(context.Context) NatGatewayEipAssociationMapOutput
}

type NatGatewayEipAssociationMap map[string]NatGatewayEipAssociationInput

func (NatGatewayEipAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NatGatewayEipAssociation)(nil)).Elem()
}

func (i NatGatewayEipAssociationMap) ToNatGatewayEipAssociationMapOutput() NatGatewayEipAssociationMapOutput {
	return i.ToNatGatewayEipAssociationMapOutputWithContext(context.Background())
}

func (i NatGatewayEipAssociationMap) ToNatGatewayEipAssociationMapOutputWithContext(ctx context.Context) NatGatewayEipAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewayEipAssociationMapOutput)
}

type NatGatewayEipAssociationOutput struct{ *pulumi.OutputState }

func (NatGatewayEipAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewayEipAssociation)(nil)).Elem()
}

func (o NatGatewayEipAssociationOutput) ToNatGatewayEipAssociationOutput() NatGatewayEipAssociationOutput {
	return o
}

func (o NatGatewayEipAssociationOutput) ToNatGatewayEipAssociationOutputWithContext(ctx context.Context) NatGatewayEipAssociationOutput {
	return o
}

// The ID of the Elastic IP Allocation to associate with the NAT Gateway.
func (o NatGatewayEipAssociationOutput) AllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *NatGatewayEipAssociation) pulumi.StringOutput { return v.AllocationId }).(pulumi.StringOutput)
}

func (o NatGatewayEipAssociationOutput) AssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v *NatGatewayEipAssociation) pulumi.StringOutput { return v.AssociationId }).(pulumi.StringOutput)
}

// The ID of the NAT Gateway to associate the Elastic IP Allocation to.
//
// The following arguments are optional:
func (o NatGatewayEipAssociationOutput) NatGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *NatGatewayEipAssociation) pulumi.StringOutput { return v.NatGatewayId }).(pulumi.StringOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o NatGatewayEipAssociationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *NatGatewayEipAssociation) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o NatGatewayEipAssociationOutput) Timeouts() NatGatewayEipAssociationTimeoutsPtrOutput {
	return o.ApplyT(func(v *NatGatewayEipAssociation) NatGatewayEipAssociationTimeoutsPtrOutput { return v.Timeouts }).(NatGatewayEipAssociationTimeoutsPtrOutput)
}

type NatGatewayEipAssociationArrayOutput struct{ *pulumi.OutputState }

func (NatGatewayEipAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NatGatewayEipAssociation)(nil)).Elem()
}

func (o NatGatewayEipAssociationArrayOutput) ToNatGatewayEipAssociationArrayOutput() NatGatewayEipAssociationArrayOutput {
	return o
}

func (o NatGatewayEipAssociationArrayOutput) ToNatGatewayEipAssociationArrayOutputWithContext(ctx context.Context) NatGatewayEipAssociationArrayOutput {
	return o
}

func (o NatGatewayEipAssociationArrayOutput) Index(i pulumi.IntInput) NatGatewayEipAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NatGatewayEipAssociation {
		return vs[0].([]*NatGatewayEipAssociation)[vs[1].(int)]
	}).(NatGatewayEipAssociationOutput)
}

type NatGatewayEipAssociationMapOutput struct{ *pulumi.OutputState }

func (NatGatewayEipAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NatGatewayEipAssociation)(nil)).Elem()
}

func (o NatGatewayEipAssociationMapOutput) ToNatGatewayEipAssociationMapOutput() NatGatewayEipAssociationMapOutput {
	return o
}

func (o NatGatewayEipAssociationMapOutput) ToNatGatewayEipAssociationMapOutputWithContext(ctx context.Context) NatGatewayEipAssociationMapOutput {
	return o
}

func (o NatGatewayEipAssociationMapOutput) MapIndex(k pulumi.StringInput) NatGatewayEipAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NatGatewayEipAssociation {
		return vs[0].(map[string]*NatGatewayEipAssociation)[vs[1].(string)]
	}).(NatGatewayEipAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NatGatewayEipAssociationInput)(nil)).Elem(), &NatGatewayEipAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatGatewayEipAssociationArrayInput)(nil)).Elem(), NatGatewayEipAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatGatewayEipAssociationMapInput)(nil)).Elem(), NatGatewayEipAssociationMap{})
	pulumi.RegisterOutputType(NatGatewayEipAssociationOutput{})
	pulumi.RegisterOutputType(NatGatewayEipAssociationArrayOutput{})
	pulumi.RegisterOutputType(NatGatewayEipAssociationMapOutput{})
}
