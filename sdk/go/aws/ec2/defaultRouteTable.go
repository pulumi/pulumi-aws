// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DefaultRouteTable struct {
	pulumi.CustomResourceState

	Arn                 pulumi.StringOutput               `pulumi:"arn"`
	DefaultRouteTableId pulumi.StringOutput               `pulumi:"defaultRouteTableId"`
	OwnerId             pulumi.StringOutput               `pulumi:"ownerId"`
	PropagatingVgws     pulumi.StringArrayOutput          `pulumi:"propagatingVgws"`
	Routes              DefaultRouteTableRouteArrayOutput `pulumi:"routes"`
	Tags                pulumi.StringMapOutput            `pulumi:"tags"`
	TagsAll             pulumi.StringMapOutput            `pulumi:"tagsAll"`
	VpcId               pulumi.StringOutput               `pulumi:"vpcId"`
}

// NewDefaultRouteTable registers a new resource with the given unique name, arguments, and options.
func NewDefaultRouteTable(ctx *pulumi.Context,
	name string, args *DefaultRouteTableArgs, opts ...pulumi.ResourceOption) (*DefaultRouteTable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultRouteTableId == nil {
		return nil, errors.New("invalid value for required argument 'DefaultRouteTableId'")
	}
	var resource DefaultRouteTable
	err := ctx.RegisterResource("aws:ec2/defaultRouteTable:DefaultRouteTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDefaultRouteTable gets an existing DefaultRouteTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDefaultRouteTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DefaultRouteTableState, opts ...pulumi.ResourceOption) (*DefaultRouteTable, error) {
	var resource DefaultRouteTable
	err := ctx.ReadResource("aws:ec2/defaultRouteTable:DefaultRouteTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DefaultRouteTable resources.
type defaultRouteTableState struct {
	Arn                 *string                  `pulumi:"arn"`
	DefaultRouteTableId *string                  `pulumi:"defaultRouteTableId"`
	OwnerId             *string                  `pulumi:"ownerId"`
	PropagatingVgws     []string                 `pulumi:"propagatingVgws"`
	Routes              []DefaultRouteTableRoute `pulumi:"routes"`
	Tags                map[string]string        `pulumi:"tags"`
	TagsAll             map[string]string        `pulumi:"tagsAll"`
	VpcId               *string                  `pulumi:"vpcId"`
}

type DefaultRouteTableState struct {
	Arn                 pulumi.StringPtrInput
	DefaultRouteTableId pulumi.StringPtrInput
	OwnerId             pulumi.StringPtrInput
	PropagatingVgws     pulumi.StringArrayInput
	Routes              DefaultRouteTableRouteArrayInput
	Tags                pulumi.StringMapInput
	TagsAll             pulumi.StringMapInput
	VpcId               pulumi.StringPtrInput
}

func (DefaultRouteTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultRouteTableState)(nil)).Elem()
}

type defaultRouteTableArgs struct {
	DefaultRouteTableId string                   `pulumi:"defaultRouteTableId"`
	PropagatingVgws     []string                 `pulumi:"propagatingVgws"`
	Routes              []DefaultRouteTableRoute `pulumi:"routes"`
	Tags                map[string]string        `pulumi:"tags"`
}

// The set of arguments for constructing a DefaultRouteTable resource.
type DefaultRouteTableArgs struct {
	DefaultRouteTableId pulumi.StringInput
	PropagatingVgws     pulumi.StringArrayInput
	Routes              DefaultRouteTableRouteArrayInput
	Tags                pulumi.StringMapInput
}

func (DefaultRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultRouteTableArgs)(nil)).Elem()
}

type DefaultRouteTableInput interface {
	pulumi.Input

	ToDefaultRouteTableOutput() DefaultRouteTableOutput
	ToDefaultRouteTableOutputWithContext(ctx context.Context) DefaultRouteTableOutput
}

func (*DefaultRouteTable) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultRouteTable)(nil)).Elem()
}

func (i *DefaultRouteTable) ToDefaultRouteTableOutput() DefaultRouteTableOutput {
	return i.ToDefaultRouteTableOutputWithContext(context.Background())
}

func (i *DefaultRouteTable) ToDefaultRouteTableOutputWithContext(ctx context.Context) DefaultRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRouteTableOutput)
}

// DefaultRouteTableArrayInput is an input type that accepts DefaultRouteTableArray and DefaultRouteTableArrayOutput values.
// You can construct a concrete instance of `DefaultRouteTableArrayInput` via:
//
//	DefaultRouteTableArray{ DefaultRouteTableArgs{...} }
type DefaultRouteTableArrayInput interface {
	pulumi.Input

	ToDefaultRouteTableArrayOutput() DefaultRouteTableArrayOutput
	ToDefaultRouteTableArrayOutputWithContext(context.Context) DefaultRouteTableArrayOutput
}

type DefaultRouteTableArray []DefaultRouteTableInput

func (DefaultRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DefaultRouteTable)(nil)).Elem()
}

func (i DefaultRouteTableArray) ToDefaultRouteTableArrayOutput() DefaultRouteTableArrayOutput {
	return i.ToDefaultRouteTableArrayOutputWithContext(context.Background())
}

func (i DefaultRouteTableArray) ToDefaultRouteTableArrayOutputWithContext(ctx context.Context) DefaultRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRouteTableArrayOutput)
}

// DefaultRouteTableMapInput is an input type that accepts DefaultRouteTableMap and DefaultRouteTableMapOutput values.
// You can construct a concrete instance of `DefaultRouteTableMapInput` via:
//
//	DefaultRouteTableMap{ "key": DefaultRouteTableArgs{...} }
type DefaultRouteTableMapInput interface {
	pulumi.Input

	ToDefaultRouteTableMapOutput() DefaultRouteTableMapOutput
	ToDefaultRouteTableMapOutputWithContext(context.Context) DefaultRouteTableMapOutput
}

type DefaultRouteTableMap map[string]DefaultRouteTableInput

func (DefaultRouteTableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DefaultRouteTable)(nil)).Elem()
}

func (i DefaultRouteTableMap) ToDefaultRouteTableMapOutput() DefaultRouteTableMapOutput {
	return i.ToDefaultRouteTableMapOutputWithContext(context.Background())
}

func (i DefaultRouteTableMap) ToDefaultRouteTableMapOutputWithContext(ctx context.Context) DefaultRouteTableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRouteTableMapOutput)
}

type DefaultRouteTableOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultRouteTable)(nil)).Elem()
}

func (o DefaultRouteTableOutput) ToDefaultRouteTableOutput() DefaultRouteTableOutput {
	return o
}

func (o DefaultRouteTableOutput) ToDefaultRouteTableOutputWithContext(ctx context.Context) DefaultRouteTableOutput {
	return o
}

func (o DefaultRouteTableOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultRouteTable) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o DefaultRouteTableOutput) DefaultRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultRouteTable) pulumi.StringOutput { return v.DefaultRouteTableId }).(pulumi.StringOutput)
}

func (o DefaultRouteTableOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultRouteTable) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

func (o DefaultRouteTableOutput) PropagatingVgws() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DefaultRouteTable) pulumi.StringArrayOutput { return v.PropagatingVgws }).(pulumi.StringArrayOutput)
}

func (o DefaultRouteTableOutput) Routes() DefaultRouteTableRouteArrayOutput {
	return o.ApplyT(func(v *DefaultRouteTable) DefaultRouteTableRouteArrayOutput { return v.Routes }).(DefaultRouteTableRouteArrayOutput)
}

func (o DefaultRouteTableOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DefaultRouteTable) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o DefaultRouteTableOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DefaultRouteTable) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o DefaultRouteTableOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultRouteTable) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type DefaultRouteTableArrayOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DefaultRouteTable)(nil)).Elem()
}

func (o DefaultRouteTableArrayOutput) ToDefaultRouteTableArrayOutput() DefaultRouteTableArrayOutput {
	return o
}

func (o DefaultRouteTableArrayOutput) ToDefaultRouteTableArrayOutputWithContext(ctx context.Context) DefaultRouteTableArrayOutput {
	return o
}

func (o DefaultRouteTableArrayOutput) Index(i pulumi.IntInput) DefaultRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DefaultRouteTable {
		return vs[0].([]*DefaultRouteTable)[vs[1].(int)]
	}).(DefaultRouteTableOutput)
}

type DefaultRouteTableMapOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DefaultRouteTable)(nil)).Elem()
}

func (o DefaultRouteTableMapOutput) ToDefaultRouteTableMapOutput() DefaultRouteTableMapOutput {
	return o
}

func (o DefaultRouteTableMapOutput) ToDefaultRouteTableMapOutputWithContext(ctx context.Context) DefaultRouteTableMapOutput {
	return o
}

func (o DefaultRouteTableMapOutput) MapIndex(k pulumi.StringInput) DefaultRouteTableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DefaultRouteTable {
		return vs[0].(map[string]*DefaultRouteTable)[vs[1].(string)]
	}).(DefaultRouteTableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultRouteTableInput)(nil)).Elem(), &DefaultRouteTable{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultRouteTableArrayInput)(nil)).Elem(), DefaultRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultRouteTableMapInput)(nil)).Elem(), DefaultRouteTableMap{})
	pulumi.RegisterOutputType(DefaultRouteTableOutput{})
	pulumi.RegisterOutputType(DefaultRouteTableArrayOutput{})
	pulumi.RegisterOutputType(DefaultRouteTableMapOutput{})
}
