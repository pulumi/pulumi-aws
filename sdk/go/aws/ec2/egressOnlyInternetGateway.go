// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// [IPv6 only] Creates an egress-only Internet gateway for your VPC.
// An egress-only Internet gateway is used to enable outbound communication
// over IPv6 from instances in your VPC to the Internet, and prevents hosts
// outside of your VPC from initiating an IPv6 connection with your instance.
type EgressOnlyInternetGateway struct {
	s *pulumi.ResourceState
}

// NewEgressOnlyInternetGateway registers a new resource with the given unique name, arguments, and options.
func NewEgressOnlyInternetGateway(ctx *pulumi.Context,
	name string, args *EgressOnlyInternetGatewayArgs, opts ...pulumi.ResourceOpt) (*EgressOnlyInternetGateway, error) {
	if args == nil || args.VpcId == nil {
		return nil, errors.New("missing required argument 'VpcId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["vpcId"] = nil
	} else {
		inputs["vpcId"] = args.VpcId
	}
	s, err := ctx.RegisterResource("aws:ec2/egressOnlyInternetGateway:EgressOnlyInternetGateway", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &EgressOnlyInternetGateway{s: s}, nil
}

// GetEgressOnlyInternetGateway gets an existing EgressOnlyInternetGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEgressOnlyInternetGateway(ctx *pulumi.Context,
	name string, id pulumi.ID, state *EgressOnlyInternetGatewayState, opts ...pulumi.ResourceOpt) (*EgressOnlyInternetGateway, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["vpcId"] = state.VpcId
	}
	s, err := ctx.ReadResource("aws:ec2/egressOnlyInternetGateway:EgressOnlyInternetGateway", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &EgressOnlyInternetGateway{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *EgressOnlyInternetGateway) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *EgressOnlyInternetGateway) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The VPC ID to create in.
func (r *EgressOnlyInternetGateway) VpcId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vpcId"])
}

// Input properties used for looking up and filtering EgressOnlyInternetGateway resources.
type EgressOnlyInternetGatewayState struct {
	// The VPC ID to create in.
	VpcId interface{}
}

// The set of arguments for constructing a EgressOnlyInternetGateway resource.
type EgressOnlyInternetGatewayArgs struct {
	// The VPC ID to create in.
	VpcId interface{}
}
