// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages an EC2 Carrier Gateway. See the AWS [documentation](https://docs.aws.amazon.com/vpc/latest/userguide/Carrier_Gateway.html) for more information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/ec2"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ec2.NewCarrierGateway(ctx, "example", &ec2.CarrierGatewayArgs{
// 			VpcId: pulumi.Any(aws_vpc.Example.Id),
// 			Tags: pulumi.StringMap{
// 				"Name": pulumi.String("example-carrier-gateway"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// `aws_ec2_carrier_gateway` can be imported using the carrier gateway's ID, e.g.
//
// ```sh
//  $ pulumi import aws:ec2/carrierGateway:CarrierGateway example cgw-12345
// ```
type CarrierGateway struct {
	pulumi.CustomResourceState

	// The ARN of the carrier gateway.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The AWS account ID of the owner of the carrier gateway.
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`
	// A map of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The ID of the VPC to associate with the carrier gateway.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewCarrierGateway registers a new resource with the given unique name, arguments, and options.
func NewCarrierGateway(ctx *pulumi.Context,
	name string, args *CarrierGatewayArgs, opts ...pulumi.ResourceOption) (*CarrierGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	var resource CarrierGateway
	err := ctx.RegisterResource("aws:ec2/carrierGateway:CarrierGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCarrierGateway gets an existing CarrierGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCarrierGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CarrierGatewayState, opts ...pulumi.ResourceOption) (*CarrierGateway, error) {
	var resource CarrierGateway
	err := ctx.ReadResource("aws:ec2/carrierGateway:CarrierGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CarrierGateway resources.
type carrierGatewayState struct {
	// The ARN of the carrier gateway.
	Arn *string `pulumi:"arn"`
	// The AWS account ID of the owner of the carrier gateway.
	OwnerId *string `pulumi:"ownerId"`
	// A map of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the VPC to associate with the carrier gateway.
	VpcId *string `pulumi:"vpcId"`
}

type CarrierGatewayState struct {
	// The ARN of the carrier gateway.
	Arn pulumi.StringPtrInput
	// The AWS account ID of the owner of the carrier gateway.
	OwnerId pulumi.StringPtrInput
	// A map of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// The ID of the VPC to associate with the carrier gateway.
	VpcId pulumi.StringPtrInput
}

func (CarrierGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*carrierGatewayState)(nil)).Elem()
}

type carrierGatewayArgs struct {
	// A map of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the VPC to associate with the carrier gateway.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a CarrierGateway resource.
type CarrierGatewayArgs struct {
	// A map of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// The ID of the VPC to associate with the carrier gateway.
	VpcId pulumi.StringInput
}

func (CarrierGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*carrierGatewayArgs)(nil)).Elem()
}

type CarrierGatewayInput interface {
	pulumi.Input

	ToCarrierGatewayOutput() CarrierGatewayOutput
	ToCarrierGatewayOutputWithContext(ctx context.Context) CarrierGatewayOutput
}

func (*CarrierGateway) ElementType() reflect.Type {
	return reflect.TypeOf((*CarrierGateway)(nil))
}

func (i *CarrierGateway) ToCarrierGatewayOutput() CarrierGatewayOutput {
	return i.ToCarrierGatewayOutputWithContext(context.Background())
}

func (i *CarrierGateway) ToCarrierGatewayOutputWithContext(ctx context.Context) CarrierGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CarrierGatewayOutput)
}

type CarrierGatewayOutput struct {
	*pulumi.OutputState
}

func (CarrierGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CarrierGateway)(nil))
}

func (o CarrierGatewayOutput) ToCarrierGatewayOutput() CarrierGatewayOutput {
	return o
}

func (o CarrierGatewayOutput) ToCarrierGatewayOutputWithContext(ctx context.Context) CarrierGatewayOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(CarrierGatewayOutput{})
}
