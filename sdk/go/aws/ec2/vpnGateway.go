// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a resource to create a VPC VPN Gateway.
type VpnGateway struct {
	s *pulumi.ResourceState
}

// NewVpnGateway registers a new resource with the given unique name, arguments, and options.
func NewVpnGateway(ctx *pulumi.Context,
	name string, args *VpnGatewayArgs, opts ...pulumi.ResourceOpt) (*VpnGateway, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["amazonSideAsn"] = nil
		inputs["availabilityZone"] = nil
		inputs["tags"] = nil
		inputs["vpcId"] = nil
	} else {
		inputs["amazonSideAsn"] = args.AmazonSideAsn
		inputs["availabilityZone"] = args.AvailabilityZone
		inputs["tags"] = args.Tags
		inputs["vpcId"] = args.VpcId
	}
	s, err := ctx.RegisterResource("aws:ec2/vpnGateway:VpnGateway", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VpnGateway{s: s}, nil
}

// GetVpnGateway gets an existing VpnGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnGateway(ctx *pulumi.Context,
	name string, id pulumi.ID, state *VpnGatewayState, opts ...pulumi.ResourceOpt) (*VpnGateway, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["amazonSideAsn"] = state.AmazonSideAsn
		inputs["availabilityZone"] = state.AvailabilityZone
		inputs["tags"] = state.Tags
		inputs["vpcId"] = state.VpcId
	}
	s, err := ctx.ReadResource("aws:ec2/vpnGateway:VpnGateway", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VpnGateway{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *VpnGateway) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *VpnGateway) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The Autonomous System Number (ASN) for the Amazon side of the gateway. If you don't specify an ASN, the virtual private gateway is created with the default ASN.
func (r *VpnGateway) AmazonSideAsn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["amazonSideAsn"])
}

// The Availability Zone for the virtual private gateway.
func (r *VpnGateway) AvailabilityZone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["availabilityZone"])
}

// A mapping of tags to assign to the resource.
func (r *VpnGateway) Tags() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["tags"])
}

// The VPC ID to create in.
func (r *VpnGateway) VpcId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vpcId"])
}

// Input properties used for looking up and filtering VpnGateway resources.
type VpnGatewayState struct {
	// The Autonomous System Number (ASN) for the Amazon side of the gateway. If you don't specify an ASN, the virtual private gateway is created with the default ASN.
	AmazonSideAsn interface{}
	// The Availability Zone for the virtual private gateway.
	AvailabilityZone interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// The VPC ID to create in.
	VpcId interface{}
}

// The set of arguments for constructing a VpnGateway resource.
type VpnGatewayArgs struct {
	// The Autonomous System Number (ASN) for the Amazon side of the gateway. If you don't specify an ASN, the virtual private gateway is created with the default ASN.
	AmazonSideAsn interface{}
	// The Availability Zone for the virtual private gateway.
	AvailabilityZone interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// The VPC ID to create in.
	VpcId interface{}
}
