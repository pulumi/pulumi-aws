// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpnGateway struct {
	pulumi.CustomResourceState

	AmazonSideAsn    pulumi.StringOutput    `pulumi:"amazonSideAsn"`
	Arn              pulumi.StringOutput    `pulumi:"arn"`
	AvailabilityZone pulumi.StringPtrOutput `pulumi:"availabilityZone"`
	Tags             pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll          pulumi.StringMapOutput `pulumi:"tagsAll"`
	VpcId            pulumi.StringOutput    `pulumi:"vpcId"`
}

// NewVpnGateway registers a new resource with the given unique name, arguments, and options.
func NewVpnGateway(ctx *pulumi.Context,
	name string, args *VpnGatewayArgs, opts ...pulumi.ResourceOption) (*VpnGateway, error) {
	if args == nil {
		args = &VpnGatewayArgs{}
	}

	var resource VpnGateway
	err := ctx.RegisterResource("aws:ec2/vpnGateway:VpnGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnGateway gets an existing VpnGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnGatewayState, opts ...pulumi.ResourceOption) (*VpnGateway, error) {
	var resource VpnGateway
	err := ctx.ReadResource("aws:ec2/vpnGateway:VpnGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnGateway resources.
type vpnGatewayState struct {
	AmazonSideAsn    *string           `pulumi:"amazonSideAsn"`
	Arn              *string           `pulumi:"arn"`
	AvailabilityZone *string           `pulumi:"availabilityZone"`
	Tags             map[string]string `pulumi:"tags"`
	TagsAll          map[string]string `pulumi:"tagsAll"`
	VpcId            *string           `pulumi:"vpcId"`
}

type VpnGatewayState struct {
	AmazonSideAsn    pulumi.StringPtrInput
	Arn              pulumi.StringPtrInput
	AvailabilityZone pulumi.StringPtrInput
	Tags             pulumi.StringMapInput
	TagsAll          pulumi.StringMapInput
	VpcId            pulumi.StringPtrInput
}

func (VpnGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnGatewayState)(nil)).Elem()
}

type vpnGatewayArgs struct {
	AmazonSideAsn    *string           `pulumi:"amazonSideAsn"`
	AvailabilityZone *string           `pulumi:"availabilityZone"`
	Tags             map[string]string `pulumi:"tags"`
	VpcId            *string           `pulumi:"vpcId"`
}

// The set of arguments for constructing a VpnGateway resource.
type VpnGatewayArgs struct {
	AmazonSideAsn    pulumi.StringPtrInput
	AvailabilityZone pulumi.StringPtrInput
	Tags             pulumi.StringMapInput
	VpcId            pulumi.StringPtrInput
}

func (VpnGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnGatewayArgs)(nil)).Elem()
}

type VpnGatewayInput interface {
	pulumi.Input

	ToVpnGatewayOutput() VpnGatewayOutput
	ToVpnGatewayOutputWithContext(ctx context.Context) VpnGatewayOutput
}

func (*VpnGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGateway)(nil)).Elem()
}

func (i *VpnGateway) ToVpnGatewayOutput() VpnGatewayOutput {
	return i.ToVpnGatewayOutputWithContext(context.Background())
}

func (i *VpnGateway) ToVpnGatewayOutputWithContext(ctx context.Context) VpnGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayOutput)
}

// VpnGatewayArrayInput is an input type that accepts VpnGatewayArray and VpnGatewayArrayOutput values.
// You can construct a concrete instance of `VpnGatewayArrayInput` via:
//
//	VpnGatewayArray{ VpnGatewayArgs{...} }
type VpnGatewayArrayInput interface {
	pulumi.Input

	ToVpnGatewayArrayOutput() VpnGatewayArrayOutput
	ToVpnGatewayArrayOutputWithContext(context.Context) VpnGatewayArrayOutput
}

type VpnGatewayArray []VpnGatewayInput

func (VpnGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnGateway)(nil)).Elem()
}

func (i VpnGatewayArray) ToVpnGatewayArrayOutput() VpnGatewayArrayOutput {
	return i.ToVpnGatewayArrayOutputWithContext(context.Background())
}

func (i VpnGatewayArray) ToVpnGatewayArrayOutputWithContext(ctx context.Context) VpnGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayArrayOutput)
}

// VpnGatewayMapInput is an input type that accepts VpnGatewayMap and VpnGatewayMapOutput values.
// You can construct a concrete instance of `VpnGatewayMapInput` via:
//
//	VpnGatewayMap{ "key": VpnGatewayArgs{...} }
type VpnGatewayMapInput interface {
	pulumi.Input

	ToVpnGatewayMapOutput() VpnGatewayMapOutput
	ToVpnGatewayMapOutputWithContext(context.Context) VpnGatewayMapOutput
}

type VpnGatewayMap map[string]VpnGatewayInput

func (VpnGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnGateway)(nil)).Elem()
}

func (i VpnGatewayMap) ToVpnGatewayMapOutput() VpnGatewayMapOutput {
	return i.ToVpnGatewayMapOutputWithContext(context.Background())
}

func (i VpnGatewayMap) ToVpnGatewayMapOutputWithContext(ctx context.Context) VpnGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayMapOutput)
}

type VpnGatewayOutput struct{ *pulumi.OutputState }

func (VpnGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGateway)(nil)).Elem()
}

func (o VpnGatewayOutput) ToVpnGatewayOutput() VpnGatewayOutput {
	return o
}

func (o VpnGatewayOutput) ToVpnGatewayOutputWithContext(ctx context.Context) VpnGatewayOutput {
	return o
}

func (o VpnGatewayOutput) AmazonSideAsn() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnGateway) pulumi.StringOutput { return v.AmazonSideAsn }).(pulumi.StringOutput)
}

func (o VpnGatewayOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnGateway) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o VpnGatewayOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGateway) pulumi.StringPtrOutput { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o VpnGatewayOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpnGateway) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o VpnGatewayOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpnGateway) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o VpnGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnGateway) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type VpnGatewayArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnGateway)(nil)).Elem()
}

func (o VpnGatewayArrayOutput) ToVpnGatewayArrayOutput() VpnGatewayArrayOutput {
	return o
}

func (o VpnGatewayArrayOutput) ToVpnGatewayArrayOutputWithContext(ctx context.Context) VpnGatewayArrayOutput {
	return o
}

func (o VpnGatewayArrayOutput) Index(i pulumi.IntInput) VpnGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnGateway {
		return vs[0].([]*VpnGateway)[vs[1].(int)]
	}).(VpnGatewayOutput)
}

type VpnGatewayMapOutput struct{ *pulumi.OutputState }

func (VpnGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnGateway)(nil)).Elem()
}

func (o VpnGatewayMapOutput) ToVpnGatewayMapOutput() VpnGatewayMapOutput {
	return o
}

func (o VpnGatewayMapOutput) ToVpnGatewayMapOutputWithContext(ctx context.Context) VpnGatewayMapOutput {
	return o
}

func (o VpnGatewayMapOutput) MapIndex(k pulumi.StringInput) VpnGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnGateway {
		return vs[0].(map[string]*VpnGateway)[vs[1].(string)]
	}).(VpnGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayInput)(nil)).Elem(), &VpnGateway{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayArrayInput)(nil)).Elem(), VpnGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayMapInput)(nil)).Elem(), VpnGatewayMap{})
	pulumi.RegisterOutputType(VpnGatewayOutput{})
	pulumi.RegisterOutputType(VpnGatewayArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayMapOutput{})
}
