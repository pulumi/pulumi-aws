// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Ami struct {
	pulumi.CustomResourceState

	Architecture          pulumi.StringPtrOutput             `pulumi:"architecture"`
	Arn                   pulumi.StringOutput                `pulumi:"arn"`
	BootMode              pulumi.StringPtrOutput             `pulumi:"bootMode"`
	DeprecationTime       pulumi.StringPtrOutput             `pulumi:"deprecationTime"`
	Description           pulumi.StringPtrOutput             `pulumi:"description"`
	EbsBlockDevices       AmiEbsBlockDeviceArrayOutput       `pulumi:"ebsBlockDevices"`
	EnaSupport            pulumi.BoolPtrOutput               `pulumi:"enaSupport"`
	EphemeralBlockDevices AmiEphemeralBlockDeviceArrayOutput `pulumi:"ephemeralBlockDevices"`
	Hypervisor            pulumi.StringOutput                `pulumi:"hypervisor"`
	ImageLocation         pulumi.StringOutput                `pulumi:"imageLocation"`
	ImageOwnerAlias       pulumi.StringOutput                `pulumi:"imageOwnerAlias"`
	ImageType             pulumi.StringOutput                `pulumi:"imageType"`
	ImdsSupport           pulumi.StringPtrOutput             `pulumi:"imdsSupport"`
	KernelId              pulumi.StringPtrOutput             `pulumi:"kernelId"`
	ManageEbsSnapshots    pulumi.BoolOutput                  `pulumi:"manageEbsSnapshots"`
	Name                  pulumi.StringOutput                `pulumi:"name"`
	OwnerId               pulumi.StringOutput                `pulumi:"ownerId"`
	Platform              pulumi.StringOutput                `pulumi:"platform"`
	PlatformDetails       pulumi.StringOutput                `pulumi:"platformDetails"`
	Public                pulumi.BoolOutput                  `pulumi:"public"`
	RamdiskId             pulumi.StringPtrOutput             `pulumi:"ramdiskId"`
	RootDeviceName        pulumi.StringPtrOutput             `pulumi:"rootDeviceName"`
	RootSnapshotId        pulumi.StringOutput                `pulumi:"rootSnapshotId"`
	SriovNetSupport       pulumi.StringPtrOutput             `pulumi:"sriovNetSupport"`
	Tags                  pulumi.StringMapOutput             `pulumi:"tags"`
	TagsAll               pulumi.StringMapOutput             `pulumi:"tagsAll"`
	TpmSupport            pulumi.StringPtrOutput             `pulumi:"tpmSupport"`
	UsageOperation        pulumi.StringOutput                `pulumi:"usageOperation"`
	VirtualizationType    pulumi.StringPtrOutput             `pulumi:"virtualizationType"`
}

// NewAmi registers a new resource with the given unique name, arguments, and options.
func NewAmi(ctx *pulumi.Context,
	name string, args *AmiArgs, opts ...pulumi.ResourceOption) (*Ami, error) {
	if args == nil {
		args = &AmiArgs{}
	}

	var resource Ami
	err := ctx.RegisterResource("aws:ec2/ami:Ami", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAmi gets an existing Ami resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAmi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AmiState, opts ...pulumi.ResourceOption) (*Ami, error) {
	var resource Ami
	err := ctx.ReadResource("aws:ec2/ami:Ami", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ami resources.
type amiState struct {
	Architecture          *string                   `pulumi:"architecture"`
	Arn                   *string                   `pulumi:"arn"`
	BootMode              *string                   `pulumi:"bootMode"`
	DeprecationTime       *string                   `pulumi:"deprecationTime"`
	Description           *string                   `pulumi:"description"`
	EbsBlockDevices       []AmiEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EnaSupport            *bool                     `pulumi:"enaSupport"`
	EphemeralBlockDevices []AmiEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	Hypervisor            *string                   `pulumi:"hypervisor"`
	ImageLocation         *string                   `pulumi:"imageLocation"`
	ImageOwnerAlias       *string                   `pulumi:"imageOwnerAlias"`
	ImageType             *string                   `pulumi:"imageType"`
	ImdsSupport           *string                   `pulumi:"imdsSupport"`
	KernelId              *string                   `pulumi:"kernelId"`
	ManageEbsSnapshots    *bool                     `pulumi:"manageEbsSnapshots"`
	Name                  *string                   `pulumi:"name"`
	OwnerId               *string                   `pulumi:"ownerId"`
	Platform              *string                   `pulumi:"platform"`
	PlatformDetails       *string                   `pulumi:"platformDetails"`
	Public                *bool                     `pulumi:"public"`
	RamdiskId             *string                   `pulumi:"ramdiskId"`
	RootDeviceName        *string                   `pulumi:"rootDeviceName"`
	RootSnapshotId        *string                   `pulumi:"rootSnapshotId"`
	SriovNetSupport       *string                   `pulumi:"sriovNetSupport"`
	Tags                  map[string]string         `pulumi:"tags"`
	TagsAll               map[string]string         `pulumi:"tagsAll"`
	TpmSupport            *string                   `pulumi:"tpmSupport"`
	UsageOperation        *string                   `pulumi:"usageOperation"`
	VirtualizationType    *string                   `pulumi:"virtualizationType"`
}

type AmiState struct {
	Architecture          pulumi.StringPtrInput
	Arn                   pulumi.StringPtrInput
	BootMode              pulumi.StringPtrInput
	DeprecationTime       pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	EbsBlockDevices       AmiEbsBlockDeviceArrayInput
	EnaSupport            pulumi.BoolPtrInput
	EphemeralBlockDevices AmiEphemeralBlockDeviceArrayInput
	Hypervisor            pulumi.StringPtrInput
	ImageLocation         pulumi.StringPtrInput
	ImageOwnerAlias       pulumi.StringPtrInput
	ImageType             pulumi.StringPtrInput
	ImdsSupport           pulumi.StringPtrInput
	KernelId              pulumi.StringPtrInput
	ManageEbsSnapshots    pulumi.BoolPtrInput
	Name                  pulumi.StringPtrInput
	OwnerId               pulumi.StringPtrInput
	Platform              pulumi.StringPtrInput
	PlatformDetails       pulumi.StringPtrInput
	Public                pulumi.BoolPtrInput
	RamdiskId             pulumi.StringPtrInput
	RootDeviceName        pulumi.StringPtrInput
	RootSnapshotId        pulumi.StringPtrInput
	SriovNetSupport       pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	TagsAll               pulumi.StringMapInput
	TpmSupport            pulumi.StringPtrInput
	UsageOperation        pulumi.StringPtrInput
	VirtualizationType    pulumi.StringPtrInput
}

func (AmiState) ElementType() reflect.Type {
	return reflect.TypeOf((*amiState)(nil)).Elem()
}

type amiArgs struct {
	Architecture          *string                   `pulumi:"architecture"`
	BootMode              *string                   `pulumi:"bootMode"`
	DeprecationTime       *string                   `pulumi:"deprecationTime"`
	Description           *string                   `pulumi:"description"`
	EbsBlockDevices       []AmiEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EnaSupport            *bool                     `pulumi:"enaSupport"`
	EphemeralBlockDevices []AmiEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	ImageLocation         *string                   `pulumi:"imageLocation"`
	ImdsSupport           *string                   `pulumi:"imdsSupport"`
	KernelId              *string                   `pulumi:"kernelId"`
	Name                  *string                   `pulumi:"name"`
	RamdiskId             *string                   `pulumi:"ramdiskId"`
	RootDeviceName        *string                   `pulumi:"rootDeviceName"`
	SriovNetSupport       *string                   `pulumi:"sriovNetSupport"`
	Tags                  map[string]string         `pulumi:"tags"`
	TpmSupport            *string                   `pulumi:"tpmSupport"`
	VirtualizationType    *string                   `pulumi:"virtualizationType"`
}

// The set of arguments for constructing a Ami resource.
type AmiArgs struct {
	Architecture          pulumi.StringPtrInput
	BootMode              pulumi.StringPtrInput
	DeprecationTime       pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	EbsBlockDevices       AmiEbsBlockDeviceArrayInput
	EnaSupport            pulumi.BoolPtrInput
	EphemeralBlockDevices AmiEphemeralBlockDeviceArrayInput
	ImageLocation         pulumi.StringPtrInput
	ImdsSupport           pulumi.StringPtrInput
	KernelId              pulumi.StringPtrInput
	Name                  pulumi.StringPtrInput
	RamdiskId             pulumi.StringPtrInput
	RootDeviceName        pulumi.StringPtrInput
	SriovNetSupport       pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	TpmSupport            pulumi.StringPtrInput
	VirtualizationType    pulumi.StringPtrInput
}

func (AmiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*amiArgs)(nil)).Elem()
}

type AmiInput interface {
	pulumi.Input

	ToAmiOutput() AmiOutput
	ToAmiOutputWithContext(ctx context.Context) AmiOutput
}

func (*Ami) ElementType() reflect.Type {
	return reflect.TypeOf((**Ami)(nil)).Elem()
}

func (i *Ami) ToAmiOutput() AmiOutput {
	return i.ToAmiOutputWithContext(context.Background())
}

func (i *Ami) ToAmiOutputWithContext(ctx context.Context) AmiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiOutput)
}

// AmiArrayInput is an input type that accepts AmiArray and AmiArrayOutput values.
// You can construct a concrete instance of `AmiArrayInput` via:
//
//	AmiArray{ AmiArgs{...} }
type AmiArrayInput interface {
	pulumi.Input

	ToAmiArrayOutput() AmiArrayOutput
	ToAmiArrayOutputWithContext(context.Context) AmiArrayOutput
}

type AmiArray []AmiInput

func (AmiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ami)(nil)).Elem()
}

func (i AmiArray) ToAmiArrayOutput() AmiArrayOutput {
	return i.ToAmiArrayOutputWithContext(context.Background())
}

func (i AmiArray) ToAmiArrayOutputWithContext(ctx context.Context) AmiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiArrayOutput)
}

// AmiMapInput is an input type that accepts AmiMap and AmiMapOutput values.
// You can construct a concrete instance of `AmiMapInput` via:
//
//	AmiMap{ "key": AmiArgs{...} }
type AmiMapInput interface {
	pulumi.Input

	ToAmiMapOutput() AmiMapOutput
	ToAmiMapOutputWithContext(context.Context) AmiMapOutput
}

type AmiMap map[string]AmiInput

func (AmiMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ami)(nil)).Elem()
}

func (i AmiMap) ToAmiMapOutput() AmiMapOutput {
	return i.ToAmiMapOutputWithContext(context.Background())
}

func (i AmiMap) ToAmiMapOutputWithContext(ctx context.Context) AmiMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiMapOutput)
}

type AmiOutput struct{ *pulumi.OutputState }

func (AmiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ami)(nil)).Elem()
}

func (o AmiOutput) ToAmiOutput() AmiOutput {
	return o
}

func (o AmiOutput) ToAmiOutputWithContext(ctx context.Context) AmiOutput {
	return o
}

func (o AmiOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringPtrOutput { return v.Architecture }).(pulumi.StringPtrOutput)
}

func (o AmiOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o AmiOutput) BootMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringPtrOutput { return v.BootMode }).(pulumi.StringPtrOutput)
}

func (o AmiOutput) DeprecationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringPtrOutput { return v.DeprecationTime }).(pulumi.StringPtrOutput)
}

func (o AmiOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AmiOutput) EbsBlockDevices() AmiEbsBlockDeviceArrayOutput {
	return o.ApplyT(func(v *Ami) AmiEbsBlockDeviceArrayOutput { return v.EbsBlockDevices }).(AmiEbsBlockDeviceArrayOutput)
}

func (o AmiOutput) EnaSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Ami) pulumi.BoolPtrOutput { return v.EnaSupport }).(pulumi.BoolPtrOutput)
}

func (o AmiOutput) EphemeralBlockDevices() AmiEphemeralBlockDeviceArrayOutput {
	return o.ApplyT(func(v *Ami) AmiEphemeralBlockDeviceArrayOutput { return v.EphemeralBlockDevices }).(AmiEphemeralBlockDeviceArrayOutput)
}

func (o AmiOutput) Hypervisor() pulumi.StringOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringOutput { return v.Hypervisor }).(pulumi.StringOutput)
}

func (o AmiOutput) ImageLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringOutput { return v.ImageLocation }).(pulumi.StringOutput)
}

func (o AmiOutput) ImageOwnerAlias() pulumi.StringOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringOutput { return v.ImageOwnerAlias }).(pulumi.StringOutput)
}

func (o AmiOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringOutput { return v.ImageType }).(pulumi.StringOutput)
}

func (o AmiOutput) ImdsSupport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringPtrOutput { return v.ImdsSupport }).(pulumi.StringPtrOutput)
}

func (o AmiOutput) KernelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringPtrOutput { return v.KernelId }).(pulumi.StringPtrOutput)
}

func (o AmiOutput) ManageEbsSnapshots() pulumi.BoolOutput {
	return o.ApplyT(func(v *Ami) pulumi.BoolOutput { return v.ManageEbsSnapshots }).(pulumi.BoolOutput)
}

func (o AmiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AmiOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

func (o AmiOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringOutput { return v.Platform }).(pulumi.StringOutput)
}

func (o AmiOutput) PlatformDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringOutput { return v.PlatformDetails }).(pulumi.StringOutput)
}

func (o AmiOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v *Ami) pulumi.BoolOutput { return v.Public }).(pulumi.BoolOutput)
}

func (o AmiOutput) RamdiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringPtrOutput { return v.RamdiskId }).(pulumi.StringPtrOutput)
}

func (o AmiOutput) RootDeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringPtrOutput { return v.RootDeviceName }).(pulumi.StringPtrOutput)
}

func (o AmiOutput) RootSnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringOutput { return v.RootSnapshotId }).(pulumi.StringOutput)
}

func (o AmiOutput) SriovNetSupport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringPtrOutput { return v.SriovNetSupport }).(pulumi.StringPtrOutput)
}

func (o AmiOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o AmiOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o AmiOutput) TpmSupport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringPtrOutput { return v.TpmSupport }).(pulumi.StringPtrOutput)
}

func (o AmiOutput) UsageOperation() pulumi.StringOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringOutput { return v.UsageOperation }).(pulumi.StringOutput)
}

func (o AmiOutput) VirtualizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ami) pulumi.StringPtrOutput { return v.VirtualizationType }).(pulumi.StringPtrOutput)
}

type AmiArrayOutput struct{ *pulumi.OutputState }

func (AmiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ami)(nil)).Elem()
}

func (o AmiArrayOutput) ToAmiArrayOutput() AmiArrayOutput {
	return o
}

func (o AmiArrayOutput) ToAmiArrayOutputWithContext(ctx context.Context) AmiArrayOutput {
	return o
}

func (o AmiArrayOutput) Index(i pulumi.IntInput) AmiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ami {
		return vs[0].([]*Ami)[vs[1].(int)]
	}).(AmiOutput)
}

type AmiMapOutput struct{ *pulumi.OutputState }

func (AmiMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ami)(nil)).Elem()
}

func (o AmiMapOutput) ToAmiMapOutput() AmiMapOutput {
	return o
}

func (o AmiMapOutput) ToAmiMapOutputWithContext(ctx context.Context) AmiMapOutput {
	return o
}

func (o AmiMapOutput) MapIndex(k pulumi.StringInput) AmiOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ami {
		return vs[0].(map[string]*Ami)[vs[1].(string)]
	}).(AmiOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AmiInput)(nil)).Elem(), &Ami{})
	pulumi.RegisterInputType(reflect.TypeOf((*AmiArrayInput)(nil)).Elem(), AmiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AmiMapInput)(nil)).Elem(), AmiMap{})
	pulumi.RegisterOutputType(AmiOutput{})
	pulumi.RegisterOutputType(AmiArrayOutput{})
	pulumi.RegisterOutputType(AmiMapOutput{})
}
