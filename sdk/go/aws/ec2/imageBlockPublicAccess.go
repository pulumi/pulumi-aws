// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a regional public access block for AMIs. This prevents AMIs from being made publicly accessible.
// If you already have public AMIs, they will remain publicly available.
//
// > **NOTE:** Deleting this resource does not change the block public access value, the resource in simply removed from state instead.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Prevent making AMIs publicly accessible in the region and account for which the provider is configured
//			_, err := ec2.NewImageBlockPublicAccess(ctx, "test", &ec2.ImageBlockPublicAccessArgs{
//				State: pulumi.String("block-new-sharing"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// You cannot import this resource.
type ImageBlockPublicAccess struct {
	pulumi.CustomResourceState

	// The state of block public access for AMIs at the account level in the configured AWS Region. Valid values: `unblocked` and `block-new-sharing`.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewImageBlockPublicAccess registers a new resource with the given unique name, arguments, and options.
func NewImageBlockPublicAccess(ctx *pulumi.Context,
	name string, args *ImageBlockPublicAccessArgs, opts ...pulumi.ResourceOption) (*ImageBlockPublicAccess, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.State == nil {
		return nil, errors.New("invalid value for required argument 'State'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ImageBlockPublicAccess
	err := ctx.RegisterResource("aws:ec2/imageBlockPublicAccess:ImageBlockPublicAccess", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImageBlockPublicAccess gets an existing ImageBlockPublicAccess resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImageBlockPublicAccess(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImageBlockPublicAccessState, opts ...pulumi.ResourceOption) (*ImageBlockPublicAccess, error) {
	var resource ImageBlockPublicAccess
	err := ctx.ReadResource("aws:ec2/imageBlockPublicAccess:ImageBlockPublicAccess", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ImageBlockPublicAccess resources.
type imageBlockPublicAccessState struct {
	// The state of block public access for AMIs at the account level in the configured AWS Region. Valid values: `unblocked` and `block-new-sharing`.
	State *string `pulumi:"state"`
}

type ImageBlockPublicAccessState struct {
	// The state of block public access for AMIs at the account level in the configured AWS Region. Valid values: `unblocked` and `block-new-sharing`.
	State pulumi.StringPtrInput
}

func (ImageBlockPublicAccessState) ElementType() reflect.Type {
	return reflect.TypeOf((*imageBlockPublicAccessState)(nil)).Elem()
}

type imageBlockPublicAccessArgs struct {
	// The state of block public access for AMIs at the account level in the configured AWS Region. Valid values: `unblocked` and `block-new-sharing`.
	State string `pulumi:"state"`
}

// The set of arguments for constructing a ImageBlockPublicAccess resource.
type ImageBlockPublicAccessArgs struct {
	// The state of block public access for AMIs at the account level in the configured AWS Region. Valid values: `unblocked` and `block-new-sharing`.
	State pulumi.StringInput
}

func (ImageBlockPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imageBlockPublicAccessArgs)(nil)).Elem()
}

type ImageBlockPublicAccessInput interface {
	pulumi.Input

	ToImageBlockPublicAccessOutput() ImageBlockPublicAccessOutput
	ToImageBlockPublicAccessOutputWithContext(ctx context.Context) ImageBlockPublicAccessOutput
}

func (*ImageBlockPublicAccess) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageBlockPublicAccess)(nil)).Elem()
}

func (i *ImageBlockPublicAccess) ToImageBlockPublicAccessOutput() ImageBlockPublicAccessOutput {
	return i.ToImageBlockPublicAccessOutputWithContext(context.Background())
}

func (i *ImageBlockPublicAccess) ToImageBlockPublicAccessOutputWithContext(ctx context.Context) ImageBlockPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBlockPublicAccessOutput)
}

// ImageBlockPublicAccessArrayInput is an input type that accepts ImageBlockPublicAccessArray and ImageBlockPublicAccessArrayOutput values.
// You can construct a concrete instance of `ImageBlockPublicAccessArrayInput` via:
//
//	ImageBlockPublicAccessArray{ ImageBlockPublicAccessArgs{...} }
type ImageBlockPublicAccessArrayInput interface {
	pulumi.Input

	ToImageBlockPublicAccessArrayOutput() ImageBlockPublicAccessArrayOutput
	ToImageBlockPublicAccessArrayOutputWithContext(context.Context) ImageBlockPublicAccessArrayOutput
}

type ImageBlockPublicAccessArray []ImageBlockPublicAccessInput

func (ImageBlockPublicAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ImageBlockPublicAccess)(nil)).Elem()
}

func (i ImageBlockPublicAccessArray) ToImageBlockPublicAccessArrayOutput() ImageBlockPublicAccessArrayOutput {
	return i.ToImageBlockPublicAccessArrayOutputWithContext(context.Background())
}

func (i ImageBlockPublicAccessArray) ToImageBlockPublicAccessArrayOutputWithContext(ctx context.Context) ImageBlockPublicAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBlockPublicAccessArrayOutput)
}

// ImageBlockPublicAccessMapInput is an input type that accepts ImageBlockPublicAccessMap and ImageBlockPublicAccessMapOutput values.
// You can construct a concrete instance of `ImageBlockPublicAccessMapInput` via:
//
//	ImageBlockPublicAccessMap{ "key": ImageBlockPublicAccessArgs{...} }
type ImageBlockPublicAccessMapInput interface {
	pulumi.Input

	ToImageBlockPublicAccessMapOutput() ImageBlockPublicAccessMapOutput
	ToImageBlockPublicAccessMapOutputWithContext(context.Context) ImageBlockPublicAccessMapOutput
}

type ImageBlockPublicAccessMap map[string]ImageBlockPublicAccessInput

func (ImageBlockPublicAccessMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ImageBlockPublicAccess)(nil)).Elem()
}

func (i ImageBlockPublicAccessMap) ToImageBlockPublicAccessMapOutput() ImageBlockPublicAccessMapOutput {
	return i.ToImageBlockPublicAccessMapOutputWithContext(context.Background())
}

func (i ImageBlockPublicAccessMap) ToImageBlockPublicAccessMapOutputWithContext(ctx context.Context) ImageBlockPublicAccessMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBlockPublicAccessMapOutput)
}

type ImageBlockPublicAccessOutput struct{ *pulumi.OutputState }

func (ImageBlockPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageBlockPublicAccess)(nil)).Elem()
}

func (o ImageBlockPublicAccessOutput) ToImageBlockPublicAccessOutput() ImageBlockPublicAccessOutput {
	return o
}

func (o ImageBlockPublicAccessOutput) ToImageBlockPublicAccessOutputWithContext(ctx context.Context) ImageBlockPublicAccessOutput {
	return o
}

// The state of block public access for AMIs at the account level in the configured AWS Region. Valid values: `unblocked` and `block-new-sharing`.
func (o ImageBlockPublicAccessOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageBlockPublicAccess) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

type ImageBlockPublicAccessArrayOutput struct{ *pulumi.OutputState }

func (ImageBlockPublicAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ImageBlockPublicAccess)(nil)).Elem()
}

func (o ImageBlockPublicAccessArrayOutput) ToImageBlockPublicAccessArrayOutput() ImageBlockPublicAccessArrayOutput {
	return o
}

func (o ImageBlockPublicAccessArrayOutput) ToImageBlockPublicAccessArrayOutputWithContext(ctx context.Context) ImageBlockPublicAccessArrayOutput {
	return o
}

func (o ImageBlockPublicAccessArrayOutput) Index(i pulumi.IntInput) ImageBlockPublicAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ImageBlockPublicAccess {
		return vs[0].([]*ImageBlockPublicAccess)[vs[1].(int)]
	}).(ImageBlockPublicAccessOutput)
}

type ImageBlockPublicAccessMapOutput struct{ *pulumi.OutputState }

func (ImageBlockPublicAccessMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ImageBlockPublicAccess)(nil)).Elem()
}

func (o ImageBlockPublicAccessMapOutput) ToImageBlockPublicAccessMapOutput() ImageBlockPublicAccessMapOutput {
	return o
}

func (o ImageBlockPublicAccessMapOutput) ToImageBlockPublicAccessMapOutputWithContext(ctx context.Context) ImageBlockPublicAccessMapOutput {
	return o
}

func (o ImageBlockPublicAccessMapOutput) MapIndex(k pulumi.StringInput) ImageBlockPublicAccessOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ImageBlockPublicAccess {
		return vs[0].(map[string]*ImageBlockPublicAccess)[vs[1].(string)]
	}).(ImageBlockPublicAccessOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBlockPublicAccessInput)(nil)).Elem(), &ImageBlockPublicAccess{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBlockPublicAccessArrayInput)(nil)).Elem(), ImageBlockPublicAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBlockPublicAccessMapInput)(nil)).Elem(), ImageBlockPublicAccessMap{})
	pulumi.RegisterOutputType(ImageBlockPublicAccessOutput{})
	pulumi.RegisterOutputType(ImageBlockPublicAccessArrayOutput{})
	pulumi.RegisterOutputType(ImageBlockPublicAccessMapOutput{})
}
