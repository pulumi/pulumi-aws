// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages the accepter's side of an EC2 Transit Gateway Peering Attachment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ec2"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ec2.NewTransitGatewayPeeringAttachmentAccepter(ctx, "example", &ec2.TransitGatewayPeeringAttachmentAccepterArgs{
// 			TransitGatewayAttachmentId: pulumi.Any(aws_ec2_transit_gateway_peering_attachment.Example.Id),
// 			Tags: pulumi.StringMap{
// 				"Name": pulumi.String("Example cross-account attachment"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// `aws_ec2_transit_gateway_peering_attachment_accepter` can be imported by using the EC2 Transit Gateway Attachment identifier, e.g.
//
// ```sh
//  $ pulumi import aws:ec2/transitGatewayPeeringAttachmentAccepter:TransitGatewayPeeringAttachmentAccepter example tgw-attach-12345678
// ```
type TransitGatewayPeeringAttachmentAccepter struct {
	pulumi.CustomResourceState

	// Identifier of the AWS account that owns the EC2 TGW peering.
	PeerAccountId pulumi.StringOutput `pulumi:"peerAccountId"`
	PeerRegion    pulumi.StringOutput `pulumi:"peerRegion"`
	// Identifier of EC2 Transit Gateway to peer with.
	PeerTransitGatewayId pulumi.StringOutput    `pulumi:"peerTransitGatewayId"`
	Tags                 pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll              pulumi.StringMapOutput `pulumi:"tagsAll"`
	// The ID of the EC2 Transit Gateway Peering Attachment to manage.
	TransitGatewayAttachmentId pulumi.StringOutput `pulumi:"transitGatewayAttachmentId"`
	// Identifier of EC2 Transit Gateway.
	TransitGatewayId pulumi.StringOutput `pulumi:"transitGatewayId"`
}

// NewTransitGatewayPeeringAttachmentAccepter registers a new resource with the given unique name, arguments, and options.
func NewTransitGatewayPeeringAttachmentAccepter(ctx *pulumi.Context,
	name string, args *TransitGatewayPeeringAttachmentAccepterArgs, opts ...pulumi.ResourceOption) (*TransitGatewayPeeringAttachmentAccepter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TransitGatewayAttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayAttachmentId'")
	}
	var resource TransitGatewayPeeringAttachmentAccepter
	err := ctx.RegisterResource("aws:ec2/transitGatewayPeeringAttachmentAccepter:TransitGatewayPeeringAttachmentAccepter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitGatewayPeeringAttachmentAccepter gets an existing TransitGatewayPeeringAttachmentAccepter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitGatewayPeeringAttachmentAccepter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitGatewayPeeringAttachmentAccepterState, opts ...pulumi.ResourceOption) (*TransitGatewayPeeringAttachmentAccepter, error) {
	var resource TransitGatewayPeeringAttachmentAccepter
	err := ctx.ReadResource("aws:ec2/transitGatewayPeeringAttachmentAccepter:TransitGatewayPeeringAttachmentAccepter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitGatewayPeeringAttachmentAccepter resources.
type transitGatewayPeeringAttachmentAccepterState struct {
	// Identifier of the AWS account that owns the EC2 TGW peering.
	PeerAccountId *string `pulumi:"peerAccountId"`
	PeerRegion    *string `pulumi:"peerRegion"`
	// Identifier of EC2 Transit Gateway to peer with.
	PeerTransitGatewayId *string           `pulumi:"peerTransitGatewayId"`
	Tags                 map[string]string `pulumi:"tags"`
	TagsAll              map[string]string `pulumi:"tagsAll"`
	// The ID of the EC2 Transit Gateway Peering Attachment to manage.
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
	// Identifier of EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
}

type TransitGatewayPeeringAttachmentAccepterState struct {
	// Identifier of the AWS account that owns the EC2 TGW peering.
	PeerAccountId pulumi.StringPtrInput
	PeerRegion    pulumi.StringPtrInput
	// Identifier of EC2 Transit Gateway to peer with.
	PeerTransitGatewayId pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
	TagsAll              pulumi.StringMapInput
	// The ID of the EC2 Transit Gateway Peering Attachment to manage.
	TransitGatewayAttachmentId pulumi.StringPtrInput
	// Identifier of EC2 Transit Gateway.
	TransitGatewayId pulumi.StringPtrInput
}

func (TransitGatewayPeeringAttachmentAccepterState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayPeeringAttachmentAccepterState)(nil)).Elem()
}

type transitGatewayPeeringAttachmentAccepterArgs struct {
	Tags    map[string]string `pulumi:"tags"`
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The ID of the EC2 Transit Gateway Peering Attachment to manage.
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
}

// The set of arguments for constructing a TransitGatewayPeeringAttachmentAccepter resource.
type TransitGatewayPeeringAttachmentAccepterArgs struct {
	Tags    pulumi.StringMapInput
	TagsAll pulumi.StringMapInput
	// The ID of the EC2 Transit Gateway Peering Attachment to manage.
	TransitGatewayAttachmentId pulumi.StringInput
}

func (TransitGatewayPeeringAttachmentAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayPeeringAttachmentAccepterArgs)(nil)).Elem()
}

type TransitGatewayPeeringAttachmentAccepterInput interface {
	pulumi.Input

	ToTransitGatewayPeeringAttachmentAccepterOutput() TransitGatewayPeeringAttachmentAccepterOutput
	ToTransitGatewayPeeringAttachmentAccepterOutputWithContext(ctx context.Context) TransitGatewayPeeringAttachmentAccepterOutput
}

func (*TransitGatewayPeeringAttachmentAccepter) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayPeeringAttachmentAccepter)(nil))
}

func (i *TransitGatewayPeeringAttachmentAccepter) ToTransitGatewayPeeringAttachmentAccepterOutput() TransitGatewayPeeringAttachmentAccepterOutput {
	return i.ToTransitGatewayPeeringAttachmentAccepterOutputWithContext(context.Background())
}

func (i *TransitGatewayPeeringAttachmentAccepter) ToTransitGatewayPeeringAttachmentAccepterOutputWithContext(ctx context.Context) TransitGatewayPeeringAttachmentAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayPeeringAttachmentAccepterOutput)
}

func (i *TransitGatewayPeeringAttachmentAccepter) ToTransitGatewayPeeringAttachmentAccepterPtrOutput() TransitGatewayPeeringAttachmentAccepterPtrOutput {
	return i.ToTransitGatewayPeeringAttachmentAccepterPtrOutputWithContext(context.Background())
}

func (i *TransitGatewayPeeringAttachmentAccepter) ToTransitGatewayPeeringAttachmentAccepterPtrOutputWithContext(ctx context.Context) TransitGatewayPeeringAttachmentAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayPeeringAttachmentAccepterPtrOutput)
}

type TransitGatewayPeeringAttachmentAccepterPtrInput interface {
	pulumi.Input

	ToTransitGatewayPeeringAttachmentAccepterPtrOutput() TransitGatewayPeeringAttachmentAccepterPtrOutput
	ToTransitGatewayPeeringAttachmentAccepterPtrOutputWithContext(ctx context.Context) TransitGatewayPeeringAttachmentAccepterPtrOutput
}

type transitGatewayPeeringAttachmentAccepterPtrType TransitGatewayPeeringAttachmentAccepterArgs

func (*transitGatewayPeeringAttachmentAccepterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayPeeringAttachmentAccepter)(nil))
}

func (i *transitGatewayPeeringAttachmentAccepterPtrType) ToTransitGatewayPeeringAttachmentAccepterPtrOutput() TransitGatewayPeeringAttachmentAccepterPtrOutput {
	return i.ToTransitGatewayPeeringAttachmentAccepterPtrOutputWithContext(context.Background())
}

func (i *transitGatewayPeeringAttachmentAccepterPtrType) ToTransitGatewayPeeringAttachmentAccepterPtrOutputWithContext(ctx context.Context) TransitGatewayPeeringAttachmentAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayPeeringAttachmentAccepterPtrOutput)
}

// TransitGatewayPeeringAttachmentAccepterArrayInput is an input type that accepts TransitGatewayPeeringAttachmentAccepterArray and TransitGatewayPeeringAttachmentAccepterArrayOutput values.
// You can construct a concrete instance of `TransitGatewayPeeringAttachmentAccepterArrayInput` via:
//
//          TransitGatewayPeeringAttachmentAccepterArray{ TransitGatewayPeeringAttachmentAccepterArgs{...} }
type TransitGatewayPeeringAttachmentAccepterArrayInput interface {
	pulumi.Input

	ToTransitGatewayPeeringAttachmentAccepterArrayOutput() TransitGatewayPeeringAttachmentAccepterArrayOutput
	ToTransitGatewayPeeringAttachmentAccepterArrayOutputWithContext(context.Context) TransitGatewayPeeringAttachmentAccepterArrayOutput
}

type TransitGatewayPeeringAttachmentAccepterArray []TransitGatewayPeeringAttachmentAccepterInput

func (TransitGatewayPeeringAttachmentAccepterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitGatewayPeeringAttachmentAccepter)(nil)).Elem()
}

func (i TransitGatewayPeeringAttachmentAccepterArray) ToTransitGatewayPeeringAttachmentAccepterArrayOutput() TransitGatewayPeeringAttachmentAccepterArrayOutput {
	return i.ToTransitGatewayPeeringAttachmentAccepterArrayOutputWithContext(context.Background())
}

func (i TransitGatewayPeeringAttachmentAccepterArray) ToTransitGatewayPeeringAttachmentAccepterArrayOutputWithContext(ctx context.Context) TransitGatewayPeeringAttachmentAccepterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayPeeringAttachmentAccepterArrayOutput)
}

// TransitGatewayPeeringAttachmentAccepterMapInput is an input type that accepts TransitGatewayPeeringAttachmentAccepterMap and TransitGatewayPeeringAttachmentAccepterMapOutput values.
// You can construct a concrete instance of `TransitGatewayPeeringAttachmentAccepterMapInput` via:
//
//          TransitGatewayPeeringAttachmentAccepterMap{ "key": TransitGatewayPeeringAttachmentAccepterArgs{...} }
type TransitGatewayPeeringAttachmentAccepterMapInput interface {
	pulumi.Input

	ToTransitGatewayPeeringAttachmentAccepterMapOutput() TransitGatewayPeeringAttachmentAccepterMapOutput
	ToTransitGatewayPeeringAttachmentAccepterMapOutputWithContext(context.Context) TransitGatewayPeeringAttachmentAccepterMapOutput
}

type TransitGatewayPeeringAttachmentAccepterMap map[string]TransitGatewayPeeringAttachmentAccepterInput

func (TransitGatewayPeeringAttachmentAccepterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitGatewayPeeringAttachmentAccepter)(nil)).Elem()
}

func (i TransitGatewayPeeringAttachmentAccepterMap) ToTransitGatewayPeeringAttachmentAccepterMapOutput() TransitGatewayPeeringAttachmentAccepterMapOutput {
	return i.ToTransitGatewayPeeringAttachmentAccepterMapOutputWithContext(context.Background())
}

func (i TransitGatewayPeeringAttachmentAccepterMap) ToTransitGatewayPeeringAttachmentAccepterMapOutputWithContext(ctx context.Context) TransitGatewayPeeringAttachmentAccepterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayPeeringAttachmentAccepterMapOutput)
}

type TransitGatewayPeeringAttachmentAccepterOutput struct{ *pulumi.OutputState }

func (TransitGatewayPeeringAttachmentAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayPeeringAttachmentAccepter)(nil))
}

func (o TransitGatewayPeeringAttachmentAccepterOutput) ToTransitGatewayPeeringAttachmentAccepterOutput() TransitGatewayPeeringAttachmentAccepterOutput {
	return o
}

func (o TransitGatewayPeeringAttachmentAccepterOutput) ToTransitGatewayPeeringAttachmentAccepterOutputWithContext(ctx context.Context) TransitGatewayPeeringAttachmentAccepterOutput {
	return o
}

func (o TransitGatewayPeeringAttachmentAccepterOutput) ToTransitGatewayPeeringAttachmentAccepterPtrOutput() TransitGatewayPeeringAttachmentAccepterPtrOutput {
	return o.ToTransitGatewayPeeringAttachmentAccepterPtrOutputWithContext(context.Background())
}

func (o TransitGatewayPeeringAttachmentAccepterOutput) ToTransitGatewayPeeringAttachmentAccepterPtrOutputWithContext(ctx context.Context) TransitGatewayPeeringAttachmentAccepterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransitGatewayPeeringAttachmentAccepter) *TransitGatewayPeeringAttachmentAccepter {
		return &v
	}).(TransitGatewayPeeringAttachmentAccepterPtrOutput)
}

type TransitGatewayPeeringAttachmentAccepterPtrOutput struct{ *pulumi.OutputState }

func (TransitGatewayPeeringAttachmentAccepterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayPeeringAttachmentAccepter)(nil))
}

func (o TransitGatewayPeeringAttachmentAccepterPtrOutput) ToTransitGatewayPeeringAttachmentAccepterPtrOutput() TransitGatewayPeeringAttachmentAccepterPtrOutput {
	return o
}

func (o TransitGatewayPeeringAttachmentAccepterPtrOutput) ToTransitGatewayPeeringAttachmentAccepterPtrOutputWithContext(ctx context.Context) TransitGatewayPeeringAttachmentAccepterPtrOutput {
	return o
}

func (o TransitGatewayPeeringAttachmentAccepterPtrOutput) Elem() TransitGatewayPeeringAttachmentAccepterOutput {
	return o.ApplyT(func(v *TransitGatewayPeeringAttachmentAccepter) TransitGatewayPeeringAttachmentAccepter {
		if v != nil {
			return *v
		}
		var ret TransitGatewayPeeringAttachmentAccepter
		return ret
	}).(TransitGatewayPeeringAttachmentAccepterOutput)
}

type TransitGatewayPeeringAttachmentAccepterArrayOutput struct{ *pulumi.OutputState }

func (TransitGatewayPeeringAttachmentAccepterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitGatewayPeeringAttachmentAccepter)(nil))
}

func (o TransitGatewayPeeringAttachmentAccepterArrayOutput) ToTransitGatewayPeeringAttachmentAccepterArrayOutput() TransitGatewayPeeringAttachmentAccepterArrayOutput {
	return o
}

func (o TransitGatewayPeeringAttachmentAccepterArrayOutput) ToTransitGatewayPeeringAttachmentAccepterArrayOutputWithContext(ctx context.Context) TransitGatewayPeeringAttachmentAccepterArrayOutput {
	return o
}

func (o TransitGatewayPeeringAttachmentAccepterArrayOutput) Index(i pulumi.IntInput) TransitGatewayPeeringAttachmentAccepterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitGatewayPeeringAttachmentAccepter {
		return vs[0].([]TransitGatewayPeeringAttachmentAccepter)[vs[1].(int)]
	}).(TransitGatewayPeeringAttachmentAccepterOutput)
}

type TransitGatewayPeeringAttachmentAccepterMapOutput struct{ *pulumi.OutputState }

func (TransitGatewayPeeringAttachmentAccepterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TransitGatewayPeeringAttachmentAccepter)(nil))
}

func (o TransitGatewayPeeringAttachmentAccepterMapOutput) ToTransitGatewayPeeringAttachmentAccepterMapOutput() TransitGatewayPeeringAttachmentAccepterMapOutput {
	return o
}

func (o TransitGatewayPeeringAttachmentAccepterMapOutput) ToTransitGatewayPeeringAttachmentAccepterMapOutputWithContext(ctx context.Context) TransitGatewayPeeringAttachmentAccepterMapOutput {
	return o
}

func (o TransitGatewayPeeringAttachmentAccepterMapOutput) MapIndex(k pulumi.StringInput) TransitGatewayPeeringAttachmentAccepterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) TransitGatewayPeeringAttachmentAccepter {
		return vs[0].(map[string]TransitGatewayPeeringAttachmentAccepter)[vs[1].(string)]
	}).(TransitGatewayPeeringAttachmentAccepterOutput)
}

func init() {
	pulumi.RegisterOutputType(TransitGatewayPeeringAttachmentAccepterOutput{})
	pulumi.RegisterOutputType(TransitGatewayPeeringAttachmentAccepterPtrOutput{})
	pulumi.RegisterOutputType(TransitGatewayPeeringAttachmentAccepterArrayOutput{})
	pulumi.RegisterOutputType(TransitGatewayPeeringAttachmentAccepterMapOutput{})
}
