// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an EC2 placement group. Read more about placement groups
// in [AWS Docs](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html).
type PlacementGroup struct {
	s *pulumi.ResourceState
}

// NewPlacementGroup registers a new resource with the given unique name, arguments, and options.
func NewPlacementGroup(ctx *pulumi.Context,
	name string, args *PlacementGroupArgs, opts ...pulumi.ResourceOpt) (*PlacementGroup, error) {
	if args == nil || args.Strategy == nil {
		return nil, errors.New("missing required argument 'Strategy'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["name"] = nil
		inputs["strategy"] = nil
	} else {
		inputs["name"] = args.Name
		inputs["strategy"] = args.Strategy
	}
	s, err := ctx.RegisterResource("aws:ec2/placementGroup:PlacementGroup", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &PlacementGroup{s: s}, nil
}

// GetPlacementGroup gets an existing PlacementGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPlacementGroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *PlacementGroupState, opts ...pulumi.ResourceOpt) (*PlacementGroup, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["name"] = state.Name
		inputs["strategy"] = state.Strategy
	}
	s, err := ctx.ReadResource("aws:ec2/placementGroup:PlacementGroup", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &PlacementGroup{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *PlacementGroup) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *PlacementGroup) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The name of the placement group.
func (r *PlacementGroup) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The placement strategy.
func (r *PlacementGroup) Strategy() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["strategy"])
}

// Input properties used for looking up and filtering PlacementGroup resources.
type PlacementGroupState struct {
	// The name of the placement group.
	Name interface{}
	// The placement strategy.
	Strategy interface{}
}

// The set of arguments for constructing a PlacementGroup resource.
type PlacementGroupArgs struct {
	// The name of the placement group.
	Name interface{}
	// The placement strategy.
	Strategy interface{}
}
