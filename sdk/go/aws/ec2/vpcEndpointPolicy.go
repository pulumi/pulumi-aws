// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VPC Endpoint Policy resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleVpcEndpointService, err := ec2.LookupVpcEndpointService(ctx, &ec2.LookupVpcEndpointServiceArgs{
//				Service: pulumi.StringRef("dynamodb"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleVpc, err := ec2.NewVpc(ctx, "exampleVpc", &ec2.VpcArgs{
//				CidrBlock: pulumi.String("10.0.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVpcEndpoint, err := ec2.NewVpcEndpoint(ctx, "exampleVpcEndpoint", &ec2.VpcEndpointArgs{
//				ServiceName: *pulumi.String(exampleVpcEndpointService.ServiceName),
//				VpcId:       exampleVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"Version": "2012-10-17",
//				"Statement": []map[string]interface{}{
//					map[string]interface{}{
//						"Sid":    "AllowAll",
//						"Effect": "Allow",
//						"Principal": map[string]interface{}{
//							"AWS": "*",
//						},
//						"Action": []string{
//							"dynamodb:*",
//						},
//						"Resource": "*",
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = ec2.NewVpcEndpointPolicy(ctx, "exampleVpcEndpointPolicy", &ec2.VpcEndpointPolicyArgs{
//				VpcEndpointId: exampleVpcEndpoint.ID(),
//				Policy:        pulumi.String(json0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import VPC Endpoint Policies using the `id`. For example:
//
// ```sh
//
//	$ pulumi import aws:ec2/vpcEndpointPolicy:VpcEndpointPolicy example vpce-3ecf2a57
//
// ```
type VpcEndpointPolicy struct {
	pulumi.CustomResourceState

	// A policy to attach to the endpoint that controls access to the service. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details.
	Policy pulumi.StringOutput `pulumi:"policy"`
	// The VPC Endpoint ID.
	VpcEndpointId pulumi.StringOutput `pulumi:"vpcEndpointId"`
}

// NewVpcEndpointPolicy registers a new resource with the given unique name, arguments, and options.
func NewVpcEndpointPolicy(ctx *pulumi.Context,
	name string, args *VpcEndpointPolicyArgs, opts ...pulumi.ResourceOption) (*VpcEndpointPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VpcEndpointId == nil {
		return nil, errors.New("invalid value for required argument 'VpcEndpointId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcEndpointPolicy
	err := ctx.RegisterResource("aws:ec2/vpcEndpointPolicy:VpcEndpointPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcEndpointPolicy gets an existing VpcEndpointPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcEndpointPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcEndpointPolicyState, opts ...pulumi.ResourceOption) (*VpcEndpointPolicy, error) {
	var resource VpcEndpointPolicy
	err := ctx.ReadResource("aws:ec2/vpcEndpointPolicy:VpcEndpointPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcEndpointPolicy resources.
type vpcEndpointPolicyState struct {
	// A policy to attach to the endpoint that controls access to the service. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details.
	Policy *string `pulumi:"policy"`
	// The VPC Endpoint ID.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
}

type VpcEndpointPolicyState struct {
	// A policy to attach to the endpoint that controls access to the service. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details.
	Policy pulumi.StringPtrInput
	// The VPC Endpoint ID.
	VpcEndpointId pulumi.StringPtrInput
}

func (VpcEndpointPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointPolicyState)(nil)).Elem()
}

type vpcEndpointPolicyArgs struct {
	// A policy to attach to the endpoint that controls access to the service. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details.
	Policy *string `pulumi:"policy"`
	// The VPC Endpoint ID.
	VpcEndpointId string `pulumi:"vpcEndpointId"`
}

// The set of arguments for constructing a VpcEndpointPolicy resource.
type VpcEndpointPolicyArgs struct {
	// A policy to attach to the endpoint that controls access to the service. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details.
	Policy pulumi.StringPtrInput
	// The VPC Endpoint ID.
	VpcEndpointId pulumi.StringInput
}

func (VpcEndpointPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointPolicyArgs)(nil)).Elem()
}

type VpcEndpointPolicyInput interface {
	pulumi.Input

	ToVpcEndpointPolicyOutput() VpcEndpointPolicyOutput
	ToVpcEndpointPolicyOutputWithContext(ctx context.Context) VpcEndpointPolicyOutput
}

func (*VpcEndpointPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpointPolicy)(nil)).Elem()
}

func (i *VpcEndpointPolicy) ToVpcEndpointPolicyOutput() VpcEndpointPolicyOutput {
	return i.ToVpcEndpointPolicyOutputWithContext(context.Background())
}

func (i *VpcEndpointPolicy) ToVpcEndpointPolicyOutputWithContext(ctx context.Context) VpcEndpointPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointPolicyOutput)
}

// VpcEndpointPolicyArrayInput is an input type that accepts VpcEndpointPolicyArray and VpcEndpointPolicyArrayOutput values.
// You can construct a concrete instance of `VpcEndpointPolicyArrayInput` via:
//
//	VpcEndpointPolicyArray{ VpcEndpointPolicyArgs{...} }
type VpcEndpointPolicyArrayInput interface {
	pulumi.Input

	ToVpcEndpointPolicyArrayOutput() VpcEndpointPolicyArrayOutput
	ToVpcEndpointPolicyArrayOutputWithContext(context.Context) VpcEndpointPolicyArrayOutput
}

type VpcEndpointPolicyArray []VpcEndpointPolicyInput

func (VpcEndpointPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpointPolicy)(nil)).Elem()
}

func (i VpcEndpointPolicyArray) ToVpcEndpointPolicyArrayOutput() VpcEndpointPolicyArrayOutput {
	return i.ToVpcEndpointPolicyArrayOutputWithContext(context.Background())
}

func (i VpcEndpointPolicyArray) ToVpcEndpointPolicyArrayOutputWithContext(ctx context.Context) VpcEndpointPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointPolicyArrayOutput)
}

// VpcEndpointPolicyMapInput is an input type that accepts VpcEndpointPolicyMap and VpcEndpointPolicyMapOutput values.
// You can construct a concrete instance of `VpcEndpointPolicyMapInput` via:
//
//	VpcEndpointPolicyMap{ "key": VpcEndpointPolicyArgs{...} }
type VpcEndpointPolicyMapInput interface {
	pulumi.Input

	ToVpcEndpointPolicyMapOutput() VpcEndpointPolicyMapOutput
	ToVpcEndpointPolicyMapOutputWithContext(context.Context) VpcEndpointPolicyMapOutput
}

type VpcEndpointPolicyMap map[string]VpcEndpointPolicyInput

func (VpcEndpointPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpointPolicy)(nil)).Elem()
}

func (i VpcEndpointPolicyMap) ToVpcEndpointPolicyMapOutput() VpcEndpointPolicyMapOutput {
	return i.ToVpcEndpointPolicyMapOutputWithContext(context.Background())
}

func (i VpcEndpointPolicyMap) ToVpcEndpointPolicyMapOutputWithContext(ctx context.Context) VpcEndpointPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointPolicyMapOutput)
}

type VpcEndpointPolicyOutput struct{ *pulumi.OutputState }

func (VpcEndpointPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpointPolicy)(nil)).Elem()
}

func (o VpcEndpointPolicyOutput) ToVpcEndpointPolicyOutput() VpcEndpointPolicyOutput {
	return o
}

func (o VpcEndpointPolicyOutput) ToVpcEndpointPolicyOutputWithContext(ctx context.Context) VpcEndpointPolicyOutput {
	return o
}

// A policy to attach to the endpoint that controls access to the service. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details.
func (o VpcEndpointPolicyOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpointPolicy) pulumi.StringOutput { return v.Policy }).(pulumi.StringOutput)
}

// The VPC Endpoint ID.
func (o VpcEndpointPolicyOutput) VpcEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpointPolicy) pulumi.StringOutput { return v.VpcEndpointId }).(pulumi.StringOutput)
}

type VpcEndpointPolicyArrayOutput struct{ *pulumi.OutputState }

func (VpcEndpointPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpointPolicy)(nil)).Elem()
}

func (o VpcEndpointPolicyArrayOutput) ToVpcEndpointPolicyArrayOutput() VpcEndpointPolicyArrayOutput {
	return o
}

func (o VpcEndpointPolicyArrayOutput) ToVpcEndpointPolicyArrayOutputWithContext(ctx context.Context) VpcEndpointPolicyArrayOutput {
	return o
}

func (o VpcEndpointPolicyArrayOutput) Index(i pulumi.IntInput) VpcEndpointPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcEndpointPolicy {
		return vs[0].([]*VpcEndpointPolicy)[vs[1].(int)]
	}).(VpcEndpointPolicyOutput)
}

type VpcEndpointPolicyMapOutput struct{ *pulumi.OutputState }

func (VpcEndpointPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpointPolicy)(nil)).Elem()
}

func (o VpcEndpointPolicyMapOutput) ToVpcEndpointPolicyMapOutput() VpcEndpointPolicyMapOutput {
	return o
}

func (o VpcEndpointPolicyMapOutput) ToVpcEndpointPolicyMapOutputWithContext(ctx context.Context) VpcEndpointPolicyMapOutput {
	return o
}

func (o VpcEndpointPolicyMapOutput) MapIndex(k pulumi.StringInput) VpcEndpointPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcEndpointPolicy {
		return vs[0].(map[string]*VpcEndpointPolicy)[vs[1].(string)]
	}).(VpcEndpointPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointPolicyInput)(nil)).Elem(), &VpcEndpointPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointPolicyArrayInput)(nil)).Elem(), VpcEndpointPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointPolicyMapInput)(nil)).Elem(), VpcEndpointPolicyMap{})
	pulumi.RegisterOutputType(VpcEndpointPolicyOutput{})
	pulumi.RegisterOutputType(VpcEndpointPolicyArrayOutput{})
	pulumi.RegisterOutputType(VpcEndpointPolicyMapOutput{})
}
