// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a VPC DHCP Options Association resource.
// * Removing the DHCP Options Association automatically sets AWS's `default` DHCP Options Set to the VPC.
type VpcDhcpOptionsAssociation struct {
	s *pulumi.ResourceState
}

// NewVpcDhcpOptionsAssociation registers a new resource with the given unique name, arguments, and options.
func NewVpcDhcpOptionsAssociation(ctx *pulumi.Context,
	name string, args *VpcDhcpOptionsAssociationArgs, opts ...pulumi.ResourceOpt) (*VpcDhcpOptionsAssociation, error) {
	if args == nil || args.DhcpOptionsId == nil {
		return nil, errors.New("missing required argument 'DhcpOptionsId'")
	}
	if args == nil || args.VpcId == nil {
		return nil, errors.New("missing required argument 'VpcId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["dhcpOptionsId"] = nil
		inputs["vpcId"] = nil
	} else {
		inputs["dhcpOptionsId"] = args.DhcpOptionsId
		inputs["vpcId"] = args.VpcId
	}
	s, err := ctx.RegisterResource("aws:ec2/vpcDhcpOptionsAssociation:VpcDhcpOptionsAssociation", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VpcDhcpOptionsAssociation{s: s}, nil
}

// GetVpcDhcpOptionsAssociation gets an existing VpcDhcpOptionsAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcDhcpOptionsAssociation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *VpcDhcpOptionsAssociationState, opts ...pulumi.ResourceOpt) (*VpcDhcpOptionsAssociation, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["dhcpOptionsId"] = state.DhcpOptionsId
		inputs["vpcId"] = state.VpcId
	}
	s, err := ctx.ReadResource("aws:ec2/vpcDhcpOptionsAssociation:VpcDhcpOptionsAssociation", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VpcDhcpOptionsAssociation{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *VpcDhcpOptionsAssociation) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *VpcDhcpOptionsAssociation) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The ID of the DHCP Options Set to associate to the VPC.
func (r *VpcDhcpOptionsAssociation) DhcpOptionsId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["dhcpOptionsId"])
}

// The ID of the VPC to which we would like to associate a DHCP Options Set.
func (r *VpcDhcpOptionsAssociation) VpcId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vpcId"])
}

// Input properties used for looking up and filtering VpcDhcpOptionsAssociation resources.
type VpcDhcpOptionsAssociationState struct {
	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId interface{}
	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId interface{}
}

// The set of arguments for constructing a VpcDhcpOptionsAssociation resource.
type VpcDhcpOptionsAssociationArgs struct {
	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId interface{}
	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId interface{}
}
