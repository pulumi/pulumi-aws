// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a VPC DHCP Options Association resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/ec2"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ec2.NewVpcDhcpOptionsAssociation(ctx, "dnsResolver", &ec2.VpcDhcpOptionsAssociationArgs{
// 			VpcId:         pulumi.Any(aws_vpc.Foo.Id),
// 			DhcpOptionsId: pulumi.Any(aws_vpc_dhcp_options.Foo.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Remarks
//
// * You can only associate one DHCP Options Set to a given VPC ID.
// * Removing the DHCP Options Association automatically sets AWS's `default` DHCP Options Set to the VPC.
//
// ## Import
//
// DHCP associations can be imported by providing the VPC ID associated with the options
//
// ```sh
//  $ pulumi import aws:ec2/vpcDhcpOptionsAssociation:VpcDhcpOptionsAssociation imported vpc-0f001273ec18911b1
// ```
type VpcDhcpOptionsAssociation struct {
	pulumi.CustomResourceState

	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId pulumi.StringOutput `pulumi:"dhcpOptionsId"`
	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewVpcDhcpOptionsAssociation registers a new resource with the given unique name, arguments, and options.
func NewVpcDhcpOptionsAssociation(ctx *pulumi.Context,
	name string, args *VpcDhcpOptionsAssociationArgs, opts ...pulumi.ResourceOption) (*VpcDhcpOptionsAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DhcpOptionsId == nil {
		return nil, errors.New("invalid value for required argument 'DhcpOptionsId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	var resource VpcDhcpOptionsAssociation
	err := ctx.RegisterResource("aws:ec2/vpcDhcpOptionsAssociation:VpcDhcpOptionsAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcDhcpOptionsAssociation gets an existing VpcDhcpOptionsAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcDhcpOptionsAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcDhcpOptionsAssociationState, opts ...pulumi.ResourceOption) (*VpcDhcpOptionsAssociation, error) {
	var resource VpcDhcpOptionsAssociation
	err := ctx.ReadResource("aws:ec2/vpcDhcpOptionsAssociation:VpcDhcpOptionsAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcDhcpOptionsAssociation resources.
type vpcDhcpOptionsAssociationState struct {
	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId *string `pulumi:"dhcpOptionsId"`
	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId *string `pulumi:"vpcId"`
}

type VpcDhcpOptionsAssociationState struct {
	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId pulumi.StringPtrInput
	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId pulumi.StringPtrInput
}

func (VpcDhcpOptionsAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcDhcpOptionsAssociationState)(nil)).Elem()
}

type vpcDhcpOptionsAssociationArgs struct {
	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId string `pulumi:"dhcpOptionsId"`
	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a VpcDhcpOptionsAssociation resource.
type VpcDhcpOptionsAssociationArgs struct {
	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId pulumi.StringInput
	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId pulumi.StringInput
}

func (VpcDhcpOptionsAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcDhcpOptionsAssociationArgs)(nil)).Elem()
}

type VpcDhcpOptionsAssociationInput interface {
	pulumi.Input

	ToVpcDhcpOptionsAssociationOutput() VpcDhcpOptionsAssociationOutput
	ToVpcDhcpOptionsAssociationOutputWithContext(ctx context.Context) VpcDhcpOptionsAssociationOutput
}

func (VpcDhcpOptionsAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcDhcpOptionsAssociation)(nil)).Elem()
}

func (i VpcDhcpOptionsAssociation) ToVpcDhcpOptionsAssociationOutput() VpcDhcpOptionsAssociationOutput {
	return i.ToVpcDhcpOptionsAssociationOutputWithContext(context.Background())
}

func (i VpcDhcpOptionsAssociation) ToVpcDhcpOptionsAssociationOutputWithContext(ctx context.Context) VpcDhcpOptionsAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcDhcpOptionsAssociationOutput)
}

type VpcDhcpOptionsAssociationOutput struct {
	*pulumi.OutputState
}

func (VpcDhcpOptionsAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcDhcpOptionsAssociationOutput)(nil)).Elem()
}

func (o VpcDhcpOptionsAssociationOutput) ToVpcDhcpOptionsAssociationOutput() VpcDhcpOptionsAssociationOutput {
	return o
}

func (o VpcDhcpOptionsAssociationOutput) ToVpcDhcpOptionsAssociationOutputWithContext(ctx context.Context) VpcDhcpOptionsAssociationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(VpcDhcpOptionsAssociationOutput{})
}
