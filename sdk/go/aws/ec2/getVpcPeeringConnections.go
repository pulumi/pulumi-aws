// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get IDs of Amazon VPC peering connections
// To get more details on each connection, use the data resource ec2.VpcPeeringConnection
//
// Note: To use this data source in a count, the resources should exist before trying to access
// the data source.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// // Declare the data source
// pcs, err := ec2.GetVpcPeeringConnections(ctx, &ec2.GetVpcPeeringConnectionsArgs{
// Filters: []ec2.GetVpcPeeringConnectionsFilter{
// {
// Name: "requester-vpc-info.vpc-id",
// Values: interface{}{
// foo.Id,
// },
// },
// },
// }, nil);
// if err != nil {
// return err
// }
// // get the details of each resource
// _ := "TODO: For expression";
// return nil
// })
// }
// ```
func GetVpcPeeringConnections(ctx *pulumi.Context, args *GetVpcPeeringConnectionsArgs, opts ...pulumi.InvokeOption) (*GetVpcPeeringConnectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVpcPeeringConnectionsResult
	err := ctx.Invoke("aws:ec2/getVpcPeeringConnections:getVpcPeeringConnections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcPeeringConnections.
type GetVpcPeeringConnectionsArgs struct {
	// Custom filter block as described below.
	Filters []GetVpcPeeringConnectionsFilter `pulumi:"filters"`
	// Mapping of tags, each pair of which must exactly match
	// a pair on the desired VPC Peering Connection.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getVpcPeeringConnections.
type GetVpcPeeringConnectionsResult struct {
	Filters []GetVpcPeeringConnectionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// IDs of the VPC Peering Connections.
	Ids  []string          `pulumi:"ids"`
	Tags map[string]string `pulumi:"tags"`
}

func GetVpcPeeringConnectionsOutput(ctx *pulumi.Context, args GetVpcPeeringConnectionsOutputArgs, opts ...pulumi.InvokeOption) GetVpcPeeringConnectionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVpcPeeringConnectionsResult, error) {
			args := v.(GetVpcPeeringConnectionsArgs)
			r, err := GetVpcPeeringConnections(ctx, &args, opts...)
			var s GetVpcPeeringConnectionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVpcPeeringConnectionsResultOutput)
}

// A collection of arguments for invoking getVpcPeeringConnections.
type GetVpcPeeringConnectionsOutputArgs struct {
	// Custom filter block as described below.
	Filters GetVpcPeeringConnectionsFilterArrayInput `pulumi:"filters"`
	// Mapping of tags, each pair of which must exactly match
	// a pair on the desired VPC Peering Connection.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetVpcPeeringConnectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionsArgs)(nil)).Elem()
}

// A collection of values returned by getVpcPeeringConnections.
type GetVpcPeeringConnectionsResultOutput struct{ *pulumi.OutputState }

func (GetVpcPeeringConnectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionsResult)(nil)).Elem()
}

func (o GetVpcPeeringConnectionsResultOutput) ToGetVpcPeeringConnectionsResultOutput() GetVpcPeeringConnectionsResultOutput {
	return o
}

func (o GetVpcPeeringConnectionsResultOutput) ToGetVpcPeeringConnectionsResultOutputWithContext(ctx context.Context) GetVpcPeeringConnectionsResultOutput {
	return o
}

func (o GetVpcPeeringConnectionsResultOutput) Filters() GetVpcPeeringConnectionsFilterArrayOutput {
	return o.ApplyT(func(v GetVpcPeeringConnectionsResult) []GetVpcPeeringConnectionsFilter { return v.Filters }).(GetVpcPeeringConnectionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVpcPeeringConnectionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPeeringConnectionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// IDs of the VPC Peering Connections.
func (o GetVpcPeeringConnectionsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcPeeringConnectionsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetVpcPeeringConnectionsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetVpcPeeringConnectionsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVpcPeeringConnectionsResultOutput{})
}
