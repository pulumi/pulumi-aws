// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupVpcEndpointService(ctx *pulumi.Context, args *LookupVpcEndpointServiceArgs, opts ...pulumi.InvokeOption) (*LookupVpcEndpointServiceResult, error) {
	var rv LookupVpcEndpointServiceResult
	err := ctx.Invoke("aws:ec2/getVpcEndpointService:getVpcEndpointService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcEndpointService.
type LookupVpcEndpointServiceArgs struct {
	Filters     []GetVpcEndpointServiceFilter `pulumi:"filters"`
	Service     *string                       `pulumi:"service"`
	ServiceName *string                       `pulumi:"serviceName"`
	ServiceType *string                       `pulumi:"serviceType"`
	Tags        map[string]string             `pulumi:"tags"`
}

// A collection of values returned by getVpcEndpointService.
type LookupVpcEndpointServiceResult struct {
	AcceptanceRequired   bool                          `pulumi:"acceptanceRequired"`
	Arn                  string                        `pulumi:"arn"`
	AvailabilityZones    []string                      `pulumi:"availabilityZones"`
	BaseEndpointDnsNames []string                      `pulumi:"baseEndpointDnsNames"`
	Filters              []GetVpcEndpointServiceFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                         string            `pulumi:"id"`
	ManagesVpcEndpoints        bool              `pulumi:"managesVpcEndpoints"`
	Owner                      string            `pulumi:"owner"`
	PrivateDnsName             string            `pulumi:"privateDnsName"`
	Service                    *string           `pulumi:"service"`
	ServiceId                  string            `pulumi:"serviceId"`
	ServiceName                string            `pulumi:"serviceName"`
	ServiceType                string            `pulumi:"serviceType"`
	SupportedIpAddressTypes    []string          `pulumi:"supportedIpAddressTypes"`
	Tags                       map[string]string `pulumi:"tags"`
	VpcEndpointPolicySupported bool              `pulumi:"vpcEndpointPolicySupported"`
}

func LookupVpcEndpointServiceOutput(ctx *pulumi.Context, args LookupVpcEndpointServiceOutputArgs, opts ...pulumi.InvokeOption) LookupVpcEndpointServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpcEndpointServiceResult, error) {
			args := v.(LookupVpcEndpointServiceArgs)
			r, err := LookupVpcEndpointService(ctx, &args, opts...)
			var s LookupVpcEndpointServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVpcEndpointServiceResultOutput)
}

// A collection of arguments for invoking getVpcEndpointService.
type LookupVpcEndpointServiceOutputArgs struct {
	Filters     GetVpcEndpointServiceFilterArrayInput `pulumi:"filters"`
	Service     pulumi.StringPtrInput                 `pulumi:"service"`
	ServiceName pulumi.StringPtrInput                 `pulumi:"serviceName"`
	ServiceType pulumi.StringPtrInput                 `pulumi:"serviceType"`
	Tags        pulumi.StringMapInput                 `pulumi:"tags"`
}

func (LookupVpcEndpointServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcEndpointServiceArgs)(nil)).Elem()
}

// A collection of values returned by getVpcEndpointService.
type LookupVpcEndpointServiceResultOutput struct{ *pulumi.OutputState }

func (LookupVpcEndpointServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcEndpointServiceResult)(nil)).Elem()
}

func (o LookupVpcEndpointServiceResultOutput) ToLookupVpcEndpointServiceResultOutput() LookupVpcEndpointServiceResultOutput {
	return o
}

func (o LookupVpcEndpointServiceResultOutput) ToLookupVpcEndpointServiceResultOutputWithContext(ctx context.Context) LookupVpcEndpointServiceResultOutput {
	return o
}

func (o LookupVpcEndpointServiceResultOutput) AcceptanceRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) bool { return v.AcceptanceRequired }).(pulumi.BoolOutput)
}

func (o LookupVpcEndpointServiceResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupVpcEndpointServiceResultOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o LookupVpcEndpointServiceResultOutput) BaseEndpointDnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) []string { return v.BaseEndpointDnsNames }).(pulumi.StringArrayOutput)
}

func (o LookupVpcEndpointServiceResultOutput) Filters() GetVpcEndpointServiceFilterArrayOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) []GetVpcEndpointServiceFilter { return v.Filters }).(GetVpcEndpointServiceFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVpcEndpointServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVpcEndpointServiceResultOutput) ManagesVpcEndpoints() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) bool { return v.ManagesVpcEndpoints }).(pulumi.BoolOutput)
}

func (o LookupVpcEndpointServiceResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) string { return v.Owner }).(pulumi.StringOutput)
}

func (o LookupVpcEndpointServiceResultOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) string { return v.PrivateDnsName }).(pulumi.StringOutput)
}

func (o LookupVpcEndpointServiceResultOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) *string { return v.Service }).(pulumi.StringPtrOutput)
}

func (o LookupVpcEndpointServiceResultOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) string { return v.ServiceId }).(pulumi.StringOutput)
}

func (o LookupVpcEndpointServiceResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupVpcEndpointServiceResultOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) string { return v.ServiceType }).(pulumi.StringOutput)
}

func (o LookupVpcEndpointServiceResultOutput) SupportedIpAddressTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) []string { return v.SupportedIpAddressTypes }).(pulumi.StringArrayOutput)
}

func (o LookupVpcEndpointServiceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupVpcEndpointServiceResultOutput) VpcEndpointPolicySupported() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) bool { return v.VpcEndpointPolicySupported }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcEndpointServiceResultOutput{})
}
