// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an EC2 Capacity Block Reservation. This allows you to purchase capacity block for your Amazon EC2 instances in a specific Availability Zone for machine learning (ML) Workloads.
//
// > **NOTE:** Once created, a reservation is valid for the `duration` of the provided `capacityBlockOfferingId` and cannot be deleted. Performing a `destroy` will only remove the resource from state. For more information see [EC2 Capacity Block Reservation Documentation](https://aws.amazon.com/ec2/instance-types/p5/) and [PurchaseReservedDBInstancesOffering](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-blocks-pricing-billing.html).
//
// > **NOTE:** Due to the expense of testing this resource, we provide it as best effort. If you find it useful, and have the ability to help test or notice issues, consider reaching out to us on GitHub.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := ec2.GetCapacityBlockOffering(ctx, &ec2.GetCapacityBlockOfferingArgs{
//				CapacityDurationHours: 24,
//				EndDateRange:          pulumi.StringRef("2024-05-30T15:04:05Z"),
//				InstanceCount:         1,
//				InstanceType:          "p4d.24xlarge",
//				StartDateRange:        pulumi.StringRef("2024-04-28T15:04:05Z"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = ec2.NewCapacityBlockReservation(ctx, "example", &ec2.CapacityBlockReservationArgs{
//				CapacityBlockOfferingId: pulumi.String(test.CapacityBlockOfferingId),
//				InstancePlatform:        pulumi.String("Linux/UNIX"),
//				Tags: pulumi.StringMap{
//					"Environment": pulumi.String("dev"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type CapacityBlockReservation struct {
	pulumi.CustomResourceState

	// The ARN of the reservation.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The Availability Zone in which to create the Capacity Block Reservation.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// The Capacity Block Reservation ID.
	CapacityBlockOfferingId pulumi.StringOutput `pulumi:"capacityBlockOfferingId"`
	// The date and time at which the Capacity Block Reservation was created.
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// Indicates whether the Capacity Reservation supports EBS-optimized instances.
	EbsOptimized pulumi.BoolOutput `pulumi:"ebsOptimized"`
	// The date and time at which the Capacity Block Reservation expires. When a Capacity Block Reservation expires, the reserved capacity is released and you can no longer launch instances into it. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	EndDate pulumi.StringOutput `pulumi:"endDate"`
	// Indicates the way in which the Capacity Reservation ends.
	EndDateType pulumi.StringOutput `pulumi:"endDateType"`
	// The number of instances for which to reserve capacity.
	InstanceCount pulumi.IntOutput `pulumi:"instanceCount"`
	// The type of operating system for which to reserve capacity. Valid options are `Linux/UNIX`, `Red Hat Enterprise Linux`, `SUSE Linux`, `Windows`, `Windows with SQL Server`, `Windows with SQL Server Enterprise`, `Windows with SQL Server Standard` or `Windows with SQL Server Web`.
	InstancePlatform pulumi.StringOutput `pulumi:"instancePlatform"`
	// The instance type for which to reserve capacity.
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`
	// The ARN of the Outpost on which to create the Capacity Block Reservation.
	OutpostArn pulumi.StringOutput `pulumi:"outpostArn"`
	// The ARN of the placement group in which to create the Capacity Block Reservation.
	PlacementGroupArn pulumi.StringOutput `pulumi:"placementGroupArn"`
	// The type of Capacity Reservation.
	ReservationType pulumi.StringOutput `pulumi:"reservationType"`
	// The date and time at which the Capacity Block Reservation starts. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	StartDate pulumi.StringOutput `pulumi:"startDate"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// Indicates the tenancy of the Capacity Block Reservation. Specify either `default` or `dedicated`.
	Tenancy  pulumi.StringOutput                       `pulumi:"tenancy"`
	Timeouts CapacityBlockReservationTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewCapacityBlockReservation registers a new resource with the given unique name, arguments, and options.
func NewCapacityBlockReservation(ctx *pulumi.Context,
	name string, args *CapacityBlockReservationArgs, opts ...pulumi.ResourceOption) (*CapacityBlockReservation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CapacityBlockOfferingId == nil {
		return nil, errors.New("invalid value for required argument 'CapacityBlockOfferingId'")
	}
	if args.InstancePlatform == nil {
		return nil, errors.New("invalid value for required argument 'InstancePlatform'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CapacityBlockReservation
	err := ctx.RegisterResource("aws:ec2/capacityBlockReservation:CapacityBlockReservation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCapacityBlockReservation gets an existing CapacityBlockReservation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCapacityBlockReservation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CapacityBlockReservationState, opts ...pulumi.ResourceOption) (*CapacityBlockReservation, error) {
	var resource CapacityBlockReservation
	err := ctx.ReadResource("aws:ec2/capacityBlockReservation:CapacityBlockReservation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CapacityBlockReservation resources.
type capacityBlockReservationState struct {
	// The ARN of the reservation.
	Arn *string `pulumi:"arn"`
	// The Availability Zone in which to create the Capacity Block Reservation.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The Capacity Block Reservation ID.
	CapacityBlockOfferingId *string `pulumi:"capacityBlockOfferingId"`
	// The date and time at which the Capacity Block Reservation was created.
	CreatedDate *string `pulumi:"createdDate"`
	// Indicates whether the Capacity Reservation supports EBS-optimized instances.
	EbsOptimized *bool `pulumi:"ebsOptimized"`
	// The date and time at which the Capacity Block Reservation expires. When a Capacity Block Reservation expires, the reserved capacity is released and you can no longer launch instances into it. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	EndDate *string `pulumi:"endDate"`
	// Indicates the way in which the Capacity Reservation ends.
	EndDateType *string `pulumi:"endDateType"`
	// The number of instances for which to reserve capacity.
	InstanceCount *int `pulumi:"instanceCount"`
	// The type of operating system for which to reserve capacity. Valid options are `Linux/UNIX`, `Red Hat Enterprise Linux`, `SUSE Linux`, `Windows`, `Windows with SQL Server`, `Windows with SQL Server Enterprise`, `Windows with SQL Server Standard` or `Windows with SQL Server Web`.
	InstancePlatform *string `pulumi:"instancePlatform"`
	// The instance type for which to reserve capacity.
	InstanceType *string `pulumi:"instanceType"`
	// The ARN of the Outpost on which to create the Capacity Block Reservation.
	OutpostArn *string `pulumi:"outpostArn"`
	// The ARN of the placement group in which to create the Capacity Block Reservation.
	PlacementGroupArn *string `pulumi:"placementGroupArn"`
	// The type of Capacity Reservation.
	ReservationType *string `pulumi:"reservationType"`
	// The date and time at which the Capacity Block Reservation starts. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	StartDate *string `pulumi:"startDate"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Indicates the tenancy of the Capacity Block Reservation. Specify either `default` or `dedicated`.
	Tenancy  *string                           `pulumi:"tenancy"`
	Timeouts *CapacityBlockReservationTimeouts `pulumi:"timeouts"`
}

type CapacityBlockReservationState struct {
	// The ARN of the reservation.
	Arn pulumi.StringPtrInput
	// The Availability Zone in which to create the Capacity Block Reservation.
	AvailabilityZone pulumi.StringPtrInput
	// The Capacity Block Reservation ID.
	CapacityBlockOfferingId pulumi.StringPtrInput
	// The date and time at which the Capacity Block Reservation was created.
	CreatedDate pulumi.StringPtrInput
	// Indicates whether the Capacity Reservation supports EBS-optimized instances.
	EbsOptimized pulumi.BoolPtrInput
	// The date and time at which the Capacity Block Reservation expires. When a Capacity Block Reservation expires, the reserved capacity is released and you can no longer launch instances into it. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	EndDate pulumi.StringPtrInput
	// Indicates the way in which the Capacity Reservation ends.
	EndDateType pulumi.StringPtrInput
	// The number of instances for which to reserve capacity.
	InstanceCount pulumi.IntPtrInput
	// The type of operating system for which to reserve capacity. Valid options are `Linux/UNIX`, `Red Hat Enterprise Linux`, `SUSE Linux`, `Windows`, `Windows with SQL Server`, `Windows with SQL Server Enterprise`, `Windows with SQL Server Standard` or `Windows with SQL Server Web`.
	InstancePlatform pulumi.StringPtrInput
	// The instance type for which to reserve capacity.
	InstanceType pulumi.StringPtrInput
	// The ARN of the Outpost on which to create the Capacity Block Reservation.
	OutpostArn pulumi.StringPtrInput
	// The ARN of the placement group in which to create the Capacity Block Reservation.
	PlacementGroupArn pulumi.StringPtrInput
	// The type of Capacity Reservation.
	ReservationType pulumi.StringPtrInput
	// The date and time at which the Capacity Block Reservation starts. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	StartDate pulumi.StringPtrInput
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	// Indicates the tenancy of the Capacity Block Reservation. Specify either `default` or `dedicated`.
	Tenancy  pulumi.StringPtrInput
	Timeouts CapacityBlockReservationTimeoutsPtrInput
}

func (CapacityBlockReservationState) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityBlockReservationState)(nil)).Elem()
}

type capacityBlockReservationArgs struct {
	// The Capacity Block Reservation ID.
	CapacityBlockOfferingId string `pulumi:"capacityBlockOfferingId"`
	// The type of operating system for which to reserve capacity. Valid options are `Linux/UNIX`, `Red Hat Enterprise Linux`, `SUSE Linux`, `Windows`, `Windows with SQL Server`, `Windows with SQL Server Enterprise`, `Windows with SQL Server Standard` or `Windows with SQL Server Web`.
	InstancePlatform string `pulumi:"instancePlatform"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string                 `pulumi:"tags"`
	Timeouts *CapacityBlockReservationTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CapacityBlockReservation resource.
type CapacityBlockReservationArgs struct {
	// The Capacity Block Reservation ID.
	CapacityBlockOfferingId pulumi.StringInput
	// The type of operating system for which to reserve capacity. Valid options are `Linux/UNIX`, `Red Hat Enterprise Linux`, `SUSE Linux`, `Windows`, `Windows with SQL Server`, `Windows with SQL Server Enterprise`, `Windows with SQL Server Standard` or `Windows with SQL Server Web`.
	InstancePlatform pulumi.StringInput
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumi.StringMapInput
	Timeouts CapacityBlockReservationTimeoutsPtrInput
}

func (CapacityBlockReservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityBlockReservationArgs)(nil)).Elem()
}

type CapacityBlockReservationInput interface {
	pulumi.Input

	ToCapacityBlockReservationOutput() CapacityBlockReservationOutput
	ToCapacityBlockReservationOutputWithContext(ctx context.Context) CapacityBlockReservationOutput
}

func (*CapacityBlockReservation) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityBlockReservation)(nil)).Elem()
}

func (i *CapacityBlockReservation) ToCapacityBlockReservationOutput() CapacityBlockReservationOutput {
	return i.ToCapacityBlockReservationOutputWithContext(context.Background())
}

func (i *CapacityBlockReservation) ToCapacityBlockReservationOutputWithContext(ctx context.Context) CapacityBlockReservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityBlockReservationOutput)
}

// CapacityBlockReservationArrayInput is an input type that accepts CapacityBlockReservationArray and CapacityBlockReservationArrayOutput values.
// You can construct a concrete instance of `CapacityBlockReservationArrayInput` via:
//
//	CapacityBlockReservationArray{ CapacityBlockReservationArgs{...} }
type CapacityBlockReservationArrayInput interface {
	pulumi.Input

	ToCapacityBlockReservationArrayOutput() CapacityBlockReservationArrayOutput
	ToCapacityBlockReservationArrayOutputWithContext(context.Context) CapacityBlockReservationArrayOutput
}

type CapacityBlockReservationArray []CapacityBlockReservationInput

func (CapacityBlockReservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CapacityBlockReservation)(nil)).Elem()
}

func (i CapacityBlockReservationArray) ToCapacityBlockReservationArrayOutput() CapacityBlockReservationArrayOutput {
	return i.ToCapacityBlockReservationArrayOutputWithContext(context.Background())
}

func (i CapacityBlockReservationArray) ToCapacityBlockReservationArrayOutputWithContext(ctx context.Context) CapacityBlockReservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityBlockReservationArrayOutput)
}

// CapacityBlockReservationMapInput is an input type that accepts CapacityBlockReservationMap and CapacityBlockReservationMapOutput values.
// You can construct a concrete instance of `CapacityBlockReservationMapInput` via:
//
//	CapacityBlockReservationMap{ "key": CapacityBlockReservationArgs{...} }
type CapacityBlockReservationMapInput interface {
	pulumi.Input

	ToCapacityBlockReservationMapOutput() CapacityBlockReservationMapOutput
	ToCapacityBlockReservationMapOutputWithContext(context.Context) CapacityBlockReservationMapOutput
}

type CapacityBlockReservationMap map[string]CapacityBlockReservationInput

func (CapacityBlockReservationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CapacityBlockReservation)(nil)).Elem()
}

func (i CapacityBlockReservationMap) ToCapacityBlockReservationMapOutput() CapacityBlockReservationMapOutput {
	return i.ToCapacityBlockReservationMapOutputWithContext(context.Background())
}

func (i CapacityBlockReservationMap) ToCapacityBlockReservationMapOutputWithContext(ctx context.Context) CapacityBlockReservationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityBlockReservationMapOutput)
}

type CapacityBlockReservationOutput struct{ *pulumi.OutputState }

func (CapacityBlockReservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityBlockReservation)(nil)).Elem()
}

func (o CapacityBlockReservationOutput) ToCapacityBlockReservationOutput() CapacityBlockReservationOutput {
	return o
}

func (o CapacityBlockReservationOutput) ToCapacityBlockReservationOutputWithContext(ctx context.Context) CapacityBlockReservationOutput {
	return o
}

// The ARN of the reservation.
func (o CapacityBlockReservationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The Availability Zone in which to create the Capacity Block Reservation.
func (o CapacityBlockReservationOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The Capacity Block Reservation ID.
func (o CapacityBlockReservationOutput) CapacityBlockOfferingId() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringOutput { return v.CapacityBlockOfferingId }).(pulumi.StringOutput)
}

// The date and time at which the Capacity Block Reservation was created.
func (o CapacityBlockReservationOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

// Indicates whether the Capacity Reservation supports EBS-optimized instances.
func (o CapacityBlockReservationOutput) EbsOptimized() pulumi.BoolOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.BoolOutput { return v.EbsOptimized }).(pulumi.BoolOutput)
}

// The date and time at which the Capacity Block Reservation expires. When a Capacity Block Reservation expires, the reserved capacity is released and you can no longer launch instances into it. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
func (o CapacityBlockReservationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringOutput { return v.EndDate }).(pulumi.StringOutput)
}

// Indicates the way in which the Capacity Reservation ends.
func (o CapacityBlockReservationOutput) EndDateType() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringOutput { return v.EndDateType }).(pulumi.StringOutput)
}

// The number of instances for which to reserve capacity.
func (o CapacityBlockReservationOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.IntOutput { return v.InstanceCount }).(pulumi.IntOutput)
}

// The type of operating system for which to reserve capacity. Valid options are `Linux/UNIX`, `Red Hat Enterprise Linux`, `SUSE Linux`, `Windows`, `Windows with SQL Server`, `Windows with SQL Server Enterprise`, `Windows with SQL Server Standard` or `Windows with SQL Server Web`.
func (o CapacityBlockReservationOutput) InstancePlatform() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringOutput { return v.InstancePlatform }).(pulumi.StringOutput)
}

// The instance type for which to reserve capacity.
func (o CapacityBlockReservationOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

// The ARN of the Outpost on which to create the Capacity Block Reservation.
func (o CapacityBlockReservationOutput) OutpostArn() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringOutput { return v.OutpostArn }).(pulumi.StringOutput)
}

// The ARN of the placement group in which to create the Capacity Block Reservation.
func (o CapacityBlockReservationOutput) PlacementGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringOutput { return v.PlacementGroupArn }).(pulumi.StringOutput)
}

// The type of Capacity Reservation.
func (o CapacityBlockReservationOutput) ReservationType() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringOutput { return v.ReservationType }).(pulumi.StringOutput)
}

// The date and time at which the Capacity Block Reservation starts. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
func (o CapacityBlockReservationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringOutput { return v.StartDate }).(pulumi.StringOutput)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CapacityBlockReservationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block
//
// Deprecated: Please use `tags` instead.
func (o CapacityBlockReservationOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// Indicates the tenancy of the Capacity Block Reservation. Specify either `default` or `dedicated`.
func (o CapacityBlockReservationOutput) Tenancy() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) pulumi.StringOutput { return v.Tenancy }).(pulumi.StringOutput)
}

func (o CapacityBlockReservationOutput) Timeouts() CapacityBlockReservationTimeoutsPtrOutput {
	return o.ApplyT(func(v *CapacityBlockReservation) CapacityBlockReservationTimeoutsPtrOutput { return v.Timeouts }).(CapacityBlockReservationTimeoutsPtrOutput)
}

type CapacityBlockReservationArrayOutput struct{ *pulumi.OutputState }

func (CapacityBlockReservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CapacityBlockReservation)(nil)).Elem()
}

func (o CapacityBlockReservationArrayOutput) ToCapacityBlockReservationArrayOutput() CapacityBlockReservationArrayOutput {
	return o
}

func (o CapacityBlockReservationArrayOutput) ToCapacityBlockReservationArrayOutputWithContext(ctx context.Context) CapacityBlockReservationArrayOutput {
	return o
}

func (o CapacityBlockReservationArrayOutput) Index(i pulumi.IntInput) CapacityBlockReservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CapacityBlockReservation {
		return vs[0].([]*CapacityBlockReservation)[vs[1].(int)]
	}).(CapacityBlockReservationOutput)
}

type CapacityBlockReservationMapOutput struct{ *pulumi.OutputState }

func (CapacityBlockReservationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CapacityBlockReservation)(nil)).Elem()
}

func (o CapacityBlockReservationMapOutput) ToCapacityBlockReservationMapOutput() CapacityBlockReservationMapOutput {
	return o
}

func (o CapacityBlockReservationMapOutput) ToCapacityBlockReservationMapOutputWithContext(ctx context.Context) CapacityBlockReservationMapOutput {
	return o
}

func (o CapacityBlockReservationMapOutput) MapIndex(k pulumi.StringInput) CapacityBlockReservationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CapacityBlockReservation {
		return vs[0].(map[string]*CapacityBlockReservation)[vs[1].(string)]
	}).(CapacityBlockReservationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityBlockReservationInput)(nil)).Elem(), &CapacityBlockReservation{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityBlockReservationArrayInput)(nil)).Elem(), CapacityBlockReservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityBlockReservationMapInput)(nil)).Elem(), CapacityBlockReservationMap{})
	pulumi.RegisterOutputType(CapacityBlockReservationOutput{})
	pulumi.RegisterOutputType(CapacityBlockReservationArrayOutput{})
	pulumi.RegisterOutputType(CapacityBlockReservationMapOutput{})
}
