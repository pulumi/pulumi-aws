// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create an association between a VPC endpoint and a security group.
//
// > **NOTE on VPC Endpoints and VPC Endpoint Security Group Associations:** The provider provides
// both a standalone VPC Endpoint Security Group Association (an association between a VPC endpoint
// and a single `securityGroupId`) and a VPC Endpoint resource with a `securityGroupIds`
// attribute. Do not use the same security group ID in both a VPC Endpoint resource and a VPC Endpoint Security
// Group Association resource. Doing so will cause a conflict of associations and will overwrite the association.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ec2.NewSecurityGroupAssociation(ctx, "sgEc2", &ec2.SecurityGroupAssociationArgs{
//				VpcEndpointId:   pulumi.Any(aws_vpc_endpoint.Ec2.Id),
//				SecurityGroupId: pulumi.Any(aws_security_group.Sg.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SecurityGroupAssociation struct {
	pulumi.CustomResourceState

	// Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
	ReplaceDefaultAssociation pulumi.BoolPtrOutput `pulumi:"replaceDefaultAssociation"`
	// The ID of the security group to be associated with the VPC endpoint.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// The ID of the VPC endpoint with which the security group will be associated.
	VpcEndpointId pulumi.StringOutput `pulumi:"vpcEndpointId"`
}

// NewSecurityGroupAssociation registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroupAssociation(ctx *pulumi.Context,
	name string, args *SecurityGroupAssociationArgs, opts ...pulumi.ResourceOption) (*SecurityGroupAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	if args.VpcEndpointId == nil {
		return nil, errors.New("invalid value for required argument 'VpcEndpointId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityGroupAssociation
	err := ctx.RegisterResource("aws:ec2/securityGroupAssociation:SecurityGroupAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGroupAssociation gets an existing SecurityGroupAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroupAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGroupAssociationState, opts ...pulumi.ResourceOption) (*SecurityGroupAssociation, error) {
	var resource SecurityGroupAssociation
	err := ctx.ReadResource("aws:ec2/securityGroupAssociation:SecurityGroupAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGroupAssociation resources.
type securityGroupAssociationState struct {
	// Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
	ReplaceDefaultAssociation *bool `pulumi:"replaceDefaultAssociation"`
	// The ID of the security group to be associated with the VPC endpoint.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The ID of the VPC endpoint with which the security group will be associated.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
}

type SecurityGroupAssociationState struct {
	// Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
	ReplaceDefaultAssociation pulumi.BoolPtrInput
	// The ID of the security group to be associated with the VPC endpoint.
	SecurityGroupId pulumi.StringPtrInput
	// The ID of the VPC endpoint with which the security group will be associated.
	VpcEndpointId pulumi.StringPtrInput
}

func (SecurityGroupAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupAssociationState)(nil)).Elem()
}

type securityGroupAssociationArgs struct {
	// Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
	ReplaceDefaultAssociation *bool `pulumi:"replaceDefaultAssociation"`
	// The ID of the security group to be associated with the VPC endpoint.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The ID of the VPC endpoint with which the security group will be associated.
	VpcEndpointId string `pulumi:"vpcEndpointId"`
}

// The set of arguments for constructing a SecurityGroupAssociation resource.
type SecurityGroupAssociationArgs struct {
	// Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
	ReplaceDefaultAssociation pulumi.BoolPtrInput
	// The ID of the security group to be associated with the VPC endpoint.
	SecurityGroupId pulumi.StringInput
	// The ID of the VPC endpoint with which the security group will be associated.
	VpcEndpointId pulumi.StringInput
}

func (SecurityGroupAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupAssociationArgs)(nil)).Elem()
}

type SecurityGroupAssociationInput interface {
	pulumi.Input

	ToSecurityGroupAssociationOutput() SecurityGroupAssociationOutput
	ToSecurityGroupAssociationOutputWithContext(ctx context.Context) SecurityGroupAssociationOutput
}

func (*SecurityGroupAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGroupAssociation)(nil)).Elem()
}

func (i *SecurityGroupAssociation) ToSecurityGroupAssociationOutput() SecurityGroupAssociationOutput {
	return i.ToSecurityGroupAssociationOutputWithContext(context.Background())
}

func (i *SecurityGroupAssociation) ToSecurityGroupAssociationOutputWithContext(ctx context.Context) SecurityGroupAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupAssociationOutput)
}

// SecurityGroupAssociationArrayInput is an input type that accepts SecurityGroupAssociationArray and SecurityGroupAssociationArrayOutput values.
// You can construct a concrete instance of `SecurityGroupAssociationArrayInput` via:
//
//	SecurityGroupAssociationArray{ SecurityGroupAssociationArgs{...} }
type SecurityGroupAssociationArrayInput interface {
	pulumi.Input

	ToSecurityGroupAssociationArrayOutput() SecurityGroupAssociationArrayOutput
	ToSecurityGroupAssociationArrayOutputWithContext(context.Context) SecurityGroupAssociationArrayOutput
}

type SecurityGroupAssociationArray []SecurityGroupAssociationInput

func (SecurityGroupAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGroupAssociation)(nil)).Elem()
}

func (i SecurityGroupAssociationArray) ToSecurityGroupAssociationArrayOutput() SecurityGroupAssociationArrayOutput {
	return i.ToSecurityGroupAssociationArrayOutputWithContext(context.Background())
}

func (i SecurityGroupAssociationArray) ToSecurityGroupAssociationArrayOutputWithContext(ctx context.Context) SecurityGroupAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupAssociationArrayOutput)
}

// SecurityGroupAssociationMapInput is an input type that accepts SecurityGroupAssociationMap and SecurityGroupAssociationMapOutput values.
// You can construct a concrete instance of `SecurityGroupAssociationMapInput` via:
//
//	SecurityGroupAssociationMap{ "key": SecurityGroupAssociationArgs{...} }
type SecurityGroupAssociationMapInput interface {
	pulumi.Input

	ToSecurityGroupAssociationMapOutput() SecurityGroupAssociationMapOutput
	ToSecurityGroupAssociationMapOutputWithContext(context.Context) SecurityGroupAssociationMapOutput
}

type SecurityGroupAssociationMap map[string]SecurityGroupAssociationInput

func (SecurityGroupAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGroupAssociation)(nil)).Elem()
}

func (i SecurityGroupAssociationMap) ToSecurityGroupAssociationMapOutput() SecurityGroupAssociationMapOutput {
	return i.ToSecurityGroupAssociationMapOutputWithContext(context.Background())
}

func (i SecurityGroupAssociationMap) ToSecurityGroupAssociationMapOutputWithContext(ctx context.Context) SecurityGroupAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupAssociationMapOutput)
}

type SecurityGroupAssociationOutput struct{ *pulumi.OutputState }

func (SecurityGroupAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGroupAssociation)(nil)).Elem()
}

func (o SecurityGroupAssociationOutput) ToSecurityGroupAssociationOutput() SecurityGroupAssociationOutput {
	return o
}

func (o SecurityGroupAssociationOutput) ToSecurityGroupAssociationOutputWithContext(ctx context.Context) SecurityGroupAssociationOutput {
	return o
}

// Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
func (o SecurityGroupAssociationOutput) ReplaceDefaultAssociation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecurityGroupAssociation) pulumi.BoolPtrOutput { return v.ReplaceDefaultAssociation }).(pulumi.BoolPtrOutput)
}

// The ID of the security group to be associated with the VPC endpoint.
func (o SecurityGroupAssociationOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroupAssociation) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The ID of the VPC endpoint with which the security group will be associated.
func (o SecurityGroupAssociationOutput) VpcEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroupAssociation) pulumi.StringOutput { return v.VpcEndpointId }).(pulumi.StringOutput)
}

type SecurityGroupAssociationArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGroupAssociation)(nil)).Elem()
}

func (o SecurityGroupAssociationArrayOutput) ToSecurityGroupAssociationArrayOutput() SecurityGroupAssociationArrayOutput {
	return o
}

func (o SecurityGroupAssociationArrayOutput) ToSecurityGroupAssociationArrayOutputWithContext(ctx context.Context) SecurityGroupAssociationArrayOutput {
	return o
}

func (o SecurityGroupAssociationArrayOutput) Index(i pulumi.IntInput) SecurityGroupAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityGroupAssociation {
		return vs[0].([]*SecurityGroupAssociation)[vs[1].(int)]
	}).(SecurityGroupAssociationOutput)
}

type SecurityGroupAssociationMapOutput struct{ *pulumi.OutputState }

func (SecurityGroupAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGroupAssociation)(nil)).Elem()
}

func (o SecurityGroupAssociationMapOutput) ToSecurityGroupAssociationMapOutput() SecurityGroupAssociationMapOutput {
	return o
}

func (o SecurityGroupAssociationMapOutput) ToSecurityGroupAssociationMapOutputWithContext(ctx context.Context) SecurityGroupAssociationMapOutput {
	return o
}

func (o SecurityGroupAssociationMapOutput) MapIndex(k pulumi.StringInput) SecurityGroupAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityGroupAssociation {
		return vs[0].(map[string]*SecurityGroupAssociation)[vs[1].(string)]
	}).(SecurityGroupAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupAssociationInput)(nil)).Elem(), &SecurityGroupAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupAssociationArrayInput)(nil)).Elem(), SecurityGroupAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupAssociationMapInput)(nil)).Elem(), SecurityGroupAssociationMap{})
	pulumi.RegisterOutputType(SecurityGroupAssociationOutput{})
	pulumi.RegisterOutputType(SecurityGroupAssociationArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupAssociationMapOutput{})
}
