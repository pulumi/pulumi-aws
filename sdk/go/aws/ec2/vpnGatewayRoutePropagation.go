// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Requests automatic route propagation between a VPN gateway and a route table.
// 
// ~> **Note:** This resource should not be used with a route table that has
// the `propagating_vgws` argument set. If that argument is set, any route
// propagation not explicitly listed in its value will be removed.
type VpnGatewayRoutePropagation struct {
	s *pulumi.ResourceState
}

// NewVpnGatewayRoutePropagation registers a new resource with the given unique name, arguments, and options.
func NewVpnGatewayRoutePropagation(ctx *pulumi.Context,
	name string, args *VpnGatewayRoutePropagationArgs, opts ...pulumi.ResourceOpt) (*VpnGatewayRoutePropagation, error) {
	if args == nil || args.RouteTableId == nil {
		return nil, errors.New("missing required argument 'RouteTableId'")
	}
	if args == nil || args.VpnGatewayId == nil {
		return nil, errors.New("missing required argument 'VpnGatewayId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["routeTableId"] = nil
		inputs["vpnGatewayId"] = nil
	} else {
		inputs["routeTableId"] = args.RouteTableId
		inputs["vpnGatewayId"] = args.VpnGatewayId
	}
	s, err := ctx.RegisterResource("aws:ec2/vpnGatewayRoutePropagation:VpnGatewayRoutePropagation", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VpnGatewayRoutePropagation{s: s}, nil
}

// GetVpnGatewayRoutePropagation gets an existing VpnGatewayRoutePropagation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnGatewayRoutePropagation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *VpnGatewayRoutePropagationState, opts ...pulumi.ResourceOpt) (*VpnGatewayRoutePropagation, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["routeTableId"] = state.RouteTableId
		inputs["vpnGatewayId"] = state.VpnGatewayId
	}
	s, err := ctx.ReadResource("aws:ec2/vpnGatewayRoutePropagation:VpnGatewayRoutePropagation", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VpnGatewayRoutePropagation{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *VpnGatewayRoutePropagation) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *VpnGatewayRoutePropagation) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The id of the `aws_route_table` to propagate routes into.
func (r *VpnGatewayRoutePropagation) RouteTableId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["routeTableId"])
}

// The id of the `aws_vpn_gateway` to propagate routes from.
func (r *VpnGatewayRoutePropagation) VpnGatewayId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vpnGatewayId"])
}

// Input properties used for looking up and filtering VpnGatewayRoutePropagation resources.
type VpnGatewayRoutePropagationState struct {
	// The id of the `aws_route_table` to propagate routes into.
	RouteTableId interface{}
	// The id of the `aws_vpn_gateway` to propagate routes from.
	VpnGatewayId interface{}
}

// The set of arguments for constructing a VpnGatewayRoutePropagation resource.
type VpnGatewayRoutePropagationArgs struct {
	// The id of the `aws_route_table` to propagate routes into.
	RouteTableId interface{}
	// The id of the `aws_vpn_gateway` to propagate routes from.
	VpnGatewayId interface{}
}
