// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetNetworkAcls(ctx *pulumi.Context, args *GetNetworkAclsArgs, opts ...pulumi.InvokeOption) (*GetNetworkAclsResult, error) {
	var rv GetNetworkAclsResult
	err := ctx.Invoke("aws:ec2/getNetworkAcls:getNetworkAcls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkAcls.
type GetNetworkAclsArgs struct {
	// Custom filter block as described below.
	Filters []GetNetworkAclsFilter `pulumi:"filters"`
	// A map of tags, each pair of which must exactly match
	// a pair on the desired network ACLs.
	Tags map[string]string `pulumi:"tags"`
	// The VPC ID that you want to filter from.
	VpcId *string `pulumi:"vpcId"`
}

// A collection of values returned by getNetworkAcls.
type GetNetworkAclsResult struct {
	Filters []GetNetworkAclsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of all the network ACL ids found. This data source will fail if none are found.
	Ids   []string          `pulumi:"ids"`
	Tags  map[string]string `pulumi:"tags"`
	VpcId *string           `pulumi:"vpcId"`
}

func GetNetworkAclsOutput(ctx *pulumi.Context, args GetNetworkAclsOutputArgs, opts ...pulumi.InvokeOption) GetNetworkAclsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNetworkAclsResult, error) {
			args := v.(GetNetworkAclsArgs)
			r, err := GetNetworkAcls(ctx, &args, opts...)
			return *r, err
		}).(GetNetworkAclsResultOutput)
}

// A collection of arguments for invoking getNetworkAcls.
type GetNetworkAclsOutputArgs struct {
	// Custom filter block as described below.
	Filters GetNetworkAclsFilterArrayInput `pulumi:"filters"`
	// A map of tags, each pair of which must exactly match
	// a pair on the desired network ACLs.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The VPC ID that you want to filter from.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetNetworkAclsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkAcls.
type GetNetworkAclsResultOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsResult)(nil)).Elem()
}

func (o GetNetworkAclsResultOutput) ToGetNetworkAclsResultOutput() GetNetworkAclsResultOutput {
	return o
}

func (o GetNetworkAclsResultOutput) ToGetNetworkAclsResultOutputWithContext(ctx context.Context) GetNetworkAclsResultOutput {
	return o
}

func (o GetNetworkAclsResultOutput) Filters() GetNetworkAclsFilterArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) []GetNetworkAclsFilter { return v.Filters }).(GetNetworkAclsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNetworkAclsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of all the network ACL ids found. This data source will fail if none are found.
func (o GetNetworkAclsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetNetworkAclsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GetNetworkAclsResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetworkAclsResultOutput{})
}
