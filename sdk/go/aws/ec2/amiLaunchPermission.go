// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Adds launch permission to Amazon Machine Image (AMI) from another AWS account.
type AmiLaunchPermission struct {
	pulumi.CustomResourceState

	// An AWS Account ID to add launch permissions.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// A region-unique name for the AMI.
	ImageId pulumi.StringOutput `pulumi:"imageId"`
}

// NewAmiLaunchPermission registers a new resource with the given unique name, arguments, and options.
func NewAmiLaunchPermission(ctx *pulumi.Context,
	name string, args *AmiLaunchPermissionArgs, opts ...pulumi.ResourceOption) (*AmiLaunchPermission, error) {
	if args == nil || args.AccountId == nil {
		return nil, errors.New("missing required argument 'AccountId'")
	}
	if args == nil || args.ImageId == nil {
		return nil, errors.New("missing required argument 'ImageId'")
	}
	if args == nil {
		args = &AmiLaunchPermissionArgs{}
	}
	var resource AmiLaunchPermission
	err := ctx.RegisterResource("aws:ec2/amiLaunchPermission:AmiLaunchPermission", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAmiLaunchPermission gets an existing AmiLaunchPermission resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAmiLaunchPermission(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AmiLaunchPermissionState, opts ...pulumi.ResourceOption) (*AmiLaunchPermission, error) {
	var resource AmiLaunchPermission
	err := ctx.ReadResource("aws:ec2/amiLaunchPermission:AmiLaunchPermission", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AmiLaunchPermission resources.
type amiLaunchPermissionState struct {
	// An AWS Account ID to add launch permissions.
	AccountId *string `pulumi:"accountId"`
	// A region-unique name for the AMI.
	ImageId *string `pulumi:"imageId"`
}

type AmiLaunchPermissionState struct {
	// An AWS Account ID to add launch permissions.
	AccountId pulumi.StringPtrInput
	// A region-unique name for the AMI.
	ImageId pulumi.StringPtrInput
}

func (AmiLaunchPermissionState) ElementType() reflect.Type {
	return reflect.TypeOf((*amiLaunchPermissionState)(nil)).Elem()
}

type amiLaunchPermissionArgs struct {
	// An AWS Account ID to add launch permissions.
	AccountId string `pulumi:"accountId"`
	// A region-unique name for the AMI.
	ImageId string `pulumi:"imageId"`
}

// The set of arguments for constructing a AmiLaunchPermission resource.
type AmiLaunchPermissionArgs struct {
	// An AWS Account ID to add launch permissions.
	AccountId pulumi.StringInput
	// A region-unique name for the AMI.
	ImageId pulumi.StringInput
}

func (AmiLaunchPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*amiLaunchPermissionArgs)(nil)).Elem()
}
