// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the ID of an Amazon EC2 Instance for use in other resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ec2.LookupInstance(ctx, &ec2.LookupInstanceArgs{
//				Filters: []ec2.GetInstanceFilter{
//					ec2.GetInstanceFilter{
//						Name: "image-id",
//						Values: []string{
//							"ami-xxxxxxxx",
//						},
//					},
//					ec2.GetInstanceFilter{
//						Name: "tag:Name",
//						Values: []string{
//							"instance-name-tag",
//						},
//					},
//				},
//				InstanceId: pulumi.StringRef("i-instanceid"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInstance(ctx *pulumi.Context, args *LookupInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInstanceResult, error) {
	var rv LookupInstanceResult
	err := ctx.Invoke("aws:ec2/getInstance:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstance.
type LookupInstanceArgs struct {
	// One or more name/value pairs to use as filters. There are
	// several valid keys, for a full reference, check out
	// [describe-instances in the AWS CLI reference][1].
	Filters []GetInstanceFilter `pulumi:"filters"`
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData *bool `pulumi:"getPasswordData"`
	// Retrieve Base64 encoded User Data contents into the `userDataBase64` attribute. A SHA-1 hash of the User Data contents will always be present in the `userData` attribute. Defaults to `false`.
	GetUserData *bool `pulumi:"getUserData"`
	// Specify the exact Instance ID with which to populate the data source.
	InstanceId *string `pulumi:"instanceId"`
	// Map of tags, each pair of which must
	// exactly match a pair on the desired Instance.
	InstanceTags map[string]string `pulumi:"instanceTags"`
	// Map of tags assigned to the Instance.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getInstance.
type LookupInstanceResult struct {
	// ID of the AMI used to launch the instance.
	Ami string `pulumi:"ami"`
	// ARN of the instance.
	Arn string `pulumi:"arn"`
	// Whether or not the Instance is associated with a public IP address or not (Boolean).
	AssociatePublicIpAddress bool `pulumi:"associatePublicIpAddress"`
	// Availability zone of the Instance.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Credit specification of the Instance.
	CreditSpecifications []GetInstanceCreditSpecification `pulumi:"creditSpecifications"`
	// Whether or not EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection) is enabled (Boolean).
	DisableApiStop bool `pulumi:"disableApiStop"`
	// Whether or not [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination) is enabled (Boolean).
	DisableApiTermination bool `pulumi:"disableApiTermination"`
	// EBS block device mappings of the Instance.
	EbsBlockDevices []GetInstanceEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Whether the Instance is EBS optimized or not (Boolean).
	EbsOptimized bool `pulumi:"ebsOptimized"`
	// Enclave options of the instance.
	EnclaveOptions []GetInstanceEnclaveOption `pulumi:"enclaveOptions"`
	// Ephemeral block device mappings of the Instance.
	EphemeralBlockDevices []GetInstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	Filters               []GetInstanceFilter               `pulumi:"filters"`
	GetPasswordData       *bool                             `pulumi:"getPasswordData"`
	GetUserData           *bool                             `pulumi:"getUserData"`
	// ID of the dedicated host the instance will be assigned to.
	HostId string `pulumi:"hostId"`
	// ARN of the host resource group the instance is associated with.
	HostResourceGroupArn string `pulumi:"hostResourceGroupArn"`
	// Name of the instance profile associated with the Instance.
	IamInstanceProfile string `pulumi:"iamInstanceProfile"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	InstanceId *string `pulumi:"instanceId"`
	// State of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.
	InstanceState string            `pulumi:"instanceState"`
	InstanceTags  map[string]string `pulumi:"instanceTags"`
	// Type of the Instance.
	InstanceType string `pulumi:"instanceType"`
	// IPv6 addresses associated to the Instance, if applicable. **NOTE**: Unlike the IPv4 address, this doesn't change if you attach an EIP to the instance.
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// Key name of the Instance.
	KeyName string `pulumi:"keyName"`
	// Maintenance and recovery options for the instance.
	MaintenanceOptions []GetInstanceMaintenanceOption `pulumi:"maintenanceOptions"`
	// Metadata options of the Instance.
	MetadataOptions []GetInstanceMetadataOption `pulumi:"metadataOptions"`
	// Whether detailed monitoring is enabled or disabled for the Instance (Boolean).
	Monitoring bool `pulumi:"monitoring"`
	// ID of the network interface that was created with the Instance.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// ARN of the Outpost.
	OutpostArn string `pulumi:"outpostArn"`
	// Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `getPasswordData` is true. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	PasswordData string `pulumi:"passwordData"`
	// Placement group of the Instance.
	PlacementGroup string `pulumi:"placementGroup"`
	// Number of the partition the instance is in.
	PlacementPartitionNumber int `pulumi:"placementPartitionNumber"`
	// Private DNS name assigned to the Instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
	PrivateDns string `pulumi:"privateDns"`
	// Options for the instance hostname.
	PrivateDnsNameOptions []GetInstancePrivateDnsNameOption `pulumi:"privateDnsNameOptions"`
	// Private IP address assigned to the Instance.
	PrivateIp string `pulumi:"privateIp"`
	// Public DNS name assigned to the Instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
	PublicDns string `pulumi:"publicDns"`
	// Public IP address assigned to the Instance, if applicable. **NOTE**: If you are using an `ec2.Eip` with your instance, you should refer to the EIP's address directly and not use `publicIp`, as this field will change after the EIP is attached.
	PublicIp string `pulumi:"publicIp"`
	// Root block device mappings of the Instance
	RootBlockDevices []GetInstanceRootBlockDevice `pulumi:"rootBlockDevices"`
	// Secondary private IPv4 addresses assigned to the instance's primary network interface (eth0) in a VPC.
	SecondaryPrivateIps []string `pulumi:"secondaryPrivateIps"`
	// Associated security groups.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Whether the network interface performs source/destination checking (Boolean).
	SourceDestCheck bool `pulumi:"sourceDestCheck"`
	// VPC subnet ID.
	SubnetId string `pulumi:"subnetId"`
	// Map of tags assigned to the Instance.
	Tags map[string]string `pulumi:"tags"`
	// Tenancy of the instance: `dedicated`, `default`, `host`.
	Tenancy string `pulumi:"tenancy"`
	// SHA-1 hash of User Data supplied to the Instance.
	UserData string `pulumi:"userData"`
	// Base64 encoded contents of User Data supplied to the Instance. This attribute is only exported if `getUserData` is true.
	UserDataBase64 string `pulumi:"userDataBase64"`
	// Associated security groups in a non-default VPC.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

func LookupInstanceOutput(ctx *pulumi.Context, args LookupInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInstanceResult, error) {
			args := v.(LookupInstanceArgs)
			r, err := LookupInstance(ctx, &args, opts...)
			var s LookupInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInstanceResultOutput)
}

// A collection of arguments for invoking getInstance.
type LookupInstanceOutputArgs struct {
	// One or more name/value pairs to use as filters. There are
	// several valid keys, for a full reference, check out
	// [describe-instances in the AWS CLI reference][1].
	Filters GetInstanceFilterArrayInput `pulumi:"filters"`
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData pulumi.BoolPtrInput `pulumi:"getPasswordData"`
	// Retrieve Base64 encoded User Data contents into the `userDataBase64` attribute. A SHA-1 hash of the User Data contents will always be present in the `userData` attribute. Defaults to `false`.
	GetUserData pulumi.BoolPtrInput `pulumi:"getUserData"`
	// Specify the exact Instance ID with which to populate the data source.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Map of tags, each pair of which must
	// exactly match a pair on the desired Instance.
	InstanceTags pulumi.StringMapInput `pulumi:"instanceTags"`
	// Map of tags assigned to the Instance.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getInstance.
type LookupInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceResult)(nil)).Elem()
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutput() LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutputWithContext(ctx context.Context) LookupInstanceResultOutput {
	return o
}

// ID of the AMI used to launch the instance.
func (o LookupInstanceResultOutput) Ami() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Ami }).(pulumi.StringOutput)
}

// ARN of the instance.
func (o LookupInstanceResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Whether or not the Instance is associated with a public IP address or not (Boolean).
func (o LookupInstanceResultOutput) AssociatePublicIpAddress() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.AssociatePublicIpAddress }).(pulumi.BoolOutput)
}

// Availability zone of the Instance.
func (o LookupInstanceResultOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Credit specification of the Instance.
func (o LookupInstanceResultOutput) CreditSpecifications() GetInstanceCreditSpecificationArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceCreditSpecification { return v.CreditSpecifications }).(GetInstanceCreditSpecificationArrayOutput)
}

// Whether or not EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection) is enabled (Boolean).
func (o LookupInstanceResultOutput) DisableApiStop() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.DisableApiStop }).(pulumi.BoolOutput)
}

// Whether or not [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination) is enabled (Boolean).
func (o LookupInstanceResultOutput) DisableApiTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.DisableApiTermination }).(pulumi.BoolOutput)
}

// EBS block device mappings of the Instance.
func (o LookupInstanceResultOutput) EbsBlockDevices() GetInstanceEbsBlockDeviceArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceEbsBlockDevice { return v.EbsBlockDevices }).(GetInstanceEbsBlockDeviceArrayOutput)
}

// Whether the Instance is EBS optimized or not (Boolean).
func (o LookupInstanceResultOutput) EbsOptimized() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.EbsOptimized }).(pulumi.BoolOutput)
}

// Enclave options of the instance.
func (o LookupInstanceResultOutput) EnclaveOptions() GetInstanceEnclaveOptionArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceEnclaveOption { return v.EnclaveOptions }).(GetInstanceEnclaveOptionArrayOutput)
}

// Ephemeral block device mappings of the Instance.
func (o LookupInstanceResultOutput) EphemeralBlockDevices() GetInstanceEphemeralBlockDeviceArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceEphemeralBlockDevice { return v.EphemeralBlockDevices }).(GetInstanceEphemeralBlockDeviceArrayOutput)
}

func (o LookupInstanceResultOutput) Filters() GetInstanceFilterArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceFilter { return v.Filters }).(GetInstanceFilterArrayOutput)
}

func (o LookupInstanceResultOutput) GetPasswordData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *bool { return v.GetPasswordData }).(pulumi.BoolPtrOutput)
}

func (o LookupInstanceResultOutput) GetUserData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *bool { return v.GetUserData }).(pulumi.BoolPtrOutput)
}

// ID of the dedicated host the instance will be assigned to.
func (o LookupInstanceResultOutput) HostId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.HostId }).(pulumi.StringOutput)
}

// ARN of the host resource group the instance is associated with.
func (o LookupInstanceResultOutput) HostResourceGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.HostResourceGroupArn }).(pulumi.StringOutput)
}

// Name of the instance profile associated with the Instance.
func (o LookupInstanceResultOutput) IamInstanceProfile() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.IamInstanceProfile }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// State of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.
func (o LookupInstanceResultOutput) InstanceState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.InstanceState }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) InstanceTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.InstanceTags }).(pulumi.StringMapOutput)
}

// Type of the Instance.
func (o LookupInstanceResultOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.InstanceType }).(pulumi.StringOutput)
}

// IPv6 addresses associated to the Instance, if applicable. **NOTE**: Unlike the IPv4 address, this doesn't change if you attach an EIP to the instance.
func (o LookupInstanceResultOutput) Ipv6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []string { return v.Ipv6Addresses }).(pulumi.StringArrayOutput)
}

// Key name of the Instance.
func (o LookupInstanceResultOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.KeyName }).(pulumi.StringOutput)
}

// Maintenance and recovery options for the instance.
func (o LookupInstanceResultOutput) MaintenanceOptions() GetInstanceMaintenanceOptionArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceMaintenanceOption { return v.MaintenanceOptions }).(GetInstanceMaintenanceOptionArrayOutput)
}

// Metadata options of the Instance.
func (o LookupInstanceResultOutput) MetadataOptions() GetInstanceMetadataOptionArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceMetadataOption { return v.MetadataOptions }).(GetInstanceMetadataOptionArrayOutput)
}

// Whether detailed monitoring is enabled or disabled for the Instance (Boolean).
func (o LookupInstanceResultOutput) Monitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.Monitoring }).(pulumi.BoolOutput)
}

// ID of the network interface that was created with the Instance.
func (o LookupInstanceResultOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// ARN of the Outpost.
func (o LookupInstanceResultOutput) OutpostArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.OutpostArn }).(pulumi.StringOutput)
}

// Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `getPasswordData` is true. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
func (o LookupInstanceResultOutput) PasswordData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.PasswordData }).(pulumi.StringOutput)
}

// Placement group of the Instance.
func (o LookupInstanceResultOutput) PlacementGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.PlacementGroup }).(pulumi.StringOutput)
}

// Number of the partition the instance is in.
func (o LookupInstanceResultOutput) PlacementPartitionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInstanceResult) int { return v.PlacementPartitionNumber }).(pulumi.IntOutput)
}

// Private DNS name assigned to the Instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
func (o LookupInstanceResultOutput) PrivateDns() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.PrivateDns }).(pulumi.StringOutput)
}

// Options for the instance hostname.
func (o LookupInstanceResultOutput) PrivateDnsNameOptions() GetInstancePrivateDnsNameOptionArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstancePrivateDnsNameOption { return v.PrivateDnsNameOptions }).(GetInstancePrivateDnsNameOptionArrayOutput)
}

// Private IP address assigned to the Instance.
func (o LookupInstanceResultOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// Public DNS name assigned to the Instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
func (o LookupInstanceResultOutput) PublicDns() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.PublicDns }).(pulumi.StringOutput)
}

// Public IP address assigned to the Instance, if applicable. **NOTE**: If you are using an `ec2.Eip` with your instance, you should refer to the EIP's address directly and not use `publicIp`, as this field will change after the EIP is attached.
func (o LookupInstanceResultOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.PublicIp }).(pulumi.StringOutput)
}

// Root block device mappings of the Instance
func (o LookupInstanceResultOutput) RootBlockDevices() GetInstanceRootBlockDeviceArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceRootBlockDevice { return v.RootBlockDevices }).(GetInstanceRootBlockDeviceArrayOutput)
}

// Secondary private IPv4 addresses assigned to the instance's primary network interface (eth0) in a VPC.
func (o LookupInstanceResultOutput) SecondaryPrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []string { return v.SecondaryPrivateIps }).(pulumi.StringArrayOutput)
}

// Associated security groups.
func (o LookupInstanceResultOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// Whether the network interface performs source/destination checking (Boolean).
func (o LookupInstanceResultOutput) SourceDestCheck() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.SourceDestCheck }).(pulumi.BoolOutput)
}

// VPC subnet ID.
func (o LookupInstanceResultOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Map of tags assigned to the Instance.
func (o LookupInstanceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Tenancy of the instance: `dedicated`, `default`, `host`.
func (o LookupInstanceResultOutput) Tenancy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Tenancy }).(pulumi.StringOutput)
}

// SHA-1 hash of User Data supplied to the Instance.
func (o LookupInstanceResultOutput) UserData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.UserData }).(pulumi.StringOutput)
}

// Base64 encoded contents of User Data supplied to the Instance. This attribute is only exported if `getUserData` is true.
func (o LookupInstanceResultOutput) UserDataBase64() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.UserDataBase64 }).(pulumi.StringOutput)
}

// Associated security groups in a non-default VPC.
func (o LookupInstanceResultOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []string { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceResultOutput{})
}
