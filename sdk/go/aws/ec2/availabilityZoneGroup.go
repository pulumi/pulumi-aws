// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages an EC2 Availability Zone Group, such as updating its opt-in status.
//
// > **NOTE:** This is an advanced resource. The provider will automatically assume management of the EC2 Availability Zone Group without import and perform no actions on removal from configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/ec2"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ec2.NewAvailabilityZoneGroup(ctx, "example", &ec2.AvailabilityZoneGroupArgs{
// 			GroupName:   pulumi.String("us-west-2-lax-1"),
// 			OptInStatus: pulumi.String("opted-in"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// EC2 Availability Zone Groups can be imported using the group name, e.g.
//
// ```sh
//  $ pulumi import aws:ec2/availabilityZoneGroup:AvailabilityZoneGroup example us-west-2-lax-1
// ```
type AvailabilityZoneGroup struct {
	pulumi.CustomResourceState

	// Name of the Availability Zone Group.
	GroupName pulumi.StringOutput `pulumi:"groupName"`
	// Indicates whether to enable or disable Availability Zone Group. Valid values: `opted-in` or `not-opted-in`.
	OptInStatus pulumi.StringOutput `pulumi:"optInStatus"`
}

// NewAvailabilityZoneGroup registers a new resource with the given unique name, arguments, and options.
func NewAvailabilityZoneGroup(ctx *pulumi.Context,
	name string, args *AvailabilityZoneGroupArgs, opts ...pulumi.ResourceOption) (*AvailabilityZoneGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupName == nil {
		return nil, errors.New("invalid value for required argument 'GroupName'")
	}
	if args.OptInStatus == nil {
		return nil, errors.New("invalid value for required argument 'OptInStatus'")
	}
	var resource AvailabilityZoneGroup
	err := ctx.RegisterResource("aws:ec2/availabilityZoneGroup:AvailabilityZoneGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAvailabilityZoneGroup gets an existing AvailabilityZoneGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAvailabilityZoneGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AvailabilityZoneGroupState, opts ...pulumi.ResourceOption) (*AvailabilityZoneGroup, error) {
	var resource AvailabilityZoneGroup
	err := ctx.ReadResource("aws:ec2/availabilityZoneGroup:AvailabilityZoneGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AvailabilityZoneGroup resources.
type availabilityZoneGroupState struct {
	// Name of the Availability Zone Group.
	GroupName *string `pulumi:"groupName"`
	// Indicates whether to enable or disable Availability Zone Group. Valid values: `opted-in` or `not-opted-in`.
	OptInStatus *string `pulumi:"optInStatus"`
}

type AvailabilityZoneGroupState struct {
	// Name of the Availability Zone Group.
	GroupName pulumi.StringPtrInput
	// Indicates whether to enable or disable Availability Zone Group. Valid values: `opted-in` or `not-opted-in`.
	OptInStatus pulumi.StringPtrInput
}

func (AvailabilityZoneGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*availabilityZoneGroupState)(nil)).Elem()
}

type availabilityZoneGroupArgs struct {
	// Name of the Availability Zone Group.
	GroupName string `pulumi:"groupName"`
	// Indicates whether to enable or disable Availability Zone Group. Valid values: `opted-in` or `not-opted-in`.
	OptInStatus string `pulumi:"optInStatus"`
}

// The set of arguments for constructing a AvailabilityZoneGroup resource.
type AvailabilityZoneGroupArgs struct {
	// Name of the Availability Zone Group.
	GroupName pulumi.StringInput
	// Indicates whether to enable or disable Availability Zone Group. Valid values: `opted-in` or `not-opted-in`.
	OptInStatus pulumi.StringInput
}

func (AvailabilityZoneGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*availabilityZoneGroupArgs)(nil)).Elem()
}

type AvailabilityZoneGroupInput interface {
	pulumi.Input

	ToAvailabilityZoneGroupOutput() AvailabilityZoneGroupOutput
	ToAvailabilityZoneGroupOutputWithContext(ctx context.Context) AvailabilityZoneGroupOutput
}

func (AvailabilityZoneGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityZoneGroup)(nil)).Elem()
}

func (i AvailabilityZoneGroup) ToAvailabilityZoneGroupOutput() AvailabilityZoneGroupOutput {
	return i.ToAvailabilityZoneGroupOutputWithContext(context.Background())
}

func (i AvailabilityZoneGroup) ToAvailabilityZoneGroupOutputWithContext(ctx context.Context) AvailabilityZoneGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityZoneGroupOutput)
}

type AvailabilityZoneGroupOutput struct {
	*pulumi.OutputState
}

func (AvailabilityZoneGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityZoneGroupOutput)(nil)).Elem()
}

func (o AvailabilityZoneGroupOutput) ToAvailabilityZoneGroupOutput() AvailabilityZoneGroupOutput {
	return o
}

func (o AvailabilityZoneGroupOutput) ToAvailabilityZoneGroupOutputWithContext(ctx context.Context) AvailabilityZoneGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AvailabilityZoneGroupOutput{})
}
