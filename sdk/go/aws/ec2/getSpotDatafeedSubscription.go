// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > There is only a single spot data feed subscription per account.
//
// Data source for accessing an AWS EC2 (Elastic Compute Cloud) spot data feed subscription.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ec2.LookupSpotDatafeedSubscription(ctx, &ec2.LookupSpotDatafeedSubscriptionArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSpotDatafeedSubscription(ctx *pulumi.Context, args *LookupSpotDatafeedSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupSpotDatafeedSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSpotDatafeedSubscriptionResult
	err := ctx.Invoke("aws:ec2/getSpotDatafeedSubscription:getSpotDatafeedSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSpotDatafeedSubscription.
type LookupSpotDatafeedSubscriptionArgs struct {
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getSpotDatafeedSubscription.
type LookupSpotDatafeedSubscriptionResult struct {
	// The name of the Amazon S3 bucket where the spot instance data feed is located.
	Bucket string `pulumi:"bucket"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The prefix for the data feed files.
	Prefix string `pulumi:"prefix"`
	Region string `pulumi:"region"`
}

func LookupSpotDatafeedSubscriptionOutput(ctx *pulumi.Context, args LookupSpotDatafeedSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupSpotDatafeedSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSpotDatafeedSubscriptionResultOutput, error) {
			args := v.(LookupSpotDatafeedSubscriptionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws:ec2/getSpotDatafeedSubscription:getSpotDatafeedSubscription", args, LookupSpotDatafeedSubscriptionResultOutput{}, options).(LookupSpotDatafeedSubscriptionResultOutput), nil
		}).(LookupSpotDatafeedSubscriptionResultOutput)
}

// A collection of arguments for invoking getSpotDatafeedSubscription.
type LookupSpotDatafeedSubscriptionOutputArgs struct {
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupSpotDatafeedSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpotDatafeedSubscriptionArgs)(nil)).Elem()
}

// A collection of values returned by getSpotDatafeedSubscription.
type LookupSpotDatafeedSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupSpotDatafeedSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpotDatafeedSubscriptionResult)(nil)).Elem()
}

func (o LookupSpotDatafeedSubscriptionResultOutput) ToLookupSpotDatafeedSubscriptionResultOutput() LookupSpotDatafeedSubscriptionResultOutput {
	return o
}

func (o LookupSpotDatafeedSubscriptionResultOutput) ToLookupSpotDatafeedSubscriptionResultOutputWithContext(ctx context.Context) LookupSpotDatafeedSubscriptionResultOutput {
	return o
}

// The name of the Amazon S3 bucket where the spot instance data feed is located.
func (o LookupSpotDatafeedSubscriptionResultOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpotDatafeedSubscriptionResult) string { return v.Bucket }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSpotDatafeedSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpotDatafeedSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The prefix for the data feed files.
func (o LookupSpotDatafeedSubscriptionResultOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpotDatafeedSubscriptionResult) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o LookupSpotDatafeedSubscriptionResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpotDatafeedSubscriptionResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSpotDatafeedSubscriptionResultOutput{})
}
