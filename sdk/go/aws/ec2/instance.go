// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an EC2 instance resource. This allows instances to be created, updated, and deleted.
//
// ## Example Usage
// ### Basic example using AMI lookup
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			ubuntu, err := ec2.LookupAmi(ctx, &ec2.LookupAmiArgs{
//				MostRecent: pulumi.BoolRef(true),
//				Filters: []ec2.GetAmiFilter{
//					ec2.GetAmiFilter{
//						Name: "name",
//						Values: []string{
//							"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*",
//						},
//					},
//					ec2.GetAmiFilter{
//						Name: "virtualization-type",
//						Values: []string{
//							"hvm",
//						},
//					},
//				},
//				Owners: []string{
//					"099720109477",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = ec2.NewInstance(ctx, "web", &ec2.InstanceArgs{
//				Ami:          pulumi.String(ubuntu.Id),
//				InstanceType: pulumi.String("t3.micro"),
//				Tags: pulumi.StringMap{
//					"Name": pulumi.String("HelloWorld"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Network and credit specification example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myVpc, err := ec2.NewVpc(ctx, "myVpc", &ec2.VpcArgs{
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//				Tags: pulumi.StringMap{
//					"Name": pulumi.String("tf-example"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			mySubnet, err := ec2.NewSubnet(ctx, "mySubnet", &ec2.SubnetArgs{
//				VpcId:            myVpc.ID(),
//				CidrBlock:        pulumi.String("172.16.10.0/24"),
//				AvailabilityZone: pulumi.String("us-west-2a"),
//				Tags: pulumi.StringMap{
//					"Name": pulumi.String("tf-example"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooNetworkInterface, err := ec2.NewNetworkInterface(ctx, "fooNetworkInterface", &ec2.NetworkInterfaceArgs{
//				SubnetId: mySubnet.ID(),
//				PrivateIps: pulumi.StringArray{
//					pulumi.String("172.16.10.100"),
//				},
//				Tags: pulumi.StringMap{
//					"Name": pulumi.String("primary_network_interface"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ec2.NewInstance(ctx, "fooInstance", &ec2.InstanceArgs{
//				Ami:          pulumi.String("ami-005e54dee72cc1d00"),
//				InstanceType: pulumi.String("t2.micro"),
//				NetworkInterfaces: ec2.InstanceNetworkInterfaceArray{
//					&ec2.InstanceNetworkInterfaceArgs{
//						NetworkInterfaceId: fooNetworkInterface.ID(),
//						DeviceIndex:        pulumi.Int(0),
//					},
//				},
//				CreditSpecification: &ec2.InstanceCreditSpecificationArgs{
//					CpuCredits: pulumi.String("unlimited"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Host resource group or Licence Manager registered AMI example
//
// A host resource group is a collection of Dedicated Hosts that you can manage as a single entity. As you launch instances, License Manager allocates the hosts and launches instances on them based on the settings that you configured. You can add existing Dedicated Hosts to a host resource group and take advantage of automated host management through License Manager.
//
// > **NOTE:** A dedicated host is automatically associated with a License Manager host resource group if **Allocate hosts automatically** is enabled. Otherwise, use the `hostResourceGroupArn` argument to explicitly associate the instance with the host resource group.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ec2.NewInstance(ctx, "this", &ec2.InstanceArgs{
//				Ami:                  pulumi.String("ami-0dcc1e21636832c5d"),
//				HostResourceGroupArn: pulumi.String("arn:aws:resource-groups:us-west-2:012345678901:group/win-testhost"),
//				InstanceType:         pulumi.String("m5.large"),
//				Tenancy:              pulumi.String("host"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Instances can be imported using the `id`, e.g.,
//
// ```sh
//
//	$ pulumi import aws:ec2/instance:Instance web i-12345678
//
// ```
type Instance struct {
	pulumi.CustomResourceState

	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami pulumi.StringOutput `pulumi:"ami"`
	// ARN of the instance.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress pulumi.BoolOutput `pulumi:"associatePublicIpAddress"`
	// AZ to start the instance in.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	CapacityReservationSpecification InstanceCapacityReservationSpecificationOutput `pulumi:"capacityReservationSpecification"`
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	CpuCoreCount pulumi.IntOutput `pulumi:"cpuCoreCount"`
	// If set to to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	CpuThreadsPerCore pulumi.IntOutput `pulumi:"cpuThreadsPerCore"`
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification InstanceCreditSpecificationPtrOutput `pulumi:"creditSpecification"`
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop pulumi.BoolOutput `pulumi:"disableApiStop"`
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination pulumi.BoolOutput `pulumi:"disableApiTermination"`
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices InstanceEbsBlockDeviceArrayOutput `pulumi:"ebsBlockDevices"`
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized pulumi.BoolOutput `pulumi:"ebsOptimized"`
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions InstanceEnclaveOptionsOutput `pulumi:"enclaveOptions"`
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices InstanceEphemeralBlockDeviceArrayOutput `pulumi:"ephemeralBlockDevices"`
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData pulumi.BoolPtrOutput `pulumi:"getPasswordData"`
	// If true, the launched EC2 instance will support hibernation.
	Hibernation pulumi.BoolPtrOutput `pulumi:"hibernation"`
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId pulumi.StringOutput `pulumi:"hostId"`
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn pulumi.StringOutput `pulumi:"hostResourceGroupArn"`
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile pulumi.StringPtrOutput `pulumi:"iamInstanceProfile"`
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior pulumi.StringOutput `pulumi:"instanceInitiatedShutdownBehavior"`
	// State of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.
	InstanceState pulumi.StringOutput `pulumi:"instanceState"`
	// Instance type to use for the instance. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount pulumi.IntOutput `pulumi:"ipv6AddressCount"`
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses pulumi.StringArrayOutput `pulumi:"ipv6Addresses"`
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName pulumi.StringOutput `pulumi:"keyName"`
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template.
	// See Launch Template Specification below for more details.
	LaunchTemplate InstanceLaunchTemplatePtrOutput `pulumi:"launchTemplate"`
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions InstanceMaintenanceOptionsOutput `pulumi:"maintenanceOptions"`
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions InstanceMetadataOptionsOutput `pulumi:"metadataOptions"`
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring pulumi.BoolOutput `pulumi:"monitoring"`
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces InstanceNetworkInterfaceArrayOutput `pulumi:"networkInterfaces"`
	// ARN of the Outpost the instance is assigned to.
	OutpostArn pulumi.StringOutput `pulumi:"outpostArn"`
	// Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `getPasswordData` is true. Note that this encrypted value will be stored in the state file, as with all exported attributes. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	PasswordData pulumi.StringOutput `pulumi:"passwordData"`
	// Placement Group to start the instance in.
	PlacementGroup pulumi.StringOutput `pulumi:"placementGroup"`
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber pulumi.IntOutput `pulumi:"placementPartitionNumber"`
	// ID of the instance's primary network interface.
	PrimaryNetworkInterfaceId pulumi.StringOutput `pulumi:"primaryNetworkInterfaceId"`
	// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
	PrivateDns pulumi.StringOutput `pulumi:"privateDns"`
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions InstancePrivateDnsNameOptionsOutput `pulumi:"privateDnsNameOptions"`
	// Private IP address to associate with the instance in a VPC.
	PrivateIp pulumi.StringOutput `pulumi:"privateIp"`
	// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
	PublicDns pulumi.StringOutput `pulumi:"publicDns"`
	// Public IP address assigned to the instance, if applicable. **NOTE**: If you are using an `ec2.Eip` with your instance, you should refer to the EIP's address directly and not use `publicIp` as this field will change after the EIP is attached.
	PublicIp pulumi.StringOutput `pulumi:"publicIp"`
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice InstanceRootBlockDeviceOutput `pulumi:"rootBlockDevice"`
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps pulumi.StringArrayOutput `pulumi:"secondaryPrivateIps"`
	// List of security group names to associate with.
	//
	// Deprecated: Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
	SecurityGroups pulumi.StringArrayOutput `pulumi:"securityGroups"`
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck pulumi.BoolPtrOutput `pulumi:"sourceDestCheck"`
	// VPC Subnet ID to launch in.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy pulumi.StringOutput `pulumi:"tenancy"`
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData pulumi.StringOutput `pulumi:"userData"`
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 pulumi.StringOutput `pulumi:"userDataBase64"`
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange pulumi.BoolPtrOutput `pulumi:"userDataReplaceOnChange"`
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	VolumeTags pulumi.StringMapOutput `pulumi:"volumeTags"`
	// List of security group IDs to associate with.
	VpcSecurityGroupIds pulumi.StringArrayOutput `pulumi:"vpcSecurityGroupIds"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		args = &InstanceArgs{}
	}

	var resource Instance
	err := ctx.RegisterResource("aws:ec2/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("aws:ec2/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami *string `pulumi:"ami"`
	// ARN of the instance.
	Arn *string `pulumi:"arn"`
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress *bool `pulumi:"associatePublicIpAddress"`
	// AZ to start the instance in.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	CapacityReservationSpecification *InstanceCapacityReservationSpecification `pulumi:"capacityReservationSpecification"`
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	CpuCoreCount *int `pulumi:"cpuCoreCount"`
	// If set to to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	CpuThreadsPerCore *int `pulumi:"cpuThreadsPerCore"`
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification *InstanceCreditSpecification `pulumi:"creditSpecification"`
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop *bool `pulumi:"disableApiStop"`
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination *bool `pulumi:"disableApiTermination"`
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices []InstanceEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized *bool `pulumi:"ebsOptimized"`
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions *InstanceEnclaveOptions `pulumi:"enclaveOptions"`
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices []InstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData *bool `pulumi:"getPasswordData"`
	// If true, the launched EC2 instance will support hibernation.
	Hibernation *bool `pulumi:"hibernation"`
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId *string `pulumi:"hostId"`
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn *string `pulumi:"hostResourceGroupArn"`
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile interface{} `pulumi:"iamInstanceProfile"`
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior *string `pulumi:"instanceInitiatedShutdownBehavior"`
	// State of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.
	InstanceState *string `pulumi:"instanceState"`
	// Instance type to use for the instance. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType *string `pulumi:"instanceType"`
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName *string `pulumi:"keyName"`
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template.
	// See Launch Template Specification below for more details.
	LaunchTemplate *InstanceLaunchTemplate `pulumi:"launchTemplate"`
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions *InstanceMaintenanceOptions `pulumi:"maintenanceOptions"`
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions *InstanceMetadataOptions `pulumi:"metadataOptions"`
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring *bool `pulumi:"monitoring"`
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces []InstanceNetworkInterface `pulumi:"networkInterfaces"`
	// ARN of the Outpost the instance is assigned to.
	OutpostArn *string `pulumi:"outpostArn"`
	// Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `getPasswordData` is true. Note that this encrypted value will be stored in the state file, as with all exported attributes. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	PasswordData *string `pulumi:"passwordData"`
	// Placement Group to start the instance in.
	PlacementGroup *string `pulumi:"placementGroup"`
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber *int `pulumi:"placementPartitionNumber"`
	// ID of the instance's primary network interface.
	PrimaryNetworkInterfaceId *string `pulumi:"primaryNetworkInterfaceId"`
	// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
	PrivateDns *string `pulumi:"privateDns"`
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions *InstancePrivateDnsNameOptions `pulumi:"privateDnsNameOptions"`
	// Private IP address to associate with the instance in a VPC.
	PrivateIp *string `pulumi:"privateIp"`
	// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
	PublicDns *string `pulumi:"publicDns"`
	// Public IP address assigned to the instance, if applicable. **NOTE**: If you are using an `ec2.Eip` with your instance, you should refer to the EIP's address directly and not use `publicIp` as this field will change after the EIP is attached.
	PublicIp *string `pulumi:"publicIp"`
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice *InstanceRootBlockDevice `pulumi:"rootBlockDevice"`
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps []string `pulumi:"secondaryPrivateIps"`
	// List of security group names to associate with.
	//
	// Deprecated: Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck *bool `pulumi:"sourceDestCheck"`
	// VPC Subnet ID to launch in.
	SubnetId *string `pulumi:"subnetId"`
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy *string `pulumi:"tenancy"`
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData *string `pulumi:"userData"`
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 *string `pulumi:"userDataBase64"`
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange *bool `pulumi:"userDataReplaceOnChange"`
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	VolumeTags map[string]string `pulumi:"volumeTags"`
	// List of security group IDs to associate with.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

type InstanceState struct {
	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami pulumi.StringPtrInput
	// ARN of the instance.
	Arn pulumi.StringPtrInput
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress pulumi.BoolPtrInput
	// AZ to start the instance in.
	AvailabilityZone pulumi.StringPtrInput
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	CapacityReservationSpecification InstanceCapacityReservationSpecificationPtrInput
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	CpuCoreCount pulumi.IntPtrInput
	// If set to to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	CpuThreadsPerCore pulumi.IntPtrInput
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification InstanceCreditSpecificationPtrInput
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop pulumi.BoolPtrInput
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination pulumi.BoolPtrInput
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices InstanceEbsBlockDeviceArrayInput
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized pulumi.BoolPtrInput
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions InstanceEnclaveOptionsPtrInput
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices InstanceEphemeralBlockDeviceArrayInput
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData pulumi.BoolPtrInput
	// If true, the launched EC2 instance will support hibernation.
	Hibernation pulumi.BoolPtrInput
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId pulumi.StringPtrInput
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn pulumi.StringPtrInput
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile pulumi.Input
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior pulumi.StringPtrInput
	// State of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.
	InstanceState pulumi.StringPtrInput
	// Instance type to use for the instance. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType pulumi.StringPtrInput
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount pulumi.IntPtrInput
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses pulumi.StringArrayInput
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName pulumi.StringPtrInput
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template.
	// See Launch Template Specification below for more details.
	LaunchTemplate InstanceLaunchTemplatePtrInput
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions InstanceMaintenanceOptionsPtrInput
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions InstanceMetadataOptionsPtrInput
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring pulumi.BoolPtrInput
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces InstanceNetworkInterfaceArrayInput
	// ARN of the Outpost the instance is assigned to.
	OutpostArn pulumi.StringPtrInput
	// Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `getPasswordData` is true. Note that this encrypted value will be stored in the state file, as with all exported attributes. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	PasswordData pulumi.StringPtrInput
	// Placement Group to start the instance in.
	PlacementGroup pulumi.StringPtrInput
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber pulumi.IntPtrInput
	// ID of the instance's primary network interface.
	PrimaryNetworkInterfaceId pulumi.StringPtrInput
	// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
	PrivateDns pulumi.StringPtrInput
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions InstancePrivateDnsNameOptionsPtrInput
	// Private IP address to associate with the instance in a VPC.
	PrivateIp pulumi.StringPtrInput
	// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
	PublicDns pulumi.StringPtrInput
	// Public IP address assigned to the instance, if applicable. **NOTE**: If you are using an `ec2.Eip` with your instance, you should refer to the EIP's address directly and not use `publicIp` as this field will change after the EIP is attached.
	PublicIp pulumi.StringPtrInput
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice InstanceRootBlockDevicePtrInput
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps pulumi.StringArrayInput
	// List of security group names to associate with.
	//
	// Deprecated: Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
	SecurityGroups pulumi.StringArrayInput
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck pulumi.BoolPtrInput
	// VPC Subnet ID to launch in.
	SubnetId pulumi.StringPtrInput
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapInput
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy pulumi.StringPtrInput
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData pulumi.StringPtrInput
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 pulumi.StringPtrInput
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange pulumi.BoolPtrInput
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	VolumeTags pulumi.StringMapInput
	// List of security group IDs to associate with.
	VpcSecurityGroupIds pulumi.StringArrayInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami *string `pulumi:"ami"`
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress *bool `pulumi:"associatePublicIpAddress"`
	// AZ to start the instance in.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	CapacityReservationSpecification *InstanceCapacityReservationSpecification `pulumi:"capacityReservationSpecification"`
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	CpuCoreCount *int `pulumi:"cpuCoreCount"`
	// If set to to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	CpuThreadsPerCore *int `pulumi:"cpuThreadsPerCore"`
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification *InstanceCreditSpecification `pulumi:"creditSpecification"`
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop *bool `pulumi:"disableApiStop"`
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination *bool `pulumi:"disableApiTermination"`
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices []InstanceEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized *bool `pulumi:"ebsOptimized"`
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions *InstanceEnclaveOptions `pulumi:"enclaveOptions"`
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices []InstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData *bool `pulumi:"getPasswordData"`
	// If true, the launched EC2 instance will support hibernation.
	Hibernation *bool `pulumi:"hibernation"`
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId *string `pulumi:"hostId"`
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn *string `pulumi:"hostResourceGroupArn"`
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile interface{} `pulumi:"iamInstanceProfile"`
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior *string `pulumi:"instanceInitiatedShutdownBehavior"`
	// Instance type to use for the instance. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType *string `pulumi:"instanceType"`
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName *string `pulumi:"keyName"`
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template.
	// See Launch Template Specification below for more details.
	LaunchTemplate *InstanceLaunchTemplate `pulumi:"launchTemplate"`
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions *InstanceMaintenanceOptions `pulumi:"maintenanceOptions"`
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions *InstanceMetadataOptions `pulumi:"metadataOptions"`
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring *bool `pulumi:"monitoring"`
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces []InstanceNetworkInterface `pulumi:"networkInterfaces"`
	// Placement Group to start the instance in.
	PlacementGroup *string `pulumi:"placementGroup"`
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber *int `pulumi:"placementPartitionNumber"`
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions *InstancePrivateDnsNameOptions `pulumi:"privateDnsNameOptions"`
	// Private IP address to associate with the instance in a VPC.
	PrivateIp *string `pulumi:"privateIp"`
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice *InstanceRootBlockDevice `pulumi:"rootBlockDevice"`
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps []string `pulumi:"secondaryPrivateIps"`
	// List of security group names to associate with.
	//
	// Deprecated: Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck *bool `pulumi:"sourceDestCheck"`
	// VPC Subnet ID to launch in.
	SubnetId *string `pulumi:"subnetId"`
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy *string `pulumi:"tenancy"`
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData *string `pulumi:"userData"`
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 *string `pulumi:"userDataBase64"`
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange *bool `pulumi:"userDataReplaceOnChange"`
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	VolumeTags map[string]string `pulumi:"volumeTags"`
	// List of security group IDs to associate with.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami pulumi.StringPtrInput
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress pulumi.BoolPtrInput
	// AZ to start the instance in.
	AvailabilityZone pulumi.StringPtrInput
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	CapacityReservationSpecification InstanceCapacityReservationSpecificationPtrInput
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	CpuCoreCount pulumi.IntPtrInput
	// If set to to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	CpuThreadsPerCore pulumi.IntPtrInput
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification InstanceCreditSpecificationPtrInput
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop pulumi.BoolPtrInput
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination pulumi.BoolPtrInput
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices InstanceEbsBlockDeviceArrayInput
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized pulumi.BoolPtrInput
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions InstanceEnclaveOptionsPtrInput
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices InstanceEphemeralBlockDeviceArrayInput
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData pulumi.BoolPtrInput
	// If true, the launched EC2 instance will support hibernation.
	Hibernation pulumi.BoolPtrInput
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId pulumi.StringPtrInput
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn pulumi.StringPtrInput
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile pulumi.Input
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior pulumi.StringPtrInput
	// Instance type to use for the instance. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType pulumi.StringPtrInput
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount pulumi.IntPtrInput
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses pulumi.StringArrayInput
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName pulumi.StringPtrInput
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template.
	// See Launch Template Specification below for more details.
	LaunchTemplate InstanceLaunchTemplatePtrInput
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions InstanceMaintenanceOptionsPtrInput
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions InstanceMetadataOptionsPtrInput
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring pulumi.BoolPtrInput
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces InstanceNetworkInterfaceArrayInput
	// Placement Group to start the instance in.
	PlacementGroup pulumi.StringPtrInput
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber pulumi.IntPtrInput
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions InstancePrivateDnsNameOptionsPtrInput
	// Private IP address to associate with the instance in a VPC.
	PrivateIp pulumi.StringPtrInput
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice InstanceRootBlockDevicePtrInput
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps pulumi.StringArrayInput
	// List of security group names to associate with.
	//
	// Deprecated: Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
	SecurityGroups pulumi.StringArrayInput
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck pulumi.BoolPtrInput
	// VPC Subnet ID to launch in.
	SubnetId pulumi.StringPtrInput
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy pulumi.StringPtrInput
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData pulumi.StringPtrInput
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 pulumi.StringPtrInput
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange pulumi.BoolPtrInput
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	VolumeTags pulumi.StringMapInput
	// List of security group IDs to associate with.
	VpcSecurityGroupIds pulumi.StringArrayInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
func (o InstanceOutput) Ami() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Ami }).(pulumi.StringOutput)
}

// ARN of the instance.
func (o InstanceOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Whether to associate a public IP address with an instance in a VPC.
func (o InstanceOutput) AssociatePublicIpAddress() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.AssociatePublicIpAddress }).(pulumi.BoolOutput)
}

// AZ to start the instance in.
func (o InstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
func (o InstanceOutput) CapacityReservationSpecification() InstanceCapacityReservationSpecificationOutput {
	return o.ApplyT(func(v *Instance) InstanceCapacityReservationSpecificationOutput {
		return v.CapacityReservationSpecification
	}).(InstanceCapacityReservationSpecificationOutput)
}

// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
func (o InstanceOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// If set to to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
func (o InstanceOutput) CpuThreadsPerCore() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.CpuThreadsPerCore }).(pulumi.IntOutput)
}

// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
func (o InstanceOutput) CreditSpecification() InstanceCreditSpecificationPtrOutput {
	return o.ApplyT(func(v *Instance) InstanceCreditSpecificationPtrOutput { return v.CreditSpecification }).(InstanceCreditSpecificationPtrOutput)
}

// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
func (o InstanceOutput) DisableApiStop() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.DisableApiStop }).(pulumi.BoolOutput)
}

// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
func (o InstanceOutput) DisableApiTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.DisableApiTermination }).(pulumi.BoolOutput)
}

// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
func (o InstanceOutput) EbsBlockDevices() InstanceEbsBlockDeviceArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceEbsBlockDeviceArrayOutput { return v.EbsBlockDevices }).(InstanceEbsBlockDeviceArrayOutput)
}

// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
func (o InstanceOutput) EbsOptimized() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.EbsOptimized }).(pulumi.BoolOutput)
}

// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
func (o InstanceOutput) EnclaveOptions() InstanceEnclaveOptionsOutput {
	return o.ApplyT(func(v *Instance) InstanceEnclaveOptionsOutput { return v.EnclaveOptions }).(InstanceEnclaveOptionsOutput)
}

// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
func (o InstanceOutput) EphemeralBlockDevices() InstanceEphemeralBlockDeviceArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceEphemeralBlockDeviceArrayOutput { return v.EphemeralBlockDevices }).(InstanceEphemeralBlockDeviceArrayOutput)
}

// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
func (o InstanceOutput) GetPasswordData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.GetPasswordData }).(pulumi.BoolPtrOutput)
}

// If true, the launched EC2 instance will support hibernation.
func (o InstanceOutput) Hibernation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.Hibernation }).(pulumi.BoolPtrOutput)
}

// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
func (o InstanceOutput) HostId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.HostId }).(pulumi.StringOutput)
}

// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
func (o InstanceOutput) HostResourceGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.HostResourceGroupArn }).(pulumi.StringOutput)
}

// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
func (o InstanceOutput) IamInstanceProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.IamInstanceProfile }).(pulumi.StringPtrOutput)
}

// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
func (o InstanceOutput) InstanceInitiatedShutdownBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceInitiatedShutdownBehavior }).(pulumi.StringOutput)
}

// State of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.
func (o InstanceOutput) InstanceState() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceState }).(pulumi.StringOutput)
}

// Instance type to use for the instance. Updates to this field will trigger a stop/start of the EC2 instance.
func (o InstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
func (o InstanceOutput) Ipv6AddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.Ipv6AddressCount }).(pulumi.IntOutput)
}

// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
func (o InstanceOutput) Ipv6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.Ipv6Addresses }).(pulumi.StringArrayOutput)
}

// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
func (o InstanceOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.KeyName }).(pulumi.StringOutput)
}

// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template.
// See Launch Template Specification below for more details.
func (o InstanceOutput) LaunchTemplate() InstanceLaunchTemplatePtrOutput {
	return o.ApplyT(func(v *Instance) InstanceLaunchTemplatePtrOutput { return v.LaunchTemplate }).(InstanceLaunchTemplatePtrOutput)
}

// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
func (o InstanceOutput) MaintenanceOptions() InstanceMaintenanceOptionsOutput {
	return o.ApplyT(func(v *Instance) InstanceMaintenanceOptionsOutput { return v.MaintenanceOptions }).(InstanceMaintenanceOptionsOutput)
}

// Customize the metadata options of the instance. See Metadata Options below for more details.
func (o InstanceOutput) MetadataOptions() InstanceMetadataOptionsOutput {
	return o.ApplyT(func(v *Instance) InstanceMetadataOptionsOutput { return v.MetadataOptions }).(InstanceMetadataOptionsOutput)
}

// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
func (o InstanceOutput) Monitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.Monitoring }).(pulumi.BoolOutput)
}

// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
func (o InstanceOutput) NetworkInterfaces() InstanceNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceNetworkInterfaceArrayOutput { return v.NetworkInterfaces }).(InstanceNetworkInterfaceArrayOutput)
}

// ARN of the Outpost the instance is assigned to.
func (o InstanceOutput) OutpostArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.OutpostArn }).(pulumi.StringOutput)
}

// Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `getPasswordData` is true. Note that this encrypted value will be stored in the state file, as with all exported attributes. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
func (o InstanceOutput) PasswordData() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PasswordData }).(pulumi.StringOutput)
}

// Placement Group to start the instance in.
func (o InstanceOutput) PlacementGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PlacementGroup }).(pulumi.StringOutput)
}

// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
func (o InstanceOutput) PlacementPartitionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.PlacementPartitionNumber }).(pulumi.IntOutput)
}

// ID of the instance's primary network interface.
func (o InstanceOutput) PrimaryNetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PrimaryNetworkInterfaceId }).(pulumi.StringOutput)
}

// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
func (o InstanceOutput) PrivateDns() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PrivateDns }).(pulumi.StringOutput)
}

// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
func (o InstanceOutput) PrivateDnsNameOptions() InstancePrivateDnsNameOptionsOutput {
	return o.ApplyT(func(v *Instance) InstancePrivateDnsNameOptionsOutput { return v.PrivateDnsNameOptions }).(InstancePrivateDnsNameOptionsOutput)
}

// Private IP address to associate with the instance in a VPC.
func (o InstanceOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PrivateIp }).(pulumi.StringOutput)
}

// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
func (o InstanceOutput) PublicDns() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PublicDns }).(pulumi.StringOutput)
}

// Public IP address assigned to the instance, if applicable. **NOTE**: If you are using an `ec2.Eip` with your instance, you should refer to the EIP's address directly and not use `publicIp` as this field will change after the EIP is attached.
func (o InstanceOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
func (o InstanceOutput) RootBlockDevice() InstanceRootBlockDeviceOutput {
	return o.ApplyT(func(v *Instance) InstanceRootBlockDeviceOutput { return v.RootBlockDevice }).(InstanceRootBlockDeviceOutput)
}

// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
func (o InstanceOutput) SecondaryPrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.SecondaryPrivateIps }).(pulumi.StringArrayOutput)
}

// List of security group names to associate with.
//
// Deprecated: Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
func (o InstanceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
func (o InstanceOutput) SourceDestCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.SourceDestCheck }).(pulumi.BoolPtrOutput)
}

// VPC Subnet ID to launch in.
func (o InstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o InstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o InstanceOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
func (o InstanceOutput) Tenancy() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Tenancy }).(pulumi.StringOutput)
}

// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
func (o InstanceOutput) UserData() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.UserData }).(pulumi.StringOutput)
}

// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
func (o InstanceOutput) UserDataBase64() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.UserDataBase64 }).(pulumi.StringOutput)
}

// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
func (o InstanceOutput) UserDataReplaceOnChange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.UserDataReplaceOnChange }).(pulumi.BoolPtrOutput)
}

// Map of tags to assign, at instance-creation time, to root and EBS volumes.
func (o InstanceOutput) VolumeTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.VolumeTags }).(pulumi.StringMapOutput)
}

// List of security group IDs to associate with.
func (o InstanceOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
