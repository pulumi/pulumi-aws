// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkInterface struct {
	pulumi.CustomResourceState

	Arn                    pulumi.StringOutput                       `pulumi:"arn"`
	Attachments            NetworkInterfaceAttachmentTypeArrayOutput `pulumi:"attachments"`
	Description            pulumi.StringPtrOutput                    `pulumi:"description"`
	InterfaceType          pulumi.StringOutput                       `pulumi:"interfaceType"`
	Ipv4PrefixCount        pulumi.IntOutput                          `pulumi:"ipv4PrefixCount"`
	Ipv4Prefixes           pulumi.StringArrayOutput                  `pulumi:"ipv4Prefixes"`
	Ipv6AddressCount       pulumi.IntOutput                          `pulumi:"ipv6AddressCount"`
	Ipv6AddressListEnabled pulumi.BoolPtrOutput                      `pulumi:"ipv6AddressListEnabled"`
	Ipv6AddressLists       pulumi.StringArrayOutput                  `pulumi:"ipv6AddressLists"`
	Ipv6Addresses          pulumi.StringArrayOutput                  `pulumi:"ipv6Addresses"`
	Ipv6PrefixCount        pulumi.IntOutput                          `pulumi:"ipv6PrefixCount"`
	Ipv6Prefixes           pulumi.StringArrayOutput                  `pulumi:"ipv6Prefixes"`
	MacAddress             pulumi.StringOutput                       `pulumi:"macAddress"`
	OutpostArn             pulumi.StringOutput                       `pulumi:"outpostArn"`
	OwnerId                pulumi.StringOutput                       `pulumi:"ownerId"`
	PrivateDnsName         pulumi.StringOutput                       `pulumi:"privateDnsName"`
	PrivateIp              pulumi.StringOutput                       `pulumi:"privateIp"`
	PrivateIpListEnabled   pulumi.BoolPtrOutput                      `pulumi:"privateIpListEnabled"`
	PrivateIpLists         pulumi.StringArrayOutput                  `pulumi:"privateIpLists"`
	PrivateIps             pulumi.StringArrayOutput                  `pulumi:"privateIps"`
	PrivateIpsCount        pulumi.IntOutput                          `pulumi:"privateIpsCount"`
	SecurityGroups         pulumi.StringArrayOutput                  `pulumi:"securityGroups"`
	SourceDestCheck        pulumi.BoolPtrOutput                      `pulumi:"sourceDestCheck"`
	SubnetId               pulumi.StringOutput                       `pulumi:"subnetId"`
	Tags                   pulumi.StringMapOutput                    `pulumi:"tags"`
	TagsAll                pulumi.StringMapOutput                    `pulumi:"tagsAll"`
}

// NewNetworkInterface registers a new resource with the given unique name, arguments, and options.
func NewNetworkInterface(ctx *pulumi.Context,
	name string, args *NetworkInterfaceArgs, opts ...pulumi.ResourceOption) (*NetworkInterface, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	var resource NetworkInterface
	err := ctx.RegisterResource("aws:ec2/networkInterface:NetworkInterface", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkInterface gets an existing NetworkInterface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkInterface(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkInterfaceState, opts ...pulumi.ResourceOption) (*NetworkInterface, error) {
	var resource NetworkInterface
	err := ctx.ReadResource("aws:ec2/networkInterface:NetworkInterface", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkInterface resources.
type networkInterfaceState struct {
	Arn                    *string                          `pulumi:"arn"`
	Attachments            []NetworkInterfaceAttachmentType `pulumi:"attachments"`
	Description            *string                          `pulumi:"description"`
	InterfaceType          *string                          `pulumi:"interfaceType"`
	Ipv4PrefixCount        *int                             `pulumi:"ipv4PrefixCount"`
	Ipv4Prefixes           []string                         `pulumi:"ipv4Prefixes"`
	Ipv6AddressCount       *int                             `pulumi:"ipv6AddressCount"`
	Ipv6AddressListEnabled *bool                            `pulumi:"ipv6AddressListEnabled"`
	Ipv6AddressLists       []string                         `pulumi:"ipv6AddressLists"`
	Ipv6Addresses          []string                         `pulumi:"ipv6Addresses"`
	Ipv6PrefixCount        *int                             `pulumi:"ipv6PrefixCount"`
	Ipv6Prefixes           []string                         `pulumi:"ipv6Prefixes"`
	MacAddress             *string                          `pulumi:"macAddress"`
	OutpostArn             *string                          `pulumi:"outpostArn"`
	OwnerId                *string                          `pulumi:"ownerId"`
	PrivateDnsName         *string                          `pulumi:"privateDnsName"`
	PrivateIp              *string                          `pulumi:"privateIp"`
	PrivateIpListEnabled   *bool                            `pulumi:"privateIpListEnabled"`
	PrivateIpLists         []string                         `pulumi:"privateIpLists"`
	PrivateIps             []string                         `pulumi:"privateIps"`
	PrivateIpsCount        *int                             `pulumi:"privateIpsCount"`
	SecurityGroups         []string                         `pulumi:"securityGroups"`
	SourceDestCheck        *bool                            `pulumi:"sourceDestCheck"`
	SubnetId               *string                          `pulumi:"subnetId"`
	Tags                   map[string]string                `pulumi:"tags"`
	TagsAll                map[string]string                `pulumi:"tagsAll"`
}

type NetworkInterfaceState struct {
	Arn                    pulumi.StringPtrInput
	Attachments            NetworkInterfaceAttachmentTypeArrayInput
	Description            pulumi.StringPtrInput
	InterfaceType          pulumi.StringPtrInput
	Ipv4PrefixCount        pulumi.IntPtrInput
	Ipv4Prefixes           pulumi.StringArrayInput
	Ipv6AddressCount       pulumi.IntPtrInput
	Ipv6AddressListEnabled pulumi.BoolPtrInput
	Ipv6AddressLists       pulumi.StringArrayInput
	Ipv6Addresses          pulumi.StringArrayInput
	Ipv6PrefixCount        pulumi.IntPtrInput
	Ipv6Prefixes           pulumi.StringArrayInput
	MacAddress             pulumi.StringPtrInput
	OutpostArn             pulumi.StringPtrInput
	OwnerId                pulumi.StringPtrInput
	PrivateDnsName         pulumi.StringPtrInput
	PrivateIp              pulumi.StringPtrInput
	PrivateIpListEnabled   pulumi.BoolPtrInput
	PrivateIpLists         pulumi.StringArrayInput
	PrivateIps             pulumi.StringArrayInput
	PrivateIpsCount        pulumi.IntPtrInput
	SecurityGroups         pulumi.StringArrayInput
	SourceDestCheck        pulumi.BoolPtrInput
	SubnetId               pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
	TagsAll                pulumi.StringMapInput
}

func (NetworkInterfaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInterfaceState)(nil)).Elem()
}

type networkInterfaceArgs struct {
	Attachments            []NetworkInterfaceAttachmentType `pulumi:"attachments"`
	Description            *string                          `pulumi:"description"`
	InterfaceType          *string                          `pulumi:"interfaceType"`
	Ipv4PrefixCount        *int                             `pulumi:"ipv4PrefixCount"`
	Ipv4Prefixes           []string                         `pulumi:"ipv4Prefixes"`
	Ipv6AddressCount       *int                             `pulumi:"ipv6AddressCount"`
	Ipv6AddressListEnabled *bool                            `pulumi:"ipv6AddressListEnabled"`
	Ipv6AddressLists       []string                         `pulumi:"ipv6AddressLists"`
	Ipv6Addresses          []string                         `pulumi:"ipv6Addresses"`
	Ipv6PrefixCount        *int                             `pulumi:"ipv6PrefixCount"`
	Ipv6Prefixes           []string                         `pulumi:"ipv6Prefixes"`
	PrivateIp              *string                          `pulumi:"privateIp"`
	PrivateIpListEnabled   *bool                            `pulumi:"privateIpListEnabled"`
	PrivateIpLists         []string                         `pulumi:"privateIpLists"`
	PrivateIps             []string                         `pulumi:"privateIps"`
	PrivateIpsCount        *int                             `pulumi:"privateIpsCount"`
	SecurityGroups         []string                         `pulumi:"securityGroups"`
	SourceDestCheck        *bool                            `pulumi:"sourceDestCheck"`
	SubnetId               string                           `pulumi:"subnetId"`
	Tags                   map[string]string                `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkInterface resource.
type NetworkInterfaceArgs struct {
	Attachments            NetworkInterfaceAttachmentTypeArrayInput
	Description            pulumi.StringPtrInput
	InterfaceType          pulumi.StringPtrInput
	Ipv4PrefixCount        pulumi.IntPtrInput
	Ipv4Prefixes           pulumi.StringArrayInput
	Ipv6AddressCount       pulumi.IntPtrInput
	Ipv6AddressListEnabled pulumi.BoolPtrInput
	Ipv6AddressLists       pulumi.StringArrayInput
	Ipv6Addresses          pulumi.StringArrayInput
	Ipv6PrefixCount        pulumi.IntPtrInput
	Ipv6Prefixes           pulumi.StringArrayInput
	PrivateIp              pulumi.StringPtrInput
	PrivateIpListEnabled   pulumi.BoolPtrInput
	PrivateIpLists         pulumi.StringArrayInput
	PrivateIps             pulumi.StringArrayInput
	PrivateIpsCount        pulumi.IntPtrInput
	SecurityGroups         pulumi.StringArrayInput
	SourceDestCheck        pulumi.BoolPtrInput
	SubnetId               pulumi.StringInput
	Tags                   pulumi.StringMapInput
}

func (NetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInterfaceArgs)(nil)).Elem()
}

type NetworkInterfaceInput interface {
	pulumi.Input

	ToNetworkInterfaceOutput() NetworkInterfaceOutput
	ToNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfaceOutput
}

func (*NetworkInterface) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterface)(nil)).Elem()
}

func (i *NetworkInterface) ToNetworkInterfaceOutput() NetworkInterfaceOutput {
	return i.ToNetworkInterfaceOutputWithContext(context.Background())
}

func (i *NetworkInterface) ToNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceOutput)
}

// NetworkInterfaceArrayInput is an input type that accepts NetworkInterfaceArray and NetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceArrayInput` via:
//
//	NetworkInterfaceArray{ NetworkInterfaceArgs{...} }
type NetworkInterfaceArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceArrayOutput() NetworkInterfaceArrayOutput
	ToNetworkInterfaceArrayOutputWithContext(context.Context) NetworkInterfaceArrayOutput
}

type NetworkInterfaceArray []NetworkInterfaceInput

func (NetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkInterface)(nil)).Elem()
}

func (i NetworkInterfaceArray) ToNetworkInterfaceArrayOutput() NetworkInterfaceArrayOutput {
	return i.ToNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceArray) ToNetworkInterfaceArrayOutputWithContext(ctx context.Context) NetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceArrayOutput)
}

// NetworkInterfaceMapInput is an input type that accepts NetworkInterfaceMap and NetworkInterfaceMapOutput values.
// You can construct a concrete instance of `NetworkInterfaceMapInput` via:
//
//	NetworkInterfaceMap{ "key": NetworkInterfaceArgs{...} }
type NetworkInterfaceMapInput interface {
	pulumi.Input

	ToNetworkInterfaceMapOutput() NetworkInterfaceMapOutput
	ToNetworkInterfaceMapOutputWithContext(context.Context) NetworkInterfaceMapOutput
}

type NetworkInterfaceMap map[string]NetworkInterfaceInput

func (NetworkInterfaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkInterface)(nil)).Elem()
}

func (i NetworkInterfaceMap) ToNetworkInterfaceMapOutput() NetworkInterfaceMapOutput {
	return i.ToNetworkInterfaceMapOutputWithContext(context.Background())
}

func (i NetworkInterfaceMap) ToNetworkInterfaceMapOutputWithContext(ctx context.Context) NetworkInterfaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceMapOutput)
}

type NetworkInterfaceOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterface)(nil)).Elem()
}

func (o NetworkInterfaceOutput) ToNetworkInterfaceOutput() NetworkInterfaceOutput {
	return o
}

func (o NetworkInterfaceOutput) ToNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfaceOutput {
	return o
}

func (o NetworkInterfaceOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o NetworkInterfaceOutput) Attachments() NetworkInterfaceAttachmentTypeArrayOutput {
	return o.ApplyT(func(v *NetworkInterface) NetworkInterfaceAttachmentTypeArrayOutput { return v.Attachments }).(NetworkInterfaceAttachmentTypeArrayOutput)
}

func (o NetworkInterfaceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkInterfaceOutput) InterfaceType() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringOutput { return v.InterfaceType }).(pulumi.StringOutput)
}

func (o NetworkInterfaceOutput) Ipv4PrefixCount() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.IntOutput { return v.Ipv4PrefixCount }).(pulumi.IntOutput)
}

func (o NetworkInterfaceOutput) Ipv4Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringArrayOutput { return v.Ipv4Prefixes }).(pulumi.StringArrayOutput)
}

func (o NetworkInterfaceOutput) Ipv6AddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.IntOutput { return v.Ipv6AddressCount }).(pulumi.IntOutput)
}

func (o NetworkInterfaceOutput) Ipv6AddressListEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.BoolPtrOutput { return v.Ipv6AddressListEnabled }).(pulumi.BoolPtrOutput)
}

func (o NetworkInterfaceOutput) Ipv6AddressLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringArrayOutput { return v.Ipv6AddressLists }).(pulumi.StringArrayOutput)
}

func (o NetworkInterfaceOutput) Ipv6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringArrayOutput { return v.Ipv6Addresses }).(pulumi.StringArrayOutput)
}

func (o NetworkInterfaceOutput) Ipv6PrefixCount() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.IntOutput { return v.Ipv6PrefixCount }).(pulumi.IntOutput)
}

func (o NetworkInterfaceOutput) Ipv6Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringArrayOutput { return v.Ipv6Prefixes }).(pulumi.StringArrayOutput)
}

func (o NetworkInterfaceOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringOutput { return v.MacAddress }).(pulumi.StringOutput)
}

func (o NetworkInterfaceOutput) OutpostArn() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringOutput { return v.OutpostArn }).(pulumi.StringOutput)
}

func (o NetworkInterfaceOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

func (o NetworkInterfaceOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringOutput { return v.PrivateDnsName }).(pulumi.StringOutput)
}

func (o NetworkInterfaceOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringOutput { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o NetworkInterfaceOutput) PrivateIpListEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.BoolPtrOutput { return v.PrivateIpListEnabled }).(pulumi.BoolPtrOutput)
}

func (o NetworkInterfaceOutput) PrivateIpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringArrayOutput { return v.PrivateIpLists }).(pulumi.StringArrayOutput)
}

func (o NetworkInterfaceOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringArrayOutput { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

func (o NetworkInterfaceOutput) PrivateIpsCount() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.IntOutput { return v.PrivateIpsCount }).(pulumi.IntOutput)
}

func (o NetworkInterfaceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringArrayOutput { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o NetworkInterfaceOutput) SourceDestCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.BoolPtrOutput { return v.SourceDestCheck }).(pulumi.BoolPtrOutput)
}

func (o NetworkInterfaceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o NetworkInterfaceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o NetworkInterfaceOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type NetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkInterface)(nil)).Elem()
}

func (o NetworkInterfaceArrayOutput) ToNetworkInterfaceArrayOutput() NetworkInterfaceArrayOutput {
	return o
}

func (o NetworkInterfaceArrayOutput) ToNetworkInterfaceArrayOutputWithContext(ctx context.Context) NetworkInterfaceArrayOutput {
	return o
}

func (o NetworkInterfaceArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkInterface {
		return vs[0].([]*NetworkInterface)[vs[1].(int)]
	}).(NetworkInterfaceOutput)
}

type NetworkInterfaceMapOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkInterface)(nil)).Elem()
}

func (o NetworkInterfaceMapOutput) ToNetworkInterfaceMapOutput() NetworkInterfaceMapOutput {
	return o
}

func (o NetworkInterfaceMapOutput) ToNetworkInterfaceMapOutputWithContext(ctx context.Context) NetworkInterfaceMapOutput {
	return o
}

func (o NetworkInterfaceMapOutput) MapIndex(k pulumi.StringInput) NetworkInterfaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkInterface {
		return vs[0].(map[string]*NetworkInterface)[vs[1].(string)]
	}).(NetworkInterfaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceInput)(nil)).Elem(), &NetworkInterface{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceArrayInput)(nil)).Elem(), NetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceMapInput)(nil)).Elem(), NetworkInterfaceMap{})
	pulumi.RegisterOutputType(NetworkInterfaceOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceMapOutput{})
}
