// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an Elastic network interface (ENI) resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ec2.NewNetworkInterface(ctx, "test", &ec2.NetworkInterfaceArgs{
// 			SubnetId: pulumi.Any(aws_subnet.Public_a.Id),
// 			PrivateIps: pulumi.StringArray{
// 				pulumi.String("10.0.0.50"),
// 			},
// 			SecurityGroups: pulumi.StringArray{
// 				pulumi.Any(aws_security_group.Web.Id),
// 			},
// 			Attachments: ec2.NetworkInterfaceAttachmentArray{
// 				&ec2.NetworkInterfaceAttachmentArgs{
// 					Instance:    pulumi.Any(aws_instance.Test.Id),
// 					DeviceIndex: pulumi.Int(1),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### Example of Managing Multiple IPs on a Network Interface
//
// By default, private IPs are managed through the `privateIps` and `privateIpsCount` arguments which manage IPs as a set of IPs that are configured without regard to order. For a new network interface, the same primary IP address is consistently selected from a given set of addresses, regardless of the order provided. However, modifications of the set of addresses of an existing interface will not alter the current primary IP address unless it has been removed from the set.
//
// In order to manage the private IPs as a sequentially ordered list, configure `privateIpListEnabled` to `true` and use `privateIpList` to manage the IPs. This will disable the `privateIps` and `privateIpsCount` settings, which must be removed from the config file but are still exported. Note that changing the first address of `privateIpList`, which is the primary, always requires a new interface.
//
// If you are managing a specific set or list of IPs, instead of just using `privateIpsCount`, this is a potential workflow for also leveraging `privateIpsCount` to have AWS automatically assign additional IP addresses:
//
// 1. Comment out `privateIps`, `privateIpList`, `privateIpListEnabled` in your configuration
// 2. Set the desired `privateIpsCount` (count of the number of secondaries, the primary is not included)
// 3. Apply to assign the extra IPs
// 4. Remove `privateIpsCount` and restore your settings from the first step
// 5. Add the new IPs to your current settings
// 6. Apply again to update the stored state
//
// This process can also be used to remove IP addresses in addition to the option of manually removing them. Adding IP addresses in a manually is more difficult because it requires knowledge of which addresses are available.
//
// ## Import
//
// Network Interfaces can be imported using the `id`, e.g.,
//
// ```sh
//  $ pulumi import aws:ec2/networkInterface:NetworkInterface test eni-e5aa89a3
// ```
type NetworkInterface struct {
	pulumi.CustomResourceState

	// ARN of the network interface.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Configuration block to define the attachment of the ENI. See Attachment below for more details!
	Attachments NetworkInterfaceAttachmentTypeArrayOutput `pulumi:"attachments"`
	// Description for the network interface.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Type of network interface to create. Set to `efa` for Elastic Fabric Adapter. Changing `interfaceType` will cause the resource to be destroyed and re-created.
	InterfaceType pulumi.StringOutput `pulumi:"interfaceType"`
	// Number of IPv4 prefixes that AWS automatically assigns to the network interface.
	Ipv4PrefixCount pulumi.IntOutput `pulumi:"ipv4PrefixCount"`
	// One or more IPv4 prefixes assigned to the network interface.
	Ipv4Prefixes pulumi.StringArrayOutput `pulumi:"ipv4Prefixes"`
	// Number of IPv6 addresses to assign to a network interface. You can't use this option if specifying specific `ipv6Addresses`. If your subnet has the AssignIpv6AddressOnCreation attribute set to `true`, you can specify `0` to override this setting.
	Ipv6AddressCount       pulumi.IntOutput     `pulumi:"ipv6AddressCount"`
	Ipv6AddressListEnabled pulumi.BoolPtrOutput `pulumi:"ipv6AddressListEnabled"`
	// List of private IPs to assign to the ENI in sequential order.
	Ipv6AddressLists pulumi.StringArrayOutput `pulumi:"ipv6AddressLists"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Addresses are assigned without regard to order. You can't use this option if you're specifying `ipv6AddressCount`.
	Ipv6Addresses pulumi.StringArrayOutput `pulumi:"ipv6Addresses"`
	// Number of IPv6 prefixes that AWS automatically assigns to the network interface.
	Ipv6PrefixCount pulumi.IntOutput `pulumi:"ipv6PrefixCount"`
	// One or more IPv6 prefixes assigned to the network interface.
	Ipv6Prefixes pulumi.StringArrayOutput `pulumi:"ipv6Prefixes"`
	// MAC address of the network interface.
	MacAddress pulumi.StringOutput `pulumi:"macAddress"`
	OutpostArn pulumi.StringOutput `pulumi:"outpostArn"`
	// AWS account ID of the owner of the network interface.
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`
	// Private DNS name of the network interface (IPv4).
	PrivateDnsName       pulumi.StringOutput  `pulumi:"privateDnsName"`
	PrivateIp            pulumi.StringOutput  `pulumi:"privateIp"`
	PrivateIpListEnabled pulumi.BoolPtrOutput `pulumi:"privateIpListEnabled"`
	// List of private IPs to assign to the ENI in sequential order. Requires setting `privateIpListEnable` to `true`.
	PrivateIpLists pulumi.StringArrayOutput `pulumi:"privateIpLists"`
	// List of private IPs to assign to the ENI without regard to order.
	PrivateIps pulumi.StringArrayOutput `pulumi:"privateIps"`
	// Number of secondary private IPs to assign to the ENI. The total number of private IPs will be 1 + `privateIpsCount`, as a primary private IP will be assiged to an ENI by default.
	PrivateIpsCount pulumi.IntOutput `pulumi:"privateIpsCount"`
	// List of security group IDs to assign to the ENI.
	SecurityGroups pulumi.StringArrayOutput `pulumi:"securityGroups"`
	// Whether to enable source destination checking for the ENI. Default true.
	SourceDestCheck pulumi.BoolPtrOutput `pulumi:"sourceDestCheck"`
	// Subnet ID to create the ENI in.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block).
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewNetworkInterface registers a new resource with the given unique name, arguments, and options.
func NewNetworkInterface(ctx *pulumi.Context,
	name string, args *NetworkInterfaceArgs, opts ...pulumi.ResourceOption) (*NetworkInterface, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	var resource NetworkInterface
	err := ctx.RegisterResource("aws:ec2/networkInterface:NetworkInterface", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkInterface gets an existing NetworkInterface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkInterface(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkInterfaceState, opts ...pulumi.ResourceOption) (*NetworkInterface, error) {
	var resource NetworkInterface
	err := ctx.ReadResource("aws:ec2/networkInterface:NetworkInterface", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkInterface resources.
type networkInterfaceState struct {
	// ARN of the network interface.
	Arn *string `pulumi:"arn"`
	// Configuration block to define the attachment of the ENI. See Attachment below for more details!
	Attachments []NetworkInterfaceAttachmentType `pulumi:"attachments"`
	// Description for the network interface.
	Description *string `pulumi:"description"`
	// Type of network interface to create. Set to `efa` for Elastic Fabric Adapter. Changing `interfaceType` will cause the resource to be destroyed and re-created.
	InterfaceType *string `pulumi:"interfaceType"`
	// Number of IPv4 prefixes that AWS automatically assigns to the network interface.
	Ipv4PrefixCount *int `pulumi:"ipv4PrefixCount"`
	// One or more IPv4 prefixes assigned to the network interface.
	Ipv4Prefixes []string `pulumi:"ipv4Prefixes"`
	// Number of IPv6 addresses to assign to a network interface. You can't use this option if specifying specific `ipv6Addresses`. If your subnet has the AssignIpv6AddressOnCreation attribute set to `true`, you can specify `0` to override this setting.
	Ipv6AddressCount       *int  `pulumi:"ipv6AddressCount"`
	Ipv6AddressListEnabled *bool `pulumi:"ipv6AddressListEnabled"`
	// List of private IPs to assign to the ENI in sequential order.
	Ipv6AddressLists []string `pulumi:"ipv6AddressLists"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Addresses are assigned without regard to order. You can't use this option if you're specifying `ipv6AddressCount`.
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// Number of IPv6 prefixes that AWS automatically assigns to the network interface.
	Ipv6PrefixCount *int `pulumi:"ipv6PrefixCount"`
	// One or more IPv6 prefixes assigned to the network interface.
	Ipv6Prefixes []string `pulumi:"ipv6Prefixes"`
	// MAC address of the network interface.
	MacAddress *string `pulumi:"macAddress"`
	OutpostArn *string `pulumi:"outpostArn"`
	// AWS account ID of the owner of the network interface.
	OwnerId *string `pulumi:"ownerId"`
	// Private DNS name of the network interface (IPv4).
	PrivateDnsName       *string `pulumi:"privateDnsName"`
	PrivateIp            *string `pulumi:"privateIp"`
	PrivateIpListEnabled *bool   `pulumi:"privateIpListEnabled"`
	// List of private IPs to assign to the ENI in sequential order. Requires setting `privateIpListEnable` to `true`.
	PrivateIpLists []string `pulumi:"privateIpLists"`
	// List of private IPs to assign to the ENI without regard to order.
	PrivateIps []string `pulumi:"privateIps"`
	// Number of secondary private IPs to assign to the ENI. The total number of private IPs will be 1 + `privateIpsCount`, as a primary private IP will be assiged to an ENI by default.
	PrivateIpsCount *int `pulumi:"privateIpsCount"`
	// List of security group IDs to assign to the ENI.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Whether to enable source destination checking for the ENI. Default true.
	SourceDestCheck *bool `pulumi:"sourceDestCheck"`
	// Subnet ID to create the ENI in.
	SubnetId *string `pulumi:"subnetId"`
	// Map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block).
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type NetworkInterfaceState struct {
	// ARN of the network interface.
	Arn pulumi.StringPtrInput
	// Configuration block to define the attachment of the ENI. See Attachment below for more details!
	Attachments NetworkInterfaceAttachmentTypeArrayInput
	// Description for the network interface.
	Description pulumi.StringPtrInput
	// Type of network interface to create. Set to `efa` for Elastic Fabric Adapter. Changing `interfaceType` will cause the resource to be destroyed and re-created.
	InterfaceType pulumi.StringPtrInput
	// Number of IPv4 prefixes that AWS automatically assigns to the network interface.
	Ipv4PrefixCount pulumi.IntPtrInput
	// One or more IPv4 prefixes assigned to the network interface.
	Ipv4Prefixes pulumi.StringArrayInput
	// Number of IPv6 addresses to assign to a network interface. You can't use this option if specifying specific `ipv6Addresses`. If your subnet has the AssignIpv6AddressOnCreation attribute set to `true`, you can specify `0` to override this setting.
	Ipv6AddressCount       pulumi.IntPtrInput
	Ipv6AddressListEnabled pulumi.BoolPtrInput
	// List of private IPs to assign to the ENI in sequential order.
	Ipv6AddressLists pulumi.StringArrayInput
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Addresses are assigned without regard to order. You can't use this option if you're specifying `ipv6AddressCount`.
	Ipv6Addresses pulumi.StringArrayInput
	// Number of IPv6 prefixes that AWS automatically assigns to the network interface.
	Ipv6PrefixCount pulumi.IntPtrInput
	// One or more IPv6 prefixes assigned to the network interface.
	Ipv6Prefixes pulumi.StringArrayInput
	// MAC address of the network interface.
	MacAddress pulumi.StringPtrInput
	OutpostArn pulumi.StringPtrInput
	// AWS account ID of the owner of the network interface.
	OwnerId pulumi.StringPtrInput
	// Private DNS name of the network interface (IPv4).
	PrivateDnsName       pulumi.StringPtrInput
	PrivateIp            pulumi.StringPtrInput
	PrivateIpListEnabled pulumi.BoolPtrInput
	// List of private IPs to assign to the ENI in sequential order. Requires setting `privateIpListEnable` to `true`.
	PrivateIpLists pulumi.StringArrayInput
	// List of private IPs to assign to the ENI without regard to order.
	PrivateIps pulumi.StringArrayInput
	// Number of secondary private IPs to assign to the ENI. The total number of private IPs will be 1 + `privateIpsCount`, as a primary private IP will be assiged to an ENI by default.
	PrivateIpsCount pulumi.IntPtrInput
	// List of security group IDs to assign to the ENI.
	SecurityGroups pulumi.StringArrayInput
	// Whether to enable source destination checking for the ENI. Default true.
	SourceDestCheck pulumi.BoolPtrInput
	// Subnet ID to create the ENI in.
	SubnetId pulumi.StringPtrInput
	// Map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block).
	TagsAll pulumi.StringMapInput
}

func (NetworkInterfaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInterfaceState)(nil)).Elem()
}

type networkInterfaceArgs struct {
	// Configuration block to define the attachment of the ENI. See Attachment below for more details!
	Attachments []NetworkInterfaceAttachmentType `pulumi:"attachments"`
	// Description for the network interface.
	Description *string `pulumi:"description"`
	// Type of network interface to create. Set to `efa` for Elastic Fabric Adapter. Changing `interfaceType` will cause the resource to be destroyed and re-created.
	InterfaceType *string `pulumi:"interfaceType"`
	// Number of IPv4 prefixes that AWS automatically assigns to the network interface.
	Ipv4PrefixCount *int `pulumi:"ipv4PrefixCount"`
	// One or more IPv4 prefixes assigned to the network interface.
	Ipv4Prefixes []string `pulumi:"ipv4Prefixes"`
	// Number of IPv6 addresses to assign to a network interface. You can't use this option if specifying specific `ipv6Addresses`. If your subnet has the AssignIpv6AddressOnCreation attribute set to `true`, you can specify `0` to override this setting.
	Ipv6AddressCount       *int  `pulumi:"ipv6AddressCount"`
	Ipv6AddressListEnabled *bool `pulumi:"ipv6AddressListEnabled"`
	// List of private IPs to assign to the ENI in sequential order.
	Ipv6AddressLists []string `pulumi:"ipv6AddressLists"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Addresses are assigned without regard to order. You can't use this option if you're specifying `ipv6AddressCount`.
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// Number of IPv6 prefixes that AWS automatically assigns to the network interface.
	Ipv6PrefixCount *int `pulumi:"ipv6PrefixCount"`
	// One or more IPv6 prefixes assigned to the network interface.
	Ipv6Prefixes         []string `pulumi:"ipv6Prefixes"`
	PrivateIp            *string  `pulumi:"privateIp"`
	PrivateIpListEnabled *bool    `pulumi:"privateIpListEnabled"`
	// List of private IPs to assign to the ENI in sequential order. Requires setting `privateIpListEnable` to `true`.
	PrivateIpLists []string `pulumi:"privateIpLists"`
	// List of private IPs to assign to the ENI without regard to order.
	PrivateIps []string `pulumi:"privateIps"`
	// Number of secondary private IPs to assign to the ENI. The total number of private IPs will be 1 + `privateIpsCount`, as a primary private IP will be assiged to an ENI by default.
	PrivateIpsCount *int `pulumi:"privateIpsCount"`
	// List of security group IDs to assign to the ENI.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Whether to enable source destination checking for the ENI. Default true.
	SourceDestCheck *bool `pulumi:"sourceDestCheck"`
	// Subnet ID to create the ENI in.
	SubnetId string `pulumi:"subnetId"`
	// Map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkInterface resource.
type NetworkInterfaceArgs struct {
	// Configuration block to define the attachment of the ENI. See Attachment below for more details!
	Attachments NetworkInterfaceAttachmentTypeArrayInput
	// Description for the network interface.
	Description pulumi.StringPtrInput
	// Type of network interface to create. Set to `efa` for Elastic Fabric Adapter. Changing `interfaceType` will cause the resource to be destroyed and re-created.
	InterfaceType pulumi.StringPtrInput
	// Number of IPv4 prefixes that AWS automatically assigns to the network interface.
	Ipv4PrefixCount pulumi.IntPtrInput
	// One or more IPv4 prefixes assigned to the network interface.
	Ipv4Prefixes pulumi.StringArrayInput
	// Number of IPv6 addresses to assign to a network interface. You can't use this option if specifying specific `ipv6Addresses`. If your subnet has the AssignIpv6AddressOnCreation attribute set to `true`, you can specify `0` to override this setting.
	Ipv6AddressCount       pulumi.IntPtrInput
	Ipv6AddressListEnabled pulumi.BoolPtrInput
	// List of private IPs to assign to the ENI in sequential order.
	Ipv6AddressLists pulumi.StringArrayInput
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Addresses are assigned without regard to order. You can't use this option if you're specifying `ipv6AddressCount`.
	Ipv6Addresses pulumi.StringArrayInput
	// Number of IPv6 prefixes that AWS automatically assigns to the network interface.
	Ipv6PrefixCount pulumi.IntPtrInput
	// One or more IPv6 prefixes assigned to the network interface.
	Ipv6Prefixes         pulumi.StringArrayInput
	PrivateIp            pulumi.StringPtrInput
	PrivateIpListEnabled pulumi.BoolPtrInput
	// List of private IPs to assign to the ENI in sequential order. Requires setting `privateIpListEnable` to `true`.
	PrivateIpLists pulumi.StringArrayInput
	// List of private IPs to assign to the ENI without regard to order.
	PrivateIps pulumi.StringArrayInput
	// Number of secondary private IPs to assign to the ENI. The total number of private IPs will be 1 + `privateIpsCount`, as a primary private IP will be assiged to an ENI by default.
	PrivateIpsCount pulumi.IntPtrInput
	// List of security group IDs to assign to the ENI.
	SecurityGroups pulumi.StringArrayInput
	// Whether to enable source destination checking for the ENI. Default true.
	SourceDestCheck pulumi.BoolPtrInput
	// Subnet ID to create the ENI in.
	SubnetId pulumi.StringInput
	// Map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (NetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInterfaceArgs)(nil)).Elem()
}

type NetworkInterfaceInput interface {
	pulumi.Input

	ToNetworkInterfaceOutput() NetworkInterfaceOutput
	ToNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfaceOutput
}

func (*NetworkInterface) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterface)(nil)).Elem()
}

func (i *NetworkInterface) ToNetworkInterfaceOutput() NetworkInterfaceOutput {
	return i.ToNetworkInterfaceOutputWithContext(context.Background())
}

func (i *NetworkInterface) ToNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceOutput)
}

// NetworkInterfaceArrayInput is an input type that accepts NetworkInterfaceArray and NetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceArrayInput` via:
//
//          NetworkInterfaceArray{ NetworkInterfaceArgs{...} }
type NetworkInterfaceArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceArrayOutput() NetworkInterfaceArrayOutput
	ToNetworkInterfaceArrayOutputWithContext(context.Context) NetworkInterfaceArrayOutput
}

type NetworkInterfaceArray []NetworkInterfaceInput

func (NetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkInterface)(nil)).Elem()
}

func (i NetworkInterfaceArray) ToNetworkInterfaceArrayOutput() NetworkInterfaceArrayOutput {
	return i.ToNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceArray) ToNetworkInterfaceArrayOutputWithContext(ctx context.Context) NetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceArrayOutput)
}

// NetworkInterfaceMapInput is an input type that accepts NetworkInterfaceMap and NetworkInterfaceMapOutput values.
// You can construct a concrete instance of `NetworkInterfaceMapInput` via:
//
//          NetworkInterfaceMap{ "key": NetworkInterfaceArgs{...} }
type NetworkInterfaceMapInput interface {
	pulumi.Input

	ToNetworkInterfaceMapOutput() NetworkInterfaceMapOutput
	ToNetworkInterfaceMapOutputWithContext(context.Context) NetworkInterfaceMapOutput
}

type NetworkInterfaceMap map[string]NetworkInterfaceInput

func (NetworkInterfaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkInterface)(nil)).Elem()
}

func (i NetworkInterfaceMap) ToNetworkInterfaceMapOutput() NetworkInterfaceMapOutput {
	return i.ToNetworkInterfaceMapOutputWithContext(context.Background())
}

func (i NetworkInterfaceMap) ToNetworkInterfaceMapOutputWithContext(ctx context.Context) NetworkInterfaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceMapOutput)
}

type NetworkInterfaceOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterface)(nil)).Elem()
}

func (o NetworkInterfaceOutput) ToNetworkInterfaceOutput() NetworkInterfaceOutput {
	return o
}

func (o NetworkInterfaceOutput) ToNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfaceOutput {
	return o
}

type NetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkInterface)(nil)).Elem()
}

func (o NetworkInterfaceArrayOutput) ToNetworkInterfaceArrayOutput() NetworkInterfaceArrayOutput {
	return o
}

func (o NetworkInterfaceArrayOutput) ToNetworkInterfaceArrayOutputWithContext(ctx context.Context) NetworkInterfaceArrayOutput {
	return o
}

func (o NetworkInterfaceArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkInterface {
		return vs[0].([]*NetworkInterface)[vs[1].(int)]
	}).(NetworkInterfaceOutput)
}

type NetworkInterfaceMapOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkInterface)(nil)).Elem()
}

func (o NetworkInterfaceMapOutput) ToNetworkInterfaceMapOutput() NetworkInterfaceMapOutput {
	return o
}

func (o NetworkInterfaceMapOutput) ToNetworkInterfaceMapOutputWithContext(ctx context.Context) NetworkInterfaceMapOutput {
	return o
}

func (o NetworkInterfaceMapOutput) MapIndex(k pulumi.StringInput) NetworkInterfaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkInterface {
		return vs[0].(map[string]*NetworkInterface)[vs[1].(string)]
	}).(NetworkInterfaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceInput)(nil)).Elem(), &NetworkInterface{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceArrayInput)(nil)).Elem(), NetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceMapInput)(nil)).Elem(), NetworkInterfaceMap{})
	pulumi.RegisterOutputType(NetworkInterfaceOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceMapOutput{})
}
