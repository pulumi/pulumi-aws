// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupKeyPair(ctx *pulumi.Context, args *LookupKeyPairArgs, opts ...pulumi.InvokeOption) (*LookupKeyPairResult, error) {
	var rv LookupKeyPairResult
	err := ctx.Invoke("aws:ec2/getKeyPair:getKeyPair", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeyPair.
type LookupKeyPairArgs struct {
	Filters          []GetKeyPairFilter `pulumi:"filters"`
	IncludePublicKey *bool              `pulumi:"includePublicKey"`
	KeyName          *string            `pulumi:"keyName"`
	KeyPairId        *string            `pulumi:"keyPairId"`
	Tags             map[string]string  `pulumi:"tags"`
}

// A collection of values returned by getKeyPair.
type LookupKeyPairResult struct {
	Arn         string             `pulumi:"arn"`
	CreateTime  string             `pulumi:"createTime"`
	Filters     []GetKeyPairFilter `pulumi:"filters"`
	Fingerprint string             `pulumi:"fingerprint"`
	// The provider-assigned unique ID for this managed resource.
	Id               string            `pulumi:"id"`
	IncludePublicKey *bool             `pulumi:"includePublicKey"`
	KeyName          *string           `pulumi:"keyName"`
	KeyPairId        *string           `pulumi:"keyPairId"`
	KeyType          string            `pulumi:"keyType"`
	PublicKey        string            `pulumi:"publicKey"`
	Tags             map[string]string `pulumi:"tags"`
}

func LookupKeyPairOutput(ctx *pulumi.Context, args LookupKeyPairOutputArgs, opts ...pulumi.InvokeOption) LookupKeyPairResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupKeyPairResult, error) {
			args := v.(LookupKeyPairArgs)
			r, err := LookupKeyPair(ctx, &args, opts...)
			var s LookupKeyPairResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupKeyPairResultOutput)
}

// A collection of arguments for invoking getKeyPair.
type LookupKeyPairOutputArgs struct {
	Filters          GetKeyPairFilterArrayInput `pulumi:"filters"`
	IncludePublicKey pulumi.BoolPtrInput        `pulumi:"includePublicKey"`
	KeyName          pulumi.StringPtrInput      `pulumi:"keyName"`
	KeyPairId        pulumi.StringPtrInput      `pulumi:"keyPairId"`
	Tags             pulumi.StringMapInput      `pulumi:"tags"`
}

func (LookupKeyPairOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyPairArgs)(nil)).Elem()
}

// A collection of values returned by getKeyPair.
type LookupKeyPairResultOutput struct{ *pulumi.OutputState }

func (LookupKeyPairResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyPairResult)(nil)).Elem()
}

func (o LookupKeyPairResultOutput) ToLookupKeyPairResultOutput() LookupKeyPairResultOutput {
	return o
}

func (o LookupKeyPairResultOutput) ToLookupKeyPairResultOutputWithContext(ctx context.Context) LookupKeyPairResultOutput {
	return o
}

func (o LookupKeyPairResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyPairResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupKeyPairResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyPairResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupKeyPairResultOutput) Filters() GetKeyPairFilterArrayOutput {
	return o.ApplyT(func(v LookupKeyPairResult) []GetKeyPairFilter { return v.Filters }).(GetKeyPairFilterArrayOutput)
}

func (o LookupKeyPairResultOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyPairResult) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupKeyPairResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyPairResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupKeyPairResultOutput) IncludePublicKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupKeyPairResult) *bool { return v.IncludePublicKey }).(pulumi.BoolPtrOutput)
}

func (o LookupKeyPairResultOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKeyPairResult) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

func (o LookupKeyPairResultOutput) KeyPairId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKeyPairResult) *string { return v.KeyPairId }).(pulumi.StringPtrOutput)
}

func (o LookupKeyPairResultOutput) KeyType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyPairResult) string { return v.KeyType }).(pulumi.StringOutput)
}

func (o LookupKeyPairResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyPairResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

func (o LookupKeyPairResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupKeyPairResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKeyPairResultOutput{})
}
