// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// `aws_route_table` provides details about a specific Route Table.
// 
// This resource can prove useful when a module accepts a Subnet id as
// an input variable and needs to, for example, add a route in
// the Route Table.
func LookupRouteTable(ctx *pulumi.Context, args *GetRouteTableArgs) (*GetRouteTableResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["filters"] = args.Filters
		inputs["routeTableId"] = args.RouteTableId
		inputs["subnetId"] = args.SubnetId
		inputs["tags"] = args.Tags
		inputs["vpcId"] = args.VpcId
	}
	outputs, err := ctx.Invoke("aws:ec2/getRouteTable:getRouteTable", inputs)
	if err != nil {
		return nil, err
	}
	return &GetRouteTableResult{
		Associations: outputs["associations"],
		Filters: outputs["filters"],
		OwnerId: outputs["ownerId"],
		RouteTableId: outputs["routeTableId"],
		Routes: outputs["routes"],
		SubnetId: outputs["subnetId"],
		Tags: outputs["tags"],
		VpcId: outputs["vpcId"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getRouteTable.
type GetRouteTableArgs struct {
	// Custom filter block as described below.
	Filters interface{}
	// The id of the specific Route Table to retrieve.
	RouteTableId interface{}
	// The id of a Subnet which is connected to the Route Table (not be exported if not given in parameter).
	SubnetId interface{}
	// A mapping of tags, each pair of which must exactly match
	// a pair on the desired Route Table.
	Tags interface{}
	// The id of the VPC that the desired Route Table belongs to.
	VpcId interface{}
}

// A collection of values returned by getRouteTable.
type GetRouteTableResult struct {
	Associations interface{}
	Filters interface{}
	// The ID of the AWS account that owns the route table
	OwnerId interface{}
	// The Route Table ID.
	RouteTableId interface{}
	Routes interface{}
	// The Subnet ID.
	SubnetId interface{}
	Tags interface{}
	VpcId interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
