// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Adds permission to create volumes off of a given EBS Snapshot.
type SnapshotCreateVolumePermission struct {
	s *pulumi.ResourceState
}

// NewSnapshotCreateVolumePermission registers a new resource with the given unique name, arguments, and options.
func NewSnapshotCreateVolumePermission(ctx *pulumi.Context,
	name string, args *SnapshotCreateVolumePermissionArgs, opts ...pulumi.ResourceOpt) (*SnapshotCreateVolumePermission, error) {
	if args == nil || args.AccountId == nil {
		return nil, errors.New("missing required argument 'AccountId'")
	}
	if args == nil || args.SnapshotId == nil {
		return nil, errors.New("missing required argument 'SnapshotId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["accountId"] = nil
		inputs["snapshotId"] = nil
	} else {
		inputs["accountId"] = args.AccountId
		inputs["snapshotId"] = args.SnapshotId
	}
	s, err := ctx.RegisterResource("aws:ec2/snapshotCreateVolumePermission:SnapshotCreateVolumePermission", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SnapshotCreateVolumePermission{s: s}, nil
}

// GetSnapshotCreateVolumePermission gets an existing SnapshotCreateVolumePermission resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnapshotCreateVolumePermission(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SnapshotCreateVolumePermissionState, opts ...pulumi.ResourceOpt) (*SnapshotCreateVolumePermission, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["accountId"] = state.AccountId
		inputs["snapshotId"] = state.SnapshotId
	}
	s, err := ctx.ReadResource("aws:ec2/snapshotCreateVolumePermission:SnapshotCreateVolumePermission", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SnapshotCreateVolumePermission{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *SnapshotCreateVolumePermission) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *SnapshotCreateVolumePermission) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// An AWS Account ID to add create volume permissions
func (r *SnapshotCreateVolumePermission) AccountId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["accountId"])
}

// A snapshot ID
func (r *SnapshotCreateVolumePermission) SnapshotId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["snapshotId"])
}

// Input properties used for looking up and filtering SnapshotCreateVolumePermission resources.
type SnapshotCreateVolumePermissionState struct {
	// An AWS Account ID to add create volume permissions
	AccountId interface{}
	// A snapshot ID
	SnapshotId interface{}
}

// The set of arguments for constructing a SnapshotCreateVolumePermission resource.
type SnapshotCreateVolumePermissionArgs struct {
	// An AWS Account ID to add create volume permissions
	AccountId interface{}
	// A snapshot ID
	SnapshotId interface{}
}
