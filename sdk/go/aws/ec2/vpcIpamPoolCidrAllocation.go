// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcIpamPoolCidrAllocation struct {
	pulumi.CustomResourceState

	Cidr                 pulumi.StringOutput      `pulumi:"cidr"`
	Description          pulumi.StringPtrOutput   `pulumi:"description"`
	DisallowedCidrs      pulumi.StringArrayOutput `pulumi:"disallowedCidrs"`
	IpamPoolAllocationId pulumi.StringOutput      `pulumi:"ipamPoolAllocationId"`
	IpamPoolId           pulumi.StringOutput      `pulumi:"ipamPoolId"`
	NetmaskLength        pulumi.IntPtrOutput      `pulumi:"netmaskLength"`
	ResourceId           pulumi.StringOutput      `pulumi:"resourceId"`
	ResourceOwner        pulumi.StringOutput      `pulumi:"resourceOwner"`
	ResourceType         pulumi.StringOutput      `pulumi:"resourceType"`
}

// NewVpcIpamPoolCidrAllocation registers a new resource with the given unique name, arguments, and options.
func NewVpcIpamPoolCidrAllocation(ctx *pulumi.Context,
	name string, args *VpcIpamPoolCidrAllocationArgs, opts ...pulumi.ResourceOption) (*VpcIpamPoolCidrAllocation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpamPoolId == nil {
		return nil, errors.New("invalid value for required argument 'IpamPoolId'")
	}
	var resource VpcIpamPoolCidrAllocation
	err := ctx.RegisterResource("aws:ec2/vpcIpamPoolCidrAllocation:VpcIpamPoolCidrAllocation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcIpamPoolCidrAllocation gets an existing VpcIpamPoolCidrAllocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcIpamPoolCidrAllocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcIpamPoolCidrAllocationState, opts ...pulumi.ResourceOption) (*VpcIpamPoolCidrAllocation, error) {
	var resource VpcIpamPoolCidrAllocation
	err := ctx.ReadResource("aws:ec2/vpcIpamPoolCidrAllocation:VpcIpamPoolCidrAllocation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcIpamPoolCidrAllocation resources.
type vpcIpamPoolCidrAllocationState struct {
	Cidr                 *string  `pulumi:"cidr"`
	Description          *string  `pulumi:"description"`
	DisallowedCidrs      []string `pulumi:"disallowedCidrs"`
	IpamPoolAllocationId *string  `pulumi:"ipamPoolAllocationId"`
	IpamPoolId           *string  `pulumi:"ipamPoolId"`
	NetmaskLength        *int     `pulumi:"netmaskLength"`
	ResourceId           *string  `pulumi:"resourceId"`
	ResourceOwner        *string  `pulumi:"resourceOwner"`
	ResourceType         *string  `pulumi:"resourceType"`
}

type VpcIpamPoolCidrAllocationState struct {
	Cidr                 pulumi.StringPtrInput
	Description          pulumi.StringPtrInput
	DisallowedCidrs      pulumi.StringArrayInput
	IpamPoolAllocationId pulumi.StringPtrInput
	IpamPoolId           pulumi.StringPtrInput
	NetmaskLength        pulumi.IntPtrInput
	ResourceId           pulumi.StringPtrInput
	ResourceOwner        pulumi.StringPtrInput
	ResourceType         pulumi.StringPtrInput
}

func (VpcIpamPoolCidrAllocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcIpamPoolCidrAllocationState)(nil)).Elem()
}

type vpcIpamPoolCidrAllocationArgs struct {
	Cidr            *string  `pulumi:"cidr"`
	Description     *string  `pulumi:"description"`
	DisallowedCidrs []string `pulumi:"disallowedCidrs"`
	IpamPoolId      string   `pulumi:"ipamPoolId"`
	NetmaskLength   *int     `pulumi:"netmaskLength"`
}

// The set of arguments for constructing a VpcIpamPoolCidrAllocation resource.
type VpcIpamPoolCidrAllocationArgs struct {
	Cidr            pulumi.StringPtrInput
	Description     pulumi.StringPtrInput
	DisallowedCidrs pulumi.StringArrayInput
	IpamPoolId      pulumi.StringInput
	NetmaskLength   pulumi.IntPtrInput
}

func (VpcIpamPoolCidrAllocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcIpamPoolCidrAllocationArgs)(nil)).Elem()
}

type VpcIpamPoolCidrAllocationInput interface {
	pulumi.Input

	ToVpcIpamPoolCidrAllocationOutput() VpcIpamPoolCidrAllocationOutput
	ToVpcIpamPoolCidrAllocationOutputWithContext(ctx context.Context) VpcIpamPoolCidrAllocationOutput
}

func (*VpcIpamPoolCidrAllocation) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcIpamPoolCidrAllocation)(nil)).Elem()
}

func (i *VpcIpamPoolCidrAllocation) ToVpcIpamPoolCidrAllocationOutput() VpcIpamPoolCidrAllocationOutput {
	return i.ToVpcIpamPoolCidrAllocationOutputWithContext(context.Background())
}

func (i *VpcIpamPoolCidrAllocation) ToVpcIpamPoolCidrAllocationOutputWithContext(ctx context.Context) VpcIpamPoolCidrAllocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIpamPoolCidrAllocationOutput)
}

// VpcIpamPoolCidrAllocationArrayInput is an input type that accepts VpcIpamPoolCidrAllocationArray and VpcIpamPoolCidrAllocationArrayOutput values.
// You can construct a concrete instance of `VpcIpamPoolCidrAllocationArrayInput` via:
//
//	VpcIpamPoolCidrAllocationArray{ VpcIpamPoolCidrAllocationArgs{...} }
type VpcIpamPoolCidrAllocationArrayInput interface {
	pulumi.Input

	ToVpcIpamPoolCidrAllocationArrayOutput() VpcIpamPoolCidrAllocationArrayOutput
	ToVpcIpamPoolCidrAllocationArrayOutputWithContext(context.Context) VpcIpamPoolCidrAllocationArrayOutput
}

type VpcIpamPoolCidrAllocationArray []VpcIpamPoolCidrAllocationInput

func (VpcIpamPoolCidrAllocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcIpamPoolCidrAllocation)(nil)).Elem()
}

func (i VpcIpamPoolCidrAllocationArray) ToVpcIpamPoolCidrAllocationArrayOutput() VpcIpamPoolCidrAllocationArrayOutput {
	return i.ToVpcIpamPoolCidrAllocationArrayOutputWithContext(context.Background())
}

func (i VpcIpamPoolCidrAllocationArray) ToVpcIpamPoolCidrAllocationArrayOutputWithContext(ctx context.Context) VpcIpamPoolCidrAllocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIpamPoolCidrAllocationArrayOutput)
}

// VpcIpamPoolCidrAllocationMapInput is an input type that accepts VpcIpamPoolCidrAllocationMap and VpcIpamPoolCidrAllocationMapOutput values.
// You can construct a concrete instance of `VpcIpamPoolCidrAllocationMapInput` via:
//
//	VpcIpamPoolCidrAllocationMap{ "key": VpcIpamPoolCidrAllocationArgs{...} }
type VpcIpamPoolCidrAllocationMapInput interface {
	pulumi.Input

	ToVpcIpamPoolCidrAllocationMapOutput() VpcIpamPoolCidrAllocationMapOutput
	ToVpcIpamPoolCidrAllocationMapOutputWithContext(context.Context) VpcIpamPoolCidrAllocationMapOutput
}

type VpcIpamPoolCidrAllocationMap map[string]VpcIpamPoolCidrAllocationInput

func (VpcIpamPoolCidrAllocationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcIpamPoolCidrAllocation)(nil)).Elem()
}

func (i VpcIpamPoolCidrAllocationMap) ToVpcIpamPoolCidrAllocationMapOutput() VpcIpamPoolCidrAllocationMapOutput {
	return i.ToVpcIpamPoolCidrAllocationMapOutputWithContext(context.Background())
}

func (i VpcIpamPoolCidrAllocationMap) ToVpcIpamPoolCidrAllocationMapOutputWithContext(ctx context.Context) VpcIpamPoolCidrAllocationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIpamPoolCidrAllocationMapOutput)
}

type VpcIpamPoolCidrAllocationOutput struct{ *pulumi.OutputState }

func (VpcIpamPoolCidrAllocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcIpamPoolCidrAllocation)(nil)).Elem()
}

func (o VpcIpamPoolCidrAllocationOutput) ToVpcIpamPoolCidrAllocationOutput() VpcIpamPoolCidrAllocationOutput {
	return o
}

func (o VpcIpamPoolCidrAllocationOutput) ToVpcIpamPoolCidrAllocationOutputWithContext(ctx context.Context) VpcIpamPoolCidrAllocationOutput {
	return o
}

func (o VpcIpamPoolCidrAllocationOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIpamPoolCidrAllocation) pulumi.StringOutput { return v.Cidr }).(pulumi.StringOutput)
}

func (o VpcIpamPoolCidrAllocationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcIpamPoolCidrAllocation) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o VpcIpamPoolCidrAllocationOutput) DisallowedCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcIpamPoolCidrAllocation) pulumi.StringArrayOutput { return v.DisallowedCidrs }).(pulumi.StringArrayOutput)
}

func (o VpcIpamPoolCidrAllocationOutput) IpamPoolAllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIpamPoolCidrAllocation) pulumi.StringOutput { return v.IpamPoolAllocationId }).(pulumi.StringOutput)
}

func (o VpcIpamPoolCidrAllocationOutput) IpamPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIpamPoolCidrAllocation) pulumi.StringOutput { return v.IpamPoolId }).(pulumi.StringOutput)
}

func (o VpcIpamPoolCidrAllocationOutput) NetmaskLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpcIpamPoolCidrAllocation) pulumi.IntPtrOutput { return v.NetmaskLength }).(pulumi.IntPtrOutput)
}

func (o VpcIpamPoolCidrAllocationOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIpamPoolCidrAllocation) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

func (o VpcIpamPoolCidrAllocationOutput) ResourceOwner() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIpamPoolCidrAllocation) pulumi.StringOutput { return v.ResourceOwner }).(pulumi.StringOutput)
}

func (o VpcIpamPoolCidrAllocationOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIpamPoolCidrAllocation) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

type VpcIpamPoolCidrAllocationArrayOutput struct{ *pulumi.OutputState }

func (VpcIpamPoolCidrAllocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcIpamPoolCidrAllocation)(nil)).Elem()
}

func (o VpcIpamPoolCidrAllocationArrayOutput) ToVpcIpamPoolCidrAllocationArrayOutput() VpcIpamPoolCidrAllocationArrayOutput {
	return o
}

func (o VpcIpamPoolCidrAllocationArrayOutput) ToVpcIpamPoolCidrAllocationArrayOutputWithContext(ctx context.Context) VpcIpamPoolCidrAllocationArrayOutput {
	return o
}

func (o VpcIpamPoolCidrAllocationArrayOutput) Index(i pulumi.IntInput) VpcIpamPoolCidrAllocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcIpamPoolCidrAllocation {
		return vs[0].([]*VpcIpamPoolCidrAllocation)[vs[1].(int)]
	}).(VpcIpamPoolCidrAllocationOutput)
}

type VpcIpamPoolCidrAllocationMapOutput struct{ *pulumi.OutputState }

func (VpcIpamPoolCidrAllocationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcIpamPoolCidrAllocation)(nil)).Elem()
}

func (o VpcIpamPoolCidrAllocationMapOutput) ToVpcIpamPoolCidrAllocationMapOutput() VpcIpamPoolCidrAllocationMapOutput {
	return o
}

func (o VpcIpamPoolCidrAllocationMapOutput) ToVpcIpamPoolCidrAllocationMapOutputWithContext(ctx context.Context) VpcIpamPoolCidrAllocationMapOutput {
	return o
}

func (o VpcIpamPoolCidrAllocationMapOutput) MapIndex(k pulumi.StringInput) VpcIpamPoolCidrAllocationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcIpamPoolCidrAllocation {
		return vs[0].(map[string]*VpcIpamPoolCidrAllocation)[vs[1].(string)]
	}).(VpcIpamPoolCidrAllocationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcIpamPoolCidrAllocationInput)(nil)).Elem(), &VpcIpamPoolCidrAllocation{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcIpamPoolCidrAllocationArrayInput)(nil)).Elem(), VpcIpamPoolCidrAllocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcIpamPoolCidrAllocationMapInput)(nil)).Elem(), VpcIpamPoolCidrAllocationMap{})
	pulumi.RegisterOutputType(VpcIpamPoolCidrAllocationOutput{})
	pulumi.RegisterOutputType(VpcIpamPoolCidrAllocationArrayOutput{})
	pulumi.RegisterOutputType(VpcIpamPoolCidrAllocationMapOutput{})
}
