// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The VPC Peering Connection data source provides details about
// a specific VPC peering connection.
func LookuppcPeeringConnection(ctx *pulumi.Context, args *GetVpcPeeringConnectionArgs) (*GetVpcPeeringConnectionResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["cidrBlock"] = args.CidrBlock
		inputs["filters"] = args.Filters
		inputs["id"] = args.Id
		inputs["ownerId"] = args.OwnerId
		inputs["peerCidrBlock"] = args.PeerCidrBlock
		inputs["peerOwnerId"] = args.PeerOwnerId
		inputs["peerRegion"] = args.PeerRegion
		inputs["peerVpcId"] = args.PeerVpcId
		inputs["region"] = args.Region
		inputs["status"] = args.Status
		inputs["tags"] = args.Tags
		inputs["vpcId"] = args.VpcId
	}
	outputs, err := ctx.Invoke("aws:ec2/getVpcPeeringConnection:getVpcPeeringConnection", inputs)
	if err != nil {
		return nil, err
	}
	ret := GetVpcPeeringConnectionResult{}
	if v, ok := outputs["accepter"]; ok {
		ret.Accepter = v
	}
	if v, ok := outputs["cidrBlock"]; ok {
		ret.CidrBlock = v
	}
	if v, ok := outputs["id"]; ok {
		ret.Id = v
	}
	if v, ok := outputs["ownerId"]; ok {
		ret.OwnerId = v
	}
	if v, ok := outputs["peerCidrBlock"]; ok {
		ret.PeerCidrBlock = v
	}
	if v, ok := outputs["peerOwnerId"]; ok {
		ret.PeerOwnerId = v
	}
	if v, ok := outputs["peerRegion"]; ok {
		ret.PeerRegion = v
	}
	if v, ok := outputs["peerVpcId"]; ok {
		ret.PeerVpcId = v
	}
	if v, ok := outputs["region"]; ok {
		ret.Region = v
	}
	if v, ok := outputs["requester"]; ok {
		ret.Requester = v
	}
	if v, ok := outputs["status"]; ok {
		ret.Status = v
	}
	if v, ok := outputs["tags"]; ok {
		ret.Tags = v
	}
	if v, ok := outputs["vpcId"]; ok {
		ret.VpcId = v
	}
	return &ret, nil
}

// A collection of arguments for invoking getVpcPeeringConnection.
type GetVpcPeeringConnectionArgs struct {
	// The CIDR block of the requester VPC of the specific VPC Peering Connection to retrieve.
	CidrBlock interface{}
	// Custom filter block as described below.
	Filters interface{}
	// The ID of the specific VPC Peering Connection to retrieve.
	Id interface{}
	// The AWS account ID of the owner of the requester VPC of the specific VPC Peering Connection to retrieve.
	OwnerId interface{}
	// The CIDR block of the accepter VPC of the specific VPC Peering Connection to retrieve.
	PeerCidrBlock interface{}
	// The AWS account ID of the owner of the accepter VPC of the specific VPC Peering Connection to retrieve.
	PeerOwnerId interface{}
	// The region of the accepter VPC of the specific VPC Peering Connection to retrieve.
	PeerRegion interface{}
	// The ID of the accepter VPC of the specific VPC Peering Connection to retrieve.
	PeerVpcId interface{}
	// The region of the requester VPC of the specific VPC Peering Connection to retrieve.
	Region interface{}
	// The status of the specific VPC Peering Connection to retrieve.
	Status interface{}
	// A mapping of tags, each pair of which must exactly match
	// a pair on the desired VPC Peering Connection.
	Tags interface{}
	// The ID of the requester VPC of the specific VPC Peering Connection to retrieve.
	VpcId interface{}
}

// A collection of values returned by getVpcPeeringConnection.
type GetVpcPeeringConnectionResult struct {
	// A configuration block that describes [VPC Peering Connection]
	// (http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide) options set for the accepter VPC.
	Accepter interface{}
	CidrBlock interface{}
	Id interface{}
	OwnerId interface{}
	PeerCidrBlock interface{}
	PeerOwnerId interface{}
	PeerRegion interface{}
	PeerVpcId interface{}
	Region interface{}
	// A configuration block that describes [VPC Peering Connection]
	// (http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide) options set for the requester VPC.
	Requester interface{}
	Status interface{}
	Tags interface{}
	VpcId interface{}
}
