// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupVpcPeeringConnection(ctx *pulumi.Context, args *LookupVpcPeeringConnectionArgs, opts ...pulumi.InvokeOption) (*LookupVpcPeeringConnectionResult, error) {
	var rv LookupVpcPeeringConnectionResult
	err := ctx.Invoke("aws:ec2/getVpcPeeringConnection:getVpcPeeringConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcPeeringConnection.
type LookupVpcPeeringConnectionArgs struct {
	CidrBlock     *string                         `pulumi:"cidrBlock"`
	Filters       []GetVpcPeeringConnectionFilter `pulumi:"filters"`
	Id            *string                         `pulumi:"id"`
	OwnerId       *string                         `pulumi:"ownerId"`
	PeerCidrBlock *string                         `pulumi:"peerCidrBlock"`
	PeerOwnerId   *string                         `pulumi:"peerOwnerId"`
	PeerRegion    *string                         `pulumi:"peerRegion"`
	PeerVpcId     *string                         `pulumi:"peerVpcId"`
	Region        *string                         `pulumi:"region"`
	Status        *string                         `pulumi:"status"`
	Tags          map[string]string               `pulumi:"tags"`
	VpcId         *string                         `pulumi:"vpcId"`
}

// A collection of values returned by getVpcPeeringConnection.
type LookupVpcPeeringConnectionResult struct {
	Accepter          map[string]bool                           `pulumi:"accepter"`
	CidrBlock         string                                    `pulumi:"cidrBlock"`
	CidrBlockSets     []GetVpcPeeringConnectionCidrBlockSet     `pulumi:"cidrBlockSets"`
	Filters           []GetVpcPeeringConnectionFilter           `pulumi:"filters"`
	Id                string                                    `pulumi:"id"`
	OwnerId           string                                    `pulumi:"ownerId"`
	PeerCidrBlock     string                                    `pulumi:"peerCidrBlock"`
	PeerCidrBlockSets []GetVpcPeeringConnectionPeerCidrBlockSet `pulumi:"peerCidrBlockSets"`
	PeerOwnerId       string                                    `pulumi:"peerOwnerId"`
	PeerRegion        string                                    `pulumi:"peerRegion"`
	PeerVpcId         string                                    `pulumi:"peerVpcId"`
	Region            string                                    `pulumi:"region"`
	Requester         map[string]bool                           `pulumi:"requester"`
	Status            string                                    `pulumi:"status"`
	Tags              map[string]string                         `pulumi:"tags"`
	VpcId             string                                    `pulumi:"vpcId"`
}

func LookupVpcPeeringConnectionOutput(ctx *pulumi.Context, args LookupVpcPeeringConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupVpcPeeringConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpcPeeringConnectionResult, error) {
			args := v.(LookupVpcPeeringConnectionArgs)
			r, err := LookupVpcPeeringConnection(ctx, &args, opts...)
			var s LookupVpcPeeringConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVpcPeeringConnectionResultOutput)
}

// A collection of arguments for invoking getVpcPeeringConnection.
type LookupVpcPeeringConnectionOutputArgs struct {
	CidrBlock     pulumi.StringPtrInput                   `pulumi:"cidrBlock"`
	Filters       GetVpcPeeringConnectionFilterArrayInput `pulumi:"filters"`
	Id            pulumi.StringPtrInput                   `pulumi:"id"`
	OwnerId       pulumi.StringPtrInput                   `pulumi:"ownerId"`
	PeerCidrBlock pulumi.StringPtrInput                   `pulumi:"peerCidrBlock"`
	PeerOwnerId   pulumi.StringPtrInput                   `pulumi:"peerOwnerId"`
	PeerRegion    pulumi.StringPtrInput                   `pulumi:"peerRegion"`
	PeerVpcId     pulumi.StringPtrInput                   `pulumi:"peerVpcId"`
	Region        pulumi.StringPtrInput                   `pulumi:"region"`
	Status        pulumi.StringPtrInput                   `pulumi:"status"`
	Tags          pulumi.StringMapInput                   `pulumi:"tags"`
	VpcId         pulumi.StringPtrInput                   `pulumi:"vpcId"`
}

func (LookupVpcPeeringConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcPeeringConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getVpcPeeringConnection.
type LookupVpcPeeringConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupVpcPeeringConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcPeeringConnectionResult)(nil)).Elem()
}

func (o LookupVpcPeeringConnectionResultOutput) ToLookupVpcPeeringConnectionResultOutput() LookupVpcPeeringConnectionResultOutput {
	return o
}

func (o LookupVpcPeeringConnectionResultOutput) ToLookupVpcPeeringConnectionResultOutputWithContext(ctx context.Context) LookupVpcPeeringConnectionResultOutput {
	return o
}

func (o LookupVpcPeeringConnectionResultOutput) Accepter() pulumi.BoolMapOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) map[string]bool { return v.Accepter }).(pulumi.BoolMapOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.CidrBlock }).(pulumi.StringOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) CidrBlockSets() GetVpcPeeringConnectionCidrBlockSetArrayOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) []GetVpcPeeringConnectionCidrBlockSet { return v.CidrBlockSets }).(GetVpcPeeringConnectionCidrBlockSetArrayOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) Filters() GetVpcPeeringConnectionFilterArrayOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) []GetVpcPeeringConnectionFilter { return v.Filters }).(GetVpcPeeringConnectionFilterArrayOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.OwnerId }).(pulumi.StringOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) PeerCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.PeerCidrBlock }).(pulumi.StringOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) PeerCidrBlockSets() GetVpcPeeringConnectionPeerCidrBlockSetArrayOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) []GetVpcPeeringConnectionPeerCidrBlockSet {
		return v.PeerCidrBlockSets
	}).(GetVpcPeeringConnectionPeerCidrBlockSetArrayOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) PeerOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.PeerOwnerId }).(pulumi.StringOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) PeerRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.PeerRegion }).(pulumi.StringOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) PeerVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.PeerVpcId }).(pulumi.StringOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) Requester() pulumi.BoolMapOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) map[string]bool { return v.Requester }).(pulumi.BoolMapOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupVpcPeeringConnectionResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcPeeringConnectionResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcPeeringConnectionResultOutput{})
}
