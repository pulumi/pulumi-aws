// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupVpcDhcpOptions(ctx *pulumi.Context, args *LookupVpcDhcpOptionsArgs, opts ...pulumi.InvokeOption) (*LookupVpcDhcpOptionsResult, error) {
	var rv LookupVpcDhcpOptionsResult
	err := ctx.Invoke("aws:ec2/getVpcDhcpOptions:getVpcDhcpOptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcDhcpOptions.
type LookupVpcDhcpOptionsArgs struct {
	DhcpOptionsId *string                   `pulumi:"dhcpOptionsId"`
	Filters       []GetVpcDhcpOptionsFilter `pulumi:"filters"`
	Tags          map[string]string         `pulumi:"tags"`
}

// A collection of values returned by getVpcDhcpOptions.
type LookupVpcDhcpOptionsResult struct {
	Arn               string                    `pulumi:"arn"`
	DhcpOptionsId     string                    `pulumi:"dhcpOptionsId"`
	DomainName        string                    `pulumi:"domainName"`
	DomainNameServers []string                  `pulumi:"domainNameServers"`
	Filters           []GetVpcDhcpOptionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string            `pulumi:"id"`
	NetbiosNameServers []string          `pulumi:"netbiosNameServers"`
	NetbiosNodeType    string            `pulumi:"netbiosNodeType"`
	NtpServers         []string          `pulumi:"ntpServers"`
	OwnerId            string            `pulumi:"ownerId"`
	Tags               map[string]string `pulumi:"tags"`
}

func LookupVpcDhcpOptionsOutput(ctx *pulumi.Context, args LookupVpcDhcpOptionsOutputArgs, opts ...pulumi.InvokeOption) LookupVpcDhcpOptionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpcDhcpOptionsResult, error) {
			args := v.(LookupVpcDhcpOptionsArgs)
			r, err := LookupVpcDhcpOptions(ctx, &args, opts...)
			var s LookupVpcDhcpOptionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVpcDhcpOptionsResultOutput)
}

// A collection of arguments for invoking getVpcDhcpOptions.
type LookupVpcDhcpOptionsOutputArgs struct {
	DhcpOptionsId pulumi.StringPtrInput             `pulumi:"dhcpOptionsId"`
	Filters       GetVpcDhcpOptionsFilterArrayInput `pulumi:"filters"`
	Tags          pulumi.StringMapInput             `pulumi:"tags"`
}

func (LookupVpcDhcpOptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcDhcpOptionsArgs)(nil)).Elem()
}

// A collection of values returned by getVpcDhcpOptions.
type LookupVpcDhcpOptionsResultOutput struct{ *pulumi.OutputState }

func (LookupVpcDhcpOptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcDhcpOptionsResult)(nil)).Elem()
}

func (o LookupVpcDhcpOptionsResultOutput) ToLookupVpcDhcpOptionsResultOutput() LookupVpcDhcpOptionsResultOutput {
	return o
}

func (o LookupVpcDhcpOptionsResultOutput) ToLookupVpcDhcpOptionsResultOutputWithContext(ctx context.Context) LookupVpcDhcpOptionsResultOutput {
	return o
}

func (o LookupVpcDhcpOptionsResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcDhcpOptionsResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupVpcDhcpOptionsResultOutput) DhcpOptionsId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcDhcpOptionsResult) string { return v.DhcpOptionsId }).(pulumi.StringOutput)
}

func (o LookupVpcDhcpOptionsResultOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcDhcpOptionsResult) string { return v.DomainName }).(pulumi.StringOutput)
}

func (o LookupVpcDhcpOptionsResultOutput) DomainNameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcDhcpOptionsResult) []string { return v.DomainNameServers }).(pulumi.StringArrayOutput)
}

func (o LookupVpcDhcpOptionsResultOutput) Filters() GetVpcDhcpOptionsFilterArrayOutput {
	return o.ApplyT(func(v LookupVpcDhcpOptionsResult) []GetVpcDhcpOptionsFilter { return v.Filters }).(GetVpcDhcpOptionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVpcDhcpOptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcDhcpOptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVpcDhcpOptionsResultOutput) NetbiosNameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcDhcpOptionsResult) []string { return v.NetbiosNameServers }).(pulumi.StringArrayOutput)
}

func (o LookupVpcDhcpOptionsResultOutput) NetbiosNodeType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcDhcpOptionsResult) string { return v.NetbiosNodeType }).(pulumi.StringOutput)
}

func (o LookupVpcDhcpOptionsResultOutput) NtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcDhcpOptionsResult) []string { return v.NtpServers }).(pulumi.StringArrayOutput)
}

func (o LookupVpcDhcpOptionsResultOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcDhcpOptionsResult) string { return v.OwnerId }).(pulumi.StringOutput)
}

func (o LookupVpcDhcpOptionsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVpcDhcpOptionsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcDhcpOptionsResultOutput{})
}
