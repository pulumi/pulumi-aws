// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcEndpoint struct {
	pulumi.CustomResourceState

	Arn                 pulumi.StringOutput            `pulumi:"arn"`
	AutoAccept          pulumi.BoolPtrOutput           `pulumi:"autoAccept"`
	CidrBlocks          pulumi.StringArrayOutput       `pulumi:"cidrBlocks"`
	DnsEntries          VpcEndpointDnsEntryArrayOutput `pulumi:"dnsEntries"`
	DnsOptions          VpcEndpointDnsOptionsOutput    `pulumi:"dnsOptions"`
	IpAddressType       pulumi.StringOutput            `pulumi:"ipAddressType"`
	NetworkInterfaceIds pulumi.StringArrayOutput       `pulumi:"networkInterfaceIds"`
	OwnerId             pulumi.StringOutput            `pulumi:"ownerId"`
	Policy              pulumi.StringOutput            `pulumi:"policy"`
	PrefixListId        pulumi.StringOutput            `pulumi:"prefixListId"`
	PrivateDnsEnabled   pulumi.BoolPtrOutput           `pulumi:"privateDnsEnabled"`
	RequesterManaged    pulumi.BoolOutput              `pulumi:"requesterManaged"`
	RouteTableIds       pulumi.StringArrayOutput       `pulumi:"routeTableIds"`
	SecurityGroupIds    pulumi.StringArrayOutput       `pulumi:"securityGroupIds"`
	ServiceName         pulumi.StringOutput            `pulumi:"serviceName"`
	State               pulumi.StringOutput            `pulumi:"state"`
	SubnetIds           pulumi.StringArrayOutput       `pulumi:"subnetIds"`
	Tags                pulumi.StringMapOutput         `pulumi:"tags"`
	TagsAll             pulumi.StringMapOutput         `pulumi:"tagsAll"`
	VpcEndpointType     pulumi.StringPtrOutput         `pulumi:"vpcEndpointType"`
	VpcId               pulumi.StringOutput            `pulumi:"vpcId"`
}

// NewVpcEndpoint registers a new resource with the given unique name, arguments, and options.
func NewVpcEndpoint(ctx *pulumi.Context,
	name string, args *VpcEndpointArgs, opts ...pulumi.ResourceOption) (*VpcEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	var resource VpcEndpoint
	err := ctx.RegisterResource("aws:ec2/vpcEndpoint:VpcEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcEndpoint gets an existing VpcEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcEndpointState, opts ...pulumi.ResourceOption) (*VpcEndpoint, error) {
	var resource VpcEndpoint
	err := ctx.ReadResource("aws:ec2/vpcEndpoint:VpcEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcEndpoint resources.
type vpcEndpointState struct {
	Arn                 *string                `pulumi:"arn"`
	AutoAccept          *bool                  `pulumi:"autoAccept"`
	CidrBlocks          []string               `pulumi:"cidrBlocks"`
	DnsEntries          []VpcEndpointDnsEntry  `pulumi:"dnsEntries"`
	DnsOptions          *VpcEndpointDnsOptions `pulumi:"dnsOptions"`
	IpAddressType       *string                `pulumi:"ipAddressType"`
	NetworkInterfaceIds []string               `pulumi:"networkInterfaceIds"`
	OwnerId             *string                `pulumi:"ownerId"`
	Policy              *string                `pulumi:"policy"`
	PrefixListId        *string                `pulumi:"prefixListId"`
	PrivateDnsEnabled   *bool                  `pulumi:"privateDnsEnabled"`
	RequesterManaged    *bool                  `pulumi:"requesterManaged"`
	RouteTableIds       []string               `pulumi:"routeTableIds"`
	SecurityGroupIds    []string               `pulumi:"securityGroupIds"`
	ServiceName         *string                `pulumi:"serviceName"`
	State               *string                `pulumi:"state"`
	SubnetIds           []string               `pulumi:"subnetIds"`
	Tags                map[string]string      `pulumi:"tags"`
	TagsAll             map[string]string      `pulumi:"tagsAll"`
	VpcEndpointType     *string                `pulumi:"vpcEndpointType"`
	VpcId               *string                `pulumi:"vpcId"`
}

type VpcEndpointState struct {
	Arn                 pulumi.StringPtrInput
	AutoAccept          pulumi.BoolPtrInput
	CidrBlocks          pulumi.StringArrayInput
	DnsEntries          VpcEndpointDnsEntryArrayInput
	DnsOptions          VpcEndpointDnsOptionsPtrInput
	IpAddressType       pulumi.StringPtrInput
	NetworkInterfaceIds pulumi.StringArrayInput
	OwnerId             pulumi.StringPtrInput
	Policy              pulumi.StringPtrInput
	PrefixListId        pulumi.StringPtrInput
	PrivateDnsEnabled   pulumi.BoolPtrInput
	RequesterManaged    pulumi.BoolPtrInput
	RouteTableIds       pulumi.StringArrayInput
	SecurityGroupIds    pulumi.StringArrayInput
	ServiceName         pulumi.StringPtrInput
	State               pulumi.StringPtrInput
	SubnetIds           pulumi.StringArrayInput
	Tags                pulumi.StringMapInput
	TagsAll             pulumi.StringMapInput
	VpcEndpointType     pulumi.StringPtrInput
	VpcId               pulumi.StringPtrInput
}

func (VpcEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointState)(nil)).Elem()
}

type vpcEndpointArgs struct {
	AutoAccept        *bool                  `pulumi:"autoAccept"`
	DnsOptions        *VpcEndpointDnsOptions `pulumi:"dnsOptions"`
	IpAddressType     *string                `pulumi:"ipAddressType"`
	Policy            *string                `pulumi:"policy"`
	PrivateDnsEnabled *bool                  `pulumi:"privateDnsEnabled"`
	RouteTableIds     []string               `pulumi:"routeTableIds"`
	SecurityGroupIds  []string               `pulumi:"securityGroupIds"`
	ServiceName       string                 `pulumi:"serviceName"`
	SubnetIds         []string               `pulumi:"subnetIds"`
	Tags              map[string]string      `pulumi:"tags"`
	VpcEndpointType   *string                `pulumi:"vpcEndpointType"`
	VpcId             string                 `pulumi:"vpcId"`
}

// The set of arguments for constructing a VpcEndpoint resource.
type VpcEndpointArgs struct {
	AutoAccept        pulumi.BoolPtrInput
	DnsOptions        VpcEndpointDnsOptionsPtrInput
	IpAddressType     pulumi.StringPtrInput
	Policy            pulumi.StringPtrInput
	PrivateDnsEnabled pulumi.BoolPtrInput
	RouteTableIds     pulumi.StringArrayInput
	SecurityGroupIds  pulumi.StringArrayInput
	ServiceName       pulumi.StringInput
	SubnetIds         pulumi.StringArrayInput
	Tags              pulumi.StringMapInput
	VpcEndpointType   pulumi.StringPtrInput
	VpcId             pulumi.StringInput
}

func (VpcEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointArgs)(nil)).Elem()
}

type VpcEndpointInput interface {
	pulumi.Input

	ToVpcEndpointOutput() VpcEndpointOutput
	ToVpcEndpointOutputWithContext(ctx context.Context) VpcEndpointOutput
}

func (*VpcEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpoint)(nil)).Elem()
}

func (i *VpcEndpoint) ToVpcEndpointOutput() VpcEndpointOutput {
	return i.ToVpcEndpointOutputWithContext(context.Background())
}

func (i *VpcEndpoint) ToVpcEndpointOutputWithContext(ctx context.Context) VpcEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointOutput)
}

// VpcEndpointArrayInput is an input type that accepts VpcEndpointArray and VpcEndpointArrayOutput values.
// You can construct a concrete instance of `VpcEndpointArrayInput` via:
//
//	VpcEndpointArray{ VpcEndpointArgs{...} }
type VpcEndpointArrayInput interface {
	pulumi.Input

	ToVpcEndpointArrayOutput() VpcEndpointArrayOutput
	ToVpcEndpointArrayOutputWithContext(context.Context) VpcEndpointArrayOutput
}

type VpcEndpointArray []VpcEndpointInput

func (VpcEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpoint)(nil)).Elem()
}

func (i VpcEndpointArray) ToVpcEndpointArrayOutput() VpcEndpointArrayOutput {
	return i.ToVpcEndpointArrayOutputWithContext(context.Background())
}

func (i VpcEndpointArray) ToVpcEndpointArrayOutputWithContext(ctx context.Context) VpcEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointArrayOutput)
}

// VpcEndpointMapInput is an input type that accepts VpcEndpointMap and VpcEndpointMapOutput values.
// You can construct a concrete instance of `VpcEndpointMapInput` via:
//
//	VpcEndpointMap{ "key": VpcEndpointArgs{...} }
type VpcEndpointMapInput interface {
	pulumi.Input

	ToVpcEndpointMapOutput() VpcEndpointMapOutput
	ToVpcEndpointMapOutputWithContext(context.Context) VpcEndpointMapOutput
}

type VpcEndpointMap map[string]VpcEndpointInput

func (VpcEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpoint)(nil)).Elem()
}

func (i VpcEndpointMap) ToVpcEndpointMapOutput() VpcEndpointMapOutput {
	return i.ToVpcEndpointMapOutputWithContext(context.Background())
}

func (i VpcEndpointMap) ToVpcEndpointMapOutputWithContext(ctx context.Context) VpcEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointMapOutput)
}

type VpcEndpointOutput struct{ *pulumi.OutputState }

func (VpcEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpoint)(nil)).Elem()
}

func (o VpcEndpointOutput) ToVpcEndpointOutput() VpcEndpointOutput {
	return o
}

func (o VpcEndpointOutput) ToVpcEndpointOutputWithContext(ctx context.Context) VpcEndpointOutput {
	return o
}

func (o VpcEndpointOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o VpcEndpointOutput) AutoAccept() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.BoolPtrOutput { return v.AutoAccept }).(pulumi.BoolPtrOutput)
}

func (o VpcEndpointOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringArrayOutput { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

func (o VpcEndpointOutput) DnsEntries() VpcEndpointDnsEntryArrayOutput {
	return o.ApplyT(func(v *VpcEndpoint) VpcEndpointDnsEntryArrayOutput { return v.DnsEntries }).(VpcEndpointDnsEntryArrayOutput)
}

func (o VpcEndpointOutput) DnsOptions() VpcEndpointDnsOptionsOutput {
	return o.ApplyT(func(v *VpcEndpoint) VpcEndpointDnsOptionsOutput { return v.DnsOptions }).(VpcEndpointDnsOptionsOutput)
}

func (o VpcEndpointOutput) IpAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.IpAddressType }).(pulumi.StringOutput)
}

func (o VpcEndpointOutput) NetworkInterfaceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringArrayOutput { return v.NetworkInterfaceIds }).(pulumi.StringArrayOutput)
}

func (o VpcEndpointOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

func (o VpcEndpointOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.Policy }).(pulumi.StringOutput)
}

func (o VpcEndpointOutput) PrefixListId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.PrefixListId }).(pulumi.StringOutput)
}

func (o VpcEndpointOutput) PrivateDnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.BoolPtrOutput { return v.PrivateDnsEnabled }).(pulumi.BoolPtrOutput)
}

func (o VpcEndpointOutput) RequesterManaged() pulumi.BoolOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.BoolOutput { return v.RequesterManaged }).(pulumi.BoolOutput)
}

func (o VpcEndpointOutput) RouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringArrayOutput { return v.RouteTableIds }).(pulumi.StringArrayOutput)
}

func (o VpcEndpointOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o VpcEndpointOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

func (o VpcEndpointOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o VpcEndpointOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringArrayOutput { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o VpcEndpointOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o VpcEndpointOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o VpcEndpointOutput) VpcEndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringPtrOutput { return v.VpcEndpointType }).(pulumi.StringPtrOutput)
}

func (o VpcEndpointOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type VpcEndpointArrayOutput struct{ *pulumi.OutputState }

func (VpcEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpoint)(nil)).Elem()
}

func (o VpcEndpointArrayOutput) ToVpcEndpointArrayOutput() VpcEndpointArrayOutput {
	return o
}

func (o VpcEndpointArrayOutput) ToVpcEndpointArrayOutputWithContext(ctx context.Context) VpcEndpointArrayOutput {
	return o
}

func (o VpcEndpointArrayOutput) Index(i pulumi.IntInput) VpcEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcEndpoint {
		return vs[0].([]*VpcEndpoint)[vs[1].(int)]
	}).(VpcEndpointOutput)
}

type VpcEndpointMapOutput struct{ *pulumi.OutputState }

func (VpcEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpoint)(nil)).Elem()
}

func (o VpcEndpointMapOutput) ToVpcEndpointMapOutput() VpcEndpointMapOutput {
	return o
}

func (o VpcEndpointMapOutput) ToVpcEndpointMapOutputWithContext(ctx context.Context) VpcEndpointMapOutput {
	return o
}

func (o VpcEndpointMapOutput) MapIndex(k pulumi.StringInput) VpcEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcEndpoint {
		return vs[0].(map[string]*VpcEndpoint)[vs[1].(string)]
	}).(VpcEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointInput)(nil)).Elem(), &VpcEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointArrayInput)(nil)).Elem(), VpcEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointMapInput)(nil)).Elem(), VpcEndpointMap{})
	pulumi.RegisterOutputType(VpcEndpointOutput{})
	pulumi.RegisterOutputType(VpcEndpointArrayOutput{})
	pulumi.RegisterOutputType(VpcEndpointMapOutput{})
}
