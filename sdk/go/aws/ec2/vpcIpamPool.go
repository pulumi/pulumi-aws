// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcIpamPool struct {
	pulumi.CustomResourceState

	AddressFamily                  pulumi.StringOutput    `pulumi:"addressFamily"`
	AllocationDefaultNetmaskLength pulumi.IntPtrOutput    `pulumi:"allocationDefaultNetmaskLength"`
	AllocationMaxNetmaskLength     pulumi.IntPtrOutput    `pulumi:"allocationMaxNetmaskLength"`
	AllocationMinNetmaskLength     pulumi.IntPtrOutput    `pulumi:"allocationMinNetmaskLength"`
	AllocationResourceTags         pulumi.StringMapOutput `pulumi:"allocationResourceTags"`
	Arn                            pulumi.StringOutput    `pulumi:"arn"`
	AutoImport                     pulumi.BoolPtrOutput   `pulumi:"autoImport"`
	AwsService                     pulumi.StringPtrOutput `pulumi:"awsService"`
	Description                    pulumi.StringPtrOutput `pulumi:"description"`
	IpamScopeId                    pulumi.StringOutput    `pulumi:"ipamScopeId"`
	IpamScopeType                  pulumi.StringOutput    `pulumi:"ipamScopeType"`
	Locale                         pulumi.StringPtrOutput `pulumi:"locale"`
	PoolDepth                      pulumi.IntOutput       `pulumi:"poolDepth"`
	PubliclyAdvertisable           pulumi.BoolPtrOutput   `pulumi:"publiclyAdvertisable"`
	SourceIpamPoolId               pulumi.StringPtrOutput `pulumi:"sourceIpamPoolId"`
	State                          pulumi.StringOutput    `pulumi:"state"`
	Tags                           pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll                        pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewVpcIpamPool registers a new resource with the given unique name, arguments, and options.
func NewVpcIpamPool(ctx *pulumi.Context,
	name string, args *VpcIpamPoolArgs, opts ...pulumi.ResourceOption) (*VpcIpamPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AddressFamily == nil {
		return nil, errors.New("invalid value for required argument 'AddressFamily'")
	}
	if args.IpamScopeId == nil {
		return nil, errors.New("invalid value for required argument 'IpamScopeId'")
	}
	var resource VpcIpamPool
	err := ctx.RegisterResource("aws:ec2/vpcIpamPool:VpcIpamPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcIpamPool gets an existing VpcIpamPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcIpamPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcIpamPoolState, opts ...pulumi.ResourceOption) (*VpcIpamPool, error) {
	var resource VpcIpamPool
	err := ctx.ReadResource("aws:ec2/vpcIpamPool:VpcIpamPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcIpamPool resources.
type vpcIpamPoolState struct {
	AddressFamily                  *string           `pulumi:"addressFamily"`
	AllocationDefaultNetmaskLength *int              `pulumi:"allocationDefaultNetmaskLength"`
	AllocationMaxNetmaskLength     *int              `pulumi:"allocationMaxNetmaskLength"`
	AllocationMinNetmaskLength     *int              `pulumi:"allocationMinNetmaskLength"`
	AllocationResourceTags         map[string]string `pulumi:"allocationResourceTags"`
	Arn                            *string           `pulumi:"arn"`
	AutoImport                     *bool             `pulumi:"autoImport"`
	AwsService                     *string           `pulumi:"awsService"`
	Description                    *string           `pulumi:"description"`
	IpamScopeId                    *string           `pulumi:"ipamScopeId"`
	IpamScopeType                  *string           `pulumi:"ipamScopeType"`
	Locale                         *string           `pulumi:"locale"`
	PoolDepth                      *int              `pulumi:"poolDepth"`
	PubliclyAdvertisable           *bool             `pulumi:"publiclyAdvertisable"`
	SourceIpamPoolId               *string           `pulumi:"sourceIpamPoolId"`
	State                          *string           `pulumi:"state"`
	Tags                           map[string]string `pulumi:"tags"`
	TagsAll                        map[string]string `pulumi:"tagsAll"`
}

type VpcIpamPoolState struct {
	AddressFamily                  pulumi.StringPtrInput
	AllocationDefaultNetmaskLength pulumi.IntPtrInput
	AllocationMaxNetmaskLength     pulumi.IntPtrInput
	AllocationMinNetmaskLength     pulumi.IntPtrInput
	AllocationResourceTags         pulumi.StringMapInput
	Arn                            pulumi.StringPtrInput
	AutoImport                     pulumi.BoolPtrInput
	AwsService                     pulumi.StringPtrInput
	Description                    pulumi.StringPtrInput
	IpamScopeId                    pulumi.StringPtrInput
	IpamScopeType                  pulumi.StringPtrInput
	Locale                         pulumi.StringPtrInput
	PoolDepth                      pulumi.IntPtrInput
	PubliclyAdvertisable           pulumi.BoolPtrInput
	SourceIpamPoolId               pulumi.StringPtrInput
	State                          pulumi.StringPtrInput
	Tags                           pulumi.StringMapInput
	TagsAll                        pulumi.StringMapInput
}

func (VpcIpamPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcIpamPoolState)(nil)).Elem()
}

type vpcIpamPoolArgs struct {
	AddressFamily                  string            `pulumi:"addressFamily"`
	AllocationDefaultNetmaskLength *int              `pulumi:"allocationDefaultNetmaskLength"`
	AllocationMaxNetmaskLength     *int              `pulumi:"allocationMaxNetmaskLength"`
	AllocationMinNetmaskLength     *int              `pulumi:"allocationMinNetmaskLength"`
	AllocationResourceTags         map[string]string `pulumi:"allocationResourceTags"`
	AutoImport                     *bool             `pulumi:"autoImport"`
	AwsService                     *string           `pulumi:"awsService"`
	Description                    *string           `pulumi:"description"`
	IpamScopeId                    string            `pulumi:"ipamScopeId"`
	Locale                         *string           `pulumi:"locale"`
	PubliclyAdvertisable           *bool             `pulumi:"publiclyAdvertisable"`
	SourceIpamPoolId               *string           `pulumi:"sourceIpamPoolId"`
	Tags                           map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a VpcIpamPool resource.
type VpcIpamPoolArgs struct {
	AddressFamily                  pulumi.StringInput
	AllocationDefaultNetmaskLength pulumi.IntPtrInput
	AllocationMaxNetmaskLength     pulumi.IntPtrInput
	AllocationMinNetmaskLength     pulumi.IntPtrInput
	AllocationResourceTags         pulumi.StringMapInput
	AutoImport                     pulumi.BoolPtrInput
	AwsService                     pulumi.StringPtrInput
	Description                    pulumi.StringPtrInput
	IpamScopeId                    pulumi.StringInput
	Locale                         pulumi.StringPtrInput
	PubliclyAdvertisable           pulumi.BoolPtrInput
	SourceIpamPoolId               pulumi.StringPtrInput
	Tags                           pulumi.StringMapInput
}

func (VpcIpamPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcIpamPoolArgs)(nil)).Elem()
}

type VpcIpamPoolInput interface {
	pulumi.Input

	ToVpcIpamPoolOutput() VpcIpamPoolOutput
	ToVpcIpamPoolOutputWithContext(ctx context.Context) VpcIpamPoolOutput
}

func (*VpcIpamPool) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcIpamPool)(nil)).Elem()
}

func (i *VpcIpamPool) ToVpcIpamPoolOutput() VpcIpamPoolOutput {
	return i.ToVpcIpamPoolOutputWithContext(context.Background())
}

func (i *VpcIpamPool) ToVpcIpamPoolOutputWithContext(ctx context.Context) VpcIpamPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIpamPoolOutput)
}

// VpcIpamPoolArrayInput is an input type that accepts VpcIpamPoolArray and VpcIpamPoolArrayOutput values.
// You can construct a concrete instance of `VpcIpamPoolArrayInput` via:
//
//	VpcIpamPoolArray{ VpcIpamPoolArgs{...} }
type VpcIpamPoolArrayInput interface {
	pulumi.Input

	ToVpcIpamPoolArrayOutput() VpcIpamPoolArrayOutput
	ToVpcIpamPoolArrayOutputWithContext(context.Context) VpcIpamPoolArrayOutput
}

type VpcIpamPoolArray []VpcIpamPoolInput

func (VpcIpamPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcIpamPool)(nil)).Elem()
}

func (i VpcIpamPoolArray) ToVpcIpamPoolArrayOutput() VpcIpamPoolArrayOutput {
	return i.ToVpcIpamPoolArrayOutputWithContext(context.Background())
}

func (i VpcIpamPoolArray) ToVpcIpamPoolArrayOutputWithContext(ctx context.Context) VpcIpamPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIpamPoolArrayOutput)
}

// VpcIpamPoolMapInput is an input type that accepts VpcIpamPoolMap and VpcIpamPoolMapOutput values.
// You can construct a concrete instance of `VpcIpamPoolMapInput` via:
//
//	VpcIpamPoolMap{ "key": VpcIpamPoolArgs{...} }
type VpcIpamPoolMapInput interface {
	pulumi.Input

	ToVpcIpamPoolMapOutput() VpcIpamPoolMapOutput
	ToVpcIpamPoolMapOutputWithContext(context.Context) VpcIpamPoolMapOutput
}

type VpcIpamPoolMap map[string]VpcIpamPoolInput

func (VpcIpamPoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcIpamPool)(nil)).Elem()
}

func (i VpcIpamPoolMap) ToVpcIpamPoolMapOutput() VpcIpamPoolMapOutput {
	return i.ToVpcIpamPoolMapOutputWithContext(context.Background())
}

func (i VpcIpamPoolMap) ToVpcIpamPoolMapOutputWithContext(ctx context.Context) VpcIpamPoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIpamPoolMapOutput)
}

type VpcIpamPoolOutput struct{ *pulumi.OutputState }

func (VpcIpamPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcIpamPool)(nil)).Elem()
}

func (o VpcIpamPoolOutput) ToVpcIpamPoolOutput() VpcIpamPoolOutput {
	return o
}

func (o VpcIpamPoolOutput) ToVpcIpamPoolOutputWithContext(ctx context.Context) VpcIpamPoolOutput {
	return o
}

func (o VpcIpamPoolOutput) AddressFamily() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.StringOutput { return v.AddressFamily }).(pulumi.StringOutput)
}

func (o VpcIpamPoolOutput) AllocationDefaultNetmaskLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.IntPtrOutput { return v.AllocationDefaultNetmaskLength }).(pulumi.IntPtrOutput)
}

func (o VpcIpamPoolOutput) AllocationMaxNetmaskLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.IntPtrOutput { return v.AllocationMaxNetmaskLength }).(pulumi.IntPtrOutput)
}

func (o VpcIpamPoolOutput) AllocationMinNetmaskLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.IntPtrOutput { return v.AllocationMinNetmaskLength }).(pulumi.IntPtrOutput)
}

func (o VpcIpamPoolOutput) AllocationResourceTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.StringMapOutput { return v.AllocationResourceTags }).(pulumi.StringMapOutput)
}

func (o VpcIpamPoolOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o VpcIpamPoolOutput) AutoImport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.BoolPtrOutput { return v.AutoImport }).(pulumi.BoolPtrOutput)
}

func (o VpcIpamPoolOutput) AwsService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.StringPtrOutput { return v.AwsService }).(pulumi.StringPtrOutput)
}

func (o VpcIpamPoolOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o VpcIpamPoolOutput) IpamScopeId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.StringOutput { return v.IpamScopeId }).(pulumi.StringOutput)
}

func (o VpcIpamPoolOutput) IpamScopeType() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.StringOutput { return v.IpamScopeType }).(pulumi.StringOutput)
}

func (o VpcIpamPoolOutput) Locale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.StringPtrOutput { return v.Locale }).(pulumi.StringPtrOutput)
}

func (o VpcIpamPoolOutput) PoolDepth() pulumi.IntOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.IntOutput { return v.PoolDepth }).(pulumi.IntOutput)
}

func (o VpcIpamPoolOutput) PubliclyAdvertisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.BoolPtrOutput { return v.PubliclyAdvertisable }).(pulumi.BoolPtrOutput)
}

func (o VpcIpamPoolOutput) SourceIpamPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.StringPtrOutput { return v.SourceIpamPoolId }).(pulumi.StringPtrOutput)
}

func (o VpcIpamPoolOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o VpcIpamPoolOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o VpcIpamPoolOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcIpamPool) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type VpcIpamPoolArrayOutput struct{ *pulumi.OutputState }

func (VpcIpamPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcIpamPool)(nil)).Elem()
}

func (o VpcIpamPoolArrayOutput) ToVpcIpamPoolArrayOutput() VpcIpamPoolArrayOutput {
	return o
}

func (o VpcIpamPoolArrayOutput) ToVpcIpamPoolArrayOutputWithContext(ctx context.Context) VpcIpamPoolArrayOutput {
	return o
}

func (o VpcIpamPoolArrayOutput) Index(i pulumi.IntInput) VpcIpamPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcIpamPool {
		return vs[0].([]*VpcIpamPool)[vs[1].(int)]
	}).(VpcIpamPoolOutput)
}

type VpcIpamPoolMapOutput struct{ *pulumi.OutputState }

func (VpcIpamPoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcIpamPool)(nil)).Elem()
}

func (o VpcIpamPoolMapOutput) ToVpcIpamPoolMapOutput() VpcIpamPoolMapOutput {
	return o
}

func (o VpcIpamPoolMapOutput) ToVpcIpamPoolMapOutputWithContext(ctx context.Context) VpcIpamPoolMapOutput {
	return o
}

func (o VpcIpamPoolMapOutput) MapIndex(k pulumi.StringInput) VpcIpamPoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcIpamPool {
		return vs[0].(map[string]*VpcIpamPool)[vs[1].(string)]
	}).(VpcIpamPoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcIpamPoolInput)(nil)).Elem(), &VpcIpamPool{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcIpamPoolArrayInput)(nil)).Elem(), VpcIpamPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcIpamPoolMapInput)(nil)).Elem(), VpcIpamPoolMap{})
	pulumi.RegisterOutputType(VpcIpamPoolOutput{})
	pulumi.RegisterOutputType(VpcIpamPoolArrayOutput{})
	pulumi.RegisterOutputType(VpcIpamPoolMapOutput{})
}
