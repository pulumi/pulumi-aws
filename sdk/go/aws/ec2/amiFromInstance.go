// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The "AMI from instance" resource allows the creation of an Amazon Machine
// Image (AMI) modelled after an existing EBS-backed EC2 instance.
//
// The created AMI will refer to implicitly-created snapshots of the instance's
// EBS volumes and mimick its assigned block device configuration at the time
// the resource is created.
//
// This resource is best applied to an instance that is stopped when this instance
// is created, so that the contents of the created image are predictable. When
// applied to an instance that is running, *the instance will be stopped before taking
// the snapshots and then started back up again*, resulting in a period of
// downtime.
//
// Note that the source instance is inspected only at the initial creation of this
// resource. Ongoing updates to the referenced instance will not be propagated into
// the generated AMI. Users may taint or otherwise recreate the resource in order
// to produce a fresh snapshot.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ec2.NewAmiFromInstance(ctx, "example", &ec2.AmiFromInstanceArgs{
//				SourceInstanceId: pulumi.String("i-xxxxxxxx"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AmiFromInstance struct {
	pulumi.CustomResourceState

	// Machine architecture for created instances. Defaults to "x8664".
	Architecture pulumi.StringOutput `pulumi:"architecture"`
	// ARN of the AMI.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode pulumi.StringOutput `pulumi:"bootMode"`
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumi.StringPtrOutput `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices AmiFromInstanceEbsBlockDeviceArrayOutput `pulumi:"ebsBlockDevices"`
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport pulumi.BoolOutput `pulumi:"enaSupport"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices AmiFromInstanceEphemeralBlockDeviceArrayOutput `pulumi:"ephemeralBlockDevices"`
	Hypervisor            pulumi.StringOutput                            `pulumi:"hypervisor"`
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation   pulumi.StringOutput `pulumi:"imageLocation"`
	ImageOwnerAlias pulumi.StringOutput `pulumi:"imageOwnerAlias"`
	ImageType       pulumi.StringOutput `pulumi:"imageType"`
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId           pulumi.StringOutput `pulumi:"kernelId"`
	ManageEbsSnapshots pulumi.BoolOutput   `pulumi:"manageEbsSnapshots"`
	// Region-unique name for the AMI.
	Name            pulumi.StringOutput `pulumi:"name"`
	OwnerId         pulumi.StringOutput `pulumi:"ownerId"`
	Platform        pulumi.StringOutput `pulumi:"platform"`
	PlatformDetails pulumi.StringOutput `pulumi:"platformDetails"`
	Public          pulumi.BoolOutput   `pulumi:"public"`
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId pulumi.StringOutput `pulumi:"ramdiskId"`
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName pulumi.StringOutput `pulumi:"rootDeviceName"`
	RootSnapshotId pulumi.StringOutput `pulumi:"rootSnapshotId"`
	// Boolean that overrides the behavior of stopping
	// the instance before snapshotting. This is risky since it may cause a snapshot of an
	// inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
	// guarantees that no filesystem writes will be underway at the time of snapshot.
	SnapshotWithoutReboot pulumi.BoolPtrOutput `pulumi:"snapshotWithoutReboot"`
	// ID of the instance to use as the basis of the AMI.
	SourceInstanceId pulumi.StringOutput `pulumi:"sourceInstanceId"`
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport pulumi.StringOutput `pulumi:"sriovNetSupport"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport     pulumi.StringOutput `pulumi:"tpmSupport"`
	UsageOperation pulumi.StringOutput `pulumi:"usageOperation"`
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType pulumi.StringOutput `pulumi:"virtualizationType"`
}

// NewAmiFromInstance registers a new resource with the given unique name, arguments, and options.
func NewAmiFromInstance(ctx *pulumi.Context,
	name string, args *AmiFromInstanceArgs, opts ...pulumi.ResourceOption) (*AmiFromInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SourceInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'SourceInstanceId'")
	}
	var resource AmiFromInstance
	err := ctx.RegisterResource("aws:ec2/amiFromInstance:AmiFromInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAmiFromInstance gets an existing AmiFromInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAmiFromInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AmiFromInstanceState, opts ...pulumi.ResourceOption) (*AmiFromInstance, error) {
	var resource AmiFromInstance
	err := ctx.ReadResource("aws:ec2/amiFromInstance:AmiFromInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AmiFromInstance resources.
type amiFromInstanceState struct {
	// Machine architecture for created instances. Defaults to "x8664".
	Architecture *string `pulumi:"architecture"`
	// ARN of the AMI.
	Arn *string `pulumi:"arn"`
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode *string `pulumi:"bootMode"`
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime *string `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description *string `pulumi:"description"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices []AmiFromInstanceEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport *bool `pulumi:"enaSupport"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices []AmiFromInstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	Hypervisor            *string                               `pulumi:"hypervisor"`
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation   *string `pulumi:"imageLocation"`
	ImageOwnerAlias *string `pulumi:"imageOwnerAlias"`
	ImageType       *string `pulumi:"imageType"`
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId           *string `pulumi:"kernelId"`
	ManageEbsSnapshots *bool   `pulumi:"manageEbsSnapshots"`
	// Region-unique name for the AMI.
	Name            *string `pulumi:"name"`
	OwnerId         *string `pulumi:"ownerId"`
	Platform        *string `pulumi:"platform"`
	PlatformDetails *string `pulumi:"platformDetails"`
	Public          *bool   `pulumi:"public"`
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId *string `pulumi:"ramdiskId"`
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName *string `pulumi:"rootDeviceName"`
	RootSnapshotId *string `pulumi:"rootSnapshotId"`
	// Boolean that overrides the behavior of stopping
	// the instance before snapshotting. This is risky since it may cause a snapshot of an
	// inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
	// guarantees that no filesystem writes will be underway at the time of snapshot.
	SnapshotWithoutReboot *bool `pulumi:"snapshotWithoutReboot"`
	// ID of the instance to use as the basis of the AMI.
	SourceInstanceId *string `pulumi:"sourceInstanceId"`
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport *string `pulumi:"sriovNetSupport"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    map[string]string `pulumi:"tags"`
	TagsAll map[string]string `pulumi:"tagsAll"`
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport     *string `pulumi:"tpmSupport"`
	UsageOperation *string `pulumi:"usageOperation"`
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType *string `pulumi:"virtualizationType"`
}

type AmiFromInstanceState struct {
	// Machine architecture for created instances. Defaults to "x8664".
	Architecture pulumi.StringPtrInput
	// ARN of the AMI.
	Arn pulumi.StringPtrInput
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode pulumi.StringPtrInput
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumi.StringPtrInput
	// Longer, human-readable description for the AMI.
	Description pulumi.StringPtrInput
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices AmiFromInstanceEbsBlockDeviceArrayInput
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport pulumi.BoolPtrInput
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices AmiFromInstanceEphemeralBlockDeviceArrayInput
	Hypervisor            pulumi.StringPtrInput
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation   pulumi.StringPtrInput
	ImageOwnerAlias pulumi.StringPtrInput
	ImageType       pulumi.StringPtrInput
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId           pulumi.StringPtrInput
	ManageEbsSnapshots pulumi.BoolPtrInput
	// Region-unique name for the AMI.
	Name            pulumi.StringPtrInput
	OwnerId         pulumi.StringPtrInput
	Platform        pulumi.StringPtrInput
	PlatformDetails pulumi.StringPtrInput
	Public          pulumi.BoolPtrInput
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId pulumi.StringPtrInput
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName pulumi.StringPtrInput
	RootSnapshotId pulumi.StringPtrInput
	// Boolean that overrides the behavior of stopping
	// the instance before snapshotting. This is risky since it may cause a snapshot of an
	// inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
	// guarantees that no filesystem writes will be underway at the time of snapshot.
	SnapshotWithoutReboot pulumi.BoolPtrInput
	// ID of the instance to use as the basis of the AMI.
	SourceInstanceId pulumi.StringPtrInput
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport pulumi.StringPtrInput
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumi.StringMapInput
	TagsAll pulumi.StringMapInput
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport     pulumi.StringPtrInput
	UsageOperation pulumi.StringPtrInput
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType pulumi.StringPtrInput
}

func (AmiFromInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*amiFromInstanceState)(nil)).Elem()
}

type amiFromInstanceArgs struct {
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime *string `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description *string `pulumi:"description"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices []AmiFromInstanceEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices []AmiFromInstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// Region-unique name for the AMI.
	Name *string `pulumi:"name"`
	// Boolean that overrides the behavior of stopping
	// the instance before snapshotting. This is risky since it may cause a snapshot of an
	// inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
	// guarantees that no filesystem writes will be underway at the time of snapshot.
	SnapshotWithoutReboot *bool `pulumi:"snapshotWithoutReboot"`
	// ID of the instance to use as the basis of the AMI.
	SourceInstanceId string `pulumi:"sourceInstanceId"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AmiFromInstance resource.
type AmiFromInstanceArgs struct {
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumi.StringPtrInput
	// Longer, human-readable description for the AMI.
	Description pulumi.StringPtrInput
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices AmiFromInstanceEbsBlockDeviceArrayInput
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices AmiFromInstanceEphemeralBlockDeviceArrayInput
	// Region-unique name for the AMI.
	Name pulumi.StringPtrInput
	// Boolean that overrides the behavior of stopping
	// the instance before snapshotting. This is risky since it may cause a snapshot of an
	// inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
	// guarantees that no filesystem writes will be underway at the time of snapshot.
	SnapshotWithoutReboot pulumi.BoolPtrInput
	// ID of the instance to use as the basis of the AMI.
	SourceInstanceId pulumi.StringInput
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (AmiFromInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*amiFromInstanceArgs)(nil)).Elem()
}

type AmiFromInstanceInput interface {
	pulumi.Input

	ToAmiFromInstanceOutput() AmiFromInstanceOutput
	ToAmiFromInstanceOutputWithContext(ctx context.Context) AmiFromInstanceOutput
}

func (*AmiFromInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**AmiFromInstance)(nil)).Elem()
}

func (i *AmiFromInstance) ToAmiFromInstanceOutput() AmiFromInstanceOutput {
	return i.ToAmiFromInstanceOutputWithContext(context.Background())
}

func (i *AmiFromInstance) ToAmiFromInstanceOutputWithContext(ctx context.Context) AmiFromInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceOutput)
}

// AmiFromInstanceArrayInput is an input type that accepts AmiFromInstanceArray and AmiFromInstanceArrayOutput values.
// You can construct a concrete instance of `AmiFromInstanceArrayInput` via:
//
//	AmiFromInstanceArray{ AmiFromInstanceArgs{...} }
type AmiFromInstanceArrayInput interface {
	pulumi.Input

	ToAmiFromInstanceArrayOutput() AmiFromInstanceArrayOutput
	ToAmiFromInstanceArrayOutputWithContext(context.Context) AmiFromInstanceArrayOutput
}

type AmiFromInstanceArray []AmiFromInstanceInput

func (AmiFromInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AmiFromInstance)(nil)).Elem()
}

func (i AmiFromInstanceArray) ToAmiFromInstanceArrayOutput() AmiFromInstanceArrayOutput {
	return i.ToAmiFromInstanceArrayOutputWithContext(context.Background())
}

func (i AmiFromInstanceArray) ToAmiFromInstanceArrayOutputWithContext(ctx context.Context) AmiFromInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceArrayOutput)
}

// AmiFromInstanceMapInput is an input type that accepts AmiFromInstanceMap and AmiFromInstanceMapOutput values.
// You can construct a concrete instance of `AmiFromInstanceMapInput` via:
//
//	AmiFromInstanceMap{ "key": AmiFromInstanceArgs{...} }
type AmiFromInstanceMapInput interface {
	pulumi.Input

	ToAmiFromInstanceMapOutput() AmiFromInstanceMapOutput
	ToAmiFromInstanceMapOutputWithContext(context.Context) AmiFromInstanceMapOutput
}

type AmiFromInstanceMap map[string]AmiFromInstanceInput

func (AmiFromInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AmiFromInstance)(nil)).Elem()
}

func (i AmiFromInstanceMap) ToAmiFromInstanceMapOutput() AmiFromInstanceMapOutput {
	return i.ToAmiFromInstanceMapOutputWithContext(context.Background())
}

func (i AmiFromInstanceMap) ToAmiFromInstanceMapOutputWithContext(ctx context.Context) AmiFromInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceMapOutput)
}

type AmiFromInstanceOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AmiFromInstance)(nil)).Elem()
}

func (o AmiFromInstanceOutput) ToAmiFromInstanceOutput() AmiFromInstanceOutput {
	return o
}

func (o AmiFromInstanceOutput) ToAmiFromInstanceOutputWithContext(ctx context.Context) AmiFromInstanceOutput {
	return o
}

// Machine architecture for created instances. Defaults to "x8664".
func (o AmiFromInstanceOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.Architecture }).(pulumi.StringOutput)
}

// ARN of the AMI.
func (o AmiFromInstanceOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
func (o AmiFromInstanceOutput) BootMode() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.BootMode }).(pulumi.StringOutput)
}

// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
func (o AmiFromInstanceOutput) DeprecationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringPtrOutput { return v.DeprecationTime }).(pulumi.StringPtrOutput)
}

// Longer, human-readable description for the AMI.
func (o AmiFromInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Nested block describing an EBS block device that should be
// attached to created instances. The structure of this block is described below.
func (o AmiFromInstanceOutput) EbsBlockDevices() AmiFromInstanceEbsBlockDeviceArrayOutput {
	return o.ApplyT(func(v *AmiFromInstance) AmiFromInstanceEbsBlockDeviceArrayOutput { return v.EbsBlockDevices }).(AmiFromInstanceEbsBlockDeviceArrayOutput)
}

// Whether enhanced networking with ENA is enabled. Defaults to `false`.
func (o AmiFromInstanceOutput) EnaSupport() pulumi.BoolOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.BoolOutput { return v.EnaSupport }).(pulumi.BoolOutput)
}

// Nested block describing an ephemeral block device that
// should be attached to created instances. The structure of this block is described below.
func (o AmiFromInstanceOutput) EphemeralBlockDevices() AmiFromInstanceEphemeralBlockDeviceArrayOutput {
	return o.ApplyT(func(v *AmiFromInstance) AmiFromInstanceEphemeralBlockDeviceArrayOutput {
		return v.EphemeralBlockDevices
	}).(AmiFromInstanceEphemeralBlockDeviceArrayOutput)
}

func (o AmiFromInstanceOutput) Hypervisor() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.Hypervisor }).(pulumi.StringOutput)
}

// Path to an S3 object containing an image manifest, e.g., created
// by the `ec2-upload-bundle` command in the EC2 command line tools.
func (o AmiFromInstanceOutput) ImageLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.ImageLocation }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) ImageOwnerAlias() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.ImageOwnerAlias }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.ImageType }).(pulumi.StringOutput)
}

// ID of the kernel image (AKI) that will be used as the paravirtual
// kernel in created instances.
func (o AmiFromInstanceOutput) KernelId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.KernelId }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) ManageEbsSnapshots() pulumi.BoolOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.BoolOutput { return v.ManageEbsSnapshots }).(pulumi.BoolOutput)
}

// Region-unique name for the AMI.
func (o AmiFromInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.Platform }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) PlatformDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.PlatformDetails }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.BoolOutput { return v.Public }).(pulumi.BoolOutput)
}

// ID of an initrd image (ARI) that will be used when booting the
// created instances.
func (o AmiFromInstanceOutput) RamdiskId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.RamdiskId }).(pulumi.StringOutput)
}

// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
func (o AmiFromInstanceOutput) RootDeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.RootDeviceName }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) RootSnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.RootSnapshotId }).(pulumi.StringOutput)
}

// Boolean that overrides the behavior of stopping
// the instance before snapshotting. This is risky since it may cause a snapshot of an
// inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
// guarantees that no filesystem writes will be underway at the time of snapshot.
func (o AmiFromInstanceOutput) SnapshotWithoutReboot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.BoolPtrOutput { return v.SnapshotWithoutReboot }).(pulumi.BoolPtrOutput)
}

// ID of the instance to use as the basis of the AMI.
func (o AmiFromInstanceOutput) SourceInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.SourceInstanceId }).(pulumi.StringOutput)
}

// When set to "simple" (the default), enables enhanced networking
// for created instances. No other value is supported at this time.
func (o AmiFromInstanceOutput) SriovNetSupport() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.SriovNetSupport }).(pulumi.StringOutput)
}

// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AmiFromInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o AmiFromInstanceOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
func (o AmiFromInstanceOutput) TpmSupport() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.TpmSupport }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) UsageOperation() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.UsageOperation }).(pulumi.StringOutput)
}

// Keyword to choose what virtualization mode created instances
// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
// changes the set of further arguments that are required, as described below.
func (o AmiFromInstanceOutput) VirtualizationType() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.VirtualizationType }).(pulumi.StringOutput)
}

type AmiFromInstanceArrayOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AmiFromInstance)(nil)).Elem()
}

func (o AmiFromInstanceArrayOutput) ToAmiFromInstanceArrayOutput() AmiFromInstanceArrayOutput {
	return o
}

func (o AmiFromInstanceArrayOutput) ToAmiFromInstanceArrayOutputWithContext(ctx context.Context) AmiFromInstanceArrayOutput {
	return o
}

func (o AmiFromInstanceArrayOutput) Index(i pulumi.IntInput) AmiFromInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AmiFromInstance {
		return vs[0].([]*AmiFromInstance)[vs[1].(int)]
	}).(AmiFromInstanceOutput)
}

type AmiFromInstanceMapOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AmiFromInstance)(nil)).Elem()
}

func (o AmiFromInstanceMapOutput) ToAmiFromInstanceMapOutput() AmiFromInstanceMapOutput {
	return o
}

func (o AmiFromInstanceMapOutput) ToAmiFromInstanceMapOutputWithContext(ctx context.Context) AmiFromInstanceMapOutput {
	return o
}

func (o AmiFromInstanceMapOutput) MapIndex(k pulumi.StringInput) AmiFromInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AmiFromInstance {
		return vs[0].(map[string]*AmiFromInstance)[vs[1].(string)]
	}).(AmiFromInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AmiFromInstanceInput)(nil)).Elem(), &AmiFromInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*AmiFromInstanceArrayInput)(nil)).Elem(), AmiFromInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AmiFromInstanceMapInput)(nil)).Elem(), AmiFromInstanceMap{})
	pulumi.RegisterOutputType(AmiFromInstanceOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceArrayOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceMapOutput{})
}
