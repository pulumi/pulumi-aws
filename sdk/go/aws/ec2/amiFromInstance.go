// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AmiFromInstance struct {
	pulumi.CustomResourceState

	Architecture          pulumi.StringOutput                            `pulumi:"architecture"`
	Arn                   pulumi.StringOutput                            `pulumi:"arn"`
	BootMode              pulumi.StringOutput                            `pulumi:"bootMode"`
	DeprecationTime       pulumi.StringPtrOutput                         `pulumi:"deprecationTime"`
	Description           pulumi.StringPtrOutput                         `pulumi:"description"`
	EbsBlockDevices       AmiFromInstanceEbsBlockDeviceArrayOutput       `pulumi:"ebsBlockDevices"`
	EnaSupport            pulumi.BoolOutput                              `pulumi:"enaSupport"`
	EphemeralBlockDevices AmiFromInstanceEphemeralBlockDeviceArrayOutput `pulumi:"ephemeralBlockDevices"`
	Hypervisor            pulumi.StringOutput                            `pulumi:"hypervisor"`
	ImageLocation         pulumi.StringOutput                            `pulumi:"imageLocation"`
	ImageOwnerAlias       pulumi.StringOutput                            `pulumi:"imageOwnerAlias"`
	ImageType             pulumi.StringOutput                            `pulumi:"imageType"`
	ImdsSupport           pulumi.StringOutput                            `pulumi:"imdsSupport"`
	KernelId              pulumi.StringOutput                            `pulumi:"kernelId"`
	ManageEbsSnapshots    pulumi.BoolOutput                              `pulumi:"manageEbsSnapshots"`
	Name                  pulumi.StringOutput                            `pulumi:"name"`
	OwnerId               pulumi.StringOutput                            `pulumi:"ownerId"`
	Platform              pulumi.StringOutput                            `pulumi:"platform"`
	PlatformDetails       pulumi.StringOutput                            `pulumi:"platformDetails"`
	Public                pulumi.BoolOutput                              `pulumi:"public"`
	RamdiskId             pulumi.StringOutput                            `pulumi:"ramdiskId"`
	RootDeviceName        pulumi.StringOutput                            `pulumi:"rootDeviceName"`
	RootSnapshotId        pulumi.StringOutput                            `pulumi:"rootSnapshotId"`
	SnapshotWithoutReboot pulumi.BoolPtrOutput                           `pulumi:"snapshotWithoutReboot"`
	SourceInstanceId      pulumi.StringOutput                            `pulumi:"sourceInstanceId"`
	SriovNetSupport       pulumi.StringOutput                            `pulumi:"sriovNetSupport"`
	Tags                  pulumi.StringMapOutput                         `pulumi:"tags"`
	TagsAll               pulumi.StringMapOutput                         `pulumi:"tagsAll"`
	TpmSupport            pulumi.StringOutput                            `pulumi:"tpmSupport"`
	UsageOperation        pulumi.StringOutput                            `pulumi:"usageOperation"`
	VirtualizationType    pulumi.StringOutput                            `pulumi:"virtualizationType"`
}

// NewAmiFromInstance registers a new resource with the given unique name, arguments, and options.
func NewAmiFromInstance(ctx *pulumi.Context,
	name string, args *AmiFromInstanceArgs, opts ...pulumi.ResourceOption) (*AmiFromInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SourceInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'SourceInstanceId'")
	}
	var resource AmiFromInstance
	err := ctx.RegisterResource("aws:ec2/amiFromInstance:AmiFromInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAmiFromInstance gets an existing AmiFromInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAmiFromInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AmiFromInstanceState, opts ...pulumi.ResourceOption) (*AmiFromInstance, error) {
	var resource AmiFromInstance
	err := ctx.ReadResource("aws:ec2/amiFromInstance:AmiFromInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AmiFromInstance resources.
type amiFromInstanceState struct {
	Architecture          *string                               `pulumi:"architecture"`
	Arn                   *string                               `pulumi:"arn"`
	BootMode              *string                               `pulumi:"bootMode"`
	DeprecationTime       *string                               `pulumi:"deprecationTime"`
	Description           *string                               `pulumi:"description"`
	EbsBlockDevices       []AmiFromInstanceEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EnaSupport            *bool                                 `pulumi:"enaSupport"`
	EphemeralBlockDevices []AmiFromInstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	Hypervisor            *string                               `pulumi:"hypervisor"`
	ImageLocation         *string                               `pulumi:"imageLocation"`
	ImageOwnerAlias       *string                               `pulumi:"imageOwnerAlias"`
	ImageType             *string                               `pulumi:"imageType"`
	ImdsSupport           *string                               `pulumi:"imdsSupport"`
	KernelId              *string                               `pulumi:"kernelId"`
	ManageEbsSnapshots    *bool                                 `pulumi:"manageEbsSnapshots"`
	Name                  *string                               `pulumi:"name"`
	OwnerId               *string                               `pulumi:"ownerId"`
	Platform              *string                               `pulumi:"platform"`
	PlatformDetails       *string                               `pulumi:"platformDetails"`
	Public                *bool                                 `pulumi:"public"`
	RamdiskId             *string                               `pulumi:"ramdiskId"`
	RootDeviceName        *string                               `pulumi:"rootDeviceName"`
	RootSnapshotId        *string                               `pulumi:"rootSnapshotId"`
	SnapshotWithoutReboot *bool                                 `pulumi:"snapshotWithoutReboot"`
	SourceInstanceId      *string                               `pulumi:"sourceInstanceId"`
	SriovNetSupport       *string                               `pulumi:"sriovNetSupport"`
	Tags                  map[string]string                     `pulumi:"tags"`
	TagsAll               map[string]string                     `pulumi:"tagsAll"`
	TpmSupport            *string                               `pulumi:"tpmSupport"`
	UsageOperation        *string                               `pulumi:"usageOperation"`
	VirtualizationType    *string                               `pulumi:"virtualizationType"`
}

type AmiFromInstanceState struct {
	Architecture          pulumi.StringPtrInput
	Arn                   pulumi.StringPtrInput
	BootMode              pulumi.StringPtrInput
	DeprecationTime       pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	EbsBlockDevices       AmiFromInstanceEbsBlockDeviceArrayInput
	EnaSupport            pulumi.BoolPtrInput
	EphemeralBlockDevices AmiFromInstanceEphemeralBlockDeviceArrayInput
	Hypervisor            pulumi.StringPtrInput
	ImageLocation         pulumi.StringPtrInput
	ImageOwnerAlias       pulumi.StringPtrInput
	ImageType             pulumi.StringPtrInput
	ImdsSupport           pulumi.StringPtrInput
	KernelId              pulumi.StringPtrInput
	ManageEbsSnapshots    pulumi.BoolPtrInput
	Name                  pulumi.StringPtrInput
	OwnerId               pulumi.StringPtrInput
	Platform              pulumi.StringPtrInput
	PlatformDetails       pulumi.StringPtrInput
	Public                pulumi.BoolPtrInput
	RamdiskId             pulumi.StringPtrInput
	RootDeviceName        pulumi.StringPtrInput
	RootSnapshotId        pulumi.StringPtrInput
	SnapshotWithoutReboot pulumi.BoolPtrInput
	SourceInstanceId      pulumi.StringPtrInput
	SriovNetSupport       pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	TagsAll               pulumi.StringMapInput
	TpmSupport            pulumi.StringPtrInput
	UsageOperation        pulumi.StringPtrInput
	VirtualizationType    pulumi.StringPtrInput
}

func (AmiFromInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*amiFromInstanceState)(nil)).Elem()
}

type amiFromInstanceArgs struct {
	DeprecationTime       *string                               `pulumi:"deprecationTime"`
	Description           *string                               `pulumi:"description"`
	EbsBlockDevices       []AmiFromInstanceEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EphemeralBlockDevices []AmiFromInstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	Name                  *string                               `pulumi:"name"`
	SnapshotWithoutReboot *bool                                 `pulumi:"snapshotWithoutReboot"`
	SourceInstanceId      string                                `pulumi:"sourceInstanceId"`
	Tags                  map[string]string                     `pulumi:"tags"`
}

// The set of arguments for constructing a AmiFromInstance resource.
type AmiFromInstanceArgs struct {
	DeprecationTime       pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	EbsBlockDevices       AmiFromInstanceEbsBlockDeviceArrayInput
	EphemeralBlockDevices AmiFromInstanceEphemeralBlockDeviceArrayInput
	Name                  pulumi.StringPtrInput
	SnapshotWithoutReboot pulumi.BoolPtrInput
	SourceInstanceId      pulumi.StringInput
	Tags                  pulumi.StringMapInput
}

func (AmiFromInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*amiFromInstanceArgs)(nil)).Elem()
}

type AmiFromInstanceInput interface {
	pulumi.Input

	ToAmiFromInstanceOutput() AmiFromInstanceOutput
	ToAmiFromInstanceOutputWithContext(ctx context.Context) AmiFromInstanceOutput
}

func (*AmiFromInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**AmiFromInstance)(nil)).Elem()
}

func (i *AmiFromInstance) ToAmiFromInstanceOutput() AmiFromInstanceOutput {
	return i.ToAmiFromInstanceOutputWithContext(context.Background())
}

func (i *AmiFromInstance) ToAmiFromInstanceOutputWithContext(ctx context.Context) AmiFromInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceOutput)
}

// AmiFromInstanceArrayInput is an input type that accepts AmiFromInstanceArray and AmiFromInstanceArrayOutput values.
// You can construct a concrete instance of `AmiFromInstanceArrayInput` via:
//
//	AmiFromInstanceArray{ AmiFromInstanceArgs{...} }
type AmiFromInstanceArrayInput interface {
	pulumi.Input

	ToAmiFromInstanceArrayOutput() AmiFromInstanceArrayOutput
	ToAmiFromInstanceArrayOutputWithContext(context.Context) AmiFromInstanceArrayOutput
}

type AmiFromInstanceArray []AmiFromInstanceInput

func (AmiFromInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AmiFromInstance)(nil)).Elem()
}

func (i AmiFromInstanceArray) ToAmiFromInstanceArrayOutput() AmiFromInstanceArrayOutput {
	return i.ToAmiFromInstanceArrayOutputWithContext(context.Background())
}

func (i AmiFromInstanceArray) ToAmiFromInstanceArrayOutputWithContext(ctx context.Context) AmiFromInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceArrayOutput)
}

// AmiFromInstanceMapInput is an input type that accepts AmiFromInstanceMap and AmiFromInstanceMapOutput values.
// You can construct a concrete instance of `AmiFromInstanceMapInput` via:
//
//	AmiFromInstanceMap{ "key": AmiFromInstanceArgs{...} }
type AmiFromInstanceMapInput interface {
	pulumi.Input

	ToAmiFromInstanceMapOutput() AmiFromInstanceMapOutput
	ToAmiFromInstanceMapOutputWithContext(context.Context) AmiFromInstanceMapOutput
}

type AmiFromInstanceMap map[string]AmiFromInstanceInput

func (AmiFromInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AmiFromInstance)(nil)).Elem()
}

func (i AmiFromInstanceMap) ToAmiFromInstanceMapOutput() AmiFromInstanceMapOutput {
	return i.ToAmiFromInstanceMapOutputWithContext(context.Background())
}

func (i AmiFromInstanceMap) ToAmiFromInstanceMapOutputWithContext(ctx context.Context) AmiFromInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceMapOutput)
}

type AmiFromInstanceOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AmiFromInstance)(nil)).Elem()
}

func (o AmiFromInstanceOutput) ToAmiFromInstanceOutput() AmiFromInstanceOutput {
	return o
}

func (o AmiFromInstanceOutput) ToAmiFromInstanceOutputWithContext(ctx context.Context) AmiFromInstanceOutput {
	return o
}

func (o AmiFromInstanceOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.Architecture }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) BootMode() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.BootMode }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) DeprecationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringPtrOutput { return v.DeprecationTime }).(pulumi.StringPtrOutput)
}

func (o AmiFromInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AmiFromInstanceOutput) EbsBlockDevices() AmiFromInstanceEbsBlockDeviceArrayOutput {
	return o.ApplyT(func(v *AmiFromInstance) AmiFromInstanceEbsBlockDeviceArrayOutput { return v.EbsBlockDevices }).(AmiFromInstanceEbsBlockDeviceArrayOutput)
}

func (o AmiFromInstanceOutput) EnaSupport() pulumi.BoolOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.BoolOutput { return v.EnaSupport }).(pulumi.BoolOutput)
}

func (o AmiFromInstanceOutput) EphemeralBlockDevices() AmiFromInstanceEphemeralBlockDeviceArrayOutput {
	return o.ApplyT(func(v *AmiFromInstance) AmiFromInstanceEphemeralBlockDeviceArrayOutput {
		return v.EphemeralBlockDevices
	}).(AmiFromInstanceEphemeralBlockDeviceArrayOutput)
}

func (o AmiFromInstanceOutput) Hypervisor() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.Hypervisor }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) ImageLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.ImageLocation }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) ImageOwnerAlias() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.ImageOwnerAlias }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.ImageType }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) ImdsSupport() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.ImdsSupport }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) KernelId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.KernelId }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) ManageEbsSnapshots() pulumi.BoolOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.BoolOutput { return v.ManageEbsSnapshots }).(pulumi.BoolOutput)
}

func (o AmiFromInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.Platform }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) PlatformDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.PlatformDetails }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.BoolOutput { return v.Public }).(pulumi.BoolOutput)
}

func (o AmiFromInstanceOutput) RamdiskId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.RamdiskId }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) RootDeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.RootDeviceName }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) RootSnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.RootSnapshotId }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) SnapshotWithoutReboot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.BoolPtrOutput { return v.SnapshotWithoutReboot }).(pulumi.BoolPtrOutput)
}

func (o AmiFromInstanceOutput) SourceInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.SourceInstanceId }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) SriovNetSupport() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.SriovNetSupport }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o AmiFromInstanceOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o AmiFromInstanceOutput) TpmSupport() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.TpmSupport }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) UsageOperation() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.UsageOperation }).(pulumi.StringOutput)
}

func (o AmiFromInstanceOutput) VirtualizationType() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiFromInstance) pulumi.StringOutput { return v.VirtualizationType }).(pulumi.StringOutput)
}

type AmiFromInstanceArrayOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AmiFromInstance)(nil)).Elem()
}

func (o AmiFromInstanceArrayOutput) ToAmiFromInstanceArrayOutput() AmiFromInstanceArrayOutput {
	return o
}

func (o AmiFromInstanceArrayOutput) ToAmiFromInstanceArrayOutputWithContext(ctx context.Context) AmiFromInstanceArrayOutput {
	return o
}

func (o AmiFromInstanceArrayOutput) Index(i pulumi.IntInput) AmiFromInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AmiFromInstance {
		return vs[0].([]*AmiFromInstance)[vs[1].(int)]
	}).(AmiFromInstanceOutput)
}

type AmiFromInstanceMapOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AmiFromInstance)(nil)).Elem()
}

func (o AmiFromInstanceMapOutput) ToAmiFromInstanceMapOutput() AmiFromInstanceMapOutput {
	return o
}

func (o AmiFromInstanceMapOutput) ToAmiFromInstanceMapOutputWithContext(ctx context.Context) AmiFromInstanceMapOutput {
	return o
}

func (o AmiFromInstanceMapOutput) MapIndex(k pulumi.StringInput) AmiFromInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AmiFromInstance {
		return vs[0].(map[string]*AmiFromInstance)[vs[1].(string)]
	}).(AmiFromInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AmiFromInstanceInput)(nil)).Elem(), &AmiFromInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*AmiFromInstanceArrayInput)(nil)).Elem(), AmiFromInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AmiFromInstanceMapInput)(nil)).Elem(), AmiFromInstanceMap{})
	pulumi.RegisterOutputType(AmiFromInstanceOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceArrayOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceMapOutput{})
}
