// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a VPC Internet Gateway.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ec2.NewInternetGateway(ctx, "gw", &ec2.InternetGatewayArgs{
//				VpcId: pulumi.Any(aws_vpc.Main.Id),
//				Tags: pulumi.StringMap{
//					"Name": pulumi.String("main"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Internet Gateways can be imported using the `id`, e.g.,
//
// ```sh
//
//	$ pulumi import aws:ec2/internetGateway:InternetGateway gw igw-c0a643a9
//
// ```
type InternetGateway struct {
	pulumi.CustomResourceState

	// The ARN of the Internet Gateway.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The ID of the AWS account that owns the internet gateway.
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// The VPC ID to create in.  See the ec2.InternetGatewayAttachment resource for an alternate way to attach an Internet Gateway to a VPC.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewInternetGateway registers a new resource with the given unique name, arguments, and options.
func NewInternetGateway(ctx *pulumi.Context,
	name string, args *InternetGatewayArgs, opts ...pulumi.ResourceOption) (*InternetGateway, error) {
	if args == nil {
		args = &InternetGatewayArgs{}
	}

	var resource InternetGateway
	err := ctx.RegisterResource("aws:ec2/internetGateway:InternetGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInternetGateway gets an existing InternetGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInternetGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InternetGatewayState, opts ...pulumi.ResourceOption) (*InternetGateway, error) {
	var resource InternetGateway
	err := ctx.ReadResource("aws:ec2/internetGateway:InternetGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InternetGateway resources.
type internetGatewayState struct {
	// The ARN of the Internet Gateway.
	Arn *string `pulumi:"arn"`
	// The ID of the AWS account that owns the internet gateway.
	OwnerId *string `pulumi:"ownerId"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The VPC ID to create in.  See the ec2.InternetGatewayAttachment resource for an alternate way to attach an Internet Gateway to a VPC.
	VpcId *string `pulumi:"vpcId"`
}

type InternetGatewayState struct {
	// The ARN of the Internet Gateway.
	Arn pulumi.StringPtrInput
	// The ID of the AWS account that owns the internet gateway.
	OwnerId pulumi.StringPtrInput
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapInput
	// The VPC ID to create in.  See the ec2.InternetGatewayAttachment resource for an alternate way to attach an Internet Gateway to a VPC.
	VpcId pulumi.StringPtrInput
}

func (InternetGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*internetGatewayState)(nil)).Elem()
}

type internetGatewayArgs struct {
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The VPC ID to create in.  See the ec2.InternetGatewayAttachment resource for an alternate way to attach an Internet Gateway to a VPC.
	VpcId *string `pulumi:"vpcId"`
}

// The set of arguments for constructing a InternetGateway resource.
type InternetGatewayArgs struct {
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// The VPC ID to create in.  See the ec2.InternetGatewayAttachment resource for an alternate way to attach an Internet Gateway to a VPC.
	VpcId pulumi.StringPtrInput
}

func (InternetGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*internetGatewayArgs)(nil)).Elem()
}

type InternetGatewayInput interface {
	pulumi.Input

	ToInternetGatewayOutput() InternetGatewayOutput
	ToInternetGatewayOutputWithContext(ctx context.Context) InternetGatewayOutput
}

func (*InternetGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetGateway)(nil)).Elem()
}

func (i *InternetGateway) ToInternetGatewayOutput() InternetGatewayOutput {
	return i.ToInternetGatewayOutputWithContext(context.Background())
}

func (i *InternetGateway) ToInternetGatewayOutputWithContext(ctx context.Context) InternetGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetGatewayOutput)
}

// InternetGatewayArrayInput is an input type that accepts InternetGatewayArray and InternetGatewayArrayOutput values.
// You can construct a concrete instance of `InternetGatewayArrayInput` via:
//
//	InternetGatewayArray{ InternetGatewayArgs{...} }
type InternetGatewayArrayInput interface {
	pulumi.Input

	ToInternetGatewayArrayOutput() InternetGatewayArrayOutput
	ToInternetGatewayArrayOutputWithContext(context.Context) InternetGatewayArrayOutput
}

type InternetGatewayArray []InternetGatewayInput

func (InternetGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InternetGateway)(nil)).Elem()
}

func (i InternetGatewayArray) ToInternetGatewayArrayOutput() InternetGatewayArrayOutput {
	return i.ToInternetGatewayArrayOutputWithContext(context.Background())
}

func (i InternetGatewayArray) ToInternetGatewayArrayOutputWithContext(ctx context.Context) InternetGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetGatewayArrayOutput)
}

// InternetGatewayMapInput is an input type that accepts InternetGatewayMap and InternetGatewayMapOutput values.
// You can construct a concrete instance of `InternetGatewayMapInput` via:
//
//	InternetGatewayMap{ "key": InternetGatewayArgs{...} }
type InternetGatewayMapInput interface {
	pulumi.Input

	ToInternetGatewayMapOutput() InternetGatewayMapOutput
	ToInternetGatewayMapOutputWithContext(context.Context) InternetGatewayMapOutput
}

type InternetGatewayMap map[string]InternetGatewayInput

func (InternetGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InternetGateway)(nil)).Elem()
}

func (i InternetGatewayMap) ToInternetGatewayMapOutput() InternetGatewayMapOutput {
	return i.ToInternetGatewayMapOutputWithContext(context.Background())
}

func (i InternetGatewayMap) ToInternetGatewayMapOutputWithContext(ctx context.Context) InternetGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetGatewayMapOutput)
}

type InternetGatewayOutput struct{ *pulumi.OutputState }

func (InternetGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetGateway)(nil)).Elem()
}

func (o InternetGatewayOutput) ToInternetGatewayOutput() InternetGatewayOutput {
	return o
}

func (o InternetGatewayOutput) ToInternetGatewayOutputWithContext(ctx context.Context) InternetGatewayOutput {
	return o
}

// The ARN of the Internet Gateway.
func (o InternetGatewayOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *InternetGateway) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The ID of the AWS account that owns the internet gateway.
func (o InternetGatewayOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *InternetGateway) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o InternetGatewayOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InternetGateway) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o InternetGatewayOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InternetGateway) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// The VPC ID to create in.  See the ec2.InternetGatewayAttachment resource for an alternate way to attach an Internet Gateway to a VPC.
func (o InternetGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *InternetGateway) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type InternetGatewayArrayOutput struct{ *pulumi.OutputState }

func (InternetGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InternetGateway)(nil)).Elem()
}

func (o InternetGatewayArrayOutput) ToInternetGatewayArrayOutput() InternetGatewayArrayOutput {
	return o
}

func (o InternetGatewayArrayOutput) ToInternetGatewayArrayOutputWithContext(ctx context.Context) InternetGatewayArrayOutput {
	return o
}

func (o InternetGatewayArrayOutput) Index(i pulumi.IntInput) InternetGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InternetGateway {
		return vs[0].([]*InternetGateway)[vs[1].(int)]
	}).(InternetGatewayOutput)
}

type InternetGatewayMapOutput struct{ *pulumi.OutputState }

func (InternetGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InternetGateway)(nil)).Elem()
}

func (o InternetGatewayMapOutput) ToInternetGatewayMapOutput() InternetGatewayMapOutput {
	return o
}

func (o InternetGatewayMapOutput) ToInternetGatewayMapOutputWithContext(ctx context.Context) InternetGatewayMapOutput {
	return o
}

func (o InternetGatewayMapOutput) MapIndex(k pulumi.StringInput) InternetGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InternetGateway {
		return vs[0].(map[string]*InternetGateway)[vs[1].(string)]
	}).(InternetGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InternetGatewayInput)(nil)).Elem(), &InternetGateway{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetGatewayArrayInput)(nil)).Elem(), InternetGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetGatewayMapInput)(nil)).Elem(), InternetGatewayMap{})
	pulumi.RegisterOutputType(InternetGatewayOutput{})
	pulumi.RegisterOutputType(InternetGatewayArrayOutput{})
	pulumi.RegisterOutputType(InternetGatewayMapOutput{})
}
